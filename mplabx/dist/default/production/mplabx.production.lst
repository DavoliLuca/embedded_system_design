

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Jun 11 23:23:29 2023

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=3
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    82                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    83                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    84                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    85                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    86                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    87  0000                     
    88                           ; Version 2.20
    89                           ; Generated 12/02/2020 GMT
    90                           ; 
    91                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    92                           ; All rights reserved.
    93                           ; 
    94                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    95                           ; 
    96                           ; Redistribution and use in source and binary forms, with or without modification, are
    97                           ; permitted provided that the following conditions are met:
    98                           ; 
    99                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   100                           ;        conditions and the following disclaimer.
   101                           ; 
   102                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   103                           ;        of conditions and the following disclaimer in the documentation and/or other
   104                           ;        materials provided with the distribution.
   105                           ; 
   106                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   107                           ;        software without specific prior written permission.
   108                           ; 
   109                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   110                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   111                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   112                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   113                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   114                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   115                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   116                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   117                           ; 
   118                           ; 
   119                           ; Code-generator required, PIC18F452 Definitions
   120                           ; 
   121                           ; SFR Addresses
   122  0000                     
   123                           	psect	idataBANK0
   124  0065ED                     __pidataBANK0:
   125                           	callstack 0
   126                           
   127                           ;initializer for stoa@F1152
   128  0065ED  28                 	db	40
   129  0065EE  6E                 	db	110
   130  0065EF  75                 	db	117
   131  0065F0  6C                 	db	108
   132  0065F1  6C                 	db	108
   133  0065F2  29                 	db	41
   134  0065F3  00                 	db	0
   135                           
   136                           ;initializer for _pwm_period
   137                           ;timer.c: 5: static double const f_osc = 1000000;;timer.c: 6: static double const t_osc 
      +                          = 1/f_osc;;timer.c: 7: static double pwm_period = 20e-3;
   138  0065F4  D70A               	dw	55050
   139  0065F6  3CA3               	dw	15523
   140                           
   141                           ;initializer for _tosc
   142  0065F8  37BD               	dw	14269
   143  0065FA  3486               	dw	13446
   144                           
   145                           ;initializer for _tmr2_prescaler
   146  0065FC  0000               	dw	0
   147  0065FE  4180               	dw	16768
   148                           
   149                           	psect	idataBANK1
   150  006620                     __pidataBANK1:
   151                           	callstack 0
   152                           
   153                           ;initializer for _state_msgs
   154  006620  3B                 	db	low STR_1
   155  006621  7F                 	db	high STR_1
   156  006622  C9                 	db	low STR_2
   157  006623  7E                 	db	high STR_2
   158  006624  BB                 	db	low STR_3
   159  006625  7F                 	db	high STR_3
   160  006626  6C                 	db	low STR_4
   161  006627  7F                 	db	high STR_4
   162  006628  A9                 	db	low STR_5
   163  006629  7F                 	db	high STR_5
   164  00662A  C4                 	db	low STR_6
   165  00662B  7F                 	db	high STR_6
   166  00662C  B2                 	db	low STR_7
   167  00662D  7F                 	db	high STR_7
   168  00662E  09                 	db	low STR_8
   169  00662F  7F                 	db	high STR_8
   170                           
   171                           ;initializer for _hex_end_effector_values
   172  006630  0010               	dw	16
   173  006632  0020               	dw	32
   174  006634  0040               	dw	64
   175  006636  0080               	dw	128
   176                           
   177                           ;initializer for _hex_joint_values
   178  006638  0001               	dw	1
   179  00663A  0002               	dw	2
   180  00663C  0004               	dw	4
   181  00663E  0008               	dw	8
   182                           
   183                           	psect	mediumconst
   184  007EB4                     __pmediumconst:
   185                           	callstack 0
   186  007EB4  00                 	db	0
   187  007EB5  0000               	dw	0
   188  007EB7  4B00               	dw	19200
   189  007EB9                     __end_of_toint:
   190                           	callstack 0
   191  007EB9  0000               	dw	0
   192  007EBB  4616               	dw	17942
   193  007EBD                     __end_of_desired_baudrate:
   194                           	callstack 0
   195  007EBD  37BD               	dw	14269
   196  007EBF  3586               	dw	13702
   197  007EC1                     __end_of_t_osc:
   198                           	callstack 0
   199  007EC1  2400               	dw	9216
   200  007EC3  4974               	dw	18804
   201  007EC5                     __end_of_f_osc:
   202                           	callstack 0
   203  007EC5  2400               	dw	9216
   204  007EC7  4A74               	dw	19060
   205  007EC9                     __end_of_fosc:
   206                           	callstack 0
   207  0000                     _ADCON1	set	4033
   208  0000                     _ADRESL	set	4035
   209  0000                     _ADRESH	set	4036
   210  0000                     _ADCON0bits	set	4034
   211  0000                     _ADCON0	set	4034
   212  0000                     _CCPR1L	set	4030
   213  0000                     _CCP1CONbits	set	4029
   214  0000                     _CCP1CON	set	4029
   215  0000                     _PR2	set	4043
   216  0000                     _T2CONbits	set	4042
   217  0000                     _TMR2	set	4044
   218  0000                     _T2CON	set	4042
   219  0000                     _TMR0H	set	4055
   220  0000                     _TMR0L	set	4054
   221  0000                     _PORTEbits	set	3972
   222  0000                     _PORTD	set	3971
   223  0000                     _TRISCbits	set	3988
   224  0000                     _PORTC	set	3970
   225  0000                     _LATC	set	3979
   226  0000                     _TRISB	set	3987
   227  0000                     _PORTB	set	3969
   228  0000                     _LATB	set	3978
   229  0000                     _TRISA	set	3986
   230  0000                     _PORTA	set	3968
   231  0000                     _LATA	set	3977
   232  0000                     _T0CON	set	4053
   233  0000                     _PIR1bits	set	3998
   234  0000                     _PIE1bits	set	3997
   235  0000                     _T0CONbits	set	4053
   236  0000                     _LATAbits	set	3977
   237  0000                     _INTCONbits	set	4082
   238  0000                     _RCREG	set	4014
   239  0000                     _TXREG	set	4013
   240  0000                     _RCSTAbits	set	4011
   241  0000                     _TXSTAbits	set	4012
   242  0000                     _SPBRG	set	4015
   243  007EC9                     STR_2:
   244  007EC9  49                 	db	73	;'I'
   245  007ECA  4E                 	db	78	;'N'
   246  007ECB  49                 	db	73	;'I'
   247  007ECC  54                 	db	84	;'T'
   248  007ECD  5F                 	db	95	;'_'
   249  007ECE  50                 	db	80	;'P'
   250  007ECF  4F                 	db	79	;'O'
   251  007ED0  53                 	db	83	;'S'
   252  007ED1  3A                 	db	58	;':'
   253  007ED2  20                 	db	32
   254  007ED3  74                 	db	116	;'t'
   255  007ED4  68                 	db	104	;'h'
   256  007ED5  65                 	db	101	;'e'
   257  007ED6  20                 	db	32
   258  007ED7  76                 	db	118	;'v'
   259  007ED8  69                 	db	105	;'i'
   260  007ED9  61                 	db	97	;'a'
   261  007EDA  6C                 	db	108	;'l'
   262  007EDB  20                 	db	32
   263  007EDC  69                 	db	105	;'i'
   264  007EDD  73                 	db	115	;'s'
   265  007EDE  20                 	db	32
   266  007EDF  61                 	db	97	;'a'
   267  007EE0  74                 	db	116	;'t'
   268  007EE1  20                 	db	32
   269  007EE2  74                 	db	116	;'t'
   270  007EE3  68                 	db	104	;'h'
   271  007EE4  65                 	db	101	;'e'
   272  007EE5  20                 	db	32
   273  007EE6  69                 	db	105	;'i'
   274  007EE7  6E                 	db	110	;'n'
   275  007EE8  69                 	db	105	;'i'
   276  007EE9  74                 	db	116	;'t'
   277  007EEA  20                 	db	32
   278  007EEB  70                 	db	112	;'p'
   279  007EEC  6F                 	db	111	;'o'
   280  007EED  73                 	db	115	;'s'
   281  007EEE  69                 	db	105	;'i'
   282  007EEF  74                 	db	116	;'t'
   283  007EF0  69                 	db	105	;'i'
   284  007EF1  6F                 	db	111	;'o'
   285  007EF2  6E                 	db	110	;'n'
   286  007EF3  2C                 	db	44
   287  007EF4  20                 	db	32
   288  007EF5  70                 	db	112	;'p'
   289  007EF6  72                 	db	114	;'r'
   290  007EF7  6F                 	db	111	;'o'
   291  007EF8  63                 	db	99	;'c'
   292  007EF9  65                 	db	101	;'e'
   293  007EFA  73                 	db	115	;'s'
   294  007EFB  73                 	db	115	;'s'
   295  007EFC  20                 	db	32
   296  007EFD  69                 	db	105	;'i'
   297  007EFE  73                 	db	115	;'s'
   298  007EFF  20                 	db	32
   299  007F00  73                 	db	115	;'s'
   300  007F01  74                 	db	116	;'t'
   301  007F02  61                 	db	97	;'a'
   302  007F03  72                 	db	114	;'r'
   303  007F04  74                 	db	116	;'t'
   304  007F05  69                 	db	105	;'i'
   305  007F06  6E                 	db	110	;'n'
   306  007F07  67                 	db	103	;'g'
   307  007F08  00                 	db	0
   308  007F09                     STR_8:
   309  007F09  50                 	db	80	;'P'
   310  007F0A  49                 	db	73	;'I'
   311  007F0B  43                 	db	67	;'C'
   312  007F0C  4B                 	db	75	;'K'
   313  007F0D  5F                 	db	95	;'_'
   314  007F0E  55                 	db	85	;'U'
   315  007F0F  50                 	db	80	;'P'
   316  007F10  3A                 	db	58	;':'
   317  007F11  20                 	db	32
   318  007F12  74                 	db	116	;'t'
   319  007F13  68                 	db	104	;'h'
   320  007F14  65                 	db	101	;'e'
   321  007F15  20                 	db	32
   322  007F16  76                 	db	118	;'v'
   323  007F17  69                 	db	105	;'i'
   324  007F18  61                 	db	97	;'a'
   325  007F19  6C                 	db	108	;'l'
   326  007F1A  20                 	db	32
   327  007F1B  68                 	db	104	;'h'
   328  007F1C  61                 	db	97	;'a'
   329  007F1D  73                 	db	115	;'s'
   330  007F1E  20                 	db	32
   331  007F1F  72                 	db	114	;'r'
   332  007F20  65                 	db	101	;'e'
   333  007F21  61                 	db	97	;'a'
   334  007F22  63                 	db	99	;'c'
   335  007F23  68                 	db	104	;'h'
   336  007F24  65                 	db	101	;'e'
   337  007F25  64                 	db	100	;'d'
   338  007F26  20                 	db	32
   339  007F27  74                 	db	116	;'t'
   340  007F28  68                 	db	104	;'h'
   341  007F29  65                 	db	101	;'e'
   342  007F2A  20                 	db	32
   343  007F2B  70                 	db	112	;'p'
   344  007F2C  69                 	db	105	;'i'
   345  007F2D  63                 	db	99	;'c'
   346  007F2E  6B                 	db	107	;'k'
   347  007F2F  20                 	db	32
   348  007F30  75                 	db	117	;'u'
   349  007F31  70                 	db	112	;'p'
   350  007F32  20                 	db	32
   351  007F33  73                 	db	115	;'s'
   352  007F34  74                 	db	116	;'t'
   353  007F35  61                 	db	97	;'a'
   354  007F36  74                 	db	116	;'t'
   355  007F37  69                 	db	105	;'i'
   356  007F38  6F                 	db	111	;'o'
   357  007F39  6E                 	db	110	;'n'
   358  007F3A  00                 	db	0
   359  007F3B                     STR_1:
   360  007F3B  49                 	db	73	;'I'
   361  007F3C  44                 	db	68	;'D'
   362  007F3D  4C                 	db	76	;'L'
   363  007F3E  45                 	db	69	;'E'
   364  007F3F  3A                 	db	58	;':'
   365  007F40  20                 	db	32
   366  007F41  77                 	db	119	;'w'
   367  007F42  61                 	db	97	;'a'
   368  007F43  69                 	db	105	;'i'
   369  007F44  74                 	db	116	;'t'
   370  007F45  69                 	db	105	;'i'
   371  007F46  6E                 	db	110	;'n'
   372  007F47  67                 	db	103	;'g'
   373  007F48  20                 	db	32
   374  007F49  66                 	db	102	;'f'
   375  007F4A  6F                 	db	111	;'o'
   376  007F4B  72                 	db	114	;'r'
   377  007F4C  20                 	db	32
   378  007F4D  20                 	db	32
   379  007F4E  76                 	db	118	;'v'
   380  007F4F  69                 	db	105	;'i'
   381  007F50  61                 	db	97	;'a'
   382  007F51  6C                 	db	108	;'l'
   383  007F52  20                 	db	32
   384  007F53  74                 	db	116	;'t'
   385  007F54  6F                 	db	111	;'o'
   386  007F55  20                 	db	32
   387  007F56  62                 	db	98	;'b'
   388  007F57  65                 	db	101	;'e'
   389  007F58  20                 	db	32
   390  007F59  70                 	db	112	;'p'
   391  007F5A  6C                 	db	108	;'l'
   392  007F5B  61                 	db	97	;'a'
   393  007F5C  63                 	db	99	;'c'
   394  007F5D  65                 	db	101	;'e'
   395  007F5E  64                 	db	100	;'d'
   396  007F5F  20                 	db	32
   397  007F60  69                 	db	105	;'i'
   398  007F61  6E                 	db	110	;'n'
   399  007F62  20                 	db	32
   400  007F63  69                 	db	105	;'i'
   401  007F64  6E                 	db	110	;'n'
   402  007F65  69                 	db	105	;'i'
   403  007F66  74                 	db	116	;'t'
   404  007F67  20                 	db	32
   405  007F68  70                 	db	112	;'p'
   406  007F69  6F                 	db	111	;'o'
   407  007F6A  73                 	db	115	;'s'
   408  007F6B  00                 	db	0
   409  007F6C                     STR_4:
   410  007F6C  4F                 	db	79	;'O'
   411  007F6D  56                 	db	86	;'V'
   412  007F6E  45                 	db	69	;'E'
   413  007F6F  4E                 	db	78	;'N'
   414  007F70  3A                 	db	58	;':'
   415  007F71  20                 	db	32
   416  007F72  72                 	db	114	;'r'
   417  007F73  65                 	db	101	;'e'
   418  007F74  61                 	db	97	;'a'
   419  007F75  63                 	db	99	;'c'
   420  007F76  68                 	db	104	;'h'
   421  007F77  69                 	db	105	;'i'
   422  007F78  6E                 	db	110	;'n'
   423  007F79  67                 	db	103	;'g'
   424  007F7A  20                 	db	32
   425  007F7B  74                 	db	116	;'t'
   426  007F7C  68                 	db	104	;'h'
   427  007F7D  65                 	db	101	;'e'
   428  007F7E  20                 	db	32
   429  007F7F  63                 	db	99	;'c'
   430  007F80  6F                 	db	111	;'o'
   431  007F81  72                 	db	114	;'r'
   432  007F82  72                 	db	114	;'r'
   433  007F83  65                 	db	101	;'e'
   434  007F84  63                 	db	99	;'c'
   435  007F85  74                 	db	116	;'t'
   436  007F86  20                 	db	32
   437  007F87  74                 	db	116	;'t'
   438  007F88  65                 	db	101	;'e'
   439  007F89  6D                 	db	109	;'m'
   440  007F8A  70                 	db	112	;'p'
   441  007F8B  65                 	db	101	;'e'
   442  007F8C  72                 	db	114	;'r'
   443  007F8D  61                 	db	97	;'a'
   444  007F8E  74                 	db	116	;'t'
   445  007F8F  75                 	db	117	;'u'
   446  007F90  72                 	db	114	;'r'
   447  007F91  65                 	db	101	;'e'
   448  007F92  00                 	db	0
   449  007F93                     STR_9:
   450  007F93  44                 	db	68	;'D'
   451  007F94  65                 	db	101	;'e'
   452  007F95  76                 	db	118	;'v'
   453  007F96  69                 	db	105	;'i'
   454  007F97  63                 	db	99	;'c'
   455  007F98  65                 	db	101	;'e'
   456  007F99  20                 	db	32
   457  007F9A  68                 	db	104	;'h'
   458  007F9B  61                 	db	97	;'a'
   459  007F9C  73                 	db	115	;'s'
   460  007F9D  20                 	db	32
   461  007F9E  62                 	db	98	;'b'
   462  007F9F  65                 	db	101	;'e'
   463  007FA0  65                 	db	101	;'e'
   464  007FA1  6E                 	db	110	;'n'
   465  007FA2  20                 	db	32
   466  007FA3  72                 	db	114	;'r'
   467  007FA4  65                 	db	101	;'e'
   468  007FA5  73                 	db	115	;'s'
   469  007FA6  65                 	db	101	;'e'
   470  007FA7  74                 	db	116	;'t'
   471  007FA8  00                 	db	0
   472  007FA9                     STR_5:
   473  007FA9  47                 	db	71	;'G'
   474  007FAA  52                 	db	82	;'R'
   475  007FAB  41                 	db	65	;'A'
   476  007FAC  53                 	db	83	;'S'
   477  007FAD  50                 	db	80	;'P'
   478  007FAE  49                 	db	73	;'I'
   479  007FAF  4E                 	db	78	;'N'
   480  007FB0  47                 	db	71	;'G'
   481  007FB1  00                 	db	0
   482  007FB2                     STR_7:
   483  007FB2  44                 	db	68	;'D'
   484  007FB3  49                 	db	73	;'I'
   485  007FB4  4C                 	db	76	;'L'
   486  007FB5  55                 	db	85	;'U'
   487  007FB6  54                 	db	84	;'T'
   488  007FB7  49                 	db	73	;'I'
   489  007FB8  4E                 	db	78	;'N'
   490  007FB9  47                 	db	71	;'G'
   491  007FBA  00                 	db	0
   492  007FBB                     STR_3:
   493  007FBB  4D                 	db	77	;'M'
   494  007FBC  4F                 	db	79	;'O'
   495  007FBD  56                 	db	86	;'V'
   496  007FBE  45                 	db	69	;'E'
   497  007FBF  4D                 	db	77	;'M'
   498  007FC0  45                 	db	69	;'E'
   499  007FC1  4E                 	db	78	;'N'
   500  007FC2  54                 	db	84	;'T'
   501  007FC3  00                 	db	0
   502  007FC4                     STR_6:
   503  007FC4  4D                 	db	77	;'M'
   504  007FC5  49                 	db	73	;'I'
   505  007FC6  58                 	db	88	;'X'
   506  007FC7  49                 	db	73	;'I'
   507  007FC8  4E                 	db	78	;'N'
   508  007FC9  47                 	db	71	;'G'
   509  007FCA  00                 	db	0
   510  007FCB                     STR_87:
   511  007FCB  68                 	db	104	;'h'
   512  007FCC  68                 	db	104	;'h'
   513  007FCD  58                 	db	88	;'X'
   514  007FCE  00                 	db	0
   515  007FCF                     STR_11:
   516  007FCF  68                 	db	104	;'h'
   517  007FD0  68                 	db	104	;'h'
   518  007FD1  64                 	db	100	;'d'
   519  007FD2  00                 	db	0
   520  007FD3                     STR_15:
   521  007FD3  68                 	db	104	;'h'
   522  007FD4  68                 	db	104	;'h'
   523  007FD5  69                 	db	105	;'i'
   524  007FD6  00                 	db	0
   525  007FD7                     STR_53:
   526  007FD7  68                 	db	104	;'h'
   527  007FD8  68                 	db	104	;'h'
   528  007FD9  6E                 	db	110	;'n'
   529  007FDA  00                 	db	0
   530  007FDB                     STR_38:
   531  007FDB  68                 	db	104	;'h'
   532  007FDC  68                 	db	104	;'h'
   533  007FDD  6F                 	db	111	;'o'
   534  007FDE  00                 	db	0
   535  007FDF                     STR_68:
   536  007FDF  68                 	db	104	;'h'
   537  007FE0  68                 	db	104	;'h'
   538  007FE1  75                 	db	117	;'u'
   539  007FE2  00                 	db	0
   540  007FE3                     STR_83:
   541  007FE3  68                 	db	104	;'h'
   542  007FE4  68                 	db	104	;'h'
   543  007FE5  78                 	db	120	;'x'
   544  007FE6  00                 	db	0
   545  007FE7                     STR_105:
   546  007FE7  7A                 	db	122	;'z'
   547  007FE8  58                 	db	88	;'X'
   548  007FE9  00                 	db	0
   549  007FEA                     STR_29:
   550  007FEA  7A                 	db	122	;'z'
   551  007FEB  64                 	db	100	;'d'
   552  007FEC  00                 	db	0
   553  007FED                     STR_33:
   554  007FED  7A                 	db	122	;'z'
   555  007FEE  69                 	db	105	;'i'
   556  007FEF  00                 	db	0
   557  007FF0                     STR_63:
   558  007FF0  7A                 	db	122	;'z'
   559  007FF1  6E                 	db	110	;'n'
   560  007FF2  00                 	db	0
   561  007FF3                     STR_48:
   562  007FF3  7A                 	db	122	;'z'
   563  007FF4  6F                 	db	111	;'o'
   564  007FF5  00                 	db	0
   565  007FF6                     STR_78:
   566  007FF6  7A                 	db	122	;'z'
   567  007FF7  75                 	db	117	;'u'
   568  007FF8  00                 	db	0
   569  007FF9                     STR_101:
   570  007FF9  7A                 	db	122	;'z'
   571  007FFA  78                 	db	120	;'x'
   572  007FFB  00                 	db	0
   573  007FFC                     STR_10:
   574  007FFC  25                 	db	37
   575  007FFD  73                 	db	115	;'s'
   576  007FFE  00                 	db	0
   577  007FFF  00                 	db	0	; dummy byte at the end
   578  0000                     
   579                           ; #config settings
   580                           
   581                           	psect	cinit
   582  006C1E                     __pcinit:
   583                           	callstack 0
   584  006C1E                     start_initialization:
   585                           	callstack 0
   586  006C1E                     __initialization:
   587                           	callstack 0
   588                           
   589                           ; Initialize objects allocated to BANK1 (32 bytes)
   590                           ; load TBLPTR registers with __pidataBANK1
   591  006C1E  0E20               	movlw	low __pidataBANK1
   592  006C20  6EF6               	movwf	tblptrl,c
   593  006C22  0E66               	movlw	high __pidataBANK1
   594  006C24  6EF7               	movwf	tblptrh,c
   595  006C26  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   596  006C28  6EF8               	movwf	tblptru,c
   597  006C2A  EE01  F0CF         	lfsr	0,__pdataBANK1
   598  006C2E  EE10 F020          	lfsr	1,32
   599  006C32                     copy_data0:
   600  006C32  0009               	tblrd		*+
   601  006C34  CFF5 FFEE          	movff	tablat,postinc0
   602  006C38  50E5               	movf	postdec1,w,c
   603  006C3A  50E1               	movf	fsr1l,w,c
   604  006C3C  E1FA               	bnz	copy_data0
   605                           
   606                           ; Initialize objects allocated to BANK0 (19 bytes)
   607                           ; load TBLPTR registers with __pidataBANK0
   608  006C3E  0EED               	movlw	low __pidataBANK0
   609  006C40  6EF6               	movwf	tblptrl,c
   610  006C42  0E65               	movlw	high __pidataBANK0
   611  006C44  6EF7               	movwf	tblptrh,c
   612  006C46  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   613  006C48  6EF8               	movwf	tblptru,c
   614  006C4A  EE00  F0DE         	lfsr	0,__pdataBANK0
   615  006C4E  EE10 F013          	lfsr	1,19
   616  006C52                     copy_data1:
   617  006C52  0009               	tblrd		*+
   618  006C54  CFF5 FFEE          	movff	tablat,postinc0
   619  006C58  50E5               	movf	postdec1,w,c
   620  006C5A  50E1               	movf	fsr1l,w,c
   621  006C5C  E1FA               	bnz	copy_data1
   622                           
   623                           ; Clear objects allocated to BANK1 (44 bytes)
   624  006C5E  EE01  F0A3         	lfsr	0,__pbssBANK1
   625  006C62  0E2C               	movlw	44
   626  006C64                     clear_0:
   627  006C64  6AEE               	clrf	postinc0,c
   628  006C66  06E8               	decf	wreg,f,c
   629  006C68  E1FD               	bnz	clear_0
   630                           
   631                           ; Clear objects allocated to BANK0 (56 bytes)
   632  006C6A  EE00  F080         	lfsr	0,__pbssBANK0
   633  006C6E  0E38               	movlw	56
   634  006C70                     clear_1:
   635  006C70  6AEE               	clrf	postinc0,c
   636  006C72  06E8               	decf	wreg,f,c
   637  006C74  E1FD               	bnz	clear_1
   638  006C76                     end_of_initialization:
   639                           	callstack 0
   640  006C76                     __end_of__initialization:
   641                           	callstack 0
   642  006C76  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   643  006C78  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   644  006C7A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   645  006C7C  6EF8               	movwf	tblptru,c
   646  006C7E  0100               	movlb	0
   647  006C80  EF31  F00A         	goto	_main	;jump to C main() function
   648                           
   649                           	psect	bssBANK0
   650  000080                     __pbssBANK0:
   651                           	callstack 0
   652  000080                     roundf@F525:
   653                           	callstack 0
   654  000080                     	ds	4
   655  000084                     _nout:
   656                           	callstack 0
   657  000084                     	ds	2
   658  000086                     _width:
   659                           	callstack 0
   660  000086                     	ds	2
   661  000088                     _prec:
   662                           	callstack 0
   663  000088                     	ds	2
   664  00008A                     _flags:
   665                           	callstack 0
   666  00008A                     	ds	2
   667  00008C                     _errno:
   668                           	callstack 0
   669  00008C                     	ds	2
   670  00008E                     _temperature_scaled:
   671                           	callstack 0
   672  00008E                     	ds	2
   673  000090                     _temperature_int:
   674                           	callstack 0
   675  000090                     	ds	2
   676  000092                     _mix_step_counter:
   677                           	callstack 0
   678  000092                     	ds	2
   679  000094                     _mix_direction:
   680                           	callstack 0
   681  000094                     	ds	2
   682  000096                     _mix_current_step:
   683                           	callstack 0
   684  000096                     	ds	2
   685  000098                     _dbuf:
   686                           	callstack 0
   687  000098                     	ds	32
   688                           
   689                           	psect	dataBANK0
   690  0000DE                     __pdataBANK0:
   691                           	callstack 0
   692  0000DE                     stoa@F1152:
   693                           	callstack 0
   694  0000DE                     	ds	7
   695  0000E5                     	ds	4
   696  0000E9                     	ds	4
   697  0000ED                     _tmr2_prescaler:
   698                           	callstack 0
   699  0000ED                     	ds	4
   700                           
   701                           	psect	bssBANK1
   702  0001A3                     __pbssBANK1:
   703                           	callstack 0
   704  0001A3                     _move_to_trash:
   705                           	callstack 0
   706  0001A3                     	ds	2
   707  0001A5                     _trash_counter:
   708                           	callstack 0
   709  0001A5                     	ds	2
   710  0001A7                     _end_effector_homed:
   711                           	callstack 0
   712  0001A7                     	ds	2
   713  0001A9                     _joint_homed:
   714                           	callstack 0
   715  0001A9                     	ds	2
   716  0001AB                     _mix_counter:
   717                           	callstack 0
   718  0001AB                     	ds	2
   719  0001AD                     _timer_done:
   720                           	callstack 0
   721  0001AD                     	ds	1
   722  0001AE                     _read_new_char:
   723                           	callstack 0
   724  0001AE                     	ds	1
   725  0001AF                     _idle_msg_sent:
   726                           	callstack 0
   727  0001AF                     	ds	1
   728  0001B0                     _state_changed:
   729                           	callstack 0
   730  0001B0                     	ds	1
   731  0001B1                     _end_effector_stepper:
   732                           	callstack 0
   733  0001B1                     	ds	14
   734  0001BF                     _joint_stepper:
   735                           	callstack 0
   736  0001BF                     	ds	14
   737  0001CD                     _state:
   738                           	callstack 0
   739  0001CD                     	ds	2
   740                           
   741                           	psect	dataBANK1
   742  0001CF                     __pdataBANK1:
   743                           	callstack 0
   744  0001CF                     _state_msgs:
   745                           	callstack 0
   746  0001CF                     	ds	16
   747  0001DF                     _hex_end_effector_values:
   748                           	callstack 0
   749  0001DF                     	ds	8
   750  0001E7                     _hex_joint_values:
   751                           	callstack 0
   752  0001E7                     	ds	8
   753                           
   754                           	psect	cstackBANK1
   755  000100                     __pcstackBANK1:
   756                           	callstack 0
   757  000100                     main@greet_str:
   758                           	callstack 0
   759                           
   760                           ; 160 bytes @ 0x0
   761  000100                     	ds	160
   762  0001A0                     main@current_temp:
   763                           	callstack 0
   764                           
   765                           ; 2 bytes @ 0xA0
   766  0001A0                     	ds	2
   767  0001A2                     main@rx_char:
   768                           	callstack 0
   769                           
   770                           ; 1 bytes @ 0xA2
   771  0001A2                     	ds	1
   772                           
   773                           	psect	cstackBANK0
   774  0000B8                     __pcstackBANK0:
   775                           	callstack 0
   776  0000B8                     _vsnprintf$1549:
   777                           	callstack 0
   778  0000B8                     _roundf$2132:
   779                           	callstack 0
   780                           
   781                           ; 4 bytes @ 0x0
   782  0000B8                     	ds	2
   783  0000BA                     vsnprintf@cnt:
   784                           	callstack 0
   785                           
   786                           ; 2 bytes @ 0x2
   787  0000BA                     	ds	2
   788  0000BC                     roundf@e:
   789                           	callstack 0
   790  0000BC                     vsnprintf@f:
   791                           	callstack 0
   792                           
   793                           ; 6 bytes @ 0x4
   794  0000BC                     	ds	2
   795  0000BE                     _roundf$2131:
   796                           	callstack 0
   797                           
   798                           ; 4 bytes @ 0x6
   799  0000BE                     	ds	4
   800  0000C2                     ?_snprintf:
   801                           	callstack 0
   802  0000C2                     snprintf@s:
   803                           	callstack 0
   804  0000C2                     roundf@u:
   805                           	callstack 0
   806                           
   807                           ; 4 bytes @ 0xA
   808  0000C2                     	ds	2
   809  0000C4                     snprintf@n:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0xC
   813  0000C4                     	ds	2
   814  0000C6                     snprintf@fmt:
   815                           	callstack 0
   816  0000C6                     roundf@y:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0xE
   820  0000C6                     	ds	4
   821  0000CA                     ?___fltol:
   822                           	callstack 0
   823  0000CA                     ___fltol@f1:
   824                           	callstack 0
   825                           
   826                           ; 4 bytes @ 0x12
   827  0000CA                     	ds	2
   828  0000CC                     snprintf@ap:
   829                           	callstack 0
   830                           
   831                           ; 2 bytes @ 0x14
   832  0000CC                     	ds	2
   833  0000CE                     ??___fltol:
   834                           
   835                           ; 1 bytes @ 0x16
   836  0000CE                     	ds	4
   837  0000D2                     ___fltol@sign1:
   838                           	callstack 0
   839                           
   840                           ; 1 bytes @ 0x1A
   841  0000D2                     	ds	1
   842  0000D3                     ___fltol@exp1:
   843                           	callstack 0
   844                           
   845                           ; 1 bytes @ 0x1B
   846  0000D3                     	ds	1
   847  0000D4                     ?_get_temperature:
   848                           	callstack 0
   849  0000D4                     update_pwm_duty_ccp1@time_up:
   850                           	callstack 0
   851  0000D4                     _init_timer_2$2130:
   852                           	callstack 0
   853                           
   854                           ; 4 bytes @ 0x1C
   855  0000D4                     	ds	2
   856  0000D6                     ?_check_temperature:
   857                           	callstack 0
   858  0000D6                     check_temperature@temp_to_be_checked:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x1E
   862  0000D6                     	ds	2
   863  0000D8                     ??_update_pwm_duty_ccp1:
   864  0000D8                     check_temperature@grad:
   865                           	callstack 0
   866                           
   867                           ; 4 bytes @ 0x20
   868  0000D8                     	ds	2
   869  0000DA                     update_pwm_duty_ccp1@new_duty:
   870                           	callstack 0
   871                           
   872                           ; 2 bytes @ 0x22
   873  0000DA                     	ds	2
   874  0000DC                     update_pwm_duty_ccp1@lsbs_duty:
   875                           	callstack 0
   876                           
   877                           ; 1 bytes @ 0x24
   878  0000DC                     	ds	1
   879  0000DD                     ??_main:
   880                           
   881                           ; 1 bytes @ 0x25
   882  0000DD                     	ds	1
   883                           
   884                           	psect	cstackCOMRAM
   885  000001                     __pcstackCOMRAM:
   886                           	callstack 0
   887  000001                     ?_strlen:
   888                           	callstack 0
   889  000001                     ?_isupper:
   890                           	callstack 0
   891  000001                     ?_isalpha:
   892                           	callstack 0
   893  000001                     ?_isdigit:
   894                           	callstack 0
   895  000001                     ?_strncmp:
   896                           	callstack 0
   897  000001                     ?_isspace:
   898                           	callstack 0
   899  000001                     ?_islower:
   900                           	callstack 0
   901  000001                     ?___wmul:
   902                           	callstack 0
   903  000001                     ?___flneg:
   904                           	callstack 0
   905  000001                     ?___aodiv:
   906                           	callstack 0
   907  000001                     ?___aomod:
   908                           	callstack 0
   909  000001                     ?___lodiv:
   910                           	callstack 0
   911  000001                     ?___lomod:
   912                           	callstack 0
   913  000001                     serial_tx_char@val:
   914                           	callstack 0
   915  000001                     get_reg_value@rx_char:
   916                           	callstack 0
   917  000001                     lcd_wr@val:
   918                           	callstack 0
   919  000001                     state_translator_micro_to_fpga@state:
   920                           	callstack 0
   921  000001                     init_stepper@stepper_motor:
   922                           	callstack 0
   923  000001                     turn_on_current_coil@stepper_motor:
   924                           	callstack 0
   925  000001                     update_current_coil@stepper_motor:
   926                           	callstack 0
   927  000001                     change_direction@stepper_motor:
   928                           	callstack 0
   929  000001                     ___wmul@multiplier:
   930                           	callstack 0
   931  000001                     isalpha@c:
   932                           	callstack 0
   933  000001                     isdigit@c:
   934                           	callstack 0
   935  000001                     isspace@c:
   936                           	callstack 0
   937  000001                     isupper@c:
   938                           	callstack 0
   939  000001                     fputc@c:
   940                           	callstack 0
   941  000001                     strlen@s:
   942                           	callstack 0
   943  000001                     strncmp@_l:
   944                           	callstack 0
   945  000001                     islower@c:
   946                           	callstack 0
   947  000001                     ___flge@ff1:
   948                           	callstack 0
   949  000001                     ___flneg@f1:
   950                           	callstack 0
   951  000001                     ___aodiv@dividend:
   952                           	callstack 0
   953  000001                     ___aomod@dividend:
   954                           	callstack 0
   955  000001                     ___lodiv@dividend:
   956                           	callstack 0
   957  000001                     ___lomod@dividend:
   958                           	callstack 0
   959                           
   960                           ; 8 bytes @ 0x0
   961  000001                     	ds	1
   962  000002                     lcd_cmd@val:
   963                           	callstack 0
   964  000002                     lcd_dat@val:
   965                           	callstack 0
   966                           
   967                           ; 1 bytes @ 0x1
   968  000002                     	ds	1
   969  000003                     ??_lcd_init:
   970  000003                     ??_change_direction:
   971  000003                     ??_isupper:
   972  000003                     ??_isalpha:
   973  000003                     ??_isdigit:
   974  000003                     ??_isspace:
   975  000003                     ??_islower:
   976  000003                     ??_turn_on_current_coil:
   977  000003                     ??_update_current_coil:
   978  000003                     lcd_str@str:
   979                           	callstack 0
   980  000003                     state_translator_fpga_to_micro@state:
   981                           	callstack 0
   982  000003                     init_stepper@current_coil:
   983                           	callstack 0
   984  000003                     ___wmul@multiplicand:
   985                           	callstack 0
   986  000003                     fputc@fp:
   987                           	callstack 0
   988  000003                     strlen@a:
   989                           	callstack 0
   990  000003                     strncmp@_r:
   991                           	callstack 0
   992                           
   993                           ; 2 bytes @ 0x2
   994  000003                     	ds	2
   995  000005                     ??_lcd_str:
   996  000005                     ??_fputc:
   997  000005                     state_translator_fpga_to_micro@state_machine_code:
   998                           	callstack 0
   999  000005                     state_translator_micro_to_fpga@state_machine_code:
  1000                           	callstack 0
  1001  000005                     init_stepper@step_counter:
  1002                           	callstack 0
  1003  000005                     ___wmul@product:
  1004                           	callstack 0
  1005  000005                     strncmp@n:
  1006                           	callstack 0
  1007  000005                     ___flge@ff2:
  1008                           	callstack 0
  1009                           
  1010                           ; 4 bytes @ 0x4
  1011  000005                     	ds	2
  1012  000007                     ??_strncmp:
  1013  000007                     ?_reach_goal:
  1014                           	callstack 0
  1015  000007                     ?_toupper:
  1016                           	callstack 0
  1017  000007                     lcd_str@i:
  1018                           	callstack 0
  1019  000007                     _isspace$1833:
  1020                           	callstack 0
  1021  000007                     init_stepper@direction:
  1022                           	callstack 0
  1023  000007                     reach_goal@stepper_motor:
  1024                           	callstack 0
  1025  000007                     toupper@c:
  1026                           	callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x6
  1029  000007                     	ds	1
  1030  000008                     ?_atoi:
  1031                           	callstack 0
  1032  000008                     atoi@s:
  1033                           	callstack 0
  1034  000008                     strncmp@l:
  1035                           	callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x7
  1038  000008                     	ds	1
  1039  000009                     ??_toupper:
  1040  000009                     ??___flge:
  1041  000009                     init_stepper@hex_coil_register_values:
  1042                           	callstack 0
  1043  000009                     reach_goal@goal_to_reach:
  1044                           	callstack 0
  1045  000009                     ___aodiv@divisor:
  1046                           	callstack 0
  1047  000009                     ___aomod@divisor:
  1048                           	callstack 0
  1049  000009                     ___lodiv@divisor:
  1050                           	callstack 0
  1051  000009                     ___lomod@divisor:
  1052                           	callstack 0
  1053                           
  1054                           ; 8 bytes @ 0x8
  1055  000009                     	ds	1
  1056  00000A                     ??_atoi:
  1057  00000A                     ?_stoa:
  1058                           	callstack 0
  1059  00000A                     stoa@fp:
  1060                           	callstack 0
  1061  00000A                     fputs@s:
  1062                           	callstack 0
  1063  00000A                     strncmp@r:
  1064                           	callstack 0
  1065                           
  1066                           ; 2 bytes @ 0x9
  1067  00000A                     	ds	1
  1068  00000B                     ??_init_stepper:
  1069  00000B                     ??_reach_goal:
  1070                           
  1071                           ; 1 bytes @ 0xA
  1072  00000B                     	ds	1
  1073  00000C                     stoa@s:
  1074                           	callstack 0
  1075  00000C                     fputs@fp:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0xB
  1079  00000C                     	ds	1
  1080  00000D                     _toupper$1893:
  1081                           	callstack 0
  1082                           
  1083                           ; 2 bytes @ 0xC
  1084  00000D                     	ds	1
  1085  00000E                     ??_stoa:
  1086  00000E                     fputs@c:
  1087                           	callstack 0
  1088  00000E                     atoi@neg:
  1089                           	callstack 0
  1090                           
  1091                           ; 2 bytes @ 0xD
  1092  00000E                     	ds	1
  1093  00000F                     init_stepper@i:
  1094                           	callstack 0
  1095  00000F                     fputs@i:
  1096                           	callstack 0
  1097  00000F                     stoa@nuls:
  1098                           	callstack 0
  1099                           
  1100                           ; 7 bytes @ 0xE
  1101  00000F                     	ds	1
  1102  000010                     _atoi$1805:
  1103                           	callstack 0
  1104                           
  1105                           ; 2 bytes @ 0xF
  1106  000010                     	ds	1
  1107  000011                     ?_pad:
  1108                           	callstack 0
  1109  000011                     ___aodiv@counter:
  1110                           	callstack 0
  1111  000011                     ___aomod@counter:
  1112                           	callstack 0
  1113  000011                     ___lomod@counter:
  1114                           	callstack 0
  1115  000011                     pad@fp:
  1116                           	callstack 0
  1117  000011                     ___lodiv@quotient:
  1118                           	callstack 0
  1119                           
  1120                           ; 8 bytes @ 0x10
  1121  000011                     	ds	1
  1122  000012                     ___aodiv@sign:
  1123                           	callstack 0
  1124  000012                     ___aomod@sign:
  1125                           	callstack 0
  1126  000012                     _atoi$1807:
  1127                           	callstack 0
  1128                           
  1129                           ; 2 bytes @ 0x11
  1130  000012                     	ds	1
  1131  000013                     ?_abs:
  1132                           	callstack 0
  1133  000013                     abs@a:
  1134                           	callstack 0
  1135  000013                     pad@buf:
  1136                           	callstack 0
  1137  000013                     ___aodiv@quotient:
  1138                           	callstack 0
  1139                           
  1140                           ; 8 bytes @ 0x12
  1141  000013                     	ds	1
  1142  000014                     _atoi$1806:
  1143                           	callstack 0
  1144                           
  1145                           ; 1 bytes @ 0x13
  1146  000014                     	ds	1
  1147  000015                     ??_abs:
  1148  000015                     pad@p:
  1149                           	callstack 0
  1150  000015                     atoi@n:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x14
  1154  000015                     	ds	1
  1155  000016                     stoa@i:
  1156                           	callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x15
  1159  000016                     	ds	1
  1160  000017                     ??_pad:
  1161  000017                     ?___awdiv:
  1162                           	callstack 0
  1163  000017                     ___awdiv@dividend:
  1164                           	callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x16
  1167  000017                     	ds	1
  1168  000018                     pad@i:
  1169                           	callstack 0
  1170  000018                     stoa@w:
  1171                           	callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x17
  1174  000018                     	ds	1
  1175  000019                     ___lodiv@counter:
  1176                           	callstack 0
  1177  000019                     ___awdiv@divisor:
  1178                           	callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x18
  1181  000019                     	ds	1
  1182  00001A                     pad@w:
  1183                           	callstack 0
  1184  00001A                     stoa@cp:
  1185                           	callstack 0
  1186                           
  1187                           ; 2 bytes @ 0x19
  1188  00001A                     	ds	1
  1189  00001B                     ___awdiv@counter:
  1190                           	callstack 0
  1191                           
  1192                           ; 1 bytes @ 0x1A
  1193  00001B                     	ds	1
  1194  00001C                     ?_ctoa:
  1195                           	callstack 0
  1196  00001C                     ?_dtoa:
  1197                           	callstack 0
  1198  00001C                     ?_otoa:
  1199                           	callstack 0
  1200  00001C                     ?_utoa:
  1201                           	callstack 0
  1202  00001C                     ?_xtoa:
  1203                           	callstack 0
  1204  00001C                     ___awdiv@sign:
  1205                           	callstack 0
  1206  00001C                     ctoa@fp:
  1207                           	callstack 0
  1208  00001C                     dtoa@fp:
  1209                           	callstack 0
  1210  00001C                     otoa@fp:
  1211                           	callstack 0
  1212  00001C                     stoa@p:
  1213                           	callstack 0
  1214  00001C                     utoa@fp:
  1215                           	callstack 0
  1216  00001C                     xtoa@fp:
  1217                           	callstack 0
  1218                           
  1219                           ; 2 bytes @ 0x1B
  1220  00001C                     	ds	1
  1221  00001D                     ___awdiv@quotient:
  1222                           	callstack 0
  1223                           
  1224                           ; 2 bytes @ 0x1C
  1225  00001D                     	ds	1
  1226  00001E                     ctoa@c:
  1227                           	callstack 0
  1228  00001E                     stoa@l:
  1229                           	callstack 0
  1230  00001E                     dtoa@d:
  1231                           	callstack 0
  1232  00001E                     otoa@d:
  1233                           	callstack 0
  1234  00001E                     utoa@d:
  1235                           	callstack 0
  1236  00001E                     xtoa@d:
  1237                           	callstack 0
  1238                           
  1239                           ; 8 bytes @ 0x1D
  1240  00001E                     	ds	1
  1241  00001F                     ?___xxtofl:
  1242                           	callstack 0
  1243  00001F                     ctoa@w:
  1244                           	callstack 0
  1245  00001F                     ___xxtofl@val:
  1246                           	callstack 0
  1247                           
  1248                           ; 4 bytes @ 0x1E
  1249  00001F                     	ds	4
  1250  000023                     ??___xxtofl:
  1251                           
  1252                           ; 1 bytes @ 0x22
  1253  000023                     	ds	3
  1254  000026                     ??_dtoa:
  1255  000026                     ??_otoa:
  1256  000026                     ??_utoa:
  1257  000026                     xtoa@x:
  1258                           	callstack 0
  1259                           
  1260                           ; 1 bytes @ 0x25
  1261  000026                     	ds	1
  1262  000027                     ??_xtoa:
  1263  000027                     ___xxtofl@sign:
  1264                           	callstack 0
  1265                           
  1266                           ; 1 bytes @ 0x26
  1267  000027                     	ds	1
  1268  000028                     ___xxtofl@exp:
  1269                           	callstack 0
  1270                           
  1271                           ; 1 bytes @ 0x27
  1272  000028                     	ds	1
  1273  000029                     ___xxtofl@arg:
  1274                           	callstack 0
  1275                           
  1276                           ; 4 bytes @ 0x28
  1277  000029                     	ds	4
  1278  00002D                     ?___flmul:
  1279                           	callstack 0
  1280  00002D                     ___flmul@b:
  1281                           	callstack 0
  1282                           
  1283                           ; 4 bytes @ 0x2C
  1284  00002D                     	ds	1
  1285  00002E                     _dtoa$1631:
  1286                           	callstack 0
  1287  00002E                     otoa@p:
  1288                           	callstack 0
  1289  00002E                     utoa@p:
  1290                           	callstack 0
  1291                           
  1292                           ; 2 bytes @ 0x2D
  1293  00002E                     	ds	1
  1294  00002F                     _xtoa$1667:
  1295                           	callstack 0
  1296                           
  1297                           ; 2 bytes @ 0x2E
  1298  00002F                     	ds	1
  1299  000030                     dtoa@p:
  1300                           	callstack 0
  1301  000030                     otoa@t:
  1302                           	callstack 0
  1303  000030                     utoa@w:
  1304                           	callstack 0
  1305                           
  1306                           ; 2 bytes @ 0x2F
  1307  000030                     	ds	1
  1308  000031                     _xtoa$1668:
  1309                           	callstack 0
  1310  000031                     ___flmul@a:
  1311                           	callstack 0
  1312                           
  1313                           ; 4 bytes @ 0x30
  1314  000031                     	ds	1
  1315  000032                     dtoa@w:
  1316                           	callstack 0
  1317  000032                     otoa@w:
  1318                           	callstack 0
  1319  000032                     utoa@n:
  1320                           	callstack 0
  1321                           
  1322                           ; 8 bytes @ 0x31
  1323  000032                     	ds	1
  1324  000033                     xtoa@p:
  1325                           	callstack 0
  1326                           
  1327                           ; 2 bytes @ 0x32
  1328  000033                     	ds	1
  1329  000034                     dtoa@s:
  1330                           	callstack 0
  1331  000034                     otoa@n:
  1332                           	callstack 0
  1333                           
  1334                           ; 8 bytes @ 0x33
  1335  000034                     	ds	1
  1336  000035                     ??___flmul:
  1337  000035                     xtoa@w:
  1338                           	callstack 0
  1339                           
  1340                           ; 2 bytes @ 0x34
  1341  000035                     	ds	1
  1342  000036                     dtoa@n:
  1343                           	callstack 0
  1344                           
  1345                           ; 8 bytes @ 0x35
  1346  000036                     	ds	1
  1347  000037                     xtoa@n:
  1348                           	callstack 0
  1349                           
  1350                           ; 8 bytes @ 0x36
  1351  000037                     	ds	2
  1352  000039                     ___flmul@sign:
  1353                           	callstack 0
  1354                           
  1355                           ; 1 bytes @ 0x38
  1356  000039                     	ds	1
  1357  00003A                     utoa@i:
  1358                           	callstack 0
  1359  00003A                     ___flmul@grs:
  1360                           	callstack 0
  1361                           
  1362                           ; 4 bytes @ 0x39
  1363  00003A                     	ds	2
  1364  00003C                     otoa@i:
  1365                           	callstack 0
  1366                           
  1367                           ; 2 bytes @ 0x3B
  1368  00003C                     	ds	2
  1369  00003E                     ___flmul@aexp:
  1370                           	callstack 0
  1371  00003E                     dtoa@i:
  1372                           	callstack 0
  1373                           
  1374                           ; 2 bytes @ 0x3D
  1375  00003E                     	ds	1
  1376  00003F                     ___flmul@bexp:
  1377                           	callstack 0
  1378  00003F                     xtoa@i:
  1379                           	callstack 0
  1380                           
  1381                           ; 2 bytes @ 0x3E
  1382  00003F                     	ds	1
  1383  000040                     ___flmul@prod:
  1384                           	callstack 0
  1385                           
  1386                           ; 4 bytes @ 0x3F
  1387  000040                     	ds	1
  1388  000041                     xtoa@c:
  1389                           	callstack 0
  1390                           
  1391                           ; 2 bytes @ 0x40
  1392  000041                     	ds	2
  1393  000043                     ?_vfpfcnvrt:
  1394                           	callstack 0
  1395  000043                     vfpfcnvrt@fp:
  1396                           	callstack 0
  1397                           
  1398                           ; 2 bytes @ 0x42
  1399  000043                     	ds	1
  1400  000044                     ___flmul@temp:
  1401                           	callstack 0
  1402                           
  1403                           ; 2 bytes @ 0x43
  1404  000044                     	ds	1
  1405  000045                     vfpfcnvrt@fmt:
  1406                           	callstack 0
  1407                           
  1408                           ; 2 bytes @ 0x44
  1409  000045                     	ds	1
  1410  000046                     ?___fldiv:
  1411                           	callstack 0
  1412  000046                     ___fldiv@b:
  1413                           	callstack 0
  1414                           
  1415                           ; 4 bytes @ 0x45
  1416  000046                     	ds	1
  1417  000047                     vfpfcnvrt@ap:
  1418                           	callstack 0
  1419                           
  1420                           ; 2 bytes @ 0x46
  1421  000047                     	ds	2
  1422  000049                     ??_vfpfcnvrt:
  1423                           
  1424                           ; 1 bytes @ 0x48
  1425  000049                     	ds	1
  1426  00004A                     ___fldiv@a:
  1427                           	callstack 0
  1428                           
  1429                           ; 4 bytes @ 0x49
  1430  00004A                     	ds	3
  1431  00004D                     vfpfcnvrt@cp:
  1432                           	callstack 0
  1433                           
  1434                           ; 2 bytes @ 0x4C
  1435  00004D                     	ds	1
  1436  00004E                     ??___fldiv:
  1437                           
  1438                           ; 1 bytes @ 0x4D
  1439  00004E                     	ds	1
  1440  00004F                     vfpfcnvrt@done:
  1441                           	callstack 0
  1442                           
  1443                           ; 2 bytes @ 0x4E
  1444  00004F                     	ds	2
  1445  000051                     _vfpfcnvrt$1682:
  1446                           	callstack 0
  1447                           
  1448                           ; 2 bytes @ 0x50
  1449  000051                     	ds	1
  1450  000052                     ___fldiv@rem:
  1451                           	callstack 0
  1452                           
  1453                           ; 4 bytes @ 0x51
  1454  000052                     	ds	1
  1455  000053                     _vfpfcnvrt$1683:
  1456                           	callstack 0
  1457                           
  1458                           ; 2 bytes @ 0x52
  1459  000053                     	ds	2
  1460  000055                     vfpfcnvrt@ll:
  1461                           	callstack 0
  1462                           
  1463                           ; 8 bytes @ 0x54
  1464  000055                     	ds	1
  1465  000056                     ___fldiv@sign:
  1466                           	callstack 0
  1467                           
  1468                           ; 1 bytes @ 0x55
  1469  000056                     	ds	1
  1470  000057                     ___fldiv@new_exp:
  1471                           	callstack 0
  1472                           
  1473                           ; 2 bytes @ 0x56
  1474  000057                     	ds	2
  1475  000059                     ___fldiv@grs:
  1476                           	callstack 0
  1477                           
  1478                           ; 4 bytes @ 0x58
  1479  000059                     	ds	4
  1480  00005D                     ___fldiv@bexp:
  1481                           	callstack 0
  1482  00005D                     vfpfcnvrt@vp:
  1483                           	callstack 0
  1484                           
  1485                           ; 2 bytes @ 0x5C
  1486  00005D                     	ds	1
  1487  00005E                     ___fldiv@aexp:
  1488                           	callstack 0
  1489                           
  1490                           ; 1 bytes @ 0x5D
  1491  00005E                     	ds	1
  1492  00005F                     ?___fladd:
  1493                           	callstack 0
  1494  00005F                     vfpfcnvrt@c:
  1495                           	callstack 0
  1496  00005F                     ___fladd@b:
  1497                           	callstack 0
  1498                           
  1499                           ; 4 bytes @ 0x5E
  1500  00005F                     	ds	1
  1501  000060                     vfpfcnvrt@llu:
  1502                           	callstack 0
  1503                           
  1504                           ; 8 bytes @ 0x5F
  1505  000060                     	ds	3
  1506  000063                     ___fladd@a:
  1507                           	callstack 0
  1508                           
  1509                           ; 4 bytes @ 0x62
  1510  000063                     	ds	4
  1511  000067                     ??___fladd:
  1512                           
  1513                           ; 1 bytes @ 0x66
  1514  000067                     	ds	1
  1515  000068                     ?_vfprintf:
  1516                           	callstack 0
  1517  000068                     vfprintf@fp:
  1518                           	callstack 0
  1519                           
  1520                           ; 2 bytes @ 0x67
  1521  000068                     	ds	2
  1522  00006A                     vfprintf@fmt:
  1523                           	callstack 0
  1524                           
  1525                           ; 2 bytes @ 0x69
  1526  00006A                     	ds	1
  1527  00006B                     ___fladd@signs:
  1528                           	callstack 0
  1529                           
  1530                           ; 1 bytes @ 0x6A
  1531  00006B                     	ds	1
  1532  00006C                     ___fladd@aexp:
  1533                           	callstack 0
  1534  00006C                     vfprintf@ap:
  1535                           	callstack 0
  1536                           
  1537                           ; 2 bytes @ 0x6B
  1538  00006C                     	ds	1
  1539  00006D                     ___fladd@bexp:
  1540                           	callstack 0
  1541                           
  1542                           ; 1 bytes @ 0x6C
  1543  00006D                     	ds	1
  1544  00006E                     ___fladd@grs:
  1545                           	callstack 0
  1546  00006E                     vfprintf@cfmt:
  1547                           	callstack 0
  1548                           
  1549                           ; 2 bytes @ 0x6D
  1550  00006E                     	ds	1
  1551  00006F                     ?___flsub:
  1552                           	callstack 0
  1553  00006F                     ___flsub@b:
  1554                           	callstack 0
  1555                           
  1556                           ; 4 bytes @ 0x6E
  1557  00006F                     	ds	1
  1558  000070                     ?_vsnprintf:
  1559                           	callstack 0
  1560  000070                     vsnprintf@s:
  1561                           	callstack 0
  1562                           
  1563                           ; 2 bytes @ 0x6F
  1564  000070                     	ds	2
  1565  000072                     vsnprintf@n:
  1566                           	callstack 0
  1567                           
  1568                           ; 2 bytes @ 0x71
  1569  000072                     	ds	1
  1570  000073                     ___flsub@a:
  1571                           	callstack 0
  1572                           
  1573                           ; 4 bytes @ 0x72
  1574  000073                     	ds	1
  1575  000074                     vsnprintf@fmt:
  1576                           	callstack 0
  1577                           
  1578                           ; 2 bytes @ 0x73
  1579  000074                     	ds	2
  1580  000076                     vsnprintf@ap:
  1581                           	callstack 0
  1582                           
  1583                           ; 2 bytes @ 0x75
  1584  000076                     	ds	1
  1585  000077                     ?_roundf:
  1586                           	callstack 0
  1587  000077                     roundf@x:
  1588                           	callstack 0
  1589                           
  1590                           ; 4 bytes @ 0x76
  1591  000077                     	ds	1
  1592  000078                     ??_vsnprintf:
  1593                           
  1594                           ; 1 bytes @ 0x77
  1595  000078                     	ds	3
  1596  00007B                     ??_roundf:
  1597                           
  1598                           ; 1 bytes @ 0x7A
  1599  00007B                     	ds	1
  1600  00007C                     
  1601                           ; 1 bytes @ 0x7B
  1602  00007C                     	ds	3
  1603  00007F                     
  1604                           ; 1 bytes @ 0x7E
  1605 ;;
  1606 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1607 ;;
  1608 ;; *************** function _main *****************
  1609 ;; Defined at:
  1610 ;;		line 54 in file "main.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;		None
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;  current_temp    2  160[BANK1 ] int 
  1615 ;;  greet_str     160    0[BANK1 ] PTR const unsigned char 
  1616 ;;		 -> ?_snprintf(2), STR_8(50), STR_7(9), STR_6(7), 
  1617 ;;		 -> STR_5(9), STR_4(39), STR_3(9), STR_2(64), 
  1618 ;;		 -> STR_1(49), 
  1619 ;;  rx_char         1  162[BANK1 ] unsigned char 
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  1    wreg      void 
  1622 ;; Registers used:
  1623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1629 ;;      Params:         0       0       0       0       0       0       0
  1630 ;;      Locals:         0       0     163       0       0       0       0
  1631 ;;      Temps:          0       1       0       0       0       0       0
  1632 ;;      Totals:         0       1     163       0       0       0       0
  1633 ;;Total ram usage:      164 bytes
  1634 ;; Hardware stack levels required when called:   10
  1635 ;; This function calls:
  1636 ;;		___wmul
  1637 ;;		_change_direction
  1638 ;;		_check_temperature
  1639 ;;		_configure_analog_digital_conversion
  1640 ;;		_get_reg_value
  1641 ;;		_get_temperature
  1642 ;;		_init_PORTS
  1643 ;;		_init_USART
  1644 ;;		_init_ccp1
  1645 ;;		_init_interrupts
  1646 ;;		_init_stepper
  1647 ;;		_init_timer_0
  1648 ;;		_init_timer_2
  1649 ;;		_lcd_cmd
  1650 ;;		_lcd_init
  1651 ;;		_lcd_str
  1652 ;;		_reach_goal
  1653 ;;		_serial_tx_char
  1654 ;;		_snprintf
  1655 ;;		_state_translator_fpga_to_micro
  1656 ;;		_state_translator_micro_to_fpga
  1657 ;;		_wait_for_zero
  1658 ;; This function is called by:
  1659 ;;		Startup code after reset
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           	psect	text0
  1664  001462                     __ptext0:
  1665                           	callstack 0
  1666  001462                     _main:
  1667                           	callstack 21
  1668  001462  FFFF               	dw	65535	; assembler added errata NOP
  1669                           
  1670                           ;main.c: 56:     init_PORTS();
  1671  001464  ECAA  F033         	call	_init_PORTS	;wreg free
  1672  001468                     
  1673                           ;main.c: 57:     init_USART();
  1674  001468  EC34  F034         	call	_init_USART	;wreg free
  1675  00146C                     
  1676                           ;main.c: 58:     init_timer_2();
  1677  00146C  EC2B  F038         	call	_init_timer_2	;wreg free
  1678  001470                     
  1679                           ;main.c: 59:     init_ccp1();
  1680  001470  EC31  F033         	call	_init_ccp1	;wreg free
  1681  001474                     
  1682                           ;main.c: 60:     init_interrupts();
  1683  001474  ECE2  F032         	call	_init_interrupts	;wreg free
  1684  001478                     
  1685                           ;main.c: 61:     configure_analog_digital_conversion();
  1686  001478  EC43  F033         	call	_configure_analog_digital_conversion	;wreg free
  1687  00147C                     
  1688                           ;main.c: 62:     init_stepper(&joint_stepper, 0, 0, 1, hex_joint_values);
  1689  00147C  0EBF               	movlw	low _joint_stepper
  1690  00147E  6E01               	movwf	init_stepper@stepper_motor^0,c
  1691  001480  0E01               	movlw	high _joint_stepper
  1692  001482  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  1693  001484  0E00               	movlw	0
  1694  001486  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  1695  001488  0E00               	movlw	0
  1696  00148A  6E03               	movwf	init_stepper@current_coil^0,c
  1697  00148C  0E00               	movlw	0
  1698  00148E  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  1699  001490  0E00               	movlw	0
  1700  001492  6E05               	movwf	init_stepper@step_counter^0,c
  1701  001494  0E00               	movlw	0
  1702  001496  6E08               	movwf	(init_stepper@direction+1)^0,c
  1703  001498  0E01               	movlw	1
  1704  00149A  6E07               	movwf	init_stepper@direction^0,c
  1705  00149C  0EE7               	movlw	low _hex_joint_values
  1706  00149E  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  1707  0014A0  0E01               	movlw	high _hex_joint_values
  1708  0014A2  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  1709  0014A4  EC71  F037         	call	_init_stepper	;wreg free
  1710  0014A8                     
  1711                           ;main.c: 63:     init_stepper(&end_effector_stepper, 0, 0, 1, hex_end_effector_values);
  1712  0014A8  0EB1               	movlw	low _end_effector_stepper
  1713  0014AA  6E01               	movwf	init_stepper@stepper_motor^0,c
  1714  0014AC  0E01               	movlw	high _end_effector_stepper
  1715  0014AE  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  1716  0014B0  0E00               	movlw	0
  1717  0014B2  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  1718  0014B4  0E00               	movlw	0
  1719  0014B6  6E03               	movwf	init_stepper@current_coil^0,c
  1720  0014B8  0E00               	movlw	0
  1721  0014BA  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  1722  0014BC  0E00               	movlw	0
  1723  0014BE  6E05               	movwf	init_stepper@step_counter^0,c
  1724  0014C0  0E00               	movlw	0
  1725  0014C2  6E08               	movwf	(init_stepper@direction+1)^0,c
  1726  0014C4  0E01               	movlw	1
  1727  0014C6  6E07               	movwf	init_stepper@direction^0,c
  1728  0014C8  0EDF               	movlw	low _hex_end_effector_values
  1729  0014CA  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  1730  0014CC  0E01               	movlw	high _hex_end_effector_values
  1731  0014CE  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  1732  0014D0  EC71  F037         	call	_init_stepper	;wreg free
  1733  0014D4                     
  1734                           ;main.c: 64:     lcd_init();
  1735  0014D4  ECEE  F036         	call	_lcd_init	;wreg free
  1736  0014D8                     
  1737                           ;main.c: 65:     lcd_cmd(0x0C);
  1738  0014D8  0E0C               	movlw	12
  1739  0014DA  EC6B  F033         	call	_lcd_cmd
  1740  0014DE                     
  1741                           ;main.c: 67:     lcd_cmd(0x01);
  1742  0014DE  0E01               	movlw	1
  1743  0014E0  EC6B  F033         	call	_lcd_cmd
  1744  0014E4                     
  1745                           ;main.c: 68:     lcd_cmd(0x80);
  1746  0014E4  0E80               	movlw	128
  1747  0014E6  EC6B  F033         	call	_lcd_cmd
  1748  0014EA                     
  1749                           ;main.c: 69:     lcd_str("Device has been reset");
  1750  0014EA  0E93               	movlw	low STR_9
  1751  0014EC  6E03               	movwf	lcd_str@str^0,c
  1752  0014EE  0E7F               	movlw	high STR_9
  1753  0014F0  6E04               	movwf	(lcd_str@str+1)^0,c
  1754  0014F2  EC2D  F037         	call	_lcd_str	;wreg free
  1755  0014F6                     
  1756                           ;main.c: 71:     (INTCONbits.GIE = 1);
  1757  0014F6  8EF2               	bsf	242,7,c	;volatile
  1758  0014F8                     
  1759                           ;main.c: 73:     mix_counter = 0;
  1760  0014F8  0E00               	movlw	0
  1761  0014FA  0101               	movlb	1	; () banked
  1762  0014FC  6FAC               	movwf	(_mix_counter+1)& (0+255),b
  1763  0014FE  0E00               	movlw	0
  1764  001500  6FAB               	movwf	_mix_counter& (0+255),b
  1765  001502                     l5495:
  1766  001502  FFFF               	dw	65535	; assembler added errata NOP
  1767                           
  1768                           ;main.c: 76:         if (state_changed){
  1769  001504  0101               	movlb	1	; () banked
  1770  001506  51B0               	movf	_state_changed& (0+255),w,b
  1771  001508  B4D8               	btfsc	status,2,c
  1772  00150A  EF89  F00A         	goto	u6691
  1773  00150E  EF8C  F00A         	goto	u6690
  1774  001512                     u6691:
  1775  001512  FFFF               	dw	65535	; assembler added errata NOP
  1776  001514  EFDF  F00A         	goto	l5519
  1777  001518                     u6690:
  1778  001518  FFFF               	dw	65535	; assembler added errata NOP
  1779  00151A                     
  1780                           ; BSR set to: 1
  1781                           ;main.c: 77:             const char* greet_str[80];;main.c: 78:             if (read_new
      +                          _char){
  1782  00151A  51AE               	movf	_read_new_char& (0+255),w,b
  1783  00151C  B4D8               	btfsc	status,2,c
  1784  00151E  EF93  F00A         	goto	u6701
  1785  001522  EF96  F00A         	goto	u6700
  1786  001526                     u6701:
  1787  001526  FFFF               	dw	65535	; assembler added errata NOP
  1788  001528  EFA7  F00A         	goto	l5505
  1789  00152C                     u6700:
  1790  00152C  FFFF               	dw	65535	; assembler added errata NOP
  1791  00152E                     
  1792                           ; BSR set to: 1
  1793                           ;main.c: 79:                 rx_char = get_reg_value();
  1794  00152E  ECEE  F032         	call	_get_reg_value	;wreg free
  1795  001532  0101               	movlb	1	; () banked
  1796  001534  6FA2               	movwf	main@rx_char& (0+255),b
  1797  001536                     
  1798                           ; BSR set to: 1
  1799                           ;main.c: 84:                 state_translator_fpga_to_micro(rx_char, &state);
  1800  001536  0ECD               	movlw	low _state
  1801  001538  6E03               	movwf	state_translator_fpga_to_micro@state^0,c
  1802  00153A  0E01               	movlw	high _state
  1803  00153C  6E04               	movwf	(state_translator_fpga_to_micro@state+1)^0,c
  1804  00153E  51A2               	movf	main@rx_char& (0+255),w,b
  1805  001540  EC3E  F03B         	call	_state_translator_fpga_to_micro
  1806  001544                     
  1807                           ;main.c: 85:                 read_new_char = 0;
  1808  001544  0E00               	movlw	0
  1809  001546  0101               	movlb	1	; () banked
  1810  001548  6FAE               	movwf	_read_new_char& (0+255),b
  1811                           
  1812                           ;main.c: 86:             } else {
  1813  00154A  EFB0  F00A         	goto	l5507
  1814  00154E                     l5505:
  1815  00154E  FFFF               	dw	65535	; assembler added errata NOP
  1816                           
  1817                           ; BSR set to: 1
  1818                           ;main.c: 87:                 serial_tx_char(state_translator_micro_to_fpga(&state));
  1819  001550  0ECD               	movlw	low _state
  1820  001552  6E01               	movwf	state_translator_micro_to_fpga@state^0,c
  1821  001554  0E01               	movlw	high _state
  1822  001556  6E02               	movwf	(state_translator_micro_to_fpga@state+1)^0,c
  1823  001558  ECAC  F035         	call	_state_translator_micro_to_fpga	;wreg free
  1824  00155C  EC00  F033         	call	_serial_tx_char
  1825  001560                     l5507:
  1826  001560  FFFF               	dw	65535	; assembler added errata NOP
  1827                           
  1828                           ;main.c: 89:             snprintf(greet_str, sizeof(greet_str), "%s", state_msgs[state])
      +                          ;
  1829  001562  0E00               	movlw	low main@greet_str
  1830  001564  0100               	movlb	0	; () banked
  1831  001566  6FC2               	movwf	snprintf@s& (0+255),b
  1832  001568  0E01               	movlw	high main@greet_str
  1833  00156A  6FC3               	movwf	(snprintf@s+1)& (0+255),b
  1834  00156C  0E00               	movlw	0
  1835  00156E  6FC5               	movwf	(snprintf@n+1)& (0+255),b
  1836  001570  0EA0               	movlw	160
  1837  001572  6FC4               	movwf	snprintf@n& (0+255),b
  1838  001574  0EFC               	movlw	low STR_10
  1839  001576  6FC6               	movwf	snprintf@fmt& (0+255),b
  1840  001578  0E7F               	movlw	high STR_10
  1841  00157A  6FC7               	movwf	(snprintf@fmt+1)& (0+255),b
  1842  00157C  90D8               	bcf	status,0,c
  1843  00157E  0101               	movlb	1	; () banked
  1844  001580  35CD               	rlcf	_state& (0+255),w,b
  1845  001582  6ED9               	movwf	fsr2l,c
  1846  001584  35CE               	rlcf	(_state+1)& (0+255),w,b
  1847  001586  6EDA               	movwf	fsr2h,c
  1848  001588  0ECF               	movlw	low _state_msgs
  1849  00158A  26D9               	addwf	fsr2l,f,c
  1850  00158C  0E01               	movlw	high _state_msgs
  1851  00158E  22DA               	addwfc	fsr2h,f,c
  1852  001590  CFDE F0C8          	movff	postinc2,?_snprintf+6
  1853  001594  CFDD F0C9          	movff	postdec2,?_snprintf+7
  1854  001598  ECC0  F033         	call	_snprintf	;wreg free
  1855  00159C                     
  1856                           ;main.c: 90:             lcd_cmd(0x01);
  1857  00159C  0E01               	movlw	1
  1858  00159E  EC6B  F033         	call	_lcd_cmd
  1859  0015A2                     
  1860                           ;main.c: 91:             lcd_cmd(0x80);
  1861  0015A2  0E80               	movlw	128
  1862  0015A4  EC6B  F033         	call	_lcd_cmd
  1863  0015A8                     
  1864                           ;main.c: 92:             lcd_str(greet_str);
  1865  0015A8  0E00               	movlw	low main@greet_str
  1866  0015AA  6E03               	movwf	lcd_str@str^0,c
  1867  0015AC  0E01               	movlw	high main@greet_str
  1868  0015AE  6E04               	movwf	(lcd_str@str+1)^0,c
  1869  0015B0  EC2D  F037         	call	_lcd_str	;wreg free
  1870  0015B4                     
  1871                           ;main.c: 94:             state_changed = 0;
  1872  0015B4  0E00               	movlw	0
  1873  0015B6  0101               	movlb	1	; () banked
  1874  0015B8  6FB0               	movwf	_state_changed& (0+255),b
  1875  0015BA                     
  1876                           ; BSR set to: 1
  1877                           ;main.c: 95:             idle_msg_sent = 0;
  1878  0015BA  0E00               	movlw	0
  1879  0015BC  6FAF               	movwf	_idle_msg_sent& (0+255),b
  1880  0015BE                     l5519:
  1881  0015BE  FFFF               	dw	65535	; assembler added errata NOP
  1882                           
  1883                           ; BSR set to: 1
  1884                           ;main.c: 99:         if (state == 2){
  1885  0015C0  0E02               	movlw	2
  1886  0015C2  19CD               	xorwf	_state& (0+255),w,b
  1887  0015C4  11CE               	iorwf	(_state+1)& (0+255),w,b
  1888  0015C6  A4D8               	btfss	status,2,c
  1889  0015C8  EFE8  F00A         	goto	u6711
  1890  0015CC  EFEB  F00A         	goto	u6710
  1891  0015D0                     u6711:
  1892  0015D0  FFFF               	dw	65535	; assembler added errata NOP
  1893  0015D2  EF30  F00B         	goto	l137
  1894  0015D6                     u6710:
  1895  0015D6  FFFF               	dw	65535	; assembler added errata NOP
  1896  0015D8                     
  1897                           ; BSR set to: 1
  1898                           ;main.c: 100:             LATAbits.LATA1 = 1;
  1899  0015D8  8289               	bsf	137,1,c	;volatile
  1900  0015DA                     
  1901                           ; BSR set to: 1
  1902                           ;main.c: 101:             if (move_to_trash && trash_counter < 100){
  1903  0015DA  51A3               	movf	_move_to_trash& (0+255),w,b
  1904  0015DC  11A4               	iorwf	(_move_to_trash+1)& (0+255),w,b
  1905  0015DE  B4D8               	btfsc	status,2,c
  1906  0015E0  EFF4  F00A         	goto	u6721
  1907  0015E4  EFF7  F00A         	goto	u6720
  1908  0015E8                     u6721:
  1909  0015E8  FFFF               	dw	65535	; assembler added errata NOP
  1910  0015EA  EF0C  F00B         	goto	l5529
  1911  0015EE                     u6720:
  1912  0015EE  FFFF               	dw	65535	; assembler added errata NOP
  1913  0015F0                     
  1914                           ; BSR set to: 1
  1915  0015F0  BFA6               	btfsc	(_trash_counter+1)& (0+255),7,b
  1916  0015F2  EF07  F00B         	goto	u6730
  1917  0015F6  51A6               	movf	(_trash_counter+1)& (0+255),w,b
  1918  0015F8  E107               	bnz	u6731
  1919  0015FA  0E64               	movlw	100
  1920  0015FC  5DA5               	subwf	_trash_counter& (0+255),w,b
  1921  0015FE  B0D8               	btfsc	status,0,c
  1922  001600  EF04  F00B         	goto	u6731
  1923  001604  EF07  F00B         	goto	u6730
  1924  001608                     u6731:
  1925  001608  FFFF               	dw	65535	; assembler added errata NOP
  1926  00160A  EF0C  F00B         	goto	l5529
  1927  00160E                     u6730:
  1928  00160E  FFFF               	dw	65535	; assembler added errata NOP
  1929  001610                     
  1930                           ; BSR set to: 1
  1931                           ;main.c: 102:                 trash_counter++;
  1932  001610  4BA5               	infsnz	_trash_counter& (0+255),f,b
  1933  001612  2BA6               	incf	(_trash_counter+1)& (0+255),f,b
  1934                           
  1935                           ;main.c: 103:             } else if (move_to_trash && trash_counter >= 100){
  1936  001614  EF81  F00A         	goto	l5495
  1937  001618                     l5529:
  1938  001618  FFFF               	dw	65535	; assembler added errata NOP
  1939                           
  1940                           ; BSR set to: 1
  1941  00161A  51A3               	movf	_move_to_trash& (0+255),w,b
  1942  00161C  11A4               	iorwf	(_move_to_trash+1)& (0+255),w,b
  1943  00161E  B4D8               	btfsc	status,2,c
  1944  001620  EF14  F00B         	goto	u6741
  1945  001624  EF17  F00B         	goto	u6740
  1946  001628                     u6741:
  1947  001628  FFFF               	dw	65535	; assembler added errata NOP
  1948  00162A  EF4D  F00B         	goto	l143
  1949  00162E                     u6740:
  1950  00162E  FFFF               	dw	65535	; assembler added errata NOP
  1951  001630                     
  1952                           ; BSR set to: 1
  1953  001630  BFA6               	btfsc	(_trash_counter+1)& (0+255),7,b
  1954  001632  EF24  F00B         	goto	u6751
  1955  001636  51A6               	movf	(_trash_counter+1)& (0+255),w,b
  1956  001638  E10A               	bnz	u6750
  1957  00163A  0E64               	movlw	100
  1958  00163C  5DA5               	subwf	_trash_counter& (0+255),w,b
  1959  00163E  A0D8               	btfss	status,0,c
  1960  001640  EF24  F00B         	goto	u6751
  1961  001644  EF27  F00B         	goto	u6750
  1962  001648                     u6751:
  1963  001648  FFFF               	dw	65535	; assembler added errata NOP
  1964  00164A  EF4D  F00B         	goto	l143
  1965  00164E                     u6750:
  1966  00164E  FFFF               	dw	65535	; assembler added errata NOP
  1967  001650                     
  1968                           ; BSR set to: 1
  1969                           ;main.c: 104:                 state = 0;
  1970  001650  0E00               	movlw	0
  1971  001652  6FCE               	movwf	(_state+1)& (0+255),b
  1972  001654  0E00               	movlw	0
  1973  001656  6FCD               	movwf	_state& (0+255),b
  1974                           
  1975                           ;main.c: 105:                 idle_msg_sent = 0;
  1976  001658  0E00               	movlw	0
  1977  00165A  6FAF               	movwf	_idle_msg_sent& (0+255),b
  1978  00165C  EF81  F00A         	goto	l5495
  1979  001660                     l137:
  1980  001660  FFFF               	dw	65535	; assembler added errata NOP
  1981                           
  1982                           ; BSR set to: 1
  1983                           ;main.c: 108:             LATAbits.LATA1 = 0;
  1984  001662  9289               	bcf	137,1,c	;volatile
  1985  001664                     
  1986                           ; BSR set to: 1
  1987                           ;main.c: 109:             if (state == 0) {
  1988  001664  51CD               	movf	_state& (0+255),w,b
  1989  001666  11CE               	iorwf	(_state+1)& (0+255),w,b
  1990  001668  A4D8               	btfss	status,2,c
  1991  00166A  EF39  F00B         	goto	u6761
  1992  00166E  EF3C  F00B         	goto	u6760
  1993  001672                     u6761:
  1994  001672  FFFF               	dw	65535	; assembler added errata NOP
  1995  001674  EF50  F00B         	goto	l5541
  1996  001678                     u6760:
  1997  001678  FFFF               	dw	65535	; assembler added errata NOP
  1998  00167A                     
  1999                           ; BSR set to: 1
  2000                           ;main.c: 110:                 if (!idle_msg_sent){
  2001  00167A  51AF               	movf	_idle_msg_sent& (0+255),w,b
  2002  00167C  A4D8               	btfss	status,2,c
  2003  00167E  EF43  F00B         	goto	u6771
  2004  001682  EF46  F00B         	goto	u6770
  2005  001686                     u6771:
  2006  001686  FFFF               	dw	65535	; assembler added errata NOP
  2007  001688  EF81  F00A         	goto	l5495
  2008  00168C                     u6770:
  2009  00168C  FFFF               	dw	65535	; assembler added errata NOP
  2010  00168E                     
  2011                           ; BSR set to: 1
  2012                           ;main.c: 111:                     state_changed = 1;
  2013  00168E  0E01               	movlw	1
  2014  001690  6FB0               	movwf	_state_changed& (0+255),b
  2015                           
  2016                           ;main.c: 112:                     idle_msg_sent = 1;
  2017  001692  0E01               	movlw	1
  2018  001694  6FAF               	movwf	_idle_msg_sent& (0+255),b
  2019  001696  EF81  F00A         	goto	l5495
  2020  00169A                     l143:
  2021  00169A  FFFF               	dw	65535	; assembler added errata NOP
  2022                           
  2023                           ;main.c: 114:             } else if (state == 1){
  2024  00169C  EF81  F00A         	goto	l5495
  2025  0016A0                     l5541:
  2026  0016A0  FFFF               	dw	65535	; assembler added errata NOP
  2027                           
  2028                           ; BSR set to: 1
  2029  0016A2  05CD               	decf	_state& (0+255),w,b
  2030  0016A4  11CE               	iorwf	(_state+1)& (0+255),w,b
  2031  0016A6  A4D8               	btfss	status,2,c
  2032  0016A8  EF58  F00B         	goto	u6781
  2033  0016AC  EF5B  F00B         	goto	u6780
  2034  0016B0                     u6781:
  2035  0016B0  FFFF               	dw	65535	; assembler added errata NOP
  2036  0016B2  EF64  F00B         	goto	l5545
  2037  0016B6                     u6780:
  2038  0016B6  FFFF               	dw	65535	; assembler added errata NOP
  2039  0016B8                     
  2040                           ; BSR set to: 1
  2041                           ;main.c: 115:                 state = 2;
  2042  0016B8  0E00               	movlw	0
  2043  0016BA  6FCE               	movwf	(_state+1)& (0+255),b
  2044  0016BC  0E02               	movlw	2
  2045  0016BE  6FCD               	movwf	_state& (0+255),b
  2046                           
  2047                           ;main.c: 116:                 state_changed = 1;
  2048  0016C0  0E01               	movlw	1
  2049  0016C2  6FB0               	movwf	_state_changed& (0+255),b
  2050                           
  2051                           ;main.c: 117:             } else if (state == 3){
  2052  0016C4  EF81  F00A         	goto	l5495
  2053  0016C8                     l5545:
  2054  0016C8  FFFF               	dw	65535	; assembler added errata NOP
  2055                           
  2056                           ; BSR set to: 1
  2057  0016CA  0E03               	movlw	3
  2058  0016CC  19CD               	xorwf	_state& (0+255),w,b
  2059  0016CE  11CE               	iorwf	(_state+1)& (0+255),w,b
  2060  0016D0  A4D8               	btfss	status,2,c
  2061  0016D2  EF6D  F00B         	goto	u6791
  2062  0016D6  EF70  F00B         	goto	u6790
  2063  0016DA                     u6791:
  2064  0016DA  FFFF               	dw	65535	; assembler added errata NOP
  2065  0016DC  EFB1  F00B         	goto	l5559
  2066  0016E0                     u6790:
  2067  0016E0  FFFF               	dw	65535	; assembler added errata NOP
  2068  0016E2                     
  2069                           ; BSR set to: 1
  2070                           ;main.c: 118:                 if (timer_done){
  2071  0016E2  51AD               	movf	_timer_done& (0+255),w,b
  2072  0016E4  B4D8               	btfsc	status,2,c
  2073  0016E6  EF77  F00B         	goto	u6801
  2074  0016EA  EF7A  F00B         	goto	u6800
  2075  0016EE                     u6801:
  2076  0016EE  FFFF               	dw	65535	; assembler added errata NOP
  2077  0016F0  EF9A  F00B         	goto	l148
  2078  0016F4                     u6800:
  2079  0016F4  FFFF               	dw	65535	; assembler added errata NOP
  2080  0016F6                     
  2081                           ; BSR set to: 1
  2082                           ;main.c: 119:                     if(check_temperature(get_temperature())){
  2083  0016F6  ECC7  F01F         	call	_get_temperature	;wreg free
  2084  0016FA  C0D4  F0D6         	movff	?_get_temperature,check_temperature@temp_to_be_checked
  2085  0016FE  C0D5  F0D7         	movff	?_get_temperature+1,check_temperature@temp_to_be_checked+1
  2086  001702  ECFF  F038         	call	_check_temperature	;wreg free
  2087  001706  0100               	movlb	0	; () banked
  2088  001708  51D6               	movf	?_check_temperature& (0+255),w,b
  2089  00170A  11D7               	iorwf	(?_check_temperature+1)& (0+255),w,b
  2090  00170C  B4D8               	btfsc	status,2,c
  2091  00170E  EF8B  F00B         	goto	u6811
  2092  001712  EF8E  F00B         	goto	u6810
  2093  001716                     u6811:
  2094  001716  FFFF               	dw	65535	; assembler added errata NOP
  2095  001718  EF4D  F00B         	goto	l143
  2096  00171C                     u6810:
  2097  00171C  FFFF               	dw	65535	; assembler added errata NOP
  2098  00171E                     
  2099                           ; BSR set to: 0
  2100                           ;main.c: 120:                         state = 2;
  2101  00171E  0E00               	movlw	0
  2102  001720  0101               	movlb	1	; () banked
  2103  001722  6FCE               	movwf	(_state+1)& (0+255),b
  2104  001724  0E02               	movlw	2
  2105  001726  6FCD               	movwf	_state& (0+255),b
  2106                           
  2107                           ;main.c: 121:                         state_changed = 1;
  2108  001728  0E01               	movlw	1
  2109  00172A  6FB0               	movwf	_state_changed& (0+255),b
  2110                           
  2111                           ;main.c: 122:                         timer_done = 0;
  2112  00172C  0E00               	movlw	0
  2113  00172E  6FAD               	movwf	_timer_done& (0+255),b
  2114                           
  2115                           ;main.c: 123:                     } else{
  2116  001730  EF81  F00A         	goto	l5495
  2117  001734                     l148:
  2118  001734  FFFF               	dw	65535	; assembler added errata NOP
  2119                           
  2120                           ; BSR set to: 1
  2121                           ;main.c: 128:                     if (T0CONbits.TMR0ON == 0){
  2122  001736  BED5               	btfsc	213,7,c	;volatile
  2123  001738  EFA0  F00B         	goto	u6821
  2124  00173C  EFA3  F00B         	goto	u6820
  2125  001740                     u6821:
  2126  001740  FFFF               	dw	65535	; assembler added errata NOP
  2127  001742  EFA8  F00B         	goto	l5557
  2128  001746                     u6820:
  2129  001746  FFFF               	dw	65535	; assembler added errata NOP
  2130  001748                     
  2131                           ; BSR set to: 1
  2132                           ;main.c: 129:                         wait_for_zero();
  2133  001748  EC57  F033         	call	_wait_for_zero	;wreg free
  2134  00174C                     
  2135                           ;main.c: 130:                         init_timer_0();
  2136  00174C  EC20  F033         	call	_init_timer_0	;wreg free
  2137  001750                     l5557:
  2138  001750  FFFF               	dw	65535	; assembler added errata NOP
  2139                           
  2140                           ;main.c: 132:                     int current_temp = get_temperature();
  2141  001752  ECC7  F01F         	call	_get_temperature	;wreg free
  2142  001756  C0D4  F1A0         	movff	?_get_temperature,main@current_temp
  2143  00175A  C0D5  F1A1         	movff	?_get_temperature+1,main@current_temp+1
  2144  00175E  EF81  F00A         	goto	l5495
  2145  001762                     l5559:
  2146  001762  FFFF               	dw	65535	; assembler added errata NOP
  2147                           
  2148                           ; BSR set to: 1
  2149  001764  0E04               	movlw	4
  2150  001766  19CD               	xorwf	_state& (0+255),w,b
  2151  001768  11CE               	iorwf	(_state+1)& (0+255),w,b
  2152  00176A  A4D8               	btfss	status,2,c
  2153  00176C  EFBA  F00B         	goto	u6831
  2154  001770  EFBD  F00B         	goto	u6830
  2155  001774                     u6831:
  2156  001774  FFFF               	dw	65535	; assembler added errata NOP
  2157  001776  EF59  F00C         	goto	l5581
  2158  00177A                     u6830:
  2159  00177A  FFFF               	dw	65535	; assembler added errata NOP
  2160  00177C                     
  2161                           ; BSR set to: 1
  2162                           ;main.c: 136:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  2163  00177C  0E03               	movlw	3
  2164  00177E  0100               	movlb	0	; () banked
  2165  001780  6FDD               	movwf	??_main& (0+255),b
  2166  001782  0EEB               	movlw	235
  2167  001784                     u7117:
  2168  001784  FFFF               	dw	65535	; errata NOP
  2169  001786  2EE8               	decfsz	wreg,f,c
  2170  001788  D7FD               	bra	u7117
  2171  00178A  2FDD               	decfsz	??_main& (0+255),f,b
  2172  00178C  D7FB               	bra	u7117
  2173  00178E  D000               	nop2	
  2174  001790  F000               	nop	
  2175  001792                     
  2176                           ;main.c: 137:                 if (joint_homed && reach_goal(&joint_stepper, 50)){
  2177  001792  0101               	movlb	1	; () banked
  2178  001794  51A9               	movf	_joint_homed& (0+255),w,b
  2179  001796  11AA               	iorwf	(_joint_homed+1)& (0+255),w,b
  2180  001798  B4D8               	btfsc	status,2,c
  2181  00179A  EFD1  F00B         	goto	u6841
  2182  00179E  EFD4  F00B         	goto	u6840
  2183  0017A2                     u6841:
  2184  0017A2  FFFF               	dw	65535	; assembler added errata NOP
  2185  0017A4  EFEF  F00B         	goto	l5569
  2186  0017A8                     u6840:
  2187  0017A8  FFFF               	dw	65535	; assembler added errata NOP
  2188  0017AA                     
  2189                           ; BSR set to: 1
  2190  0017AA  0EBF               	movlw	low _joint_stepper
  2191  0017AC  6E07               	movwf	reach_goal@stepper_motor^0,c
  2192  0017AE  0E01               	movlw	high _joint_stepper
  2193  0017B0  6E08               	movwf	(reach_goal@stepper_motor+1)^0,c
  2194  0017B2  0E00               	movlw	0
  2195  0017B4  6E0A               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2196  0017B6  0E32               	movlw	50
  2197  0017B8  6E09               	movwf	reach_goal@goal_to_reach^0,c
  2198  0017BA  ECB2  F036         	call	_reach_goal	;wreg free
  2199  0017BE  5007               	movf	?_reach_goal^0,w,c
  2200  0017C0  1008               	iorwf	(?_reach_goal+1)^0,w,c
  2201  0017C2  B4D8               	btfsc	status,2,c
  2202  0017C4  EFE6  F00B         	goto	u6851
  2203  0017C8  EFE9  F00B         	goto	u6850
  2204  0017CC                     u6851:
  2205  0017CC  FFFF               	dw	65535	; assembler added errata NOP
  2206  0017CE  EFEF  F00B         	goto	l5569
  2207  0017D2                     u6850:
  2208  0017D2  FFFF               	dw	65535	; assembler added errata NOP
  2209  0017D4                     
  2210                           ;main.c: 138:                     joint_homed = 0;
  2211  0017D4  0E00               	movlw	0
  2212  0017D6  0101               	movlb	1	; () banked
  2213  0017D8  6FAA               	movwf	(_joint_homed+1)& (0+255),b
  2214  0017DA  0E00               	movlw	0
  2215  0017DC  6FA9               	movwf	_joint_homed& (0+255),b
  2216  0017DE                     l5569:
  2217  0017DE  FFFF               	dw	65535	; assembler added errata NOP
  2218                           
  2219                           ;main.c: 140:                 if (!joint_homed && end_effector_homed && reach_goal(&end_
      +                          effector_stepper, 100)){
  2220  0017E0  0101               	movlb	1	; () banked
  2221  0017E2  51A9               	movf	_joint_homed& (0+255),w,b
  2222  0017E4  11AA               	iorwf	(_joint_homed+1)& (0+255),w,b
  2223  0017E6  A4D8               	btfss	status,2,c
  2224  0017E8  EFF8  F00B         	goto	u6861
  2225  0017EC  EFFB  F00B         	goto	u6860
  2226  0017F0                     u6861:
  2227  0017F0  FFFF               	dw	65535	; assembler added errata NOP
  2228  0017F2  EF21  F00C         	goto	l5577
  2229  0017F6                     u6860:
  2230  0017F6  FFFF               	dw	65535	; assembler added errata NOP
  2231  0017F8                     
  2232                           ; BSR set to: 1
  2233  0017F8  51A7               	movf	_end_effector_homed& (0+255),w,b
  2234  0017FA  11A8               	iorwf	(_end_effector_homed+1)& (0+255),w,b
  2235  0017FC  B4D8               	btfsc	status,2,c
  2236  0017FE  EF03  F00C         	goto	u6871
  2237  001802  EF06  F00C         	goto	u6870
  2238  001806                     u6871:
  2239  001806  FFFF               	dw	65535	; assembler added errata NOP
  2240  001808  EF21  F00C         	goto	l5577
  2241  00180C                     u6870:
  2242  00180C  FFFF               	dw	65535	; assembler added errata NOP
  2243  00180E                     
  2244                           ; BSR set to: 1
  2245  00180E  0EB1               	movlw	low _end_effector_stepper
  2246  001810  6E07               	movwf	reach_goal@stepper_motor^0,c
  2247  001812  0E01               	movlw	high _end_effector_stepper
  2248  001814  6E08               	movwf	(reach_goal@stepper_motor+1)^0,c
  2249  001816  0E00               	movlw	0
  2250  001818  6E0A               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2251  00181A  0E64               	movlw	100
  2252  00181C  6E09               	movwf	reach_goal@goal_to_reach^0,c
  2253  00181E  ECB2  F036         	call	_reach_goal	;wreg free
  2254  001822  5007               	movf	?_reach_goal^0,w,c
  2255  001824  1008               	iorwf	(?_reach_goal+1)^0,w,c
  2256  001826  B4D8               	btfsc	status,2,c
  2257  001828  EF18  F00C         	goto	u6881
  2258  00182C  EF1B  F00C         	goto	u6880
  2259  001830                     u6881:
  2260  001830  FFFF               	dw	65535	; assembler added errata NOP
  2261  001832  EF21  F00C         	goto	l5577
  2262  001836                     u6880:
  2263  001836  FFFF               	dw	65535	; assembler added errata NOP
  2264  001838                     
  2265                           ;main.c: 141:                     end_effector_homed = 0;
  2266  001838  0E00               	movlw	0
  2267  00183A  0101               	movlb	1	; () banked
  2268  00183C  6FA8               	movwf	(_end_effector_homed+1)& (0+255),b
  2269  00183E  0E00               	movlw	0
  2270  001840  6FA7               	movwf	_end_effector_homed& (0+255),b
  2271  001842                     l5577:
  2272  001842  FFFF               	dw	65535	; assembler added errata NOP
  2273                           
  2274                           ;main.c: 143:                 if (!end_effector_homed * !joint_homed){
  2275  001844  0101               	movlb	1	; () banked
  2276  001846  51A7               	movf	_end_effector_homed& (0+255),w,b
  2277  001848  11A8               	iorwf	(_end_effector_homed+1)& (0+255),w,b
  2278  00184A  B4D8               	btfsc	status,2,c
  2279  00184C  EF2A  F00C         	goto	u6891
  2280  001850  EF2E  F00C         	goto	u6890
  2281  001854                     u6891:
  2282  001854  FFFF               	dw	65535	; assembler added errata NOP
  2283  001856  0E01               	movlw	1
  2284  001858  EF30  F00C         	goto	u6900
  2285  00185C                     u6890:
  2286  00185C  FFFF               	dw	65535	; assembler added errata NOP
  2287  00185E  0E00               	movlw	0
  2288  001860                     u6900:
  2289  001860  FFFF               	dw	65535	; assembler added errata NOP
  2290  001862  6E01               	movwf	___wmul@multiplier^0,c
  2291  001864  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2292  001866  51A9               	movf	_joint_homed& (0+255),w,b
  2293  001868  11AA               	iorwf	(_joint_homed+1)& (0+255),w,b
  2294  00186A  B4D8               	btfsc	status,2,c
  2295  00186C  EF3A  F00C         	goto	u6911
  2296  001870  EF3E  F00C         	goto	u6910
  2297  001874                     u6911:
  2298  001874  FFFF               	dw	65535	; assembler added errata NOP
  2299  001876  0E01               	movlw	1
  2300  001878  EF40  F00C         	goto	u6920
  2301  00187C                     u6910:
  2302  00187C  FFFF               	dw	65535	; assembler added errata NOP
  2303  00187E  0E00               	movlw	0
  2304  001880                     u6920:
  2305  001880  FFFF               	dw	65535	; assembler added errata NOP
  2306  001882  6E03               	movwf	___wmul@multiplicand^0,c
  2307  001884  6A04               	clrf	(___wmul@multiplicand+1)^0,c
  2308  001886  EC95  F033         	call	___wmul	;wreg free
  2309  00188A  5001               	movf	?___wmul^0,w,c
  2310  00188C  1002               	iorwf	(?___wmul+1)^0,w,c
  2311  00188E  B4D8               	btfsc	status,2,c
  2312  001890  EF4C  F00C         	goto	u6931
  2313  001894  EF4F  F00C         	goto	u6930
  2314  001898                     u6931:
  2315  001898  FFFF               	dw	65535	; assembler added errata NOP
  2316  00189A  EF81  F00A         	goto	l5495
  2317  00189E                     u6930:
  2318  00189E  FFFF               	dw	65535	; assembler added errata NOP
  2319  0018A0                     
  2320                           ;main.c: 144:                     state = 5;
  2321  0018A0  0E00               	movlw	0
  2322  0018A2  0101               	movlb	1	; () banked
  2323  0018A4  6FCE               	movwf	(_state+1)& (0+255),b
  2324  0018A6  0E05               	movlw	5
  2325  0018A8  6FCD               	movwf	_state& (0+255),b
  2326                           
  2327                           ;main.c: 145:                     state_changed = 1;
  2328  0018AA  0E01               	movlw	1
  2329  0018AC  6FB0               	movwf	_state_changed& (0+255),b
  2330  0018AE  EF81  F00A         	goto	l5495
  2331  0018B2                     l5581:
  2332  0018B2  FFFF               	dw	65535	; assembler added errata NOP
  2333                           
  2334                           ; BSR set to: 1
  2335  0018B4  0E05               	movlw	5
  2336  0018B6  19CD               	xorwf	_state& (0+255),w,b
  2337  0018B8  11CE               	iorwf	(_state+1)& (0+255),w,b
  2338  0018BA  A4D8               	btfss	status,2,c
  2339  0018BC  EF62  F00C         	goto	u6941
  2340  0018C0  EF65  F00C         	goto	u6940
  2341  0018C4                     u6941:
  2342  0018C4  FFFF               	dw	65535	; assembler added errata NOP
  2343  0018C6  EFCD  F00C         	goto	l5601
  2344  0018CA                     u6940:
  2345  0018CA  FFFF               	dw	65535	; assembler added errata NOP
  2346  0018CC                     
  2347                           ; BSR set to: 1
  2348                           ;main.c: 148:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  2349  0018CC  0E03               	movlw	3
  2350  0018CE  0100               	movlb	0	; () banked
  2351  0018D0  6FDD               	movwf	??_main& (0+255),b
  2352  0018D2  0EEB               	movlw	235
  2353  0018D4                     u7127:
  2354  0018D4  FFFF               	dw	65535	; errata NOP
  2355  0018D6  2EE8               	decfsz	wreg,f,c
  2356  0018D8  D7FD               	bra	u7127
  2357  0018DA  2FDD               	decfsz	??_main& (0+255),f,b
  2358  0018DC  D7FB               	bra	u7127
  2359  0018DE  D000               	nop2	
  2360  0018E0  F000               	nop	
  2361  0018E2                     
  2362                           ;main.c: 149:                 if (reach_goal(&joint_stepper, 100)) {
  2363  0018E2  0EBF               	movlw	low _joint_stepper
  2364  0018E4  6E07               	movwf	reach_goal@stepper_motor^0,c
  2365  0018E6  0E01               	movlw	high _joint_stepper
  2366  0018E8  6E08               	movwf	(reach_goal@stepper_motor+1)^0,c
  2367  0018EA  0E00               	movlw	0
  2368  0018EC  6E0A               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2369  0018EE  0E64               	movlw	100
  2370  0018F0  6E09               	movwf	reach_goal@goal_to_reach^0,c
  2371  0018F2  ECB2  F036         	call	_reach_goal	;wreg free
  2372  0018F6  5007               	movf	?_reach_goal^0,w,c
  2373  0018F8  1008               	iorwf	(?_reach_goal+1)^0,w,c
  2374  0018FA  B4D8               	btfsc	status,2,c
  2375  0018FC  EF82  F00C         	goto	u6951
  2376  001900  EF85  F00C         	goto	u6950
  2377  001904                     u6951:
  2378  001904  FFFF               	dw	65535	; assembler added errata NOP
  2379  001906  EF8F  F00C         	goto	l5591
  2380  00190A                     u6950:
  2381  00190A  FFFF               	dw	65535	; assembler added errata NOP
  2382  00190C                     
  2383                           ;main.c: 150:                     change_direction(&joint_stepper);
  2384  00190C  0EBF               	movlw	low _joint_stepper
  2385  00190E  6E01               	movwf	change_direction@stepper_motor^0,c
  2386  001910  0E01               	movlw	high _joint_stepper
  2387  001912  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2388  001914  ECDA  F033         	call	_change_direction	;wreg free
  2389  001918                     
  2390                           ;main.c: 151:                     mix_counter++;
  2391  001918  0101               	movlb	1	; () banked
  2392  00191A  4BAB               	infsnz	_mix_counter& (0+255),f,b
  2393  00191C  2BAC               	incf	(_mix_counter+1)& (0+255),f,b
  2394  00191E                     l5591:
  2395  00191E  FFFF               	dw	65535	; assembler added errata NOP
  2396                           
  2397                           ;main.c: 154:                 if (mix_counter >= 20){
  2398  001920  0101               	movlb	1	; () banked
  2399  001922  BFAC               	btfsc	(_mix_counter+1)& (0+255),7,b
  2400  001924  EF9D  F00C         	goto	u6961
  2401  001928  51AC               	movf	(_mix_counter+1)& (0+255),w,b
  2402  00192A  E10A               	bnz	u6960
  2403  00192C  0E14               	movlw	20
  2404  00192E  5DAB               	subwf	_mix_counter& (0+255),w,b
  2405  001930  A0D8               	btfss	status,0,c
  2406  001932  EF9D  F00C         	goto	u6961
  2407  001936  EFA0  F00C         	goto	u6960
  2408  00193A                     u6961:
  2409  00193A  FFFF               	dw	65535	; assembler added errata NOP
  2410  00193C  EF81  F00A         	goto	l5495
  2411  001940                     u6960:
  2412  001940  FFFF               	dw	65535	; assembler added errata NOP
  2413  001942                     
  2414                           ; BSR set to: 1
  2415                           ;main.c: 155:                     state = 6;
  2416  001942  0E00               	movlw	0
  2417  001944  6FCE               	movwf	(_state+1)& (0+255),b
  2418  001946  0E06               	movlw	6
  2419  001948  6FCD               	movwf	_state& (0+255),b
  2420                           
  2421                           ;main.c: 156:                     mix_counter = 0;
  2422  00194A  0E00               	movlw	0
  2423  00194C  6FAC               	movwf	(_mix_counter+1)& (0+255),b
  2424  00194E  0E00               	movlw	0
  2425  001950  6FAB               	movwf	_mix_counter& (0+255),b
  2426  001952                     
  2427                           ; BSR set to: 1
  2428                           ;main.c: 157:                     init_stepper(&joint_stepper, 0, 0, 1, hex_joint_values
      +                          );
  2429  001952  0EBF               	movlw	low _joint_stepper
  2430  001954  6E01               	movwf	init_stepper@stepper_motor^0,c
  2431  001956  0E01               	movlw	high _joint_stepper
  2432  001958  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  2433  00195A  0E00               	movlw	0
  2434  00195C  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  2435  00195E  0E00               	movlw	0
  2436  001960  6E03               	movwf	init_stepper@current_coil^0,c
  2437  001962  0E00               	movlw	0
  2438  001964  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  2439  001966  0E00               	movlw	0
  2440  001968  6E05               	movwf	init_stepper@step_counter^0,c
  2441  00196A  0E00               	movlw	0
  2442  00196C  6E08               	movwf	(init_stepper@direction+1)^0,c
  2443  00196E  0E01               	movlw	1
  2444  001970  6E07               	movwf	init_stepper@direction^0,c
  2445  001972  0EE7               	movlw	low _hex_joint_values
  2446  001974  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  2447  001976  0E01               	movlw	high _hex_joint_values
  2448  001978  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  2449  00197A  EC71  F037         	call	_init_stepper	;wreg free
  2450  00197E                     
  2451                           ;main.c: 158:                     change_direction(&joint_stepper);
  2452  00197E  0EBF               	movlw	low _joint_stepper
  2453  001980  6E01               	movwf	change_direction@stepper_motor^0,c
  2454  001982  0E01               	movlw	high _joint_stepper
  2455  001984  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2456  001986  ECDA  F033         	call	_change_direction	;wreg free
  2457  00198A                     
  2458                           ;main.c: 159:                     change_direction(&end_effector_stepper);
  2459  00198A  0EB1               	movlw	low _end_effector_stepper
  2460  00198C  6E01               	movwf	change_direction@stepper_motor^0,c
  2461  00198E  0E01               	movlw	high _end_effector_stepper
  2462  001990  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2463  001992  ECDA  F033         	call	_change_direction	;wreg free
  2464  001996  EF81  F00A         	goto	l5495
  2465  00199A                     l5601:
  2466  00199A  FFFF               	dw	65535	; assembler added errata NOP
  2467                           
  2468                           ; BSR set to: 1
  2469  00199C  0E06               	movlw	6
  2470  00199E  19CD               	xorwf	_state& (0+255),w,b
  2471  0019A0  11CE               	iorwf	(_state+1)& (0+255),w,b
  2472  0019A2  A4D8               	btfss	status,2,c
  2473  0019A4  EFD6  F00C         	goto	u6971
  2474  0019A8  EFD9  F00C         	goto	u6970
  2475  0019AC                     u6971:
  2476  0019AC  FFFF               	dw	65535	; assembler added errata NOP
  2477  0019AE  EF5A  F00D         	goto	l5623
  2478  0019B2                     u6970:
  2479  0019B2  FFFF               	dw	65535	; assembler added errata NOP
  2480  0019B4                     
  2481                           ; BSR set to: 1
  2482                           ;main.c: 162:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  2483  0019B4  0E03               	movlw	3
  2484  0019B6  0100               	movlb	0	; () banked
  2485  0019B8  6FDD               	movwf	??_main& (0+255),b
  2486  0019BA  0EEB               	movlw	235
  2487  0019BC                     u7137:
  2488  0019BC  FFFF               	dw	65535	; errata NOP
  2489  0019BE  2EE8               	decfsz	wreg,f,c
  2490  0019C0  D7FD               	bra	u7137
  2491  0019C2  2FDD               	decfsz	??_main& (0+255),f,b
  2492  0019C4  D7FB               	bra	u7137
  2493  0019C6  D000               	nop2	
  2494  0019C8  F000               	nop	
  2495  0019CA                     
  2496                           ;main.c: 164:                 if (!end_effector_homed && reach_goal(&end_effector_steppe
      +                          r, 100)){
  2497  0019CA  0101               	movlb	1	; () banked
  2498  0019CC  51A7               	movf	_end_effector_homed& (0+255),w,b
  2499  0019CE  11A8               	iorwf	(_end_effector_homed+1)& (0+255),w,b
  2500  0019D0  A4D8               	btfss	status,2,c
  2501  0019D2  EFED  F00C         	goto	u6981
  2502  0019D6  EFF0  F00C         	goto	u6980
  2503  0019DA                     u6981:
  2504  0019DA  FFFF               	dw	65535	; assembler added errata NOP
  2505  0019DC  EF0B  F00D         	goto	l5611
  2506  0019E0                     u6980:
  2507  0019E0  FFFF               	dw	65535	; assembler added errata NOP
  2508  0019E2                     
  2509                           ; BSR set to: 1
  2510  0019E2  0EB1               	movlw	low _end_effector_stepper
  2511  0019E4  6E07               	movwf	reach_goal@stepper_motor^0,c
  2512  0019E6  0E01               	movlw	high _end_effector_stepper
  2513  0019E8  6E08               	movwf	(reach_goal@stepper_motor+1)^0,c
  2514  0019EA  0E00               	movlw	0
  2515  0019EC  6E0A               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2516  0019EE  0E64               	movlw	100
  2517  0019F0  6E09               	movwf	reach_goal@goal_to_reach^0,c
  2518  0019F2  ECB2  F036         	call	_reach_goal	;wreg free
  2519  0019F6  5007               	movf	?_reach_goal^0,w,c
  2520  0019F8  1008               	iorwf	(?_reach_goal+1)^0,w,c
  2521  0019FA  B4D8               	btfsc	status,2,c
  2522  0019FC  EF02  F00D         	goto	u6991
  2523  001A00  EF05  F00D         	goto	u6990
  2524  001A04                     u6991:
  2525  001A04  FFFF               	dw	65535	; assembler added errata NOP
  2526  001A06  EF0B  F00D         	goto	l5611
  2527  001A0A                     u6990:
  2528  001A0A  FFFF               	dw	65535	; assembler added errata NOP
  2529  001A0C                     
  2530                           ;main.c: 165:                     end_effector_homed = 1;
  2531  001A0C  0E00               	movlw	0
  2532  001A0E  0101               	movlb	1	; () banked
  2533  001A10  6FA8               	movwf	(_end_effector_homed+1)& (0+255),b
  2534  001A12  0E01               	movlw	1
  2535  001A14  6FA7               	movwf	_end_effector_homed& (0+255),b
  2536  001A16                     l5611:
  2537  001A16  FFFF               	dw	65535	; assembler added errata NOP
  2538                           
  2539                           ;main.c: 168:                 if (end_effector_homed && !joint_homed && reach_goal(&join
      +                          t_stepper, 50)){
  2540  001A18  0101               	movlb	1	; () banked
  2541  001A1A  51A7               	movf	_end_effector_homed& (0+255),w,b
  2542  001A1C  11A8               	iorwf	(_end_effector_homed+1)& (0+255),w,b
  2543  001A1E  B4D8               	btfsc	status,2,c
  2544  001A20  EF14  F00D         	goto	u7001
  2545  001A24  EF17  F00D         	goto	u7000
  2546  001A28                     u7001:
  2547  001A28  FFFF               	dw	65535	; assembler added errata NOP
  2548  001A2A  EF3D  F00D         	goto	l5619
  2549  001A2E                     u7000:
  2550  001A2E  FFFF               	dw	65535	; assembler added errata NOP
  2551  001A30                     
  2552                           ; BSR set to: 1
  2553  001A30  51A9               	movf	_joint_homed& (0+255),w,b
  2554  001A32  11AA               	iorwf	(_joint_homed+1)& (0+255),w,b
  2555  001A34  A4D8               	btfss	status,2,c
  2556  001A36  EF1F  F00D         	goto	u7011
  2557  001A3A  EF22  F00D         	goto	u7010
  2558  001A3E                     u7011:
  2559  001A3E  FFFF               	dw	65535	; assembler added errata NOP
  2560  001A40  EF3D  F00D         	goto	l5619
  2561  001A44                     u7010:
  2562  001A44  FFFF               	dw	65535	; assembler added errata NOP
  2563  001A46                     
  2564                           ; BSR set to: 1
  2565  001A46  0EBF               	movlw	low _joint_stepper
  2566  001A48  6E07               	movwf	reach_goal@stepper_motor^0,c
  2567  001A4A  0E01               	movlw	high _joint_stepper
  2568  001A4C  6E08               	movwf	(reach_goal@stepper_motor+1)^0,c
  2569  001A4E  0E00               	movlw	0
  2570  001A50  6E0A               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2571  001A52  0E32               	movlw	50
  2572  001A54  6E09               	movwf	reach_goal@goal_to_reach^0,c
  2573  001A56  ECB2  F036         	call	_reach_goal	;wreg free
  2574  001A5A  5007               	movf	?_reach_goal^0,w,c
  2575  001A5C  1008               	iorwf	(?_reach_goal+1)^0,w,c
  2576  001A5E  B4D8               	btfsc	status,2,c
  2577  001A60  EF34  F00D         	goto	u7021
  2578  001A64  EF37  F00D         	goto	u7020
  2579  001A68                     u7021:
  2580  001A68  FFFF               	dw	65535	; assembler added errata NOP
  2581  001A6A  EF3D  F00D         	goto	l5619
  2582  001A6E                     u7020:
  2583  001A6E  FFFF               	dw	65535	; assembler added errata NOP
  2584  001A70                     
  2585                           ;main.c: 169:                     joint_homed = 1;
  2586  001A70  0E00               	movlw	0
  2587  001A72  0101               	movlb	1	; () banked
  2588  001A74  6FAA               	movwf	(_joint_homed+1)& (0+255),b
  2589  001A76  0E01               	movlw	1
  2590  001A78  6FA9               	movwf	_joint_homed& (0+255),b
  2591  001A7A                     l5619:
  2592  001A7A  FFFF               	dw	65535	; assembler added errata NOP
  2593                           
  2594                           ;main.c: 172:                 if (end_effector_homed * joint_homed){
  2595  001A7C  C1A7  F001         	movff	_end_effector_homed,___wmul@multiplier
  2596  001A80  C1A8  F002         	movff	_end_effector_homed+1,___wmul@multiplier+1
  2597  001A84  C1A9  F003         	movff	_joint_homed,___wmul@multiplicand
  2598  001A88  C1AA  F004         	movff	_joint_homed+1,___wmul@multiplicand+1
  2599  001A8C  EC95  F033         	call	___wmul	;wreg free
  2600  001A90  5001               	movf	?___wmul^0,w,c
  2601  001A92  1002               	iorwf	(?___wmul+1)^0,w,c
  2602  001A94  B4D8               	btfsc	status,2,c
  2603  001A96  EF4F  F00D         	goto	u7031
  2604  001A9A  EF52  F00D         	goto	u7030
  2605  001A9E                     u7031:
  2606  001A9E  FFFF               	dw	65535	; assembler added errata NOP
  2607  001AA0  EF81  F00A         	goto	l5495
  2608  001AA4                     u7030:
  2609  001AA4  FFFF               	dw	65535	; assembler added errata NOP
  2610  001AA6                     
  2611                           ;main.c: 173:                     state = 2;
  2612  001AA6  0E00               	movlw	0
  2613  001AA8  0101               	movlb	1	; () banked
  2614  001AAA  6FCE               	movwf	(_state+1)& (0+255),b
  2615  001AAC  0E02               	movlw	2
  2616  001AAE  6FCD               	movwf	_state& (0+255),b
  2617  001AB0  EF81  F00A         	goto	l5495
  2618  001AB4                     l5623:
  2619  001AB4  FFFF               	dw	65535	; assembler added errata NOP
  2620                           
  2621                           ; BSR set to: 1
  2622  001AB6  0E07               	movlw	7
  2623  001AB8  19CD               	xorwf	_state& (0+255),w,b
  2624  001ABA  11CE               	iorwf	(_state+1)& (0+255),w,b
  2625  001ABC  A4D8               	btfss	status,2,c
  2626  001ABE  EF63  F00D         	goto	u7041
  2627  001AC2  EF66  F00D         	goto	u7040
  2628  001AC6                     u7041:
  2629  001AC6  FFFF               	dw	65535	; assembler added errata NOP
  2630  001AC8  EF4D  F00B         	goto	l143
  2631  001ACC                     u7040:
  2632  001ACC  FFFF               	dw	65535	; assembler added errata NOP
  2633  001ACE                     
  2634                           ; BSR set to: 1
  2635                           ;main.c: 176:                 if (timer_done){
  2636  001ACE  51AD               	movf	_timer_done& (0+255),w,b
  2637  001AD0  B4D8               	btfsc	status,2,c
  2638  001AD2  EF6D  F00D         	goto	u7051
  2639  001AD6  EF70  F00D         	goto	u7050
  2640  001ADA                     u7051:
  2641  001ADA  FFFF               	dw	65535	; assembler added errata NOP
  2642  001ADC  EF81  F00D         	goto	l169
  2643  001AE0                     u7050:
  2644  001AE0  FFFF               	dw	65535	; assembler added errata NOP
  2645  001AE2                     
  2646                           ; BSR set to: 1
  2647                           ;main.c: 177:                     state_changed = 1;
  2648  001AE2  0E01               	movlw	1
  2649  001AE4  6FB0               	movwf	_state_changed& (0+255),b
  2650                           
  2651                           ;main.c: 178:                     state = 2;
  2652  001AE6  0E00               	movlw	0
  2653  001AE8  6FCE               	movwf	(_state+1)& (0+255),b
  2654  001AEA  0E02               	movlw	2
  2655  001AEC  6FCD               	movwf	_state& (0+255),b
  2656                           
  2657                           ;main.c: 179:                     move_to_trash = 1;
  2658  001AEE  0E00               	movlw	0
  2659  001AF0  6FA4               	movwf	(_move_to_trash+1)& (0+255),b
  2660  001AF2  0E01               	movlw	1
  2661  001AF4  6FA3               	movwf	_move_to_trash& (0+255),b
  2662                           
  2663                           ;main.c: 180:                     trash_counter = 0;
  2664  001AF6  0E00               	movlw	0
  2665  001AF8  6FA6               	movwf	(_trash_counter+1)& (0+255),b
  2666  001AFA  0E00               	movlw	0
  2667  001AFC  6FA5               	movwf	_trash_counter& (0+255),b
  2668                           
  2669                           ;main.c: 181:                 } else {
  2670  001AFE  EF81  F00A         	goto	l5495
  2671  001B02                     l169:
  2672  001B02  FFFF               	dw	65535	; assembler added errata NOP
  2673                           
  2674                           ; BSR set to: 1
  2675                           ;main.c: 182:                     if (T0CONbits.TMR0ON == 0){
  2676  001B04  BED5               	btfsc	213,7,c	;volatile
  2677  001B06  EF87  F00D         	goto	u7061
  2678  001B0A  EF8A  F00D         	goto	u7060
  2679  001B0E                     u7061:
  2680  001B0E  FFFF               	dw	65535	; assembler added errata NOP
  2681  001B10  EF4D  F00B         	goto	l143
  2682  001B14                     u7060:
  2683  001B14  FFFF               	dw	65535	; assembler added errata NOP
  2684  001B16                     
  2685                           ; BSR set to: 1
  2686                           ;main.c: 183:                         init_timer_0();
  2687  001B16  EC20  F033         	call	_init_timer_0	;wreg free
  2688  001B1A  EF81  F00A         	goto	l5495
  2689  001B1E  EF3B  F000         	goto	start
  2690  001B22                     __end_of_main:
  2691                           	callstack 0
  2692                           
  2693 ;; *************** function _wait_for_zero *****************
  2694 ;; Defined at:
  2695 ;;		line 28 in file "oven.c"
  2696 ;; Parameters:    Size  Location     Type
  2697 ;;		None
  2698 ;; Auto vars:     Size  Location     Type
  2699 ;;		None
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  1    wreg      void 
  2702 ;; Registers used:
  2703 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2709 ;;      Params:         0       0       0       0       0       0       0
  2710 ;;      Locals:         0       0       0       0       0       0       0
  2711 ;;      Temps:          0       0       0       0       0       0       0
  2712 ;;      Totals:         0       0       0       0       0       0       0
  2713 ;;Total ram usage:        0 bytes
  2714 ;; Hardware stack levels used:    1
  2715 ;; Hardware stack levels required when called:    3
  2716 ;; This function calls:
  2717 ;;		_get_temperature
  2718 ;; This function is called by:
  2719 ;;		_main
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723                           	psect	text1
  2724  0066AE                     __ptext1:
  2725                           	callstack 0
  2726  0066AE                     _wait_for_zero:
  2727                           	callstack 0
  2728  0066AE  FFFF               	dw	65535	; assembler added errata NOP
  2729  0066B0                     l365:
  2730  0066B0  FFFF               	dw	65535	; assembler added errata NOP
  2731  0066B2                     
  2732                           ;oven.c: 30:         if (get_temperature() == -55){
  2733  0066B2  ECC7  F01F         	call	_get_temperature	;wreg free
  2734  0066B6  0EC9               	movlw	201
  2735  0066B8  0100               	movlb	0	; () banked
  2736  0066BA  19D4               	xorwf	?_get_temperature& (0+255),w,b
  2737  0066BC  E106               	bnz	u6661
  2738  0066BE  29D5               	incf	(?_get_temperature+1)& (0+255),w,b
  2739  0066C0  A4D8               	btfss	status,2,c
  2740  0066C2  EF65  F033         	goto	u6661
  2741  0066C6  EF68  F033         	goto	u6660
  2742  0066CA                     u6661:
  2743  0066CA  FFFF               	dw	65535	; assembler added errata NOP
  2744  0066CC  EF58  F033         	goto	l365
  2745  0066D0                     u6660:
  2746  0066D0  FFFF               	dw	65535	; assembler added errata NOP
  2747  0066D2                     
  2748                           ; BSR set to: 0
  2749  0066D2  0012               	return		;funcret
  2750  0066D4  FFFF               	dw	65535	; errata NOP
  2751  0066D6                     __end_of_wait_for_zero:
  2752                           	callstack 0
  2753                           
  2754 ;; *************** function _get_temperature *****************
  2755 ;; Defined at:
  2756 ;;		line 22 in file "oven.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;		None
  2759 ;; Auto vars:     Size  Location     Type
  2760 ;;		None
  2761 ;; Return value:  Size  Location     Type
  2762 ;;                  2   28[BANK0 ] int 
  2763 ;; Registers used:
  2764 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2765 ;; Tracked objects:
  2766 ;;		On entry : 0/0
  2767 ;;		On exit  : 0/0
  2768 ;;		Unchanged: 0/0
  2769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2770 ;;      Params:         0       2       0       0       0       0       0
  2771 ;;      Locals:         0       0       0       0       0       0       0
  2772 ;;      Temps:          0       0       0       0       0       0       0
  2773 ;;      Totals:         0       2       0       0       0       0       0
  2774 ;;Total ram usage:        2 bytes
  2775 ;; Hardware stack levels used:    1
  2776 ;; Hardware stack levels required when called:    2
  2777 ;; This function calls:
  2778 ;;		___flmul
  2779 ;;		___fltol
  2780 ;;		___xxtofl
  2781 ;; This function is called by:
  2782 ;;		_main
  2783 ;;		_wait_for_zero
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786                           
  2787                           	psect	text2
  2788  003F8E                     __ptext2:
  2789                           	callstack 0
  2790  003F8E                     _get_temperature:
  2791                           	callstack 0
  2792  003F8E  FFFF               	dw	65535	; assembler added errata NOP
  2793  003F90                     
  2794                           ;oven.c: 23:     ADCON0bits.GO = 1;
  2795  003F90  84C2               	bsf	194,2,c	;volatile
  2796  003F92                     l359:
  2797  003F92  FFFF               	dw	65535	; assembler added errata NOP
  2798  003F94  B4C2               	btfsc	194,2,c	;volatile
  2799  003F96  EFCF  F01F         	goto	u6361
  2800  003F9A  EFD2  F01F         	goto	u6360
  2801  003F9E                     u6361:
  2802  003F9E  FFFF               	dw	65535	; assembler added errata NOP
  2803  003FA0  EFC9  F01F         	goto	l359
  2804  003FA4                     u6360:
  2805  003FA4  FFFF               	dw	65535	; assembler added errata NOP
  2806  003FA6                     
  2807                           ;oven.c: 25:     return (int) (ADRESH * 0.25) + -55;
  2808  003FA6  0E00               	movlw	0
  2809  003FA8  6E31               	movwf	___flmul@a^0,c
  2810  003FAA  0E00               	movlw	0
  2811  003FAC  6E32               	movwf	(___flmul@a+1)^0,c
  2812  003FAE  0E80               	movlw	128
  2813  003FB0  6E33               	movwf	(___flmul@a+2)^0,c
  2814  003FB2  0E3E               	movlw	62
  2815  003FB4  6E34               	movwf	(___flmul@a+3)^0,c
  2816  003FB6  50C4               	movf	196,w,c	;volatile
  2817  003FB8  6E1F               	movwf	___xxtofl@val^0,c
  2818  003FBA  6A20               	clrf	(___xxtofl@val+1)^0,c
  2819  003FBC  6A21               	clrf	(___xxtofl@val+2)^0,c
  2820  003FBE  6A22               	clrf	(___xxtofl@val+3)^0,c
  2821  003FC0  0E01               	movlw	1
  2822  003FC2  EC20  F01C         	call	___xxtofl
  2823  003FC6  C01F  F02D         	movff	?___xxtofl,___flmul@b
  2824  003FCA  C020  F02E         	movff	?___xxtofl+1,___flmul@b+1
  2825  003FCE  C021  F02F         	movff	?___xxtofl+2,___flmul@b+2
  2826  003FD2  C022  F030         	movff	?___xxtofl+3,___flmul@b+3
  2827  003FD6  EC65  F010         	call	___flmul	;wreg free
  2828  003FDA  C02D  F0CA         	movff	?___flmul,___fltol@f1
  2829  003FDE  C02E  F0CB         	movff	?___flmul+1,___fltol@f1+1
  2830  003FE2  C02F  F0CC         	movff	?___flmul+2,___fltol@f1+2
  2831  003FE6  C030  F0CD         	movff	?___flmul+3,___fltol@f1+3
  2832  003FEA  EC59  F03D         	call	___fltol	;wreg free
  2833  003FEE  0EC9               	movlw	201
  2834  003FF0  0100               	movlb	0	; () banked
  2835  003FF2  25CA               	addwf	?___fltol& (0+255),w,b
  2836  003FF4  6FD4               	movwf	?_get_temperature& (0+255),b
  2837  003FF6  0EFF               	movlw	255
  2838  003FF8  21CB               	addwfc	(?___fltol+1)& (0+255),w,b
  2839  003FFA  6FD5               	movwf	(?_get_temperature+1)& (0+255),b
  2840  003FFC                     
  2841                           ; BSR set to: 0
  2842  003FFC  0012               	return		;funcret
  2843  003FFE  FFFF               	dw	65535	; errata NOP
  2844  004000                     __end_of_get_temperature:
  2845                           	callstack 0
  2846                           
  2847 ;; *************** function _state_translator_micro_to_fpga *****************
  2848 ;; Defined at:
  2849 ;;		line 20 in file "utils.c"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;  state           2    0[COMRAM] PTR int 
  2852 ;;		 -> state(2), 
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;  state_machin    1    4[COMRAM] unsigned char 
  2855 ;; Return value:  Size  Location     Type
  2856 ;;                  1    wreg      unsigned char 
  2857 ;; Registers used:
  2858 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2864 ;;      Params:         2       0       0       0       0       0       0
  2865 ;;      Locals:         1       0       0       0       0       0       0
  2866 ;;      Temps:          2       0       0       0       0       0       0
  2867 ;;      Totals:         5       0       0       0       0       0       0
  2868 ;;Total ram usage:        5 bytes
  2869 ;; Hardware stack levels used:    1
  2870 ;; Hardware stack levels required when called:    1
  2871 ;; This function calls:
  2872 ;;		Nothing
  2873 ;; This function is called by:
  2874 ;;		_main
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           
  2878                           	psect	text3
  2879  006B58                     __ptext3:
  2880                           	callstack 0
  2881  006B58                     _state_translator_micro_to_fpga:
  2882                           	callstack 0
  2883  006B58  FFFF               	dw	65535	; assembler added errata NOP
  2884  006B5A                     
  2885                           ;utils.c: 21:     unsigned char state_machine_code;;utils.c: 22:     if (*state == 2){
  2886  006B5A  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  2887  006B5E  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  2888  006B62  0E02               	movlw	2
  2889  006B64  18DE               	xorwf	postinc2,w,c
  2890  006B66  10DE               	iorwf	postinc2,w,c
  2891  006B68  A4D8               	btfss	status,2,c
  2892  006B6A  EFB9  F035         	goto	u6621
  2893  006B6E  EFBC  F035         	goto	u6620
  2894  006B72                     u6621:
  2895  006B72  FFFF               	dw	65535	; assembler added errata NOP
  2896  006B74  EFC1  F035         	goto	l5385
  2897  006B78                     u6620:
  2898  006B78  FFFF               	dw	65535	; assembler added errata NOP
  2899  006B7A                     
  2900                           ;utils.c: 23:         state_machine_code = 'H';
  2901  006B7A  0E48               	movlw	72
  2902  006B7C  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  2903                           
  2904                           ;utils.c: 24:     } else if (*state == 0) {
  2905  006B7E  EFD8  F035         	goto	l254
  2906  006B82                     l5385:
  2907  006B82  FFFF               	dw	65535	; assembler added errata NOP
  2908  006B84  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  2909  006B88  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  2910  006B8C  50DE               	movf	postinc2,w,c
  2911  006B8E  10DE               	iorwf	postinc2,w,c
  2912  006B90  A4D8               	btfss	status,2,c
  2913  006B92  EFCD  F035         	goto	u6631
  2914  006B96  EFD0  F035         	goto	u6630
  2915  006B9A                     u6631:
  2916  006B9A  FFFF               	dw	65535	; assembler added errata NOP
  2917  006B9C  EFD5  F035         	goto	l5389
  2918  006BA0                     u6630:
  2919  006BA0  FFFF               	dw	65535	; assembler added errata NOP
  2920  006BA2                     
  2921                           ;utils.c: 25:         state_machine_code = 'E';
  2922  006BA2  0E45               	movlw	69
  2923  006BA4  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  2924                           
  2925                           ;utils.c: 26:     } else {
  2926  006BA6  EFD8  F035         	goto	l254
  2927  006BAA                     l5389:
  2928  006BAA  FFFF               	dw	65535	; assembler added errata NOP
  2929                           
  2930                           ;utils.c: 27:         state_machine_code = 'P';
  2931  006BAC  0E50               	movlw	80
  2932  006BAE  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  2933  006BB0                     l254:
  2934  006BB0  FFFF               	dw	65535	; assembler added errata NOP
  2935                           
  2936                           ;utils.c: 29:     return state_machine_code;
  2937  006BB2  5005               	movf	state_translator_micro_to_fpga@state_machine_code^0,w,c
  2938  006BB4  0012               	return		;funcret
  2939  006BB6  FFFF               	dw	65535	; errata NOP
  2940  006BB8                     __end_of_state_translator_micro_to_fpga:
  2941                           	callstack 0
  2942                           
  2943 ;; *************** function _state_translator_fpga_to_micro *****************
  2944 ;; Defined at:
  2945 ;;		line 2 in file "utils.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;  state_machin    1    wreg     unsigned char 
  2948 ;;  state           2    2[COMRAM] PTR int 
  2949 ;;		 -> state(2), 
  2950 ;; Auto vars:     Size  Location     Type
  2951 ;;  state_machin    1    4[COMRAM] unsigned char 
  2952 ;; Return value:  Size  Location     Type
  2953 ;;                  1    wreg      void 
  2954 ;; Registers used:
  2955 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2956 ;; Tracked objects:
  2957 ;;		On entry : 0/0
  2958 ;;		On exit  : 0/0
  2959 ;;		Unchanged: 0/0
  2960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2961 ;;      Params:         2       0       0       0       0       0       0
  2962 ;;      Locals:         1       0       0       0       0       0       0
  2963 ;;      Temps:          0       0       0       0       0       0       0
  2964 ;;      Totals:         3       0       0       0       0       0       0
  2965 ;;Total ram usage:        3 bytes
  2966 ;; Hardware stack levels used:    1
  2967 ;; Hardware stack levels required when called:    3
  2968 ;; This function calls:
  2969 ;;		_lcd_dat
  2970 ;; This function is called by:
  2971 ;;		_main
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           	psect	text4
  2976  00767C                     __ptext4:
  2977                           	callstack 0
  2978  00767C                     _state_translator_fpga_to_micro:
  2979                           	callstack 0
  2980  00767C  FFFF               	dw	65535	; assembler added errata NOP
  2981                           
  2982                           ;incstack = 0
  2983                           ;state_translator_fpga_to_micro@state_machine_code stored from wreg
  2984  00767E  6E05               	movwf	state_translator_fpga_to_micro@state_machine_code^0,c
  2985  007680                     
  2986                           ;utils.c: 3:     lcd_dat(state_machine_code);
  2987  007680  5005               	movf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  2988  007682  EC80  F033         	call	_lcd_dat
  2989  007686                     
  2990                           ;utils.c: 4:     if (state_machine_code == 'A'){
  2991  007686  0E41               	movlw	65
  2992  007688  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  2993  00768A  A4D8               	btfss	status,2,c
  2994  00768C  EF4A  F03B         	goto	u6571
  2995  007690  EF4D  F03B         	goto	u6570
  2996  007694                     u6571:
  2997  007694  FFFF               	dw	65535	; assembler added errata NOP
  2998  007696  EF58  F03B         	goto	l5361
  2999  00769A                     u6570:
  3000  00769A  FFFF               	dw	65535	; assembler added errata NOP
  3001  00769C                     
  3002                           ;utils.c: 5:         *state = 1;
  3003  00769C  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3004  0076A0  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3005  0076A4  0E01               	movlw	1
  3006  0076A6  6EDE               	movwf	postinc2,c
  3007  0076A8  0E00               	movlw	0
  3008  0076AA  6EDD               	movwf	postdec2,c
  3009                           
  3010                           ;utils.c: 6:     } else if (state_machine_code == 'B'){
  3011  0076AC  EFB9  F03B         	goto	l250
  3012  0076B0                     l5361:
  3013  0076B0  FFFF               	dw	65535	; assembler added errata NOP
  3014  0076B2  0E42               	movlw	66
  3015  0076B4  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3016  0076B6  A4D8               	btfss	status,2,c
  3017  0076B8  EF60  F03B         	goto	u6581
  3018  0076BC  EF63  F03B         	goto	u6580
  3019  0076C0                     u6581:
  3020  0076C0  FFFF               	dw	65535	; assembler added errata NOP
  3021  0076C2  EF6E  F03B         	goto	l5365
  3022  0076C6                     u6580:
  3023  0076C6  FFFF               	dw	65535	; assembler added errata NOP
  3024  0076C8                     
  3025                           ;utils.c: 7:         *state = 3;
  3026  0076C8  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3027  0076CC  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3028  0076D0  0E03               	movlw	3
  3029  0076D2  6EDE               	movwf	postinc2,c
  3030  0076D4  0E00               	movlw	0
  3031  0076D6  6EDD               	movwf	postdec2,c
  3032                           
  3033                           ;utils.c: 8:     } else if (state_machine_code == 'D'){
  3034  0076D8  EFB9  F03B         	goto	l250
  3035  0076DC                     l5365:
  3036  0076DC  FFFF               	dw	65535	; assembler added errata NOP
  3037  0076DE  0E44               	movlw	68
  3038  0076E0  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3039  0076E2  A4D8               	btfss	status,2,c
  3040  0076E4  EF76  F03B         	goto	u6591
  3041  0076E8  EF79  F03B         	goto	u6590
  3042  0076EC                     u6591:
  3043  0076EC  FFFF               	dw	65535	; assembler added errata NOP
  3044  0076EE  EF84  F03B         	goto	l5369
  3045  0076F2                     u6590:
  3046  0076F2  FFFF               	dw	65535	; assembler added errata NOP
  3047  0076F4                     
  3048                           ;utils.c: 9:         *state = 4;
  3049  0076F4  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3050  0076F8  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3051  0076FC  0E04               	movlw	4
  3052  0076FE  6EDE               	movwf	postinc2,c
  3053  007700  0E00               	movlw	0
  3054  007702  6EDD               	movwf	postdec2,c
  3055                           
  3056                           ;utils.c: 10:     } else if (state_machine_code == '@'){
  3057  007704  EFB9  F03B         	goto	l250
  3058  007708                     l5369:
  3059  007708  FFFF               	dw	65535	; assembler added errata NOP
  3060  00770A  0E40               	movlw	64
  3061  00770C  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3062  00770E  A4D8               	btfss	status,2,c
  3063  007710  EF8C  F03B         	goto	u6601
  3064  007714  EF8F  F03B         	goto	u6600
  3065  007718                     u6601:
  3066  007718  FFFF               	dw	65535	; assembler added errata NOP
  3067  00771A  EF9A  F03B         	goto	l5373
  3068  00771E                     u6600:
  3069  00771E  FFFF               	dw	65535	; assembler added errata NOP
  3070  007720                     
  3071                           ;utils.c: 11:         *state = 5;
  3072  007720  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3073  007724  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3074  007728  0E05               	movlw	5
  3075  00772A  6EDE               	movwf	postinc2,c
  3076  00772C  0E00               	movlw	0
  3077  00772E  6EDD               	movwf	postdec2,c
  3078                           
  3079                           ;utils.c: 12:     } else if (state_machine_code == 'H'){
  3080  007730  EFB9  F03B         	goto	l250
  3081  007734                     l5373:
  3082  007734  FFFF               	dw	65535	; assembler added errata NOP
  3083  007736  0E48               	movlw	72
  3084  007738  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3085  00773A  A4D8               	btfss	status,2,c
  3086  00773C  EFA2  F03B         	goto	u6611
  3087  007740  EFA5  F03B         	goto	u6610
  3088  007744                     u6611:
  3089  007744  FFFF               	dw	65535	; assembler added errata NOP
  3090  007746  EFB0  F03B         	goto	l5377
  3091  00774A                     u6610:
  3092  00774A  FFFF               	dw	65535	; assembler added errata NOP
  3093  00774C                     
  3094                           ;utils.c: 13:         *state = 2;
  3095  00774C  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3096  007750  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3097  007754  0E02               	movlw	2
  3098  007756  6EDE               	movwf	postinc2,c
  3099  007758  0E00               	movlw	0
  3100  00775A  6EDD               	movwf	postdec2,c
  3101                           
  3102                           ;utils.c: 14:     } else {
  3103  00775C  EFB9  F03B         	goto	l250
  3104  007760                     l5377:
  3105  007760  FFFF               	dw	65535	; assembler added errata NOP
  3106                           
  3107                           ;utils.c: 15:         *state = 0;
  3108  007762  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3109  007766  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3110  00776A  0E00               	movlw	0
  3111  00776C  6EDE               	movwf	postinc2,c
  3112  00776E  0E00               	movlw	0
  3113  007770  6EDD               	movwf	postdec2,c
  3114  007772                     l250:
  3115  007772  FFFF               	dw	65535	; assembler added errata NOP
  3116  007774  0012               	return		;funcret
  3117  007776  FFFF               	dw	65535	; errata NOP
  3118  007778                     __end_of_state_translator_fpga_to_micro:
  3119                           	callstack 0
  3120                           
  3121 ;; *************** function _snprintf *****************
  3122 ;; Defined at:
  3123 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\snprintf.c"
  3124 ;; Parameters:    Size  Location     Type
  3125 ;;  s               2   10[BANK0 ] PTR unsigned char 
  3126 ;;		 -> main@greet_str(160), 
  3127 ;;  n               2   12[BANK0 ] unsigned int 
  3128 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  3129 ;;		 -> STR_10(3), 
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;  ap              2   20[BANK0 ] PTR void [1]
  3132 ;;		 -> ?_snprintf(2), 
  3133 ;;  ret             2    0        int 
  3134 ;; Return value:  Size  Location     Type
  3135 ;;                  2   10[BANK0 ] int 
  3136 ;; Registers used:
  3137 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3143 ;;      Params:         0       8       0       0       0       0       0
  3144 ;;      Locals:         0       4       0       0       0       0       0
  3145 ;;      Temps:          0       0       0       0       0       0       0
  3146 ;;      Totals:         0      12       0       0       0       0       0
  3147 ;;Total ram usage:       12 bytes
  3148 ;; Hardware stack levels used:    1
  3149 ;; Hardware stack levels required when called:    9
  3150 ;; This function calls:
  3151 ;;		_vsnprintf
  3152 ;; This function is called by:
  3153 ;;		_main
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157                           	psect	text5
  3158  006780                     __ptext5:
  3159                           	callstack 0
  3160  006780                     _snprintf:
  3161                           	callstack 0
  3162  006780  FFFF               	dw	65535	; assembler added errata NOP
  3163  006782  0EC8               	movlw	low (?_snprintf+6)
  3164  006784  0100               	movlb	0	; () banked
  3165  006786  6FCC               	movwf	snprintf@ap& (0+255),b
  3166  006788  0E00               	movlw	high (?_snprintf+6)
  3167  00678A  6FCD               	movwf	(snprintf@ap+1)& (0+255),b
  3168  00678C                     
  3169                           ; BSR set to: 0
  3170  00678C  C0C2  F070         	movff	snprintf@s,vsnprintf@s
  3171  006790  C0C3  F071         	movff	snprintf@s+1,vsnprintf@s+1
  3172  006794  C0C4  F072         	movff	snprintf@n,vsnprintf@n
  3173  006798  C0C5  F073         	movff	snprintf@n+1,vsnprintf@n+1
  3174  00679C  C0C6  F074         	movff	snprintf@fmt,vsnprintf@fmt
  3175  0067A0  C0C7  F075         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  3176  0067A4  0ECC               	movlw	low snprintf@ap
  3177  0067A6  6E76               	movwf	vsnprintf@ap^0,c
  3178  0067A8  0E00               	movlw	high snprintf@ap
  3179  0067AA  6E77               	movwf	(vsnprintf@ap+1)^0,c
  3180  0067AC  ECF5  F03D         	call	_vsnprintf	;wreg free
  3181  0067B0  0012               	return		;funcret
  3182  0067B2  FFFF               	dw	65535	; errata NOP
  3183  0067B4                     __end_of_snprintf:
  3184                           	callstack 0
  3185                           
  3186 ;; *************** function _vsnprintf *****************
  3187 ;; Defined at:
  3188 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_vsnprintf.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;  s               2  111[COMRAM] PTR unsigned char 
  3191 ;;		 -> main@greet_str(160), 
  3192 ;;  n               2  113[COMRAM] unsigned int 
  3193 ;;  fmt             2  115[COMRAM] PTR const unsigned char 
  3194 ;;		 -> STR_10(3), 
  3195 ;;  ap              2  117[COMRAM] PTR PTR void 
  3196 ;;		 -> snprintf@ap(2), 
  3197 ;; Auto vars:     Size  Location     Type
  3198 ;;  f               6    4[BANK0 ] struct _IO_FILE
  3199 ;;  cnt             2    2[BANK0 ] int 
  3200 ;; Return value:  Size  Location     Type
  3201 ;;                  2  111[COMRAM] int 
  3202 ;; Registers used:
  3203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3204 ;; Tracked objects:
  3205 ;;		On entry : 0/0
  3206 ;;		On exit  : 0/0
  3207 ;;		Unchanged: 0/0
  3208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3209 ;;      Params:         8       0       0       0       0       0       0
  3210 ;;      Locals:         0      10       0       0       0       0       0
  3211 ;;      Temps:          4       0       0       0       0       0       0
  3212 ;;      Totals:        12      10       0       0       0       0       0
  3213 ;;Total ram usage:       22 bytes
  3214 ;; Hardware stack levels used:    1
  3215 ;; Hardware stack levels required when called:    8
  3216 ;; This function calls:
  3217 ;;		_vfprintf
  3218 ;; This function is called by:
  3219 ;;		_snprintf
  3220 ;; This function uses a non-reentrant model
  3221 ;;
  3222                           
  3223                           	psect	text6
  3224  007BEA                     __ptext6:
  3225                           	callstack 0
  3226  007BEA                     _vsnprintf:
  3227                           	callstack 0
  3228  007BEA  FFFF               	dw	65535	; assembler added errata NOP
  3229  007BEC  0E80               	movlw	128
  3230  007BEE  5C73               	subwf	(vsnprintf@n+1)^0,w,c
  3231  007BF0  A0D8               	btfss	status,0,c
  3232  007BF2  EFFD  F03D         	goto	u6471
  3233  007BF6  EF00  F03E         	goto	u6470
  3234  007BFA                     u6471:
  3235  007BFA  FFFF               	dw	65535	; assembler added errata NOP
  3236  007BFC  EF0A  F03E         	goto	l5207
  3237  007C00                     u6470:
  3238  007C00  FFFF               	dw	65535	; assembler added errata NOP
  3239  007C02  0E00               	movlw	0
  3240  007C04  0100               	movlb	0	; () banked
  3241  007C06  6F8D               	movwf	(_errno+1)& (0+255),b
  3242  007C08  0E4B               	movlw	75
  3243  007C0A  6F8C               	movwf	_errno& (0+255),b
  3244  007C0C                     
  3245                           ; BSR set to: 0
  3246  007C0C  6870               	setf	?_vsnprintf^0,c
  3247  007C0E  6871               	setf	(?_vsnprintf+1)^0,c
  3248  007C10  EF8F  F03E         	goto	l1085
  3249  007C14                     l5207:
  3250  007C14  FFFF               	dw	65535	; assembler added errata NOP
  3251  007C16  C070  F0BC         	movff	vsnprintf@s,vsnprintf@f
  3252  007C1A  C071  F0BD         	movff	vsnprintf@s+1,vsnprintf@f+1
  3253  007C1E  5073               	movf	(vsnprintf@n+1)^0,w,c
  3254  007C20  E10A               	bnz	u6480
  3255  007C22  0E02               	movlw	2
  3256  007C24  5C72               	subwf	vsnprintf@n^0,w,c
  3257  007C26  A0D8               	btfss	status,0,c
  3258  007C28  EF18  F03E         	goto	u6481
  3259  007C2C  EF1B  F03E         	goto	u6480
  3260  007C30                     u6481:
  3261  007C30  FFFF               	dw	65535	; assembler added errata NOP
  3262  007C32  EF29  F03E         	goto	l5213
  3263  007C36                     u6480:
  3264  007C36  FFFF               	dw	65535	; assembler added errata NOP
  3265  007C38  0EFF               	movlw	255
  3266  007C3A  2472               	addwf	vsnprintf@n^0,w,c
  3267  007C3C  0100               	movlb	0	; () banked
  3268  007C3E  6FC0               	movwf	(vsnprintf@f+4)& (0+255),b
  3269  007C40  0EFF               	movlw	255
  3270  007C42  2073               	addwfc	(vsnprintf@n+1)^0,w,c
  3271  007C44  6FC1               	movwf	(vsnprintf@f+5)& (0+255),b
  3272  007C46                     
  3273                           ; BSR set to: 0
  3274  007C46  0E00               	movlw	0
  3275  007C48  6FBF               	movwf	(vsnprintf@f+3)& (0+255),b
  3276  007C4A  0E00               	movlw	0
  3277  007C4C  6FBE               	movwf	(vsnprintf@f+2)& (0+255),b
  3278  007C4E  EF33  F03E         	goto	l5215
  3279  007C52                     l5213:
  3280  007C52  FFFF               	dw	65535	; assembler added errata NOP
  3281  007C54  0E00               	movlw	0
  3282  007C56  0100               	movlb	0	; () banked
  3283  007C58  6FC1               	movwf	(vsnprintf@f+5)& (0+255),b
  3284  007C5A  0E01               	movlw	1
  3285  007C5C  6FC0               	movwf	(vsnprintf@f+4)& (0+255),b
  3286  007C5E  0E00               	movlw	0
  3287  007C60  6FBF               	movwf	(vsnprintf@f+3)& (0+255),b
  3288  007C62  0E01               	movlw	1
  3289  007C64  6FBE               	movwf	(vsnprintf@f+2)& (0+255),b
  3290  007C66                     l5215:
  3291  007C66  FFFF               	dw	65535	; assembler added errata NOP
  3292                           
  3293                           ; BSR set to: 0
  3294  007C68  0EBC               	movlw	low vsnprintf@f
  3295  007C6A  6E68               	movwf	vfprintf@fp^0,c
  3296  007C6C  0E00               	movlw	high vsnprintf@f
  3297  007C6E  6E69               	movwf	(vfprintf@fp+1)^0,c
  3298  007C70  C074  F06A         	movff	vsnprintf@fmt,vfprintf@fmt
  3299  007C74  C075  F06B         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  3300  007C78  C076  F06C         	movff	vsnprintf@ap,vfprintf@ap
  3301  007C7C  C077  F06D         	movff	vsnprintf@ap+1,vfprintf@ap+1
  3302  007C80  EC7A  F036         	call	_vfprintf	;wreg free
  3303  007C84  C068  F0BA         	movff	?_vfprintf,vsnprintf@cnt
  3304  007C88  C069  F0BB         	movff	?_vfprintf+1,vsnprintf@cnt+1
  3305  007C8C  5072               	movf	vsnprintf@n^0,w,c
  3306  007C8E  1073               	iorwf	(vsnprintf@n+1)^0,w,c
  3307  007C90  B4D8               	btfsc	status,2,c
  3308  007C92  EF4D  F03E         	goto	u6491
  3309  007C96  EF50  F03E         	goto	u6490
  3310  007C9A                     u6491:
  3311  007C9A  FFFF               	dw	65535	; assembler added errata NOP
  3312  007C9C  EF8A  F03E         	goto	l5227
  3313  007CA0                     u6490:
  3314  007CA0  FFFF               	dw	65535	; assembler added errata NOP
  3315  007CA2  0100               	movlb	0	; () banked
  3316  007CA4  BFBB               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  3317  007CA6  EF57  F03E         	goto	u6501
  3318  007CAA  EF5A  F03E         	goto	u6500
  3319  007CAE                     u6501:
  3320  007CAE  FFFF               	dw	65535	; assembler added errata NOP
  3321  007CB0  EF8A  F03E         	goto	l5227
  3322  007CB4                     u6500:
  3323  007CB4  FFFF               	dw	65535	; assembler added errata NOP
  3324  007CB6                     
  3325                           ; BSR set to: 0
  3326  007CB6  0EFF               	movlw	255
  3327  007CB8  6E78               	movwf	??_vsnprintf^0,c
  3328  007CBA  0EFF               	movlw	255
  3329  007CBC  6E79               	movwf	(??_vsnprintf+1)^0,c
  3330  007CBE  C072  F07A         	movff	vsnprintf@n,??_vsnprintf+2
  3331  007CC2  C073  F07B         	movff	vsnprintf@n+1,??_vsnprintf+3
  3332  007CC6  5078               	movf	??_vsnprintf^0,w,c
  3333  007CC8  267A               	addwf	(??_vsnprintf+2)^0,f,c
  3334  007CCA  5079               	movf	(??_vsnprintf+1)^0,w,c
  3335  007CCC  227B               	addwfc	(??_vsnprintf+3)^0,f,c
  3336  007CCE  507A               	movf	(??_vsnprintf+2)^0,w,c
  3337  007CD0  5DBA               	subwf	vsnprintf@cnt& (0+255),w,b
  3338  007CD2  507B               	movf	(??_vsnprintf+3)^0,w,c
  3339  007CD4  59BB               	subwfb	(vsnprintf@cnt+1)& (0+255),w,b
  3340  007CD6  A0D8               	btfss	status,0,c
  3341  007CD8  EF70  F03E         	goto	u6511
  3342  007CDC  EF73  F03E         	goto	u6510
  3343  007CE0                     u6511:
  3344  007CE0  FFFF               	dw	65535	; assembler added errata NOP
  3345  007CE2  EF7C  F03E         	goto	l1090
  3346  007CE6                     u6510:
  3347  007CE6  FFFF               	dw	65535	; assembler added errata NOP
  3348  007CE8                     
  3349                           ; BSR set to: 0
  3350  007CE8  0EFF               	movlw	255
  3351  007CEA  2472               	addwf	vsnprintf@n^0,w,c
  3352  007CEC  6FB8               	movwf	_vsnprintf$1549& (0+255),b
  3353  007CEE  0EFF               	movlw	255
  3354  007CF0  2073               	addwfc	(vsnprintf@n+1)^0,w,c
  3355  007CF2  6FB9               	movwf	(_vsnprintf$1549+1)& (0+255),b
  3356  007CF4  EF81  F03E         	goto	l5225
  3357  007CF8                     l1090:
  3358  007CF8  FFFF               	dw	65535	; assembler added errata NOP
  3359                           
  3360                           ; BSR set to: 0
  3361  007CFA  C0BA  F0B8         	movff	vsnprintf@cnt,_vsnprintf$1549
  3362  007CFE  C0BB  F0B9         	movff	vsnprintf@cnt+1,_vsnprintf$1549+1
  3363  007D02                     l5225:
  3364  007D02  FFFF               	dw	65535	; assembler added errata NOP
  3365                           
  3366                           ; BSR set to: 0
  3367  007D04  51B8               	movf	_vsnprintf$1549& (0+255),w,b
  3368  007D06  2470               	addwf	vsnprintf@s^0,w,c
  3369  007D08  6ED9               	movwf	fsr2l,c
  3370  007D0A  51B9               	movf	(_vsnprintf$1549+1)& (0+255),w,b
  3371  007D0C  2071               	addwfc	(vsnprintf@s+1)^0,w,c
  3372  007D0E  6EDA               	movwf	fsr2h,c
  3373  007D10  0E00               	movlw	0
  3374  007D12  6EDF               	movwf	indf2,c
  3375  007D14                     l5227:
  3376  007D14  FFFF               	dw	65535	; assembler added errata NOP
  3377  007D16  C0BA  F070         	movff	vsnprintf@cnt,?_vsnprintf
  3378  007D1A  C0BB  F071         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  3379  007D1E                     l1085:
  3380  007D1E  FFFF               	dw	65535	; assembler added errata NOP
  3381  007D20  0012               	return		;funcret
  3382  007D22  FFFF               	dw	65535	; errata NOP
  3383  007D24                     __end_of_vsnprintf:
  3384                           	callstack 0
  3385                           
  3386 ;; *************** function _vfprintf *****************
  3387 ;; Defined at:
  3388 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3389 ;; Parameters:    Size  Location     Type
  3390 ;;  fp              2  103[COMRAM] PTR struct _IO_FILE
  3391 ;;		 -> vsnprintf@f(6), 
  3392 ;;  fmt             2  105[COMRAM] PTR const unsigned char 
  3393 ;;		 -> STR_10(3), 
  3394 ;;  ap              2  107[COMRAM] PTR PTR void 
  3395 ;;		 -> snprintf@ap(2), 
  3396 ;; Auto vars:     Size  Location     Type
  3397 ;;  cfmt            2  109[COMRAM] PTR unsigned char 
  3398 ;;		 -> STR_10(3), 
  3399 ;; Return value:  Size  Location     Type
  3400 ;;                  2  103[COMRAM] int 
  3401 ;; Registers used:
  3402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3403 ;; Tracked objects:
  3404 ;;		On entry : 0/0
  3405 ;;		On exit  : 0/0
  3406 ;;		Unchanged: 0/0
  3407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3408 ;;      Params:         6       0       0       0       0       0       0
  3409 ;;      Locals:         2       0       0       0       0       0       0
  3410 ;;      Temps:          0       0       0       0       0       0       0
  3411 ;;      Totals:         8       0       0       0       0       0       0
  3412 ;;Total ram usage:        8 bytes
  3413 ;; Hardware stack levels used:    1
  3414 ;; Hardware stack levels required when called:    7
  3415 ;; This function calls:
  3416 ;;		_vfpfcnvrt
  3417 ;; This function is called by:
  3418 ;;		_vsnprintf
  3419 ;; This function uses a non-reentrant model
  3420 ;;
  3421                           
  3422                           	psect	text7
  3423  006CF4                     __ptext7:
  3424                           	callstack 0
  3425  006CF4                     _vfprintf:
  3426                           	callstack 0
  3427  006CF4  FFFF               	dw	65535	; assembler added errata NOP
  3428  006CF6                     
  3429                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3430  006CF6  C06A  F06E         	movff	vfprintf@fmt,vfprintf@cfmt
  3431  006CFA  C06B  F06F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3432  006CFE                     
  3433                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  3434  006CFE  0E00               	movlw	0
  3435  006D00  0100               	movlb	0	; () banked
  3436  006D02  6F85               	movwf	(_nout+1)& (0+255),b
  3437  006D04  0E00               	movlw	0
  3438  006D06  6F84               	movwf	_nout& (0+255),b
  3439                           
  3440                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  3441  006D08  EF9A  F036         	goto	l5053
  3442  006D0C                     l5051:
  3443  006D0C  FFFF               	dw	65535	; assembler added errata NOP
  3444                           
  3445                           ; BSR set to: 0
  3446                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3447  006D0E  C068  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  3448  006D12  C069  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3449  006D16  0E6E               	movlw	low vfprintf@cfmt
  3450  006D18  6E45               	movwf	vfpfcnvrt@fmt^0,c
  3451  006D1A  0E00               	movlw	high vfprintf@cfmt
  3452  006D1C  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3453  006D1E  C06C  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  3454  006D22  C06D  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3455  006D26  EC3D  F000         	call	_vfpfcnvrt	;wreg free
  3456  006D2A  5043               	movf	?_vfpfcnvrt^0,w,c
  3457  006D2C  0100               	movlb	0	; () banked
  3458  006D2E  2784               	addwf	_nout& (0+255),f,b
  3459  006D30  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  3460  006D32  2385               	addwfc	(_nout+1)& (0+255),f,b
  3461  006D34                     l5053:
  3462  006D34  FFFF               	dw	65535	; assembler added errata NOP
  3463                           
  3464                           ; BSR set to: 0
  3465                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  3466  006D36  C06E  FFF6         	movff	vfprintf@cfmt,tblptrl
  3467  006D3A  C06F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3468  006D3E                     	if	0	;tblptru may be non-zero
  3469  006D3E                     	endif
  3470  006D3E                     	if	0	;tblptru may be non-zero
  3471  006D3E                     	endif
  3472  006D3E  0008               	tblrd		*
  3473  006D40  FFFF               	dw	65535	; errata NOP
  3474  006D42  50F5               	movf	tablat,w,c
  3475  006D44  0900               	iorlw	0
  3476  006D46  A4D8               	btfss	status,2,c
  3477  006D48  EFA8  F036         	goto	u6261
  3478  006D4C  EFAB  F036         	goto	u6260
  3479  006D50                     u6261:
  3480  006D50  FFFF               	dw	65535	; assembler added errata NOP
  3481  006D52  EF86  F036         	goto	l5051
  3482  006D56                     u6260:
  3483  006D56  FFFF               	dw	65535	; assembler added errata NOP
  3484  006D58                     
  3485                           ; BSR set to: 0
  3486                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  3487  006D58  C084  F068         	movff	_nout,?_vfprintf
  3488  006D5C  C085  F069         	movff	_nout+1,?_vfprintf+1
  3489  006D60                     
  3490                           ; BSR set to: 0
  3491  006D60  0012               	return		;funcret
  3492  006D62  FFFF               	dw	65535	; errata NOP
  3493  006D64                     __end_of_vfprintf:
  3494                           	callstack 0
  3495                           
  3496 ;; *************** function _vfpfcnvrt *****************
  3497 ;; Defined at:
  3498 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3499 ;; Parameters:    Size  Location     Type
  3500 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  3501 ;;		 -> vsnprintf@f(6), 
  3502 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  3503 ;;		 -> vfprintf@cfmt(2), 
  3504 ;;  ap              2   70[COMRAM] PTR PTR void 
  3505 ;;		 -> snprintf@ap(2), 
  3506 ;; Auto vars:     Size  Location     Type
  3507 ;;  llu             8   95[COMRAM] unsigned long long 
  3508 ;;  ll              8   84[COMRAM] long long 
  3509 ;;  f               4    0        long long 
  3510 ;;  ct              3    0        unsigned char [3]
  3511 ;;  vp              2   92[COMRAM] PTR void 
  3512 ;;		 -> ?_snprintf(2), STR_8(50), STR_7(9), STR_6(7), 
  3513 ;;		 -> STR_5(9), STR_4(39), STR_3(9), STR_2(64), 
  3514 ;;		 -> STR_1(49), 
  3515 ;;  done            2   78[COMRAM] int 
  3516 ;;  cp              2   76[COMRAM] PTR unsigned char 
  3517 ;;		 -> ?_snprintf(2), STR_8(50), STR_7(9), STR_6(7), 
  3518 ;;		 -> STR_5(9), STR_4(39), STR_3(9), STR_2(64), 
  3519 ;;		 -> STR_1(49), 
  3520 ;;  i               2    0        int 
  3521 ;;  c               1   94[COMRAM] unsigned char 
  3522 ;; Return value:  Size  Location     Type
  3523 ;;                  2   66[COMRAM] int 
  3524 ;; Registers used:
  3525 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3526 ;; Tracked objects:
  3527 ;;		On entry : 0/0
  3528 ;;		On exit  : 0/0
  3529 ;;		Unchanged: 0/0
  3530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3531 ;;      Params:         6       0       0       0       0       0       0
  3532 ;;      Locals:        27       0       0       0       0       0       0
  3533 ;;      Temps:          4       0       0       0       0       0       0
  3534 ;;      Totals:        37       0       0       0       0       0       0
  3535 ;;Total ram usage:       37 bytes
  3536 ;; Hardware stack levels used:    1
  3537 ;; Hardware stack levels required when called:    6
  3538 ;; This function calls:
  3539 ;;		_atoi
  3540 ;;		_ctoa
  3541 ;;		_dtoa
  3542 ;;		_fputc
  3543 ;;		_isdigit
  3544 ;;		_otoa
  3545 ;;		_stoa
  3546 ;;		_strncmp
  3547 ;;		_utoa
  3548 ;;		_xtoa
  3549 ;; This function is called by:
  3550 ;;		_vfprintf
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           
  3554                           	psect	text8
  3555  00007A                     __ptext8:
  3556                           	callstack 0
  3557  00007A                     _vfpfcnvrt:
  3558                           	callstack 0
  3559  00007A  FFFF               	dw	65535	; assembler added errata NOP
  3560  00007C                     
  3561                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  3562  00007C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3563  000080  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3564  000084  CFDE FFF6          	movff	postinc2,tblptrl
  3565  000088  CFDD FFF7          	movff	postdec2,tblptrh
  3566  00008C                     	if	0	;tblptru may be non-zero
  3567  00008C                     	endif
  3568  00008C                     	if	0	;tblptru may be non-zero
  3569  00008C                     	endif
  3570  00008C  0008               	tblrd		*
  3571  00008E  FFFF               	dw	65535	; errata NOP
  3572  000090  50F5               	movf	tablat,w,c
  3573  000092  0A25               	xorlw	37
  3574  000094  A4D8               	btfss	status,2,c
  3575  000096  EF4F  F000         	goto	u5121
  3576  00009A  EF52  F000         	goto	u5120
  3577  00009E                     u5121:
  3578  00009E  FFFF               	dw	65535	; assembler added errata NOP
  3579  0000A0  EF11  F00A         	goto	l4637
  3580  0000A4                     u5120:
  3581  0000A4  FFFF               	dw	65535	; assembler added errata NOP
  3582  0000A6                     
  3583                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  3584  0000A6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3585  0000AA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3586  0000AE  2ADE               	incf	postinc2,f,c
  3587  0000B0  0E00               	movlw	0
  3588  0000B2  22DD               	addwfc	postdec2,f,c
  3589  0000B4                     
  3590                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  3591  0000B4  0E00               	movlw	0
  3592  0000B6  0100               	movlb	0	; () banked
  3593  0000B8  6F87               	movwf	(_width+1)& (0+255),b
  3594  0000BA  0E00               	movlw	0
  3595  0000BC  6F86               	movwf	_width& (0+255),b
  3596  0000BE  C086  F08A         	movff	_width,_flags
  3597  0000C2  C087  F08B         	movff	_width+1,_flags+1
  3598  0000C6                     
  3599                           ; BSR set to: 0
  3600                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  3601  0000C6  6988               	setf	_prec& (0+255),b
  3602  0000C8  6989               	setf	(_prec+1)& (0+255),b
  3603  0000CA                     
  3604                           ; BSR set to: 0
  3605                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 688:         done
      +                           = 0;
  3606  0000CA  0E00               	movlw	0
  3607  0000CC  6E50               	movwf	(vfpfcnvrt@done+1)^0,c
  3608  0000CE  0E00               	movlw	0
  3609  0000D0  6E4F               	movwf	vfpfcnvrt@done^0,c
  3610                           
  3611                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  3612  0000D2  EFC0  F000         	goto	l4355
  3613  0000D6                     l4329:
  3614  0000D6  FFFF               	dw	65535	; assembler added errata NOP
  3615                           
  3616                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 692:             
      +                                  flags |= (1 << 0);
  3617  0000D8  0100               	movlb	0	; () banked
  3618  0000DA  818A               	bsf	_flags& (0+255),0,b
  3619  0000DC                     l4331:
  3620  0000DC  FFFF               	dw	65535	; assembler added errata NOP
  3621                           
  3622                           ; BSR set to: 0
  3623                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 693:             
      +                                  ++*fmt;
  3624  0000DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3625  0000E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3626  0000E6  2ADE               	incf	postinc2,f,c
  3627  0000E8  0E00               	movlw	0
  3628  0000EA  22DD               	addwfc	postdec2,f,c
  3629                           
  3630                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 694:             
      +                                  break;
  3631  0000EC  EFC0  F000         	goto	l4355
  3632  0000F0                     l4333:
  3633  0000F0  FFFF               	dw	65535	; assembler added errata NOP
  3634                           
  3635                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 696:             
      +                                  flags |= (1 << 1);
  3636  0000F2  0100               	movlb	0	; () banked
  3637  0000F4  838A               	bsf	_flags& (0+255),1,b
  3638  0000F6  EF6E  F000         	goto	l4331
  3639  0000FA                     l4337:
  3640  0000FA  FFFF               	dw	65535	; assembler added errata NOP
  3641                           
  3642                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 700:             
      +                                  flags |= (1 << 2);
  3643  0000FC  0100               	movlb	0	; () banked
  3644  0000FE  858A               	bsf	_flags& (0+255),2,b
  3645  000100  EF6E  F000         	goto	l4331
  3646  000104                     l4341:
  3647  000104  FFFF               	dw	65535	; assembler added errata NOP
  3648                           
  3649                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 704:             
      +                                  flags |= (1 << 3);
  3650  000106  0100               	movlb	0	; () banked
  3651  000108  878A               	bsf	_flags& (0+255),3,b
  3652  00010A  EF6E  F000         	goto	l4331
  3653  00010E                     l4345:
  3654  00010E  FFFF               	dw	65535	; assembler added errata NOP
  3655                           
  3656                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 708:             
      +                                  flags |= (1 << 4);
  3657  000110  0100               	movlb	0	; () banked
  3658  000112  898A               	bsf	_flags& (0+255),4,b
  3659  000114  EF6E  F000         	goto	l4331
  3660  000118                     l4349:
  3661  000118  FFFF               	dw	65535	; assembler added errata NOP
  3662                           
  3663                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 712:             
      +                                  done = 1;
  3664  00011A  0E00               	movlw	0
  3665  00011C  6E50               	movwf	(vfpfcnvrt@done+1)^0,c
  3666  00011E  0E01               	movlw	1
  3667  000120  6E4F               	movwf	vfpfcnvrt@done^0,c
  3668                           
  3669                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 713:             
      +                                  break;
  3670  000122  EFC0  F000         	goto	l4355
  3671  000126                     l4353:
  3672  000126  FFFF               	dw	65535	; assembler added errata NOP
  3673  000128  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3674  00012C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3675  000130  CFDE FFF6          	movff	postinc2,tblptrl
  3676  000134  CFDD FFF7          	movff	postdec2,tblptrh
  3677  000138                     	if	0	;tblptru may be non-zero
  3678  000138                     	endif
  3679  000138                     	if	0	;tblptru may be non-zero
  3680  000138                     	endif
  3681  000138  0008               	tblrd		*
  3682  00013A  FFFF               	dw	65535	; errata NOP
  3683  00013C  50F5               	movf	tablat,w,c
  3684  00013E  6E49               	movwf	??_vfpfcnvrt^0,c
  3685  000140  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  3686                           
  3687                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3688                           ; Switch size 1, requested type "simple"
  3689                           ; Number of cases is 1, Range of values is 0 to 0
  3690                           ; switch strategies available:
  3691                           ; Name         Instructions Cycles
  3692                           ; simple_byte            4     3 (average)
  3693                           ;	Chosen strategy is simple_byte
  3694  000142  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  3695  000144  0A00               	xorlw	0	; case 0
  3696  000146  B4D8               	btfsc	status,2,c
  3697  000148  EFA8  F000         	goto	l5697
  3698  00014C  EF8C  F000         	goto	l4349
  3699  000150                     l5697:
  3700  000150  FFFF               	dw	65535	; assembler added errata NOP
  3701                           
  3702                           ; Switch size 1, requested type "simple"
  3703                           ; Number of cases is 5, Range of values is 32 to 48
  3704                           ; switch strategies available:
  3705                           ; Name         Instructions Cycles
  3706                           ; simple_byte           16     9 (average)
  3707                           ;	Chosen strategy is simple_byte
  3708  000152  5049               	movf	??_vfpfcnvrt^0,w,c
  3709  000154  0A20               	xorlw	32	; case 32
  3710  000156  B4D8               	btfsc	status,2,c
  3711  000158  EF82  F000         	goto	l4341
  3712  00015C  0A03               	xorlw	3	; case 35
  3713  00015E  B4D8               	btfsc	status,2,c
  3714  000160  EF87  F000         	goto	l4345
  3715  000164  0A08               	xorlw	8	; case 43
  3716  000166  B4D8               	btfsc	status,2,c
  3717  000168  EF7D  F000         	goto	l4337
  3718  00016C  0A06               	xorlw	6	; case 45
  3719  00016E  B4D8               	btfsc	status,2,c
  3720  000170  EF6B  F000         	goto	l4329
  3721  000174  0A1D               	xorlw	29	; case 48
  3722  000176  B4D8               	btfsc	status,2,c
  3723  000178  EF78  F000         	goto	l4333
  3724  00017C  EF8C  F000         	goto	l4349
  3725  000180                     l4355:
  3726  000180  FFFF               	dw	65535	; assembler added errata NOP
  3727                           
  3728                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  3729  000182  504F               	movf	vfpfcnvrt@done^0,w,c
  3730  000184  1050               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  3731  000186  B4D8               	btfsc	status,2,c
  3732  000188  EFC8  F000         	goto	u5131
  3733  00018C  EFCB  F000         	goto	u5130
  3734  000190                     u5131:
  3735  000190  FFFF               	dw	65535	; assembler added errata NOP
  3736  000192  EF93  F000         	goto	l4353
  3737  000196                     u5130:
  3738  000196  FFFF               	dw	65535	; assembler added errata NOP
  3739  000198                     
  3740                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 716:         if (
      +                          flags & (1 << 0)) {
  3741  000198  0100               	movlb	0	; () banked
  3742  00019A  A18A               	btfss	_flags& (0+255),0,b
  3743  00019C  EFD2  F000         	goto	u5141
  3744  0001A0  EFD5  F000         	goto	u5140
  3745  0001A4                     u5141:
  3746  0001A4  FFFF               	dw	65535	; assembler added errata NOP
  3747  0001A6  EFD7  F000         	goto	l4359
  3748  0001AA                     u5140:
  3749  0001AA  FFFF               	dw	65535	; assembler added errata NOP
  3750  0001AC                     
  3751                           ; BSR set to: 0
  3752                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 717:             
      +                          flags &= ~(1 << 1);
  3753  0001AC  938A               	bcf	_flags& (0+255),1,b
  3754  0001AE                     l4359:
  3755  0001AE  FFFF               	dw	65535	; assembler added errata NOP
  3756                           
  3757                           ; BSR set to: 0
  3758                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  3759  0001B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3760  0001B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3761  0001B8  CFDE FFF6          	movff	postinc2,tblptrl
  3762  0001BC  CFDD FFF7          	movff	postdec2,tblptrh
  3763  0001C0                     	if	0	;tblptru may be non-zero
  3764  0001C0                     	endif
  3765  0001C0                     	if	0	;tblptru may be non-zero
  3766  0001C0                     	endif
  3767  0001C0  0008               	tblrd		*
  3768  0001C2  FFFF               	dw	65535	; errata NOP
  3769  0001C4  50F5               	movf	tablat,w,c
  3770  0001C6  0A2A               	xorlw	42
  3771  0001C8  A4D8               	btfss	status,2,c
  3772  0001CA  EFE9  F000         	goto	u5151
  3773  0001CE  EFEC  F000         	goto	u5150
  3774  0001D2                     u5151:
  3775  0001D2  FFFF               	dw	65535	; assembler added errata NOP
  3776  0001D4  EF18  F001         	goto	l4367
  3777  0001D8                     u5150:
  3778  0001D8  FFFF               	dw	65535	; assembler added errata NOP
  3779  0001DA                     
  3780                           ; BSR set to: 0
  3781                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  3782  0001DA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3783  0001DE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3784  0001E2  2ADE               	incf	postinc2,f,c
  3785  0001E4  0E00               	movlw	0
  3786  0001E6  22DD               	addwfc	postdec2,f,c
  3787                           
  3788                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3789  0001E8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3790  0001EC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3791  0001F0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3792  0001F4  0E02               	movlw	2
  3793  0001F6  26DE               	addwf	postinc2,f,c
  3794  0001F8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3795  0001FC  0E00               	movlw	0
  3796  0001FE  22DD               	addwfc	postdec2,f,c
  3797  000200  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3798  000204  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3799  000208  CFDE F086          	movff	postinc2,_width
  3800  00020C  CFDD F087          	movff	postdec2,_width+1
  3801  000210                     
  3802                           ; BSR set to: 0
  3803                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  3804  000210  BF87               	btfsc	(_width+1)& (0+255),7,b
  3805  000212  EF10  F001         	goto	u5160
  3806  000216  EF0D  F001         	goto	u5161
  3807  00021A                     u5161:
  3808  00021A  FFFF               	dw	65535	; assembler added errata NOP
  3809  00021C  EF63  F001         	goto	l4377
  3810  000220                     u5160:
  3811  000220  FFFF               	dw	65535	; assembler added errata NOP
  3812  000222                     
  3813                           ; BSR set to: 0
  3814                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  3815  000222  818A               	bsf	_flags& (0+255),0,b
  3816                           
  3817                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  3818  000224  6D86               	negf	_width& (0+255),b
  3819  000226  1F87               	comf	(_width+1)& (0+255),f,b
  3820  000228  B0D8               	btfsc	status,0,c
  3821  00022A  2B87               	incf	(_width+1)& (0+255),f,b
  3822  00022C  EF63  F001         	goto	l4377
  3823  000230                     l4367:
  3824  000230  FFFF               	dw	65535	; assembler added errata NOP
  3825                           
  3826                           ; BSR set to: 0
  3827                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  3828  000232  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3829  000236  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3830  00023A  CFDE F008          	movff	postinc2,atoi@s
  3831  00023E  CFDD F009          	movff	postdec2,atoi@s+1
  3832  000242  EC06  F01E         	call	_atoi	;wreg free
  3833  000246  C008  F086         	movff	?_atoi,_width
  3834  00024A  C009  F087         	movff	?_atoi+1,_width+1
  3835                           
  3836                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3837  00024E  EF31  F001         	goto	l4371
  3838  000252                     l4369:
  3839  000252  FFFF               	dw	65535	; assembler added errata NOP
  3840                           
  3841                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  3842  000254  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3843  000258  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3844  00025C  2ADE               	incf	postinc2,f,c
  3845  00025E  0E00               	movlw	0
  3846  000260  22DD               	addwfc	postdec2,f,c
  3847  000262                     l4371:
  3848  000262  FFFF               	dw	65535	; assembler added errata NOP
  3849  000264  0ED0               	movlw	208
  3850  000266  6E49               	movwf	??_vfpfcnvrt^0,c
  3851  000268  0EFF               	movlw	255
  3852  00026A  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  3853  00026C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3854  000270  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3855  000274  CFDE FFF6          	movff	postinc2,tblptrl
  3856  000278  CFDD FFF7          	movff	postdec2,tblptrh
  3857  00027C                     	if	0	;tblptru may be non-zero
  3858  00027C                     	endif
  3859  00027C                     	if	0	;tblptru may be non-zero
  3860  00027C                     	endif
  3861  00027C  0008               	tblrd		*
  3862  00027E  FFFF               	dw	65535	; errata NOP
  3863  000280  50F5               	movf	tablat,w,c
  3864  000282  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  3865  000284  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  3866  000286  5049               	movf	??_vfpfcnvrt^0,w,c
  3867  000288  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3868  00028A  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  3869  00028C  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3870  00028E  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  3871  000290  E10B               	bnz	u5170
  3872  000292  0E0A               	movlw	10
  3873  000294  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3874  000296  A0D8               	btfss	status,0,c
  3875  000298  EF50  F001         	goto	u5171
  3876  00029C  EF54  F001         	goto	u5170
  3877  0002A0                     u5171:
  3878  0002A0  FFFF               	dw	65535	; assembler added errata NOP
  3879  0002A2  0E01               	movlw	1
  3880  0002A4  EF56  F001         	goto	u5180
  3881  0002A8                     u5170:
  3882  0002A8  FFFF               	dw	65535	; assembler added errata NOP
  3883  0002AA  0E00               	movlw	0
  3884  0002AC                     u5180:
  3885  0002AC  FFFF               	dw	65535	; assembler added errata NOP
  3886  0002AE  6E51               	movwf	_vfpfcnvrt$1682^0,c
  3887  0002B0  6A52               	clrf	(_vfpfcnvrt$1682+1)^0,c
  3888  0002B2  5051               	movf	_vfpfcnvrt$1682^0,w,c
  3889  0002B4  1052               	iorwf	(_vfpfcnvrt$1682+1)^0,w,c
  3890  0002B6  A4D8               	btfss	status,2,c
  3891  0002B8  EF60  F001         	goto	u5191
  3892  0002BC  EF63  F001         	goto	u5190
  3893  0002C0                     u5191:
  3894  0002C0  FFFF               	dw	65535	; assembler added errata NOP
  3895  0002C2  EF29  F001         	goto	l4369
  3896  0002C6                     u5190:
  3897  0002C6                     l4377:
  3898  0002C6  FFFF               	dw	65535	; assembler added errata NOP
  3899                           
  3900                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  3901  0002C8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3902  0002CC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3903  0002D0  CFDE FFF6          	movff	postinc2,tblptrl
  3904  0002D4  CFDD FFF7          	movff	postdec2,tblptrh
  3905  0002D8                     	if	0	;tblptru may be non-zero
  3906  0002D8                     	endif
  3907  0002D8                     	if	0	;tblptru may be non-zero
  3908  0002D8                     	endif
  3909  0002D8  0008               	tblrd		*
  3910  0002DA  FFFF               	dw	65535	; errata NOP
  3911  0002DC  50F5               	movf	tablat,w,c
  3912  0002DE  0A2E               	xorlw	46
  3913  0002E0  A4D8               	btfss	status,2,c
  3914  0002E2  EF75  F001         	goto	u5201
  3915  0002E6  EF78  F001         	goto	u5200
  3916  0002EA                     u5201:
  3917  0002EA  FFFF               	dw	65535	; assembler added errata NOP
  3918  0002EC  EF02  F002         	goto	l4397
  3919  0002F0                     u5200:
  3920  0002F0  FFFF               	dw	65535	; assembler added errata NOP
  3921  0002F2                     
  3922                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  3923  0002F2  0E00               	movlw	0
  3924  0002F4  0100               	movlb	0	; () banked
  3925  0002F6  6F89               	movwf	(_prec+1)& (0+255),b
  3926  0002F8  0E00               	movlw	0
  3927  0002FA  6F88               	movwf	_prec& (0+255),b
  3928  0002FC                     
  3929                           ; BSR set to: 0
  3930                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  3931  0002FC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3932  000300  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3933  000304  2ADE               	incf	postinc2,f,c
  3934  000306  0E00               	movlw	0
  3935  000308  22DD               	addwfc	postdec2,f,c
  3936  00030A                     
  3937                           ; BSR set to: 0
  3938                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  3939  00030A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3940  00030E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3941  000312  CFDE FFF6          	movff	postinc2,tblptrl
  3942  000316  CFDD FFF7          	movff	postdec2,tblptrh
  3943  00031A                     	if	0	;tblptru may be non-zero
  3944  00031A                     	endif
  3945  00031A                     	if	0	;tblptru may be non-zero
  3946  00031A                     	endif
  3947  00031A  0008               	tblrd		*
  3948  00031C  FFFF               	dw	65535	; errata NOP
  3949  00031E  50F5               	movf	tablat,w,c
  3950  000320  0A2A               	xorlw	42
  3951  000322  A4D8               	btfss	status,2,c
  3952  000324  EF96  F001         	goto	u5211
  3953  000328  EF99  F001         	goto	u5210
  3954  00032C                     u5211:
  3955  00032C  FFFF               	dw	65535	; assembler added errata NOP
  3956  00032E  EFB7  F001         	goto	l4387
  3957  000332                     u5210:
  3958  000332  FFFF               	dw	65535	; assembler added errata NOP
  3959  000334                     
  3960                           ; BSR set to: 0
  3961                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  3962  000334  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3963  000338  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3964  00033C  2ADE               	incf	postinc2,f,c
  3965  00033E  0E00               	movlw	0
  3966  000340  22DD               	addwfc	postdec2,f,c
  3967                           
  3968                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3969  000342  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3970  000346  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3971  00034A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3972  00034E  0E02               	movlw	2
  3973  000350  26DE               	addwf	postinc2,f,c
  3974  000352  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3975  000356  0E00               	movlw	0
  3976  000358  22DD               	addwfc	postdec2,f,c
  3977  00035A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3978  00035E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3979  000362  CFDE F088          	movff	postinc2,_prec
  3980  000366  CFDD F089          	movff	postdec2,_prec+1
  3981                           
  3982                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  3983  00036A  EF02  F002         	goto	l4397
  3984  00036E                     l4387:
  3985  00036E  FFFF               	dw	65535	; assembler added errata NOP
  3986                           
  3987                           ; BSR set to: 0
  3988                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  3989  000370  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3990  000374  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3991  000378  CFDE F008          	movff	postinc2,atoi@s
  3992  00037C  CFDD F009          	movff	postdec2,atoi@s+1
  3993  000380  EC06  F01E         	call	_atoi	;wreg free
  3994  000384  C008  F088         	movff	?_atoi,_prec
  3995  000388  C009  F089         	movff	?_atoi+1,_prec+1
  3996                           
  3997                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3998  00038C  EFD0  F001         	goto	l4391
  3999  000390                     l4389:
  4000  000390  FFFF               	dw	65535	; assembler added errata NOP
  4001                           
  4002                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  4003  000392  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4004  000396  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4005  00039A  2ADE               	incf	postinc2,f,c
  4006  00039C  0E00               	movlw	0
  4007  00039E  22DD               	addwfc	postdec2,f,c
  4008  0003A0                     l4391:
  4009  0003A0  FFFF               	dw	65535	; assembler added errata NOP
  4010  0003A2  0ED0               	movlw	208
  4011  0003A4  6E49               	movwf	??_vfpfcnvrt^0,c
  4012  0003A6  0EFF               	movlw	255
  4013  0003A8  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  4014  0003AA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4015  0003AE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4016  0003B2  CFDE FFF6          	movff	postinc2,tblptrl
  4017  0003B6  CFDD FFF7          	movff	postdec2,tblptrh
  4018  0003BA                     	if	0	;tblptru may be non-zero
  4019  0003BA                     	endif
  4020  0003BA                     	if	0	;tblptru may be non-zero
  4021  0003BA                     	endif
  4022  0003BA  0008               	tblrd		*
  4023  0003BC  FFFF               	dw	65535	; errata NOP
  4024  0003BE  50F5               	movf	tablat,w,c
  4025  0003C0  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  4026  0003C2  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  4027  0003C4  5049               	movf	??_vfpfcnvrt^0,w,c
  4028  0003C6  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4029  0003C8  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  4030  0003CA  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4031  0003CC  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  4032  0003CE  E10B               	bnz	u5220
  4033  0003D0  0E0A               	movlw	10
  4034  0003D2  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4035  0003D4  A0D8               	btfss	status,0,c
  4036  0003D6  EFEF  F001         	goto	u5221
  4037  0003DA  EFF3  F001         	goto	u5220
  4038  0003DE                     u5221:
  4039  0003DE  FFFF               	dw	65535	; assembler added errata NOP
  4040  0003E0  0E01               	movlw	1
  4041  0003E2  EFF5  F001         	goto	u5230
  4042  0003E6                     u5220:
  4043  0003E6  FFFF               	dw	65535	; assembler added errata NOP
  4044  0003E8  0E00               	movlw	0
  4045  0003EA                     u5230:
  4046  0003EA  FFFF               	dw	65535	; assembler added errata NOP
  4047  0003EC  6E53               	movwf	_vfpfcnvrt$1683^0,c
  4048  0003EE  6A54               	clrf	(_vfpfcnvrt$1683+1)^0,c
  4049  0003F0  5053               	movf	_vfpfcnvrt$1683^0,w,c
  4050  0003F2  1054               	iorwf	(_vfpfcnvrt$1683+1)^0,w,c
  4051  0003F4  A4D8               	btfss	status,2,c
  4052  0003F6  EFFF  F001         	goto	u5241
  4053  0003FA  EF02  F002         	goto	u5240
  4054  0003FE                     u5241:
  4055  0003FE  FFFF               	dw	65535	; assembler added errata NOP
  4056  000400  EFC8  F001         	goto	l4389
  4057  000404                     u5240:
  4058  000404                     l4397:
  4059  000404  FFFF               	dw	65535	; assembler added errata NOP
  4060                           
  4061                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 792:         if (
      +                          *fmt[0] == 'c') {
  4062  000406  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4063  00040A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4064  00040E  CFDE FFF6          	movff	postinc2,tblptrl
  4065  000412  CFDD FFF7          	movff	postdec2,tblptrh
  4066  000416                     	if	0	;tblptru may be non-zero
  4067  000416                     	endif
  4068  000416                     	if	0	;tblptru may be non-zero
  4069  000416                     	endif
  4070  000416  0008               	tblrd		*
  4071  000418  FFFF               	dw	65535	; errata NOP
  4072  00041A  50F5               	movf	tablat,w,c
  4073  00041C  0A63               	xorlw	99
  4074  00041E  A4D8               	btfss	status,2,c
  4075  000420  EF14  F002         	goto	u5251
  4076  000424  EF17  F002         	goto	u5250
  4077  000428                     u5251:
  4078  000428  FFFF               	dw	65535	; assembler added errata NOP
  4079  00042A  EF3F  F002         	goto	l4405
  4080  00042E                     u5250:
  4081  00042E  FFFF               	dw	65535	; assembler added errata NOP
  4082  000430                     
  4083                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 793:             
      +                          ++*fmt;
  4084  000430  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4085  000434  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4086  000438  2ADE               	incf	postinc2,f,c
  4087  00043A  0E00               	movlw	0
  4088  00043C  22DD               	addwfc	postdec2,f,c
  4089                           
  4090                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 794:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4091  00043E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4092  000442  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4093  000446  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4094  00044A  0E02               	movlw	2
  4095  00044C  26DE               	addwf	postinc2,f,c
  4096  00044E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4097  000452  0E00               	movlw	0
  4098  000454  22DD               	addwfc	postdec2,f,c
  4099  000456  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4100  00045A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4101  00045E  50DF               	movf	indf2,w,c
  4102  000460  6E5F               	movwf	vfpfcnvrt@c^0,c
  4103  000462                     
  4104                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 795:             
      +                          return ctoa(fp, c);
  4105  000462  C043  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  4106  000466  C044  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  4107  00046A  C05F  F01E         	movff	vfpfcnvrt@c,ctoa@c
  4108  00046E  ECDC  F035         	call	_ctoa	;wreg free
  4109  000472  C01C  F043         	movff	?_ctoa,?_vfpfcnvrt
  4110  000476  C01D  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  4111  00047A  EF2E  F00A         	goto	l1290
  4112  00047E                     l4405:
  4113  00047E  FFFF               	dw	65535	; assembler added errata NOP
  4114                           
  4115                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 802:         if (
      +                          !strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi", ((s
      +                          izeof("hhi")/sizeof("hhi"[0]))-1))) {
  4116  000480  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4117  000484  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4118  000488  CFDE F001          	movff	postinc2,strncmp@_l
  4119  00048C  CFDD F002          	movff	postdec2,strncmp@_l+1
  4120  000490  0ECF               	movlw	low STR_11
  4121  000492  6E03               	movwf	strncmp@_r^0,c
  4122  000494  0E7F               	movlw	high STR_11
  4123  000496  6E04               	movwf	(strncmp@_r+1)^0,c
  4124  000498  0E00               	movlw	0
  4125  00049A  6E06               	movwf	(strncmp@n+1)^0,c
  4126  00049C  0E03               	movlw	3
  4127  00049E  6E05               	movwf	strncmp@n^0,c
  4128  0004A0  ECBC  F03B         	call	_strncmp	;wreg free
  4129  0004A4  5001               	movf	?_strncmp^0,w,c
  4130  0004A6  1002               	iorwf	(?_strncmp+1)^0,w,c
  4131  0004A8  B4D8               	btfsc	status,2,c
  4132  0004AA  EF59  F002         	goto	u5261
  4133  0004AE  EF5C  F002         	goto	u5260
  4134  0004B2                     u5261:
  4135  0004B2  FFFF               	dw	65535	; assembler added errata NOP
  4136  0004B4  EF79  F002         	goto	l4409
  4137  0004B8                     u5260:
  4138  0004B8  FFFF               	dw	65535	; assembler added errata NOP
  4139  0004BA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4140  0004BE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4141  0004C2  CFDE F001          	movff	postinc2,strncmp@_l
  4142  0004C6  CFDD F002          	movff	postdec2,strncmp@_l+1
  4143  0004CA  0ED3               	movlw	low STR_15
  4144  0004CC  6E03               	movwf	strncmp@_r^0,c
  4145  0004CE  0E7F               	movlw	high STR_15
  4146  0004D0  6E04               	movwf	(strncmp@_r+1)^0,c
  4147  0004D2  0E00               	movlw	0
  4148  0004D4  6E06               	movwf	(strncmp@n+1)^0,c
  4149  0004D6  0E03               	movlw	3
  4150  0004D8  6E05               	movwf	strncmp@n^0,c
  4151  0004DA  ECBC  F03B         	call	_strncmp	;wreg free
  4152  0004DE  5001               	movf	?_strncmp^0,w,c
  4153  0004E0  1002               	iorwf	(?_strncmp+1)^0,w,c
  4154  0004E2  A4D8               	btfss	status,2,c
  4155  0004E4  EF76  F002         	goto	u5271
  4156  0004E8  EF79  F002         	goto	u5270
  4157  0004EC                     u5271:
  4158  0004EC  FFFF               	dw	65535	; assembler added errata NOP
  4159  0004EE  EFBB  F002         	goto	l4415
  4160  0004F2                     u5270:
  4161  0004F2                     l4409:
  4162  0004F2  FFFF               	dw	65535	; assembler added errata NOP
  4163                           
  4164                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 803: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 805:             *fmt += ((si
      +                          zeof("hhd")/sizeof("hhd"[0]))-1);
  4165  0004F4  0E03               	movlw	3
  4166  0004F6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4167  0004FA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4168  0004FE  26DE               	addwf	postinc2,f,c
  4169  000500  0E00               	movlw	0
  4170  000502  22DD               	addwfc	postdec2,f,c
  4171                           
  4172                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 806:             
      +                          ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4173  000504  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4174  000508  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4175  00050C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4176  000510  0E02               	movlw	2
  4177  000512  26DE               	addwf	postinc2,f,c
  4178  000514  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4179  000518  0E00               	movlw	0
  4180  00051A  22DD               	addwfc	postdec2,f,c
  4181  00051C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4182  000520  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4183  000524  50DF               	movf	indf2,w,c
  4184  000526  6E55               	movwf	vfpfcnvrt@ll^0,c
  4185  000528  0E00               	movlw	0
  4186  00052A  BE55               	btfsc	vfpfcnvrt@ll^0,7,c
  4187  00052C  0EFF               	movlw	-1
  4188  00052E  6E56               	movwf	(vfpfcnvrt@ll+1)^0,c
  4189  000530  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  4190  000532  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  4191  000534  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  4192  000536  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  4193  000538  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  4194  00053A  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  4195  00053C                     l4411:
  4196  00053C  FFFF               	dw	65535	; assembler added errata NOP
  4197                           
  4198                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 808:             
      +                          return dtoa(fp, ll);
  4199  00053E  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  4200  000542  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4201  000546  C055  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  4202  00054A  C056  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4203  00054E  C057  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4204  000552  C058  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4205  000556  C059  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4206  00055A  C05A  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4207  00055E  C05B  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4208  000562  C05C  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4209  000566  ECC5  F016         	call	_dtoa	;wreg free
  4210  00056A  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  4211  00056E  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4212  000572  EF2E  F00A         	goto	l1290
  4213  000576                     l4415:
  4214  000576  FFFF               	dw	65535	; assembler added errata NOP
  4215                           
  4216                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          !strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", ((sizeo
      +                          f("hi")/sizeof("hi"[0]))-1))) {
  4217  000578  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4218  00057C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4219  000580  CFDE F001          	movff	postinc2,strncmp@_l
  4220  000584  CFDD F002          	movff	postdec2,strncmp@_l+1
  4221  000588  0ED0               	movlw	low (STR_11+1)
  4222  00058A  6E03               	movwf	strncmp@_r^0,c
  4223  00058C  0E7F               	movlw	high (STR_11+1)
  4224  00058E  6E04               	movwf	(strncmp@_r+1)^0,c
  4225  000590  0E00               	movlw	0
  4226  000592  6E06               	movwf	(strncmp@n+1)^0,c
  4227  000594  0E02               	movlw	2
  4228  000596  6E05               	movwf	strncmp@n^0,c
  4229  000598  ECBC  F03B         	call	_strncmp	;wreg free
  4230  00059C  5001               	movf	?_strncmp^0,w,c
  4231  00059E  1002               	iorwf	(?_strncmp+1)^0,w,c
  4232  0005A0  B4D8               	btfsc	status,2,c
  4233  0005A2  EFD5  F002         	goto	u5281
  4234  0005A6  EFD8  F002         	goto	u5280
  4235  0005AA                     u5281:
  4236  0005AA  FFFF               	dw	65535	; assembler added errata NOP
  4237  0005AC  EFF5  F002         	goto	l4419
  4238  0005B0                     u5280:
  4239  0005B0  FFFF               	dw	65535	; assembler added errata NOP
  4240  0005B2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4241  0005B6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4242  0005BA  CFDE F001          	movff	postinc2,strncmp@_l
  4243  0005BE  CFDD F002          	movff	postdec2,strncmp@_l+1
  4244  0005C2  0ED4               	movlw	low (STR_15+1)
  4245  0005C4  6E03               	movwf	strncmp@_r^0,c
  4246  0005C6  0E7F               	movlw	high (STR_15+1)
  4247  0005C8  6E04               	movwf	(strncmp@_r+1)^0,c
  4248  0005CA  0E00               	movlw	0
  4249  0005CC  6E06               	movwf	(strncmp@n+1)^0,c
  4250  0005CE  0E02               	movlw	2
  4251  0005D0  6E05               	movwf	strncmp@n^0,c
  4252  0005D2  ECBC  F03B         	call	_strncmp	;wreg free
  4253  0005D6  5001               	movf	?_strncmp^0,w,c
  4254  0005D8  1002               	iorwf	(?_strncmp+1)^0,w,c
  4255  0005DA  A4D8               	btfss	status,2,c
  4256  0005DC  EFF2  F002         	goto	u5291
  4257  0005E0  EFF5  F002         	goto	u5290
  4258  0005E4                     u5291:
  4259  0005E4  FFFF               	dw	65535	; assembler added errata NOP
  4260  0005E6  EF1D  F003         	goto	l4425
  4261  0005EA                     u5290:
  4262  0005EA                     l4419:
  4263  0005EA  FFFF               	dw	65535	; assembler added errata NOP
  4264                           
  4265                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 815: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 817:             *fmt += ((si
      +                          zeof("hd")/sizeof("hd"[0]))-1);
  4266  0005EC  0E02               	movlw	2
  4267  0005EE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4268  0005F2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4269  0005F6  26DE               	addwf	postinc2,f,c
  4270  0005F8  0E00               	movlw	0
  4271  0005FA  22DD               	addwfc	postdec2,f,c
  4272                           
  4273                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 818:             
      +                          ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4274  0005FC  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4275  000600  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4276  000604  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4277  000608  0E02               	movlw	2
  4278  00060A  26DE               	addwf	postinc2,f,c
  4279  00060C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4280  000610  0E00               	movlw	0
  4281  000612  22DD               	addwfc	postdec2,f,c
  4282  000614  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4283  000618  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4284  00061C  CFDE F055          	movff	postinc2,vfpfcnvrt@ll
  4285  000620  CFDD F056          	movff	postdec2,vfpfcnvrt@ll+1
  4286  000624  0E00               	movlw	0
  4287  000626  BE56               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  4288  000628  0EFF               	movlw	-1
  4289  00062A  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  4290  00062C  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  4291  00062E  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  4292  000630  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  4293  000632  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  4294  000634  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  4295  000636  EF9E  F002         	goto	l4411
  4296  00063A                     l4425:
  4297  00063A  FFFF               	dw	65535	; assembler added errata NOP
  4298                           
  4299                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4300  00063C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4301  000640  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4302  000644  CFDE FFF6          	movff	postinc2,tblptrl
  4303  000648  CFDD FFF7          	movff	postdec2,tblptrh
  4304  00064C                     	if	0	;tblptru may be non-zero
  4305  00064C                     	endif
  4306  00064C                     	if	0	;tblptru may be non-zero
  4307  00064C                     	endif
  4308  00064C  0008               	tblrd		*
  4309  00064E  FFFF               	dw	65535	; errata NOP
  4310  000650  50F5               	movf	tablat,w,c
  4311  000652  0A64               	xorlw	100
  4312  000654  B4D8               	btfsc	status,2,c
  4313  000656  EF2F  F003         	goto	u5301
  4314  00065A  EF32  F003         	goto	u5300
  4315  00065E                     u5301:
  4316  00065E  FFFF               	dw	65535	; assembler added errata NOP
  4317  000660  EF47  F003         	goto	l4429
  4318  000664                     u5300:
  4319  000664  FFFF               	dw	65535	; assembler added errata NOP
  4320  000666  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4321  00066A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4322  00066E  CFDE FFF6          	movff	postinc2,tblptrl
  4323  000672  CFDD FFF7          	movff	postdec2,tblptrh
  4324  000676                     	if	0	;tblptru may be non-zero
  4325  000676                     	endif
  4326  000676                     	if	0	;tblptru may be non-zero
  4327  000676                     	endif
  4328  000676  0008               	tblrd		*
  4329  000678  FFFF               	dw	65535	; errata NOP
  4330  00067A  50F5               	movf	tablat,w,c
  4331  00067C  0A69               	xorlw	105
  4332  00067E  A4D8               	btfss	status,2,c
  4333  000680  EF44  F003         	goto	u5311
  4334  000684  EF47  F003         	goto	u5310
  4335  000688                     u5311:
  4336  000688  FFFF               	dw	65535	; assembler added errata NOP
  4337  00068A  EF6E  F003         	goto	l4435
  4338  00068E                     u5310:
  4339  00068E                     l4429:
  4340  00068E  FFFF               	dw	65535	; assembler added errata NOP
  4341                           
  4342                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  4343  000690  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4344  000694  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4345  000698  2ADE               	incf	postinc2,f,c
  4346  00069A  0E00               	movlw	0
  4347  00069C  22DD               	addwfc	postdec2,f,c
  4348                           
  4349                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4350  00069E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4351  0006A2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4352  0006A6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4353  0006AA  0E02               	movlw	2
  4354  0006AC  26DE               	addwf	postinc2,f,c
  4355  0006AE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4356  0006B2  0E00               	movlw	0
  4357  0006B4  22DD               	addwfc	postdec2,f,c
  4358  0006B6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4359  0006BA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4360  0006BE  CFDE F055          	movff	postinc2,vfpfcnvrt@ll
  4361  0006C2  CFDD F056          	movff	postdec2,vfpfcnvrt@ll+1
  4362  0006C6  0E00               	movlw	0
  4363  0006C8  BE56               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  4364  0006CA  0EFF               	movlw	-1
  4365  0006CC  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  4366  0006CE  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  4367  0006D0  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  4368  0006D2  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  4369  0006D4  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  4370  0006D6  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  4371  0006D8  EF9E  F002         	goto	l4411
  4372  0006DC                     l4435:
  4373  0006DC  FFFF               	dw	65535	; assembler added errata NOP
  4374                           
  4375                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 883:         if (
      +                          !strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", ((sizeo
      +                          f("zi")/sizeof("zi"[0]))-1))) {
  4376  0006DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4377  0006E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4378  0006E6  CFDE F001          	movff	postinc2,strncmp@_l
  4379  0006EA  CFDD F002          	movff	postdec2,strncmp@_l+1
  4380  0006EE  0EEA               	movlw	low STR_29
  4381  0006F0  6E03               	movwf	strncmp@_r^0,c
  4382  0006F2  0E7F               	movlw	high STR_29
  4383  0006F4  6E04               	movwf	(strncmp@_r+1)^0,c
  4384  0006F6  0E00               	movlw	0
  4385  0006F8  6E06               	movwf	(strncmp@n+1)^0,c
  4386  0006FA  0E02               	movlw	2
  4387  0006FC  6E05               	movwf	strncmp@n^0,c
  4388  0006FE  ECBC  F03B         	call	_strncmp	;wreg free
  4389  000702  5001               	movf	?_strncmp^0,w,c
  4390  000704  1002               	iorwf	(?_strncmp+1)^0,w,c
  4391  000706  B4D8               	btfsc	status,2,c
  4392  000708  EF88  F003         	goto	u5321
  4393  00070C  EF8B  F003         	goto	u5320
  4394  000710                     u5321:
  4395  000710  FFFF               	dw	65535	; assembler added errata NOP
  4396  000712  EFA8  F003         	goto	l4439
  4397  000716                     u5320:
  4398  000716  FFFF               	dw	65535	; assembler added errata NOP
  4399  000718  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4400  00071C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4401  000720  CFDE F001          	movff	postinc2,strncmp@_l
  4402  000724  CFDD F002          	movff	postdec2,strncmp@_l+1
  4403  000728  0EED               	movlw	low STR_33
  4404  00072A  6E03               	movwf	strncmp@_r^0,c
  4405  00072C  0E7F               	movlw	high STR_33
  4406  00072E  6E04               	movwf	(strncmp@_r+1)^0,c
  4407  000730  0E00               	movlw	0
  4408  000732  6E06               	movwf	(strncmp@n+1)^0,c
  4409  000734  0E02               	movlw	2
  4410  000736  6E05               	movwf	strncmp@n^0,c
  4411  000738  ECBC  F03B         	call	_strncmp	;wreg free
  4412  00073C  5001               	movf	?_strncmp^0,w,c
  4413  00073E  1002               	iorwf	(?_strncmp+1)^0,w,c
  4414  000740  A4D8               	btfss	status,2,c
  4415  000742  EFA5  F003         	goto	u5331
  4416  000746  EFA8  F003         	goto	u5330
  4417  00074A                     u5331:
  4418  00074A  FFFF               	dw	65535	; assembler added errata NOP
  4419  00074C  EFD1  F003         	goto	l4445
  4420  000750                     u5330:
  4421  000750                     l4439:
  4422  000750  FFFF               	dw	65535	; assembler added errata NOP
  4423                           
  4424                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 884: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 886:             *fmt += ((si
      +                          zeof("zd")/sizeof("zd"[0]))-1);
  4425  000752  0E02               	movlw	2
  4426  000754  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4427  000758  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4428  00075C  26DE               	addwf	postinc2,f,c
  4429  00075E  0E00               	movlw	0
  4430  000760  22DD               	addwfc	postdec2,f,c
  4431                           
  4432                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 887:             
      +                          ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4433  000762  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4434  000766  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4435  00076A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4436  00076E  0E02               	movlw	2
  4437  000770  26DE               	addwf	postinc2,f,c
  4438  000772  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4439  000776  0E00               	movlw	0
  4440  000778  22DD               	addwfc	postdec2,f,c
  4441  00077A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4442  00077E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4443  000782  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4444  000786  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4445  00078A  C04B  F055         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  4446  00078E  C04C  F056         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  4447  000792  6A57               	clrf	(vfpfcnvrt@ll+2)^0,c
  4448  000794  6A58               	clrf	(vfpfcnvrt@ll+3)^0,c
  4449  000796  6A59               	clrf	(vfpfcnvrt@ll+4)^0,c
  4450  000798  6A5A               	clrf	(vfpfcnvrt@ll+5)^0,c
  4451  00079A  6A5B               	clrf	(vfpfcnvrt@ll+6)^0,c
  4452  00079C  6A5C               	clrf	(vfpfcnvrt@ll+7)^0,c
  4453  00079E  EF9E  F002         	goto	l4411
  4454  0007A2                     l4445:
  4455  0007A2  FFFF               	dw	65535	; assembler added errata NOP
  4456                           
  4457                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 969:         if (
      +                          !strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  4458  0007A4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4459  0007A8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4460  0007AC  CFDE F001          	movff	postinc2,strncmp@_l
  4461  0007B0  CFDD F002          	movff	postdec2,strncmp@_l+1
  4462  0007B4  0EDB               	movlw	low STR_38
  4463  0007B6  6E03               	movwf	strncmp@_r^0,c
  4464  0007B8  0E7F               	movlw	high STR_38
  4465  0007BA  6E04               	movwf	(strncmp@_r+1)^0,c
  4466  0007BC  0E00               	movlw	0
  4467  0007BE  6E06               	movwf	(strncmp@n+1)^0,c
  4468  0007C0  0E03               	movlw	3
  4469  0007C2  6E05               	movwf	strncmp@n^0,c
  4470  0007C4  ECBC  F03B         	call	_strncmp	;wreg free
  4471  0007C8  5001               	movf	?_strncmp^0,w,c
  4472  0007CA  1002               	iorwf	(?_strncmp+1)^0,w,c
  4473  0007CC  A4D8               	btfss	status,2,c
  4474  0007CE  EFEB  F003         	goto	u5341
  4475  0007D2  EFEE  F003         	goto	u5340
  4476  0007D6                     u5341:
  4477  0007D6  FFFF               	dw	65535	; assembler added errata NOP
  4478  0007D8  EF2F  F004         	goto	l4453
  4479  0007DC                     u5340:
  4480  0007DC  FFFF               	dw	65535	; assembler added errata NOP
  4481  0007DE                     
  4482                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 971:             
      +                          *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  4483  0007DE  0E03               	movlw	3
  4484  0007E0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4485  0007E4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4486  0007E8  26DE               	addwf	postinc2,f,c
  4487  0007EA  0E00               	movlw	0
  4488  0007EC  22DD               	addwfc	postdec2,f,c
  4489                           
  4490                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 972:             
      +                          llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4491  0007EE  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4492  0007F2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4493  0007F6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4494  0007FA  0E02               	movlw	2
  4495  0007FC  26DE               	addwf	postinc2,f,c
  4496  0007FE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4497  000802  0E00               	movlw	0
  4498  000804  22DD               	addwfc	postdec2,f,c
  4499  000806  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4500  00080A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4501  00080E  50DF               	movf	indf2,w,c
  4502  000810  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  4503  000812  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  4504  000814  6E60               	movwf	vfpfcnvrt@llu^0,c
  4505  000816  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  4506  000818  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4507  00081A  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4508  00081C  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4509  00081E  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4510  000820  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4511  000822  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4512  000824                     l4449:
  4513  000824  FFFF               	dw	65535	; assembler added errata NOP
  4514                           
  4515                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 974:             
      +                          return otoa(fp, llu);
  4516  000826  C043  F01C         	movff	vfpfcnvrt@fp,otoa@fp
  4517  00082A  C044  F01D         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  4518  00082E  C060  F01E         	movff	vfpfcnvrt@llu,otoa@d
  4519  000832  C061  F01F         	movff	vfpfcnvrt@llu+1,otoa@d+1
  4520  000836  C062  F020         	movff	vfpfcnvrt@llu+2,otoa@d+2
  4521  00083A  C063  F021         	movff	vfpfcnvrt@llu+3,otoa@d+3
  4522  00083E  C064  F022         	movff	vfpfcnvrt@llu+4,otoa@d+4
  4523  000842  C065  F023         	movff	vfpfcnvrt@llu+5,otoa@d+5
  4524  000846  C066  F024         	movff	vfpfcnvrt@llu+6,otoa@d+6
  4525  00084A  C067  F025         	movff	vfpfcnvrt@llu+7,otoa@d+7
  4526  00084E  EC0D  F01B         	call	_otoa	;wreg free
  4527  000852  C01C  F043         	movff	?_otoa,?_vfpfcnvrt
  4528  000856  C01D  F044         	movff	?_otoa+1,?_vfpfcnvrt+1
  4529  00085A  EF2E  F00A         	goto	l1290
  4530  00085E                     l4453:
  4531  00085E  FFFF               	dw	65535	; assembler added errata NOP
  4532                           
  4533                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 980:         if (
      +                          !strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  4534  000860  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4535  000864  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4536  000868  CFDE F001          	movff	postinc2,strncmp@_l
  4537  00086C  CFDD F002          	movff	postdec2,strncmp@_l+1
  4538  000870  0EDC               	movlw	low (STR_38+1)
  4539  000872  6E03               	movwf	strncmp@_r^0,c
  4540  000874  0E7F               	movlw	high (STR_38+1)
  4541  000876  6E04               	movwf	(strncmp@_r+1)^0,c
  4542  000878  0E00               	movlw	0
  4543  00087A  6E06               	movwf	(strncmp@n+1)^0,c
  4544  00087C  0E02               	movlw	2
  4545  00087E  6E05               	movwf	strncmp@n^0,c
  4546  000880  ECBC  F03B         	call	_strncmp	;wreg free
  4547  000884  5001               	movf	?_strncmp^0,w,c
  4548  000886  1002               	iorwf	(?_strncmp+1)^0,w,c
  4549  000888  A4D8               	btfss	status,2,c
  4550  00088A  EF49  F004         	goto	u5351
  4551  00088E  EF4C  F004         	goto	u5350
  4552  000892                     u5351:
  4553  000892  FFFF               	dw	65535	; assembler added errata NOP
  4554  000894  EF75  F004         	goto	l4461
  4555  000898                     u5350:
  4556  000898  FFFF               	dw	65535	; assembler added errata NOP
  4557  00089A                     
  4558                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 982:             
      +                          *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  4559  00089A  0E02               	movlw	2
  4560  00089C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4561  0008A0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4562  0008A4  26DE               	addwf	postinc2,f,c
  4563  0008A6  0E00               	movlw	0
  4564  0008A8  22DD               	addwfc	postdec2,f,c
  4565                           
  4566                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 983:             
      +                          llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4567  0008AA  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4568  0008AE  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4569  0008B2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4570  0008B6  0E02               	movlw	2
  4571  0008B8  26DE               	addwf	postinc2,f,c
  4572  0008BA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4573  0008BE  0E00               	movlw	0
  4574  0008C0  22DD               	addwfc	postdec2,f,c
  4575  0008C2  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4576  0008C6  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4577  0008CA  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4578  0008CE  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4579  0008D2  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4580  0008D6  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4581  0008DA  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4582  0008DC  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4583  0008DE  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4584  0008E0  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4585  0008E2  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4586  0008E4  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4587  0008E6  EF12  F004         	goto	l4449
  4588  0008EA                     l4461:
  4589  0008EA  FFFF               	dw	65535	; assembler added errata NOP
  4590                           
  4591                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 990:         if (
      +                          *fmt[0] == 'o') {
  4592  0008EC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4593  0008F0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4594  0008F4  CFDE FFF6          	movff	postinc2,tblptrl
  4595  0008F8  CFDD FFF7          	movff	postdec2,tblptrh
  4596  0008FC                     	if	0	;tblptru may be non-zero
  4597  0008FC                     	endif
  4598  0008FC                     	if	0	;tblptru may be non-zero
  4599  0008FC                     	endif
  4600  0008FC  0008               	tblrd		*
  4601  0008FE  FFFF               	dw	65535	; errata NOP
  4602  000900  50F5               	movf	tablat,w,c
  4603  000902  0A6F               	xorlw	111
  4604  000904  A4D8               	btfss	status,2,c
  4605  000906  EF87  F004         	goto	u5361
  4606  00090A  EF8A  F004         	goto	u5360
  4607  00090E                     u5361:
  4608  00090E  FFFF               	dw	65535	; assembler added errata NOP
  4609  000910  EFB2  F004         	goto	l4469
  4610  000914                     u5360:
  4611  000914  FFFF               	dw	65535	; assembler added errata NOP
  4612  000916                     
  4613                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 992:             
      +                          ++*fmt;
  4614  000916  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4615  00091A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4616  00091E  2ADE               	incf	postinc2,f,c
  4617  000920  0E00               	movlw	0
  4618  000922  22DD               	addwfc	postdec2,f,c
  4619                           
  4620                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 993:             
      +                          llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int
      +                          )0));
  4621  000924  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4622  000928  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4623  00092C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4624  000930  0E02               	movlw	2
  4625  000932  26DE               	addwf	postinc2,f,c
  4626  000934  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4627  000938  0E00               	movlw	0
  4628  00093A  22DD               	addwfc	postdec2,f,c
  4629  00093C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4630  000940  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4631  000944  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4632  000948  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4633  00094C  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4634  000950  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4635  000954  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4636  000956  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4637  000958  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4638  00095A  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4639  00095C  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4640  00095E  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4641  000960  EF12  F004         	goto	l4449
  4642  000964                     l4469:
  4643  000964  FFFF               	dw	65535	; assembler added errata NOP
  4644                           
  4645                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1044:         if 
      +                          (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  4646  000966  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4647  00096A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4648  00096E  CFDE F001          	movff	postinc2,strncmp@_l
  4649  000972  CFDD F002          	movff	postdec2,strncmp@_l+1
  4650  000976  0EF3               	movlw	low STR_48
  4651  000978  6E03               	movwf	strncmp@_r^0,c
  4652  00097A  0E7F               	movlw	high STR_48
  4653  00097C  6E04               	movwf	(strncmp@_r+1)^0,c
  4654  00097E  0E00               	movlw	0
  4655  000980  6E06               	movwf	(strncmp@n+1)^0,c
  4656  000982  0E02               	movlw	2
  4657  000984  6E05               	movwf	strncmp@n^0,c
  4658  000986  ECBC  F03B         	call	_strncmp	;wreg free
  4659  00098A  5001               	movf	?_strncmp^0,w,c
  4660  00098C  1002               	iorwf	(?_strncmp+1)^0,w,c
  4661  00098E  A4D8               	btfss	status,2,c
  4662  000990  EFCC  F004         	goto	u5371
  4663  000994  EFCF  F004         	goto	u5370
  4664  000998                     u5371:
  4665  000998  FFFF               	dw	65535	; assembler added errata NOP
  4666  00099A  EFF8  F004         	goto	l4477
  4667  00099E                     u5370:
  4668  00099E  FFFF               	dw	65535	; assembler added errata NOP
  4669  0009A0                     
  4670                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1046:            
      +                           *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  4671  0009A0  0E02               	movlw	2
  4672  0009A2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4673  0009A6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4674  0009AA  26DE               	addwf	postinc2,f,c
  4675  0009AC  0E00               	movlw	0
  4676  0009AE  22DD               	addwfc	postdec2,f,c
  4677                           
  4678                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1047:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4679  0009B0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4680  0009B4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4681  0009B8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4682  0009BC  0E02               	movlw	2
  4683  0009BE  26DE               	addwf	postinc2,f,c
  4684  0009C0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4685  0009C4  0E00               	movlw	0
  4686  0009C6  22DD               	addwfc	postdec2,f,c
  4687  0009C8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4688  0009CC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4689  0009D0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4690  0009D4  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4691  0009D8  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4692  0009DC  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4693  0009E0  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4694  0009E2  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4695  0009E4  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4696  0009E6  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4697  0009E8  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4698  0009EA  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4699  0009EC  EF12  F004         	goto	l4449
  4700  0009F0                     l4477:
  4701  0009F0  FFFF               	dw	65535	; assembler added errata NOP
  4702                           
  4703                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1058:         if 
      +                          (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  4704  0009F2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4705  0009F6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4706  0009FA  CFDE F001          	movff	postinc2,strncmp@_l
  4707  0009FE  CFDD F002          	movff	postdec2,strncmp@_l+1
  4708  000A02  0ED7               	movlw	low STR_53
  4709  000A04  6E03               	movwf	strncmp@_r^0,c
  4710  000A06  0E7F               	movlw	high STR_53
  4711  000A08  6E04               	movwf	(strncmp@_r+1)^0,c
  4712  000A0A  0E00               	movlw	0
  4713  000A0C  6E06               	movwf	(strncmp@n+1)^0,c
  4714  000A0E  0E03               	movlw	3
  4715  000A10  6E05               	movwf	strncmp@n^0,c
  4716  000A12  ECBC  F03B         	call	_strncmp	;wreg free
  4717  000A16  5001               	movf	?_strncmp^0,w,c
  4718  000A18  1002               	iorwf	(?_strncmp+1)^0,w,c
  4719  000A1A  A4D8               	btfss	status,2,c
  4720  000A1C  EF12  F005         	goto	u5381
  4721  000A20  EF15  F005         	goto	u5380
  4722  000A24                     u5381:
  4723  000A24  FFFF               	dw	65535	; assembler added errata NOP
  4724  000A26  EF4B  F005         	goto	l4487
  4725  000A2A                     u5380:
  4726  000A2A  FFFF               	dw	65535	; assembler added errata NOP
  4727  000A2C                     
  4728                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1060:            
      +                           *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  4729  000A2C  0E03               	movlw	3
  4730  000A2E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4731  000A32  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4732  000A36  26DE               	addwf	postinc2,f,c
  4733  000A38  0E00               	movlw	0
  4734  000A3A  22DD               	addwfc	postdec2,f,c
  4735                           
  4736                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1061:            
      +                           vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  4737  000A3C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4738  000A40  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4739  000A44  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4740  000A48  0E02               	movlw	2
  4741  000A4A  26DE               	addwf	postinc2,f,c
  4742  000A4C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4743  000A50  0E00               	movlw	0
  4744  000A52  22DD               	addwfc	postdec2,f,c
  4745  000A54  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4746  000A58  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4747  000A5C  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  4748  000A60  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  4749  000A64                     
  4750                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1062:            
      +                           *(char *)vp = (char)nout;
  4751  000A64  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  4752  000A68  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  4753  000A6C  6AF8               	clrf	tblptru,c
  4754  000A6E  0E05               	movlw	(high __ramtop+-1)
  4755  000A70  64F7               	cpfsgt	tblptrh,c
  4756  000A72  D004               	bra	u5397
  4757  000A74  C084  FFF5         	movff	_nout,tablat
  4758  000A78  000C               	tblwt		*
  4759  000A7A  D006               	bra	u5390
  4760  000A7C                     u5397:
  4761  000A7C  CFF6 FFE1          	movff	tblptrl,fsr1l
  4762  000A80  CFF7 FFE2          	movff	tblptrh,fsr1h
  4763  000A84  C084  FFE7         	movff	_nout,indf1
  4764  000A88                     u5390:
  4765  000A88                     l4483:
  4766  000A88  FFFF               	dw	65535	; assembler added errata NOP
  4767                           
  4768                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1063:            
      +                           return 0;
  4769  000A8A  0E00               	movlw	0
  4770  000A8C  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  4771  000A8E  0E00               	movlw	0
  4772  000A90  6E43               	movwf	?_vfpfcnvrt^0,c
  4773  000A92  EF2E  F00A         	goto	l1290
  4774  000A96                     l4487:
  4775  000A96  FFFF               	dw	65535	; assembler added errata NOP
  4776                           
  4777                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1068:         if 
      +                          (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  4778  000A98  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4779  000A9C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4780  000AA0  CFDE F001          	movff	postinc2,strncmp@_l
  4781  000AA4  CFDD F002          	movff	postdec2,strncmp@_l+1
  4782  000AA8  0ED8               	movlw	low (STR_53+1)
  4783  000AAA  6E03               	movwf	strncmp@_r^0,c
  4784  000AAC  0E7F               	movlw	high (STR_53+1)
  4785  000AAE  6E04               	movwf	(strncmp@_r+1)^0,c
  4786  000AB0  0E00               	movlw	0
  4787  000AB2  6E06               	movwf	(strncmp@n+1)^0,c
  4788  000AB4  0E02               	movlw	2
  4789  000AB6  6E05               	movwf	strncmp@n^0,c
  4790  000AB8  ECBC  F03B         	call	_strncmp	;wreg free
  4791  000ABC  5001               	movf	?_strncmp^0,w,c
  4792  000ABE  1002               	iorwf	(?_strncmp+1)^0,w,c
  4793  000AC0  A4D8               	btfss	status,2,c
  4794  000AC2  EF65  F005         	goto	u5401
  4795  000AC6  EF68  F005         	goto	u5400
  4796  000ACA                     u5401:
  4797  000ACA  FFFF               	dw	65535	; assembler added errata NOP
  4798  000ACC  EF9E  F005         	goto	l4497
  4799  000AD0                     u5400:
  4800  000AD0  FFFF               	dw	65535	; assembler added errata NOP
  4801  000AD2                     
  4802                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1070:            
      +                           *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  4803  000AD2  0E02               	movlw	2
  4804  000AD4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4805  000AD8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4806  000ADC  26DE               	addwf	postinc2,f,c
  4807  000ADE  0E00               	movlw	0
  4808  000AE0  22DD               	addwfc	postdec2,f,c
  4809                           
  4810                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1071:            
      +                           vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  4811  000AE2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4812  000AE6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4813  000AEA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4814  000AEE  0E02               	movlw	2
  4815  000AF0  26DE               	addwf	postinc2,f,c
  4816  000AF2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4817  000AF6  0E00               	movlw	0
  4818  000AF8  22DD               	addwfc	postdec2,f,c
  4819  000AFA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4820  000AFE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4821  000B02  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  4822  000B06  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  4823  000B0A                     
  4824                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1072:            
      +                           *(short *)vp = (short)nout;
  4825  000B0A  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  4826  000B0E  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  4827  000B12  6AF8               	clrf	tblptru,c
  4828  000B14  0E05               	movlw	(high __ramtop+-1)
  4829  000B16  64F7               	cpfsgt	tblptrh,c
  4830  000B18  D007               	bra	u5417
  4831  000B1A  C084  FFF5         	movff	_nout,tablat
  4832  000B1E  000D               	tblwt		*+
  4833  000B20  C085  FFF5         	movff	_nout+1,tablat
  4834  000B24  000C               	tblwt		*
  4835  000B26  D008               	bra	u5410
  4836  000B28                     u5417:
  4837  000B28  CFF6 FFE1          	movff	tblptrl,fsr1l
  4838  000B2C  CFF7 FFE2          	movff	tblptrh,fsr1h
  4839  000B30  C084  FFE6         	movff	_nout,postinc1
  4840  000B34  C085  FFE7         	movff	_nout+1,indf1
  4841  000B38                     u5410:
  4842  000B38  EF44  F005         	goto	l4483
  4843  000B3C                     l4497:
  4844  000B3C  FFFF               	dw	65535	; assembler added errata NOP
  4845                           
  4846                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1077:         if 
      +                          (*fmt[0] == 'n') {
  4847  000B3E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4848  000B42  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4849  000B46  CFDE FFF6          	movff	postinc2,tblptrl
  4850  000B4A  CFDD FFF7          	movff	postdec2,tblptrh
  4851  000B4E                     	if	0	;tblptru may be non-zero
  4852  000B4E                     	endif
  4853  000B4E                     	if	0	;tblptru may be non-zero
  4854  000B4E                     	endif
  4855  000B4E  0008               	tblrd		*
  4856  000B50  FFFF               	dw	65535	; errata NOP
  4857  000B52  50F5               	movf	tablat,w,c
  4858  000B54  0A6E               	xorlw	110
  4859  000B56  A4D8               	btfss	status,2,c
  4860  000B58  EFB0  F005         	goto	u5421
  4861  000B5C  EFB3  F005         	goto	u5420
  4862  000B60                     u5421:
  4863  000B60  FFFF               	dw	65535	; assembler added errata NOP
  4864  000B62  EFE8  F005         	goto	l4507
  4865  000B66                     u5420:
  4866  000B66  FFFF               	dw	65535	; assembler added errata NOP
  4867  000B68                     
  4868                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1078:            
      +                           ++*fmt;
  4869  000B68  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4870  000B6C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4871  000B70  2ADE               	incf	postinc2,f,c
  4872  000B72  0E00               	movlw	0
  4873  000B74  22DD               	addwfc	postdec2,f,c
  4874                           
  4875                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1079:            
      +                           vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  4876  000B76  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4877  000B7A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4878  000B7E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4879  000B82  0E02               	movlw	2
  4880  000B84  26DE               	addwf	postinc2,f,c
  4881  000B86  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4882  000B8A  0E00               	movlw	0
  4883  000B8C  22DD               	addwfc	postdec2,f,c
  4884  000B8E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4885  000B92  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4886  000B96  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  4887  000B9A  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  4888  000B9E                     
  4889                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1080:            
      +                           *(int *)vp = nout;
  4890  000B9E  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  4891  000BA2  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  4892  000BA6  6AF8               	clrf	tblptru,c
  4893  000BA8  0E05               	movlw	(high __ramtop+-1)
  4894  000BAA  64F7               	cpfsgt	tblptrh,c
  4895  000BAC  D007               	bra	u5437
  4896  000BAE  C084  FFF5         	movff	_nout,tablat
  4897  000BB2  000D               	tblwt		*+
  4898  000BB4  C085  FFF5         	movff	_nout+1,tablat
  4899  000BB8  000C               	tblwt		*
  4900  000BBA  D008               	bra	u5430
  4901  000BBC                     u5437:
  4902  000BBC  CFF6 FFE1          	movff	tblptrl,fsr1l
  4903  000BC0  CFF7 FFE2          	movff	tblptrh,fsr1h
  4904  000BC4  C084  FFE6         	movff	_nout,postinc1
  4905  000BC8  C085  FFE7         	movff	_nout+1,indf1
  4906  000BCC                     u5430:
  4907  000BCC  EF44  F005         	goto	l4483
  4908  000BD0                     l4507:
  4909  000BD0  FFFF               	dw	65535	; assembler added errata NOP
  4910                           
  4911                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1125:         if 
      +                          (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  4912  000BD2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4913  000BD6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4914  000BDA  CFDE F001          	movff	postinc2,strncmp@_l
  4915  000BDE  CFDD F002          	movff	postdec2,strncmp@_l+1
  4916  000BE2  0EF0               	movlw	low STR_63
  4917  000BE4  6E03               	movwf	strncmp@_r^0,c
  4918  000BE6  0E7F               	movlw	high STR_63
  4919  000BE8  6E04               	movwf	(strncmp@_r+1)^0,c
  4920  000BEA  0E00               	movlw	0
  4921  000BEC  6E06               	movwf	(strncmp@n+1)^0,c
  4922  000BEE  0E02               	movlw	2
  4923  000BF0  6E05               	movwf	strncmp@n^0,c
  4924  000BF2  ECBC  F03B         	call	_strncmp	;wreg free
  4925  000BF6  5001               	movf	?_strncmp^0,w,c
  4926  000BF8  1002               	iorwf	(?_strncmp+1)^0,w,c
  4927  000BFA  A4D8               	btfss	status,2,c
  4928  000BFC  EF02  F006         	goto	u5441
  4929  000C00  EF05  F006         	goto	u5440
  4930  000C04                     u5441:
  4931  000C04  FFFF               	dw	65535	; assembler added errata NOP
  4932  000C06  EF3B  F006         	goto	l4517
  4933  000C0A                     u5440:
  4934  000C0A  FFFF               	dw	65535	; assembler added errata NOP
  4935  000C0C                     
  4936                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1127:            
      +                           *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  4937  000C0C  0E02               	movlw	2
  4938  000C0E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4939  000C12  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4940  000C16  26DE               	addwf	postinc2,f,c
  4941  000C18  0E00               	movlw	0
  4942  000C1A  22DD               	addwfc	postdec2,f,c
  4943                           
  4944                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1128:            
      +                           vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  4945  000C1C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4946  000C20  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4947  000C24  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4948  000C28  0E02               	movlw	2
  4949  000C2A  26DE               	addwf	postinc2,f,c
  4950  000C2C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4951  000C30  0E00               	movlw	0
  4952  000C32  22DD               	addwfc	postdec2,f,c
  4953  000C34  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4954  000C38  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4955  000C3C  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  4956  000C40  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  4957  000C44                     
  4958                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1129:            
      +                           *(size_t *)vp = (size_t)nout;
  4959  000C44  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  4960  000C48  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  4961  000C4C  6AF8               	clrf	tblptru,c
  4962  000C4E  0E05               	movlw	(high __ramtop+-1)
  4963  000C50  64F7               	cpfsgt	tblptrh,c
  4964  000C52  D007               	bra	u5457
  4965  000C54  C084  FFF5         	movff	_nout,tablat
  4966  000C58  000D               	tblwt		*+
  4967  000C5A  C085  FFF5         	movff	_nout+1,tablat
  4968  000C5E  000C               	tblwt		*
  4969  000C60  D008               	bra	u5450
  4970  000C62                     u5457:
  4971  000C62  CFF6 FFE1          	movff	tblptrl,fsr1l
  4972  000C66  CFF7 FFE2          	movff	tblptrh,fsr1h
  4973  000C6A  C084  FFE6         	movff	_nout,postinc1
  4974  000C6E  C085  FFE7         	movff	_nout+1,indf1
  4975  000C72                     u5450:
  4976  000C72  EF44  F005         	goto	l4483
  4977  000C76                     l4517:
  4978  000C76  FFFF               	dw	65535	; assembler added errata NOP
  4979                           
  4980                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1138:         if 
      +                          (*fmt[0] == 'p') {
  4981  000C78  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4982  000C7C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4983  000C80  CFDE FFF6          	movff	postinc2,tblptrl
  4984  000C84  CFDD FFF7          	movff	postdec2,tblptrh
  4985  000C88                     	if	0	;tblptru may be non-zero
  4986  000C88                     	endif
  4987  000C88                     	if	0	;tblptru may be non-zero
  4988  000C88                     	endif
  4989  000C88  0008               	tblrd		*
  4990  000C8A  FFFF               	dw	65535	; errata NOP
  4991  000C8C  50F5               	movf	tablat,w,c
  4992  000C8E  0A70               	xorlw	112
  4993  000C90  A4D8               	btfss	status,2,c
  4994  000C92  EF4D  F006         	goto	u5461
  4995  000C96  EF50  F006         	goto	u5460
  4996  000C9A                     u5461:
  4997  000C9A  FFFF               	dw	65535	; assembler added errata NOP
  4998  000C9C  EF94  F006         	goto	l4525
  4999  000CA0                     u5460:
  5000  000CA0  FFFF               	dw	65535	; assembler added errata NOP
  5001  000CA2                     
  5002                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1140:            
      +                           ++*fmt;
  5003  000CA2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5004  000CA6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5005  000CAA  2ADE               	incf	postinc2,f,c
  5006  000CAC  0E00               	movlw	0
  5007  000CAE  22DD               	addwfc	postdec2,f,c
  5008                           
  5009                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1141:            
      +                           llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0));
  5010  000CB0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5011  000CB4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5012  000CB8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5013  000CBC  0E02               	movlw	2
  5014  000CBE  26DE               	addwf	postinc2,f,c
  5015  000CC0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5016  000CC4  0E00               	movlw	0
  5017  000CC6  22DD               	addwfc	postdec2,f,c
  5018  000CC8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5019  000CCC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5020  000CD0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5021  000CD4  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5022  000CD8  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5023  000CDC  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5024  000CE0  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5025  000CE2  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5026  000CE4  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5027  000CE6  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5028  000CE8  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5029  000CEA  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5030  000CEC                     
  5031                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1143:            
      +                           return xtoa(fp, llu, 'x');
  5032  000CEC  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  5033  000CF0  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5034  000CF4  C060  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  5035  000CF8  C061  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5036  000CFC  C062  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5037  000D00  C063  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5038  000D04  C064  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5039  000D08  C065  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5040  000D0C  C066  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5041  000D10  C067  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5042  000D14  0E78               	movlw	120
  5043  000D16  6E26               	movwf	xtoa@x^0,c
  5044  000D18  EC5F  F018         	call	_xtoa	;wreg free
  5045  000D1C  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  5046  000D20  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5047  000D24  EF2E  F00A         	goto	l1290
  5048  000D28                     l4525:
  5049  000D28  FFFF               	dw	65535	; assembler added errata NOP
  5050                           
  5051                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1149:         if 
      +                          (*fmt[0] == 's') {
  5052  000D2A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5053  000D2E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5054  000D32  CFDE FFF6          	movff	postinc2,tblptrl
  5055  000D36  CFDD FFF7          	movff	postdec2,tblptrh
  5056  000D3A                     	if	0	;tblptru may be non-zero
  5057  000D3A                     	endif
  5058  000D3A                     	if	0	;tblptru may be non-zero
  5059  000D3A                     	endif
  5060  000D3A  0008               	tblrd		*
  5061  000D3C  FFFF               	dw	65535	; errata NOP
  5062  000D3E  50F5               	movf	tablat,w,c
  5063  000D40  0A73               	xorlw	115
  5064  000D42  A4D8               	btfss	status,2,c
  5065  000D44  EFA6  F006         	goto	u5471
  5066  000D48  EFA9  F006         	goto	u5470
  5067  000D4C                     u5471:
  5068  000D4C  FFFF               	dw	65535	; assembler added errata NOP
  5069  000D4E  EFD5  F006         	goto	l4533
  5070  000D52                     u5470:
  5071  000D52  FFFF               	dw	65535	; assembler added errata NOP
  5072  000D54                     
  5073                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1151:            
      +                           ++*fmt;
  5074  000D54  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5075  000D58  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5076  000D5C  2ADE               	incf	postinc2,f,c
  5077  000D5E  0E00               	movlw	0
  5078  000D60  22DD               	addwfc	postdec2,f,c
  5079                           
  5080                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1152:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5081  000D62  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5082  000D66  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5083  000D6A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5084  000D6E  0E02               	movlw	2
  5085  000D70  26DE               	addwf	postinc2,f,c
  5086  000D72  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5087  000D76  0E00               	movlw	0
  5088  000D78  22DD               	addwfc	postdec2,f,c
  5089  000D7A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5090  000D7E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5091  000D82  CFDE F04D          	movff	postinc2,vfpfcnvrt@cp
  5092  000D86  CFDD F04E          	movff	postdec2,vfpfcnvrt@cp+1
  5093  000D8A                     
  5094                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1154:            
      +                           return stoa(fp, cp);
  5095  000D8A  C043  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  5096  000D8E  C044  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  5097  000D92  C04D  F00C         	movff	vfpfcnvrt@cp,stoa@s
  5098  000D96  C04E  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  5099  000D9A  EC1C  F01D         	call	_stoa	;wreg free
  5100  000D9E  C00A  F043         	movff	?_stoa,?_vfpfcnvrt
  5101  000DA2  C00B  F044         	movff	?_stoa+1,?_vfpfcnvrt+1
  5102  000DA6  EF2E  F00A         	goto	l1290
  5103  000DAA                     l4533:
  5104  000DAA  FFFF               	dw	65535	; assembler added errata NOP
  5105                           
  5106                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1161:         if 
      +                          (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  5107  000DAC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5108  000DB0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5109  000DB4  CFDE F001          	movff	postinc2,strncmp@_l
  5110  000DB8  CFDD F002          	movff	postdec2,strncmp@_l+1
  5111  000DBC  0EDF               	movlw	low STR_68
  5112  000DBE  6E03               	movwf	strncmp@_r^0,c
  5113  000DC0  0E7F               	movlw	high STR_68
  5114  000DC2  6E04               	movwf	(strncmp@_r+1)^0,c
  5115  000DC4  0E00               	movlw	0
  5116  000DC6  6E06               	movwf	(strncmp@n+1)^0,c
  5117  000DC8  0E03               	movlw	3
  5118  000DCA  6E05               	movwf	strncmp@n^0,c
  5119  000DCC  ECBC  F03B         	call	_strncmp	;wreg free
  5120  000DD0  5001               	movf	?_strncmp^0,w,c
  5121  000DD2  1002               	iorwf	(?_strncmp+1)^0,w,c
  5122  000DD4  A4D8               	btfss	status,2,c
  5123  000DD6  EFEF  F006         	goto	u5481
  5124  000DDA  EFF2  F006         	goto	u5480
  5125  000DDE                     u5481:
  5126  000DDE  FFFF               	dw	65535	; assembler added errata NOP
  5127  000DE0  EF33  F007         	goto	l4541
  5128  000DE4                     u5480:
  5129  000DE4  FFFF               	dw	65535	; assembler added errata NOP
  5130  000DE6                     
  5131                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1163:            
      +                           *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  5132  000DE6  0E03               	movlw	3
  5133  000DE8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5134  000DEC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5135  000DF0  26DE               	addwf	postinc2,f,c
  5136  000DF2  0E00               	movlw	0
  5137  000DF4  22DD               	addwfc	postdec2,f,c
  5138                           
  5139                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1164:            
      +                           llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5140  000DF6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5141  000DFA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5142  000DFE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5143  000E02  0E02               	movlw	2
  5144  000E04  26DE               	addwf	postinc2,f,c
  5145  000E06  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5146  000E0A  0E00               	movlw	0
  5147  000E0C  22DD               	addwfc	postdec2,f,c
  5148  000E0E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5149  000E12  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5150  000E16  50DF               	movf	indf2,w,c
  5151  000E18  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  5152  000E1A  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  5153  000E1C  6E60               	movwf	vfpfcnvrt@llu^0,c
  5154  000E1E  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  5155  000E20  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5156  000E22  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5157  000E24  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5158  000E26  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5159  000E28  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5160  000E2A  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5161  000E2C                     l4537:
  5162  000E2C  FFFF               	dw	65535	; assembler added errata NOP
  5163                           
  5164                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1166:            
      +                           return utoa(fp, llu);
  5165  000E2E  C043  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  5166  000E32  C044  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  5167  000E36  C060  F01E         	movff	vfpfcnvrt@llu,utoa@d
  5168  000E3A  C061  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  5169  000E3E  C062  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  5170  000E42  C063  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  5171  000E46  C064  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  5172  000E4A  C065  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  5173  000E4E  C066  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  5174  000E52  C067  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  5175  000E56  ECF7  F019         	call	_utoa	;wreg free
  5176  000E5A  C01C  F043         	movff	?_utoa,?_vfpfcnvrt
  5177  000E5E  C01D  F044         	movff	?_utoa+1,?_vfpfcnvrt+1
  5178  000E62  EF2E  F00A         	goto	l1290
  5179  000E66                     l4541:
  5180  000E66  FFFF               	dw	65535	; assembler added errata NOP
  5181                           
  5182                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1172:         if 
      +                          (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  5183  000E68  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5184  000E6C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5185  000E70  CFDE F001          	movff	postinc2,strncmp@_l
  5186  000E74  CFDD F002          	movff	postdec2,strncmp@_l+1
  5187  000E78  0EE0               	movlw	low (STR_68+1)
  5188  000E7A  6E03               	movwf	strncmp@_r^0,c
  5189  000E7C  0E7F               	movlw	high (STR_68+1)
  5190  000E7E  6E04               	movwf	(strncmp@_r+1)^0,c
  5191  000E80  0E00               	movlw	0
  5192  000E82  6E06               	movwf	(strncmp@n+1)^0,c
  5193  000E84  0E02               	movlw	2
  5194  000E86  6E05               	movwf	strncmp@n^0,c
  5195  000E88  ECBC  F03B         	call	_strncmp	;wreg free
  5196  000E8C  5001               	movf	?_strncmp^0,w,c
  5197  000E8E  1002               	iorwf	(?_strncmp+1)^0,w,c
  5198  000E90  A4D8               	btfss	status,2,c
  5199  000E92  EF4D  F007         	goto	u5491
  5200  000E96  EF50  F007         	goto	u5490
  5201  000E9A                     u5491:
  5202  000E9A  FFFF               	dw	65535	; assembler added errata NOP
  5203  000E9C  EF79  F007         	goto	l4549
  5204  000EA0                     u5490:
  5205  000EA0  FFFF               	dw	65535	; assembler added errata NOP
  5206  000EA2                     
  5207                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1174:            
      +                           *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  5208  000EA2  0E02               	movlw	2
  5209  000EA4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5210  000EA8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5211  000EAC  26DE               	addwf	postinc2,f,c
  5212  000EAE  0E00               	movlw	0
  5213  000EB0  22DD               	addwfc	postdec2,f,c
  5214                           
  5215                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1175:            
      +                           llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5216  000EB2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5217  000EB6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5218  000EBA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5219  000EBE  0E02               	movlw	2
  5220  000EC0  26DE               	addwf	postinc2,f,c
  5221  000EC2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5222  000EC6  0E00               	movlw	0
  5223  000EC8  22DD               	addwfc	postdec2,f,c
  5224  000ECA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5225  000ECE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5226  000ED2  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5227  000ED6  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5228  000EDA  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5229  000EDE  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5230  000EE2  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5231  000EE4  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5232  000EE6  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5233  000EE8  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5234  000EEA  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5235  000EEC  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5236  000EEE  EF16  F007         	goto	l4537
  5237  000EF2                     l4549:
  5238  000EF2  FFFF               	dw	65535	; assembler added errata NOP
  5239                           
  5240                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1182:         if 
      +                          (*fmt[0] == 'u') {
  5241  000EF4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5242  000EF8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5243  000EFC  CFDE FFF6          	movff	postinc2,tblptrl
  5244  000F00  CFDD FFF7          	movff	postdec2,tblptrh
  5245  000F04                     	if	0	;tblptru may be non-zero
  5246  000F04                     	endif
  5247  000F04                     	if	0	;tblptru may be non-zero
  5248  000F04                     	endif
  5249  000F04  0008               	tblrd		*
  5250  000F06  FFFF               	dw	65535	; errata NOP
  5251  000F08  50F5               	movf	tablat,w,c
  5252  000F0A  0A75               	xorlw	117
  5253  000F0C  A4D8               	btfss	status,2,c
  5254  000F0E  EF8B  F007         	goto	u5501
  5255  000F12  EF8E  F007         	goto	u5500
  5256  000F16                     u5501:
  5257  000F16  FFFF               	dw	65535	; assembler added errata NOP
  5258  000F18  EFB6  F007         	goto	l4557
  5259  000F1C                     u5500:
  5260  000F1C  FFFF               	dw	65535	; assembler added errata NOP
  5261  000F1E                     
  5262                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1184:            
      +                           ++*fmt;
  5263  000F1E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5264  000F22  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5265  000F26  2ADE               	incf	postinc2,f,c
  5266  000F28  0E00               	movlw	0
  5267  000F2A  22DD               	addwfc	postdec2,f,c
  5268                           
  5269                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1185:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  5270  000F2C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5271  000F30  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5272  000F34  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5273  000F38  0E02               	movlw	2
  5274  000F3A  26DE               	addwf	postinc2,f,c
  5275  000F3C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5276  000F40  0E00               	movlw	0
  5277  000F42  22DD               	addwfc	postdec2,f,c
  5278  000F44  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5279  000F48  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5280  000F4C  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5281  000F50  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5282  000F54  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5283  000F58  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5284  000F5C  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5285  000F5E  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5286  000F60  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5287  000F62  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5288  000F64  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5289  000F66  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5290  000F68  EF16  F007         	goto	l4537
  5291  000F6C                     l4557:
  5292  000F6C  FFFF               	dw	65535	; assembler added errata NOP
  5293                           
  5294                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1236:         if 
      +                          (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  5295  000F6E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5296  000F72  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5297  000F76  CFDE F001          	movff	postinc2,strncmp@_l
  5298  000F7A  CFDD F002          	movff	postdec2,strncmp@_l+1
  5299  000F7E  0EF6               	movlw	low STR_78
  5300  000F80  6E03               	movwf	strncmp@_r^0,c
  5301  000F82  0E7F               	movlw	high STR_78
  5302  000F84  6E04               	movwf	(strncmp@_r+1)^0,c
  5303  000F86  0E00               	movlw	0
  5304  000F88  6E06               	movwf	(strncmp@n+1)^0,c
  5305  000F8A  0E02               	movlw	2
  5306  000F8C  6E05               	movwf	strncmp@n^0,c
  5307  000F8E  ECBC  F03B         	call	_strncmp	;wreg free
  5308  000F92  5001               	movf	?_strncmp^0,w,c
  5309  000F94  1002               	iorwf	(?_strncmp+1)^0,w,c
  5310  000F96  A4D8               	btfss	status,2,c
  5311  000F98  EFD0  F007         	goto	u5511
  5312  000F9C  EFD3  F007         	goto	u5510
  5313  000FA0                     u5511:
  5314  000FA0  FFFF               	dw	65535	; assembler added errata NOP
  5315  000FA2  EFFC  F007         	goto	l4565
  5316  000FA6                     u5510:
  5317  000FA6  FFFF               	dw	65535	; assembler added errata NOP
  5318  000FA8                     
  5319                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1238:            
      +                           *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  5320  000FA8  0E02               	movlw	2
  5321  000FAA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5322  000FAE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5323  000FB2  26DE               	addwf	postinc2,f,c
  5324  000FB4  0E00               	movlw	0
  5325  000FB6  22DD               	addwfc	postdec2,f,c
  5326                           
  5327                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1239:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5328  000FB8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5329  000FBC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5330  000FC0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5331  000FC4  0E02               	movlw	2
  5332  000FC6  26DE               	addwf	postinc2,f,c
  5333  000FC8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5334  000FCC  0E00               	movlw	0
  5335  000FCE  22DD               	addwfc	postdec2,f,c
  5336  000FD0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5337  000FD4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5338  000FD8  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5339  000FDC  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5340  000FE0  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5341  000FE4  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5342  000FE8  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5343  000FEA  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5344  000FEC  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5345  000FEE  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5346  000FF0  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5347  000FF2  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5348  000FF4  EF16  F007         	goto	l4537
  5349  000FF8                     l4565:
  5350  000FF8  FFFF               	dw	65535	; assembler added errata NOP
  5351                           
  5352                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1249:         if 
      +                          (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hhX", ((
      +                          sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  5353  000FFA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5354  000FFE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5355  001002  CFDE F001          	movff	postinc2,strncmp@_l
  5356  001006  CFDD F002          	movff	postdec2,strncmp@_l+1
  5357  00100A  0EE3               	movlw	low STR_83
  5358  00100C  6E03               	movwf	strncmp@_r^0,c
  5359  00100E  0E7F               	movlw	high STR_83
  5360  001010  6E04               	movwf	(strncmp@_r+1)^0,c
  5361  001012  0E00               	movlw	0
  5362  001014  6E06               	movwf	(strncmp@n+1)^0,c
  5363  001016  0E03               	movlw	3
  5364  001018  6E05               	movwf	strncmp@n^0,c
  5365  00101A  ECBC  F03B         	call	_strncmp	;wreg free
  5366  00101E  5001               	movf	?_strncmp^0,w,c
  5367  001020  1002               	iorwf	(?_strncmp+1)^0,w,c
  5368  001022  B4D8               	btfsc	status,2,c
  5369  001024  EF16  F008         	goto	u5521
  5370  001028  EF19  F008         	goto	u5520
  5371  00102C                     u5521:
  5372  00102C  FFFF               	dw	65535	; assembler added errata NOP
  5373  00102E  EF36  F008         	goto	l4569
  5374  001032                     u5520:
  5375  001032  FFFF               	dw	65535	; assembler added errata NOP
  5376  001034  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5377  001038  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5378  00103C  CFDE F001          	movff	postinc2,strncmp@_l
  5379  001040  CFDD F002          	movff	postdec2,strncmp@_l+1
  5380  001044  0ECB               	movlw	low STR_87
  5381  001046  6E03               	movwf	strncmp@_r^0,c
  5382  001048  0E7F               	movlw	high STR_87
  5383  00104A  6E04               	movwf	(strncmp@_r+1)^0,c
  5384  00104C  0E00               	movlw	0
  5385  00104E  6E06               	movwf	(strncmp@n+1)^0,c
  5386  001050  0E03               	movlw	3
  5387  001052  6E05               	movwf	strncmp@n^0,c
  5388  001054  ECBC  F03B         	call	_strncmp	;wreg free
  5389  001058  5001               	movf	?_strncmp^0,w,c
  5390  00105A  1002               	iorwf	(?_strncmp+1)^0,w,c
  5391  00105C  A4D8               	btfss	status,2,c
  5392  00105E  EF33  F008         	goto	u5531
  5393  001062  EF36  F008         	goto	u5530
  5394  001066                     u5531:
  5395  001066  FFFF               	dw	65535	; assembler added errata NOP
  5396  001068  EF8D  F008         	goto	l4579
  5397  00106C                     u5530:
  5398  00106C                     l4569:
  5399  00106C  FFFF               	dw	65535	; assembler added errata NOP
  5400                           
  5401                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1250: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1252:             c = (*fmt)
      +                          [2];
  5402  00106E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5403  001072  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5404  001076  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  5405  00107A  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  5406  00107E  0E02               	movlw	2
  5407  001080  2649               	addwf	??_vfpfcnvrt^0,f,c
  5408  001082  0E00               	movlw	0
  5409  001084  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5410  001086  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5411  00108A  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5412  00108E                     	if	0	;tblptru may be non-zero
  5413  00108E                     	endif
  5414  00108E                     	if	0	;tblptru may be non-zero
  5415  00108E                     	endif
  5416  00108E  0008               	tblrd		*
  5417  001090  FFFF               	dw	65535	; errata NOP
  5418  001092  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  5419  001096                     
  5420                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1253:            
      +                           *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  5421  001096  0E03               	movlw	3
  5422  001098  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5423  00109C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5424  0010A0  26DE               	addwf	postinc2,f,c
  5425  0010A2  0E00               	movlw	0
  5426  0010A4  22DD               	addwfc	postdec2,f,c
  5427  0010A6                     
  5428                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1254:            
      +                           llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5429  0010A6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5430  0010AA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5431  0010AE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5432  0010B2  0E02               	movlw	2
  5433  0010B4  26DE               	addwf	postinc2,f,c
  5434  0010B6  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5435  0010BA  0E00               	movlw	0
  5436  0010BC  22DD               	addwfc	postdec2,f,c
  5437  0010BE  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5438  0010C2  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5439  0010C6  50DF               	movf	indf2,w,c
  5440  0010C8  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  5441  0010CA  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  5442  0010CC  6E60               	movwf	vfpfcnvrt@llu^0,c
  5443  0010CE  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  5444  0010D0  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5445  0010D2  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5446  0010D4  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5447  0010D6  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5448  0010D8  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5449  0010DA  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5450  0010DC                     l4575:
  5451  0010DC  FFFF               	dw	65535	; assembler added errata NOP
  5452                           
  5453                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1256:            
      +                           return xtoa(fp, llu, c);
  5454  0010DE  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  5455  0010E2  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5456  0010E6  C060  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  5457  0010EA  C061  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5458  0010EE  C062  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5459  0010F2  C063  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5460  0010F6  C064  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5461  0010FA  C065  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5462  0010FE  C066  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5463  001102  C067  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5464  001106  C05F  F026         	movff	vfpfcnvrt@c,xtoa@x
  5465  00110A  EC5F  F018         	call	_xtoa	;wreg free
  5466  00110E  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  5467  001112  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5468  001116  EF2E  F00A         	goto	l1290
  5469  00111A                     l4579:
  5470  00111A  FFFF               	dw	65535	; assembler added errata NOP
  5471                           
  5472                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1262:         if 
      +                          (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", ((size
      +                          of("hX")/sizeof("hX"[0]))-1))) {
  5473  00111C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5474  001120  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5475  001124  CFDE F001          	movff	postinc2,strncmp@_l
  5476  001128  CFDD F002          	movff	postdec2,strncmp@_l+1
  5477  00112C  0EE4               	movlw	low (STR_83+1)
  5478  00112E  6E03               	movwf	strncmp@_r^0,c
  5479  001130  0E7F               	movlw	high (STR_83+1)
  5480  001132  6E04               	movwf	(strncmp@_r+1)^0,c
  5481  001134  0E00               	movlw	0
  5482  001136  6E06               	movwf	(strncmp@n+1)^0,c
  5483  001138  0E02               	movlw	2
  5484  00113A  6E05               	movwf	strncmp@n^0,c
  5485  00113C  ECBC  F03B         	call	_strncmp	;wreg free
  5486  001140  5001               	movf	?_strncmp^0,w,c
  5487  001142  1002               	iorwf	(?_strncmp+1)^0,w,c
  5488  001144  B4D8               	btfsc	status,2,c
  5489  001146  EFA7  F008         	goto	u5541
  5490  00114A  EFAA  F008         	goto	u5540
  5491  00114E                     u5541:
  5492  00114E  FFFF               	dw	65535	; assembler added errata NOP
  5493  001150  EFC7  F008         	goto	l4583
  5494  001154                     u5540:
  5495  001154  FFFF               	dw	65535	; assembler added errata NOP
  5496  001156  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5497  00115A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5498  00115E  CFDE F001          	movff	postinc2,strncmp@_l
  5499  001162  CFDD F002          	movff	postdec2,strncmp@_l+1
  5500  001166  0ECC               	movlw	low (STR_87+1)
  5501  001168  6E03               	movwf	strncmp@_r^0,c
  5502  00116A  0E7F               	movlw	high (STR_87+1)
  5503  00116C  6E04               	movwf	(strncmp@_r+1)^0,c
  5504  00116E  0E00               	movlw	0
  5505  001170  6E06               	movwf	(strncmp@n+1)^0,c
  5506  001172  0E02               	movlw	2
  5507  001174  6E05               	movwf	strncmp@n^0,c
  5508  001176  ECBC  F03B         	call	_strncmp	;wreg free
  5509  00117A  5001               	movf	?_strncmp^0,w,c
  5510  00117C  1002               	iorwf	(?_strncmp+1)^0,w,c
  5511  00117E  A4D8               	btfss	status,2,c
  5512  001180  EFC4  F008         	goto	u5551
  5513  001184  EFC7  F008         	goto	u5550
  5514  001188                     u5551:
  5515  001188  FFFF               	dw	65535	; assembler added errata NOP
  5516  00118A  EF04  F009         	goto	l4593
  5517  00118E                     u5550:
  5518  00118E                     l4583:
  5519  00118E  FFFF               	dw	65535	; assembler added errata NOP
  5520                           
  5521                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1263: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1265:             c = (*fmt)
      +                          [1];
  5522  001190  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5523  001194  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5524  001198  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  5525  00119C  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  5526  0011A0  0E01               	movlw	1
  5527  0011A2  2649               	addwf	??_vfpfcnvrt^0,f,c
  5528  0011A4  0E00               	movlw	0
  5529  0011A6  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5530  0011A8  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5531  0011AC  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5532  0011B0                     	if	0	;tblptru may be non-zero
  5533  0011B0                     	endif
  5534  0011B0                     	if	0	;tblptru may be non-zero
  5535  0011B0                     	endif
  5536  0011B0  0008               	tblrd		*
  5537  0011B2  FFFF               	dw	65535	; errata NOP
  5538  0011B4  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  5539  0011B8                     
  5540                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1266:            
      +                           *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  5541  0011B8  0E02               	movlw	2
  5542  0011BA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5543  0011BE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5544  0011C2  26DE               	addwf	postinc2,f,c
  5545  0011C4  0E00               	movlw	0
  5546  0011C6  22DD               	addwfc	postdec2,f,c
  5547  0011C8                     
  5548                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1267:            
      +                           llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5549  0011C8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5550  0011CC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5551  0011D0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5552  0011D4  0E02               	movlw	2
  5553  0011D6  26DE               	addwf	postinc2,f,c
  5554  0011D8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5555  0011DC  0E00               	movlw	0
  5556  0011DE  22DD               	addwfc	postdec2,f,c
  5557  0011E0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5558  0011E4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5559  0011E8  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5560  0011EC  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5561  0011F0  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5562  0011F4  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5563  0011F8  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5564  0011FA  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5565  0011FC  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5566  0011FE  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5567  001200  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5568  001202  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5569  001204  EF6E  F008         	goto	l4575
  5570  001208                     l4593:
  5571  001208  FFFF               	dw	65535	; assembler added errata NOP
  5572                           
  5573                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1274:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  5574  00120A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5575  00120E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5576  001212  CFDE FFF6          	movff	postinc2,tblptrl
  5577  001216  CFDD FFF7          	movff	postdec2,tblptrh
  5578  00121A                     	if	0	;tblptru may be non-zero
  5579  00121A                     	endif
  5580  00121A                     	if	0	;tblptru may be non-zero
  5581  00121A                     	endif
  5582  00121A  0008               	tblrd		*
  5583  00121C  FFFF               	dw	65535	; errata NOP
  5584  00121E  50F5               	movf	tablat,w,c
  5585  001220  0A78               	xorlw	120
  5586  001222  B4D8               	btfsc	status,2,c
  5587  001224  EF16  F009         	goto	u5561
  5588  001228  EF19  F009         	goto	u5560
  5589  00122C                     u5561:
  5590  00122C  FFFF               	dw	65535	; assembler added errata NOP
  5591  00122E  EF2E  F009         	goto	l4597
  5592  001232                     u5560:
  5593  001232  FFFF               	dw	65535	; assembler added errata NOP
  5594  001234  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5595  001238  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5596  00123C  CFDE FFF6          	movff	postinc2,tblptrl
  5597  001240  CFDD FFF7          	movff	postdec2,tblptrh
  5598  001244                     	if	0	;tblptru may be non-zero
  5599  001244                     	endif
  5600  001244                     	if	0	;tblptru may be non-zero
  5601  001244                     	endif
  5602  001244  0008               	tblrd		*
  5603  001246  FFFF               	dw	65535	; errata NOP
  5604  001248  50F5               	movf	tablat,w,c
  5605  00124A  0A58               	xorlw	88
  5606  00124C  A4D8               	btfss	status,2,c
  5607  00124E  EF2B  F009         	goto	u5571
  5608  001252  EF2E  F009         	goto	u5570
  5609  001256                     u5571:
  5610  001256  FFFF               	dw	65535	; assembler added errata NOP
  5611  001258  EF62  F009         	goto	l4607
  5612  00125C                     u5570:
  5613  00125C                     l4597:
  5614  00125C  FFFF               	dw	65535	; assembler added errata NOP
  5615                           
  5616                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1276:            
      +                           c = (*fmt)[0];
  5617  00125E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5618  001262  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5619  001266  CFDE FFF6          	movff	postinc2,tblptrl
  5620  00126A  CFDD FFF7          	movff	postdec2,tblptrh
  5621  00126E                     	if	0	;tblptru may be non-zero
  5622  00126E                     	endif
  5623  00126E                     	if	0	;tblptru may be non-zero
  5624  00126E                     	endif
  5625  00126E  0008               	tblrd		*
  5626  001270  FFFF               	dw	65535	; errata NOP
  5627  001272  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  5628  001276                     
  5629                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1277:            
      +                           ++*fmt;
  5630  001276  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5631  00127A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5632  00127E  2ADE               	incf	postinc2,f,c
  5633  001280  0E00               	movlw	0
  5634  001282  22DD               	addwfc	postdec2,f,c
  5635  001284                     
  5636                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1278:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  5637  001284  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5638  001288  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5639  00128C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5640  001290  0E02               	movlw	2
  5641  001292  26DE               	addwf	postinc2,f,c
  5642  001294  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5643  001298  0E00               	movlw	0
  5644  00129A  22DD               	addwfc	postdec2,f,c
  5645  00129C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5646  0012A0  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5647  0012A4  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5648  0012A8  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5649  0012AC  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5650  0012B0  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5651  0012B4  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5652  0012B6  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5653  0012B8  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5654  0012BA  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5655  0012BC  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5656  0012BE  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5657  0012C0  EF6E  F008         	goto	l4575
  5658  0012C4                     l4607:
  5659  0012C4  FFFF               	dw	65535	; assembler added errata NOP
  5660                           
  5661                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1337:         if 
      +                          (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", ((size
      +                          of("zX")/sizeof("zX"[0]))-1))) {
  5662  0012C6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5663  0012CA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5664  0012CE  CFDE F001          	movff	postinc2,strncmp@_l
  5665  0012D2  CFDD F002          	movff	postdec2,strncmp@_l+1
  5666  0012D6  0EF9               	movlw	low STR_101
  5667  0012D8  6E03               	movwf	strncmp@_r^0,c
  5668  0012DA  0E7F               	movlw	high STR_101
  5669  0012DC  6E04               	movwf	(strncmp@_r+1)^0,c
  5670  0012DE  0E00               	movlw	0
  5671  0012E0  6E06               	movwf	(strncmp@n+1)^0,c
  5672  0012E2  0E02               	movlw	2
  5673  0012E4  6E05               	movwf	strncmp@n^0,c
  5674  0012E6  ECBC  F03B         	call	_strncmp	;wreg free
  5675  0012EA  5001               	movf	?_strncmp^0,w,c
  5676  0012EC  1002               	iorwf	(?_strncmp+1)^0,w,c
  5677  0012EE  B4D8               	btfsc	status,2,c
  5678  0012F0  EF7C  F009         	goto	u5581
  5679  0012F4  EF7F  F009         	goto	u5580
  5680  0012F8                     u5581:
  5681  0012F8  FFFF               	dw	65535	; assembler added errata NOP
  5682  0012FA  EF9C  F009         	goto	l4611
  5683  0012FE                     u5580:
  5684  0012FE  FFFF               	dw	65535	; assembler added errata NOP
  5685  001300  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5686  001304  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5687  001308  CFDE F001          	movff	postinc2,strncmp@_l
  5688  00130C  CFDD F002          	movff	postdec2,strncmp@_l+1
  5689  001310  0EE7               	movlw	low STR_105
  5690  001312  6E03               	movwf	strncmp@_r^0,c
  5691  001314  0E7F               	movlw	high STR_105
  5692  001316  6E04               	movwf	(strncmp@_r+1)^0,c
  5693  001318  0E00               	movlw	0
  5694  00131A  6E06               	movwf	(strncmp@n+1)^0,c
  5695  00131C  0E02               	movlw	2
  5696  00131E  6E05               	movwf	strncmp@n^0,c
  5697  001320  ECBC  F03B         	call	_strncmp	;wreg free
  5698  001324  5001               	movf	?_strncmp^0,w,c
  5699  001326  1002               	iorwf	(?_strncmp+1)^0,w,c
  5700  001328  A4D8               	btfss	status,2,c
  5701  00132A  EF99  F009         	goto	u5591
  5702  00132E  EF9C  F009         	goto	u5590
  5703  001332                     u5591:
  5704  001332  FFFF               	dw	65535	; assembler added errata NOP
  5705  001334  EFD9  F009         	goto	l4621
  5706  001338                     u5590:
  5707  001338                     l4611:
  5708  001338  FFFF               	dw	65535	; assembler added errata NOP
  5709                           
  5710                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1338: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1340:             c = (*fmt)
      +                          [1];
  5711  00133A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5712  00133E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5713  001342  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  5714  001346  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  5715  00134A  0E01               	movlw	1
  5716  00134C  2649               	addwf	??_vfpfcnvrt^0,f,c
  5717  00134E  0E00               	movlw	0
  5718  001350  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5719  001352  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5720  001356  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5721  00135A                     	if	0	;tblptru may be non-zero
  5722  00135A                     	endif
  5723  00135A                     	if	0	;tblptru may be non-zero
  5724  00135A                     	endif
  5725  00135A  0008               	tblrd		*
  5726  00135C  FFFF               	dw	65535	; errata NOP
  5727  00135E  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  5728  001362                     
  5729                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1341:            
      +                           *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  5730  001362  0E02               	movlw	2
  5731  001364  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5732  001368  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5733  00136C  26DE               	addwf	postinc2,f,c
  5734  00136E  0E00               	movlw	0
  5735  001370  22DD               	addwfc	postdec2,f,c
  5736  001372                     
  5737                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1342:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5738  001372  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5739  001376  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5740  00137A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5741  00137E  0E02               	movlw	2
  5742  001380  26DE               	addwf	postinc2,f,c
  5743  001382  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5744  001386  0E00               	movlw	0
  5745  001388  22DD               	addwfc	postdec2,f,c
  5746  00138A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5747  00138E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5748  001392  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5749  001396  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5750  00139A  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5751  00139E  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5752  0013A2  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5753  0013A4  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5754  0013A6  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5755  0013A8  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5756  0013AA  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5757  0013AC  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5758  0013AE  EF6E  F008         	goto	l4575
  5759  0013B2                     l4621:
  5760  0013B2  FFFF               	dw	65535	; assembler added errata NOP
  5761                           
  5762                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  5763  0013B4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5764  0013B8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5765  0013BC  CFDE FFF6          	movff	postinc2,tblptrl
  5766  0013C0  CFDD FFF7          	movff	postdec2,tblptrh
  5767  0013C4                     	if	0	;tblptru may be non-zero
  5768  0013C4                     	endif
  5769  0013C4                     	if	0	;tblptru may be non-zero
  5770  0013C4                     	endif
  5771  0013C4  0008               	tblrd		*
  5772  0013C6  FFFF               	dw	65535	; errata NOP
  5773  0013C8  50F5               	movf	tablat,w,c
  5774  0013CA  0A25               	xorlw	37
  5775  0013CC  A4D8               	btfss	status,2,c
  5776  0013CE  EFEB  F009         	goto	u5601
  5777  0013D2  EFEE  F009         	goto	u5600
  5778  0013D6                     u5601:
  5779  0013D6  FFFF               	dw	65535	; assembler added errata NOP
  5780  0013D8  EF07  F00A         	goto	l4631
  5781  0013DC                     u5600:
  5782  0013DC  FFFF               	dw	65535	; assembler added errata NOP
  5783  0013DE                     
  5784                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  5785  0013DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5786  0013E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5787  0013E6  2ADE               	incf	postinc2,f,c
  5788  0013E8  0E00               	movlw	0
  5789  0013EA  22DD               	addwfc	postdec2,f,c
  5790  0013EC                     
  5791                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  5792  0013EC  0E00               	movlw	0
  5793  0013EE  6E02               	movwf	(fputc@c+1)^0,c
  5794  0013F0  0E25               	movlw	37
  5795  0013F2  6E01               	movwf	fputc@c^0,c
  5796  0013F4  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5797  0013F8  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5798  0013FC  EC6D  F039         	call	_fputc	;wreg free
  5799  001400                     l4627:
  5800  001400  FFFF               	dw	65535	; assembler added errata NOP
  5801                           
  5802                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  5803  001402  0E00               	movlw	0
  5804  001404  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  5805  001406  0E01               	movlw	1
  5806  001408  6E43               	movwf	?_vfpfcnvrt^0,c
  5807  00140A  EF2E  F00A         	goto	l1290
  5808  00140E                     l4631:
  5809  00140E  FFFF               	dw	65535	; assembler added errata NOP
  5810                           
  5811                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  5812  001410  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5813  001414  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5814  001418  2ADE               	incf	postinc2,f,c
  5815  00141A  0E00               	movlw	0
  5816  00141C  22DD               	addwfc	postdec2,f,c
  5817  00141E  EF44  F005         	goto	l4483
  5818  001422                     l4637:
  5819  001422  FFFF               	dw	65535	; assembler added errata NOP
  5820                           
  5821                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  5822  001424  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5823  001428  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5824  00142C  CFDE FFF6          	movff	postinc2,tblptrl
  5825  001430  CFDD FFF7          	movff	postdec2,tblptrh
  5826  001434                     	if	0	;tblptru may be non-zero
  5827  001434                     	endif
  5828  001434                     	if	0	;tblptru may be non-zero
  5829  001434                     	endif
  5830  001434  0008               	tblrd		*
  5831  001436  FFFF               	dw	65535	; errata NOP
  5832  001438  50F5               	movf	tablat,w,c
  5833  00143A  6E01               	movwf	fputc@c^0,c
  5834  00143C  6A02               	clrf	(fputc@c+1)^0,c
  5835  00143E  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5836  001442  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5837  001446  EC6D  F039         	call	_fputc	;wreg free
  5838  00144A                     
  5839                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  5840  00144A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5841  00144E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5842  001452  2ADE               	incf	postinc2,f,c
  5843  001454  0E00               	movlw	0
  5844  001456  22DD               	addwfc	postdec2,f,c
  5845  001458  EF00  F00A         	goto	l4627
  5846  00145C                     l1290:
  5847  00145C  FFFF               	dw	65535	; assembler added errata NOP
  5848  00145E  0012               	return		;funcret
  5849  001460  FFFF               	dw	65535	; errata NOP
  5850  001462                     __end_of_vfpfcnvrt:
  5851                           	callstack 0
  5852                           
  5853 ;; *************** function _xtoa *****************
  5854 ;; Defined at:
  5855 ;;		line 623 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  5856 ;; Parameters:    Size  Location     Type
  5857 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5858 ;;		 -> vsnprintf@f(6), 
  5859 ;;  d               8   29[COMRAM] unsigned long long 
  5860 ;;  x               1   37[COMRAM] unsigned char 
  5861 ;; Auto vars:     Size  Location     Type
  5862 ;;  n               8   54[COMRAM] unsigned long long 
  5863 ;;  c               2   64[COMRAM] int 
  5864 ;;  i               2   62[COMRAM] int 
  5865 ;;  w               2   52[COMRAM] int 
  5866 ;;  p               2   50[COMRAM] int 
  5867 ;; Return value:  Size  Location     Type
  5868 ;;                  2   27[COMRAM] int 
  5869 ;; Registers used:
  5870 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5871 ;; Tracked objects:
  5872 ;;		On entry : 0/0
  5873 ;;		On exit  : 0/0
  5874 ;;		Unchanged: 0/0
  5875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5876 ;;      Params:        11       0       0       0       0       0       0
  5877 ;;      Locals:        20       0       0       0       0       0       0
  5878 ;;      Temps:          8       0       0       0       0       0       0
  5879 ;;      Totals:        39       0       0       0       0       0       0
  5880 ;;Total ram usage:       39 bytes
  5881 ;; Hardware stack levels used:    1
  5882 ;; Hardware stack levels required when called:    5
  5883 ;; This function calls:
  5884 ;;		_isalpha
  5885 ;;		_isupper
  5886 ;;		_pad
  5887 ;;		_toupper
  5888 ;; This function is called by:
  5889 ;;		_vfpfcnvrt
  5890 ;; This function uses a non-reentrant model
  5891 ;;
  5892                           
  5893                           	psect	text9
  5894  0030BE                     __ptext9:
  5895                           	callstack 0
  5896  0030BE                     _xtoa:
  5897                           	callstack 0
  5898  0030BE  FFFF               	dw	65535	; assembler added errata NOP
  5899  0030C0                     
  5900                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 623: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 624: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 625:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources
      +                          \c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0)) {
  5901  0030C0  0100               	movlb	0	; () banked
  5902  0030C2  BF89               	btfsc	(_prec+1)& (0+255),7,b
  5903  0030C4  EF66  F018         	goto	u4441
  5904  0030C8  EF69  F018         	goto	u4440
  5905  0030CC                     u4441:
  5906  0030CC  FFFF               	dw	65535	; assembler added errata NOP
  5907  0030CE  EF6B  F018         	goto	l3993
  5908  0030D2                     u4440:
  5909  0030D2  FFFF               	dw	65535	; assembler added errata NOP
  5910  0030D4                     
  5911                           ; BSR set to: 0
  5912                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 630:         flag
      +                          s &= ~(1 << 1);
  5913  0030D4  938A               	bcf	_flags& (0+255),1,b
  5914  0030D6                     l3993:
  5915  0030D6  FFFF               	dw	65535	; assembler added errata NOP
  5916                           
  5917                           ; BSR set to: 0
  5918                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 632:     p = (0 <
      +                           prec) ? prec : 1;
  5919  0030D8  BF89               	btfsc	(_prec+1)& (0+255),7,b
  5920  0030DA  EF7A  F018         	goto	u4450
  5921  0030DE  5189               	movf	(_prec+1)& (0+255),w,b
  5922  0030E0  E106               	bnz	u4451
  5923  0030E2  0588               	decf	_prec& (0+255),w,b
  5924  0030E4  B0D8               	btfsc	status,0,c
  5925  0030E6  EF77  F018         	goto	u4451
  5926  0030EA  EF7A  F018         	goto	u4450
  5927  0030EE                     u4451:
  5928  0030EE  FFFF               	dw	65535	; assembler added errata NOP
  5929  0030F0  EF81  F018         	goto	l1228
  5930  0030F4                     u4450:
  5931  0030F4  FFFF               	dw	65535	; assembler added errata NOP
  5932  0030F6                     
  5933                           ; BSR set to: 0
  5934  0030F6  0E00               	movlw	0
  5935  0030F8  6E34               	movwf	(xtoa@p+1)^0,c
  5936  0030FA  0E01               	movlw	1
  5937  0030FC  6E33               	movwf	xtoa@p^0,c
  5938  0030FE  EF86  F018         	goto	l1230
  5939  003102                     l1228:
  5940  003102  FFFF               	dw	65535	; assembler added errata NOP
  5941                           
  5942                           ; BSR set to: 0
  5943  003104  C088  F033         	movff	_prec,xtoa@p
  5944  003108  C089  F034         	movff	_prec+1,xtoa@p+1
  5945  00310C                     l1230:
  5946  00310C  FFFF               	dw	65535	; assembler added errata NOP
  5947                           
  5948                           ; BSR set to: 0
  5949                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 633:     w = widt
      +                          h;
  5950  00310E  C086  F035         	movff	_width,xtoa@w
  5951  003112  C087  F036         	movff	_width+1,xtoa@w+1
  5952                           
  5953                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 634:     if (flag
      +                          s & (1 << 4)) {
  5954  003116  A98A               	btfss	_flags& (0+255),4,b
  5955  003118  EF90  F018         	goto	u4461
  5956  00311C  EF93  F018         	goto	u4460
  5957  003120                     u4461:
  5958  003120  FFFF               	dw	65535	; assembler added errata NOP
  5959  003122  EF98  F018         	goto	l3999
  5960  003126                     u4460:
  5961  003126  FFFF               	dw	65535	; assembler added errata NOP
  5962  003128                     
  5963                           ; BSR set to: 0
  5964                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 635:         w -=
      +                           2;
  5965  003128  0EFE               	movlw	254
  5966  00312A  2635               	addwf	xtoa@w^0,f,c
  5967  00312C  0EFF               	movlw	255
  5968  00312E  2236               	addwfc	(xtoa@w+1)^0,f,c
  5969  003130                     l3999:
  5970  003130  FFFF               	dw	65535	; assembler added errata NOP
  5971                           
  5972                           ; BSR set to: 0
  5973                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 639:     n = d;
  5974  003132  C01E  F037         	movff	xtoa@d,xtoa@n
  5975  003136  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  5976  00313A  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  5977  00313E  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  5978  003142  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  5979  003146  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  5980  00314A  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  5981  00314E  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  5982  003152                     
  5983                           ; BSR set to: 0
  5984                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 640:     i = size
      +                          of(dbuf) - 1;
  5985  003152  0E00               	movlw	0
  5986  003154  6E40               	movwf	(xtoa@i+1)^0,c
  5987  003156  0E1F               	movlw	31
  5988  003158  6E3F               	movwf	xtoa@i^0,c
  5989  00315A                     
  5990                           ; BSR set to: 0
  5991                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 641:     dbuf[i] 
      +                          = '\0';
  5992  00315A  0E00               	movlw	0
  5993  00315C  6FB7               	movwf	(_dbuf+31)& (0+255),b
  5994                           
  5995                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5996  00315E  EF76  F019         	goto	l4035
  5997  003162                     l4005:
  5998  003162  FFFF               	dw	65535	; assembler added errata NOP
  5999                           
  6000                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 643:         --i;
  6001  003164  063F               	decf	xtoa@i^0,f,c
  6002  003166  A0D8               	btfss	status,0,c
  6003  003168  0640               	decf	(xtoa@i+1)^0,f,c
  6004  00316A                     
  6005                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 644:         c = 
      +                          n & 0x0f;
  6006  00316A  0E0F               	movlw	15
  6007  00316C  1437               	andwf	xtoa@n^0,w,c
  6008  00316E  6E41               	movwf	xtoa@c^0,c
  6009  003170  6A42               	clrf	(xtoa@c+1)^0,c
  6010  003172                     
  6011                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 645:         c = 
      +                          (c < 10) ? '0' + c : 'a' + (c - 10);
  6012  003172  BE42               	btfsc	(xtoa@c+1)^0,7,c
  6013  003174  EFC5  F018         	goto	u4471
  6014  003178  5042               	movf	(xtoa@c+1)^0,w,c
  6015  00317A  E10A               	bnz	u4470
  6016  00317C  0E0A               	movlw	10
  6017  00317E  5C41               	subwf	xtoa@c^0,w,c
  6018  003180  A0D8               	btfss	status,0,c
  6019  003182  EFC5  F018         	goto	u4471
  6020  003186  EFC8  F018         	goto	u4470
  6021  00318A                     u4471:
  6022  00318A  FFFF               	dw	65535	; assembler added errata NOP
  6023  00318C  EFD1  F018         	goto	l4013
  6024  003190                     u4470:
  6025  003190  FFFF               	dw	65535	; assembler added errata NOP
  6026  003192  0E57               	movlw	87
  6027  003194  2441               	addwf	xtoa@c^0,w,c
  6028  003196  6E41               	movwf	xtoa@c^0,c
  6029  003198  0E00               	movlw	0
  6030  00319A  2042               	addwfc	(xtoa@c+1)^0,w,c
  6031  00319C  6E42               	movwf	(xtoa@c+1)^0,c
  6032  00319E  EFD8  F018         	goto	l1237
  6033  0031A2                     l4013:
  6034  0031A2  FFFF               	dw	65535	; assembler added errata NOP
  6035  0031A4  0E30               	movlw	48
  6036  0031A6  2441               	addwf	xtoa@c^0,w,c
  6037  0031A8  6E41               	movwf	xtoa@c^0,c
  6038  0031AA  0E00               	movlw	0
  6039  0031AC  2042               	addwfc	(xtoa@c+1)^0,w,c
  6040  0031AE  6E42               	movwf	(xtoa@c+1)^0,c
  6041  0031B0                     l1237:
  6042  0031B0  FFFF               	dw	65535	; assembler added errata NOP
  6043  0031B2  0EBF               	movlw	191
  6044  0031B4  6E27               	movwf	??_xtoa^0,c
  6045  0031B6  0EFF               	movlw	255
  6046  0031B8  6E28               	movwf	(??_xtoa+1)^0,c
  6047  0031BA  5026               	movf	xtoa@x^0,w,c
  6048  0031BC  6E29               	movwf	(??_xtoa+2)^0,c
  6049  0031BE  6A2A               	clrf	(??_xtoa+3)^0,c
  6050  0031C0  5027               	movf	??_xtoa^0,w,c
  6051  0031C2  2629               	addwf	(??_xtoa+2)^0,f,c
  6052  0031C4  5028               	movf	(??_xtoa+1)^0,w,c
  6053  0031C6  222A               	addwfc	(??_xtoa+3)^0,f,c
  6054  0031C8  502A               	movf	(??_xtoa+3)^0,w,c
  6055  0031CA  E10B               	bnz	u4480
  6056  0031CC  0E1A               	movlw	26
  6057  0031CE  5C29               	subwf	(??_xtoa+2)^0,w,c
  6058  0031D0  A0D8               	btfss	status,0,c
  6059  0031D2  EFED  F018         	goto	u4481
  6060  0031D6  EFF1  F018         	goto	u4480
  6061  0031DA                     u4481:
  6062  0031DA  FFFF               	dw	65535	; assembler added errata NOP
  6063  0031DC  0E01               	movlw	1
  6064  0031DE  EFF3  F018         	goto	u4490
  6065  0031E2                     u4480:
  6066  0031E2  FFFF               	dw	65535	; assembler added errata NOP
  6067  0031E4  0E00               	movlw	0
  6068  0031E6                     u4490:
  6069  0031E6  FFFF               	dw	65535	; assembler added errata NOP
  6070  0031E8  6E2F               	movwf	_xtoa$1667^0,c
  6071  0031EA  6A30               	clrf	(_xtoa$1667+1)^0,c
  6072  0031EC  502F               	movf	_xtoa$1667^0,w,c
  6073  0031EE  1030               	iorwf	(_xtoa$1667+1)^0,w,c
  6074  0031F0  B4D8               	btfsc	status,2,c
  6075  0031F2  EFFD  F018         	goto	u4501
  6076  0031F6  EF00  F019         	goto	u4500
  6077  0031FA                     u4501:
  6078  0031FA  FFFF               	dw	65535	; assembler added errata NOP
  6079  0031FC  EF36  F019         	goto	l4027
  6080  003200                     u4500:
  6081  003200  FFFF               	dw	65535	; assembler added errata NOP
  6082  003202  0E9F               	movlw	159
  6083  003204  6E27               	movwf	??_xtoa^0,c
  6084  003206  0EFF               	movlw	255
  6085  003208  6E28               	movwf	(??_xtoa+1)^0,c
  6086  00320A  0E20               	movlw	32
  6087  00320C  1041               	iorwf	xtoa@c^0,w,c
  6088  00320E  6E29               	movwf	(??_xtoa+2)^0,c
  6089  003210  0E00               	movlw	0
  6090  003212  1042               	iorwf	(xtoa@c+1)^0,w,c
  6091  003214  6E2A               	movwf	(??_xtoa+3)^0,c
  6092  003216  5027               	movf	??_xtoa^0,w,c
  6093  003218  2629               	addwf	(??_xtoa+2)^0,f,c
  6094  00321A  5028               	movf	(??_xtoa+1)^0,w,c
  6095  00321C  222A               	addwfc	(??_xtoa+3)^0,f,c
  6096  00321E  502A               	movf	(??_xtoa+3)^0,w,c
  6097  003220  E10B               	bnz	u4510
  6098  003222  0E1A               	movlw	26
  6099  003224  5C29               	subwf	(??_xtoa+2)^0,w,c
  6100  003226  A0D8               	btfss	status,0,c
  6101  003228  EF18  F019         	goto	u4511
  6102  00322C  EF1C  F019         	goto	u4510
  6103  003230                     u4511:
  6104  003230  FFFF               	dw	65535	; assembler added errata NOP
  6105  003232  0E01               	movlw	1
  6106  003234  EF1E  F019         	goto	u4520
  6107  003238                     u4510:
  6108  003238  FFFF               	dw	65535	; assembler added errata NOP
  6109  00323A  0E00               	movlw	0
  6110  00323C                     u4520:
  6111  00323C  FFFF               	dw	65535	; assembler added errata NOP
  6112  00323E  6E31               	movwf	_xtoa$1668^0,c
  6113  003240  6A32               	clrf	(_xtoa$1668+1)^0,c
  6114  003242  5031               	movf	_xtoa$1668^0,w,c
  6115  003244  1032               	iorwf	(_xtoa$1668+1)^0,w,c
  6116  003246  B4D8               	btfsc	status,2,c
  6117  003248  EF28  F019         	goto	u4531
  6118  00324C  EF2B  F019         	goto	u4530
  6119  003250                     u4531:
  6120  003250  FFFF               	dw	65535	; assembler added errata NOP
  6121  003252  EF36  F019         	goto	l4027
  6122  003256                     u4530:
  6123  003256  FFFF               	dw	65535	; assembler added errata NOP
  6124  003258                     
  6125                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 647:             
      +                          c = toupper(c);
  6126  003258  C041  F007         	movff	xtoa@c,toupper@c
  6127  00325C  C042  F008         	movff	xtoa@c+1,toupper@c+1
  6128  003260  EC42  F036         	call	_toupper	;wreg free
  6129  003264  C007  F041         	movff	?_toupper,xtoa@c
  6130  003268  C008  F042         	movff	?_toupper+1,xtoa@c+1
  6131  00326C                     l4027:
  6132  00326C  FFFF               	dw	65535	; assembler added errata NOP
  6133                           
  6134                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 649:         dbuf
      +                          [i] = (char)c;
  6135  00326E  0E98               	movlw	low _dbuf
  6136  003270  243F               	addwf	xtoa@i^0,w,c
  6137  003272  6ED9               	movwf	fsr2l,c
  6138  003274  0E00               	movlw	high _dbuf
  6139  003276  2040               	addwfc	(xtoa@i+1)^0,w,c
  6140  003278  6EDA               	movwf	fsr2h,c
  6141  00327A  C041  FFDF         	movff	xtoa@c,indf2
  6142  00327E                     
  6143                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 650:         --p;
  6144  00327E  0633               	decf	xtoa@p^0,f,c
  6145  003280  A0D8               	btfss	status,0,c
  6146  003282  0634               	decf	(xtoa@p+1)^0,f,c
  6147  003284                     
  6148                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 651:         --w;
  6149  003284  0635               	decf	xtoa@w^0,f,c
  6150  003286  A0D8               	btfss	status,0,c
  6151  003288  0636               	decf	(xtoa@w+1)^0,f,c
  6152  00328A                     
  6153                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 652:         n = 
      +                          n >> 4;
  6154  00328A  C037  F027         	movff	xtoa@n,??_xtoa
  6155  00328E  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  6156  003292  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  6157  003296  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  6158  00329A  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  6159  00329E  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  6160  0032A2  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  6161  0032A6  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  6162  0032AA  0E05               	movlw	5
  6163  0032AC  EF62  F019         	goto	u4540
  6164  0032B0                     u4545:
  6165  0032B0  FFFF               	dw	65535	; assembler added errata NOP
  6166  0032B2  90D8               	bcf	status,0,c
  6167  0032B4  322E               	rrcf	(??_xtoa+7)^0,f,c
  6168  0032B6  322D               	rrcf	(??_xtoa+6)^0,f,c
  6169  0032B8  322C               	rrcf	(??_xtoa+5)^0,f,c
  6170  0032BA  322B               	rrcf	(??_xtoa+4)^0,f,c
  6171  0032BC  322A               	rrcf	(??_xtoa+3)^0,f,c
  6172  0032BE  3229               	rrcf	(??_xtoa+2)^0,f,c
  6173  0032C0  3228               	rrcf	(??_xtoa+1)^0,f,c
  6174  0032C2  3227               	rrcf	??_xtoa^0,f,c
  6175  0032C4                     u4540:
  6176  0032C4  FFFF               	dw	65535	; assembler added errata NOP
  6177  0032C6  2EE8               	decfsz	wreg,f,c
  6178  0032C8  EF58  F019         	goto	u4545
  6179  0032CC  C027  F037         	movff	??_xtoa,xtoa@n
  6180  0032D0  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  6181  0032D4  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  6182  0032D8  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  6183  0032DC  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  6184  0032E0  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  6185  0032E4  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  6186  0032E8  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  6187  0032EC                     l4035:
  6188  0032EC  FFFF               	dw	65535	; assembler added errata NOP
  6189                           
  6190                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6191  0032EE  BE40               	btfsc	(xtoa@i+1)^0,7,c
  6192  0032F0  EF83  F019         	goto	u4551
  6193  0032F4  5040               	movf	(xtoa@i+1)^0,w,c
  6194  0032F6  E10A               	bnz	u4550
  6195  0032F8  0E02               	movlw	2
  6196  0032FA  5C3F               	subwf	xtoa@i^0,w,c
  6197  0032FC  A0D8               	btfss	status,0,c
  6198  0032FE  EF83  F019         	goto	u4551
  6199  003302  EF86  F019         	goto	u4550
  6200  003306                     u4551:
  6201  003306  FFFF               	dw	65535	; assembler added errata NOP
  6202  003308  EFBF  F019         	goto	l1251
  6203  00330C                     u4550:
  6204  00330C  FFFF               	dw	65535	; assembler added errata NOP
  6205  00330E  5037               	movf	xtoa@n^0,w,c
  6206  003310  1038               	iorwf	(xtoa@n+1)^0,w,c
  6207  003312  1039               	iorwf	(xtoa@n+2)^0,w,c
  6208  003314  103A               	iorwf	(xtoa@n+3)^0,w,c
  6209  003316  103B               	iorwf	(xtoa@n+4)^0,w,c
  6210  003318  103C               	iorwf	(xtoa@n+5)^0,w,c
  6211  00331A  103D               	iorwf	(xtoa@n+6)^0,w,c
  6212  00331C  103E               	iorwf	(xtoa@n+7)^0,w,c
  6213  00331E  A4D8               	btfss	status,2,c
  6214  003320  EF94  F019         	goto	u4561
  6215  003324  EF97  F019         	goto	u4560
  6216  003328                     u4561:
  6217  003328  FFFF               	dw	65535	; assembler added errata NOP
  6218  00332A  EFB1  F018         	goto	l4005
  6219  00332E                     u4560:
  6220  00332E  FFFF               	dw	65535	; assembler added errata NOP
  6221  003330  BE34               	btfsc	(xtoa@p+1)^0,7,c
  6222  003332  EFA6  F019         	goto	u4570
  6223  003336  5034               	movf	(xtoa@p+1)^0,w,c
  6224  003338  E106               	bnz	u4571
  6225  00333A  0433               	decf	xtoa@p^0,w,c
  6226  00333C  B0D8               	btfsc	status,0,c
  6227  00333E  EFA3  F019         	goto	u4571
  6228  003342  EFA6  F019         	goto	u4570
  6229  003346                     u4571:
  6230  003346  FFFF               	dw	65535	; assembler added errata NOP
  6231  003348  EFB1  F018         	goto	l4005
  6232  00334C                     u4570:
  6233  00334C  FFFF               	dw	65535	; assembler added errata NOP
  6234  00334E  BE36               	btfsc	(xtoa@w+1)^0,7,c
  6235  003350  EFB2  F019         	goto	u4581
  6236  003354  5036               	movf	(xtoa@w+1)^0,w,c
  6237  003356  E109               	bnz	u4580
  6238  003358  0435               	decf	xtoa@w^0,w,c
  6239  00335A  A0D8               	btfss	status,0,c
  6240  00335C  EFB2  F019         	goto	u4581
  6241  003360  EFB5  F019         	goto	u4580
  6242  003364                     u4581:
  6243  003364  FFFF               	dw	65535	; assembler added errata NOP
  6244  003366  EFBF  F019         	goto	l1251
  6245  00336A                     u4580:
  6246  00336A  FFFF               	dw	65535	; assembler added errata NOP
  6247  00336C  0100               	movlb	0	; () banked
  6248  00336E  B38A               	btfsc	_flags& (0+255),1,b
  6249  003370  EFBC  F019         	goto	u4591
  6250  003374  EFBF  F019         	goto	u4590
  6251  003378                     u4591:
  6252  003378  FFFF               	dw	65535	; assembler added errata NOP
  6253  00337A  EFB1  F018         	goto	l4005
  6254  00337E                     u4590:
  6255  00337E                     l1251:
  6256  00337E  FFFF               	dw	65535	; assembler added errata NOP
  6257                           
  6258                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  6259  003380  0100               	movlb	0	; () banked
  6260  003382  A98A               	btfss	_flags& (0+255),4,b
  6261  003384  EFC6  F019         	goto	u4601
  6262  003388  EFC9  F019         	goto	u4600
  6263  00338C                     u4601:
  6264  00338C  FFFF               	dw	65535	; assembler added errata NOP
  6265  00338E  EFE0  F019         	goto	l4051
  6266  003392                     u4600:
  6267  003392  FFFF               	dw	65535	; assembler added errata NOP
  6268  003394                     
  6269                           ; BSR set to: 0
  6270                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 657:         --i;
  6271  003394  063F               	decf	xtoa@i^0,f,c
  6272  003396  A0D8               	btfss	status,0,c
  6273  003398  0640               	decf	(xtoa@i+1)^0,f,c
  6274  00339A                     
  6275                           ; BSR set to: 0
  6276                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 658:         dbuf
      +                          [i] = x;
  6277  00339A  0E98               	movlw	low _dbuf
  6278  00339C  243F               	addwf	xtoa@i^0,w,c
  6279  00339E  6ED9               	movwf	fsr2l,c
  6280  0033A0  0E00               	movlw	high _dbuf
  6281  0033A2  2040               	addwfc	(xtoa@i+1)^0,w,c
  6282  0033A4  6EDA               	movwf	fsr2h,c
  6283  0033A6  C026  FFDF         	movff	xtoa@x,indf2
  6284  0033AA                     
  6285                           ; BSR set to: 0
  6286                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 659:         --i;
  6287  0033AA  063F               	decf	xtoa@i^0,f,c
  6288  0033AC  A0D8               	btfss	status,0,c
  6289  0033AE  0640               	decf	(xtoa@i+1)^0,f,c
  6290                           
  6291                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 660:         dbuf
      +                          [i] = '0';
  6292  0033B0  0E98               	movlw	low _dbuf
  6293  0033B2  243F               	addwf	xtoa@i^0,w,c
  6294  0033B4  6ED9               	movwf	fsr2l,c
  6295  0033B6  0E00               	movlw	high _dbuf
  6296  0033B8  2040               	addwfc	(xtoa@i+1)^0,w,c
  6297  0033BA  6EDA               	movwf	fsr2h,c
  6298  0033BC  0E30               	movlw	48
  6299  0033BE  6EDF               	movwf	indf2,c
  6300  0033C0                     l4051:
  6301  0033C0  FFFF               	dw	65535	; assembler added errata NOP
  6302                           
  6303                           ; BSR set to: 0
  6304                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 664:     return p
      +                          ad(fp, &dbuf[i], w);
  6305  0033C2  C01C  F011         	movff	xtoa@fp,pad@fp
  6306  0033C6  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  6307  0033CA  0E98               	movlw	low _dbuf
  6308  0033CC  243F               	addwf	xtoa@i^0,w,c
  6309  0033CE  6E13               	movwf	pad@buf^0,c
  6310  0033D0  0E00               	movlw	high _dbuf
  6311  0033D2  2040               	addwfc	(xtoa@i+1)^0,w,c
  6312  0033D4  6E14               	movwf	(pad@buf+1)^0,c
  6313  0033D6  C035  F015         	movff	xtoa@w,pad@p
  6314  0033DA  C036  F016         	movff	xtoa@w+1,pad@p+1
  6315  0033DE  ECDE  F039         	call	_pad	;wreg free
  6316  0033E2  C011  F01C         	movff	?_pad,?_xtoa
  6317  0033E6  C012  F01D         	movff	?_pad+1,?_xtoa+1
  6318  0033EA  0012               	return		;funcret
  6319  0033EC  FFFF               	dw	65535	; errata NOP
  6320  0033EE                     __end_of_xtoa:
  6321                           	callstack 0
  6322                           
  6323 ;; *************** function _toupper *****************
  6324 ;; Defined at:
  6325 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\toupper.c"
  6326 ;; Parameters:    Size  Location     Type
  6327 ;;  c               2    6[COMRAM] int 
  6328 ;; Auto vars:     Size  Location     Type
  6329 ;;		None
  6330 ;; Return value:  Size  Location     Type
  6331 ;;                  2    6[COMRAM] int 
  6332 ;; Registers used:
  6333 ;;		wreg, status,2, status,0
  6334 ;; Tracked objects:
  6335 ;;		On entry : 0/0
  6336 ;;		On exit  : 0/0
  6337 ;;		Unchanged: 0/0
  6338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6339 ;;      Params:         2       0       0       0       0       0       0
  6340 ;;      Locals:         2       0       0       0       0       0       0
  6341 ;;      Temps:          4       0       0       0       0       0       0
  6342 ;;      Totals:         8       0       0       0       0       0       0
  6343 ;;Total ram usage:        8 bytes
  6344 ;; Hardware stack levels used:    1
  6345 ;; Hardware stack levels required when called:    2
  6346 ;; This function calls:
  6347 ;;		_islower
  6348 ;; This function is called by:
  6349 ;;		_xtoa
  6350 ;; This function uses a non-reentrant model
  6351 ;;
  6352                           
  6353                           	psect	text10
  6354  006C84                     __ptext10:
  6355                           	callstack 0
  6356  006C84                     _toupper:
  6357                           	callstack 0
  6358  006C84  FFFF               	dw	65535	; assembler added errata NOP
  6359  006C86  0E9F               	movlw	159
  6360  006C88  6E09               	movwf	??_toupper^0,c
  6361  006C8A  0EFF               	movlw	255
  6362  006C8C  6E0A               	movwf	(??_toupper+1)^0,c
  6363  006C8E  C007  F00B         	movff	toupper@c,??_toupper+2
  6364  006C92  C008  F00C         	movff	toupper@c+1,??_toupper+3
  6365  006C96  5009               	movf	??_toupper^0,w,c
  6366  006C98  260B               	addwf	(??_toupper+2)^0,f,c
  6367  006C9A  500A               	movf	(??_toupper+1)^0,w,c
  6368  006C9C  220C               	addwfc	(??_toupper+3)^0,f,c
  6369  006C9E  500C               	movf	(??_toupper+3)^0,w,c
  6370  006CA0  E10B               	bnz	u3940
  6371  006CA2  0E1A               	movlw	26
  6372  006CA4  5C0B               	subwf	(??_toupper+2)^0,w,c
  6373  006CA6  A0D8               	btfss	status,0,c
  6374  006CA8  EF58  F036         	goto	u3941
  6375  006CAC  EF5C  F036         	goto	u3940
  6376  006CB0                     u3941:
  6377  006CB0  FFFF               	dw	65535	; assembler added errata NOP
  6378  006CB2  0E01               	movlw	1
  6379  006CB4  EF5E  F036         	goto	u3950
  6380  006CB8                     u3940:
  6381  006CB8  FFFF               	dw	65535	; assembler added errata NOP
  6382  006CBA  0E00               	movlw	0
  6383  006CBC                     u3950:
  6384  006CBC  FFFF               	dw	65535	; assembler added errata NOP
  6385  006CBE  6E0D               	movwf	_toupper$1893^0,c
  6386  006CC0  6A0E               	clrf	(_toupper$1893+1)^0,c
  6387  006CC2  500D               	movf	_toupper$1893^0,w,c
  6388  006CC4  100E               	iorwf	(_toupper$1893+1)^0,w,c
  6389  006CC6  B4D8               	btfsc	status,2,c
  6390  006CC8  EF68  F036         	goto	u3961
  6391  006CCC  EF6B  F036         	goto	u3960
  6392  006CD0                     u3961:
  6393  006CD0  FFFF               	dw	65535	; assembler added errata NOP
  6394  006CD2  EF72  F036         	goto	l1437
  6395  006CD6                     u3960:
  6396  006CD6  FFFF               	dw	65535	; assembler added errata NOP
  6397  006CD8  0E5F               	movlw	95
  6398  006CDA  1407               	andwf	toupper@c^0,w,c
  6399  006CDC  6E07               	movwf	?_toupper^0,c
  6400  006CDE  6A08               	clrf	(?_toupper+1)^0,c
  6401  006CE0  EF77  F036         	goto	l1442
  6402  006CE4                     l1437:
  6403  006CE4  FFFF               	dw	65535	; assembler added errata NOP
  6404  006CE6  C007  F007         	movff	toupper@c,?_toupper
  6405  006CEA  C008  F008         	movff	toupper@c+1,?_toupper+1
  6406  006CEE                     l1442:
  6407  006CEE  FFFF               	dw	65535	; assembler added errata NOP
  6408  006CF0  0012               	return		;funcret
  6409  006CF2  FFFF               	dw	65535	; errata NOP
  6410  006CF4                     __end_of_toupper:
  6411                           	callstack 0
  6412                           
  6413 ;; *************** function _islower *****************
  6414 ;; Defined at:
  6415 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\islower.c"
  6416 ;; Parameters:    Size  Location     Type
  6417 ;;  c               2    0[COMRAM] int 
  6418 ;; Auto vars:     Size  Location     Type
  6419 ;;		None
  6420 ;; Return value:  Size  Location     Type
  6421 ;;                  2    0[COMRAM] int 
  6422 ;; Registers used:
  6423 ;;		wreg, status,2, status,0
  6424 ;; Tracked objects:
  6425 ;;		On entry : 0/0
  6426 ;;		On exit  : 0/0
  6427 ;;		Unchanged: 0/0
  6428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6429 ;;      Params:         2       0       0       0       0       0       0
  6430 ;;      Locals:         0       0       0       0       0       0       0
  6431 ;;      Temps:          4       0       0       0       0       0       0
  6432 ;;      Totals:         6       0       0       0       0       0       0
  6433 ;;Total ram usage:        6 bytes
  6434 ;; Hardware stack levels used:    1
  6435 ;; Hardware stack levels required when called:    1
  6436 ;; This function calls:
  6437 ;;		Nothing
  6438 ;; This function is called by:
  6439 ;;		_toupper
  6440 ;; This function uses a non-reentrant model
  6441 ;;
  6442                           
  6443                           	psect	text11
  6444  00692E                     __ptext11:
  6445                           	callstack 0
  6446  00692E                     _islower:
  6447                           	callstack 23
  6448  00692E  FFFF               	dw	65535	; assembler added errata NOP
  6449  006930  0E9F               	movlw	159
  6450  006932  6E03               	movwf	??_islower^0,c
  6451  006934  0EFF               	movlw	255
  6452  006936  6E04               	movwf	(??_islower+1)^0,c
  6453  006938  C001  F005         	movff	islower@c,??_islower+2
  6454  00693C  C002  F006         	movff	islower@c+1,??_islower+3
  6455  006940  5003               	movf	??_islower^0,w,c
  6456  006942  2605               	addwf	(??_islower+2)^0,f,c
  6457  006944  5004               	movf	(??_islower+1)^0,w,c
  6458  006946  2206               	addwfc	(??_islower+3)^0,f,c
  6459  006948  5006               	movf	(??_islower+3)^0,w,c
  6460  00694A  E10B               	bnz	u3630
  6461  00694C  0E1A               	movlw	26
  6462  00694E  5C05               	subwf	(??_islower+2)^0,w,c
  6463  006950  A0D8               	btfss	status,0,c
  6464  006952  EFAD  F034         	goto	u3631
  6465  006956  EFB1  F034         	goto	u3630
  6466  00695A                     u3631:
  6467  00695A  FFFF               	dw	65535	; assembler added errata NOP
  6468  00695C  0E01               	movlw	1
  6469  00695E  EFB3  F034         	goto	u3640
  6470  006962                     u3630:
  6471  006962  FFFF               	dw	65535	; assembler added errata NOP
  6472  006964  0E00               	movlw	0
  6473  006966                     u3640:
  6474  006966  FFFF               	dw	65535	; assembler added errata NOP
  6475  006968  6E01               	movwf	?_islower^0,c
  6476  00696A  6A02               	clrf	(?_islower+1)^0,c
  6477  00696C  0012               	return		;funcret
  6478  00696E  FFFF               	dw	65535	; errata NOP
  6479  006970                     __end_of_islower:
  6480                           	callstack 0
  6481                           
  6482 ;; *************** function _isupper *****************
  6483 ;; Defined at:
  6484 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  6485 ;; Parameters:    Size  Location     Type
  6486 ;;  c               2    0[COMRAM] int 
  6487 ;; Auto vars:     Size  Location     Type
  6488 ;;		None
  6489 ;; Return value:  Size  Location     Type
  6490 ;;                  2    0[COMRAM] int 
  6491 ;; Registers used:
  6492 ;;		wreg, status,2, status,0
  6493 ;; Tracked objects:
  6494 ;;		On entry : 0/0
  6495 ;;		On exit  : 0/0
  6496 ;;		Unchanged: 0/0
  6497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6498 ;;      Params:         2       0       0       0       0       0       0
  6499 ;;      Locals:         0       0       0       0       0       0       0
  6500 ;;      Temps:          4       0       0       0       0       0       0
  6501 ;;      Totals:         6       0       0       0       0       0       0
  6502 ;;Total ram usage:        6 bytes
  6503 ;; Hardware stack levels used:    1
  6504 ;; Hardware stack levels required when called:    1
  6505 ;; This function calls:
  6506 ;;		Nothing
  6507 ;; This function is called by:
  6508 ;;		_xtoa
  6509 ;; This function uses a non-reentrant model
  6510 ;;
  6511                           
  6512                           	psect	text12
  6513  0068EC                     __ptext12:
  6514                           	callstack 0
  6515  0068EC                     _isupper:
  6516                           	callstack 24
  6517  0068EC  FFFF               	dw	65535	; assembler added errata NOP
  6518  0068EE  0EBF               	movlw	191
  6519  0068F0  6E03               	movwf	??_isupper^0,c
  6520  0068F2  0EFF               	movlw	255
  6521  0068F4  6E04               	movwf	(??_isupper+1)^0,c
  6522  0068F6  C001  F005         	movff	isupper@c,??_isupper+2
  6523  0068FA  C002  F006         	movff	isupper@c+1,??_isupper+3
  6524  0068FE  5003               	movf	??_isupper^0,w,c
  6525  006900  2605               	addwf	(??_isupper+2)^0,f,c
  6526  006902  5004               	movf	(??_isupper+1)^0,w,c
  6527  006904  2206               	addwfc	(??_isupper+3)^0,f,c
  6528  006906  5006               	movf	(??_isupper+3)^0,w,c
  6529  006908  E10B               	bnz	u3900
  6530  00690A  0E1A               	movlw	26
  6531  00690C  5C05               	subwf	(??_isupper+2)^0,w,c
  6532  00690E  A0D8               	btfss	status,0,c
  6533  006910  EF8C  F034         	goto	u3901
  6534  006914  EF90  F034         	goto	u3900
  6535  006918                     u3901:
  6536  006918  FFFF               	dw	65535	; assembler added errata NOP
  6537  00691A  0E01               	movlw	1
  6538  00691C  EF92  F034         	goto	u3910
  6539  006920                     u3900:
  6540  006920  FFFF               	dw	65535	; assembler added errata NOP
  6541  006922  0E00               	movlw	0
  6542  006924                     u3910:
  6543  006924  FFFF               	dw	65535	; assembler added errata NOP
  6544  006926  6E01               	movwf	?_isupper^0,c
  6545  006928  6A02               	clrf	(?_isupper+1)^0,c
  6546  00692A  0012               	return		;funcret
  6547  00692C  FFFF               	dw	65535	; errata NOP
  6548  00692E                     __end_of_isupper:
  6549                           	callstack 0
  6550                           
  6551 ;; *************** function _isalpha *****************
  6552 ;; Defined at:
  6553 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isalpha.c"
  6554 ;; Parameters:    Size  Location     Type
  6555 ;;  c               2    0[COMRAM] int 
  6556 ;; Auto vars:     Size  Location     Type
  6557 ;;		None
  6558 ;; Return value:  Size  Location     Type
  6559 ;;                  2    0[COMRAM] int 
  6560 ;; Registers used:
  6561 ;;		wreg, status,2, status,0
  6562 ;; Tracked objects:
  6563 ;;		On entry : 0/0
  6564 ;;		On exit  : 0/0
  6565 ;;		Unchanged: 0/0
  6566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6567 ;;      Params:         2       0       0       0       0       0       0
  6568 ;;      Locals:         0       0       0       0       0       0       0
  6569 ;;      Temps:          4       0       0       0       0       0       0
  6570 ;;      Totals:         6       0       0       0       0       0       0
  6571 ;;Total ram usage:        6 bytes
  6572 ;; Hardware stack levels used:    1
  6573 ;; Hardware stack levels required when called:    1
  6574 ;; This function calls:
  6575 ;;		Nothing
  6576 ;; This function is called by:
  6577 ;;		_xtoa
  6578 ;; This function uses a non-reentrant model
  6579 ;;
  6580                           
  6581                           	psect	text13
  6582  006970                     __ptext13:
  6583                           	callstack 0
  6584  006970                     _isalpha:
  6585                           	callstack 24
  6586  006970  FFFF               	dw	65535	; assembler added errata NOP
  6587  006972  0E9F               	movlw	159
  6588  006974  6E03               	movwf	??_isalpha^0,c
  6589  006976  0EFF               	movlw	255
  6590  006978  6E04               	movwf	(??_isalpha+1)^0,c
  6591  00697A  0E20               	movlw	32
  6592  00697C  1001               	iorwf	isalpha@c^0,w,c
  6593  00697E  6E05               	movwf	(??_isalpha+2)^0,c
  6594  006980  0E00               	movlw	0
  6595  006982  1002               	iorwf	(isalpha@c+1)^0,w,c
  6596  006984  6E06               	movwf	(??_isalpha+3)^0,c
  6597  006986  5003               	movf	??_isalpha^0,w,c
  6598  006988  2605               	addwf	(??_isalpha+2)^0,f,c
  6599  00698A  5004               	movf	(??_isalpha+1)^0,w,c
  6600  00698C  2206               	addwfc	(??_isalpha+3)^0,f,c
  6601  00698E  5006               	movf	(??_isalpha+3)^0,w,c
  6602  006990  E10B               	bnz	u3920
  6603  006992  0E1A               	movlw	26
  6604  006994  5C05               	subwf	(??_isalpha+2)^0,w,c
  6605  006996  A0D8               	btfss	status,0,c
  6606  006998  EFD0  F034         	goto	u3921
  6607  00699C  EFD4  F034         	goto	u3920
  6608  0069A0                     u3921:
  6609  0069A0  FFFF               	dw	65535	; assembler added errata NOP
  6610  0069A2  0E01               	movlw	1
  6611  0069A4  EFD6  F034         	goto	u3930
  6612  0069A8                     u3920:
  6613  0069A8  FFFF               	dw	65535	; assembler added errata NOP
  6614  0069AA  0E00               	movlw	0
  6615  0069AC                     u3930:
  6616  0069AC  FFFF               	dw	65535	; assembler added errata NOP
  6617  0069AE  6E01               	movwf	?_isalpha^0,c
  6618  0069B0  6A02               	clrf	(?_isalpha+1)^0,c
  6619  0069B2  0012               	return		;funcret
  6620  0069B4  FFFF               	dw	65535	; errata NOP
  6621  0069B6                     __end_of_isalpha:
  6622                           	callstack 0
  6623                           
  6624 ;; *************** function _utoa *****************
  6625 ;; Defined at:
  6626 ;;		line 593 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6627 ;; Parameters:    Size  Location     Type
  6628 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6629 ;;		 -> vsnprintf@f(6), 
  6630 ;;  d               8   29[COMRAM] unsigned long long 
  6631 ;; Auto vars:     Size  Location     Type
  6632 ;;  n               8   49[COMRAM] unsigned long long 
  6633 ;;  i               2   57[COMRAM] int 
  6634 ;;  w               2   47[COMRAM] int 
  6635 ;;  p               2   45[COMRAM] int 
  6636 ;; Return value:  Size  Location     Type
  6637 ;;                  2   27[COMRAM] int 
  6638 ;; Registers used:
  6639 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6640 ;; Tracked objects:
  6641 ;;		On entry : 0/0
  6642 ;;		On exit  : 0/0
  6643 ;;		Unchanged: 0/0
  6644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6645 ;;      Params:        10       0       0       0       0       0       0
  6646 ;;      Locals:        14       0       0       0       0       0       0
  6647 ;;      Temps:          8       0       0       0       0       0       0
  6648 ;;      Totals:        32       0       0       0       0       0       0
  6649 ;;Total ram usage:       32 bytes
  6650 ;; Hardware stack levels used:    1
  6651 ;; Hardware stack levels required when called:    5
  6652 ;; This function calls:
  6653 ;;		___lodiv
  6654 ;;		___lomod
  6655 ;;		_pad
  6656 ;; This function is called by:
  6657 ;;		_vfpfcnvrt
  6658 ;; This function uses a non-reentrant model
  6659 ;;
  6660                           
  6661                           	psect	text14
  6662  0033EE                     __ptext14:
  6663                           	callstack 0
  6664  0033EE                     _utoa:
  6665                           	callstack 0
  6666  0033EE  FFFF               	dw	65535	; assembler added errata NOP
  6667  0033F0                     
  6668                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 593: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99
      +                          \common\doprnt.c: 594: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\dop
      +                          rnt.c: 595:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common
      +                          \doprnt.c: 596:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sourc
      +                          es\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  6669  0033F0  0100               	movlb	0	; () banked
  6670  0033F2  BF89               	btfsc	(_prec+1)& (0+255),7,b
  6671  0033F4  EFFE  F019         	goto	u4371
  6672  0033F8  EF01  F01A         	goto	u4370
  6673  0033FC                     u4371:
  6674  0033FC  FFFF               	dw	65535	; assembler added errata NOP
  6675  0033FE  EF03  F01A         	goto	l3957
  6676  003402                     u4370:
  6677  003402  FFFF               	dw	65535	; assembler added errata NOP
  6678  003404                     
  6679                           ; BSR set to: 0
  6680                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 600:         flag
      +                          s &= ~(1 << 1);
  6681  003404  938A               	bcf	_flags& (0+255),1,b
  6682  003406                     l3957:
  6683  003406  FFFF               	dw	65535	; assembler added errata NOP
  6684                           
  6685                           ; BSR set to: 0
  6686                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 602:     p = (0 <
      +                           prec) ? prec : 1;
  6687  003408  BF89               	btfsc	(_prec+1)& (0+255),7,b
  6688  00340A  EF12  F01A         	goto	u4380
  6689  00340E  5189               	movf	(_prec+1)& (0+255),w,b
  6690  003410  E106               	bnz	u4381
  6691  003412  0588               	decf	_prec& (0+255),w,b
  6692  003414  B0D8               	btfsc	status,0,c
  6693  003416  EF0F  F01A         	goto	u4381
  6694  00341A  EF12  F01A         	goto	u4380
  6695  00341E                     u4381:
  6696  00341E  FFFF               	dw	65535	; assembler added errata NOP
  6697  003420  EF19  F01A         	goto	l1213
  6698  003424                     u4380:
  6699  003424  FFFF               	dw	65535	; assembler added errata NOP
  6700  003426                     
  6701                           ; BSR set to: 0
  6702  003426  0E00               	movlw	0
  6703  003428  6E2F               	movwf	(utoa@p+1)^0,c
  6704  00342A  0E01               	movlw	1
  6705  00342C  6E2E               	movwf	utoa@p^0,c
  6706  00342E  EF1E  F01A         	goto	l1215
  6707  003432                     l1213:
  6708  003432  FFFF               	dw	65535	; assembler added errata NOP
  6709                           
  6710                           ; BSR set to: 0
  6711  003434  C088  F02E         	movff	_prec,utoa@p
  6712  003438  C089  F02F         	movff	_prec+1,utoa@p+1
  6713  00343C                     l1215:
  6714  00343C  FFFF               	dw	65535	; assembler added errata NOP
  6715                           
  6716                           ; BSR set to: 0
  6717                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 603:     w = widt
      +                          h;
  6718  00343E  C086  F030         	movff	_width,utoa@w
  6719  003442  C087  F031         	movff	_width+1,utoa@w+1
  6720                           
  6721                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 606:     n = d;
  6722  003446  C01E  F032         	movff	utoa@d,utoa@n
  6723  00344A  C01F  F033         	movff	utoa@d+1,utoa@n+1
  6724  00344E  C020  F034         	movff	utoa@d+2,utoa@n+2
  6725  003452  C021  F035         	movff	utoa@d+3,utoa@n+3
  6726  003456  C022  F036         	movff	utoa@d+4,utoa@n+4
  6727  00345A  C023  F037         	movff	utoa@d+5,utoa@n+5
  6728  00345E  C024  F038         	movff	utoa@d+6,utoa@n+6
  6729  003462  C025  F039         	movff	utoa@d+7,utoa@n+7
  6730  003466                     
  6731                           ; BSR set to: 0
  6732                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 607:     i = size
      +                          of(dbuf) - 1;
  6733  003466  0E00               	movlw	0
  6734  003468  6E3B               	movwf	(utoa@i+1)^0,c
  6735  00346A  0E1F               	movlw	31
  6736  00346C  6E3A               	movwf	utoa@i^0,c
  6737  00346E                     
  6738                           ; BSR set to: 0
  6739                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 608:     dbuf[i] 
      +                          = '\0';
  6740  00346E  0E00               	movlw	0
  6741  003470  6FB7               	movwf	(_dbuf+31)& (0+255),b
  6742                           
  6743                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 609:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6744  003472  EFB2  F01A         	goto	l3975
  6745  003476                     l3965:
  6746  003476  FFFF               	dw	65535	; assembler added errata NOP
  6747                           
  6748                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 610:         --i;
  6749  003478  063A               	decf	utoa@i^0,f,c
  6750  00347A  A0D8               	btfss	status,0,c
  6751  00347C  063B               	decf	(utoa@i+1)^0,f,c
  6752  00347E                     
  6753                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 611:         dbuf
      +                          [i] = '0' + (n % 10);
  6754  00347E  0E98               	movlw	low _dbuf
  6755  003480  243A               	addwf	utoa@i^0,w,c
  6756  003482  6ED9               	movwf	fsr2l,c
  6757  003484  0E00               	movlw	high _dbuf
  6758  003486  203B               	addwfc	(utoa@i+1)^0,w,c
  6759  003488  6EDA               	movwf	fsr2h,c
  6760  00348A  C032  F001         	movff	utoa@n,___lomod@dividend
  6761  00348E  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  6762  003492  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  6763  003496  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  6764  00349A  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  6765  00349E  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  6766  0034A2  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  6767  0034A6  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  6768  0034AA  0E0A               	movlw	10
  6769  0034AC  6E09               	movwf	___lomod@divisor^0,c
  6770  0034AE  0E00               	movlw	0
  6771  0034B0  6E0A               	movwf	(___lomod@divisor+1)^0,c
  6772  0034B2  0E00               	movlw	0
  6773  0034B4  6E0B               	movwf	(___lomod@divisor+2)^0,c
  6774  0034B6  0E00               	movlw	0
  6775  0034B8  6E0C               	movwf	(___lomod@divisor+3)^0,c
  6776  0034BA  0E00               	movlw	0
  6777  0034BC  6E0D               	movwf	(___lomod@divisor+4)^0,c
  6778  0034BE  0E00               	movlw	0
  6779  0034C0  6E0E               	movwf	(___lomod@divisor+5)^0,c
  6780  0034C2  0E00               	movlw	0
  6781  0034C4  6E0F               	movwf	(___lomod@divisor+6)^0,c
  6782  0034C6  0E00               	movlw	0
  6783  0034C8  6E10               	movwf	(___lomod@divisor+7)^0,c
  6784  0034CA  EC51  F03A         	call	___lomod	;wreg free
  6785  0034CE  C001  F026         	movff	?___lomod,??_utoa
  6786  0034D2  C002  F027         	movff	?___lomod+1,??_utoa+1
  6787  0034D6  C003  F028         	movff	?___lomod+2,??_utoa+2
  6788  0034DA  C004  F029         	movff	?___lomod+3,??_utoa+3
  6789  0034DE  C005  F02A         	movff	?___lomod+4,??_utoa+4
  6790  0034E2  C006  F02B         	movff	?___lomod+5,??_utoa+5
  6791  0034E6  C007  F02C         	movff	?___lomod+6,??_utoa+6
  6792  0034EA  C008  F02D         	movff	?___lomod+7,??_utoa+7
  6793  0034EE  5026               	movf	??_utoa^0,w,c
  6794  0034F0  0F30               	addlw	48
  6795  0034F2  6EDF               	movwf	indf2,c
  6796  0034F4                     
  6797                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 612:         --p;
  6798  0034F4  062E               	decf	utoa@p^0,f,c
  6799  0034F6  A0D8               	btfss	status,0,c
  6800  0034F8  062F               	decf	(utoa@p+1)^0,f,c
  6801  0034FA                     
  6802                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 613:         --w;
  6803  0034FA  0630               	decf	utoa@w^0,f,c
  6804  0034FC  A0D8               	btfss	status,0,c
  6805  0034FE  0631               	decf	(utoa@w+1)^0,f,c
  6806  003500                     
  6807                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 614:         n = 
      +                          n / 10;
  6808  003500  C032  F001         	movff	utoa@n,___lodiv@dividend
  6809  003504  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  6810  003508  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  6811  00350C  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  6812  003510  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  6813  003514  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  6814  003518  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  6815  00351C  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  6816  003520  0E0A               	movlw	10
  6817  003522  6E09               	movwf	___lodiv@divisor^0,c
  6818  003524  0E00               	movlw	0
  6819  003526  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  6820  003528  0E00               	movlw	0
  6821  00352A  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  6822  00352C  0E00               	movlw	0
  6823  00352E  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  6824  003530  0E00               	movlw	0
  6825  003532  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  6826  003534  0E00               	movlw	0
  6827  003536  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  6828  003538  0E00               	movlw	0
  6829  00353A  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  6830  00353C  0E00               	movlw	0
  6831  00353E  6E10               	movwf	(___lodiv@divisor+7)^0,c
  6832  003540  EC40  F03C         	call	___lodiv	;wreg free
  6833  003544  C001  F032         	movff	?___lodiv,utoa@n
  6834  003548  C002  F033         	movff	?___lodiv+1,utoa@n+1
  6835  00354C  C003  F034         	movff	?___lodiv+2,utoa@n+2
  6836  003550  C004  F035         	movff	?___lodiv+3,utoa@n+3
  6837  003554  C005  F036         	movff	?___lodiv+4,utoa@n+4
  6838  003558  C006  F037         	movff	?___lodiv+5,utoa@n+5
  6839  00355C  C007  F038         	movff	?___lodiv+6,utoa@n+6
  6840  003560  C008  F039         	movff	?___lodiv+7,utoa@n+7
  6841  003564                     l3975:
  6842  003564  FFFF               	dw	65535	; assembler added errata NOP
  6843                           
  6844                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 609:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6845  003566  503A               	movf	utoa@i^0,w,c
  6846  003568  103B               	iorwf	(utoa@i+1)^0,w,c
  6847  00356A  B4D8               	btfsc	status,2,c
  6848  00356C  EFBA  F01A         	goto	u4391
  6849  003570  EFBD  F01A         	goto	u4390
  6850  003574                     u4391:
  6851  003574  FFFF               	dw	65535	; assembler added errata NOP
  6852  003576  EFF6  F01A         	goto	l3985
  6853  00357A                     u4390:
  6854  00357A  FFFF               	dw	65535	; assembler added errata NOP
  6855  00357C  5032               	movf	utoa@n^0,w,c
  6856  00357E  1033               	iorwf	(utoa@n+1)^0,w,c
  6857  003580  1034               	iorwf	(utoa@n+2)^0,w,c
  6858  003582  1035               	iorwf	(utoa@n+3)^0,w,c
  6859  003584  1036               	iorwf	(utoa@n+4)^0,w,c
  6860  003586  1037               	iorwf	(utoa@n+5)^0,w,c
  6861  003588  1038               	iorwf	(utoa@n+6)^0,w,c
  6862  00358A  1039               	iorwf	(utoa@n+7)^0,w,c
  6863  00358C  A4D8               	btfss	status,2,c
  6864  00358E  EFCB  F01A         	goto	u4401
  6865  003592  EFCE  F01A         	goto	u4400
  6866  003596                     u4401:
  6867  003596  FFFF               	dw	65535	; assembler added errata NOP
  6868  003598  EF3B  F01A         	goto	l3965
  6869  00359C                     u4400:
  6870  00359C  FFFF               	dw	65535	; assembler added errata NOP
  6871  00359E  BE2F               	btfsc	(utoa@p+1)^0,7,c
  6872  0035A0  EFDD  F01A         	goto	u4410
  6873  0035A4  502F               	movf	(utoa@p+1)^0,w,c
  6874  0035A6  E106               	bnz	u4411
  6875  0035A8  042E               	decf	utoa@p^0,w,c
  6876  0035AA  B0D8               	btfsc	status,0,c
  6877  0035AC  EFDA  F01A         	goto	u4411
  6878  0035B0  EFDD  F01A         	goto	u4410
  6879  0035B4                     u4411:
  6880  0035B4  FFFF               	dw	65535	; assembler added errata NOP
  6881  0035B6  EF3B  F01A         	goto	l3965
  6882  0035BA                     u4410:
  6883  0035BA  FFFF               	dw	65535	; assembler added errata NOP
  6884  0035BC  BE31               	btfsc	(utoa@w+1)^0,7,c
  6885  0035BE  EFE9  F01A         	goto	u4421
  6886  0035C2  5031               	movf	(utoa@w+1)^0,w,c
  6887  0035C4  E109               	bnz	u4420
  6888  0035C6  0430               	decf	utoa@w^0,w,c
  6889  0035C8  A0D8               	btfss	status,0,c
  6890  0035CA  EFE9  F01A         	goto	u4421
  6891  0035CE  EFEC  F01A         	goto	u4420
  6892  0035D2                     u4421:
  6893  0035D2  FFFF               	dw	65535	; assembler added errata NOP
  6894  0035D4  EFF6  F01A         	goto	l3985
  6895  0035D8                     u4420:
  6896  0035D8  FFFF               	dw	65535	; assembler added errata NOP
  6897  0035DA  0100               	movlb	0	; () banked
  6898  0035DC  B38A               	btfsc	_flags& (0+255),1,b
  6899  0035DE  EFF3  F01A         	goto	u4431
  6900  0035E2  EFF6  F01A         	goto	u4430
  6901  0035E6                     u4431:
  6902  0035E6  FFFF               	dw	65535	; assembler added errata NOP
  6903  0035E8  EF3B  F01A         	goto	l3965
  6904  0035EC                     u4430:
  6905  0035EC                     l3985:
  6906  0035EC  FFFF               	dw	65535	; assembler added errata NOP
  6907                           
  6908                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 618:     return p
      +                          ad(fp, &dbuf[i], w);
  6909  0035EE  C01C  F011         	movff	utoa@fp,pad@fp
  6910  0035F2  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  6911  0035F6  0E98               	movlw	low _dbuf
  6912  0035F8  243A               	addwf	utoa@i^0,w,c
  6913  0035FA  6E13               	movwf	pad@buf^0,c
  6914  0035FC  0E00               	movlw	high _dbuf
  6915  0035FE  203B               	addwfc	(utoa@i+1)^0,w,c
  6916  003600  6E14               	movwf	(pad@buf+1)^0,c
  6917  003602  C030  F015         	movff	utoa@w,pad@p
  6918  003606  C031  F016         	movff	utoa@w+1,pad@p+1
  6919  00360A  ECDE  F039         	call	_pad	;wreg free
  6920  00360E  C011  F01C         	movff	?_pad,?_utoa
  6921  003612  C012  F01D         	movff	?_pad+1,?_utoa+1
  6922  003616  0012               	return		;funcret
  6923  003618  FFFF               	dw	65535	; errata NOP
  6924  00361A                     __end_of_utoa:
  6925                           	callstack 0
  6926                           
  6927 ;; *************** function ___lomod *****************
  6928 ;; Defined at:
  6929 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lomod.c"
  6930 ;; Parameters:    Size  Location     Type
  6931 ;;  dividend        8    0[COMRAM] unsigned long long 
  6932 ;;  divisor         8    8[COMRAM] unsigned long long 
  6933 ;; Auto vars:     Size  Location     Type
  6934 ;;  counter         1   16[COMRAM] unsigned char 
  6935 ;; Return value:  Size  Location     Type
  6936 ;;                  8    0[COMRAM] unsigned long long 
  6937 ;; Registers used:
  6938 ;;		wreg, status,2, status,0
  6939 ;; Tracked objects:
  6940 ;;		On entry : 0/0
  6941 ;;		On exit  : 0/0
  6942 ;;		Unchanged: 0/0
  6943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6944 ;;      Params:        16       0       0       0       0       0       0
  6945 ;;      Locals:         1       0       0       0       0       0       0
  6946 ;;      Temps:          0       0       0       0       0       0       0
  6947 ;;      Totals:        17       0       0       0       0       0       0
  6948 ;;Total ram usage:       17 bytes
  6949 ;; Hardware stack levels used:    1
  6950 ;; Hardware stack levels required when called:    1
  6951 ;; This function calls:
  6952 ;;		Nothing
  6953 ;; This function is called by:
  6954 ;;		_utoa
  6955 ;; This function uses a non-reentrant model
  6956 ;;
  6957                           
  6958                           	psect	text15
  6959  0074A2                     __ptext15:
  6960                           	callstack 0
  6961  0074A2                     ___lomod:
  6962                           	callstack 0
  6963  0074A2  FFFF               	dw	65535	; assembler added errata NOP
  6964  0074A4  5009               	movf	___lomod@divisor^0,w,c
  6965  0074A6  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  6966  0074A8  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  6967  0074AA  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  6968  0074AC  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  6969  0074AE  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  6970  0074B0  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  6971  0074B2  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  6972  0074B4  B4D8               	btfsc	status,2,c
  6973  0074B6  EF5F  F03A         	goto	u3831
  6974  0074BA  EF62  F03A         	goto	u3830
  6975  0074BE                     u3831:
  6976  0074BE  FFFF               	dw	65535	; assembler added errata NOP
  6977  0074C0  EFB3  F03A         	goto	l825
  6978  0074C4                     u3830:
  6979  0074C4  FFFF               	dw	65535	; assembler added errata NOP
  6980  0074C6  0E01               	movlw	1
  6981  0074C8  6E11               	movwf	___lomod@counter^0,c
  6982  0074CA  EF72  F03A         	goto	l3721
  6983  0074CE                     l3719:
  6984  0074CE  FFFF               	dw	65535	; assembler added errata NOP
  6985  0074D0  90D8               	bcf	status,0,c
  6986  0074D2  3609               	rlcf	___lomod@divisor^0,f,c
  6987  0074D4  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  6988  0074D6  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  6989  0074D8  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  6990  0074DA  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  6991  0074DC  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  6992  0074DE  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  6993  0074E0  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  6994  0074E2  2A11               	incf	___lomod@counter^0,f,c
  6995  0074E4                     l3721:
  6996  0074E4  FFFF               	dw	65535	; assembler added errata NOP
  6997  0074E6  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  6998  0074E8  EF78  F03A         	goto	u3841
  6999  0074EC  EF7B  F03A         	goto	u3840
  7000  0074F0                     u3841:
  7001  0074F0  FFFF               	dw	65535	; assembler added errata NOP
  7002  0074F2  EF67  F03A         	goto	l3719
  7003  0074F6                     u3840:
  7004  0074F6  FFFF               	dw	65535	; assembler added errata NOP
  7005  0074F8                     l3723:
  7006  0074F8  FFFF               	dw	65535	; assembler added errata NOP
  7007  0074FA  5009               	movf	___lomod@divisor^0,w,c
  7008  0074FC  5C01               	subwf	___lomod@dividend^0,w,c
  7009  0074FE  500A               	movf	(___lomod@divisor+1)^0,w,c
  7010  007500  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  7011  007502  500B               	movf	(___lomod@divisor+2)^0,w,c
  7012  007504  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  7013  007506  500C               	movf	(___lomod@divisor+3)^0,w,c
  7014  007508  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  7015  00750A  500D               	movf	(___lomod@divisor+4)^0,w,c
  7016  00750C  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  7017  00750E  500E               	movf	(___lomod@divisor+5)^0,w,c
  7018  007510  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  7019  007512  500F               	movf	(___lomod@divisor+6)^0,w,c
  7020  007514  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  7021  007516  5010               	movf	(___lomod@divisor+7)^0,w,c
  7022  007518  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  7023  00751A  A0D8               	btfss	status,0,c
  7024  00751C  EF92  F03A         	goto	u3851
  7025  007520  EF95  F03A         	goto	u3850
  7026  007524                     u3851:
  7027  007524  FFFF               	dw	65535	; assembler added errata NOP
  7028  007526  EFA6  F03A         	goto	l3727
  7029  00752A                     u3850:
  7030  00752A  FFFF               	dw	65535	; assembler added errata NOP
  7031  00752C  5009               	movf	___lomod@divisor^0,w,c
  7032  00752E  5E01               	subwf	___lomod@dividend^0,f,c
  7033  007530  500A               	movf	(___lomod@divisor+1)^0,w,c
  7034  007532  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  7035  007534  500B               	movf	(___lomod@divisor+2)^0,w,c
  7036  007536  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  7037  007538  500C               	movf	(___lomod@divisor+3)^0,w,c
  7038  00753A  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  7039  00753C  500D               	movf	(___lomod@divisor+4)^0,w,c
  7040  00753E  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  7041  007540  500E               	movf	(___lomod@divisor+5)^0,w,c
  7042  007542  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  7043  007544  500F               	movf	(___lomod@divisor+6)^0,w,c
  7044  007546  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  7045  007548  5010               	movf	(___lomod@divisor+7)^0,w,c
  7046  00754A  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  7047  00754C                     l3727:
  7048  00754C  FFFF               	dw	65535	; assembler added errata NOP
  7049  00754E  90D8               	bcf	status,0,c
  7050  007550  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  7051  007552  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  7052  007554  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  7053  007556  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  7054  007558  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  7055  00755A  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  7056  00755C  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  7057  00755E  3209               	rrcf	___lomod@divisor^0,f,c
  7058  007560  2E11               	decfsz	___lomod@counter^0,f,c
  7059  007562  EF7C  F03A         	goto	l3723
  7060  007566                     l825:
  7061  007566  FFFF               	dw	65535	; assembler added errata NOP
  7062  007568  C001  F001         	movff	___lomod@dividend,?___lomod
  7063  00756C  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  7064  007570  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  7065  007574  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  7066  007578  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  7067  00757C  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  7068  007580  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  7069  007584  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  7070  007588  0012               	return		;funcret
  7071  00758A  FFFF               	dw	65535	; errata NOP
  7072  00758C                     __end_of___lomod:
  7073                           	callstack 0
  7074                           
  7075 ;; *************** function ___lodiv *****************
  7076 ;; Defined at:
  7077 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lodiv.c"
  7078 ;; Parameters:    Size  Location     Type
  7079 ;;  dividend        8    0[COMRAM] unsigned long long 
  7080 ;;  divisor         8    8[COMRAM] unsigned long long 
  7081 ;; Auto vars:     Size  Location     Type
  7082 ;;  quotient        8   16[COMRAM] unsigned long long 
  7083 ;;  counter         1   24[COMRAM] unsigned char 
  7084 ;; Return value:  Size  Location     Type
  7085 ;;                  8    0[COMRAM] unsigned long long 
  7086 ;; Registers used:
  7087 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7088 ;; Tracked objects:
  7089 ;;		On entry : 0/0
  7090 ;;		On exit  : 0/0
  7091 ;;		Unchanged: 0/0
  7092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7093 ;;      Params:        16       0       0       0       0       0       0
  7094 ;;      Locals:         9       0       0       0       0       0       0
  7095 ;;      Temps:          0       0       0       0       0       0       0
  7096 ;;      Totals:        25       0       0       0       0       0       0
  7097 ;;Total ram usage:       25 bytes
  7098 ;; Hardware stack levels used:    1
  7099 ;; Hardware stack levels required when called:    1
  7100 ;; This function calls:
  7101 ;;		Nothing
  7102 ;; This function is called by:
  7103 ;;		_utoa
  7104 ;; This function uses a non-reentrant model
  7105 ;;
  7106                           
  7107                           	psect	text16
  7108  007880                     __ptext16:
  7109                           	callstack 0
  7110  007880                     ___lodiv:
  7111                           	callstack 0
  7112  007880  FFFF               	dw	65535	; assembler added errata NOP
  7113  007882  EE20  F011         	lfsr	2,___lodiv@quotient
  7114  007886  0E07               	movlw	7
  7115  007888                     u3791:
  7116  007888  6ADE               	clrf	postinc2,c
  7117  00788A  06E8               	decf	wreg,f,c
  7118  00788C  E2FD               	bc	u3791
  7119  00788E  5009               	movf	___lodiv@divisor^0,w,c
  7120  007890  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  7121  007892  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  7122  007894  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  7123  007896  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  7124  007898  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  7125  00789A  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  7126  00789C  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  7127  00789E  B4D8               	btfsc	status,2,c
  7128  0078A0  EF54  F03C         	goto	u3801
  7129  0078A4  EF57  F03C         	goto	u3800
  7130  0078A8                     u3801:
  7131  0078A8  FFFF               	dw	65535	; assembler added errata NOP
  7132  0078AA  EFB2  F03C         	goto	l815
  7133  0078AE                     u3800:
  7134  0078AE  FFFF               	dw	65535	; assembler added errata NOP
  7135  0078B0  0E01               	movlw	1
  7136  0078B2  6E19               	movwf	___lodiv@counter^0,c
  7137  0078B4  EF67  F03C         	goto	l3701
  7138  0078B8                     l3699:
  7139  0078B8  FFFF               	dw	65535	; assembler added errata NOP
  7140  0078BA  90D8               	bcf	status,0,c
  7141  0078BC  3609               	rlcf	___lodiv@divisor^0,f,c
  7142  0078BE  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  7143  0078C0  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  7144  0078C2  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  7145  0078C4  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  7146  0078C6  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  7147  0078C8  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  7148  0078CA  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  7149  0078CC  2A19               	incf	___lodiv@counter^0,f,c
  7150  0078CE                     l3701:
  7151  0078CE  FFFF               	dw	65535	; assembler added errata NOP
  7152  0078D0  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  7153  0078D2  EF6D  F03C         	goto	u3811
  7154  0078D6  EF70  F03C         	goto	u3810
  7155  0078DA                     u3811:
  7156  0078DA  FFFF               	dw	65535	; assembler added errata NOP
  7157  0078DC  EF5C  F03C         	goto	l3699
  7158  0078E0                     u3810:
  7159  0078E0  FFFF               	dw	65535	; assembler added errata NOP
  7160  0078E2                     l3703:
  7161  0078E2  FFFF               	dw	65535	; assembler added errata NOP
  7162  0078E4  90D8               	bcf	status,0,c
  7163  0078E6  3611               	rlcf	___lodiv@quotient^0,f,c
  7164  0078E8  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  7165  0078EA  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  7166  0078EC  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  7167  0078EE  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  7168  0078F0  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  7169  0078F2  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  7170  0078F4  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  7171  0078F6  5009               	movf	___lodiv@divisor^0,w,c
  7172  0078F8  5C01               	subwf	___lodiv@dividend^0,w,c
  7173  0078FA  500A               	movf	(___lodiv@divisor+1)^0,w,c
  7174  0078FC  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  7175  0078FE  500B               	movf	(___lodiv@divisor+2)^0,w,c
  7176  007900  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  7177  007902  500C               	movf	(___lodiv@divisor+3)^0,w,c
  7178  007904  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  7179  007906  500D               	movf	(___lodiv@divisor+4)^0,w,c
  7180  007908  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  7181  00790A  500E               	movf	(___lodiv@divisor+5)^0,w,c
  7182  00790C  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  7183  00790E  500F               	movf	(___lodiv@divisor+6)^0,w,c
  7184  007910  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  7185  007912  5010               	movf	(___lodiv@divisor+7)^0,w,c
  7186  007914  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  7187  007916  A0D8               	btfss	status,0,c
  7188  007918  EF90  F03C         	goto	u3821
  7189  00791C  EF93  F03C         	goto	u3820
  7190  007920                     u3821:
  7191  007920  FFFF               	dw	65535	; assembler added errata NOP
  7192  007922  EFA5  F03C         	goto	l3711
  7193  007926                     u3820:
  7194  007926  FFFF               	dw	65535	; assembler added errata NOP
  7195  007928  5009               	movf	___lodiv@divisor^0,w,c
  7196  00792A  5E01               	subwf	___lodiv@dividend^0,f,c
  7197  00792C  500A               	movf	(___lodiv@divisor+1)^0,w,c
  7198  00792E  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  7199  007930  500B               	movf	(___lodiv@divisor+2)^0,w,c
  7200  007932  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  7201  007934  500C               	movf	(___lodiv@divisor+3)^0,w,c
  7202  007936  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  7203  007938  500D               	movf	(___lodiv@divisor+4)^0,w,c
  7204  00793A  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  7205  00793C  500E               	movf	(___lodiv@divisor+5)^0,w,c
  7206  00793E  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  7207  007940  500F               	movf	(___lodiv@divisor+6)^0,w,c
  7208  007942  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  7209  007944  5010               	movf	(___lodiv@divisor+7)^0,w,c
  7210  007946  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  7211  007948  8011               	bsf	___lodiv@quotient^0,0,c
  7212  00794A                     l3711:
  7213  00794A  FFFF               	dw	65535	; assembler added errata NOP
  7214  00794C  90D8               	bcf	status,0,c
  7215  00794E  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  7216  007950  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  7217  007952  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  7218  007954  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  7219  007956  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  7220  007958  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  7221  00795A  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  7222  00795C  3209               	rrcf	___lodiv@divisor^0,f,c
  7223  00795E  2E19               	decfsz	___lodiv@counter^0,f,c
  7224  007960  EF71  F03C         	goto	l3703
  7225  007964                     l815:
  7226  007964  FFFF               	dw	65535	; assembler added errata NOP
  7227  007966  C011  F001         	movff	___lodiv@quotient,?___lodiv
  7228  00796A  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  7229  00796E  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  7230  007972  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  7231  007976  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  7232  00797A  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  7233  00797E  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  7234  007982  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  7235  007986  0012               	return		;funcret
  7236  007988  FFFF               	dw	65535	; errata NOP
  7237  00798A                     __end_of___lodiv:
  7238                           	callstack 0
  7239                           
  7240 ;; *************** function _strncmp *****************
  7241 ;; Defined at:
  7242 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  7243 ;; Parameters:    Size  Location     Type
  7244 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  7245 ;;		 -> STR_10(3), 
  7246 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  7247 ;;		 -> STR_107(3), STR_103(3), STR_98(3), STR_94(3), 
  7248 ;;		 -> STR_89(4), STR_85(4), STR_80(3), STR_75(3), 
  7249 ;;		 -> STR_70(4), STR_65(3), STR_60(3), STR_55(4), 
  7250 ;;		 -> STR_50(3), STR_45(3), STR_40(4), STR_35(3), 
  7251 ;;		 -> STR_31(3), STR_26(3), STR_22(3), STR_17(4), 
  7252 ;;		 -> STR_13(4), 
  7253 ;;  n               2    4[COMRAM] unsigned int 
  7254 ;; Auto vars:     Size  Location     Type
  7255 ;;  r               2    9[COMRAM] PTR const unsigned char 
  7256 ;;		 -> STR_107(3), STR_103(3), STR_98(3), STR_94(3), 
  7257 ;;		 -> STR_89(4), STR_85(4), STR_80(3), STR_75(3), 
  7258 ;;		 -> STR_70(4), STR_65(3), STR_60(3), STR_55(4), 
  7259 ;;		 -> STR_50(3), STR_45(3), STR_40(4), STR_35(3), 
  7260 ;;		 -> STR_31(3), STR_26(3), STR_22(3), STR_17(4), 
  7261 ;;		 -> STR_13(4), 
  7262 ;;  l               2    7[COMRAM] PTR const unsigned char 
  7263 ;;		 -> STR_10(3), 
  7264 ;; Return value:  Size  Location     Type
  7265 ;;                  2    0[COMRAM] int 
  7266 ;; Registers used:
  7267 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  7268 ;; Tracked objects:
  7269 ;;		On entry : 0/0
  7270 ;;		On exit  : 0/0
  7271 ;;		Unchanged: 0/0
  7272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7273 ;;      Params:         6       0       0       0       0       0       0
  7274 ;;      Locals:         4       0       0       0       0       0       0
  7275 ;;      Temps:          1       0       0       0       0       0       0
  7276 ;;      Totals:        11       0       0       0       0       0       0
  7277 ;;Total ram usage:       11 bytes
  7278 ;; Hardware stack levels used:    1
  7279 ;; Hardware stack levels required when called:    1
  7280 ;; This function calls:
  7281 ;;		Nothing
  7282 ;; This function is called by:
  7283 ;;		_vfpfcnvrt
  7284 ;; This function uses a non-reentrant model
  7285 ;;
  7286                           
  7287                           	psect	text17
  7288  007778                     __ptext17:
  7289                           	callstack 0
  7290  007778                     _strncmp:
  7291                           	callstack 0
  7292  007778  FFFF               	dw	65535	; assembler added errata NOP
  7293  00777A  C001  F008         	movff	strncmp@_l,strncmp@l
  7294  00777E  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  7295  007782  C003  F00A         	movff	strncmp@_r,strncmp@r
  7296  007786  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  7297  00778A  0605               	decf	strncmp@n^0,f,c
  7298  00778C  A0D8               	btfss	status,0,c
  7299  00778E  0606               	decf	(strncmp@n+1)^0,f,c
  7300  007790  2805               	incf	strncmp@n^0,w,c
  7301  007792  E106               	bnz	u4681
  7302  007794  2806               	incf	(strncmp@n+1)^0,w,c
  7303  007796  A4D8               	btfss	status,2,c
  7304  007798  EFD0  F03B         	goto	u4681
  7305  00779C  EFD3  F03B         	goto	u4680
  7306  0077A0                     u4681:
  7307  0077A0  FFFF               	dw	65535	; assembler added errata NOP
  7308  0077A2  EFE2  F03B         	goto	l4105
  7309  0077A6                     u4680:
  7310  0077A6  FFFF               	dw	65535	; assembler added errata NOP
  7311  0077A8  0E00               	movlw	0
  7312  0077AA  6E02               	movwf	(?_strncmp+1)^0,c
  7313  0077AC  0E00               	movlw	0
  7314  0077AE  6E01               	movwf	?_strncmp^0,c
  7315  0077B0  EF3D  F03C         	goto	l1427
  7316  0077B4                     l4103:
  7317  0077B4  FFFF               	dw	65535	; assembler added errata NOP
  7318  0077B6  4A08               	infsnz	strncmp@l^0,f,c
  7319  0077B8  2A09               	incf	(strncmp@l+1)^0,f,c
  7320  0077BA  4A0A               	infsnz	strncmp@r^0,f,c
  7321  0077BC  2A0B               	incf	(strncmp@r+1)^0,f,c
  7322  0077BE  0605               	decf	strncmp@n^0,f,c
  7323  0077C0  A0D8               	btfss	status,0,c
  7324  0077C2  0606               	decf	(strncmp@n+1)^0,f,c
  7325  0077C4                     l4105:
  7326  0077C4  FFFF               	dw	65535	; assembler added errata NOP
  7327  0077C6  C008  FFF6         	movff	strncmp@l,tblptrl
  7328  0077CA  C009  FFF7         	movff	strncmp@l+1,tblptrh
  7329  0077CE                     	if	0	;tblptru may be non-zero
  7330  0077CE                     	endif
  7331  0077CE                     	if	0	;tblptru may be non-zero
  7332  0077CE                     	endif
  7333  0077CE  0008               	tblrd		*
  7334  0077D0  FFFF               	dw	65535	; errata NOP
  7335  0077D2  50F5               	movf	tablat,w,c
  7336  0077D4  0900               	iorlw	0
  7337  0077D6  B4D8               	btfsc	status,2,c
  7338  0077D8  EFF0  F03B         	goto	u4691
  7339  0077DC  EFF3  F03B         	goto	u4690
  7340  0077E0                     u4691:
  7341  0077E0  FFFF               	dw	65535	; assembler added errata NOP
  7342  0077E2  EF28  F03C         	goto	l4113
  7343  0077E6                     u4690:
  7344  0077E6  FFFF               	dw	65535	; assembler added errata NOP
  7345  0077E8  C00A  FFF6         	movff	strncmp@r,tblptrl
  7346  0077EC  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7347  0077F0                     	if	0	;tblptru may be non-zero
  7348  0077F0                     	endif
  7349  0077F0                     	if	0	;tblptru may be non-zero
  7350  0077F0                     	endif
  7351  0077F0  0008               	tblrd		*
  7352  0077F2  FFFF               	dw	65535	; errata NOP
  7353  0077F4  50F5               	movf	tablat,w,c
  7354  0077F6  0900               	iorlw	0
  7355  0077F8  B4D8               	btfsc	status,2,c
  7356  0077FA  EF01  F03C         	goto	u4701
  7357  0077FE  EF04  F03C         	goto	u4700
  7358  007802                     u4701:
  7359  007802  FFFF               	dw	65535	; assembler added errata NOP
  7360  007804  EF28  F03C         	goto	l4113
  7361  007808                     u4700:
  7362  007808  FFFF               	dw	65535	; assembler added errata NOP
  7363  00780A  5005               	movf	strncmp@n^0,w,c
  7364  00780C  1006               	iorwf	(strncmp@n+1)^0,w,c
  7365  00780E  B4D8               	btfsc	status,2,c
  7366  007810  EF0C  F03C         	goto	u4711
  7367  007814  EF0F  F03C         	goto	u4710
  7368  007818                     u4711:
  7369  007818  FFFF               	dw	65535	; assembler added errata NOP
  7370  00781A  EF28  F03C         	goto	l4113
  7371  00781E                     u4710:
  7372  00781E  FFFF               	dw	65535	; assembler added errata NOP
  7373  007820  C008  FFF6         	movff	strncmp@l,tblptrl
  7374  007824  C009  FFF7         	movff	strncmp@l+1,tblptrh
  7375  007828                     	if	0	;tblptru may be non-zero
  7376  007828                     	endif
  7377  007828                     	if	0	;tblptru may be non-zero
  7378  007828                     	endif
  7379  007828  0008               	tblrd		*
  7380  00782A  FFFF               	dw	65535	; errata NOP
  7381  00782C  CFF5 F007          	movff	tablat,??_strncmp
  7382  007830  C00A  FFF6         	movff	strncmp@r,tblptrl
  7383  007834  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7384  007838                     	if	0	;tblptru may be non-zero
  7385  007838                     	endif
  7386  007838                     	if	0	;tblptru may be non-zero
  7387  007838                     	endif
  7388  007838  0008               	tblrd		*
  7389  00783A  FFFF               	dw	65535	; errata NOP
  7390  00783C  50F5               	movf	tablat,w,c
  7391  00783E  1807               	xorwf	??_strncmp^0,w,c
  7392  007840  B4D8               	btfsc	status,2,c
  7393  007842  EF25  F03C         	goto	u4721
  7394  007846  EF28  F03C         	goto	u4720
  7395  00784A                     u4721:
  7396  00784A  FFFF               	dw	65535	; assembler added errata NOP
  7397  00784C  EFDA  F03B         	goto	l4103
  7398  007850                     u4720:
  7399  007850                     l4113:
  7400  007850  FFFF               	dw	65535	; assembler added errata NOP
  7401  007852  C008  FFF6         	movff	strncmp@l,tblptrl
  7402  007856  C009  FFF7         	movff	strncmp@l+1,tblptrh
  7403  00785A                     	if	0	;tblptru may be non-zero
  7404  00785A                     	endif
  7405  00785A                     	if	0	;tblptru may be non-zero
  7406  00785A                     	endif
  7407  00785A  0008               	tblrd		*
  7408  00785C  FFFF               	dw	65535	; errata NOP
  7409  00785E  CFF5 F007          	movff	tablat,??_strncmp
  7410  007862  C00A  FFF6         	movff	strncmp@r,tblptrl
  7411  007866  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7412  00786A                     	if	0	;tblptru may be non-zero
  7413  00786A                     	endif
  7414  00786A                     	if	0	;tblptru may be non-zero
  7415  00786A                     	endif
  7416  00786A  0008               	tblrd		*
  7417  00786C  FFFF               	dw	65535	; errata NOP
  7418  00786E  50F5               	movf	tablat,w,c
  7419  007870  5C07               	subwf	??_strncmp^0,w,c
  7420  007872  6E01               	movwf	?_strncmp^0,c
  7421  007874  6A02               	clrf	(?_strncmp+1)^0,c
  7422  007876  A0D8               	btfss	status,0,c
  7423  007878  0602               	decf	(?_strncmp+1)^0,f,c
  7424  00787A                     l1427:
  7425  00787A  FFFF               	dw	65535	; assembler added errata NOP
  7426  00787C  0012               	return		;funcret
  7427  00787E  FFFF               	dw	65535	; errata NOP
  7428  007880                     __end_of_strncmp:
  7429                           	callstack 0
  7430                           
  7431 ;; *************** function _stoa *****************
  7432 ;; Defined at:
  7433 ;;		line 546 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7434 ;; Parameters:    Size  Location     Type
  7435 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  7436 ;;		 -> vsnprintf@f(6), 
  7437 ;;  s               2   11[COMRAM] PTR unsigned char 
  7438 ;;		 -> ?_snprintf(2), STR_8(50), STR_7(9), STR_6(7), 
  7439 ;;		 -> STR_5(9), STR_4(39), STR_3(9), STR_2(64), 
  7440 ;;		 -> STR_1(49), 
  7441 ;; Auto vars:     Size  Location     Type
  7442 ;;  nuls            7   14[COMRAM] unsigned char [7]
  7443 ;;  l               2   29[COMRAM] int 
  7444 ;;  p               2   27[COMRAM] int 
  7445 ;;  cp              2   25[COMRAM] PTR unsigned char 
  7446 ;;		 -> stoa@nuls(7), ?_snprintf(2), STR_8(50), STR_7(9), 
  7447 ;;		 -> STR_6(7), STR_5(9), STR_4(39), STR_3(9), 
  7448 ;;		 -> STR_2(64), STR_1(49), 
  7449 ;;  w               2   23[COMRAM] int 
  7450 ;;  i               2   21[COMRAM] int 
  7451 ;; Return value:  Size  Location     Type
  7452 ;;                  2    9[COMRAM] int 
  7453 ;; Registers used:
  7454 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7455 ;; Tracked objects:
  7456 ;;		On entry : 0/0
  7457 ;;		On exit  : 0/0
  7458 ;;		Unchanged: 0/0
  7459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7460 ;;      Params:         4       0       0       0       0       0       0
  7461 ;;      Locals:        17       0       0       0       0       0       0
  7462 ;;      Temps:          1       0       0       0       0       0       0
  7463 ;;      Totals:        22       0       0       0       0       0       0
  7464 ;;Total ram usage:       22 bytes
  7465 ;; Hardware stack levels used:    1
  7466 ;; Hardware stack levels required when called:    3
  7467 ;; This function calls:
  7468 ;;		_fputc
  7469 ;;		_strlen
  7470 ;; This function is called by:
  7471 ;;		_vfpfcnvrt
  7472 ;; This function uses a non-reentrant model
  7473 ;;
  7474                           
  7475                           	psect	text18
  7476  003A38                     __ptext18:
  7477                           	callstack 0
  7478  003A38                     _stoa:
  7479                           	callstack 0
  7480  003A38  FFFF               	dw	65535	; assembler added errata NOP
  7481  003A3A                     
  7482                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 546: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 547: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 548:  
      +                             char *cp, nuls[] = "(null)";
  7483  003A3A  EE20  F0DE         	lfsr	2,stoa@F1152
  7484  003A3E  EE10  F00F         	lfsr	1,stoa@nuls
  7485  003A42  0E06               	movlw	6
  7486  003A44                     u4271:
  7487  003A44  CFDB FFE3          	movff	plusw2,plusw1
  7488  003A48  06E8               	decf	wreg,f,c
  7489  003A4A  E2FC               	bc	u4271
  7490  003A4C                     
  7491                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 549:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 552:     c
      +                          p = s;
  7492  003A4C  C00C  F01A         	movff	stoa@s,stoa@cp
  7493  003A50  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  7494  003A54                     
  7495                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 553:     if (!cp)
      +                           {
  7496  003A54  501A               	movf	stoa@cp^0,w,c
  7497  003A56  101B               	iorwf	(stoa@cp+1)^0,w,c
  7498  003A58  A4D8               	btfss	status,2,c
  7499  003A5A  EF31  F01D         	goto	u4281
  7500  003A5E  EF34  F01D         	goto	u4280
  7501  003A62                     u4281:
  7502  003A62  FFFF               	dw	65535	; assembler added errata NOP
  7503  003A64  EF39  F01D         	goto	l3919
  7504  003A68                     u4280:
  7505  003A68  FFFF               	dw	65535	; assembler added errata NOP
  7506  003A6A                     
  7507                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 554:         cp =
      +                           nuls;
  7508  003A6A  0E0F               	movlw	low stoa@nuls
  7509  003A6C  6E1A               	movwf	stoa@cp^0,c
  7510  003A6E  0E00               	movlw	high stoa@nuls
  7511  003A70  6E1B               	movwf	(stoa@cp+1)^0,c
  7512  003A72                     l3919:
  7513  003A72  FFFF               	dw	65535	; assembler added errata NOP
  7514                           
  7515                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 558:     l = strl
      +                          en(cp);
  7516  003A74  C01A  F001         	movff	stoa@cp,strlen@s
  7517  003A78  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  7518  003A7C  EC4E  F035         	call	_strlen	;wreg free
  7519  003A80  C001  F01E         	movff	?_strlen,stoa@l
  7520  003A84  C002  F01F         	movff	?_strlen+1,stoa@l+1
  7521  003A88                     
  7522                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 559:     p = prec
      +                          ;
  7523  003A88  C088  F01C         	movff	_prec,stoa@p
  7524  003A8C  C089  F01D         	movff	_prec+1,stoa@p+1
  7525  003A90                     
  7526                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 560:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  7527  003A90  BE1D               	btfsc	(stoa@p+1)^0,7,c
  7528  003A92  EF4D  F01D         	goto	u4291
  7529  003A96  EF50  F01D         	goto	u4290
  7530  003A9A                     u4291:
  7531  003A9A  FFFF               	dw	65535	; assembler added errata NOP
  7532  003A9C  EF69  F01D         	goto	l1194
  7533  003AA0                     u4290:
  7534  003AA0  FFFF               	dw	65535	; assembler added errata NOP
  7535  003AA2  501E               	movf	stoa@l^0,w,c
  7536  003AA4  5C1C               	subwf	stoa@p^0,w,c
  7537  003AA6  501D               	movf	(stoa@p+1)^0,w,c
  7538  003AA8  0A80               	xorlw	128
  7539  003AAA  6E0E               	movwf	??_stoa^0,c
  7540  003AAC  501F               	movf	(stoa@l+1)^0,w,c
  7541  003AAE  0A80               	xorlw	128
  7542  003AB0  580E               	subwfb	??_stoa^0,w,c
  7543  003AB2  A0D8               	btfss	status,0,c
  7544  003AB4  EF5E  F01D         	goto	u4301
  7545  003AB8  EF61  F01D         	goto	u4300
  7546  003ABC                     u4301:
  7547  003ABC  FFFF               	dw	65535	; assembler added errata NOP
  7548  003ABE  EF64  F01D         	goto	l1192
  7549  003AC2                     u4300:
  7550  003AC2  FFFF               	dw	65535	; assembler added errata NOP
  7551  003AC4  EF69  F01D         	goto	l1194
  7552  003AC8                     l1192:
  7553  003AC8  FFFF               	dw	65535	; assembler added errata NOP
  7554  003ACA  C01C  F01E         	movff	stoa@p,stoa@l
  7555  003ACE  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  7556  003AD2                     l1194:
  7557  003AD2  FFFF               	dw	65535	; assembler added errata NOP
  7558                           
  7559                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 561:     p = l;
  7560  003AD4  C01E  F01C         	movff	stoa@l,stoa@p
  7561  003AD8  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  7562                           
  7563                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 562:     w = widt
      +                          h;
  7564  003ADC  C086  F018         	movff	_width,stoa@w
  7565  003AE0  C087  F019         	movff	_width+1,stoa@w+1
  7566                           
  7567                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 565:     if (!(fl
      +                          ags & (1 << 0))) {
  7568  003AE4  0100               	movlb	0	; () banked
  7569  003AE6  B18A               	btfsc	_flags& (0+255),0,b
  7570  003AE8  EF78  F01D         	goto	u4311
  7571  003AEC  EF7B  F01D         	goto	u4310
  7572  003AF0                     u4311:
  7573  003AF0  FFFF               	dw	65535	; assembler added errata NOP
  7574  003AF2  EF9C  F01D         	goto	l3935
  7575  003AF6                     u4310:
  7576  003AF6  FFFF               	dw	65535	; assembler added errata NOP
  7577  003AF8  EF8B  F01D         	goto	l3933
  7578  003AFC                     l3929:
  7579  003AFC  FFFF               	dw	65535	; assembler added errata NOP
  7580                           
  7581                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 567:             
      +                          fputc(' ', fp);
  7582  003AFE  0E00               	movlw	0
  7583  003B00  6E02               	movwf	(fputc@c+1)^0,c
  7584  003B02  0E20               	movlw	32
  7585  003B04  6E01               	movwf	fputc@c^0,c
  7586  003B06  C00A  F003         	movff	stoa@fp,fputc@fp
  7587  003B0A  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  7588  003B0E  EC6D  F039         	call	_fputc	;wreg free
  7589  003B12                     
  7590                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 568:             
      +                          ++l;
  7591  003B12  4A1E               	infsnz	stoa@l^0,f,c
  7592  003B14  2A1F               	incf	(stoa@l+1)^0,f,c
  7593  003B16                     l3933:
  7594  003B16  FFFF               	dw	65535	; assembler added errata NOP
  7595                           
  7596                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 566:         whil
      +                          e (l < w) {
  7597  003B18  5018               	movf	stoa@w^0,w,c
  7598  003B1A  5C1E               	subwf	stoa@l^0,w,c
  7599  003B1C  501F               	movf	(stoa@l+1)^0,w,c
  7600  003B1E  0A80               	xorlw	128
  7601  003B20  6E0E               	movwf	??_stoa^0,c
  7602  003B22  5019               	movf	(stoa@w+1)^0,w,c
  7603  003B24  0A80               	xorlw	128
  7604  003B26  580E               	subwfb	??_stoa^0,w,c
  7605  003B28  A0D8               	btfss	status,0,c
  7606  003B2A  EF99  F01D         	goto	u4321
  7607  003B2E  EF9C  F01D         	goto	u4320
  7608  003B32                     u4321:
  7609  003B32  FFFF               	dw	65535	; assembler added errata NOP
  7610  003B34  EF7E  F01D         	goto	l3929
  7611  003B38                     u4320:
  7612  003B38                     l3935:
  7613  003B38  FFFF               	dw	65535	; assembler added errata NOP
  7614                           
  7615                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 573:     i = 0;
  7616  003B3A  0E00               	movlw	0
  7617  003B3C  6E17               	movwf	(stoa@i+1)^0,c
  7618  003B3E  0E00               	movlw	0
  7619  003B40  6E16               	movwf	stoa@i^0,c
  7620                           
  7621                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 574:     while (i
      +                           < p) {
  7622  003B42  EFC3  F01D         	goto	l3943
  7623  003B46                     l3937:
  7624  003B46  FFFF               	dw	65535	; assembler added errata NOP
  7625                           
  7626                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 575:         fput
      +                          c(*cp, fp);
  7627  003B48  C01A  FFF6         	movff	stoa@cp,tblptrl
  7628  003B4C  C01B  FFF7         	movff	stoa@cp+1,tblptrh
  7629  003B50  6AF8               	clrf	tblptru,c
  7630  003B52  0E05               	movlw	(high __ramtop+-1)
  7631  003B54  64F7               	cpfsgt	tblptrh,c
  7632  003B56  D004               	bra	u4337
  7633  003B58  0008               	tblrd		*
  7634  003B5A  FFFF               	dw	65535	; errata NOP
  7635  003B5C  50F5               	movf	tablat,w,c
  7636  003B5E  D005               	bra	u4330
  7637  003B60                     u4337:
  7638  003B60  CFF6 FFE1          	movff	tblptrl,fsr1l
  7639  003B64  CFF7 FFE2          	movff	tblptrh,fsr1h
  7640  003B68  50E7               	movf	indf1,w,c
  7641  003B6A                     u4330:
  7642  003B6A  6E0E               	movwf	??_stoa^0,c
  7643  003B6C  500E               	movf	??_stoa^0,w,c
  7644  003B6E  6E01               	movwf	fputc@c^0,c
  7645  003B70  6A02               	clrf	(fputc@c+1)^0,c
  7646  003B72  C00A  F003         	movff	stoa@fp,fputc@fp
  7647  003B76  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  7648  003B7A  EC6D  F039         	call	_fputc	;wreg free
  7649  003B7E                     
  7650                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 576:         ++cp
      +                          ;
  7651  003B7E  4A1A               	infsnz	stoa@cp^0,f,c
  7652  003B80  2A1B               	incf	(stoa@cp+1)^0,f,c
  7653  003B82                     
  7654                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 577:         ++i;
  7655  003B82  4A16               	infsnz	stoa@i^0,f,c
  7656  003B84  2A17               	incf	(stoa@i+1)^0,f,c
  7657  003B86                     l3943:
  7658  003B86  FFFF               	dw	65535	; assembler added errata NOP
  7659                           
  7660                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 574:     while (i
      +                           < p) {
  7661  003B88  501C               	movf	stoa@p^0,w,c
  7662  003B8A  5C16               	subwf	stoa@i^0,w,c
  7663  003B8C  5017               	movf	(stoa@i+1)^0,w,c
  7664  003B8E  0A80               	xorlw	128
  7665  003B90  6E0E               	movwf	??_stoa^0,c
  7666  003B92  501D               	movf	(stoa@p+1)^0,w,c
  7667  003B94  0A80               	xorlw	128
  7668  003B96  580E               	subwfb	??_stoa^0,w,c
  7669  003B98  A0D8               	btfss	status,0,c
  7670  003B9A  EFD1  F01D         	goto	u4341
  7671  003B9E  EFD4  F01D         	goto	u4340
  7672  003BA2                     u4341:
  7673  003BA2  FFFF               	dw	65535	; assembler added errata NOP
  7674  003BA4  EFA3  F01D         	goto	l3937
  7675  003BA8                     u4340:
  7676  003BA8  FFFF               	dw	65535	; assembler added errata NOP
  7677  003BAA                     
  7678                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 581:     if (flag
      +                          s & (1 << 0)) {
  7679  003BAA  0100               	movlb	0	; () banked
  7680  003BAC  A18A               	btfss	_flags& (0+255),0,b
  7681  003BAE  EFDB  F01D         	goto	u4351
  7682  003BB2  EFDE  F01D         	goto	u4350
  7683  003BB6                     u4351:
  7684  003BB6  FFFF               	dw	65535	; assembler added errata NOP
  7685  003BB8  EFFF  F01D         	goto	l1204
  7686  003BBC                     u4350:
  7687  003BBC  FFFF               	dw	65535	; assembler added errata NOP
  7688  003BBE  EFEE  F01D         	goto	l3951
  7689  003BC2                     l3947:
  7690  003BC2  FFFF               	dw	65535	; assembler added errata NOP
  7691                           
  7692                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 583:             
      +                          fputc(' ', fp);
  7693  003BC4  0E00               	movlw	0
  7694  003BC6  6E02               	movwf	(fputc@c+1)^0,c
  7695  003BC8  0E20               	movlw	32
  7696  003BCA  6E01               	movwf	fputc@c^0,c
  7697  003BCC  C00A  F003         	movff	stoa@fp,fputc@fp
  7698  003BD0  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  7699  003BD4  EC6D  F039         	call	_fputc	;wreg free
  7700  003BD8                     
  7701                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 584:             
      +                          ++l;
  7702  003BD8  4A1E               	infsnz	stoa@l^0,f,c
  7703  003BDA  2A1F               	incf	(stoa@l+1)^0,f,c
  7704  003BDC                     l3951:
  7705  003BDC  FFFF               	dw	65535	; assembler added errata NOP
  7706                           
  7707                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 582:         whil
      +                          e (l < w) {
  7708  003BDE  5018               	movf	stoa@w^0,w,c
  7709  003BE0  5C1E               	subwf	stoa@l^0,w,c
  7710  003BE2  501F               	movf	(stoa@l+1)^0,w,c
  7711  003BE4  0A80               	xorlw	128
  7712  003BE6  6E0E               	movwf	??_stoa^0,c
  7713  003BE8  5019               	movf	(stoa@w+1)^0,w,c
  7714  003BEA  0A80               	xorlw	128
  7715  003BEC  580E               	subwfb	??_stoa^0,w,c
  7716  003BEE  A0D8               	btfss	status,0,c
  7717  003BF0  EFFC  F01D         	goto	u4361
  7718  003BF4  EFFF  F01D         	goto	u4360
  7719  003BF8                     u4361:
  7720  003BF8  FFFF               	dw	65535	; assembler added errata NOP
  7721  003BFA  EFE1  F01D         	goto	l3947
  7722  003BFE                     u4360:
  7723  003BFE                     l1204:
  7724  003BFE  FFFF               	dw	65535	; assembler added errata NOP
  7725                           
  7726                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 588:     return l
      +                          ;
  7727  003C00  C01E  F00A         	movff	stoa@l,?_stoa
  7728  003C04  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  7729  003C08  0012               	return		;funcret
  7730  003C0A  FFFF               	dw	65535	; errata NOP
  7731  003C0C                     __end_of_stoa:
  7732                           	callstack 0
  7733                           
  7734 ;; *************** function _otoa *****************
  7735 ;; Defined at:
  7736 ;;		line 507 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7737 ;; Parameters:    Size  Location     Type
  7738 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7739 ;;		 -> vsnprintf@f(6), 
  7740 ;;  d               8   29[COMRAM] unsigned long long 
  7741 ;; Auto vars:     Size  Location     Type
  7742 ;;  n               8   51[COMRAM] unsigned long long 
  7743 ;;  i               2   59[COMRAM] int 
  7744 ;;  w               2   49[COMRAM] int 
  7745 ;;  t               2   47[COMRAM] int 
  7746 ;;  p               2   45[COMRAM] int 
  7747 ;; Return value:  Size  Location     Type
  7748 ;;                  2   27[COMRAM] int 
  7749 ;; Registers used:
  7750 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7751 ;; Tracked objects:
  7752 ;;		On entry : 0/0
  7753 ;;		On exit  : 0/0
  7754 ;;		Unchanged: 0/0
  7755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7756 ;;      Params:        10       0       0       0       0       0       0
  7757 ;;      Locals:        16       0       0       0       0       0       0
  7758 ;;      Temps:          8       0       0       0       0       0       0
  7759 ;;      Totals:        34       0       0       0       0       0       0
  7760 ;;Total ram usage:       34 bytes
  7761 ;; Hardware stack levels used:    1
  7762 ;; Hardware stack levels required when called:    5
  7763 ;; This function calls:
  7764 ;;		_pad
  7765 ;; This function is called by:
  7766 ;;		_vfpfcnvrt
  7767 ;; This function uses a non-reentrant model
  7768 ;;
  7769                           
  7770                           	psect	text19
  7771  00361A                     __ptext19:
  7772                           	callstack 0
  7773  00361A                     _otoa:
  7774                           	callstack 0
  7775  00361A  FFFF               	dw	65535	; assembler added errata NOP
  7776  00361C                     
  7777                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 507: static int o
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99
      +                          \common\doprnt.c: 508: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\dop
      +                          rnt.c: 509:     int i, p, t, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\com
      +                          mon\doprnt.c: 510:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\so
      +                          urces\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  7778  00361C  0100               	movlb	0	; () banked
  7779  00361E  BF89               	btfsc	(_prec+1)& (0+255),7,b
  7780  003620  EF14  F01B         	goto	u4171
  7781  003624  EF17  F01B         	goto	u4170
  7782  003628                     u4171:
  7783  003628  FFFF               	dw	65535	; assembler added errata NOP
  7784  00362A  EF19  F01B         	goto	l3867
  7785  00362E                     u4170:
  7786  00362E  FFFF               	dw	65535	; assembler added errata NOP
  7787  003630                     
  7788                           ; BSR set to: 0
  7789                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 514:         flag
      +                          s &= ~(1 << 1);
  7790  003630  938A               	bcf	_flags& (0+255),1,b
  7791  003632                     l3867:
  7792  003632  FFFF               	dw	65535	; assembler added errata NOP
  7793                           
  7794                           ; BSR set to: 0
  7795                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 516:     p = (0 <
      +                           prec) ? prec : 1;
  7796  003634  BF89               	btfsc	(_prec+1)& (0+255),7,b
  7797  003636  EF28  F01B         	goto	u4180
  7798  00363A  5189               	movf	(_prec+1)& (0+255),w,b
  7799  00363C  E106               	bnz	u4181
  7800  00363E  0588               	decf	_prec& (0+255),w,b
  7801  003640  B0D8               	btfsc	status,0,c
  7802  003642  EF25  F01B         	goto	u4181
  7803  003646  EF28  F01B         	goto	u4180
  7804  00364A                     u4181:
  7805  00364A  FFFF               	dw	65535	; assembler added errata NOP
  7806  00364C  EF2F  F01B         	goto	l1174
  7807  003650                     u4180:
  7808  003650  FFFF               	dw	65535	; assembler added errata NOP
  7809  003652                     
  7810                           ; BSR set to: 0
  7811  003652  0E00               	movlw	0
  7812  003654  6E2F               	movwf	(otoa@p+1)^0,c
  7813  003656  0E01               	movlw	1
  7814  003658  6E2E               	movwf	otoa@p^0,c
  7815  00365A  EF34  F01B         	goto	l1176
  7816  00365E                     l1174:
  7817  00365E  FFFF               	dw	65535	; assembler added errata NOP
  7818                           
  7819                           ; BSR set to: 0
  7820  003660  C088  F02E         	movff	_prec,otoa@p
  7821  003664  C089  F02F         	movff	_prec+1,otoa@p+1
  7822  003668                     l1176:
  7823  003668  FFFF               	dw	65535	; assembler added errata NOP
  7824                           
  7825                           ; BSR set to: 0
  7826                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 517:     w = widt
      +                          h;
  7827  00366A  C086  F032         	movff	_width,otoa@w
  7828  00366E  C087  F033         	movff	_width+1,otoa@w+1
  7829                           
  7830                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 520:     n = d;
  7831  003672  C01E  F034         	movff	otoa@d,otoa@n
  7832  003676  C01F  F035         	movff	otoa@d+1,otoa@n+1
  7833  00367A  C020  F036         	movff	otoa@d+2,otoa@n+2
  7834  00367E  C021  F037         	movff	otoa@d+3,otoa@n+3
  7835  003682  C022  F038         	movff	otoa@d+4,otoa@n+4
  7836  003686  C023  F039         	movff	otoa@d+5,otoa@n+5
  7837  00368A  C024  F03A         	movff	otoa@d+6,otoa@n+6
  7838  00368E  C025  F03B         	movff	otoa@d+7,otoa@n+7
  7839  003692                     
  7840                           ; BSR set to: 0
  7841                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 521:     i = size
      +                          of(dbuf) - 1;
  7842  003692  0E00               	movlw	0
  7843  003694  6E3D               	movwf	(otoa@i+1)^0,c
  7844  003696  0E1F               	movlw	31
  7845  003698  6E3C               	movwf	otoa@i^0,c
  7846  00369A                     
  7847                           ; BSR set to: 0
  7848                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 522:     dbuf[i] 
      +                          = '\0';
  7849  00369A  0E00               	movlw	0
  7850  00369C  6FB7               	movwf	(_dbuf+31)& (0+255),b
  7851  00369E                     
  7852                           ; BSR set to: 0
  7853                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 523:     t = 0;
  7854  00369E  0E00               	movlw	0
  7855  0036A0  6E31               	movwf	(otoa@t+1)^0,c
  7856  0036A2  0E00               	movlw	0
  7857  0036A4  6E30               	movwf	otoa@t^0,c
  7858                           
  7859                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 524:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7860  0036A6  EF9D  F01B         	goto	l3889
  7861  0036AA                     l3877:
  7862  0036AA  FFFF               	dw	65535	; assembler added errata NOP
  7863                           
  7864                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 525:         --i;
  7865  0036AC  063C               	decf	otoa@i^0,f,c
  7866  0036AE  A0D8               	btfss	status,0,c
  7867  0036B0  063D               	decf	(otoa@i+1)^0,f,c
  7868  0036B2                     
  7869                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 526:         t = 
      +                          n & 07;
  7870  0036B2  0E07               	movlw	7
  7871  0036B4  1434               	andwf	otoa@n^0,w,c
  7872  0036B6  6E30               	movwf	otoa@t^0,c
  7873  0036B8  6A31               	clrf	(otoa@t+1)^0,c
  7874  0036BA                     
  7875                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 527:         dbuf
      +                          [i] = '0' + t;
  7876  0036BA  0E98               	movlw	low _dbuf
  7877  0036BC  243C               	addwf	otoa@i^0,w,c
  7878  0036BE  6ED9               	movwf	fsr2l,c
  7879  0036C0  0E00               	movlw	high _dbuf
  7880  0036C2  203D               	addwfc	(otoa@i+1)^0,w,c
  7881  0036C4  6EDA               	movwf	fsr2h,c
  7882  0036C6  5030               	movf	otoa@t^0,w,c
  7883  0036C8  0F30               	addlw	48
  7884  0036CA  6EDF               	movwf	indf2,c
  7885  0036CC                     
  7886                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 528:         --p;
  7887  0036CC  062E               	decf	otoa@p^0,f,c
  7888  0036CE  A0D8               	btfss	status,0,c
  7889  0036D0  062F               	decf	(otoa@p+1)^0,f,c
  7890  0036D2                     
  7891                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 529:         --w;
  7892  0036D2  0632               	decf	otoa@w^0,f,c
  7893  0036D4  A0D8               	btfss	status,0,c
  7894  0036D6  0633               	decf	(otoa@w+1)^0,f,c
  7895  0036D8                     
  7896                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 530:         n = 
      +                          n >> 3;
  7897  0036D8  C034  F026         	movff	otoa@n,??_otoa
  7898  0036DC  C035  F027         	movff	otoa@n+1,??_otoa+1
  7899  0036E0  C036  F028         	movff	otoa@n+2,??_otoa+2
  7900  0036E4  C037  F029         	movff	otoa@n+3,??_otoa+3
  7901  0036E8  C038  F02A         	movff	otoa@n+4,??_otoa+4
  7902  0036EC  C039  F02B         	movff	otoa@n+5,??_otoa+5
  7903  0036F0  C03A  F02C         	movff	otoa@n+6,??_otoa+6
  7904  0036F4  C03B  F02D         	movff	otoa@n+7,??_otoa+7
  7905  0036F8  0E04               	movlw	4
  7906  0036FA  EF89  F01B         	goto	u4190
  7907  0036FE                     u4195:
  7908  0036FE  FFFF               	dw	65535	; assembler added errata NOP
  7909  003700  90D8               	bcf	status,0,c
  7910  003702  322D               	rrcf	(??_otoa+7)^0,f,c
  7911  003704  322C               	rrcf	(??_otoa+6)^0,f,c
  7912  003706  322B               	rrcf	(??_otoa+5)^0,f,c
  7913  003708  322A               	rrcf	(??_otoa+4)^0,f,c
  7914  00370A  3229               	rrcf	(??_otoa+3)^0,f,c
  7915  00370C  3228               	rrcf	(??_otoa+2)^0,f,c
  7916  00370E  3227               	rrcf	(??_otoa+1)^0,f,c
  7917  003710  3226               	rrcf	??_otoa^0,f,c
  7918  003712                     u4190:
  7919  003712  FFFF               	dw	65535	; assembler added errata NOP
  7920  003714  2EE8               	decfsz	wreg,f,c
  7921  003716  EF7F  F01B         	goto	u4195
  7922  00371A  C026  F034         	movff	??_otoa,otoa@n
  7923  00371E  C027  F035         	movff	??_otoa+1,otoa@n+1
  7924  003722  C028  F036         	movff	??_otoa+2,otoa@n+2
  7925  003726  C029  F037         	movff	??_otoa+3,otoa@n+3
  7926  00372A  C02A  F038         	movff	??_otoa+4,otoa@n+4
  7927  00372E  C02B  F039         	movff	??_otoa+5,otoa@n+5
  7928  003732  C02C  F03A         	movff	??_otoa+6,otoa@n+6
  7929  003736  C02D  F03B         	movff	??_otoa+7,otoa@n+7
  7930  00373A                     l3889:
  7931  00373A  FFFF               	dw	65535	; assembler added errata NOP
  7932                           
  7933                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 524:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7934  00373C  BE3D               	btfsc	(otoa@i+1)^0,7,c
  7935  00373E  EFA9  F01B         	goto	u4201
  7936  003742  503D               	movf	(otoa@i+1)^0,w,c
  7937  003744  E109               	bnz	u4200
  7938  003746  043C               	decf	otoa@i^0,w,c
  7939  003748  A0D8               	btfss	status,0,c
  7940  00374A  EFA9  F01B         	goto	u4201
  7941  00374E  EFAC  F01B         	goto	u4200
  7942  003752                     u4201:
  7943  003752  FFFF               	dw	65535	; assembler added errata NOP
  7944  003754  EFE5  F01B         	goto	l1183
  7945  003758                     u4200:
  7946  003758  FFFF               	dw	65535	; assembler added errata NOP
  7947  00375A  5034               	movf	otoa@n^0,w,c
  7948  00375C  1035               	iorwf	(otoa@n+1)^0,w,c
  7949  00375E  1036               	iorwf	(otoa@n+2)^0,w,c
  7950  003760  1037               	iorwf	(otoa@n+3)^0,w,c
  7951  003762  1038               	iorwf	(otoa@n+4)^0,w,c
  7952  003764  1039               	iorwf	(otoa@n+5)^0,w,c
  7953  003766  103A               	iorwf	(otoa@n+6)^0,w,c
  7954  003768  103B               	iorwf	(otoa@n+7)^0,w,c
  7955  00376A  A4D8               	btfss	status,2,c
  7956  00376C  EFBA  F01B         	goto	u4211
  7957  003770  EFBD  F01B         	goto	u4210
  7958  003774                     u4211:
  7959  003774  FFFF               	dw	65535	; assembler added errata NOP
  7960  003776  EF55  F01B         	goto	l3877
  7961  00377A                     u4210:
  7962  00377A  FFFF               	dw	65535	; assembler added errata NOP
  7963  00377C  BE2F               	btfsc	(otoa@p+1)^0,7,c
  7964  00377E  EFCC  F01B         	goto	u4220
  7965  003782  502F               	movf	(otoa@p+1)^0,w,c
  7966  003784  E106               	bnz	u4221
  7967  003786  042E               	decf	otoa@p^0,w,c
  7968  003788  B0D8               	btfsc	status,0,c
  7969  00378A  EFC9  F01B         	goto	u4221
  7970  00378E  EFCC  F01B         	goto	u4220
  7971  003792                     u4221:
  7972  003792  FFFF               	dw	65535	; assembler added errata NOP
  7973  003794  EF55  F01B         	goto	l3877
  7974  003798                     u4220:
  7975  003798  FFFF               	dw	65535	; assembler added errata NOP
  7976  00379A  BE33               	btfsc	(otoa@w+1)^0,7,c
  7977  00379C  EFD8  F01B         	goto	u4231
  7978  0037A0  5033               	movf	(otoa@w+1)^0,w,c
  7979  0037A2  E109               	bnz	u4230
  7980  0037A4  0432               	decf	otoa@w^0,w,c
  7981  0037A6  A0D8               	btfss	status,0,c
  7982  0037A8  EFD8  F01B         	goto	u4231
  7983  0037AC  EFDB  F01B         	goto	u4230
  7984  0037B0                     u4231:
  7985  0037B0  FFFF               	dw	65535	; assembler added errata NOP
  7986  0037B2  EFE5  F01B         	goto	l1183
  7987  0037B6                     u4230:
  7988  0037B6  FFFF               	dw	65535	; assembler added errata NOP
  7989  0037B8  0100               	movlb	0	; () banked
  7990  0037BA  B38A               	btfsc	_flags& (0+255),1,b
  7991  0037BC  EFE2  F01B         	goto	u4241
  7992  0037C0  EFE5  F01B         	goto	u4240
  7993  0037C4                     u4241:
  7994  0037C4  FFFF               	dw	65535	; assembler added errata NOP
  7995  0037C6  EF55  F01B         	goto	l3877
  7996  0037CA                     u4240:
  7997  0037CA                     l1183:
  7998  0037CA  FFFF               	dw	65535	; assembler added errata NOP
  7999                           
  8000                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 534:     if ((fla
      +                          gs & (1 << 4)) && t) {
  8001  0037CC  0100               	movlb	0	; () banked
  8002  0037CE  A98A               	btfss	_flags& (0+255),4,b
  8003  0037D0  EFEC  F01B         	goto	u4251
  8004  0037D4  EFEF  F01B         	goto	u4250
  8005  0037D8                     u4251:
  8006  0037D8  FFFF               	dw	65535	; assembler added errata NOP
  8007  0037DA  EF09  F01C         	goto	l3907
  8008  0037DE                     u4250:
  8009  0037DE  FFFF               	dw	65535	; assembler added errata NOP
  8010  0037E0                     
  8011                           ; BSR set to: 0
  8012  0037E0  5030               	movf	otoa@t^0,w,c
  8013  0037E2  1031               	iorwf	(otoa@t+1)^0,w,c
  8014  0037E4  B4D8               	btfsc	status,2,c
  8015  0037E6  EFF7  F01B         	goto	u4261
  8016  0037EA  EFFA  F01B         	goto	u4260
  8017  0037EE                     u4261:
  8018  0037EE  FFFF               	dw	65535	; assembler added errata NOP
  8019  0037F0  EF09  F01C         	goto	l3907
  8020  0037F4                     u4260:
  8021  0037F4  FFFF               	dw	65535	; assembler added errata NOP
  8022  0037F6                     
  8023                           ; BSR set to: 0
  8024                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 535:         --i;
  8025  0037F6  063C               	decf	otoa@i^0,f,c
  8026  0037F8  A0D8               	btfss	status,0,c
  8027  0037FA  063D               	decf	(otoa@i+1)^0,f,c
  8028  0037FC                     
  8029                           ; BSR set to: 0
  8030                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 536:         dbuf
      +                          [i] = '0';
  8031  0037FC  0E98               	movlw	low _dbuf
  8032  0037FE  243C               	addwf	otoa@i^0,w,c
  8033  003800  6ED9               	movwf	fsr2l,c
  8034  003802  0E00               	movlw	high _dbuf
  8035  003804  203D               	addwfc	(otoa@i+1)^0,w,c
  8036  003806  6EDA               	movwf	fsr2h,c
  8037  003808  0E30               	movlw	48
  8038  00380A  6EDF               	movwf	indf2,c
  8039  00380C                     
  8040                           ; BSR set to: 0
  8041                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 537:         --w;
  8042  00380C  0632               	decf	otoa@w^0,f,c
  8043  00380E  A0D8               	btfss	status,0,c
  8044  003810  0633               	decf	(otoa@w+1)^0,f,c
  8045  003812                     l3907:
  8046  003812  FFFF               	dw	65535	; assembler added errata NOP
  8047                           
  8048                           ; BSR set to: 0
  8049                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 541:     return p
      +                          ad(fp, &dbuf[i], w);
  8050  003814  C01C  F011         	movff	otoa@fp,pad@fp
  8051  003818  C01D  F012         	movff	otoa@fp+1,pad@fp+1
  8052  00381C  0E98               	movlw	low _dbuf
  8053  00381E  243C               	addwf	otoa@i^0,w,c
  8054  003820  6E13               	movwf	pad@buf^0,c
  8055  003822  0E00               	movlw	high _dbuf
  8056  003824  203D               	addwfc	(otoa@i+1)^0,w,c
  8057  003826  6E14               	movwf	(pad@buf+1)^0,c
  8058  003828  C032  F015         	movff	otoa@w,pad@p
  8059  00382C  C033  F016         	movff	otoa@w+1,pad@p+1
  8060  003830  ECDE  F039         	call	_pad	;wreg free
  8061  003834  C011  F01C         	movff	?_pad,?_otoa
  8062  003838  C012  F01D         	movff	?_pad+1,?_otoa+1
  8063  00383C  0012               	return		;funcret
  8064  00383E  FFFF               	dw	65535	; errata NOP
  8065  003840                     __end_of_otoa:
  8066                           	callstack 0
  8067                           
  8068 ;; *************** function _dtoa *****************
  8069 ;; Defined at:
  8070 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  8071 ;; Parameters:    Size  Location     Type
  8072 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  8073 ;;		 -> vsnprintf@f(6), 
  8074 ;;  d               8   29[COMRAM] long long 
  8075 ;; Auto vars:     Size  Location     Type
  8076 ;;  n               8   53[COMRAM] long long 
  8077 ;;  i               2   61[COMRAM] int 
  8078 ;;  s               2   51[COMRAM] int 
  8079 ;;  w               2   49[COMRAM] int 
  8080 ;;  p               2   47[COMRAM] int 
  8081 ;; Return value:  Size  Location     Type
  8082 ;;                  2   27[COMRAM] int 
  8083 ;; Registers used:
  8084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8085 ;; Tracked objects:
  8086 ;;		On entry : 0/0
  8087 ;;		On exit  : 0/0
  8088 ;;		Unchanged: 0/0
  8089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8090 ;;      Params:        10       0       0       0       0       0       0
  8091 ;;      Locals:        18       0       0       0       0       0       0
  8092 ;;      Temps:          8       0       0       0       0       0       0
  8093 ;;      Totals:        36       0       0       0       0       0       0
  8094 ;;Total ram usage:       36 bytes
  8095 ;; Hardware stack levels used:    1
  8096 ;; Hardware stack levels required when called:    5
  8097 ;; This function calls:
  8098 ;;		___aodiv
  8099 ;;		___aomod
  8100 ;;		_abs
  8101 ;;		_pad
  8102 ;; This function is called by:
  8103 ;;		_vfpfcnvrt
  8104 ;; This function uses a non-reentrant model
  8105 ;;
  8106                           
  8107                           	psect	text20
  8108  002D8A                     __ptext20:
  8109                           	callstack 0
  8110  002D8A                     _dtoa:
  8111                           	callstack 0
  8112  002D8A  FFFF               	dw	65535	; assembler added errata NOP
  8113  002D8C                     
  8114                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
  8115  002D8C  C01E  F036         	movff	dtoa@d,dtoa@n
  8116  002D90  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  8117  002D94  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  8118  002D98  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  8119  002D9C  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  8120  002DA0  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  8121  002DA4  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  8122  002DA8  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  8123  002DAC                     
  8124                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
  8125  002DAC  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  8126  002DAE  EFDB  F016         	goto	u4021
  8127  002DB2  EFDF  F016         	goto	u4020
  8128  002DB6                     u4021:
  8129  002DB6  FFFF               	dw	65535	; assembler added errata NOP
  8130  002DB8  0E01               	movlw	1
  8131  002DBA  EFE1  F016         	goto	u4030
  8132  002DBE                     u4020:
  8133  002DBE  FFFF               	dw	65535	; assembler added errata NOP
  8134  002DC0  0E00               	movlw	0
  8135  002DC2                     u4030:
  8136  002DC2  FFFF               	dw	65535	; assembler added errata NOP
  8137  002DC4  6E34               	movwf	dtoa@s^0,c
  8138  002DC6  6A35               	clrf	(dtoa@s+1)^0,c
  8139                           
  8140                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  8141  002DC8  5034               	movf	dtoa@s^0,w,c
  8142  002DCA  1035               	iorwf	(dtoa@s+1)^0,w,c
  8143  002DCC  B4D8               	btfsc	status,2,c
  8144  002DCE  EFEB  F016         	goto	u4041
  8145  002DD2  EFEE  F016         	goto	u4040
  8146  002DD6                     u4041:
  8147  002DD6  FFFF               	dw	65535	; assembler added errata NOP
  8148  002DD8  EFFF  F016         	goto	l3807
  8149  002DDC                     u4040:
  8150  002DDC  FFFF               	dw	65535	; assembler added errata NOP
  8151  002DDE                     
  8152                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
  8153  002DDE  1E3D               	comf	(dtoa@n+7)^0,f,c
  8154  002DE0  1E3C               	comf	(dtoa@n+6)^0,f,c
  8155  002DE2  1E3B               	comf	(dtoa@n+5)^0,f,c
  8156  002DE4  1E3A               	comf	(dtoa@n+4)^0,f,c
  8157  002DE6  1E39               	comf	(dtoa@n+3)^0,f,c
  8158  002DE8  1E38               	comf	(dtoa@n+2)^0,f,c
  8159  002DEA  1E37               	comf	(dtoa@n+1)^0,f,c
  8160  002DEC  6C36               	negf	dtoa@n^0,c
  8161  002DEE  0E00               	movlw	0
  8162  002DF0  2237               	addwfc	(dtoa@n+1)^0,f,c
  8163  002DF2  2238               	addwfc	(dtoa@n+2)^0,f,c
  8164  002DF4  2239               	addwfc	(dtoa@n+3)^0,f,c
  8165  002DF6  223A               	addwfc	(dtoa@n+4)^0,f,c
  8166  002DF8  223B               	addwfc	(dtoa@n+5)^0,f,c
  8167  002DFA  223C               	addwfc	(dtoa@n+6)^0,f,c
  8168  002DFC  223D               	addwfc	(dtoa@n+7)^0,f,c
  8169  002DFE                     l3807:
  8170  002DFE  FFFF               	dw	65535	; assembler added errata NOP
  8171                           
  8172                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
  8173  002E00  0100               	movlb	0	; () banked
  8174  002E02  BF89               	btfsc	(_prec+1)& (0+255),7,b
  8175  002E04  EF06  F017         	goto	u4051
  8176  002E08  EF09  F017         	goto	u4050
  8177  002E0C                     u4051:
  8178  002E0C  FFFF               	dw	65535	; assembler added errata NOP
  8179  002E0E  EF0B  F017         	goto	l3811
  8180  002E12                     u4050:
  8181  002E12  FFFF               	dw	65535	; assembler added errata NOP
  8182  002E14                     
  8183                           ; BSR set to: 0
  8184                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
  8185  002E14  938A               	bcf	_flags& (0+255),1,b
  8186  002E16                     l3811:
  8187  002E16  FFFF               	dw	65535	; assembler added errata NOP
  8188                           
  8189                           ; BSR set to: 0
  8190                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
  8191  002E18  BF89               	btfsc	(_prec+1)& (0+255),7,b
  8192  002E1A  EF1A  F017         	goto	u4060
  8193  002E1E  5189               	movf	(_prec+1)& (0+255),w,b
  8194  002E20  E106               	bnz	u4061
  8195  002E22  0588               	decf	_prec& (0+255),w,b
  8196  002E24  B0D8               	btfsc	status,0,c
  8197  002E26  EF17  F017         	goto	u4061
  8198  002E2A  EF1A  F017         	goto	u4060
  8199  002E2E                     u4061:
  8200  002E2E  FFFF               	dw	65535	; assembler added errata NOP
  8201  002E30  EF21  F017         	goto	l1149
  8202  002E34                     u4060:
  8203  002E34  FFFF               	dw	65535	; assembler added errata NOP
  8204  002E36                     
  8205                           ; BSR set to: 0
  8206  002E36  0E00               	movlw	0
  8207  002E38  6E31               	movwf	(dtoa@p+1)^0,c
  8208  002E3A  0E01               	movlw	1
  8209  002E3C  6E30               	movwf	dtoa@p^0,c
  8210  002E3E  EF26  F017         	goto	l1151
  8211  002E42                     l1149:
  8212  002E42  FFFF               	dw	65535	; assembler added errata NOP
  8213                           
  8214                           ; BSR set to: 0
  8215  002E44  C088  F030         	movff	_prec,dtoa@p
  8216  002E48  C089  F031         	movff	_prec+1,dtoa@p+1
  8217  002E4C                     l1151:
  8218  002E4C  FFFF               	dw	65535	; assembler added errata NOP
  8219                           
  8220                           ; BSR set to: 0
  8221                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
  8222  002E4E  C086  F032         	movff	_width,dtoa@w
  8223  002E52  C087  F033         	movff	_width+1,dtoa@w+1
  8224  002E56                     
  8225                           ; BSR set to: 0
  8226                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
  8227  002E56  5034               	movf	dtoa@s^0,w,c
  8228  002E58  1035               	iorwf	(dtoa@s+1)^0,w,c
  8229  002E5A  A4D8               	btfss	status,2,c
  8230  002E5C  EF32  F017         	goto	u4071
  8231  002E60  EF35  F017         	goto	u4070
  8232  002E64                     u4071:
  8233  002E64  FFFF               	dw	65535	; assembler added errata NOP
  8234  002E66  EF3E  F017         	goto	l3819
  8235  002E6A                     u4070:
  8236  002E6A  FFFF               	dw	65535	; assembler added errata NOP
  8237  002E6C                     
  8238                           ; BSR set to: 0
  8239  002E6C  A58A               	btfss	_flags& (0+255),2,b
  8240  002E6E  EF3B  F017         	goto	u4081
  8241  002E72  EF3E  F017         	goto	u4080
  8242  002E76                     u4081:
  8243  002E76  FFFF               	dw	65535	; assembler added errata NOP
  8244  002E78  EF42  F017         	goto	l3821
  8245  002E7C                     u4080:
  8246  002E7C                     l3819:
  8247  002E7C  FFFF               	dw	65535	; assembler added errata NOP
  8248                           
  8249                           ; BSR set to: 0
  8250                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
  8251  002E7E  0632               	decf	dtoa@w^0,f,c
  8252  002E80  A0D8               	btfss	status,0,c
  8253  002E82  0633               	decf	(dtoa@w+1)^0,f,c
  8254  002E84                     l3821:
  8255  002E84  FFFF               	dw	65535	; assembler added errata NOP
  8256                           
  8257                           ; BSR set to: 0
  8258                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
  8259  002E86  0E00               	movlw	0
  8260  002E88  6E3F               	movwf	(dtoa@i+1)^0,c
  8261  002E8A  0E1F               	movlw	31
  8262  002E8C  6E3E               	movwf	dtoa@i^0,c
  8263  002E8E                     
  8264                           ; BSR set to: 0
  8265                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
  8266  002E8E  0E00               	movlw	0
  8267  002E90  6FB7               	movwf	(_dbuf+31)& (0+255),b
  8268                           
  8269                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8270  002E92  EFC8  F017         	goto	l3835
  8271  002E96                     l3825:
  8272  002E96  FFFF               	dw	65535	; assembler added errata NOP
  8273                           
  8274                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
  8275  002E98  063E               	decf	dtoa@i^0,f,c
  8276  002E9A  A0D8               	btfss	status,0,c
  8277  002E9C  063F               	decf	(dtoa@i+1)^0,f,c
  8278  002E9E                     
  8279                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
  8280  002E9E  0E98               	movlw	low _dbuf
  8281  002EA0  243E               	addwf	dtoa@i^0,w,c
  8282  002EA2  6ED9               	movwf	fsr2l,c
  8283  002EA4  0E00               	movlw	high _dbuf
  8284  002EA6  203F               	addwfc	(dtoa@i+1)^0,w,c
  8285  002EA8  6EDA               	movwf	fsr2h,c
  8286  002EAA  C036  F001         	movff	dtoa@n,___aomod@dividend
  8287  002EAE  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  8288  002EB2  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  8289  002EB6  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  8290  002EBA  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  8291  002EBE  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  8292  002EC2  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  8293  002EC6  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  8294  002ECA  0E0A               	movlw	10
  8295  002ECC  6E09               	movwf	___aomod@divisor^0,c
  8296  002ECE  0E00               	movlw	0
  8297  002ED0  6E0A               	movwf	(___aomod@divisor+1)^0,c
  8298  002ED2  0E00               	movlw	0
  8299  002ED4  6E0B               	movwf	(___aomod@divisor+2)^0,c
  8300  002ED6  0E00               	movlw	0
  8301  002ED8  6E0C               	movwf	(___aomod@divisor+3)^0,c
  8302  002EDA  0E00               	movlw	0
  8303  002EDC  6E0D               	movwf	(___aomod@divisor+4)^0,c
  8304  002EDE  0E00               	movlw	0
  8305  002EE0  6E0E               	movwf	(___aomod@divisor+5)^0,c
  8306  002EE2  0E00               	movlw	0
  8307  002EE4  6E0F               	movwf	(___aomod@divisor+6)^0,c
  8308  002EE6  0E00               	movlw	0
  8309  002EE8  6E10               	movwf	(___aomod@divisor+7)^0,c
  8310  002EEA  EC92  F03E         	call	___aomod	;wreg free
  8311  002EEE  C001  F026         	movff	?___aomod,??_dtoa
  8312  002EF2  C002  F027         	movff	?___aomod+1,??_dtoa+1
  8313  002EF6  C003  F028         	movff	?___aomod+2,??_dtoa+2
  8314  002EFA  C004  F029         	movff	?___aomod+3,??_dtoa+3
  8315  002EFE  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  8316  002F02  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  8317  002F06  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  8318  002F0A  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  8319  002F0E  C026  F013         	movff	??_dtoa,abs@a
  8320  002F12  C028  F014         	movff	??_dtoa+2,abs@a+1
  8321  002F16  EC00  F035         	call	_abs	;wreg free
  8322  002F1A  5013               	movf	?_abs^0,w,c
  8323  002F1C  0F30               	addlw	48
  8324  002F1E  6EDF               	movwf	indf2,c
  8325  002F20                     
  8326                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
  8327  002F20  0630               	decf	dtoa@p^0,f,c
  8328  002F22  A0D8               	btfss	status,0,c
  8329  002F24  0631               	decf	(dtoa@p+1)^0,f,c
  8330  002F26                     
  8331                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
  8332  002F26  0632               	decf	dtoa@w^0,f,c
  8333  002F28  A0D8               	btfss	status,0,c
  8334  002F2A  0633               	decf	(dtoa@w+1)^0,f,c
  8335  002F2C                     
  8336                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
  8337  002F2C  C036  F001         	movff	dtoa@n,___aodiv@dividend
  8338  002F30  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  8339  002F34  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  8340  002F38  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  8341  002F3C  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  8342  002F40  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  8343  002F44  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  8344  002F48  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  8345  002F4C  0E0A               	movlw	10
  8346  002F4E  6E09               	movwf	___aodiv@divisor^0,c
  8347  002F50  0E00               	movlw	0
  8348  002F52  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  8349  002F54  0E00               	movlw	0
  8350  002F56  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  8351  002F58  0E00               	movlw	0
  8352  002F5A  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  8353  002F5C  0E00               	movlw	0
  8354  002F5E  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  8355  002F60  0E00               	movlw	0
  8356  002F62  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  8357  002F64  0E00               	movlw	0
  8358  002F66  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  8359  002F68  0E00               	movlw	0
  8360  002F6A  6E10               	movwf	(___aodiv@divisor+7)^0,c
  8361  002F6C  ECED  F01E         	call	___aodiv	;wreg free
  8362  002F70  C001  F036         	movff	?___aodiv,dtoa@n
  8363  002F74  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  8364  002F78  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  8365  002F7C  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  8366  002F80  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  8367  002F84  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  8368  002F88  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  8369  002F8C  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  8370  002F90                     l3835:
  8371  002F90  FFFF               	dw	65535	; assembler added errata NOP
  8372                           
  8373                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8374  002F92  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  8375  002F94  EFD4  F017         	goto	u4091
  8376  002F98  503F               	movf	(dtoa@i+1)^0,w,c
  8377  002F9A  E109               	bnz	u4090
  8378  002F9C  043E               	decf	dtoa@i^0,w,c
  8379  002F9E  A0D8               	btfss	status,0,c
  8380  002FA0  EFD4  F017         	goto	u4091
  8381  002FA4  EFD7  F017         	goto	u4090
  8382  002FA8                     u4091:
  8383  002FA8  FFFF               	dw	65535	; assembler added errata NOP
  8384  002FAA  EF10  F018         	goto	l3845
  8385  002FAE                     u4090:
  8386  002FAE  FFFF               	dw	65535	; assembler added errata NOP
  8387  002FB0  5036               	movf	dtoa@n^0,w,c
  8388  002FB2  1037               	iorwf	(dtoa@n+1)^0,w,c
  8389  002FB4  1038               	iorwf	(dtoa@n+2)^0,w,c
  8390  002FB6  1039               	iorwf	(dtoa@n+3)^0,w,c
  8391  002FB8  103A               	iorwf	(dtoa@n+4)^0,w,c
  8392  002FBA  103B               	iorwf	(dtoa@n+5)^0,w,c
  8393  002FBC  103C               	iorwf	(dtoa@n+6)^0,w,c
  8394  002FBE  103D               	iorwf	(dtoa@n+7)^0,w,c
  8395  002FC0  A4D8               	btfss	status,2,c
  8396  002FC2  EFE5  F017         	goto	u4101
  8397  002FC6  EFE8  F017         	goto	u4100
  8398  002FCA                     u4101:
  8399  002FCA  FFFF               	dw	65535	; assembler added errata NOP
  8400  002FCC  EF4B  F017         	goto	l3825
  8401  002FD0                     u4100:
  8402  002FD0  FFFF               	dw	65535	; assembler added errata NOP
  8403  002FD2  BE31               	btfsc	(dtoa@p+1)^0,7,c
  8404  002FD4  EFF7  F017         	goto	u4110
  8405  002FD8  5031               	movf	(dtoa@p+1)^0,w,c
  8406  002FDA  E106               	bnz	u4111
  8407  002FDC  0430               	decf	dtoa@p^0,w,c
  8408  002FDE  B0D8               	btfsc	status,0,c
  8409  002FE0  EFF4  F017         	goto	u4111
  8410  002FE4  EFF7  F017         	goto	u4110
  8411  002FE8                     u4111:
  8412  002FE8  FFFF               	dw	65535	; assembler added errata NOP
  8413  002FEA  EF4B  F017         	goto	l3825
  8414  002FEE                     u4110:
  8415  002FEE  FFFF               	dw	65535	; assembler added errata NOP
  8416  002FF0  BE33               	btfsc	(dtoa@w+1)^0,7,c
  8417  002FF2  EF03  F018         	goto	u4121
  8418  002FF6  5033               	movf	(dtoa@w+1)^0,w,c
  8419  002FF8  E109               	bnz	u4120
  8420  002FFA  0432               	decf	dtoa@w^0,w,c
  8421  002FFC  A0D8               	btfss	status,0,c
  8422  002FFE  EF03  F018         	goto	u4121
  8423  003002  EF06  F018         	goto	u4120
  8424  003006                     u4121:
  8425  003006  FFFF               	dw	65535	; assembler added errata NOP
  8426  003008  EF10  F018         	goto	l3845
  8427  00300C                     u4120:
  8428  00300C  FFFF               	dw	65535	; assembler added errata NOP
  8429  00300E  0100               	movlb	0	; () banked
  8430  003010  B38A               	btfsc	_flags& (0+255),1,b
  8431  003012  EF0D  F018         	goto	u4131
  8432  003016  EF10  F018         	goto	u4130
  8433  00301A                     u4131:
  8434  00301A  FFFF               	dw	65535	; assembler added errata NOP
  8435  00301C  EF4B  F017         	goto	l3825
  8436  003020                     u4130:
  8437  003020                     l3845:
  8438  003020  FFFF               	dw	65535	; assembler added errata NOP
  8439                           
  8440                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
  8441  003022  5034               	movf	dtoa@s^0,w,c
  8442  003024  1035               	iorwf	(dtoa@s+1)^0,w,c
  8443  003026  A4D8               	btfss	status,2,c
  8444  003028  EF18  F018         	goto	u4141
  8445  00302C  EF1B  F018         	goto	u4140
  8446  003030                     u4141:
  8447  003030  FFFF               	dw	65535	; assembler added errata NOP
  8448  003032  EF25  F018         	goto	l3849
  8449  003036                     u4140:
  8450  003036  FFFF               	dw	65535	; assembler added errata NOP
  8451  003038  0100               	movlb	0	; () banked
  8452  00303A  A58A               	btfss	_flags& (0+255),2,b
  8453  00303C  EF22  F018         	goto	u4151
  8454  003040  EF25  F018         	goto	u4150
  8455  003044                     u4151:
  8456  003044  FFFF               	dw	65535	; assembler added errata NOP
  8457  003046  EF48  F018         	goto	l3859
  8458  00304A                     u4150:
  8459  00304A                     l3849:
  8460  00304A  FFFF               	dw	65535	; assembler added errata NOP
  8461                           
  8462                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
  8463  00304C  063E               	decf	dtoa@i^0,f,c
  8464  00304E  A0D8               	btfss	status,0,c
  8465  003050  063F               	decf	(dtoa@i+1)^0,f,c
  8466  003052                     
  8467                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
  8468  003052  5034               	movf	dtoa@s^0,w,c
  8469  003054  1035               	iorwf	(dtoa@s+1)^0,w,c
  8470  003056  A4D8               	btfss	status,2,c
  8471  003058  EF30  F018         	goto	u4161
  8472  00305C  EF33  F018         	goto	u4160
  8473  003060                     u4161:
  8474  003060  FFFF               	dw	65535	; assembler added errata NOP
  8475  003062  EF3A  F018         	goto	l3855
  8476  003066                     u4160:
  8477  003066  FFFF               	dw	65535	; assembler added errata NOP
  8478  003068  0E00               	movlw	0
  8479  00306A  6E2F               	movwf	(_dtoa$1631+1)^0,c
  8480  00306C  0E2B               	movlw	43
  8481  00306E  6E2E               	movwf	_dtoa$1631^0,c
  8482  003070  EF3F  F018         	goto	l3857
  8483  003074                     l3855:
  8484  003074  FFFF               	dw	65535	; assembler added errata NOP
  8485  003076  0E00               	movlw	0
  8486  003078  6E2F               	movwf	(_dtoa$1631+1)^0,c
  8487  00307A  0E2D               	movlw	45
  8488  00307C  6E2E               	movwf	_dtoa$1631^0,c
  8489  00307E                     l3857:
  8490  00307E  FFFF               	dw	65535	; assembler added errata NOP
  8491  003080  0E98               	movlw	low _dbuf
  8492  003082  243E               	addwf	dtoa@i^0,w,c
  8493  003084  6ED9               	movwf	fsr2l,c
  8494  003086  0E00               	movlw	high _dbuf
  8495  003088  203F               	addwfc	(dtoa@i+1)^0,w,c
  8496  00308A  6EDA               	movwf	fsr2h,c
  8497  00308C  C02E  FFDF         	movff	_dtoa$1631,indf2
  8498  003090                     l3859:
  8499  003090  FFFF               	dw	65535	; assembler added errata NOP
  8500                           
  8501                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
  8502  003092  C01C  F011         	movff	dtoa@fp,pad@fp
  8503  003096  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  8504  00309A  0E98               	movlw	low _dbuf
  8505  00309C  243E               	addwf	dtoa@i^0,w,c
  8506  00309E  6E13               	movwf	pad@buf^0,c
  8507  0030A0  0E00               	movlw	high _dbuf
  8508  0030A2  203F               	addwfc	(dtoa@i+1)^0,w,c
  8509  0030A4  6E14               	movwf	(pad@buf+1)^0,c
  8510  0030A6  C032  F015         	movff	dtoa@w,pad@p
  8511  0030AA  C033  F016         	movff	dtoa@w+1,pad@p+1
  8512  0030AE  ECDE  F039         	call	_pad	;wreg free
  8513  0030B2  C011  F01C         	movff	?_pad,?_dtoa
  8514  0030B6  C012  F01D         	movff	?_pad+1,?_dtoa+1
  8515  0030BA  0012               	return		;funcret
  8516  0030BC  FFFF               	dw	65535	; errata NOP
  8517  0030BE                     __end_of_dtoa:
  8518                           	callstack 0
  8519                           
  8520 ;; *************** function ___aomod *****************
  8521 ;; Defined at:
  8522 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
  8523 ;; Parameters:    Size  Location     Type
  8524 ;;  dividend        8    0[COMRAM] long long 
  8525 ;;  divisor         8    8[COMRAM] long long 
  8526 ;; Auto vars:     Size  Location     Type
  8527 ;;  sign            1   17[COMRAM] unsigned char 
  8528 ;;  counter         1   16[COMRAM] unsigned char 
  8529 ;; Return value:  Size  Location     Type
  8530 ;;                  8    0[COMRAM] long long 
  8531 ;; Registers used:
  8532 ;;		wreg, status,2, status,0
  8533 ;; Tracked objects:
  8534 ;;		On entry : 0/0
  8535 ;;		On exit  : 0/0
  8536 ;;		Unchanged: 0/0
  8537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8538 ;;      Params:        16       0       0       0       0       0       0
  8539 ;;      Locals:         2       0       0       0       0       0       0
  8540 ;;      Temps:          0       0       0       0       0       0       0
  8541 ;;      Totals:        18       0       0       0       0       0       0
  8542 ;;Total ram usage:       18 bytes
  8543 ;; Hardware stack levels used:    1
  8544 ;; Hardware stack levels required when called:    1
  8545 ;; This function calls:
  8546 ;;		Nothing
  8547 ;; This function is called by:
  8548 ;;		_dtoa
  8549 ;; This function uses a non-reentrant model
  8550 ;;
  8551                           
  8552                           	psect	text21
  8553  007D24                     __ptext21:
  8554                           	callstack 0
  8555  007D24                     ___aomod:
  8556                           	callstack 0
  8557  007D24  FFFF               	dw	65535	; assembler added errata NOP
  8558  007D26  0E00               	movlw	0
  8559  007D28  6E12               	movwf	___aomod@sign^0,c
  8560  007D2A  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  8561  007D2C  EF9D  F03E         	goto	u3730
  8562  007D30  EF9A  F03E         	goto	u3731
  8563  007D34                     u3731:
  8564  007D34  FFFF               	dw	65535	; assembler added errata NOP
  8565  007D36  EFB0  F03E         	goto	l3665
  8566  007D3A                     u3730:
  8567  007D3A  FFFF               	dw	65535	; assembler added errata NOP
  8568  007D3C  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8569  007D3E  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8570  007D40  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8571  007D42  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8572  007D44  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8573  007D46  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8574  007D48  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8575  007D4A  6C01               	negf	___aomod@dividend^0,c
  8576  007D4C  0E00               	movlw	0
  8577  007D4E  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8578  007D50  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8579  007D52  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8580  007D54  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8581  007D56  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8582  007D58  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8583  007D5A  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8584  007D5C  0E01               	movlw	1
  8585  007D5E  6E12               	movwf	___aomod@sign^0,c
  8586  007D60                     l3665:
  8587  007D60  FFFF               	dw	65535	; assembler added errata NOP
  8588  007D62  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  8589  007D64  EFB9  F03E         	goto	u3740
  8590  007D68  EFB6  F03E         	goto	u3741
  8591  007D6C                     u3741:
  8592  007D6C  FFFF               	dw	65535	; assembler added errata NOP
  8593  007D6E  EFCA  F03E         	goto	l3669
  8594  007D72                     u3740:
  8595  007D72  FFFF               	dw	65535	; assembler added errata NOP
  8596  007D74  1E10               	comf	(___aomod@divisor+7)^0,f,c
  8597  007D76  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  8598  007D78  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  8599  007D7A  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  8600  007D7C  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  8601  007D7E  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  8602  007D80  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  8603  007D82  6C09               	negf	___aomod@divisor^0,c
  8604  007D84  0E00               	movlw	0
  8605  007D86  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  8606  007D88  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  8607  007D8A  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  8608  007D8C  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  8609  007D8E  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  8610  007D90  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  8611  007D92  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  8612  007D94                     l3669:
  8613  007D94  FFFF               	dw	65535	; assembler added errata NOP
  8614  007D96  5009               	movf	___aomod@divisor^0,w,c
  8615  007D98  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  8616  007D9A  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  8617  007D9C  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  8618  007D9E  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  8619  007DA0  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  8620  007DA2  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  8621  007DA4  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  8622  007DA6  B4D8               	btfsc	status,2,c
  8623  007DA8  EFD8  F03E         	goto	u3751
  8624  007DAC  EFDB  F03E         	goto	u3750
  8625  007DB0                     u3751:
  8626  007DB0  FFFF               	dw	65535	; assembler added errata NOP
  8627  007DB2  EF2C  F03F         	goto	l3685
  8628  007DB6                     u3750:
  8629  007DB6  FFFF               	dw	65535	; assembler added errata NOP
  8630  007DB8  0E01               	movlw	1
  8631  007DBA  6E11               	movwf	___aomod@counter^0,c
  8632  007DBC  EFEB  F03E         	goto	l3675
  8633  007DC0                     l3673:
  8634  007DC0  FFFF               	dw	65535	; assembler added errata NOP
  8635  007DC2  90D8               	bcf	status,0,c
  8636  007DC4  3609               	rlcf	___aomod@divisor^0,f,c
  8637  007DC6  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  8638  007DC8  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  8639  007DCA  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  8640  007DCC  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  8641  007DCE  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  8642  007DD0  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  8643  007DD2  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  8644  007DD4  2A11               	incf	___aomod@counter^0,f,c
  8645  007DD6                     l3675:
  8646  007DD6  FFFF               	dw	65535	; assembler added errata NOP
  8647  007DD8  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  8648  007DDA  EFF1  F03E         	goto	u3761
  8649  007DDE  EFF4  F03E         	goto	u3760
  8650  007DE2                     u3761:
  8651  007DE2  FFFF               	dw	65535	; assembler added errata NOP
  8652  007DE4  EFE0  F03E         	goto	l3673
  8653  007DE8                     u3760:
  8654  007DE8  FFFF               	dw	65535	; assembler added errata NOP
  8655  007DEA                     l3677:
  8656  007DEA  FFFF               	dw	65535	; assembler added errata NOP
  8657  007DEC  5009               	movf	___aomod@divisor^0,w,c
  8658  007DEE  5C01               	subwf	___aomod@dividend^0,w,c
  8659  007DF0  500A               	movf	(___aomod@divisor+1)^0,w,c
  8660  007DF2  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  8661  007DF4  500B               	movf	(___aomod@divisor+2)^0,w,c
  8662  007DF6  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  8663  007DF8  500C               	movf	(___aomod@divisor+3)^0,w,c
  8664  007DFA  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  8665  007DFC  500D               	movf	(___aomod@divisor+4)^0,w,c
  8666  007DFE  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  8667  007E00  500E               	movf	(___aomod@divisor+5)^0,w,c
  8668  007E02  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  8669  007E04  500F               	movf	(___aomod@divisor+6)^0,w,c
  8670  007E06  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  8671  007E08  5010               	movf	(___aomod@divisor+7)^0,w,c
  8672  007E0A  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  8673  007E0C  A0D8               	btfss	status,0,c
  8674  007E0E  EF0B  F03F         	goto	u3771
  8675  007E12  EF0E  F03F         	goto	u3770
  8676  007E16                     u3771:
  8677  007E16  FFFF               	dw	65535	; assembler added errata NOP
  8678  007E18  EF1F  F03F         	goto	l3681
  8679  007E1C                     u3770:
  8680  007E1C  FFFF               	dw	65535	; assembler added errata NOP
  8681  007E1E  5009               	movf	___aomod@divisor^0,w,c
  8682  007E20  5E01               	subwf	___aomod@dividend^0,f,c
  8683  007E22  500A               	movf	(___aomod@divisor+1)^0,w,c
  8684  007E24  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  8685  007E26  500B               	movf	(___aomod@divisor+2)^0,w,c
  8686  007E28  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  8687  007E2A  500C               	movf	(___aomod@divisor+3)^0,w,c
  8688  007E2C  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  8689  007E2E  500D               	movf	(___aomod@divisor+4)^0,w,c
  8690  007E30  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  8691  007E32  500E               	movf	(___aomod@divisor+5)^0,w,c
  8692  007E34  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  8693  007E36  500F               	movf	(___aomod@divisor+6)^0,w,c
  8694  007E38  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  8695  007E3A  5010               	movf	(___aomod@divisor+7)^0,w,c
  8696  007E3C  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  8697  007E3E                     l3681:
  8698  007E3E  FFFF               	dw	65535	; assembler added errata NOP
  8699  007E40  90D8               	bcf	status,0,c
  8700  007E42  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  8701  007E44  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  8702  007E46  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  8703  007E48  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  8704  007E4A  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  8705  007E4C  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  8706  007E4E  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  8707  007E50  3209               	rrcf	___aomod@divisor^0,f,c
  8708  007E52  2E11               	decfsz	___aomod@counter^0,f,c
  8709  007E54  EFF5  F03E         	goto	l3677
  8710  007E58                     l3685:
  8711  007E58  FFFF               	dw	65535	; assembler added errata NOP
  8712  007E5A  5012               	movf	___aomod@sign^0,w,c
  8713  007E5C  B4D8               	btfsc	status,2,c
  8714  007E5E  EF33  F03F         	goto	u3781
  8715  007E62  EF36  F03F         	goto	u3780
  8716  007E66                     u3781:
  8717  007E66  FFFF               	dw	65535	; assembler added errata NOP
  8718  007E68  EF47  F03F         	goto	l3689
  8719  007E6C                     u3780:
  8720  007E6C  FFFF               	dw	65535	; assembler added errata NOP
  8721  007E6E  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8722  007E70  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8723  007E72  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8724  007E74  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8725  007E76  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8726  007E78  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8727  007E7A  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8728  007E7C  6C01               	negf	___aomod@dividend^0,c
  8729  007E7E  0E00               	movlw	0
  8730  007E80  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8731  007E82  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8732  007E84  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8733  007E86  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8734  007E88  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8735  007E8A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8736  007E8C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8737  007E8E                     l3689:
  8738  007E8E  FFFF               	dw	65535	; assembler added errata NOP
  8739  007E90  C001  F001         	movff	___aomod@dividend,?___aomod
  8740  007E94  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  8741  007E98  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  8742  007E9C  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  8743  007EA0  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  8744  007EA4  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  8745  007EA8  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  8746  007EAC  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  8747  007EB0  0012               	return		;funcret
  8748  007EB2  FFFF               	dw	65535	; errata NOP
  8749  007EB4                     __end_of___aomod:
  8750                           	callstack 0
  8751                           
  8752 ;; *************** function ___aodiv *****************
  8753 ;; Defined at:
  8754 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
  8755 ;; Parameters:    Size  Location     Type
  8756 ;;  dividend        8    0[COMRAM] long long 
  8757 ;;  divisor         8    8[COMRAM] long long 
  8758 ;; Auto vars:     Size  Location     Type
  8759 ;;  quotient        8   18[COMRAM] long long 
  8760 ;;  sign            1   17[COMRAM] unsigned char 
  8761 ;;  counter         1   16[COMRAM] unsigned char 
  8762 ;; Return value:  Size  Location     Type
  8763 ;;                  8    0[COMRAM] long long 
  8764 ;; Registers used:
  8765 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8766 ;; Tracked objects:
  8767 ;;		On entry : 0/0
  8768 ;;		On exit  : 0/0
  8769 ;;		Unchanged: 0/0
  8770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8771 ;;      Params:        16       0       0       0       0       0       0
  8772 ;;      Locals:        10       0       0       0       0       0       0
  8773 ;;      Temps:          0       0       0       0       0       0       0
  8774 ;;      Totals:        26       0       0       0       0       0       0
  8775 ;;Total ram usage:       26 bytes
  8776 ;; Hardware stack levels used:    1
  8777 ;; Hardware stack levels required when called:    1
  8778 ;; This function calls:
  8779 ;;		Nothing
  8780 ;; This function is called by:
  8781 ;;		_dtoa
  8782 ;; This function uses a non-reentrant model
  8783 ;;
  8784                           
  8785                           	psect	text22
  8786  003DDA                     __ptext22:
  8787                           	callstack 0
  8788  003DDA                     ___aodiv:
  8789                           	callstack 0
  8790  003DDA  FFFF               	dw	65535	; assembler added errata NOP
  8791  003DDC  0E00               	movlw	0
  8792  003DDE  6E12               	movwf	___aodiv@sign^0,c
  8793  003DE0  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  8794  003DE2  EFF8  F01E         	goto	u3660
  8795  003DE6  EFF5  F01E         	goto	u3661
  8796  003DEA                     u3661:
  8797  003DEA  FFFF               	dw	65535	; assembler added errata NOP
  8798  003DEC  EF0B  F01F         	goto	l3621
  8799  003DF0                     u3660:
  8800  003DF0  FFFF               	dw	65535	; assembler added errata NOP
  8801  003DF2  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  8802  003DF4  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  8803  003DF6  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  8804  003DF8  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  8805  003DFA  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  8806  003DFC  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  8807  003DFE  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  8808  003E00  6C09               	negf	___aodiv@divisor^0,c
  8809  003E02  0E00               	movlw	0
  8810  003E04  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  8811  003E06  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  8812  003E08  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  8813  003E0A  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  8814  003E0C  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  8815  003E0E  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  8816  003E10  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  8817  003E12  0E01               	movlw	1
  8818  003E14  6E12               	movwf	___aodiv@sign^0,c
  8819  003E16                     l3621:
  8820  003E16  FFFF               	dw	65535	; assembler added errata NOP
  8821  003E18  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  8822  003E1A  EF14  F01F         	goto	u3670
  8823  003E1E  EF11  F01F         	goto	u3671
  8824  003E22                     u3671:
  8825  003E22  FFFF               	dw	65535	; assembler added errata NOP
  8826  003E24  EF27  F01F         	goto	l3627
  8827  003E28                     u3670:
  8828  003E28  FFFF               	dw	65535	; assembler added errata NOP
  8829  003E2A  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  8830  003E2C  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  8831  003E2E  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  8832  003E30  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  8833  003E32  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  8834  003E34  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  8835  003E36  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  8836  003E38  6C01               	negf	___aodiv@dividend^0,c
  8837  003E3A  0E00               	movlw	0
  8838  003E3C  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  8839  003E3E  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  8840  003E40  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  8841  003E42  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  8842  003E44  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  8843  003E46  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  8844  003E48  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  8845  003E4A  0E01               	movlw	1
  8846  003E4C  1A12               	xorwf	___aodiv@sign^0,f,c
  8847  003E4E                     l3627:
  8848  003E4E  FFFF               	dw	65535	; assembler added errata NOP
  8849  003E50  EE20  F013         	lfsr	2,___aodiv@quotient
  8850  003E54  0E07               	movlw	7
  8851  003E56                     u3681:
  8852  003E56  6ADE               	clrf	postinc2,c
  8853  003E58  06E8               	decf	wreg,f,c
  8854  003E5A  E2FD               	bc	u3681
  8855  003E5C  5009               	movf	___aodiv@divisor^0,w,c
  8856  003E5E  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  8857  003E60  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  8858  003E62  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  8859  003E64  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  8860  003E66  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  8861  003E68  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  8862  003E6A  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  8863  003E6C  B4D8               	btfsc	status,2,c
  8864  003E6E  EF3B  F01F         	goto	u3691
  8865  003E72  EF3E  F01F         	goto	u3690
  8866  003E76                     u3691:
  8867  003E76  FFFF               	dw	65535	; assembler added errata NOP
  8868  003E78  EF99  F01F         	goto	l3649
  8869  003E7C                     u3690:
  8870  003E7C  FFFF               	dw	65535	; assembler added errata NOP
  8871  003E7E  0E01               	movlw	1
  8872  003E80  6E11               	movwf	___aodiv@counter^0,c
  8873  003E82  EF4E  F01F         	goto	l3635
  8874  003E86                     l3633:
  8875  003E86  FFFF               	dw	65535	; assembler added errata NOP
  8876  003E88  90D8               	bcf	status,0,c
  8877  003E8A  3609               	rlcf	___aodiv@divisor^0,f,c
  8878  003E8C  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  8879  003E8E  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  8880  003E90  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  8881  003E92  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  8882  003E94  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  8883  003E96  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  8884  003E98  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  8885  003E9A  2A11               	incf	___aodiv@counter^0,f,c
  8886  003E9C                     l3635:
  8887  003E9C  FFFF               	dw	65535	; assembler added errata NOP
  8888  003E9E  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  8889  003EA0  EF54  F01F         	goto	u3701
  8890  003EA4  EF57  F01F         	goto	u3700
  8891  003EA8                     u3701:
  8892  003EA8  FFFF               	dw	65535	; assembler added errata NOP
  8893  003EAA  EF43  F01F         	goto	l3633
  8894  003EAE                     u3700:
  8895  003EAE  FFFF               	dw	65535	; assembler added errata NOP
  8896  003EB0                     l3637:
  8897  003EB0  FFFF               	dw	65535	; assembler added errata NOP
  8898  003EB2  90D8               	bcf	status,0,c
  8899  003EB4  3613               	rlcf	___aodiv@quotient^0,f,c
  8900  003EB6  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  8901  003EB8  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  8902  003EBA  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  8903  003EBC  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  8904  003EBE  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  8905  003EC0  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  8906  003EC2  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  8907  003EC4  5009               	movf	___aodiv@divisor^0,w,c
  8908  003EC6  5C01               	subwf	___aodiv@dividend^0,w,c
  8909  003EC8  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8910  003ECA  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  8911  003ECC  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8912  003ECE  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  8913  003ED0  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8914  003ED2  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  8915  003ED4  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8916  003ED6  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  8917  003ED8  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8918  003EDA  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  8919  003EDC  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8920  003EDE  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  8921  003EE0  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8922  003EE2  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  8923  003EE4  A0D8               	btfss	status,0,c
  8924  003EE6  EF77  F01F         	goto	u3711
  8925  003EEA  EF7A  F01F         	goto	u3710
  8926  003EEE                     u3711:
  8927  003EEE  FFFF               	dw	65535	; assembler added errata NOP
  8928  003EF0  EF8C  F01F         	goto	l3645
  8929  003EF4                     u3710:
  8930  003EF4  FFFF               	dw	65535	; assembler added errata NOP
  8931  003EF6  5009               	movf	___aodiv@divisor^0,w,c
  8932  003EF8  5E01               	subwf	___aodiv@dividend^0,f,c
  8933  003EFA  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8934  003EFC  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  8935  003EFE  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8936  003F00  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  8937  003F02  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8938  003F04  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  8939  003F06  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8940  003F08  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  8941  003F0A  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8942  003F0C  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  8943  003F0E  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8944  003F10  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  8945  003F12  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8946  003F14  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  8947  003F16  8013               	bsf	___aodiv@quotient^0,0,c
  8948  003F18                     l3645:
  8949  003F18  FFFF               	dw	65535	; assembler added errata NOP
  8950  003F1A  90D8               	bcf	status,0,c
  8951  003F1C  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  8952  003F1E  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  8953  003F20  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  8954  003F22  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  8955  003F24  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  8956  003F26  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  8957  003F28  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  8958  003F2A  3209               	rrcf	___aodiv@divisor^0,f,c
  8959  003F2C  2E11               	decfsz	___aodiv@counter^0,f,c
  8960  003F2E  EF58  F01F         	goto	l3637
  8961  003F32                     l3649:
  8962  003F32  FFFF               	dw	65535	; assembler added errata NOP
  8963  003F34  5012               	movf	___aodiv@sign^0,w,c
  8964  003F36  B4D8               	btfsc	status,2,c
  8965  003F38  EFA0  F01F         	goto	u3721
  8966  003F3C  EFA3  F01F         	goto	u3720
  8967  003F40                     u3721:
  8968  003F40  FFFF               	dw	65535	; assembler added errata NOP
  8969  003F42  EFB4  F01F         	goto	l3653
  8970  003F46                     u3720:
  8971  003F46  FFFF               	dw	65535	; assembler added errata NOP
  8972  003F48  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  8973  003F4A  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  8974  003F4C  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  8975  003F4E  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  8976  003F50  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  8977  003F52  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  8978  003F54  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  8979  003F56  6C13               	negf	___aodiv@quotient^0,c
  8980  003F58  0E00               	movlw	0
  8981  003F5A  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  8982  003F5C  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  8983  003F5E  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  8984  003F60  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  8985  003F62  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  8986  003F64  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  8987  003F66  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  8988  003F68                     l3653:
  8989  003F68  FFFF               	dw	65535	; assembler added errata NOP
  8990  003F6A  C013  F001         	movff	___aodiv@quotient,?___aodiv
  8991  003F6E  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  8992  003F72  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  8993  003F76  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  8994  003F7A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  8995  003F7E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  8996  003F82  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  8997  003F86  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  8998  003F8A  0012               	return		;funcret
  8999  003F8C  FFFF               	dw	65535	; errata NOP
  9000  003F8E                     __end_of___aodiv:
  9001                           	callstack 0
  9002                           
  9003 ;; *************** function _ctoa *****************
  9004 ;; Defined at:
  9005 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  9006 ;; Parameters:    Size  Location     Type
  9007 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  9008 ;;		 -> vsnprintf@f(6), 
  9009 ;;  c               1   29[COMRAM] unsigned char 
  9010 ;; Auto vars:     Size  Location     Type
  9011 ;;  w               2   30[COMRAM] int 
  9012 ;;  l               2    0        int 
  9013 ;; Return value:  Size  Location     Type
  9014 ;;                  2   27[COMRAM] int 
  9015 ;; Registers used:
  9016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9017 ;; Tracked objects:
  9018 ;;		On entry : 0/0
  9019 ;;		On exit  : 0/0
  9020 ;;		Unchanged: 0/0
  9021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9022 ;;      Params:         3       0       0       0       0       0       0
  9023 ;;      Locals:         2       0       0       0       0       0       0
  9024 ;;      Temps:          0       0       0       0       0       0       0
  9025 ;;      Totals:         5       0       0       0       0       0       0
  9026 ;;Total ram usage:        5 bytes
  9027 ;; Hardware stack levels used:    1
  9028 ;; Hardware stack levels required when called:    5
  9029 ;; This function calls:
  9030 ;;		_pad
  9031 ;; This function is called by:
  9032 ;;		_vfpfcnvrt
  9033 ;; This function uses a non-reentrant model
  9034 ;;
  9035                           
  9036                           	psect	text23
  9037  006BB8                     __ptext23:
  9038                           	callstack 0
  9039  006BB8                     _ctoa:
  9040                           	callstack 0
  9041  006BB8  FFFF               	dw	65535	; assembler added errata NOP
  9042  006BBA                     
  9043                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  9044  006BBA  0100               	movlb	0	; () banked
  9045  006BBC  5186               	movf	_width& (0+255),w,b
  9046  006BBE  1187               	iorwf	(_width+1)& (0+255),w,b
  9047  006BC0  A4D8               	btfss	status,2,c
  9048  006BC2  EFE5  F035         	goto	u4011
  9049  006BC6  EFE8  F035         	goto	u4010
  9050  006BCA                     u4011:
  9051  006BCA  FFFF               	dw	65535	; assembler added errata NOP
  9052  006BCC  EFEF  F035         	goto	l3791
  9053  006BD0                     u4010:
  9054  006BD0  FFFF               	dw	65535	; assembler added errata NOP
  9055  006BD2                     
  9056                           ; BSR set to: 0
  9057  006BD2  C086  F01F         	movff	_width,ctoa@w
  9058  006BD6  C087  F020         	movff	_width+1,ctoa@w+1
  9059  006BDA  EFF6  F035         	goto	l3793
  9060  006BDE                     l3791:
  9061  006BDE  FFFF               	dw	65535	; assembler added errata NOP
  9062                           
  9063                           ; BSR set to: 0
  9064  006BE0  0EFF               	movlw	255
  9065  006BE2  2586               	addwf	_width& (0+255),w,b
  9066  006BE4  6E1F               	movwf	ctoa@w^0,c
  9067  006BE6  0EFF               	movlw	255
  9068  006BE8  2187               	addwfc	(_width+1)& (0+255),w,b
  9069  006BEA  6E20               	movwf	(ctoa@w+1)^0,c
  9070  006BEC                     l3793:
  9071  006BEC  FFFF               	dw	65535	; assembler added errata NOP
  9072                           
  9073                           ; BSR set to: 0
  9074                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 267:     dbuf[0] 
      +                          = c;
  9075  006BEE  C01E  F098         	movff	ctoa@c,_dbuf
  9076  006BF2                     
  9077                           ; BSR set to: 0
  9078                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 268:     dbuf[1] 
      +                          = '\0';
  9079  006BF2  0E00               	movlw	0
  9080  006BF4  6F99               	movwf	(_dbuf+1)& (0+255),b
  9081  006BF6                     
  9082                           ; BSR set to: 0
  9083                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 269:     return p
      +                          ad(fp, &dbuf[0], w);
  9084  006BF6  C01C  F011         	movff	ctoa@fp,pad@fp
  9085  006BFA  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  9086  006BFE  0E98               	movlw	low _dbuf
  9087  006C00  6E13               	movwf	pad@buf^0,c
  9088  006C02  0E00               	movlw	high _dbuf
  9089  006C04  6E14               	movwf	(pad@buf+1)^0,c
  9090  006C06  C01F  F015         	movff	ctoa@w,pad@p
  9091  006C0A  C020  F016         	movff	ctoa@w+1,pad@p+1
  9092  006C0E  ECDE  F039         	call	_pad	;wreg free
  9093  006C12  C011  F01C         	movff	?_pad,?_ctoa
  9094  006C16  C012  F01D         	movff	?_pad+1,?_ctoa+1
  9095  006C1A  0012               	return		;funcret
  9096  006C1C  FFFF               	dw	65535	; errata NOP
  9097  006C1E                     __end_of_ctoa:
  9098                           	callstack 0
  9099                           
  9100 ;; *************** function _pad *****************
  9101 ;; Defined at:
  9102 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  9103 ;; Parameters:    Size  Location     Type
  9104 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  9105 ;;		 -> vsnprintf@f(6), 
  9106 ;;  buf             2   18[COMRAM] PTR unsigned char 
  9107 ;;		 -> dbuf(32), 
  9108 ;;  p               2   20[COMRAM] int 
  9109 ;; Auto vars:     Size  Location     Type
  9110 ;;  w               2   25[COMRAM] int 
  9111 ;;  i               2   23[COMRAM] int 
  9112 ;; Return value:  Size  Location     Type
  9113 ;;                  2   16[COMRAM] int 
  9114 ;; Registers used:
  9115 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9116 ;; Tracked objects:
  9117 ;;		On entry : 0/0
  9118 ;;		On exit  : 0/0
  9119 ;;		Unchanged: 0/0
  9120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9121 ;;      Params:         6       0       0       0       0       0       0
  9122 ;;      Locals:         4       0       0       0       0       0       0
  9123 ;;      Temps:          1       0       0       0       0       0       0
  9124 ;;      Totals:        11       0       0       0       0       0       0
  9125 ;;Total ram usage:       11 bytes
  9126 ;; Hardware stack levels used:    1
  9127 ;; Hardware stack levels required when called:    4
  9128 ;; This function calls:
  9129 ;;		_fputc
  9130 ;;		_fputs
  9131 ;;		_strlen
  9132 ;; This function is called by:
  9133 ;;		_ctoa
  9134 ;;		_dtoa
  9135 ;;		_otoa
  9136 ;;		_utoa
  9137 ;;		_xtoa
  9138 ;; This function uses a non-reentrant model
  9139 ;;
  9140                           
  9141                           	psect	text24
  9142  0073BC                     __ptext24:
  9143                           	callstack 0
  9144  0073BC                     _pad:
  9145                           	callstack 0
  9146  0073BC  FFFF               	dw	65535	; assembler added errata NOP
  9147  0073BE                     
  9148                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  9149  0073BE  0100               	movlb	0	; () banked
  9150  0073C0  A18A               	btfss	_flags& (0+255),0,b
  9151  0073C2  EFE5  F039         	goto	u3861
  9152  0073C6  EFE8  F039         	goto	u3860
  9153  0073CA                     u3861:
  9154  0073CA  FFFF               	dw	65535	; assembler added errata NOP
  9155  0073CC  EFF3  F039         	goto	l3735
  9156  0073D0                     u3860:
  9157  0073D0  FFFF               	dw	65535	; assembler added errata NOP
  9158  0073D2                     
  9159                           ; BSR set to: 0
  9160                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  9161  0073D2  C013  F00A         	movff	pad@buf,fputs@s
  9162  0073D6  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9163  0073DA  C011  F00C         	movff	pad@fp,fputs@fp
  9164  0073DE  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9165  0073E2  EC26  F035         	call	_fputs	;wreg free
  9166  0073E6                     l3735:
  9167  0073E6  FFFF               	dw	65535	; assembler added errata NOP
  9168                           
  9169                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  9170  0073E8  BE16               	btfsc	(pad@p+1)^0,7,c
  9171  0073EA  EFF9  F039         	goto	u3871
  9172  0073EE  EFFC  F039         	goto	u3870
  9173  0073F2                     u3871:
  9174  0073F2  FFFF               	dw	65535	; assembler added errata NOP
  9175  0073F4  EF03  F03A         	goto	l3739
  9176  0073F8                     u3870:
  9177  0073F8  FFFF               	dw	65535	; assembler added errata NOP
  9178  0073FA  C015  F01A         	movff	pad@p,pad@w
  9179  0073FE  C016  F01B         	movff	pad@p+1,pad@w+1
  9180  007402  EF08  F03A         	goto	l1131
  9181  007406                     l3739:
  9182  007406  FFFF               	dw	65535	; assembler added errata NOP
  9183  007408  0E00               	movlw	0
  9184  00740A  6E1B               	movwf	(pad@w+1)^0,c
  9185  00740C  0E00               	movlw	0
  9186  00740E  6E1A               	movwf	pad@w^0,c
  9187  007410                     l1131:
  9188  007410  FFFF               	dw	65535	; assembler added errata NOP
  9189                           
  9190                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  9191  007412  0E00               	movlw	0
  9192  007414  6E19               	movwf	(pad@i+1)^0,c
  9193  007416  0E00               	movlw	0
  9194  007418  6E18               	movwf	pad@i^0,c
  9195                           
  9196                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9197  00741A  EF1C  F03A         	goto	l3745
  9198  00741E                     l3741:
  9199  00741E  FFFF               	dw	65535	; assembler added errata NOP
  9200                           
  9201                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  9202  007420  0E00               	movlw	0
  9203  007422  6E02               	movwf	(fputc@c+1)^0,c
  9204  007424  0E20               	movlw	32
  9205  007426  6E01               	movwf	fputc@c^0,c
  9206  007428  C011  F003         	movff	pad@fp,fputc@fp
  9207  00742C  C012  F004         	movff	pad@fp+1,fputc@fp+1
  9208  007430  EC6D  F039         	call	_fputc	;wreg free
  9209  007434                     
  9210                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  9211  007434  4A18               	infsnz	pad@i^0,f,c
  9212  007436  2A19               	incf	(pad@i+1)^0,f,c
  9213  007438                     l3745:
  9214  007438  FFFF               	dw	65535	; assembler added errata NOP
  9215                           
  9216                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9217  00743A  501A               	movf	pad@w^0,w,c
  9218  00743C  5C18               	subwf	pad@i^0,w,c
  9219  00743E  5019               	movf	(pad@i+1)^0,w,c
  9220  007440  0A80               	xorlw	128
  9221  007442  6E17               	movwf	??_pad^0,c
  9222  007444  501B               	movf	(pad@w+1)^0,w,c
  9223  007446  0A80               	xorlw	128
  9224  007448  5817               	subwfb	??_pad^0,w,c
  9225  00744A  A0D8               	btfss	status,0,c
  9226  00744C  EF2A  F03A         	goto	u3881
  9227  007450  EF2D  F03A         	goto	u3880
  9228  007454                     u3881:
  9229  007454  FFFF               	dw	65535	; assembler added errata NOP
  9230  007456  EF0F  F03A         	goto	l3741
  9231  00745A                     u3880:
  9232  00745A  FFFF               	dw	65535	; assembler added errata NOP
  9233  00745C                     
  9234                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  9235  00745C  0100               	movlb	0	; () banked
  9236  00745E  B18A               	btfsc	_flags& (0+255),0,b
  9237  007460  EF34  F03A         	goto	u3891
  9238  007464  EF37  F03A         	goto	u3890
  9239  007468                     u3891:
  9240  007468  FFFF               	dw	65535	; assembler added errata NOP
  9241  00746A  EF42  F03A         	goto	l3749
  9242  00746E                     u3890:
  9243  00746E  FFFF               	dw	65535	; assembler added errata NOP
  9244  007470                     
  9245                           ; BSR set to: 0
  9246                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  9247  007470  C013  F00A         	movff	pad@buf,fputs@s
  9248  007474  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9249  007478  C011  F00C         	movff	pad@fp,fputs@fp
  9250  00747C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9251  007480  EC26  F035         	call	_fputs	;wreg free
  9252  007484                     l3749:
  9253  007484  FFFF               	dw	65535	; assembler added errata NOP
  9254                           
  9255                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  9256  007486  C013  F001         	movff	pad@buf,strlen@s
  9257  00748A  C014  F002         	movff	pad@buf+1,strlen@s+1
  9258  00748E  EC4E  F035         	call	_strlen	;wreg free
  9259  007492  501A               	movf	pad@w^0,w,c
  9260  007494  2401               	addwf	?_strlen^0,w,c
  9261  007496  6E11               	movwf	?_pad^0,c
  9262  007498  501B               	movf	(pad@w+1)^0,w,c
  9263  00749A  2002               	addwfc	(?_strlen+1)^0,w,c
  9264  00749C  6E12               	movwf	(?_pad+1)^0,c
  9265  00749E  0012               	return		;funcret
  9266  0074A0  FFFF               	dw	65535	; errata NOP
  9267  0074A2                     __end_of_pad:
  9268                           	callstack 0
  9269                           
  9270 ;; *************** function _strlen *****************
  9271 ;; Defined at:
  9272 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  9273 ;; Parameters:    Size  Location     Type
  9274 ;;  s               2    0[COMRAM] PTR const unsigned char 
  9275 ;;		 -> stoa@nuls(7), dbuf(32), ?_snprintf(2), STR_8(50), 
  9276 ;;		 -> STR_7(9), STR_6(7), STR_5(9), STR_4(39), 
  9277 ;;		 -> STR_3(9), STR_2(64), STR_1(49), 
  9278 ;; Auto vars:     Size  Location     Type
  9279 ;;  a               2    2[COMRAM] PTR const unsigned char 
  9280 ;;		 -> stoa@nuls(7), dbuf(32), ?_snprintf(2), STR_8(50), 
  9281 ;;		 -> STR_7(9), STR_6(7), STR_5(9), STR_4(39), 
  9282 ;;		 -> STR_3(9), STR_2(64), STR_1(49), 
  9283 ;; Return value:  Size  Location     Type
  9284 ;;                  2    0[COMRAM] unsigned int 
  9285 ;; Registers used:
  9286 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  9287 ;; Tracked objects:
  9288 ;;		On entry : 0/0
  9289 ;;		On exit  : 0/0
  9290 ;;		Unchanged: 0/0
  9291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9292 ;;      Params:         2       0       0       0       0       0       0
  9293 ;;      Locals:         2       0       0       0       0       0       0
  9294 ;;      Temps:          0       0       0       0       0       0       0
  9295 ;;      Totals:         4       0       0       0       0       0       0
  9296 ;;Total ram usage:        4 bytes
  9297 ;; Hardware stack levels used:    1
  9298 ;; Hardware stack levels required when called:    1
  9299 ;; This function calls:
  9300 ;;		Nothing
  9301 ;; This function is called by:
  9302 ;;		_pad
  9303 ;;		_stoa
  9304 ;; This function uses a non-reentrant model
  9305 ;;
  9306                           
  9307                           	psect	text25
  9308  006A9C                     __ptext25:
  9309                           	callstack 0
  9310  006A9C                     _strlen:
  9311                           	callstack 0
  9312  006A9C  FFFF               	dw	65535	; assembler added errata NOP
  9313  006A9E  C001  F003         	movff	strlen@s,strlen@a
  9314  006AA2  C002  F004         	movff	strlen@s+1,strlen@a+1
  9315  006AA6  EF58  F035         	goto	l3593
  9316  006AAA                     l3591:
  9317  006AAA  FFFF               	dw	65535	; assembler added errata NOP
  9318  006AAC  4A01               	infsnz	strlen@s^0,f,c
  9319  006AAE  2A02               	incf	(strlen@s+1)^0,f,c
  9320  006AB0                     l3593:
  9321  006AB0  FFFF               	dw	65535	; assembler added errata NOP
  9322  006AB2  C001  FFF6         	movff	strlen@s,tblptrl
  9323  006AB6  C002  FFF7         	movff	strlen@s+1,tblptrh
  9324  006ABA  6AF8               	clrf	tblptru,c
  9325  006ABC  0E05               	movlw	(high __ramtop+-1)
  9326  006ABE  64F7               	cpfsgt	tblptrh,c
  9327  006AC0  D004               	bra	u3617
  9328  006AC2  0008               	tblrd		*
  9329  006AC4  FFFF               	dw	65535	; errata NOP
  9330  006AC6  50F5               	movf	tablat,w,c
  9331  006AC8  D005               	bra	u3610
  9332  006ACA                     u3617:
  9333  006ACA  CFF6 FFE1          	movff	tblptrl,fsr1l
  9334  006ACE  CFF7 FFE2          	movff	tblptrh,fsr1h
  9335  006AD2  50E7               	movf	indf1,w,c
  9336  006AD4                     u3610:
  9337  006AD4  0900               	iorlw	0
  9338  006AD6  A4D8               	btfss	status,2,c
  9339  006AD8  EF70  F035         	goto	u3621
  9340  006ADC  EF73  F035         	goto	u3620
  9341  006AE0                     u3621:
  9342  006AE0  FFFF               	dw	65535	; assembler added errata NOP
  9343  006AE2  EF55  F035         	goto	l3591
  9344  006AE6                     u3620:
  9345  006AE6  FFFF               	dw	65535	; assembler added errata NOP
  9346  006AE8  5003               	movf	strlen@a^0,w,c
  9347  006AEA  5C01               	subwf	strlen@s^0,w,c
  9348  006AEC  6E01               	movwf	?_strlen^0,c
  9349  006AEE  5004               	movf	(strlen@a+1)^0,w,c
  9350  006AF0  5802               	subwfb	(strlen@s+1)^0,w,c
  9351  006AF2  6E02               	movwf	(?_strlen+1)^0,c
  9352  006AF4  0012               	return		;funcret
  9353  006AF6  FFFF               	dw	65535	; errata NOP
  9354  006AF8                     __end_of_strlen:
  9355                           	callstack 0
  9356                           
  9357 ;; *************** function _fputs *****************
  9358 ;; Defined at:
  9359 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  9360 ;; Parameters:    Size  Location     Type
  9361 ;;  s               2    9[COMRAM] PTR const unsigned char 
  9362 ;;		 -> dbuf(32), 
  9363 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  9364 ;;		 -> vsnprintf@f(6), 
  9365 ;; Auto vars:     Size  Location     Type
  9366 ;;  i               2   14[COMRAM] int 
  9367 ;;  c               1   13[COMRAM] unsigned char 
  9368 ;; Return value:  Size  Location     Type
  9369 ;;                  2    9[COMRAM] int 
  9370 ;; Registers used:
  9371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9372 ;; Tracked objects:
  9373 ;;		On entry : 0/0
  9374 ;;		On exit  : 0/0
  9375 ;;		Unchanged: 0/0
  9376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9377 ;;      Params:         4       0       0       0       0       0       0
  9378 ;;      Locals:         3       0       0       0       0       0       0
  9379 ;;      Temps:          0       0       0       0       0       0       0
  9380 ;;      Totals:         7       0       0       0       0       0       0
  9381 ;;Total ram usage:        7 bytes
  9382 ;; Hardware stack levels used:    1
  9383 ;; Hardware stack levels required when called:    3
  9384 ;; This function calls:
  9385 ;;		_fputc
  9386 ;; This function is called by:
  9387 ;;		_pad
  9388 ;; This function uses a non-reentrant model
  9389 ;;
  9390                           
  9391                           	psect	text26
  9392  006A4C                     __ptext26:
  9393                           	callstack 0
  9394  006A4C                     _fputs:
  9395                           	callstack 0
  9396  006A4C  FFFF               	dw	65535	; assembler added errata NOP
  9397  006A4E  0E00               	movlw	0
  9398  006A50  6E10               	movwf	(fputs@i+1)^0,c
  9399  006A52  0E00               	movlw	0
  9400  006A54  6E0F               	movwf	fputs@i^0,c
  9401  006A56  EF39  F035         	goto	l3587
  9402  006A5A                     l3583:
  9403  006A5A  FFFF               	dw	65535	; assembler added errata NOP
  9404  006A5C  C00E  F001         	movff	fputs@c,fputc@c
  9405  006A60  6A02               	clrf	(fputc@c+1)^0,c
  9406  006A62  C00C  F003         	movff	fputs@fp,fputc@fp
  9407  006A66  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  9408  006A6A  EC6D  F039         	call	_fputc	;wreg free
  9409  006A6E  4A0F               	infsnz	fputs@i^0,f,c
  9410  006A70  2A10               	incf	(fputs@i+1)^0,f,c
  9411  006A72                     l3587:
  9412  006A72  FFFF               	dw	65535	; assembler added errata NOP
  9413  006A74  500F               	movf	fputs@i^0,w,c
  9414  006A76  240A               	addwf	fputs@s^0,w,c
  9415  006A78  6ED9               	movwf	fsr2l,c
  9416  006A7A  5010               	movf	(fputs@i+1)^0,w,c
  9417  006A7C  200B               	addwfc	(fputs@s+1)^0,w,c
  9418  006A7E  6EDA               	movwf	fsr2h,c
  9419  006A80  50DF               	movf	indf2,w,c
  9420  006A82  6E0E               	movwf	fputs@c^0,c
  9421  006A84  500E               	movf	fputs@c^0,w,c
  9422  006A86  A4D8               	btfss	status,2,c
  9423  006A88  EF48  F035         	goto	u3601
  9424  006A8C  EF4B  F035         	goto	u3600
  9425  006A90                     u3601:
  9426  006A90  FFFF               	dw	65535	; assembler added errata NOP
  9427  006A92  EF2D  F035         	goto	l3583
  9428  006A96                     u3600:
  9429  006A96  FFFF               	dw	65535	; assembler added errata NOP
  9430  006A98  0012               	return		;funcret
  9431  006A9A  FFFF               	dw	65535	; errata NOP
  9432  006A9C                     __end_of_fputs:
  9433                           	callstack 0
  9434                           
  9435 ;; *************** function _fputc *****************
  9436 ;; Defined at:
  9437 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  9438 ;; Parameters:    Size  Location     Type
  9439 ;;  c               2    0[COMRAM] int 
  9440 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  9441 ;;		 -> vsnprintf@f(6), 
  9442 ;; Auto vars:     Size  Location     Type
  9443 ;;		None
  9444 ;; Return value:  Size  Location     Type
  9445 ;;                  2    0[COMRAM] int 
  9446 ;; Registers used:
  9447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9448 ;; Tracked objects:
  9449 ;;		On entry : 0/0
  9450 ;;		On exit  : 0/0
  9451 ;;		Unchanged: 0/0
  9452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9453 ;;      Params:         4       0       0       0       0       0       0
  9454 ;;      Locals:         0       0       0       0       0       0       0
  9455 ;;      Temps:          5       0       0       0       0       0       0
  9456 ;;      Totals:         9       0       0       0       0       0       0
  9457 ;;Total ram usage:        9 bytes
  9458 ;; Hardware stack levels used:    1
  9459 ;; Hardware stack levels required when called:    2
  9460 ;; This function calls:
  9461 ;;		_putch
  9462 ;; This function is called by:
  9463 ;;		_pad
  9464 ;;		_stoa
  9465 ;;		_vfpfcnvrt
  9466 ;;		_fputs
  9467 ;; This function uses a non-reentrant model
  9468 ;;
  9469                           
  9470                           	psect	text27
  9471  0072DA                     __ptext27:
  9472                           	callstack 0
  9473  0072DA                     _fputc:
  9474                           	callstack 0
  9475  0072DA  FFFF               	dw	65535	; assembler added errata NOP
  9476  0072DC  5003               	movf	fputc@fp^0,w,c
  9477  0072DE  1004               	iorwf	(fputc@fp+1)^0,w,c
  9478  0072E0  B4D8               	btfsc	status,2,c
  9479  0072E2  EF75  F039         	goto	u3561
  9480  0072E6  EF78  F039         	goto	u3560
  9481  0072EA                     u3561:
  9482  0072EA  FFFF               	dw	65535	; assembler added errata NOP
  9483  0072EC  EF83  F039         	goto	l3571
  9484  0072F0                     u3560:
  9485  0072F0  FFFF               	dw	65535	; assembler added errata NOP
  9486  0072F2  5003               	movf	fputc@fp^0,w,c
  9487  0072F4  1004               	iorwf	(fputc@fp+1)^0,w,c
  9488  0072F6  A4D8               	btfss	status,2,c
  9489  0072F8  EF80  F039         	goto	u3571
  9490  0072FC  EF83  F039         	goto	u3570
  9491  007300                     u3571:
  9492  007300  FFFF               	dw	65535	; assembler added errata NOP
  9493  007302  EF89  F039         	goto	l3573
  9494  007306                     u3570:
  9495  007306                     l3571:
  9496  007306  FFFF               	dw	65535	; assembler added errata NOP
  9497  007308  5001               	movf	fputc@c^0,w,c
  9498  00730A  ECDF  F032         	call	_putch
  9499  00730E  EFDB  F039         	goto	l1406
  9500  007312                     l3573:
  9501  007312  FFFF               	dw	65535	; assembler added errata NOP
  9502  007314  EE20 F004          	lfsr	2,4
  9503  007318  5003               	movf	fputc@fp^0,w,c
  9504  00731A  26D9               	addwf	fsr2l,f,c
  9505  00731C  5004               	movf	(fputc@fp+1)^0,w,c
  9506  00731E  22DA               	addwfc	fsr2h,f,c
  9507  007320  50DE               	movf	postinc2,w,c
  9508  007322  10DE               	iorwf	postinc2,w,c
  9509  007324  B4D8               	btfsc	status,2,c
  9510  007326  EF97  F039         	goto	u3581
  9511  00732A  EF9A  F039         	goto	u3580
  9512  00732E                     u3581:
  9513  00732E  FFFF               	dw	65535	; assembler added errata NOP
  9514  007330  EFB7  F039         	goto	l3577
  9515  007334                     u3580:
  9516  007334  FFFF               	dw	65535	; assembler added errata NOP
  9517  007336  EE20 F004          	lfsr	2,4
  9518  00733A  5003               	movf	fputc@fp^0,w,c
  9519  00733C  26D9               	addwf	fsr2l,f,c
  9520  00733E  5004               	movf	(fputc@fp+1)^0,w,c
  9521  007340  22DA               	addwfc	fsr2h,f,c
  9522  007342  EE10 F002          	lfsr	1,2
  9523  007346  5003               	movf	fputc@fp^0,w,c
  9524  007348  26E1               	addwf	fsr1l,f,c
  9525  00734A  5004               	movf	(fputc@fp+1)^0,w,c
  9526  00734C  22E2               	addwfc	fsr1h,f,c
  9527  00734E  50DE               	movf	postinc2,w,c
  9528  007350  5CE6               	subwf	postinc1,w,c
  9529  007352  50E6               	movf	postinc1,w,c
  9530  007354  0A80               	xorlw	128
  9531  007356  6E09               	movwf	(??_fputc+4)^0,c
  9532  007358  50DE               	movf	postinc2,w,c
  9533  00735A  0A80               	xorlw	128
  9534  00735C  5809               	subwfb	(??_fputc+4)^0,w,c
  9535  00735E  B0D8               	btfsc	status,0,c
  9536  007360  EFB4  F039         	goto	u3591
  9537  007364  EFB7  F039         	goto	u3590
  9538  007368                     u3591:
  9539  007368  FFFF               	dw	65535	; assembler added errata NOP
  9540  00736A  EFDB  F039         	goto	l1406
  9541  00736E                     u3590:
  9542  00736E                     l3577:
  9543  00736E  FFFF               	dw	65535	; assembler added errata NOP
  9544  007370  EE20 F002          	lfsr	2,2
  9545  007374  5003               	movf	fputc@fp^0,w,c
  9546  007376  26D9               	addwf	fsr2l,f,c
  9547  007378  5004               	movf	(fputc@fp+1)^0,w,c
  9548  00737A  22DA               	addwfc	fsr2h,f,c
  9549  00737C  CFDE F005          	movff	postinc2,??_fputc
  9550  007380  CFDD F006          	movff	postdec2,??_fputc+1
  9551  007384  C003  FFD9         	movff	fputc@fp,fsr2l
  9552  007388  C004  FFDA         	movff	fputc@fp+1,fsr2h
  9553  00738C  CFDE F007          	movff	postinc2,??_fputc+2
  9554  007390  CFDD F008          	movff	postdec2,??_fputc+3
  9555  007394  5005               	movf	??_fputc^0,w,c
  9556  007396  2407               	addwf	(??_fputc+2)^0,w,c
  9557  007398  6ED9               	movwf	fsr2l,c
  9558  00739A  5006               	movf	(??_fputc+1)^0,w,c
  9559  00739C  2008               	addwfc	(??_fputc+3)^0,w,c
  9560  00739E  6EDA               	movwf	fsr2h,c
  9561  0073A0  C001  FFDF         	movff	fputc@c,indf2
  9562  0073A4  EE20 F002          	lfsr	2,2
  9563  0073A8  5003               	movf	fputc@fp^0,w,c
  9564  0073AA  26D9               	addwf	fsr2l,f,c
  9565  0073AC  5004               	movf	(fputc@fp+1)^0,w,c
  9566  0073AE  22DA               	addwfc	fsr2h,f,c
  9567  0073B0  2ADE               	incf	postinc2,f,c
  9568  0073B2  0E00               	movlw	0
  9569  0073B4  22DD               	addwfc	postdec2,f,c
  9570  0073B6                     l1406:
  9571  0073B6  FFFF               	dw	65535	; assembler added errata NOP
  9572  0073B8  0012               	return		;funcret
  9573  0073BA  FFFF               	dw	65535	; errata NOP
  9574  0073BC                     __end_of_fputc:
  9575                           	callstack 0
  9576                           
  9577 ;; *************** function _putch *****************
  9578 ;; Defined at:
  9579 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
  9580 ;; Parameters:    Size  Location     Type
  9581 ;;  c               1    wreg     unsigned char 
  9582 ;; Auto vars:     Size  Location     Type
  9583 ;;  c               1    0[COMRAM] unsigned char 
  9584 ;; Return value:  Size  Location     Type
  9585 ;;                  1    wreg      void 
  9586 ;; Registers used:
  9587 ;;		wreg
  9588 ;; Tracked objects:
  9589 ;;		On entry : 0/0
  9590 ;;		On exit  : 0/0
  9591 ;;		Unchanged: 0/0
  9592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9593 ;;      Params:         0       0       0       0       0       0       0
  9594 ;;      Locals:         0       0       0       0       0       0       0
  9595 ;;      Temps:          0       0       0       0       0       0       0
  9596 ;;      Totals:         0       0       0       0       0       0       0
  9597 ;;Total ram usage:        0 bytes
  9598 ;; Hardware stack levels used:    1
  9599 ;; Hardware stack levels required when called:    1
  9600 ;; This function calls:
  9601 ;;		Nothing
  9602 ;; This function is called by:
  9603 ;;		_fputc
  9604 ;; This function uses a non-reentrant model
  9605 ;;
  9606                           
  9607                           	psect	text28
  9608  0065BE                     __ptext28:
  9609                           	callstack 0
  9610  0065BE                     _putch:
  9611                           	callstack 0
  9612  0065BE  FFFF               	dw	65535	; assembler added errata NOP
  9613  0065C0  0012               	return		;funcret
  9614  0065C2  FFFF               	dw	65535	; errata NOP
  9615  0065C4                     __end_of_putch:
  9616                           	callstack 0
  9617                           
  9618 ;; *************** function _atoi *****************
  9619 ;; Defined at:
  9620 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
  9621 ;; Parameters:    Size  Location     Type
  9622 ;;  s               2    7[COMRAM] PTR const unsigned char 
  9623 ;;		 -> STR_10(3), 
  9624 ;; Auto vars:     Size  Location     Type
  9625 ;;  n               2   20[COMRAM] int 
  9626 ;;  neg             2   13[COMRAM] int 
  9627 ;; Return value:  Size  Location     Type
  9628 ;;                  2    7[COMRAM] int 
  9629 ;; Registers used:
  9630 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9631 ;; Tracked objects:
  9632 ;;		On entry : 0/0
  9633 ;;		On exit  : 0/0
  9634 ;;		Unchanged: 0/0
  9635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9636 ;;      Params:         2       0       0       0       0       0       0
  9637 ;;      Locals:         9       0       0       0       0       0       0
  9638 ;;      Temps:          4       0       0       0       0       0       0
  9639 ;;      Totals:        15       0       0       0       0       0       0
  9640 ;;Total ram usage:       15 bytes
  9641 ;; Hardware stack levels used:    1
  9642 ;; Hardware stack levels required when called:    2
  9643 ;; This function calls:
  9644 ;;		___wmul
  9645 ;;		_isdigit
  9646 ;;		_isspace
  9647 ;; This function is called by:
  9648 ;;		_vfpfcnvrt
  9649 ;; This function uses a non-reentrant model
  9650 ;;
  9651                           
  9652                           	psect	text29
  9653  003C0C                     __ptext29:
  9654                           	callstack 0
  9655  003C0C                     _atoi:
  9656                           	callstack 0
  9657  003C0C  FFFF               	dw	65535	; assembler added errata NOP
  9658  003C0E  0E00               	movlw	0
  9659  003C10  6E16               	movwf	(atoi@n+1)^0,c
  9660  003C12  0E00               	movlw	0
  9661  003C14  6E15               	movwf	atoi@n^0,c
  9662  003C16  0E00               	movlw	0
  9663  003C18  6E0F               	movwf	(atoi@neg+1)^0,c
  9664  003C1A  0E00               	movlw	0
  9665  003C1C  6E0E               	movwf	atoi@neg^0,c
  9666  003C1E  EF14  F01E         	goto	l4059
  9667  003C22                     l4057:
  9668  003C22  FFFF               	dw	65535	; assembler added errata NOP
  9669  003C24  4A08               	infsnz	atoi@s^0,f,c
  9670  003C26  2A09               	incf	(atoi@s+1)^0,f,c
  9671  003C28                     l4059:
  9672  003C28  FFFF               	dw	65535	; assembler added errata NOP
  9673  003C2A  0E01               	movlw	1
  9674  003C2C  6E14               	movwf	_atoi$1806^0,c
  9675  003C2E  C008  FFF6         	movff	atoi@s,tblptrl
  9676  003C32  C009  FFF7         	movff	atoi@s+1,tblptrh
  9677  003C36                     	if	0	;tblptru may be non-zero
  9678  003C36                     	endif
  9679  003C36                     	if	0	;tblptru may be non-zero
  9680  003C36                     	endif
  9681  003C36  0008               	tblrd		*
  9682  003C38  FFFF               	dw	65535	; errata NOP
  9683  003C3A  50F5               	movf	tablat,w,c
  9684  003C3C  0A20               	xorlw	32
  9685  003C3E  B4D8               	btfsc	status,2,c
  9686  003C40  EF24  F01E         	goto	u4611
  9687  003C44  EF27  F01E         	goto	u4610
  9688  003C48                     u4611:
  9689  003C48  FFFF               	dw	65535	; assembler added errata NOP
  9690  003C4A  EF48  F01E         	goto	l4067
  9691  003C4E                     u4610:
  9692  003C4E  FFFF               	dw	65535	; assembler added errata NOP
  9693  003C50  0EF7               	movlw	247
  9694  003C52  6E0A               	movwf	??_atoi^0,c
  9695  003C54  0EFF               	movlw	255
  9696  003C56  6E0B               	movwf	(??_atoi+1)^0,c
  9697  003C58  C008  FFF6         	movff	atoi@s,tblptrl
  9698  003C5C  C009  FFF7         	movff	atoi@s+1,tblptrh
  9699  003C60                     	if	0	;tblptru may be non-zero
  9700  003C60                     	endif
  9701  003C60                     	if	0	;tblptru may be non-zero
  9702  003C60                     	endif
  9703  003C60  0008               	tblrd		*
  9704  003C62  FFFF               	dw	65535	; errata NOP
  9705  003C64  50F5               	movf	tablat,w,c
  9706  003C66  6E0C               	movwf	(??_atoi+2)^0,c
  9707  003C68  6A0D               	clrf	(??_atoi+3)^0,c
  9708  003C6A  500A               	movf	??_atoi^0,w,c
  9709  003C6C  260C               	addwf	(??_atoi+2)^0,f,c
  9710  003C6E  500B               	movf	(??_atoi+1)^0,w,c
  9711  003C70  220D               	addwfc	(??_atoi+3)^0,f,c
  9712  003C72  500D               	movf	(??_atoi+3)^0,w,c
  9713  003C74  E10A               	bnz	u4620
  9714  003C76  0E05               	movlw	5
  9715  003C78  5C0C               	subwf	(??_atoi+2)^0,w,c
  9716  003C7A  A0D8               	btfss	status,0,c
  9717  003C7C  EF42  F01E         	goto	u4621
  9718  003C80  EF45  F01E         	goto	u4620
  9719  003C84                     u4621:
  9720  003C84  FFFF               	dw	65535	; assembler added errata NOP
  9721  003C86  EF48  F01E         	goto	l4067
  9722  003C8A                     u4620:
  9723  003C8A  FFFF               	dw	65535	; assembler added errata NOP
  9724  003C8C  0E00               	movlw	0
  9725  003C8E  6E14               	movwf	_atoi$1806^0,c
  9726  003C90                     l4067:
  9727  003C90  FFFF               	dw	65535	; assembler added errata NOP
  9728  003C92  C014  F010         	movff	_atoi$1806,_atoi$1805
  9729  003C96  6A11               	clrf	(_atoi$1805+1)^0,c
  9730  003C98  5010               	movf	_atoi$1805^0,w,c
  9731  003C9A  1011               	iorwf	(_atoi$1805+1)^0,w,c
  9732  003C9C  A4D8               	btfss	status,2,c
  9733  003C9E  EF53  F01E         	goto	u4631
  9734  003CA2  EF56  F01E         	goto	u4630
  9735  003CA6                     u4631:
  9736  003CA6  FFFF               	dw	65535	; assembler added errata NOP
  9737  003CA8  EF11  F01E         	goto	l4057
  9738  003CAC                     u4630:
  9739  003CAC  FFFF               	dw	65535	; assembler added errata NOP
  9740  003CAE  EF63  F01E         	goto	l4077
  9741  003CB2                     l4073:
  9742  003CB2  FFFF               	dw	65535	; assembler added errata NOP
  9743  003CB4  0E00               	movlw	0
  9744  003CB6  6E0F               	movwf	(atoi@neg+1)^0,c
  9745  003CB8  0E01               	movlw	1
  9746  003CBA  6E0E               	movwf	atoi@neg^0,c
  9747  003CBC                     l4075:
  9748  003CBC  FFFF               	dw	65535	; assembler added errata NOP
  9749  003CBE  4A08               	infsnz	atoi@s^0,f,c
  9750  003CC0  2A09               	incf	(atoi@s+1)^0,f,c
  9751  003CC2  EF9D  F01E         	goto	l4083
  9752  003CC6                     l4077:
  9753  003CC6  FFFF               	dw	65535	; assembler added errata NOP
  9754  003CC8  C008  FFF6         	movff	atoi@s,tblptrl
  9755  003CCC  C009  FFF7         	movff	atoi@s+1,tblptrh
  9756  003CD0                     	if	0	;tblptru may be non-zero
  9757  003CD0                     	endif
  9758  003CD0                     	if	0	;tblptru may be non-zero
  9759  003CD0                     	endif
  9760  003CD0  0008               	tblrd		*
  9761  003CD2  FFFF               	dw	65535	; errata NOP
  9762  003CD4  50F5               	movf	tablat,w,c
  9763  003CD6  6E0A               	movwf	??_atoi^0,c
  9764  003CD8  6A0B               	clrf	(??_atoi+1)^0,c
  9765                           
  9766                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9767                           ; Switch size 1, requested type "simple"
  9768                           ; Number of cases is 1, Range of values is 0 to 0
  9769                           ; switch strategies available:
  9770                           ; Name         Instructions Cycles
  9771                           ; simple_byte            4     3 (average)
  9772                           ;	Chosen strategy is simple_byte
  9773  003CDA  500B               	movf	(??_atoi+1)^0,w,c
  9774  003CDC  0A00               	xorlw	0	; case 0
  9775  003CDE  B4D8               	btfsc	status,2,c
  9776  003CE0  EF74  F01E         	goto	l5699
  9777  003CE4  EF9D  F01E         	goto	l4083
  9778  003CE8                     l5699:
  9779  003CE8  FFFF               	dw	65535	; assembler added errata NOP
  9780                           
  9781                           ; Switch size 1, requested type "simple"
  9782                           ; Number of cases is 2, Range of values is 43 to 45
  9783                           ; switch strategies available:
  9784                           ; Name         Instructions Cycles
  9785                           ; simple_byte            7     4 (average)
  9786                           ;	Chosen strategy is simple_byte
  9787  003CEA  500A               	movf	??_atoi^0,w,c
  9788  003CEC  0A2B               	xorlw	43	; case 43
  9789  003CEE  B4D8               	btfsc	status,2,c
  9790  003CF0  EF5E  F01E         	goto	l4075
  9791  003CF4  0A06               	xorlw	6	; case 45
  9792  003CF6  B4D8               	btfsc	status,2,c
  9793  003CF8  EF59  F01E         	goto	l4073
  9794  003CFC  EF9D  F01E         	goto	l4083
  9795  003D00                     l4079:
  9796  003D00  FFFF               	dw	65535	; assembler added errata NOP
  9797  003D02  C015  F001         	movff	atoi@n,___wmul@multiplier
  9798  003D06  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  9799  003D0A  0E00               	movlw	0
  9800  003D0C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9801  003D0E  0E0A               	movlw	10
  9802  003D10  6E03               	movwf	___wmul@multiplicand^0,c
  9803  003D12  EC95  F033         	call	___wmul	;wreg free
  9804  003D16  C008  FFF6         	movff	atoi@s,tblptrl
  9805  003D1A  C009  FFF7         	movff	atoi@s+1,tblptrh
  9806  003D1E                     	if	0	;tblptru may be non-zero
  9807  003D1E                     	endif
  9808  003D1E                     	if	0	;tblptru may be non-zero
  9809  003D1E                     	endif
  9810  003D1E  0008               	tblrd		*
  9811  003D20  FFFF               	dw	65535	; errata NOP
  9812  003D22  50F5               	movf	tablat,w,c
  9813  003D24  5E01               	subwf	?___wmul^0,f,c
  9814  003D26  0E00               	movlw	0
  9815  003D28  5A02               	subwfb	(?___wmul+1)^0,f,c
  9816  003D2A  0E30               	movlw	48
  9817  003D2C  2401               	addwf	?___wmul^0,w,c
  9818  003D2E  6E15               	movwf	atoi@n^0,c
  9819  003D30  0E00               	movlw	0
  9820  003D32  2002               	addwfc	(?___wmul+1)^0,w,c
  9821  003D34  6E16               	movwf	(atoi@n+1)^0,c
  9822  003D36  EF5E  F01E         	goto	l4075
  9823  003D3A                     l4083:
  9824  003D3A  FFFF               	dw	65535	; assembler added errata NOP
  9825  003D3C  0ED0               	movlw	208
  9826  003D3E  6E0A               	movwf	??_atoi^0,c
  9827  003D40  0EFF               	movlw	255
  9828  003D42  6E0B               	movwf	(??_atoi+1)^0,c
  9829  003D44  C008  FFF6         	movff	atoi@s,tblptrl
  9830  003D48  C009  FFF7         	movff	atoi@s+1,tblptrh
  9831  003D4C                     	if	0	;tblptru may be non-zero
  9832  003D4C                     	endif
  9833  003D4C                     	if	0	;tblptru may be non-zero
  9834  003D4C                     	endif
  9835  003D4C  0008               	tblrd		*
  9836  003D4E  FFFF               	dw	65535	; errata NOP
  9837  003D50  50F5               	movf	tablat,w,c
  9838  003D52  6E0C               	movwf	(??_atoi+2)^0,c
  9839  003D54  6A0D               	clrf	(??_atoi+3)^0,c
  9840  003D56  500A               	movf	??_atoi^0,w,c
  9841  003D58  260C               	addwf	(??_atoi+2)^0,f,c
  9842  003D5A  500B               	movf	(??_atoi+1)^0,w,c
  9843  003D5C  220D               	addwfc	(??_atoi+3)^0,f,c
  9844  003D5E  500D               	movf	(??_atoi+3)^0,w,c
  9845  003D60  E10B               	bnz	u4640
  9846  003D62  0E0A               	movlw	10
  9847  003D64  5C0C               	subwf	(??_atoi+2)^0,w,c
  9848  003D66  A0D8               	btfss	status,0,c
  9849  003D68  EFB8  F01E         	goto	u4641
  9850  003D6C  EFBC  F01E         	goto	u4640
  9851  003D70                     u4641:
  9852  003D70  FFFF               	dw	65535	; assembler added errata NOP
  9853  003D72  0E01               	movlw	1
  9854  003D74  EFBE  F01E         	goto	u4650
  9855  003D78                     u4640:
  9856  003D78  FFFF               	dw	65535	; assembler added errata NOP
  9857  003D7A  0E00               	movlw	0
  9858  003D7C                     u4650:
  9859  003D7C  FFFF               	dw	65535	; assembler added errata NOP
  9860  003D7E  6E12               	movwf	_atoi$1807^0,c
  9861  003D80  6A13               	clrf	(_atoi$1807+1)^0,c
  9862  003D82  5012               	movf	_atoi$1807^0,w,c
  9863  003D84  1013               	iorwf	(_atoi$1807+1)^0,w,c
  9864  003D86  A4D8               	btfss	status,2,c
  9865  003D88  EFC8  F01E         	goto	u4661
  9866  003D8C  EFCB  F01E         	goto	u4660
  9867  003D90                     u4661:
  9868  003D90  FFFF               	dw	65535	; assembler added errata NOP
  9869  003D92  EF80  F01E         	goto	l4079
  9870  003D96                     u4660:
  9871  003D96  FFFF               	dw	65535	; assembler added errata NOP
  9872  003D98  500E               	movf	atoi@neg^0,w,c
  9873  003D9A  100F               	iorwf	(atoi@neg+1)^0,w,c
  9874  003D9C  A4D8               	btfss	status,2,c
  9875  003D9E  EFD3  F01E         	goto	u4671
  9876  003DA2  EFD6  F01E         	goto	u4670
  9877  003DA6                     u4671:
  9878  003DA6  FFFF               	dw	65535	; assembler added errata NOP
  9879  003DA8  EFE5  F01E         	goto	l1363
  9880  003DAC                     u4670:
  9881  003DAC  FFFF               	dw	65535	; assembler added errata NOP
  9882  003DAE  C015  F00A         	movff	atoi@n,??_atoi
  9883  003DB2  C016  F00B         	movff	atoi@n+1,??_atoi+1
  9884  003DB6  1E0A               	comf	??_atoi^0,f,c
  9885  003DB8  1E0B               	comf	(??_atoi+1)^0,f,c
  9886  003DBA  4A0A               	infsnz	??_atoi^0,f,c
  9887  003DBC  2A0B               	incf	(??_atoi+1)^0,f,c
  9888  003DBE  C00A  F008         	movff	??_atoi,?_atoi
  9889  003DC2  C00B  F009         	movff	??_atoi+1,?_atoi+1
  9890  003DC6  EFEA  F01E         	goto	l1366
  9891  003DCA                     l1363:
  9892  003DCA  FFFF               	dw	65535	; assembler added errata NOP
  9893  003DCC  C015  F008         	movff	atoi@n,?_atoi
  9894  003DD0  C016  F009         	movff	atoi@n+1,?_atoi+1
  9895  003DD4                     l1366:
  9896  003DD4  FFFF               	dw	65535	; assembler added errata NOP
  9897  003DD6  0012               	return		;funcret
  9898  003DD8  FFFF               	dw	65535	; errata NOP
  9899  003DDA                     __end_of_atoi:
  9900                           	callstack 0
  9901                           
  9902 ;; *************** function _isspace *****************
  9903 ;; Defined at:
  9904 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
  9905 ;; Parameters:    Size  Location     Type
  9906 ;;  c               2    0[COMRAM] int 
  9907 ;; Auto vars:     Size  Location     Type
  9908 ;;		None
  9909 ;; Return value:  Size  Location     Type
  9910 ;;                  2    0[COMRAM] int 
  9911 ;; Registers used:
  9912 ;;		wreg, status,2, status,0
  9913 ;; Tracked objects:
  9914 ;;		On entry : 0/0
  9915 ;;		On exit  : 0/0
  9916 ;;		Unchanged: 0/0
  9917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9918 ;;      Params:         2       0       0       0       0       0       0
  9919 ;;      Locals:         1       0       0       0       0       0       0
  9920 ;;      Temps:          4       0       0       0       0       0       0
  9921 ;;      Totals:         7       0       0       0       0       0       0
  9922 ;;Total ram usage:        7 bytes
  9923 ;; Hardware stack levels used:    1
  9924 ;; Hardware stack levels required when called:    1
  9925 ;; This function calls:
  9926 ;;		Nothing
  9927 ;; This function is called by:
  9928 ;;		_atoi
  9929 ;; This function uses a non-reentrant model
  9930 ;;
  9931                           
  9932                           	psect	text30
  9933  006AF8                     __ptext30:
  9934                           	callstack 0
  9935  006AF8                     _isspace:
  9936                           	callstack 24
  9937  006AF8  FFFF               	dw	65535	; assembler added errata NOP
  9938  006AFA  0E01               	movlw	1
  9939  006AFC  6E07               	movwf	_isspace$1833^0,c
  9940  006AFE  0E20               	movlw	32
  9941  006B00  1801               	xorwf	isspace@c^0,w,c
  9942  006B02  1002               	iorwf	(isspace@c+1)^0,w,c
  9943  006B04  B4D8               	btfsc	status,2,c
  9944  006B06  EF87  F035         	goto	u3991
  9945  006B0A  EF8A  F035         	goto	u3990
  9946  006B0E                     u3991:
  9947  006B0E  FFFF               	dw	65535	; assembler added errata NOP
  9948  006B10  EFA6  F035         	goto	l3783
  9949  006B14                     u3990:
  9950  006B14  FFFF               	dw	65535	; assembler added errata NOP
  9951  006B16  0EF7               	movlw	247
  9952  006B18  6E03               	movwf	??_isspace^0,c
  9953  006B1A  0EFF               	movlw	255
  9954  006B1C  6E04               	movwf	(??_isspace+1)^0,c
  9955  006B1E  C001  F005         	movff	isspace@c,??_isspace+2
  9956  006B22  C002  F006         	movff	isspace@c+1,??_isspace+3
  9957  006B26  5003               	movf	??_isspace^0,w,c
  9958  006B28  2605               	addwf	(??_isspace+2)^0,f,c
  9959  006B2A  5004               	movf	(??_isspace+1)^0,w,c
  9960  006B2C  2206               	addwfc	(??_isspace+3)^0,f,c
  9961  006B2E  5006               	movf	(??_isspace+3)^0,w,c
  9962  006B30  E10A               	bnz	u4000
  9963  006B32  0E05               	movlw	5
  9964  006B34  5C05               	subwf	(??_isspace+2)^0,w,c
  9965  006B36  A0D8               	btfss	status,0,c
  9966  006B38  EFA0  F035         	goto	u4001
  9967  006B3C  EFA3  F035         	goto	u4000
  9968  006B40                     u4001:
  9969  006B40  FFFF               	dw	65535	; assembler added errata NOP
  9970  006B42  EFA6  F035         	goto	l3783
  9971  006B46                     u4000:
  9972  006B46  FFFF               	dw	65535	; assembler added errata NOP
  9973  006B48  0E00               	movlw	0
  9974  006B4A  6E07               	movwf	_isspace$1833^0,c
  9975  006B4C                     l3783:
  9976  006B4C  FFFF               	dw	65535	; assembler added errata NOP
  9977  006B4E  C007  F001         	movff	_isspace$1833,?_isspace
  9978  006B52  6A02               	clrf	(?_isspace+1)^0,c
  9979  006B54  0012               	return		;funcret
  9980  006B56  FFFF               	dw	65535	; errata NOP
  9981  006B58                     __end_of_isspace:
  9982                           	callstack 0
  9983                           
  9984 ;; *************** function _isdigit *****************
  9985 ;; Defined at:
  9986 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
  9987 ;; Parameters:    Size  Location     Type
  9988 ;;  c               2    0[COMRAM] int 
  9989 ;; Auto vars:     Size  Location     Type
  9990 ;;		None
  9991 ;; Return value:  Size  Location     Type
  9992 ;;                  2    0[COMRAM] int 
  9993 ;; Registers used:
  9994 ;;		wreg, status,2, status,0
  9995 ;; Tracked objects:
  9996 ;;		On entry : 0/0
  9997 ;;		On exit  : 0/0
  9998 ;;		Unchanged: 0/0
  9999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10000 ;;      Params:         2       0       0       0       0       0       0
 10001 ;;      Locals:         0       0       0       0       0       0       0
 10002 ;;      Temps:          4       0       0       0       0       0       0
 10003 ;;      Totals:         6       0       0       0       0       0       0
 10004 ;;Total ram usage:        6 bytes
 10005 ;; Hardware stack levels used:    1
 10006 ;; Hardware stack levels required when called:    1
 10007 ;; This function calls:
 10008 ;;		Nothing
 10009 ;; This function is called by:
 10010 ;;		_vfpfcnvrt
 10011 ;;		_atoi
 10012 ;; This function uses a non-reentrant model
 10013 ;;
 10014                           
 10015                           	psect	text31
 10016  0068AA                     __ptext31:
 10017                           	callstack 0
 10018  0068AA                     _isdigit:
 10019                           	callstack 25
 10020  0068AA  FFFF               	dw	65535	; assembler added errata NOP
 10021  0068AC  0ED0               	movlw	208
 10022  0068AE  6E03               	movwf	??_isdigit^0,c
 10023  0068B0  0EFF               	movlw	255
 10024  0068B2  6E04               	movwf	(??_isdigit+1)^0,c
 10025  0068B4  C001  F005         	movff	isdigit@c,??_isdigit+2
 10026  0068B8  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 10027  0068BC  5003               	movf	??_isdigit^0,w,c
 10028  0068BE  2605               	addwf	(??_isdigit+2)^0,f,c
 10029  0068C0  5004               	movf	(??_isdigit+1)^0,w,c
 10030  0068C2  2206               	addwfc	(??_isdigit+3)^0,f,c
 10031  0068C4  5006               	movf	(??_isdigit+3)^0,w,c
 10032  0068C6  E10B               	bnz	u3970
 10033  0068C8  0E0A               	movlw	10
 10034  0068CA  5C05               	subwf	(??_isdigit+2)^0,w,c
 10035  0068CC  A0D8               	btfss	status,0,c
 10036  0068CE  EF6B  F034         	goto	u3971
 10037  0068D2  EF6F  F034         	goto	u3970
 10038  0068D6                     u3971:
 10039  0068D6  FFFF               	dw	65535	; assembler added errata NOP
 10040  0068D8  0E01               	movlw	1
 10041  0068DA  EF71  F034         	goto	u3980
 10042  0068DE                     u3970:
 10043  0068DE  FFFF               	dw	65535	; assembler added errata NOP
 10044  0068E0  0E00               	movlw	0
 10045  0068E2                     u3980:
 10046  0068E2  FFFF               	dw	65535	; assembler added errata NOP
 10047  0068E4  6E01               	movwf	?_isdigit^0,c
 10048  0068E6  6A02               	clrf	(?_isdigit+1)^0,c
 10049  0068E8  0012               	return		;funcret
 10050  0068EA  FFFF               	dw	65535	; errata NOP
 10051  0068EC                     __end_of_isdigit:
 10052                           	callstack 0
 10053                           
 10054 ;; *************** function ___wmul *****************
 10055 ;; Defined at:
 10056 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
 10057 ;; Parameters:    Size  Location     Type
 10058 ;;  multiplier      2    0[COMRAM] unsigned int 
 10059 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10060 ;; Auto vars:     Size  Location     Type
 10061 ;;  product         2    4[COMRAM] unsigned int 
 10062 ;; Return value:  Size  Location     Type
 10063 ;;                  2    0[COMRAM] unsigned int 
 10064 ;; Registers used:
 10065 ;;		wreg, status,2, status,0, prodl, prodh
 10066 ;; Tracked objects:
 10067 ;;		On entry : 0/0
 10068 ;;		On exit  : 0/0
 10069 ;;		Unchanged: 0/0
 10070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10071 ;;      Params:         4       0       0       0       0       0       0
 10072 ;;      Locals:         2       0       0       0       0       0       0
 10073 ;;      Temps:          0       0       0       0       0       0       0
 10074 ;;      Totals:         6       0       0       0       0       0       0
 10075 ;;Total ram usage:        6 bytes
 10076 ;; Hardware stack levels used:    1
 10077 ;; Hardware stack levels required when called:    1
 10078 ;; This function calls:
 10079 ;;		Nothing
 10080 ;; This function is called by:
 10081 ;;		_main
 10082 ;;		_atoi
 10083 ;; This function uses a non-reentrant model
 10084 ;;
 10085                           
 10086                           	psect	text32
 10087  00672A                     __ptext32:
 10088                           	callstack 0
 10089  00672A                     ___wmul:
 10090                           	callstack 0
 10091  00672A  FFFF               	dw	65535	; assembler added errata NOP
 10092  00672C  5001               	movf	___wmul@multiplier^0,w,c
 10093  00672E  0203               	mulwf	___wmul@multiplicand^0,c
 10094  006730  CFF3 F005          	movff	prodl,___wmul@product
 10095  006734  CFF4 F006          	movff	prodh,___wmul@product+1
 10096  006738  5001               	movf	___wmul@multiplier^0,w,c
 10097  00673A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 10098  00673C  50F3               	movf	243,w,c
 10099  00673E  2606               	addwf	(___wmul@product+1)^0,f,c
 10100  006740  5002               	movf	(___wmul@multiplier+1)^0,w,c
 10101  006742  0203               	mulwf	___wmul@multiplicand^0,c
 10102  006744  50F3               	movf	243,w,c
 10103  006746  2606               	addwf	(___wmul@product+1)^0,f,c
 10104  006748  C005  F001         	movff	___wmul@product,?___wmul
 10105  00674C  C006  F002         	movff	___wmul@product+1,?___wmul+1
 10106  006750  0012               	return		;funcret
 10107  006752  FFFF               	dw	65535	; errata NOP
 10108  006754                     __end_of___wmul:
 10109                           	callstack 0
 10110                           
 10111 ;; *************** function _serial_tx_char *****************
 10112 ;; Defined at:
 10113 ;;		line 39 in file "serial_rs232.c"
 10114 ;; Parameters:    Size  Location     Type
 10115 ;;  val             1    wreg     unsigned char 
 10116 ;; Auto vars:     Size  Location     Type
 10117 ;;  val             1    0[COMRAM] unsigned char 
 10118 ;; Return value:  Size  Location     Type
 10119 ;;                  1    wreg      void 
 10120 ;; Registers used:
 10121 ;;		wreg
 10122 ;; Tracked objects:
 10123 ;;		On entry : 0/0
 10124 ;;		On exit  : 0/0
 10125 ;;		Unchanged: 0/0
 10126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10127 ;;      Params:         0       0       0       0       0       0       0
 10128 ;;      Locals:         1       0       0       0       0       0       0
 10129 ;;      Temps:          0       0       0       0       0       0       0
 10130 ;;      Totals:         1       0       0       0       0       0       0
 10131 ;;Total ram usage:        1 bytes
 10132 ;; Hardware stack levels used:    1
 10133 ;; Hardware stack levels required when called:    1
 10134 ;; This function calls:
 10135 ;;		Nothing
 10136 ;; This function is called by:
 10137 ;;		_main
 10138 ;;		_serial_tx_string
 10139 ;; This function uses a non-reentrant model
 10140 ;;
 10141                           
 10142                           	psect	text33
 10143  006600                     __ptext33:
 10144                           	callstack 0
 10145  006600                     _serial_tx_char:
 10146                           	callstack 0
 10147  006600  FFFF               	dw	65535	; assembler added errata NOP
 10148                           
 10149                           ;incstack = 0
 10150                           ;serial_tx_char@val stored from wreg
 10151  006602  6E01               	movwf	serial_tx_char@val^0,c
 10152  006604                     
 10153                           ;serial_rs232.c: 40:     TXREG = val;
 10154  006604  C001  FFAD         	movff	serial_tx_char@val,4013	;volatile
 10155  006608                     l24:
 10156  006608  FFFF               	dw	65535	; assembler added errata NOP
 10157  00660A  A2AC               	btfss	172,1,c	;volatile
 10158  00660C  EF0A  F033         	goto	u6521
 10159  006610  EF0D  F033         	goto	u6520
 10160  006614                     u6521:
 10161  006614  FFFF               	dw	65535	; assembler added errata NOP
 10162  006616  EF04  F033         	goto	l24
 10163  00661A                     u6520:
 10164  00661A  FFFF               	dw	65535	; assembler added errata NOP
 10165  00661C  0012               	return		;funcret
 10166  00661E  FFFF               	dw	65535	; errata NOP
 10167  006620                     __end_of_serial_tx_char:
 10168                           	callstack 0
 10169                           
 10170 ;; *************** function _reach_goal *****************
 10171 ;; Defined at:
 10172 ;;		line 29 in file "stepper_motor.c"
 10173 ;; Parameters:    Size  Location     Type
 10174 ;;  stepper_moto    2    6[COMRAM] PTR struct .
 10175 ;;		 -> end_effector_stepper(14), joint_stepper(14), 
 10176 ;;  goal_to_reac    2    8[COMRAM] int 
 10177 ;; Auto vars:     Size  Location     Type
 10178 ;;		None
 10179 ;; Return value:  Size  Location     Type
 10180 ;;                  2    6[COMRAM] int 
 10181 ;; Registers used:
 10182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10183 ;; Tracked objects:
 10184 ;;		On entry : 0/0
 10185 ;;		On exit  : 0/0
 10186 ;;		Unchanged: 0/0
 10187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10188 ;;      Params:         4       0       0       0       0       0       0
 10189 ;;      Locals:         0       0       0       0       0       0       0
 10190 ;;      Temps:          3       0       0       0       0       0       0
 10191 ;;      Totals:         7       0       0       0       0       0       0
 10192 ;;Total ram usage:        7 bytes
 10193 ;; Hardware stack levels used:    1
 10194 ;; Hardware stack levels required when called:    2
 10195 ;; This function calls:
 10196 ;;		_turn_on_current_coil
 10197 ;;		_update_current_coil
 10198 ;; This function is called by:
 10199 ;;		_main
 10200 ;; This function uses a non-reentrant model
 10201 ;;
 10202                           
 10203                           	psect	text34
 10204  006D64                     __ptext34:
 10205                           	callstack 0
 10206  006D64                     _reach_goal:
 10207                           	callstack 0
 10208  006D64  FFFF               	dw	65535	; assembler added errata NOP
 10209  006D66                     
 10210                           ;stepper_motor.c: 30:     if(stepper_motor -> step_counter >= goal_to_reach){
 10211  006D66  EE20 F002          	lfsr	2,2
 10212  006D6A  5007               	movf	reach_goal@stepper_motor^0,w,c
 10213  006D6C  26D9               	addwf	fsr2l,f,c
 10214  006D6E  5008               	movf	(reach_goal@stepper_motor+1)^0,w,c
 10215  006D70  22DA               	addwfc	fsr2h,f,c
 10216  006D72  5009               	movf	reach_goal@goal_to_reach^0,w,c
 10217  006D74  5CDE               	subwf	postinc2,w,c
 10218  006D76  50DE               	movf	postinc2,w,c
 10219  006D78  0A80               	xorlw	128
 10220  006D7A  6E0D               	movwf	(??_reach_goal+2)^0,c
 10221  006D7C  500A               	movf	(reach_goal@goal_to_reach+1)^0,w,c
 10222  006D7E  0A80               	xorlw	128
 10223  006D80  580D               	subwfb	(??_reach_goal+2)^0,w,c
 10224  006D82  A0D8               	btfss	status,0,c
 10225  006D84  EFC6  F036         	goto	u6671
 10226  006D88  EFC9  F036         	goto	u6670
 10227  006D8C                     u6671:
 10228  006D8C  FFFF               	dw	65535	; assembler added errata NOP
 10229  006D8E  EFDA  F036         	goto	l5445
 10230  006D92                     u6670:
 10231  006D92  FFFF               	dw	65535	; assembler added errata NOP
 10232  006D94                     
 10233                           ;stepper_motor.c: 31:         stepper_motor -> step_counter = 0;
 10234  006D94  EE20 F002          	lfsr	2,2
 10235  006D98  5007               	movf	reach_goal@stepper_motor^0,w,c
 10236  006D9A  26D9               	addwf	fsr2l,f,c
 10237  006D9C  5008               	movf	(reach_goal@stepper_motor+1)^0,w,c
 10238  006D9E  22DA               	addwfc	fsr2h,f,c
 10239  006DA0  0E00               	movlw	0
 10240  006DA2  6EDE               	movwf	postinc2,c
 10241  006DA4  0E00               	movlw	0
 10242  006DA6  6EDD               	movwf	postdec2,c
 10243  006DA8                     
 10244                           ;stepper_motor.c: 32:         return 1;
 10245  006DA8  0E00               	movlw	0
 10246  006DAA  6E08               	movwf	(?_reach_goal+1)^0,c
 10247  006DAC  0E01               	movlw	1
 10248  006DAE  6E07               	movwf	?_reach_goal^0,c
 10249  006DB0  EFEB  F036         	goto	l327
 10250  006DB4                     l5445:
 10251  006DB4  FFFF               	dw	65535	; assembler added errata NOP
 10252                           
 10253                           ;stepper_motor.c: 34:         turn_on_current_coil(stepper_motor);
 10254  006DB6  C007  F001         	movff	reach_goal@stepper_motor,turn_on_current_coil@stepper_motor
 10255  006DBA  C008  F002         	movff	reach_goal@stepper_motor+1,turn_on_current_coil@stepper_motor+1
 10256  006DBE  ECF5  F033         	call	_turn_on_current_coil	;wreg free
 10257                           
 10258                           ;stepper_motor.c: 35:         update_current_coil(stepper_motor);
 10259  006DC2  C007  F001         	movff	reach_goal@stepper_motor,update_current_coil@stepper_motor
 10260  006DC6  C008  F002         	movff	reach_goal@stepper_motor+1,update_current_coil@stepper_motor+1
 10261  006DCA  EC92  F038         	call	_update_current_coil	;wreg free
 10262  006DCE                     
 10263                           ;stepper_motor.c: 36:         return 0;
 10264  006DCE  0E00               	movlw	0
 10265  006DD0  6E08               	movwf	(?_reach_goal+1)^0,c
 10266  006DD2  0E00               	movlw	0
 10267  006DD4  6E07               	movwf	?_reach_goal^0,c
 10268  006DD6                     l327:
 10269  006DD6  FFFF               	dw	65535	; assembler added errata NOP
 10270  006DD8  0012               	return		;funcret
 10271  006DDA  FFFF               	dw	65535	; errata NOP
 10272  006DDC                     __end_of_reach_goal:
 10273                           	callstack 0
 10274                           
 10275 ;; *************** function _update_current_coil *****************
 10276 ;; Defined at:
 10277 ;;		line 18 in file "stepper_motor.c"
 10278 ;; Parameters:    Size  Location     Type
 10279 ;;  stepper_moto    2    0[COMRAM] PTR struct .
 10280 ;;		 -> end_effector_stepper(14), joint_stepper(14), 
 10281 ;; Auto vars:     Size  Location     Type
 10282 ;;		None
 10283 ;; Return value:  Size  Location     Type
 10284 ;;                  1    wreg      void 
 10285 ;; Registers used:
 10286 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10287 ;; Tracked objects:
 10288 ;;		On entry : 0/0
 10289 ;;		On exit  : 0/0
 10290 ;;		Unchanged: 0/0
 10291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10292 ;;      Params:         2       0       0       0       0       0       0
 10293 ;;      Locals:         0       0       0       0       0       0       0
 10294 ;;      Temps:          4       0       0       0       0       0       0
 10295 ;;      Totals:         6       0       0       0       0       0       0
 10296 ;;Total ram usage:        6 bytes
 10297 ;; Hardware stack levels used:    1
 10298 ;; Hardware stack levels required when called:    1
 10299 ;; This function calls:
 10300 ;;		Nothing
 10301 ;; This function is called by:
 10302 ;;		_reach_goal
 10303 ;; This function uses a non-reentrant model
 10304 ;;
 10305                           
 10306                           	psect	text35
 10307  007124                     __ptext35:
 10308                           	callstack 0
 10309  007124                     _update_current_coil:
 10310                           	callstack 0
 10311  007124  FFFF               	dw	65535	; assembler added errata NOP
 10312  007126                     
 10313                           ;stepper_motor.c: 19:     stepper_motor -> current_coil = stepper_motor -> current_coil 
      +                          + stepper_motor -> direction;
 10314  007126  EE20 F004          	lfsr	2,4
 10315  00712A  5001               	movf	update_current_coil@stepper_motor^0,w,c
 10316  00712C  26D9               	addwf	fsr2l,f,c
 10317  00712E  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
 10318  007130  22DA               	addwfc	fsr2h,f,c
 10319  007132  CFDE F003          	movff	postinc2,??_update_current_coil
 10320  007136  CFDD F004          	movff	postdec2,??_update_current_coil+1
 10321  00713A  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10322  00713E  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10323  007142  CFDE F005          	movff	postinc2,??_update_current_coil+2
 10324  007146  CFDD F006          	movff	postdec2,??_update_current_coil+3
 10325  00714A  5003               	movf	??_update_current_coil^0,w,c
 10326  00714C  2605               	addwf	(??_update_current_coil+2)^0,f,c
 10327  00714E  5004               	movf	(??_update_current_coil+1)^0,w,c
 10328  007150  2206               	addwfc	(??_update_current_coil+3)^0,f,c
 10329  007152  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10330  007156  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10331  00715A  C005  FFDE         	movff	??_update_current_coil+2,postinc2
 10332  00715E  C006  FFDD         	movff	??_update_current_coil+3,postdec2
 10333                           
 10334                           ;stepper_motor.c: 20:     stepper_motor -> step_counter = stepper_motor -> step_counter 
      +                          + 1;
 10335  007162  EE20 F002          	lfsr	2,2
 10336  007166  5001               	movf	update_current_coil@stepper_motor^0,w,c
 10337  007168  26D9               	addwf	fsr2l,f,c
 10338  00716A  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
 10339  00716C  22DA               	addwfc	fsr2h,f,c
 10340  00716E  CFDE F003          	movff	postinc2,??_update_current_coil
 10341  007172  CFDD F004          	movff	postdec2,??_update_current_coil+1
 10342  007176  0E01               	movlw	1
 10343  007178  2603               	addwf	??_update_current_coil^0,f,c
 10344  00717A  0E00               	movlw	0
 10345  00717C  2204               	addwfc	(??_update_current_coil+1)^0,f,c
 10346  00717E  EE20 F002          	lfsr	2,2
 10347  007182  5001               	movf	update_current_coil@stepper_motor^0,w,c
 10348  007184  26D9               	addwf	fsr2l,f,c
 10349  007186  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
 10350  007188  22DA               	addwfc	fsr2h,f,c
 10351  00718A  C003  FFDE         	movff	??_update_current_coil,postinc2
 10352  00718E  C004  FFDD         	movff	??_update_current_coil+1,postdec2
 10353                           
 10354                           ;stepper_motor.c: 21:     if (stepper_motor -> current_coil == -1) {
 10355  007192  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10356  007196  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10357  00719A  28DE               	incf	postinc2,w,c
 10358  00719C  E106               	bnz	u6391
 10359  00719E  28DE               	incf	postinc2,w,c
 10360  0071A0  A4D8               	btfss	status,2,c
 10361  0071A2  EFD5  F038         	goto	u6391
 10362  0071A6  EFD8  F038         	goto	u6390
 10363  0071AA                     u6391:
 10364  0071AA  FFFF               	dw	65535	; assembler added errata NOP
 10365  0071AC  EFE3  F038         	goto	l5149
 10366  0071B0                     u6390:
 10367  0071B0  FFFF               	dw	65535	; assembler added errata NOP
 10368  0071B2                     
 10369                           ;stepper_motor.c: 22:         stepper_motor -> current_coil = 3;
 10370  0071B2  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10371  0071B6  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10372  0071BA  0E03               	movlw	3
 10373  0071BC  6EDE               	movwf	postinc2,c
 10374  0071BE  0E00               	movlw	0
 10375  0071C0  6EDD               	movwf	postdec2,c
 10376                           
 10377                           ;stepper_motor.c: 23:     } else if(stepper_motor -> current_coil == 4) {
 10378  0071C2  EFFC  F038         	goto	l323
 10379  0071C6                     l5149:
 10380  0071C6  FFFF               	dw	65535	; assembler added errata NOP
 10381  0071C8  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10382  0071CC  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10383  0071D0  0E04               	movlw	4
 10384  0071D2  18DE               	xorwf	postinc2,w,c
 10385  0071D4  10DE               	iorwf	postinc2,w,c
 10386  0071D6  A4D8               	btfss	status,2,c
 10387  0071D8  EFF0  F038         	goto	u6401
 10388  0071DC  EFF3  F038         	goto	u6400
 10389  0071E0                     u6401:
 10390  0071E0  FFFF               	dw	65535	; assembler added errata NOP
 10391  0071E2  EFFC  F038         	goto	l323
 10392  0071E6                     u6400:
 10393  0071E6  FFFF               	dw	65535	; assembler added errata NOP
 10394  0071E8                     
 10395                           ;stepper_motor.c: 24:         stepper_motor -> current_coil = 0;
 10396  0071E8  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10397  0071EC  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10398  0071F0  0E00               	movlw	0
 10399  0071F2  6EDE               	movwf	postinc2,c
 10400  0071F4  0E00               	movlw	0
 10401  0071F6  6EDD               	movwf	postdec2,c
 10402  0071F8                     l323:
 10403  0071F8  FFFF               	dw	65535	; assembler added errata NOP
 10404  0071FA  0012               	return		;funcret
 10405  0071FC  FFFF               	dw	65535	; errata NOP
 10406  0071FE                     __end_of_update_current_coil:
 10407                           	callstack 0
 10408                           
 10409 ;; *************** function _turn_on_current_coil *****************
 10410 ;; Defined at:
 10411 ;;		line 13 in file "stepper_motor.c"
 10412 ;; Parameters:    Size  Location     Type
 10413 ;;  stepper_moto    2    0[COMRAM] PTR struct .
 10414 ;;		 -> end_effector_stepper(14), joint_stepper(14), 
 10415 ;; Auto vars:     Size  Location     Type
 10416 ;;		None
 10417 ;; Return value:  Size  Location     Type
 10418 ;;                  1    wreg      void 
 10419 ;; Registers used:
 10420 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10421 ;; Tracked objects:
 10422 ;;		On entry : 0/0
 10423 ;;		On exit  : 0/0
 10424 ;;		Unchanged: 0/0
 10425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10426 ;;      Params:         2       0       0       0       0       0       0
 10427 ;;      Locals:         0       0       0       0       0       0       0
 10428 ;;      Temps:          4       0       0       0       0       0       0
 10429 ;;      Totals:         6       0       0       0       0       0       0
 10430 ;;Total ram usage:        6 bytes
 10431 ;; Hardware stack levels used:    1
 10432 ;; Hardware stack levels required when called:    1
 10433 ;; This function calls:
 10434 ;;		Nothing
 10435 ;; This function is called by:
 10436 ;;		_reach_goal
 10437 ;; This function uses a non-reentrant model
 10438 ;;
 10439                           
 10440                           	psect	text36
 10441  0067EA                     __ptext36:
 10442                           	callstack 0
 10443  0067EA                     _turn_on_current_coil:
 10444                           	callstack 0
 10445  0067EA  FFFF               	dw	65535	; assembler added errata NOP
 10446  0067EC                     
 10447                           ;stepper_motor.c: 14:     LATB = stepper_motor -> hex_coil_register_values[stepper_motor
      +                           -> current_coil];
 10448  0067EC  C001  FFD9         	movff	turn_on_current_coil@stepper_motor,fsr2l
 10449  0067F0  C002  FFDA         	movff	turn_on_current_coil@stepper_motor+1,fsr2h
 10450  0067F4  CFDE F003          	movff	postinc2,??_turn_on_current_coil
 10451  0067F8  CFDD F004          	movff	postdec2,??_turn_on_current_coil+1
 10452  0067FC  90D8               	bcf	status,0,c
 10453  0067FE  3603               	rlcf	??_turn_on_current_coil^0,f,c
 10454  006800  3604               	rlcf	(??_turn_on_current_coil+1)^0,f,c
 10455  006802  C001  F005         	movff	turn_on_current_coil@stepper_motor,??_turn_on_current_coil+2
 10456  006806  C002  F006         	movff	turn_on_current_coil@stepper_motor+1,??_turn_on_current_coil+3
 10457  00680A  5003               	movf	??_turn_on_current_coil^0,w,c
 10458  00680C  2605               	addwf	(??_turn_on_current_coil+2)^0,f,c
 10459  00680E  5004               	movf	(??_turn_on_current_coil+1)^0,w,c
 10460  006810  2206               	addwfc	(??_turn_on_current_coil+3)^0,f,c
 10461  006812  0E06               	movlw	6
 10462  006814  2405               	addwf	(??_turn_on_current_coil+2)^0,w,c
 10463  006816  6ED9               	movwf	fsr2l,c
 10464  006818  0E00               	movlw	0
 10465  00681A  2006               	addwfc	(??_turn_on_current_coil+3)^0,w,c
 10466  00681C  6EDA               	movwf	fsr2h,c
 10467  00681E  50DF               	movf	indf2,w,c
 10468  006820  6E8A               	movwf	138,c	;volatile
 10469  006822  0012               	return		;funcret
 10470  006824  FFFF               	dw	65535	; errata NOP
 10471  006826                     __end_of_turn_on_current_coil:
 10472                           	callstack 0
 10473                           
 10474 ;; *************** function _lcd_str *****************
 10475 ;; Defined at:
 10476 ;;		line 62 in file "lcd.c"
 10477 ;; Parameters:    Size  Location     Type
 10478 ;;  str             2    2[COMRAM] PTR const unsigned char 
 10479 ;;		 -> main@greet_str(160), STR_9(22), 
 10480 ;; Auto vars:     Size  Location     Type
 10481 ;;  i               1    6[COMRAM] unsigned char 
 10482 ;; Return value:  Size  Location     Type
 10483 ;;                  1    wreg      void 
 10484 ;; Registers used:
 10485 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10486 ;; Tracked objects:
 10487 ;;		On entry : 0/0
 10488 ;;		On exit  : 0/0
 10489 ;;		Unchanged: 0/0
 10490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10491 ;;      Params:         2       0       0       0       0       0       0
 10492 ;;      Locals:         1       0       0       0       0       0       0
 10493 ;;      Temps:          2       0       0       0       0       0       0
 10494 ;;      Totals:         5       0       0       0       0       0       0
 10495 ;;Total ram usage:        5 bytes
 10496 ;; Hardware stack levels used:    1
 10497 ;; Hardware stack levels required when called:    3
 10498 ;; This function calls:
 10499 ;;		_lcd_dat
 10500 ;; This function is called by:
 10501 ;;		_main
 10502 ;; This function uses a non-reentrant model
 10503 ;;
 10504                           
 10505                           	psect	text37
 10506  006E5A                     __ptext37:
 10507                           	callstack 0
 10508  006E5A                     _lcd_str:
 10509                           	callstack 0
 10510  006E5A  FFFF               	dw	65535	; assembler added errata NOP
 10511  006E5C                     
 10512                           ;lcd.c: 62: void lcd_str(const char* str);lcd.c: 63: {;lcd.c: 64:     unsigned char i=0;
 10513  006E5C  0E00               	movlw	0
 10514  006E5E  6E07               	movwf	lcd_str@i^0,c
 10515                           
 10516                           ;lcd.c: 66:     while(str[i] != 0 )
 10517  006E60  EF4D  F037         	goto	l5353
 10518  006E64                     l5349:
 10519  006E64  FFFF               	dw	65535	; assembler added errata NOP
 10520                           
 10521                           ;lcd.c: 67:     {;lcd.c: 68:       lcd_dat(str[i]);
 10522  006E66  5007               	movf	lcd_str@i^0,w,c
 10523  006E68  2403               	addwf	lcd_str@str^0,w,c
 10524  006E6A  6E05               	movwf	??_lcd_str^0,c
 10525  006E6C  0E00               	movlw	0
 10526  006E6E  2004               	addwfc	(lcd_str@str+1)^0,w,c
 10527  006E70  6E06               	movwf	(??_lcd_str+1)^0,c
 10528  006E72  C005  FFF6         	movff	??_lcd_str,tblptrl
 10529  006E76  C006  FFF7         	movff	??_lcd_str+1,tblptrh
 10530  006E7A  6AF8               	clrf	tblptru,c
 10531  006E7C  0E05               	movlw	(high __ramtop+-1)
 10532  006E7E  64F7               	cpfsgt	tblptrh,c
 10533  006E80  D004               	bra	u6547
 10534  006E82  0008               	tblrd		*
 10535  006E84  FFFF               	dw	65535	; errata NOP
 10536  006E86  50F5               	movf	tablat,w,c
 10537  006E88  D005               	bra	u6540
 10538  006E8A                     u6547:
 10539  006E8A  CFF6 FFE1          	movff	tblptrl,fsr1l
 10540  006E8E  CFF7 FFE2          	movff	tblptrh,fsr1h
 10541  006E92  50E7               	movf	indf1,w,c
 10542  006E94                     u6540:
 10543  006E94  EC80  F033         	call	_lcd_dat
 10544  006E98                     
 10545                           ;lcd.c: 69:       i++;
 10546  006E98  2A07               	incf	lcd_str@i^0,f,c
 10547  006E9A                     l5353:
 10548  006E9A  FFFF               	dw	65535	; assembler added errata NOP
 10549                           
 10550                           ;lcd.c: 66:     while(str[i] != 0 )
 10551  006E9C  5007               	movf	lcd_str@i^0,w,c
 10552  006E9E  2403               	addwf	lcd_str@str^0,w,c
 10553  006EA0  6E05               	movwf	??_lcd_str^0,c
 10554  006EA2  0E00               	movlw	0
 10555  006EA4  2004               	addwfc	(lcd_str@str+1)^0,w,c
 10556  006EA6  6E06               	movwf	(??_lcd_str+1)^0,c
 10557  006EA8  C005  FFF6         	movff	??_lcd_str,tblptrl
 10558  006EAC  C006  FFF7         	movff	??_lcd_str+1,tblptrh
 10559  006EB0  6AF8               	clrf	tblptru,c
 10560  006EB2  0E05               	movlw	(high __ramtop+-1)
 10561  006EB4  64F7               	cpfsgt	tblptrh,c
 10562  006EB6  D004               	bra	u6557
 10563  006EB8  0008               	tblrd		*
 10564  006EBA  FFFF               	dw	65535	; errata NOP
 10565  006EBC  50F5               	movf	tablat,w,c
 10566  006EBE  D005               	bra	u6550
 10567  006EC0                     u6557:
 10568  006EC0  CFF6 FFE1          	movff	tblptrl,fsr1l
 10569  006EC4  CFF7 FFE2          	movff	tblptrh,fsr1h
 10570  006EC8  50E7               	movf	indf1,w,c
 10571  006ECA                     u6550:
 10572  006ECA  0900               	iorlw	0
 10573  006ECC  A4D8               	btfss	status,2,c
 10574  006ECE  EF6B  F037         	goto	u6561
 10575  006ED2  EF6E  F037         	goto	u6560
 10576  006ED6                     u6561:
 10577  006ED6  FFFF               	dw	65535	; assembler added errata NOP
 10578  006ED8  EF32  F037         	goto	l5349
 10579  006EDC                     u6560:
 10580  006EDC  FFFF               	dw	65535	; assembler added errata NOP
 10581  006EDE  0012               	return		;funcret
 10582  006EE0  FFFF               	dw	65535	; errata NOP
 10583  006EE2                     __end_of_lcd_str:
 10584                           	callstack 0
 10585                           
 10586 ;; *************** function _lcd_dat *****************
 10587 ;; Defined at:
 10588 ;;		line 21 in file "lcd.c"
 10589 ;; Parameters:    Size  Location     Type
 10590 ;;  val             1    wreg     unsigned char 
 10591 ;; Auto vars:     Size  Location     Type
 10592 ;;  val             1    1[COMRAM] unsigned char 
 10593 ;; Return value:  Size  Location     Type
 10594 ;;                  1    wreg      void 
 10595 ;; Registers used:
 10596 ;;		wreg, status,2, cstack
 10597 ;; Tracked objects:
 10598 ;;		On entry : 0/0
 10599 ;;		On exit  : 0/0
 10600 ;;		Unchanged: 0/0
 10601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10602 ;;      Params:         0       0       0       0       0       0       0
 10603 ;;      Locals:         1       0       0       0       0       0       0
 10604 ;;      Temps:          0       0       0       0       0       0       0
 10605 ;;      Totals:         1       0       0       0       0       0       0
 10606 ;;Total ram usage:        1 bytes
 10607 ;; Hardware stack levels used:    1
 10608 ;; Hardware stack levels required when called:    2
 10609 ;; This function calls:
 10610 ;;		_lcd_wr
 10611 ;; This function is called by:
 10612 ;;		_lcd_str
 10613 ;;		_state_translator_fpga_to_micro
 10614 ;; This function uses a non-reentrant model
 10615 ;;
 10616                           
 10617                           	psect	text38
 10618  006700                     __ptext38:
 10619                           	callstack 0
 10620  006700                     _lcd_dat:
 10621                           	callstack 0
 10622  006700  FFFF               	dw	65535	; assembler added errata NOP
 10623                           
 10624                           ;incstack = 0
 10625                           ;lcd_dat@val stored from wreg
 10626  006702  6E02               	movwf	lcd_dat@val^0,c
 10627  006704                     
 10628                           ;lcd.c: 21: void lcd_dat(unsigned char val);lcd.c: 22: {;lcd.c: 23:  PORTEbits.RE1=1;
 10629  006704  8284               	bsf	132,1,c	;volatile
 10630  006706                     
 10631                           ;lcd.c: 24:     lcd_wr(val);
 10632  006706  5002               	movf	lcd_dat@val^0,w,c
 10633  006708  ECE8  F032         	call	_lcd_wr
 10634  00670C                     
 10635                           ;lcd.c: 25:     PORTEbits.RE2=1;
 10636  00670C  8484               	bsf	132,2,c	;volatile
 10637  00670E                     
 10638                           ;lcd.c: 26:     _delay((unsigned long)((1)*(4000000/4000.0)));
 10639  00670E  0EC8               	movlw	200
 10640  006710                     u7147:
 10641  006710  FFFF               	dw	65535	; errata NOP
 10642  006712  F000               	nop	
 10643  006714  2EE8               	decfsz	wreg,f,c
 10644  006716  D7FC               	bra	u7147
 10645  006718                     
 10646                           ;lcd.c: 27:     PORTEbits.RE1=0;
 10647  006718  9284               	bcf	132,1,c	;volatile
 10648  00671A                     
 10649                           ;lcd.c: 28:     _delay((unsigned long)((1)*(4000000/4000.0)));
 10650  00671A  0EC8               	movlw	200
 10651  00671C                     u7157:
 10652  00671C  FFFF               	dw	65535	; errata NOP
 10653  00671E  F000               	nop	
 10654  006720  2EE8               	decfsz	wreg,f,c
 10655  006722  D7FC               	bra	u7157
 10656  006724                     
 10657                           ;lcd.c: 29:  PORTEbits.RE1=1;
 10658  006724  8284               	bsf	132,1,c	;volatile
 10659  006726  0012               	return		;funcret
 10660  006728  FFFF               	dw	65535	; errata NOP
 10661  00672A                     __end_of_lcd_dat:
 10662                           	callstack 0
 10663                           
 10664 ;; *************** function _lcd_init *****************
 10665 ;; Defined at:
 10666 ;;		line 32 in file "lcd.c"
 10667 ;; Parameters:    Size  Location     Type
 10668 ;;		None
 10669 ;; Auto vars:     Size  Location     Type
 10670 ;;		None
 10671 ;; Return value:  Size  Location     Type
 10672 ;;                  1    wreg      void 
 10673 ;; Registers used:
 10674 ;;		wreg, status,2, cstack
 10675 ;; Tracked objects:
 10676 ;;		On entry : 0/0
 10677 ;;		On exit  : 0/0
 10678 ;;		Unchanged: 0/0
 10679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10680 ;;      Params:         0       0       0       0       0       0       0
 10681 ;;      Locals:         0       0       0       0       0       0       0
 10682 ;;      Temps:          1       0       0       0       0       0       0
 10683 ;;      Totals:         1       0       0       0       0       0       0
 10684 ;;Total ram usage:        1 bytes
 10685 ;; Hardware stack levels used:    1
 10686 ;; Hardware stack levels required when called:    3
 10687 ;; This function calls:
 10688 ;;		_lcd_cmd
 10689 ;; This function is called by:
 10690 ;;		_main
 10691 ;; This function uses a non-reentrant model
 10692 ;;
 10693                           
 10694                           	psect	text39
 10695  006DDC                     __ptext39:
 10696                           	callstack 0
 10697  006DDC                     _lcd_init:
 10698                           	callstack 0
 10699  006DDC  FFFF               	dw	65535	; assembler added errata NOP
 10700  006DDE  6A83               	clrf	3971,c	;# 
 10701  006DE0  0E00               	movlw	0	;# 
 10702  006DE2  6E95               	movwf	3989,c	;# 
 10703  006DE4  6A84               	clrf	3972,c	;# 
 10704  006DE6  0E00               	movlw	0	;# 
 10705  006DE8  6E96               	movwf	3990,c	;# 
 10706                           
 10707                           ;lcd.c: 45:  PORTEbits.RE1=0;
 10708  006DEA  9284               	bcf	132,1,c	;volatile
 10709                           
 10710                           ;lcd.c: 46:  PORTEbits.RE2=0;
 10711  006DEC  9484               	bcf	132,2,c	;volatile
 10712  006DEE                     
 10713                           ;lcd.c: 47:  _delay((unsigned long)((30)*(4000000/4000.0)));
 10714  006DEE  0E1E               	movlw	30
 10715  006DF0  6E03               	movwf	??_lcd_init^0,c
 10716  006DF2  0E3C               	movlw	60
 10717  006DF4                     u7167:
 10718  006DF4  FFFF               	dw	65535	; errata NOP
 10719  006DF6  2EE8               	decfsz	wreg,f,c
 10720  006DF8  D7FD               	bra	u7167
 10721  006DFA  2E03               	decfsz	??_lcd_init^0,f,c
 10722  006DFC  D7FB               	bra	u7167
 10723  006DFE  D000               	nop2	
 10724  006E00                     
 10725                           ;lcd.c: 48:  PORTEbits.RE1=1;
 10726  006E00  8284               	bsf	132,1,c	;volatile
 10727  006E02                     
 10728                           ;lcd.c: 50:  lcd_cmd(0x38);
 10729  006E02  0E38               	movlw	56
 10730  006E04  EC6B  F033         	call	_lcd_cmd
 10731  006E08                     
 10732                           ;lcd.c: 51:  _delay((unsigned long)((30)*(4000000/4000.0)));
 10733  006E08  0E1E               	movlw	30
 10734  006E0A  6E03               	movwf	??_lcd_init^0,c
 10735  006E0C  0E3C               	movlw	60
 10736  006E0E                     u7177:
 10737  006E0E  FFFF               	dw	65535	; errata NOP
 10738  006E10  2EE8               	decfsz	wreg,f,c
 10739  006E12  D7FD               	bra	u7177
 10740  006E14  2E03               	decfsz	??_lcd_init^0,f,c
 10741  006E16  D7FB               	bra	u7177
 10742  006E18  D000               	nop2	
 10743                           
 10744                           ;lcd.c: 52:  lcd_cmd(0x38);
 10745  006E1A  0E38               	movlw	56
 10746  006E1C  EC6B  F033         	call	_lcd_cmd
 10747  006E20                     
 10748                           ;lcd.c: 53:     _delay((unsigned long)((30)*(4000000/4000.0)));
 10749  006E20  0E1E               	movlw	30
 10750  006E22  6E03               	movwf	??_lcd_init^0,c
 10751  006E24  0E3C               	movlw	60
 10752  006E26                     u7187:
 10753  006E26  FFFF               	dw	65535	; errata NOP
 10754  006E28  2EE8               	decfsz	wreg,f,c
 10755  006E2A  D7FD               	bra	u7187
 10756  006E2C  2E03               	decfsz	??_lcd_init^0,f,c
 10757  006E2E  D7FB               	bra	u7187
 10758  006E30  D000               	nop2	
 10759  006E32                     
 10760                           ;lcd.c: 54:  lcd_cmd(0x38);
 10761  006E32  0E38               	movlw	56
 10762  006E34  EC6B  F033         	call	_lcd_cmd
 10763  006E38                     
 10764                           ;lcd.c: 55:  lcd_cmd(0x08);
 10765  006E38  0E08               	movlw	8
 10766  006E3A  EC6B  F033         	call	_lcd_cmd
 10767  006E3E                     
 10768                           ;lcd.c: 56:  lcd_cmd(0x0F);
 10769  006E3E  0E0F               	movlw	15
 10770  006E40  EC6B  F033         	call	_lcd_cmd
 10771  006E44                     
 10772                           ;lcd.c: 57:  lcd_cmd(0x01);
 10773  006E44  0E01               	movlw	1
 10774  006E46  EC6B  F033         	call	_lcd_cmd
 10775  006E4A                     
 10776                           ;lcd.c: 58:  lcd_cmd(0x38);
 10777  006E4A  0E38               	movlw	56
 10778  006E4C  EC6B  F033         	call	_lcd_cmd
 10779  006E50                     
 10780                           ;lcd.c: 59:     lcd_cmd(0x80);
 10781  006E50  0E80               	movlw	128
 10782  006E52  EC6B  F033         	call	_lcd_cmd
 10783  006E56  0012               	return		;funcret
 10784  006E58  FFFF               	dw	65535	; errata NOP
 10785  006E5A                     __end_of_lcd_init:
 10786                           	callstack 0
 10787                           
 10788 ;; *************** function _lcd_cmd *****************
 10789 ;; Defined at:
 10790 ;;		line 10 in file "lcd.c"
 10791 ;; Parameters:    Size  Location     Type
 10792 ;;  val             1    wreg     unsigned char 
 10793 ;; Auto vars:     Size  Location     Type
 10794 ;;  val             1    1[COMRAM] unsigned char 
 10795 ;; Return value:  Size  Location     Type
 10796 ;;                  1    wreg      void 
 10797 ;; Registers used:
 10798 ;;		wreg, status,2, cstack
 10799 ;; Tracked objects:
 10800 ;;		On entry : 0/0
 10801 ;;		On exit  : 0/0
 10802 ;;		Unchanged: 0/0
 10803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10804 ;;      Params:         0       0       0       0       0       0       0
 10805 ;;      Locals:         1       0       0       0       0       0       0
 10806 ;;      Temps:          0       0       0       0       0       0       0
 10807 ;;      Totals:         1       0       0       0       0       0       0
 10808 ;;Total ram usage:        1 bytes
 10809 ;; Hardware stack levels used:    1
 10810 ;; Hardware stack levels required when called:    2
 10811 ;; This function calls:
 10812 ;;		_lcd_wr
 10813 ;; This function is called by:
 10814 ;;		_main
 10815 ;;		_lcd_init
 10816 ;; This function uses a non-reentrant model
 10817 ;;
 10818                           
 10819                           	psect	text40
 10820  0066D6                     __ptext40:
 10821                           	callstack 0
 10822  0066D6                     _lcd_cmd:
 10823                           	callstack 0
 10824  0066D6  FFFF               	dw	65535	; assembler added errata NOP
 10825                           
 10826                           ;incstack = 0
 10827                           ;lcd_cmd@val stored from wreg
 10828  0066D8  6E02               	movwf	lcd_cmd@val^0,c
 10829  0066DA                     
 10830                           ;lcd.c: 10: void lcd_cmd(unsigned char val);lcd.c: 11: {;lcd.c: 12:  PORTEbits.RE1=1;
 10831  0066DA  8284               	bsf	132,1,c	;volatile
 10832  0066DC                     
 10833                           ;lcd.c: 13:     lcd_wr(val);
 10834  0066DC  5002               	movf	lcd_cmd@val^0,w,c
 10835  0066DE  ECE8  F032         	call	_lcd_wr
 10836  0066E2                     
 10837                           ;lcd.c: 14:     PORTEbits.RE2=0;
 10838  0066E2  9484               	bcf	132,2,c	;volatile
 10839  0066E4                     
 10840                           ;lcd.c: 15:     _delay((unsigned long)((1)*(4000000/4000.0)));
 10841  0066E4  0EC8               	movlw	200
 10842  0066E6                     u7197:
 10843  0066E6  FFFF               	dw	65535	; errata NOP
 10844  0066E8  F000               	nop	
 10845  0066EA  2EE8               	decfsz	wreg,f,c
 10846  0066EC  D7FC               	bra	u7197
 10847  0066EE                     
 10848                           ;lcd.c: 16:     PORTEbits.RE1=0;
 10849  0066EE  9284               	bcf	132,1,c	;volatile
 10850  0066F0                     
 10851                           ;lcd.c: 17:     _delay((unsigned long)((1)*(4000000/4000.0)));
 10852  0066F0  0EC8               	movlw	200
 10853  0066F2                     u7207:
 10854  0066F2  FFFF               	dw	65535	; errata NOP
 10855  0066F4  F000               	nop	
 10856  0066F6  2EE8               	decfsz	wreg,f,c
 10857  0066F8  D7FC               	bra	u7207
 10858  0066FA                     
 10859                           ;lcd.c: 18:  PORTEbits.RE1=1;
 10860  0066FA  8284               	bsf	132,1,c	;volatile
 10861  0066FC  0012               	return		;funcret
 10862  0066FE  FFFF               	dw	65535	; errata NOP
 10863  006700                     __end_of_lcd_cmd:
 10864                           	callstack 0
 10865                           
 10866 ;; *************** function _lcd_wr *****************
 10867 ;; Defined at:
 10868 ;;		line 5 in file "lcd.c"
 10869 ;; Parameters:    Size  Location     Type
 10870 ;;  val             1    wreg     unsigned char 
 10871 ;; Auto vars:     Size  Location     Type
 10872 ;;  val             1    0[COMRAM] unsigned char 
 10873 ;; Return value:  Size  Location     Type
 10874 ;;                  1    wreg      void 
 10875 ;; Registers used:
 10876 ;;		wreg
 10877 ;; Tracked objects:
 10878 ;;		On entry : 0/0
 10879 ;;		On exit  : 0/0
 10880 ;;		Unchanged: 0/0
 10881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10882 ;;      Params:         0       0       0       0       0       0       0
 10883 ;;      Locals:         1       0       0       0       0       0       0
 10884 ;;      Temps:          0       0       0       0       0       0       0
 10885 ;;      Totals:         1       0       0       0       0       0       0
 10886 ;;Total ram usage:        1 bytes
 10887 ;; Hardware stack levels used:    1
 10888 ;; Hardware stack levels required when called:    1
 10889 ;; This function calls:
 10890 ;;		Nothing
 10891 ;; This function is called by:
 10892 ;;		_lcd_cmd
 10893 ;;		_lcd_dat
 10894 ;; This function uses a non-reentrant model
 10895 ;;
 10896                           
 10897                           	psect	text41
 10898  0065D0                     __ptext41:
 10899                           	callstack 0
 10900  0065D0                     _lcd_wr:
 10901                           	callstack 0
 10902  0065D0  FFFF               	dw	65535	; assembler added errata NOP
 10903                           
 10904                           ;incstack = 0
 10905                           ;lcd_wr@val stored from wreg
 10906  0065D2  6E01               	movwf	lcd_wr@val^0,c
 10907  0065D4                     
 10908                           ;lcd.c: 5: void lcd_wr(unsigned char val);lcd.c: 6: {;lcd.c: 7:     PORTD=val;
 10909  0065D4  C001  FF83         	movff	lcd_wr@val,3971	;volatile
 10910  0065D8  0012               	return		;funcret
 10911  0065DA  FFFF               	dw	65535	; errata NOP
 10912  0065DC                     __end_of_lcd_wr:
 10913                           	callstack 0
 10914                           
 10915 ;; *************** function _init_timer_2 *****************
 10916 ;; Defined at:
 10917 ;;		line 27 in file "timer.c"
 10918 ;; Parameters:    Size  Location     Type
 10919 ;;		None
 10920 ;; Auto vars:     Size  Location     Type
 10921 ;;		None
 10922 ;; Return value:  Size  Location     Type
 10923 ;;                  1    wreg      void 
 10924 ;; Registers used:
 10925 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10926 ;; Tracked objects:
 10927 ;;		On entry : 0/0
 10928 ;;		On exit  : 0/0
 10929 ;;		Unchanged: 0/0
 10930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10931 ;;      Params:         0       0       0       0       0       0       0
 10932 ;;      Locals:         0       4       0       0       0       0       0
 10933 ;;      Temps:          0       0       0       0       0       0       0
 10934 ;;      Totals:         0       4       0       0       0       0       0
 10935 ;;Total ram usage:        4 bytes
 10936 ;; Hardware stack levels used:    1
 10937 ;; Hardware stack levels required when called:    2
 10938 ;; This function calls:
 10939 ;;		___fladd
 10940 ;;		___fldiv
 10941 ;;		___flmul
 10942 ;;		___fltol
 10943 ;; This function is called by:
 10944 ;;		_main
 10945 ;; This function uses a non-reentrant model
 10946 ;;
 10947                           
 10948                           	psect	text42
 10949  007056                     __ptext42:
 10950                           	callstack 0
 10951  007056                     _init_timer_2:
 10952                           	callstack 0
 10953  007056  FFFF               	dw	65535	; assembler added errata NOP
 10954  007058                     
 10955                           ;timer.c: 29:     T2CON = 0;
 10956  007058  0E00               	movlw	0
 10957  00705A  6ECA               	movwf	202,c	;volatile
 10958                           
 10959                           ;timer.c: 30:     TMR2 = 0;
 10960  00705C  0E00               	movlw	0
 10961  00705E  6ECC               	movwf	204,c	;volatile
 10962  007060                     
 10963                           ;timer.c: 32:     T2CONbits.TMR2ON = 1;
 10964  007060  84CA               	bsf	202,2,c	;volatile
 10965  007062                     
 10966                           ;timer.c: 33:     T2CONbits.T2CKPS0 = 1;
 10967  007062  80CA               	bsf	202,0,c	;volatile
 10968  007064                     
 10969                           ;timer.c: 34:     T2CONbits.T2CKPS1 = 1;
 10970  007064  82CA               	bsf	202,1,c	;volatile
 10971  007066                     
 10972                           ;timer.c: 36:     PR2 = (uint8_t) (((pwm_period / (4*t_osc*tmr2_prescaler)) - 1)*4);
 10973  007066  0E00               	movlw	0
 10974  007068  6E63               	movwf	___fladd@a^0,c
 10975  00706A  0E00               	movlw	0
 10976  00706C  6E64               	movwf	(___fladd@a+1)^0,c
 10977  00706E  0E80               	movlw	128
 10978  007070  6E65               	movwf	(___fladd@a+2)^0,c
 10979  007072  0EBF               	movlw	191
 10980  007074  6E66               	movwf	(___fladd@a+3)^0,c
 10981  007076  0EBD               	movlw	189
 10982  007078  6E31               	movwf	___flmul@a^0,c
 10983  00707A  0E37               	movlw	55
 10984  00707C  6E32               	movwf	(___flmul@a+1)^0,c
 10985  00707E  0E86               	movlw	134
 10986  007080  6E33               	movwf	(___flmul@a+2)^0,c
 10987  007082  0E36               	movlw	54
 10988  007084  6E34               	movwf	(___flmul@a+3)^0,c
 10989  007086  C0ED  F02D         	movff	_tmr2_prescaler,___flmul@b
 10990  00708A  C0EE  F02E         	movff	_tmr2_prescaler+1,___flmul@b+1
 10991  00708E  C0EF  F02F         	movff	_tmr2_prescaler+2,___flmul@b+2
 10992  007092  C0F0  F030         	movff	_tmr2_prescaler+3,___flmul@b+3
 10993  007096  EC65  F010         	call	___flmul	;wreg free
 10994  00709A  C02D  F04A         	movff	?___flmul,___fldiv@a
 10995  00709E  C02E  F04B         	movff	?___flmul+1,___fldiv@a+1
 10996  0070A2  C02F  F04C         	movff	?___flmul+2,___fldiv@a+2
 10997  0070A6  C030  F04D         	movff	?___flmul+3,___fldiv@a+3
 10998  0070AA  0E0A               	movlw	10
 10999  0070AC  6E46               	movwf	___fldiv@b^0,c
 11000  0070AE  0ED7               	movlw	215
 11001  0070B0  6E47               	movwf	(___fldiv@b+1)^0,c
 11002  0070B2  0EA3               	movlw	163
 11003  0070B4  6E48               	movwf	(___fldiv@b+2)^0,c
 11004  0070B6  0E3C               	movlw	60
 11005  0070B8  6E49               	movwf	(___fldiv@b+3)^0,c
 11006  0070BA  ECB7  F012         	call	___fldiv	;wreg free
 11007  0070BE  C046  F05F         	movff	?___fldiv,___fladd@b
 11008  0070C2  C047  F060         	movff	?___fldiv+1,___fladd@b+1
 11009  0070C6  C048  F061         	movff	?___fldiv+2,___fladd@b+2
 11010  0070CA  C049  F062         	movff	?___fldiv+3,___fladd@b+3
 11011  0070CE  EC91  F00D         	call	___fladd	;wreg free
 11012  0070D2  C05F  F0D4         	movff	?___fladd,_init_timer_2$2130
 11013  0070D6  C060  F0D5         	movff	?___fladd+1,_init_timer_2$2130+1
 11014  0070DA  C061  F0D6         	movff	?___fladd+2,_init_timer_2$2130+2
 11015  0070DE  C062  F0D7         	movff	?___fladd+3,_init_timer_2$2130+3
 11016  0070E2                     
 11017                           ;timer.c: 36:     PR2 = (uint8_t) (((pwm_period / (4*t_osc*tmr2_prescaler)) - 1)*4);
 11018  0070E2  0E00               	movlw	0
 11019  0070E4  6E31               	movwf	___flmul@a^0,c
 11020  0070E6  0E00               	movlw	0
 11021  0070E8  6E32               	movwf	(___flmul@a+1)^0,c
 11022  0070EA  0E80               	movlw	128
 11023  0070EC  6E33               	movwf	(___flmul@a+2)^0,c
 11024  0070EE  0E40               	movlw	64
 11025  0070F0  6E34               	movwf	(___flmul@a+3)^0,c
 11026  0070F2  C0D4  F02D         	movff	_init_timer_2$2130,___flmul@b
 11027  0070F6  C0D5  F02E         	movff	_init_timer_2$2130+1,___flmul@b+1
 11028  0070FA  C0D6  F02F         	movff	_init_timer_2$2130+2,___flmul@b+2
 11029  0070FE  C0D7  F030         	movff	_init_timer_2$2130+3,___flmul@b+3
 11030  007102  EC65  F010         	call	___flmul	;wreg free
 11031  007106  C02D  F0CA         	movff	?___flmul,___fltol@f1
 11032  00710A  C02E  F0CB         	movff	?___flmul+1,___fltol@f1+1
 11033  00710E  C02F  F0CC         	movff	?___flmul+2,___fltol@f1+2
 11034  007112  C030  F0CD         	movff	?___flmul+3,___fltol@f1+3
 11035  007116  EC59  F03D         	call	___fltol	;wreg free
 11036  00711A  0100               	movlb	0	; () banked
 11037  00711C  51CA               	movf	?___fltol& (0+255),w,b
 11038  00711E  6ECB               	movwf	203,c	;volatile
 11039  007120                     
 11040                           ; BSR set to: 0
 11041  007120  0012               	return		;funcret
 11042  007122  FFFF               	dw	65535	; errata NOP
 11043  007124                     __end_of_init_timer_2:
 11044                           	callstack 0
 11045                           
 11046 ;; *************** function _init_timer_0 *****************
 11047 ;; Defined at:
 11048 ;;		line 11 in file "timer.c"
 11049 ;; Parameters:    Size  Location     Type
 11050 ;;		None
 11051 ;; Auto vars:     Size  Location     Type
 11052 ;;		None
 11053 ;; Return value:  Size  Location     Type
 11054 ;;                  1    wreg      void 
 11055 ;; Registers used:
 11056 ;;		wreg, status,2
 11057 ;; Tracked objects:
 11058 ;;		On entry : 0/0
 11059 ;;		On exit  : 0/0
 11060 ;;		Unchanged: 0/0
 11061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11062 ;;      Params:         0       0       0       0       0       0       0
 11063 ;;      Locals:         0       0       0       0       0       0       0
 11064 ;;      Temps:          0       0       0       0       0       0       0
 11065 ;;      Totals:         0       0       0       0       0       0       0
 11066 ;;Total ram usage:        0 bytes
 11067 ;; Hardware stack levels used:    1
 11068 ;; Hardware stack levels required when called:    1
 11069 ;; This function calls:
 11070 ;;		Nothing
 11071 ;; This function is called by:
 11072 ;;		_main
 11073 ;; This function uses a non-reentrant model
 11074 ;;
 11075                           
 11076                           	psect	text43
 11077  006640                     __ptext43:
 11078                           	callstack 0
 11079  006640                     _init_timer_0:
 11080                           	callstack 0
 11081  006640  FFFF               	dw	65535	; assembler added errata NOP
 11082  006642                     
 11083                           ;timer.c: 13:     T0CON = 0;
 11084  006642  0E00               	movlw	0
 11085  006644  6ED5               	movwf	213,c	;volatile
 11086                           
 11087                           ;timer.c: 15:     TMR0L = 0x96;
 11088  006646  0E96               	movlw	150
 11089  006648  6ED6               	movwf	214,c	;volatile
 11090                           
 11091                           ;timer.c: 16:     TMR0H = 0x98;
 11092  00664A  0E98               	movlw	152
 11093  00664C  6ED7               	movwf	215,c	;volatile
 11094  00664E                     
 11095                           ;timer.c: 17:     INTCONbits.TMR0IE = 1;
 11096  00664E  8AF2               	bsf	242,5,c	;volatile
 11097  006650                     
 11098                           ;timer.c: 18:     T0CONbits.T08BIT = 0;
 11099  006650  9CD5               	bcf	213,6,c	;volatile
 11100  006652                     
 11101                           ;timer.c: 19:     T0CONbits.T0CS = 0;
 11102  006652  9AD5               	bcf	213,5,c	;volatile
 11103  006654                     
 11104                           ;timer.c: 20:     T0CONbits.PSA = 0;
 11105  006654  96D5               	bcf	213,3,c	;volatile
 11106  006656                     
 11107                           ;timer.c: 21:     T0CONbits.T0PS0 = 1;
 11108  006656  80D5               	bsf	213,0,c	;volatile
 11109  006658                     
 11110                           ;timer.c: 22:     T0CONbits.T0PS1 = 1;
 11111  006658  82D5               	bsf	213,1,c	;volatile
 11112  00665A                     
 11113                           ;timer.c: 23:     T0CONbits.T0PS2 = 1;
 11114  00665A  84D5               	bsf	213,2,c	;volatile
 11115  00665C                     
 11116                           ;timer.c: 24:     T0CONbits.TMR0ON = 1;
 11117  00665C  8ED5               	bsf	213,7,c	;volatile
 11118  00665E  0012               	return		;funcret
 11119  006660  FFFF               	dw	65535	; errata NOP
 11120  006662                     __end_of_init_timer_0:
 11121                           	callstack 0
 11122                           
 11123 ;; *************** function _init_stepper *****************
 11124 ;; Defined at:
 11125 ;;		line 4 in file "stepper_motor.c"
 11126 ;; Parameters:    Size  Location     Type
 11127 ;;  stepper_moto    2    0[COMRAM] PTR struct .
 11128 ;;		 -> end_effector_stepper(14), joint_stepper(14), 
 11129 ;;  current_coil    2    2[COMRAM] int 
 11130 ;;  step_counter    2    4[COMRAM] int 
 11131 ;;  direction       2    6[COMRAM] int 
 11132 ;;  hex_coil_reg    2    8[COMRAM] PTR int 
 11133 ;;		 -> hex_end_effector_values(8), hex_joint_values(8), 
 11134 ;; Auto vars:     Size  Location     Type
 11135 ;;  i               2   14[COMRAM] int 
 11136 ;; Return value:  Size  Location     Type
 11137 ;;                  1    wreg      void 
 11138 ;; Registers used:
 11139 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11140 ;; Tracked objects:
 11141 ;;		On entry : 0/0
 11142 ;;		On exit  : 0/0
 11143 ;;		Unchanged: 0/0
 11144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11145 ;;      Params:        10       0       0       0       0       0       0
 11146 ;;      Locals:         2       0       0       0       0       0       0
 11147 ;;      Temps:          4       0       0       0       0       0       0
 11148 ;;      Totals:        16       0       0       0       0       0       0
 11149 ;;Total ram usage:       16 bytes
 11150 ;; Hardware stack levels used:    1
 11151 ;; Hardware stack levels required when called:    1
 11152 ;; This function calls:
 11153 ;;		Nothing
 11154 ;; This function is called by:
 11155 ;;		_main
 11156 ;; This function uses a non-reentrant model
 11157 ;;
 11158                           
 11159                           	psect	text44
 11160  006EE2                     __ptext44:
 11161                           	callstack 0
 11162  006EE2                     _init_stepper:
 11163                           	callstack 0
 11164  006EE2  FFFF               	dw	65535	; assembler added errata NOP
 11165  006EE4                     
 11166                           ;stepper_motor.c: 5:     for (int i = 0; i < 4; i++) {
 11167  006EE4  0E00               	movlw	0
 11168  006EE6  6E10               	movwf	(init_stepper@i+1)^0,c
 11169  006EE8  0E00               	movlw	0
 11170  006EEA  6E0F               	movwf	init_stepper@i^0,c
 11171  006EEC                     l5311:
 11172  006EEC  FFFF               	dw	65535	; assembler added errata NOP
 11173                           
 11174                           ;stepper_motor.c: 6:        stepper_motor -> hex_coil_register_values[i] = hex_coil_regi
      +                          ster_values[i];
 11175  006EEE  90D8               	bcf	status,0,c
 11176  006EF0  340F               	rlcf	init_stepper@i^0,w,c
 11177  006EF2  6ED9               	movwf	fsr2l,c
 11178  006EF4  3410               	rlcf	(init_stepper@i+1)^0,w,c
 11179  006EF6  6EDA               	movwf	fsr2h,c
 11180  006EF8  5009               	movf	init_stepper@hex_coil_register_values^0,w,c
 11181  006EFA  26D9               	addwf	fsr2l,f,c
 11182  006EFC  500A               	movf	(init_stepper@hex_coil_register_values+1)^0,w,c
 11183  006EFE  22DA               	addwfc	fsr2h,f,c
 11184  006F00  C00F  F00B         	movff	init_stepper@i,??_init_stepper
 11185  006F04  C010  F00C         	movff	init_stepper@i+1,??_init_stepper+1
 11186  006F08  90D8               	bcf	status,0,c
 11187  006F0A  360B               	rlcf	??_init_stepper^0,f,c
 11188  006F0C  360C               	rlcf	(??_init_stepper+1)^0,f,c
 11189  006F0E  C001  F00D         	movff	init_stepper@stepper_motor,??_init_stepper+2
 11190  006F12  C002  F00E         	movff	init_stepper@stepper_motor+1,??_init_stepper+3
 11191  006F16  500B               	movf	??_init_stepper^0,w,c
 11192  006F18  260D               	addwf	(??_init_stepper+2)^0,f,c
 11193  006F1A  500C               	movf	(??_init_stepper+1)^0,w,c
 11194  006F1C  220E               	addwfc	(??_init_stepper+3)^0,f,c
 11195  006F1E  0E06               	movlw	6
 11196  006F20  240D               	addwf	(??_init_stepper+2)^0,w,c
 11197  006F22  6EE1               	movwf	fsr1l,c
 11198  006F24  0E00               	movlw	0
 11199  006F26  200E               	addwfc	(??_init_stepper+3)^0,w,c
 11200  006F28  6EE2               	movwf	fsr1h,c
 11201  006F2A  CFDE FFE6          	movff	postinc2,postinc1
 11202  006F2E  CFDD FFE5          	movff	postdec2,postdec1
 11203  006F32                     
 11204                           ;stepper_motor.c: 7:     }
 11205  006F32  4A0F               	infsnz	init_stepper@i^0,f,c
 11206  006F34  2A10               	incf	(init_stepper@i+1)^0,f,c
 11207  006F36  BE10               	btfsc	(init_stepper@i+1)^0,7,c
 11208  006F38  EFA7  F037         	goto	u6531
 11209  006F3C  5010               	movf	(init_stepper@i+1)^0,w,c
 11210  006F3E  E10A               	bnz	u6530
 11211  006F40  0E04               	movlw	4
 11212  006F42  5C0F               	subwf	init_stepper@i^0,w,c
 11213  006F44  A0D8               	btfss	status,0,c
 11214  006F46  EFA7  F037         	goto	u6531
 11215  006F4A  EFAA  F037         	goto	u6530
 11216  006F4E                     u6531:
 11217  006F4E  FFFF               	dw	65535	; assembler added errata NOP
 11218  006F50  EF76  F037         	goto	l5311
 11219  006F54                     u6530:
 11220  006F54  FFFF               	dw	65535	; assembler added errata NOP
 11221  006F56                     
 11222                           ;stepper_motor.c: 8:     stepper_motor -> current_coil = current_coil;
 11223  006F56  C001  FFD9         	movff	init_stepper@stepper_motor,fsr2l
 11224  006F5A  C002  FFDA         	movff	init_stepper@stepper_motor+1,fsr2h
 11225  006F5E  C003  FFDE         	movff	init_stepper@current_coil,postinc2
 11226  006F62  C004  FFDD         	movff	init_stepper@current_coil+1,postdec2
 11227  006F66                     
 11228                           ;stepper_motor.c: 9:     stepper_motor -> step_counter = step_counter;
 11229  006F66  EE20 F002          	lfsr	2,2
 11230  006F6A  5001               	movf	init_stepper@stepper_motor^0,w,c
 11231  006F6C  26D9               	addwf	fsr2l,f,c
 11232  006F6E  5002               	movf	(init_stepper@stepper_motor+1)^0,w,c
 11233  006F70  22DA               	addwfc	fsr2h,f,c
 11234  006F72  C005  FFDE         	movff	init_stepper@step_counter,postinc2
 11235  006F76  C006  FFDD         	movff	init_stepper@step_counter+1,postdec2
 11236  006F7A                     
 11237                           ;stepper_motor.c: 10:     stepper_motor -> direction = direction;
 11238  006F7A  EE20 F004          	lfsr	2,4
 11239  006F7E  5001               	movf	init_stepper@stepper_motor^0,w,c
 11240  006F80  26D9               	addwf	fsr2l,f,c
 11241  006F82  5002               	movf	(init_stepper@stepper_motor+1)^0,w,c
 11242  006F84  22DA               	addwfc	fsr2h,f,c
 11243  006F86  C007  FFDE         	movff	init_stepper@direction,postinc2
 11244  006F8A  C008  FFDD         	movff	init_stepper@direction+1,postdec2
 11245  006F8E  0012               	return		;funcret
 11246  006F90  FFFF               	dw	65535	; errata NOP
 11247  006F92                     __end_of_init_stepper:
 11248                           	callstack 0
 11249                           
 11250 ;; *************** function _init_interrupts *****************
 11251 ;; Defined at:
 11252 ;;		line 81 in file "init_PIC.c"
 11253 ;; Parameters:    Size  Location     Type
 11254 ;;		None
 11255 ;; Auto vars:     Size  Location     Type
 11256 ;;		None
 11257 ;; Return value:  Size  Location     Type
 11258 ;;                  1    wreg      void 
 11259 ;; Registers used:
 11260 ;;		None
 11261 ;; Tracked objects:
 11262 ;;		On entry : 0/0
 11263 ;;		On exit  : 0/0
 11264 ;;		Unchanged: 0/0
 11265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11266 ;;      Params:         0       0       0       0       0       0       0
 11267 ;;      Locals:         0       0       0       0       0       0       0
 11268 ;;      Temps:          0       0       0       0       0       0       0
 11269 ;;      Totals:         0       0       0       0       0       0       0
 11270 ;;Total ram usage:        0 bytes
 11271 ;; Hardware stack levels used:    1
 11272 ;; Hardware stack levels required when called:    1
 11273 ;; This function calls:
 11274 ;;		Nothing
 11275 ;; This function is called by:
 11276 ;;		_main
 11277 ;; This function uses a non-reentrant model
 11278 ;;
 11279                           
 11280                           	psect	text45
 11281  0065C4                     __ptext45:
 11282                           	callstack 0
 11283  0065C4                     _init_interrupts:
 11284                           	callstack 0
 11285  0065C4  FFFF               	dw	65535	; assembler added errata NOP
 11286  0065C6                     
 11287                           ;init_PIC.c: 83:     PIR1bits.RCIF = 0;
 11288  0065C6  9A9E               	bcf	158,5,c	;volatile
 11289                           
 11290                           ;init_PIC.c: 84:     PIE1bits.RCIE = 1;
 11291  0065C8  8A9D               	bsf	157,5,c	;volatile
 11292                           
 11293                           ;init_PIC.c: 85:     INTCONbits.PEIE = 1;
 11294  0065CA  8CF2               	bsf	242,6,c	;volatile
 11295  0065CC  0012               	return		;funcret
 11296  0065CE  FFFF               	dw	65535	; errata NOP
 11297  0065D0                     __end_of_init_interrupts:
 11298                           	callstack 0
 11299                           
 11300 ;; *************** function _init_ccp1 *****************
 11301 ;; Defined at:
 11302 ;;		line 41 in file "timer.c"
 11303 ;; Parameters:    Size  Location     Type
 11304 ;;		None
 11305 ;; Auto vars:     Size  Location     Type
 11306 ;;		None
 11307 ;; Return value:  Size  Location     Type
 11308 ;;                  1    wreg      void 
 11309 ;; Registers used:
 11310 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11311 ;; Tracked objects:
 11312 ;;		On entry : 0/0
 11313 ;;		On exit  : 0/0
 11314 ;;		Unchanged: 0/0
 11315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11316 ;;      Params:         0       0       0       0       0       0       0
 11317 ;;      Locals:         0       0       0       0       0       0       0
 11318 ;;      Temps:          0       0       0       0       0       0       0
 11319 ;;      Totals:         0       0       0       0       0       0       0
 11320 ;;Total ram usage:        0 bytes
 11321 ;; Hardware stack levels used:    1
 11322 ;; Hardware stack levels required when called:    3
 11323 ;; This function calls:
 11324 ;;		_update_pwm_duty_ccp1
 11325 ;; This function is called by:
 11326 ;;		_main
 11327 ;; This function uses a non-reentrant model
 11328 ;;
 11329                           
 11330                           	psect	text46
 11331  006662                     __ptext46:
 11332                           	callstack 0
 11333  006662                     _init_ccp1:
 11334                           	callstack 0
 11335  006662  FFFF               	dw	65535	; assembler added errata NOP
 11336  006664                     
 11337                           ;timer.c: 42:     CCP1CON = 0x00;
 11338  006664  0E00               	movlw	0
 11339  006666  6EBD               	movwf	189,c	;volatile
 11340  006668                     
 11341                           ;timer.c: 45:     update_pwm_duty_ccp1(5e-3);
 11342  006668  0E0A               	movlw	10
 11343  00666A  0100               	movlb	0	; () banked
 11344  00666C  6FD4               	movwf	update_pwm_duty_ccp1@time_up& (0+255),b
 11345  00666E  0ED7               	movlw	215
 11346  006670  6FD5               	movwf	(update_pwm_duty_ccp1@time_up+1)& (0+255),b
 11347  006672  0EA3               	movlw	163
 11348  006674  6FD6               	movwf	(update_pwm_duty_ccp1@time_up+2)& (0+255),b
 11349  006676  0E3B               	movlw	59
 11350  006678  6FD7               	movwf	(update_pwm_duty_ccp1@time_up+3)& (0+255),b
 11351  00667A  ECC9  F037         	call	_update_pwm_duty_ccp1	;wreg free
 11352  00667E                     
 11353                           ;timer.c: 48:     CCP1CONbits.CCP1M3 = 1;
 11354  00667E  86BD               	bsf	189,3,c	;volatile
 11355  006680                     
 11356                           ;timer.c: 49:     CCP1CONbits.CCP1M2 = 1;
 11357  006680  84BD               	bsf	189,2,c	;volatile
 11358  006682  0012               	return		;funcret
 11359  006684  FFFF               	dw	65535	; errata NOP
 11360  006686                     __end_of_init_ccp1:
 11361                           	callstack 0
 11362                           
 11363 ;; *************** function _update_pwm_duty_ccp1 *****************
 11364 ;; Defined at:
 11365 ;;		line 53 in file "timer.c"
 11366 ;; Parameters:    Size  Location     Type
 11367 ;;  time_up         4   28[BANK0 ] void 
 11368 ;; Auto vars:     Size  Location     Type
 11369 ;;  new_duty        2   34[BANK0 ] unsigned short 
 11370 ;;  lsbs_duty       1   36[BANK0 ] unsigned char 
 11371 ;; Return value:  Size  Location     Type
 11372 ;;                  1    wreg      void 
 11373 ;; Registers used:
 11374 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11375 ;; Tracked objects:
 11376 ;;		On entry : 0/0
 11377 ;;		On exit  : 0/0
 11378 ;;		Unchanged: 0/0
 11379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11380 ;;      Params:         0       4       0       0       0       0       0
 11381 ;;      Locals:         0       3       0       0       0       0       0
 11382 ;;      Temps:          0       2       0       0       0       0       0
 11383 ;;      Totals:         0       9       0       0       0       0       0
 11384 ;;Total ram usage:        9 bytes
 11385 ;; Hardware stack levels used:    1
 11386 ;; Hardware stack levels required when called:    2
 11387 ;; This function calls:
 11388 ;;		___fldiv
 11389 ;;		___flmul
 11390 ;;		___fltol
 11391 ;; This function is called by:
 11392 ;;		_init_ccp1
 11393 ;; This function uses a non-reentrant model
 11394 ;;
 11395                           
 11396                           	psect	text47
 11397  006F92                     __ptext47:
 11398                           	callstack 0
 11399  006F92                     _update_pwm_duty_ccp1:
 11400                           	callstack 0
 11401  006F92  FFFF               	dw	65535	; assembler added errata NOP
 11402  006F94                     
 11403                           ;timer.c: 56:     uint16_t new_duty;;timer.c: 57:     uint8_t lsbs_duty;;timer.c: 59:   
      +                            new_duty = (0.001) / (t_osc * tmr2_prescaler);
 11404  006F94  0EBD               	movlw	189
 11405  006F96  6E31               	movwf	___flmul@a^0,c
 11406  006F98  0E37               	movlw	55
 11407  006F9A  6E32               	movwf	(___flmul@a+1)^0,c
 11408  006F9C  0E86               	movlw	134
 11409  006F9E  6E33               	movwf	(___flmul@a+2)^0,c
 11410  006FA0  0E35               	movlw	53
 11411  006FA2  6E34               	movwf	(___flmul@a+3)^0,c
 11412  006FA4  C0ED  F02D         	movff	_tmr2_prescaler,___flmul@b
 11413  006FA8  C0EE  F02E         	movff	_tmr2_prescaler+1,___flmul@b+1
 11414  006FAC  C0EF  F02F         	movff	_tmr2_prescaler+2,___flmul@b+2
 11415  006FB0  C0F0  F030         	movff	_tmr2_prescaler+3,___flmul@b+3
 11416  006FB4  EC65  F010         	call	___flmul	;wreg free
 11417  006FB8  C02D  F04A         	movff	?___flmul,___fldiv@a
 11418  006FBC  C02E  F04B         	movff	?___flmul+1,___fldiv@a+1
 11419  006FC0  C02F  F04C         	movff	?___flmul+2,___fldiv@a+2
 11420  006FC4  C030  F04D         	movff	?___flmul+3,___fldiv@a+3
 11421  006FC8  0E6F               	movlw	111
 11422  006FCA  6E46               	movwf	___fldiv@b^0,c
 11423  006FCC  0E12               	movlw	18
 11424  006FCE  6E47               	movwf	(___fldiv@b+1)^0,c
 11425  006FD0  0E83               	movlw	131
 11426  006FD2  6E48               	movwf	(___fldiv@b+2)^0,c
 11427  006FD4  0E3A               	movlw	58
 11428  006FD6  6E49               	movwf	(___fldiv@b+3)^0,c
 11429  006FD8  ECB7  F012         	call	___fldiv	;wreg free
 11430  006FDC  C046  F0CA         	movff	?___fldiv,___fltol@f1
 11431  006FE0  C047  F0CB         	movff	?___fldiv+1,___fltol@f1+1
 11432  006FE4  C048  F0CC         	movff	?___fldiv+2,___fltol@f1+2
 11433  006FE8  C049  F0CD         	movff	?___fldiv+3,___fltol@f1+3
 11434  006FEC  EC59  F03D         	call	___fltol	;wreg free
 11435  006FF0  C0CA  F0DA         	movff	?___fltol,update_pwm_duty_ccp1@new_duty
 11436  006FF4  C0CB  F0DB         	movff	?___fltol+1,update_pwm_duty_ccp1@new_duty+1
 11437  006FF8                     
 11438                           ;timer.c: 60:     lsbs_duty = (uint8_t) new_duty;
 11439  006FF8  C0DA  F0DC         	movff	update_pwm_duty_ccp1@new_duty,update_pwm_duty_ccp1@lsbs_duty
 11440  006FFC                     
 11441                           ;timer.c: 64:     if (lsbs_duty & 0x01) CCP1CON |= (1u << 4);
 11442  006FFC  0100               	movlb	0	; () banked
 11443  006FFE  A1DC               	btfss	update_pwm_duty_ccp1@lsbs_duty& (0+255),0,b
 11444  007000  EF04  F038         	goto	u6371
 11445  007004  EF07  F038         	goto	u6370
 11446  007008                     u6371:
 11447  007008  FFFF               	dw	65535	; assembler added errata NOP
 11448  00700A  EF0B  F038         	goto	l5131
 11449  00700E                     u6370:
 11450  00700E  FFFF               	dw	65535	; assembler added errata NOP
 11451  007010                     
 11452                           ; BSR set to: 0
 11453  007010  88BD               	bsf	189,4,c	;volatile
 11454  007012  EF0D  F038         	goto	l5133
 11455  007016                     l5131:
 11456  007016  FFFF               	dw	65535	; assembler added errata NOP
 11457                           
 11458                           ; BSR set to: 0
 11459  007018  98BD               	bcf	189,4,c	;volatile
 11460  00701A                     l5133:
 11461  00701A  FFFF               	dw	65535	; assembler added errata NOP
 11462                           
 11463                           ; BSR set to: 0
 11464                           ;timer.c: 67:     if (lsbs_duty & 0x02) CCP1CON |= (1u << 5);
 11465  00701C  A3DC               	btfss	update_pwm_duty_ccp1@lsbs_duty& (0+255),1,b
 11466  00701E  EF13  F038         	goto	u6381
 11467  007022  EF16  F038         	goto	u6380
 11468  007026                     u6381:
 11469  007026  FFFF               	dw	65535	; assembler added errata NOP
 11470  007028  EF1A  F038         	goto	l5137
 11471  00702C                     u6380:
 11472  00702C  FFFF               	dw	65535	; assembler added errata NOP
 11473  00702E                     
 11474                           ; BSR set to: 0
 11475  00702E  8ABD               	bsf	189,5,c	;volatile
 11476  007030  EF1C  F038         	goto	l5139
 11477  007034                     l5137:
 11478  007034  FFFF               	dw	65535	; assembler added errata NOP
 11479                           
 11480                           ; BSR set to: 0
 11481  007036  9ABD               	bcf	189,5,c	;volatile
 11482  007038                     l5139:
 11483  007038  FFFF               	dw	65535	; assembler added errata NOP
 11484                           
 11485                           ; BSR set to: 0
 11486                           ;timer.c: 71:     CCPR1L = (uint8_t) (new_duty >> 2);
 11487  00703A  C0DA  F0D8         	movff	update_pwm_duty_ccp1@new_duty,??_update_pwm_duty_ccp1
 11488  00703E  C0DB  F0D9         	movff	update_pwm_duty_ccp1@new_duty+1,??_update_pwm_duty_ccp1+1
 11489  007042  90D8               	bcf	status,0,c
 11490  007044  33D9               	rrcf	(??_update_pwm_duty_ccp1+1)& (0+255),f,b
 11491  007046  33D8               	rrcf	??_update_pwm_duty_ccp1& (0+255),f,b
 11492  007048  90D8               	bcf	status,0,c
 11493  00704A  33D9               	rrcf	(??_update_pwm_duty_ccp1+1)& (0+255),f,b
 11494  00704C  33D8               	rrcf	??_update_pwm_duty_ccp1& (0+255),f,b
 11495  00704E  51D8               	movf	??_update_pwm_duty_ccp1& (0+255),w,b
 11496  007050  6EBE               	movwf	190,c	;volatile
 11497  007052                     
 11498                           ; BSR set to: 0
 11499  007052  0012               	return		;funcret
 11500  007054  FFFF               	dw	65535	; errata NOP
 11501  007056                     __end_of_update_pwm_duty_ccp1:
 11502                           	callstack 0
 11503                           
 11504 ;; *************** function ___fldiv *****************
 11505 ;; Defined at:
 11506 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
 11507 ;; Parameters:    Size  Location     Type
 11508 ;;  b               4   69[COMRAM] void 
 11509 ;;  a               4   73[COMRAM] void 
 11510 ;; Auto vars:     Size  Location     Type
 11511 ;;  grs             4   88[COMRAM] unsigned long 
 11512 ;;  rem             4   81[COMRAM] unsigned long 
 11513 ;;  new_exp         2   86[COMRAM] short 
 11514 ;;  aexp            1   93[COMRAM] unsigned char 
 11515 ;;  bexp            1   92[COMRAM] unsigned char 
 11516 ;;  sign            1   85[COMRAM] unsigned char 
 11517 ;; Return value:  Size  Location     Type
 11518 ;;                  4   69[COMRAM] unsigned char 
 11519 ;; Registers used:
 11520 ;;		wreg, status,2, status,0
 11521 ;; Tracked objects:
 11522 ;;		On entry : 0/0
 11523 ;;		On exit  : 0/0
 11524 ;;		Unchanged: 0/0
 11525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11526 ;;      Params:         8       0       0       0       0       0       0
 11527 ;;      Locals:        13       0       0       0       0       0       0
 11528 ;;      Temps:          4       0       0       0       0       0       0
 11529 ;;      Totals:        25       0       0       0       0       0       0
 11530 ;;Total ram usage:       25 bytes
 11531 ;; Hardware stack levels used:    1
 11532 ;; Hardware stack levels required when called:    1
 11533 ;; This function calls:
 11534 ;;		Nothing
 11535 ;; This function is called by:
 11536 ;;		_init_timer_2
 11537 ;;		_update_pwm_duty_ccp1
 11538 ;; This function uses a non-reentrant model
 11539 ;;
 11540                           
 11541                           	psect	text48
 11542  00256E                     __ptext48:
 11543                           	callstack 0
 11544  00256E                     ___fldiv:
 11545                           	callstack 0
 11546  00256E  FFFF               	dw	65535	; assembler added errata NOP
 11547  002570  5049               	movf	(___fldiv@b+3)^0,w,c
 11548  002572  0B80               	andlw	128
 11549  002574  6E56               	movwf	___fldiv@sign^0,c
 11550  002576  5049               	movf	(___fldiv@b+3)^0,w,c
 11551  002578  2449               	addwf	(___fldiv@b+3)^0,w,c
 11552  00257A  6E5D               	movwf	___fldiv@bexp^0,c
 11553  00257C  AE48               	btfss	(___fldiv@b+2)^0,7,c
 11554  00257E  EFC3  F012         	goto	u5611
 11555  002582  EFC6  F012         	goto	u5610
 11556  002586                     u5611:
 11557  002586  FFFF               	dw	65535	; assembler added errata NOP
 11558  002588  EFC8  F012         	goto	l4659
 11559  00258C                     u5610:
 11560  00258C  FFFF               	dw	65535	; assembler added errata NOP
 11561  00258E  805D               	bsf	___fldiv@bexp^0,0,c
 11562  002590                     l4659:
 11563  002590  FFFF               	dw	65535	; assembler added errata NOP
 11564  002592  505D               	movf	___fldiv@bexp^0,w,c
 11565  002594  B4D8               	btfsc	status,2,c
 11566  002596  EFCF  F012         	goto	u5621
 11567  00259A  EFD2  F012         	goto	u5620
 11568  00259E                     u5621:
 11569  00259E  FFFF               	dw	65535	; assembler added errata NOP
 11570  0025A0  EFEB  F012         	goto	l4669
 11571  0025A4                     u5620:
 11572  0025A4  FFFF               	dw	65535	; assembler added errata NOP
 11573  0025A6  285D               	incf	___fldiv@bexp^0,w,c
 11574  0025A8  A4D8               	btfss	status,2,c
 11575  0025AA  EFD9  F012         	goto	u5631
 11576  0025AE  EFDC  F012         	goto	u5630
 11577  0025B2                     u5631:
 11578  0025B2  FFFF               	dw	65535	; assembler added errata NOP
 11579  0025B4  EFE5  F012         	goto	l4665
 11580  0025B8                     u5630:
 11581  0025B8  FFFF               	dw	65535	; assembler added errata NOP
 11582  0025BA  0E00               	movlw	0
 11583  0025BC  6E46               	movwf	___fldiv@b^0,c
 11584  0025BE  0E00               	movlw	0
 11585  0025C0  6E47               	movwf	(___fldiv@b+1)^0,c
 11586  0025C2  0E00               	movlw	0
 11587  0025C4  6E48               	movwf	(___fldiv@b+2)^0,c
 11588  0025C6  0E00               	movlw	0
 11589  0025C8  6E49               	movwf	(___fldiv@b+3)^0,c
 11590  0025CA                     l4665:
 11591  0025CA  FFFF               	dw	65535	; assembler added errata NOP
 11592  0025CC  8E48               	bsf	(___fldiv@b+2)^0,7,c
 11593  0025CE  0E00               	movlw	0
 11594  0025D0  6E49               	movwf	(___fldiv@b+3)^0,c
 11595  0025D2  EFF4  F012         	goto	l4671
 11596  0025D6                     l4669:
 11597  0025D6  FFFF               	dw	65535	; assembler added errata NOP
 11598  0025D8  0E00               	movlw	0
 11599  0025DA  6E46               	movwf	___fldiv@b^0,c
 11600  0025DC  0E00               	movlw	0
 11601  0025DE  6E47               	movwf	(___fldiv@b+1)^0,c
 11602  0025E0  0E00               	movlw	0
 11603  0025E2  6E48               	movwf	(___fldiv@b+2)^0,c
 11604  0025E4  0E00               	movlw	0
 11605  0025E6  6E49               	movwf	(___fldiv@b+3)^0,c
 11606  0025E8                     l4671:
 11607  0025E8  FFFF               	dw	65535	; assembler added errata NOP
 11608  0025EA  504D               	movf	(___fldiv@a+3)^0,w,c
 11609  0025EC  0B80               	andlw	128
 11610  0025EE  1A56               	xorwf	___fldiv@sign^0,f,c
 11611  0025F0  504D               	movf	(___fldiv@a+3)^0,w,c
 11612  0025F2  244D               	addwf	(___fldiv@a+3)^0,w,c
 11613  0025F4  6E5E               	movwf	___fldiv@aexp^0,c
 11614  0025F6  AE4C               	btfss	(___fldiv@a+2)^0,7,c
 11615  0025F8  EF00  F013         	goto	u5641
 11616  0025FC  EF03  F013         	goto	u5640
 11617  002600                     u5641:
 11618  002600  FFFF               	dw	65535	; assembler added errata NOP
 11619  002602  EF05  F013         	goto	l4679
 11620  002606                     u5640:
 11621  002606  FFFF               	dw	65535	; assembler added errata NOP
 11622  002608  805E               	bsf	___fldiv@aexp^0,0,c
 11623  00260A                     l4679:
 11624  00260A  FFFF               	dw	65535	; assembler added errata NOP
 11625  00260C  505E               	movf	___fldiv@aexp^0,w,c
 11626  00260E  B4D8               	btfsc	status,2,c
 11627  002610  EF0C  F013         	goto	u5651
 11628  002614  EF0F  F013         	goto	u5650
 11629  002618                     u5651:
 11630  002618  FFFF               	dw	65535	; assembler added errata NOP
 11631  00261A  EF28  F013         	goto	l4689
 11632  00261E                     u5650:
 11633  00261E  FFFF               	dw	65535	; assembler added errata NOP
 11634  002620  285E               	incf	___fldiv@aexp^0,w,c
 11635  002622  A4D8               	btfss	status,2,c
 11636  002624  EF16  F013         	goto	u5661
 11637  002628  EF19  F013         	goto	u5660
 11638  00262C                     u5661:
 11639  00262C  FFFF               	dw	65535	; assembler added errata NOP
 11640  00262E  EF22  F013         	goto	l4685
 11641  002632                     u5660:
 11642  002632  FFFF               	dw	65535	; assembler added errata NOP
 11643  002634  0E00               	movlw	0
 11644  002636  6E4A               	movwf	___fldiv@a^0,c
 11645  002638  0E00               	movlw	0
 11646  00263A  6E4B               	movwf	(___fldiv@a+1)^0,c
 11647  00263C  0E00               	movlw	0
 11648  00263E  6E4C               	movwf	(___fldiv@a+2)^0,c
 11649  002640  0E00               	movlw	0
 11650  002642  6E4D               	movwf	(___fldiv@a+3)^0,c
 11651  002644                     l4685:
 11652  002644  FFFF               	dw	65535	; assembler added errata NOP
 11653  002646  8E4C               	bsf	(___fldiv@a+2)^0,7,c
 11654  002648  0E00               	movlw	0
 11655  00264A  6E4D               	movwf	(___fldiv@a+3)^0,c
 11656  00264C  EF31  F013         	goto	l4691
 11657  002650                     l4689:
 11658  002650  FFFF               	dw	65535	; assembler added errata NOP
 11659  002652  0E00               	movlw	0
 11660  002654  6E4A               	movwf	___fldiv@a^0,c
 11661  002656  0E00               	movlw	0
 11662  002658  6E4B               	movwf	(___fldiv@a+1)^0,c
 11663  00265A  0E00               	movlw	0
 11664  00265C  6E4C               	movwf	(___fldiv@a+2)^0,c
 11665  00265E  0E00               	movlw	0
 11666  002660  6E4D               	movwf	(___fldiv@a+3)^0,c
 11667  002662                     l4691:
 11668  002662  FFFF               	dw	65535	; assembler added errata NOP
 11669  002664  504A               	movf	___fldiv@a^0,w,c
 11670  002666  104B               	iorwf	(___fldiv@a+1)^0,w,c
 11671  002668  104C               	iorwf	(___fldiv@a+2)^0,w,c
 11672  00266A  104D               	iorwf	(___fldiv@a+3)^0,w,c
 11673  00266C  A4D8               	btfss	status,2,c
 11674  00266E  EF3B  F013         	goto	u5671
 11675  002672  EF3E  F013         	goto	u5670
 11676  002676                     u5671:
 11677  002676  FFFF               	dw	65535	; assembler added errata NOP
 11678  002678  EF58  F013         	goto	l4703
 11679  00267C                     u5670:
 11680  00267C  FFFF               	dw	65535	; assembler added errata NOP
 11681  00267E  0E00               	movlw	0
 11682  002680  6E46               	movwf	___fldiv@b^0,c
 11683  002682  0E00               	movlw	0
 11684  002684  6E47               	movwf	(___fldiv@b+1)^0,c
 11685  002686  0E00               	movlw	0
 11686  002688  6E48               	movwf	(___fldiv@b+2)^0,c
 11687  00268A  0E00               	movlw	0
 11688  00268C  6E49               	movwf	(___fldiv@b+3)^0,c
 11689  00268E  0E80               	movlw	128
 11690  002690  1248               	iorwf	(___fldiv@b+2)^0,f,c
 11691  002692  0E7F               	movlw	127
 11692  002694  1249               	iorwf	(___fldiv@b+3)^0,f,c
 11693  002696                     l4697:
 11694  002696  FFFF               	dw	65535	; assembler added errata NOP
 11695  002698  5056               	movf	___fldiv@sign^0,w,c
 11696  00269A  1249               	iorwf	(___fldiv@b+3)^0,f,c
 11697  00269C  C046  F046         	movff	___fldiv@b,?___fldiv
 11698  0026A0  C047  F047         	movff	___fldiv@b+1,?___fldiv+1
 11699  0026A4  C048  F048         	movff	___fldiv@b+2,?___fldiv+2
 11700  0026A8  C049  F049         	movff	___fldiv@b+3,?___fldiv+3
 11701  0026AC  EFCD  F014         	goto	l959
 11702  0026B0                     l4703:
 11703  0026B0  FFFF               	dw	65535	; assembler added errata NOP
 11704  0026B2  505D               	movf	___fldiv@bexp^0,w,c
 11705  0026B4  A4D8               	btfss	status,2,c
 11706  0026B6  EF5F  F013         	goto	u5681
 11707  0026BA  EF62  F013         	goto	u5680
 11708  0026BE                     u5681:
 11709  0026BE  FFFF               	dw	65535	; assembler added errata NOP
 11710  0026C0  EF6D  F013         	goto	l4711
 11711  0026C4                     u5680:
 11712  0026C4  FFFF               	dw	65535	; assembler added errata NOP
 11713  0026C6  0E00               	movlw	0
 11714  0026C8  6E46               	movwf	?___fldiv^0,c
 11715  0026CA  0E00               	movlw	0
 11716  0026CC  6E47               	movwf	(?___fldiv+1)^0,c
 11717  0026CE  0E00               	movlw	0
 11718  0026D0  6E48               	movwf	(?___fldiv+2)^0,c
 11719  0026D2  0E00               	movlw	0
 11720  0026D4  6E49               	movwf	(?___fldiv+3)^0,c
 11721  0026D6  EFCD  F014         	goto	l959
 11722  0026DA                     l4711:
 11723  0026DA  FFFF               	dw	65535	; assembler added errata NOP
 11724  0026DC  505E               	movf	___fldiv@aexp^0,w,c
 11725  0026DE  C05D  F04E         	movff	___fldiv@bexp,??___fldiv
 11726  0026E2  6A4F               	clrf	(??___fldiv+1)^0,c
 11727  0026E4  5E4E               	subwf	??___fldiv^0,f,c
 11728  0026E6  0E00               	movlw	0
 11729  0026E8  5A4F               	subwfb	(??___fldiv+1)^0,f,c
 11730  0026EA  0E7F               	movlw	127
 11731  0026EC  244E               	addwf	??___fldiv^0,w,c
 11732  0026EE  6E57               	movwf	___fldiv@new_exp^0,c
 11733  0026F0  0E00               	movlw	0
 11734  0026F2  204F               	addwfc	(??___fldiv+1)^0,w,c
 11735  0026F4  6E58               	movwf	(___fldiv@new_exp+1)^0,c
 11736  0026F6  C046  F052         	movff	___fldiv@b,___fldiv@rem
 11737  0026FA  C047  F053         	movff	___fldiv@b+1,___fldiv@rem+1
 11738  0026FE  C048  F054         	movff	___fldiv@b+2,___fldiv@rem+2
 11739  002702  C049  F055         	movff	___fldiv@b+3,___fldiv@rem+3
 11740  002706  0E00               	movlw	0
 11741  002708  6E46               	movwf	___fldiv@b^0,c
 11742  00270A  0E00               	movlw	0
 11743  00270C  6E47               	movwf	(___fldiv@b+1)^0,c
 11744  00270E  0E00               	movlw	0
 11745  002710  6E48               	movwf	(___fldiv@b+2)^0,c
 11746  002712  0E00               	movlw	0
 11747  002714  6E49               	movwf	(___fldiv@b+3)^0,c
 11748  002716  0E00               	movlw	0
 11749  002718  6E59               	movwf	___fldiv@grs^0,c
 11750  00271A  0E00               	movlw	0
 11751  00271C  6E5A               	movwf	(___fldiv@grs+1)^0,c
 11752  00271E  0E00               	movlw	0
 11753  002720  6E5B               	movwf	(___fldiv@grs+2)^0,c
 11754  002722  0E00               	movlw	0
 11755  002724  6E5C               	movwf	(___fldiv@grs+3)^0,c
 11756  002726  0E00               	movlw	0
 11757  002728  6E5E               	movwf	___fldiv@aexp^0,c
 11758  00272A  EFD9  F013         	goto	l961
 11759  00272E                     l4721:
 11760  00272E  FFFF               	dw	65535	; assembler added errata NOP
 11761  002730  505E               	movf	___fldiv@aexp^0,w,c
 11762  002732  B4D8               	btfsc	status,2,c
 11763  002734  EF9E  F013         	goto	u5691
 11764  002738  EFA1  F013         	goto	u5690
 11765  00273C                     u5691:
 11766  00273C  FFFF               	dw	65535	; assembler added errata NOP
 11767  00273E  EFBC  F013         	goto	l4729
 11768  002742                     u5690:
 11769  002742  FFFF               	dw	65535	; assembler added errata NOP
 11770  002744  90D8               	bcf	status,0,c
 11771  002746  3652               	rlcf	___fldiv@rem^0,f,c
 11772  002748  3653               	rlcf	(___fldiv@rem+1)^0,f,c
 11773  00274A  3654               	rlcf	(___fldiv@rem+2)^0,f,c
 11774  00274C  3655               	rlcf	(___fldiv@rem+3)^0,f,c
 11775  00274E  90D8               	bcf	status,0,c
 11776  002750  3646               	rlcf	___fldiv@b^0,f,c
 11777  002752  3647               	rlcf	(___fldiv@b+1)^0,f,c
 11778  002754  3648               	rlcf	(___fldiv@b+2)^0,f,c
 11779  002756  3649               	rlcf	(___fldiv@b+3)^0,f,c
 11780  002758  AE5C               	btfss	(___fldiv@grs+3)^0,7,c
 11781  00275A  EFB1  F013         	goto	u5701
 11782  00275E  EFB4  F013         	goto	u5700
 11783  002762                     u5701:
 11784  002762  FFFF               	dw	65535	; assembler added errata NOP
 11785  002764  EFB6  F013         	goto	l964
 11786  002768                     u5700:
 11787  002768  FFFF               	dw	65535	; assembler added errata NOP
 11788  00276A  8046               	bsf	___fldiv@b^0,0,c
 11789  00276C                     l964:
 11790  00276C  FFFF               	dw	65535	; assembler added errata NOP
 11791  00276E  90D8               	bcf	status,0,c
 11792  002770  3659               	rlcf	___fldiv@grs^0,f,c
 11793  002772  365A               	rlcf	(___fldiv@grs+1)^0,f,c
 11794  002774  365B               	rlcf	(___fldiv@grs+2)^0,f,c
 11795  002776  365C               	rlcf	(___fldiv@grs+3)^0,f,c
 11796  002778                     l4729:
 11797  002778  FFFF               	dw	65535	; assembler added errata NOP
 11798  00277A  504A               	movf	___fldiv@a^0,w,c
 11799  00277C  5C52               	subwf	___fldiv@rem^0,w,c
 11800  00277E  504B               	movf	(___fldiv@a+1)^0,w,c
 11801  002780  5853               	subwfb	(___fldiv@rem+1)^0,w,c
 11802  002782  504C               	movf	(___fldiv@a+2)^0,w,c
 11803  002784  5854               	subwfb	(___fldiv@rem+2)^0,w,c
 11804  002786  504D               	movf	(___fldiv@a+3)^0,w,c
 11805  002788  5855               	subwfb	(___fldiv@rem+3)^0,w,c
 11806  00278A  A0D8               	btfss	status,0,c
 11807  00278C  EFCA  F013         	goto	u5711
 11808  002790  EFCD  F013         	goto	u5710
 11809  002794                     u5711:
 11810  002794  FFFF               	dw	65535	; assembler added errata NOP
 11811  002796  EFD7  F013         	goto	l4735
 11812  00279A                     u5710:
 11813  00279A  FFFF               	dw	65535	; assembler added errata NOP
 11814  00279C  8C5C               	bsf	(___fldiv@grs+3)^0,6,c
 11815  00279E  504A               	movf	___fldiv@a^0,w,c
 11816  0027A0  5E52               	subwf	___fldiv@rem^0,f,c
 11817  0027A2  504B               	movf	(___fldiv@a+1)^0,w,c
 11818  0027A4  5A53               	subwfb	(___fldiv@rem+1)^0,f,c
 11819  0027A6  504C               	movf	(___fldiv@a+2)^0,w,c
 11820  0027A8  5A54               	subwfb	(___fldiv@rem+2)^0,f,c
 11821  0027AA  504D               	movf	(___fldiv@a+3)^0,w,c
 11822  0027AC  5A55               	subwfb	(___fldiv@rem+3)^0,f,c
 11823  0027AE                     l4735:
 11824  0027AE  FFFF               	dw	65535	; assembler added errata NOP
 11825  0027B0  2A5E               	incf	___fldiv@aexp^0,f,c
 11826  0027B2                     l961:
 11827  0027B2  FFFF               	dw	65535	; assembler added errata NOP
 11828  0027B4  0E19               	movlw	25
 11829  0027B6  645E               	cpfsgt	___fldiv@aexp^0,c
 11830  0027B8  EFE0  F013         	goto	u5721
 11831  0027BC  EFE3  F013         	goto	u5720
 11832  0027C0                     u5721:
 11833  0027C0  FFFF               	dw	65535	; assembler added errata NOP
 11834  0027C2  EF97  F013         	goto	l4721
 11835  0027C6                     u5720:
 11836  0027C6  FFFF               	dw	65535	; assembler added errata NOP
 11837  0027C8  5052               	movf	___fldiv@rem^0,w,c
 11838  0027CA  1053               	iorwf	(___fldiv@rem+1)^0,w,c
 11839  0027CC  1054               	iorwf	(___fldiv@rem+2)^0,w,c
 11840  0027CE  1055               	iorwf	(___fldiv@rem+3)^0,w,c
 11841  0027D0  B4D8               	btfsc	status,2,c
 11842  0027D2  EFED  F013         	goto	u5731
 11843  0027D6  EFF0  F013         	goto	u5730
 11844  0027DA                     u5731:
 11845  0027DA  FFFF               	dw	65535	; assembler added errata NOP
 11846  0027DC  EF0D  F014         	goto	l4747
 11847  0027E0                     u5730:
 11848  0027E0  FFFF               	dw	65535	; assembler added errata NOP
 11849  0027E2  8059               	bsf	___fldiv@grs^0,0,c
 11850  0027E4  EF0D  F014         	goto	l4747
 11851  0027E8                     l4741:
 11852  0027E8  FFFF               	dw	65535	; assembler added errata NOP
 11853  0027EA  90D8               	bcf	status,0,c
 11854  0027EC  3646               	rlcf	___fldiv@b^0,f,c
 11855  0027EE  3647               	rlcf	(___fldiv@b+1)^0,f,c
 11856  0027F0  3648               	rlcf	(___fldiv@b+2)^0,f,c
 11857  0027F2  3649               	rlcf	(___fldiv@b+3)^0,f,c
 11858  0027F4  AE5C               	btfss	(___fldiv@grs+3)^0,7,c
 11859  0027F6  EFFF  F013         	goto	u5741
 11860  0027FA  EF02  F014         	goto	u5740
 11861  0027FE                     u5741:
 11862  0027FE  FFFF               	dw	65535	; assembler added errata NOP
 11863  002800  EF04  F014         	goto	l970
 11864  002804                     u5740:
 11865  002804  FFFF               	dw	65535	; assembler added errata NOP
 11866  002806  8046               	bsf	___fldiv@b^0,0,c
 11867  002808                     l970:
 11868  002808  FFFF               	dw	65535	; assembler added errata NOP
 11869  00280A  90D8               	bcf	status,0,c
 11870  00280C  3659               	rlcf	___fldiv@grs^0,f,c
 11871  00280E  365A               	rlcf	(___fldiv@grs+1)^0,f,c
 11872  002810  365B               	rlcf	(___fldiv@grs+2)^0,f,c
 11873  002812  365C               	rlcf	(___fldiv@grs+3)^0,f,c
 11874  002814  0657               	decf	___fldiv@new_exp^0,f,c
 11875  002816  A0D8               	btfss	status,0,c
 11876  002818  0658               	decf	(___fldiv@new_exp+1)^0,f,c
 11877  00281A                     l4747:
 11878  00281A  FFFF               	dw	65535	; assembler added errata NOP
 11879  00281C  AE48               	btfss	(___fldiv@b+2)^0,7,c
 11880  00281E  EF13  F014         	goto	u5751
 11881  002822  EF16  F014         	goto	u5750
 11882  002826                     u5751:
 11883  002826  FFFF               	dw	65535	; assembler added errata NOP
 11884  002828  EFF4  F013         	goto	l4741
 11885  00282C                     u5750:
 11886  00282C  FFFF               	dw	65535	; assembler added errata NOP
 11887  00282E  0E00               	movlw	0
 11888  002830  6E5E               	movwf	___fldiv@aexp^0,c
 11889  002832  AE5C               	btfss	(___fldiv@grs+3)^0,7,c
 11890  002834  EF1E  F014         	goto	u5761
 11891  002838  EF21  F014         	goto	u5760
 11892  00283C                     u5761:
 11893  00283C  FFFF               	dw	65535	; assembler added errata NOP
 11894  00283E  EF4C  F014         	goto	l972
 11895  002842                     u5760:
 11896  002842  FFFF               	dw	65535	; assembler added errata NOP
 11897  002844  0EFF               	movlw	255
 11898  002846  1459               	andwf	___fldiv@grs^0,w,c
 11899  002848  6E4E               	movwf	??___fldiv^0,c
 11900  00284A  0EFF               	movlw	255
 11901  00284C  145A               	andwf	(___fldiv@grs+1)^0,w,c
 11902  00284E  6E4F               	movwf	(??___fldiv+1)^0,c
 11903  002850  0EFF               	movlw	255
 11904  002852  145B               	andwf	(___fldiv@grs+2)^0,w,c
 11905  002854  6E50               	movwf	(??___fldiv+2)^0,c
 11906  002856  0E7F               	movlw	127
 11907  002858  145C               	andwf	(___fldiv@grs+3)^0,w,c
 11908  00285A  6E51               	movwf	(??___fldiv+3)^0,c
 11909  00285C  504E               	movf	??___fldiv^0,w,c
 11910  00285E  104F               	iorwf	(??___fldiv+1)^0,w,c
 11911  002860  1050               	iorwf	(??___fldiv+2)^0,w,c
 11912  002862  1051               	iorwf	(??___fldiv+3)^0,w,c
 11913  002864  B4D8               	btfsc	status,2,c
 11914  002866  EF37  F014         	goto	u5771
 11915  00286A  EF3A  F014         	goto	u5770
 11916  00286E                     u5771:
 11917  00286E  FFFF               	dw	65535	; assembler added errata NOP
 11918  002870  EF40  F014         	goto	l973
 11919  002874                     u5770:
 11920  002874  FFFF               	dw	65535	; assembler added errata NOP
 11921  002876                     l4755:
 11922  002876  FFFF               	dw	65535	; assembler added errata NOP
 11923  002878  0E01               	movlw	1
 11924  00287A  6E5E               	movwf	___fldiv@aexp^0,c
 11925  00287C  EF4C  F014         	goto	l972
 11926  002880                     l973:
 11927  002880  FFFF               	dw	65535	; assembler added errata NOP
 11928  002882  A046               	btfss	___fldiv@b^0,0,c
 11929  002884  EF46  F014         	goto	u5781
 11930  002888  EF49  F014         	goto	u5780
 11931  00288C                     u5781:
 11932  00288C  FFFF               	dw	65535	; assembler added errata NOP
 11933  00288E  EF4C  F014         	goto	l972
 11934  002892                     u5780:
 11935  002892  FFFF               	dw	65535	; assembler added errata NOP
 11936  002894  EF3B  F014         	goto	l4755
 11937  002898                     l972:
 11938  002898  FFFF               	dw	65535	; assembler added errata NOP
 11939  00289A  505E               	movf	___fldiv@aexp^0,w,c
 11940  00289C  B4D8               	btfsc	status,2,c
 11941  00289E  EF53  F014         	goto	u5791
 11942  0028A2  EF56  F014         	goto	u5790
 11943  0028A6                     u5791:
 11944  0028A6  FFFF               	dw	65535	; assembler added errata NOP
 11945  0028A8  EF7D  F014         	goto	l4767
 11946  0028AC                     u5790:
 11947  0028AC  FFFF               	dw	65535	; assembler added errata NOP
 11948  0028AE  0E01               	movlw	1
 11949  0028B0  2646               	addwf	___fldiv@b^0,f,c
 11950  0028B2  0E00               	movlw	0
 11951  0028B4  2247               	addwfc	(___fldiv@b+1)^0,f,c
 11952  0028B6  2248               	addwfc	(___fldiv@b+2)^0,f,c
 11953  0028B8  2249               	addwfc	(___fldiv@b+3)^0,f,c
 11954  0028BA  A049               	btfss	(___fldiv@b+3)^0,0,c
 11955  0028BC  EF62  F014         	goto	u5801
 11956  0028C0  EF65  F014         	goto	u5800
 11957  0028C4                     u5801:
 11958  0028C4  FFFF               	dw	65535	; assembler added errata NOP
 11959  0028C6  EF7D  F014         	goto	l4767
 11960  0028CA                     u5800:
 11961  0028CA  FFFF               	dw	65535	; assembler added errata NOP
 11962  0028CC  C046  F04E         	movff	___fldiv@b,??___fldiv
 11963  0028D0  C047  F04F         	movff	___fldiv@b+1,??___fldiv+1
 11964  0028D4  C048  F050         	movff	___fldiv@b+2,??___fldiv+2
 11965  0028D8  C049  F051         	movff	___fldiv@b+3,??___fldiv+3
 11966  0028DC  3451               	rlcf	(??___fldiv+3)^0,w,c
 11967  0028DE  3251               	rrcf	(??___fldiv+3)^0,f,c
 11968  0028E0  3250               	rrcf	(??___fldiv+2)^0,f,c
 11969  0028E2  324F               	rrcf	(??___fldiv+1)^0,f,c
 11970  0028E4  324E               	rrcf	??___fldiv^0,f,c
 11971  0028E6  C04E  F046         	movff	??___fldiv,___fldiv@b
 11972  0028EA  C04F  F047         	movff	??___fldiv+1,___fldiv@b+1
 11973  0028EE  C050  F048         	movff	??___fldiv+2,___fldiv@b+2
 11974  0028F2  C051  F049         	movff	??___fldiv+3,___fldiv@b+3
 11975  0028F6  4A57               	infsnz	___fldiv@new_exp^0,f,c
 11976  0028F8  2A58               	incf	(___fldiv@new_exp+1)^0,f,c
 11977  0028FA                     l4767:
 11978  0028FA  FFFF               	dw	65535	; assembler added errata NOP
 11979  0028FC  BE58               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11980  0028FE  EF89  F014         	goto	u5811
 11981  002902  5058               	movf	(___fldiv@new_exp+1)^0,w,c
 11982  002904  E109               	bnz	u5810
 11983  002906  2857               	incf	___fldiv@new_exp^0,w,c
 11984  002908  A0D8               	btfss	status,0,c
 11985  00290A  EF89  F014         	goto	u5811
 11986  00290E  EF8C  F014         	goto	u5810
 11987  002912                     u5811:
 11988  002912  FFFF               	dw	65535	; assembler added errata NOP
 11989  002914  EF98  F014         	goto	l4771
 11990  002918                     u5810:
 11991  002918  FFFF               	dw	65535	; assembler added errata NOP
 11992  00291A  0E00               	movlw	0
 11993  00291C  6E58               	movwf	(___fldiv@new_exp+1)^0,c
 11994  00291E  6857               	setf	___fldiv@new_exp^0,c
 11995  002920  0E00               	movlw	0
 11996  002922  6E46               	movwf	___fldiv@b^0,c
 11997  002924  0E00               	movlw	0
 11998  002926  6E47               	movwf	(___fldiv@b+1)^0,c
 11999  002928  0E00               	movlw	0
 12000  00292A  6E48               	movwf	(___fldiv@b+2)^0,c
 12001  00292C  0E00               	movlw	0
 12002  00292E  6E49               	movwf	(___fldiv@b+3)^0,c
 12003  002930                     l4771:
 12004  002930  FFFF               	dw	65535	; assembler added errata NOP
 12005  002932  BE58               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12006  002934  EFA7  F014         	goto	u5820
 12007  002938  5058               	movf	(___fldiv@new_exp+1)^0,w,c
 12008  00293A  E106               	bnz	u5821
 12009  00293C  0457               	decf	___fldiv@new_exp^0,w,c
 12010  00293E  B0D8               	btfsc	status,0,c
 12011  002940  EFA4  F014         	goto	u5821
 12012  002944  EFA7  F014         	goto	u5820
 12013  002948                     u5821:
 12014  002948  FFFF               	dw	65535	; assembler added errata NOP
 12015  00294A  EFB6  F014         	goto	l4775
 12016  00294E                     u5820:
 12017  00294E  FFFF               	dw	65535	; assembler added errata NOP
 12018  002950  0E00               	movlw	0
 12019  002952  6E58               	movwf	(___fldiv@new_exp+1)^0,c
 12020  002954  0E00               	movlw	0
 12021  002956  6E57               	movwf	___fldiv@new_exp^0,c
 12022  002958  0E00               	movlw	0
 12023  00295A  6E46               	movwf	___fldiv@b^0,c
 12024  00295C  0E00               	movlw	0
 12025  00295E  6E47               	movwf	(___fldiv@b+1)^0,c
 12026  002960  0E00               	movlw	0
 12027  002962  6E48               	movwf	(___fldiv@b+2)^0,c
 12028  002964  0E00               	movlw	0
 12029  002966  6E49               	movwf	(___fldiv@b+3)^0,c
 12030  002968  0E00               	movlw	0
 12031  00296A  6E56               	movwf	___fldiv@sign^0,c
 12032  00296C                     l4775:
 12033  00296C  FFFF               	dw	65535	; assembler added errata NOP
 12034  00296E  C057  F05D         	movff	___fldiv@new_exp,___fldiv@bexp
 12035  002972  A05D               	btfss	___fldiv@bexp^0,0,c
 12036  002974  EFBE  F014         	goto	u5831
 12037  002978  EFC1  F014         	goto	u5830
 12038  00297C                     u5831:
 12039  00297C  FFFF               	dw	65535	; assembler added errata NOP
 12040  00297E  EFC5  F014         	goto	l4781
 12041  002982                     u5830:
 12042  002982  FFFF               	dw	65535	; assembler added errata NOP
 12043  002984  8E48               	bsf	(___fldiv@b+2)^0,7,c
 12044  002986  EFC7  F014         	goto	l4783
 12045  00298A                     l4781:
 12046  00298A  FFFF               	dw	65535	; assembler added errata NOP
 12047  00298C  9E48               	bcf	(___fldiv@b+2)^0,7,c
 12048  00298E                     l4783:
 12049  00298E  FFFF               	dw	65535	; assembler added errata NOP
 12050  002990  90D8               	bcf	status,0,c
 12051  002992  305D               	rrcf	___fldiv@bexp^0,w,c
 12052  002994  6E49               	movwf	(___fldiv@b+3)^0,c
 12053  002996  EF4B  F013         	goto	l4697
 12054  00299A                     l959:
 12055  00299A  FFFF               	dw	65535	; assembler added errata NOP
 12056  00299C  0012               	return		;funcret
 12057  00299E  FFFF               	dw	65535	; errata NOP
 12058  0029A0                     __end_of___fldiv:
 12059                           	callstack 0
 12060                           
 12061 ;; *************** function _init_USART *****************
 12062 ;; Defined at:
 12063 ;;		line 13 in file "serial_rs232.c"
 12064 ;; Parameters:    Size  Location     Type
 12065 ;;		None
 12066 ;; Auto vars:     Size  Location     Type
 12067 ;;		None
 12068 ;; Return value:  Size  Location     Type
 12069 ;;                  1    wreg      void 
 12070 ;; Registers used:
 12071 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12072 ;; Tracked objects:
 12073 ;;		On entry : 0/0
 12074 ;;		On exit  : 0/0
 12075 ;;		Unchanged: 0/0
 12076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12077 ;;      Params:         0       0       0       0       0       0       0
 12078 ;;      Locals:         0       0       0       0       0       0       0
 12079 ;;      Temps:          0       0       0       0       0       0       0
 12080 ;;      Totals:         0       0       0       0       0       0       0
 12081 ;;Total ram usage:        0 bytes
 12082 ;; Hardware stack levels used:    1
 12083 ;; Hardware stack levels required when called:    4
 12084 ;; This function calls:
 12085 ;;		___fltol
 12086 ;;		_roundf
 12087 ;; This function is called by:
 12088 ;;		_main
 12089 ;; This function uses a non-reentrant model
 12090 ;;
 12091                           
 12092                           	psect	text49
 12093  006868                     __ptext49:
 12094                           	callstack 0
 12095  006868                     _init_USART:
 12096                           	callstack 0
 12097  006868  FFFF               	dw	65535	; assembler added errata NOP
 12098  00686A                     
 12099                           ;serial_rs232.c: 24:     SPBRG = roundf(((fosc / desired_baudrate) / 16) - 1);
 12100  00686A  0E55               	movlw	85
 12101  00686C  6E77               	movwf	roundf@x^0,c
 12102  00686E  0E55               	movlw	85
 12103  006870  6E78               	movwf	(roundf@x+1)^0,c
 12104  006872  0EC8               	movlw	200
 12105  006874  6E79               	movwf	(roundf@x+2)^0,c
 12106  006876  0E41               	movlw	65
 12107  006878  6E7A               	movwf	(roundf@x+3)^0,c
 12108  00687A  ECD0  F014         	call	_roundf	;wreg free
 12109  00687E  C077  F0CA         	movff	?_roundf,___fltol@f1
 12110  006882  C078  F0CB         	movff	?_roundf+1,___fltol@f1+1
 12111  006886  C079  F0CC         	movff	?_roundf+2,___fltol@f1+2
 12112  00688A  C07A  F0CD         	movff	?_roundf+3,___fltol@f1+3
 12113  00688E  EC59  F03D         	call	___fltol	;wreg free
 12114  006892  0100               	movlb	0	; () banked
 12115  006894  51CA               	movf	?___fltol& (0+255),w,b
 12116  006896  6EAF               	movwf	175,c	;volatile
 12117  006898                     
 12118                           ; BSR set to: 0
 12119                           ;serial_rs232.c: 28:     TXSTAbits.TX9 = 0;
 12120  006898  9CAC               	bcf	172,6,c	;volatile
 12121  00689A                     
 12122                           ; BSR set to: 0
 12123                           ;serial_rs232.c: 29:     TXSTAbits.TXEN = 1;
 12124  00689A  8AAC               	bsf	172,5,c	;volatile
 12125  00689C                     
 12126                           ; BSR set to: 0
 12127                           ;serial_rs232.c: 30:     TXSTAbits.SYNC =0;
 12128  00689C  98AC               	bcf	172,4,c	;volatile
 12129  00689E                     
 12130                           ; BSR set to: 0
 12131                           ;serial_rs232.c: 31:     TXSTAbits.BRGH = 1;
 12132  00689E  84AC               	bsf	172,2,c	;volatile
 12133  0068A0                     
 12134                           ; BSR set to: 0
 12135                           ;serial_rs232.c: 33:     RCSTAbits.SPEN = 1;
 12136  0068A0  8EAB               	bsf	171,7,c	;volatile
 12137  0068A2                     
 12138                           ; BSR set to: 0
 12139                           ;serial_rs232.c: 34:     RCSTAbits.RX9 = 0;
 12140  0068A2  9CAB               	bcf	171,6,c	;volatile
 12141  0068A4                     
 12142                           ; BSR set to: 0
 12143                           ;serial_rs232.c: 35:     RCSTAbits.CREN = 1;
 12144  0068A4  88AB               	bsf	171,4,c	;volatile
 12145  0068A6                     
 12146                           ; BSR set to: 0
 12147  0068A6  0012               	return		;funcret
 12148  0068A8  FFFF               	dw	65535	; errata NOP
 12149  0068AA                     __end_of_init_USART:
 12150                           	callstack 0
 12151                           
 12152 ;; *************** function _roundf *****************
 12153 ;; Defined at:
 12154 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\roundf.c"
 12155 ;; Parameters:    Size  Location     Type
 12156 ;;  x               4  118[COMRAM] float 
 12157 ;; Auto vars:     Size  Location     Type
 12158 ;;  y               4   14[BANK0 ] float 
 12159 ;;  u               4   10[BANK0 ] struct .
 12160 ;;  e               2    4[BANK0 ] int 
 12161 ;; Return value:  Size  Location     Type
 12162 ;;                  4  118[COMRAM] float 
 12163 ;; Registers used:
 12164 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12165 ;; Tracked objects:
 12166 ;;		On entry : 0/0
 12167 ;;		On exit  : 0/0
 12168 ;;		Unchanged: 0/0
 12169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12170 ;;      Params:         4       0       0       0       0       0       0
 12171 ;;      Locals:         0      18       0       0       0       0       0
 12172 ;;      Temps:          4       0       0       0       0       0       0
 12173 ;;      Totals:         8      18       0       0       0       0       0
 12174 ;;Total ram usage:       26 bytes
 12175 ;; Hardware stack levels used:    1
 12176 ;; Hardware stack levels required when called:    3
 12177 ;; This function calls:
 12178 ;;		___fladd
 12179 ;;		___flge
 12180 ;;		___flmul
 12181 ;;		___flneg
 12182 ;;		___flsub
 12183 ;; This function is called by:
 12184 ;;		_init_USART
 12185 ;; This function uses a non-reentrant model
 12186 ;;
 12187                           
 12188                           	psect	text50
 12189  0029A0                     __ptext50:
 12190                           	callstack 0
 12191  0029A0                     _roundf:
 12192                           	callstack 0
 12193  0029A0  FFFF               	dw	65535	; assembler added errata NOP
 12194  0029A2  C080  F0C2         	movff	roundf@F525,roundf@u
 12195  0029A6  C081  F0C3         	movff	roundf@F525+1,roundf@u+1
 12196  0029AA  C082  F0C4         	movff	roundf@F525+2,roundf@u+2
 12197  0029AE  C083  F0C5         	movff	roundf@F525+3,roundf@u+3
 12198  0029B2  C077  F0C2         	movff	roundf@x,roundf@u
 12199  0029B6  C078  F0C3         	movff	roundf@x+1,roundf@u+1
 12200  0029BA  C079  F0C4         	movff	roundf@x+2,roundf@u+2
 12201  0029BE  C07A  F0C5         	movff	roundf@x+3,roundf@u+3
 12202  0029C2  C0C2  F07B         	movff	roundf@u,??_roundf
 12203  0029C6  C0C3  F07C         	movff	roundf@u+1,??_roundf+1
 12204  0029CA  C0C4  F07D         	movff	roundf@u+2,??_roundf+2
 12205  0029CE  C0C5  F07E         	movff	roundf@u+3,??_roundf+3
 12206  0029D2  0E18               	movlw	24
 12207  0029D4  EFF2  F014         	goto	u6270
 12208  0029D8                     u6275:
 12209  0029D8  FFFF               	dw	65535	; assembler added errata NOP
 12210  0029DA  90D8               	bcf	status,0,c
 12211  0029DC  327E               	rrcf	(??_roundf+3)^0,f,c
 12212  0029DE  327D               	rrcf	(??_roundf+2)^0,f,c
 12213  0029E0  327C               	rrcf	(??_roundf+1)^0,f,c
 12214  0029E2  327B               	rrcf	??_roundf^0,f,c
 12215  0029E4                     u6270:
 12216  0029E4  FFFF               	dw	65535	; assembler added errata NOP
 12217  0029E6  2EE8               	decfsz	wreg,f,c
 12218  0029E8  EFEC  F014         	goto	u6275
 12219  0029EC  507B               	movf	??_roundf^0,w,c
 12220  0029EE  0100               	movlb	0	; () banked
 12221  0029F0  6FBC               	movwf	roundf@e& (0+255),b
 12222  0029F2  6BBD               	clrf	(roundf@e+1)& (0+255),b
 12223  0029F4  BFBD               	btfsc	(roundf@e+1)& (0+255),7,b
 12224  0029F6  EF06  F015         	goto	u6281
 12225  0029FA  51BD               	movf	(roundf@e+1)& (0+255),w,b
 12226  0029FC  E10A               	bnz	u6280
 12227  0029FE  0E96               	movlw	150
 12228  002A00  5DBC               	subwf	roundf@e& (0+255),w,b
 12229  002A02  A0D8               	btfss	status,0,c
 12230  002A04  EF06  F015         	goto	u6281
 12231  002A08  EF09  F015         	goto	u6280
 12232  002A0C                     u6281:
 12233  002A0C  FFFF               	dw	65535	; assembler added errata NOP
 12234  002A0E  EF14  F015         	goto	l5061
 12235  002A12                     u6280:
 12236  002A12  FFFF               	dw	65535	; assembler added errata NOP
 12237  002A14                     
 12238                           ; BSR set to: 0
 12239  002A14  C077  F077         	movff	roundf@x,?_roundf
 12240  002A18  C078  F078         	movff	roundf@x+1,?_roundf+1
 12241  002A1C  C079  F079         	movff	roundf@x+2,?_roundf+2
 12242  002A20  C07A  F07A         	movff	roundf@x+3,?_roundf+3
 12243  002A24  EFC2  F016         	goto	l1063
 12244  002A28                     l5061:
 12245  002A28  FFFF               	dw	65535	; assembler added errata NOP
 12246                           
 12247                           ; BSR set to: 0
 12248  002A2A  C0C2  F07B         	movff	roundf@u,??_roundf
 12249  002A2E  C0C3  F07C         	movff	roundf@u+1,??_roundf+1
 12250  002A32  C0C4  F07D         	movff	roundf@u+2,??_roundf+2
 12251  002A36  C0C5  F07E         	movff	roundf@u+3,??_roundf+3
 12252  002A3A  0E20               	movlw	32
 12253  002A3C  EF26  F015         	goto	u6290
 12254  002A40                     u6295:
 12255  002A40  FFFF               	dw	65535	; assembler added errata NOP
 12256  002A42  90D8               	bcf	status,0,c
 12257  002A44  327E               	rrcf	(??_roundf+3)^0,f,c
 12258  002A46  327D               	rrcf	(??_roundf+2)^0,f,c
 12259  002A48  327C               	rrcf	(??_roundf+1)^0,f,c
 12260  002A4A  327B               	rrcf	??_roundf^0,f,c
 12261  002A4C                     u6290:
 12262  002A4C  FFFF               	dw	65535	; assembler added errata NOP
 12263  002A4E  2EE8               	decfsz	wreg,f,c
 12264  002A50  EF20  F015         	goto	u6295
 12265  002A54  507B               	movf	??_roundf^0,w,c
 12266  002A56  107C               	iorwf	(??_roundf+1)^0,w,c
 12267  002A58  107D               	iorwf	(??_roundf+2)^0,w,c
 12268  002A5A  107E               	iorwf	(??_roundf+3)^0,w,c
 12269  002A5C  B4D8               	btfsc	status,2,c
 12270  002A5E  EF33  F015         	goto	u6301
 12271  002A62  EF36  F015         	goto	u6300
 12272  002A66                     u6301:
 12273  002A66  FFFF               	dw	65535	; assembler added errata NOP
 12274  002A68  EF49  F015         	goto	l5065
 12275  002A6C                     u6300:
 12276  002A6C  FFFF               	dw	65535	; assembler added errata NOP
 12277  002A6E                     
 12278                           ; BSR set to: 0
 12279  002A6E  C077  F001         	movff	roundf@x,___flneg@f1
 12280  002A72  C078  F002         	movff	roundf@x+1,___flneg@f1+1
 12281  002A76  C079  F003         	movff	roundf@x+2,___flneg@f1+2
 12282  002A7A  C07A  F004         	movff	roundf@x+3,___flneg@f1+3
 12283  002A7E  EC13  F034         	call	___flneg	;wreg free
 12284  002A82  C001  F077         	movff	?___flneg,roundf@x
 12285  002A86  C002  F078         	movff	?___flneg+1,roundf@x+1
 12286  002A8A  C003  F079         	movff	?___flneg+2,roundf@x+2
 12287  002A8E  C004  F07A         	movff	?___flneg+3,roundf@x+3
 12288  002A92                     l5065:
 12289  002A92  FFFF               	dw	65535	; assembler added errata NOP
 12290  002A94  0100               	movlb	0	; () banked
 12291  002A96  BFBD               	btfsc	(roundf@e+1)& (0+255),7,b
 12292  002A98  EF5A  F015         	goto	u6310
 12293  002A9C  51BD               	movf	(roundf@e+1)& (0+255),w,b
 12294  002A9E  E107               	bnz	u6311
 12295  002AA0  0E7E               	movlw	126
 12296  002AA2  5DBC               	subwf	roundf@e& (0+255),w,b
 12297  002AA4  B0D8               	btfsc	status,0,c
 12298  002AA6  EF57  F015         	goto	u6311
 12299  002AAA  EF5A  F015         	goto	u6310
 12300  002AAE                     u6311:
 12301  002AAE  FFFF               	dw	65535	; assembler added errata NOP
 12302  002AB0  EF77  F015         	goto	l5071
 12303  002AB4                     u6310:
 12304  002AB4  FFFF               	dw	65535	; assembler added errata NOP
 12305  002AB6                     
 12306                           ; BSR set to: 0
 12307  002AB6  C0C2  F02D         	movff	roundf@u,___flmul@b
 12308  002ABA  C0C3  F02E         	movff	roundf@u+1,___flmul@b+1
 12309  002ABE  C0C4  F02F         	movff	roundf@u+2,___flmul@b+2
 12310  002AC2  C0C5  F030         	movff	roundf@u+3,___flmul@b+3
 12311  002AC6  0E00               	movlw	0
 12312  002AC8  6E31               	movwf	___flmul@a^0,c
 12313  002ACA  0E00               	movlw	0
 12314  002ACC  6E32               	movwf	(___flmul@a+1)^0,c
 12315  002ACE  0E00               	movlw	0
 12316  002AD0  6E33               	movwf	(___flmul@a+2)^0,c
 12317  002AD2  0E00               	movlw	0
 12318  002AD4  6E34               	movwf	(___flmul@a+3)^0,c
 12319  002AD6  EC65  F010         	call	___flmul	;wreg free
 12320  002ADA  C02D  F077         	movff	?___flmul,?_roundf
 12321  002ADE  C02E  F078         	movff	?___flmul+1,?_roundf+1
 12322  002AE2  C02F  F079         	movff	?___flmul+2,?_roundf+2
 12323  002AE6  C030  F07A         	movff	?___flmul+3,?_roundf+3
 12324  002AEA  EFC2  F016         	goto	l1063
 12325  002AEE                     l5071:
 12326  002AEE  FFFF               	dw	65535	; assembler added errata NOP
 12327                           
 12328                           ; BSR set to: 0
 12329  002AF0  0E00               	movlw	0
 12330  002AF2  6E63               	movwf	___fladd@a^0,c
 12331  002AF4  0E00               	movlw	0
 12332  002AF6  6E64               	movwf	(___fladd@a+1)^0,c
 12333  002AF8  0E00               	movlw	0
 12334  002AFA  6E65               	movwf	(___fladd@a+2)^0,c
 12335  002AFC  0E4B               	movlw	75
 12336  002AFE  6E66               	movwf	(___fladd@a+3)^0,c
 12337  002B00  C077  F05F         	movff	roundf@x,___fladd@b
 12338  002B04  C078  F060         	movff	roundf@x+1,___fladd@b+1
 12339  002B08  C079  F061         	movff	roundf@x+2,___fladd@b+2
 12340  002B0C  C07A  F062         	movff	roundf@x+3,___fladd@b+3
 12341  002B10  EC91  F00D         	call	___fladd	;wreg free
 12342  002B14  C05F  F0BE         	movff	?___fladd,_roundf$2131
 12343  002B18  C060  F0BF         	movff	?___fladd+1,_roundf$2131+1
 12344  002B1C  C061  F0C0         	movff	?___fladd+2,_roundf$2131+2
 12345  002B20  C062  F0C1         	movff	?___fladd+3,_roundf$2131+3
 12346  002B24  0E00               	movlw	0
 12347  002B26  6E63               	movwf	___fladd@a^0,c
 12348  002B28  0E00               	movlw	0
 12349  002B2A  6E64               	movwf	(___fladd@a+1)^0,c
 12350  002B2C  0E00               	movlw	0
 12351  002B2E  6E65               	movwf	(___fladd@a+2)^0,c
 12352  002B30  0ECB               	movlw	203
 12353  002B32  6E66               	movwf	(___fladd@a+3)^0,c
 12354  002B34  C0BE  F05F         	movff	_roundf$2131,___fladd@b
 12355  002B38  C0BF  F060         	movff	_roundf$2131+1,___fladd@b+1
 12356  002B3C  C0C0  F061         	movff	_roundf$2131+2,___fladd@b+2
 12357  002B40  C0C1  F062         	movff	_roundf$2131+3,___fladd@b+3
 12358  002B44  EC91  F00D         	call	___fladd	;wreg free
 12359  002B48  C05F  F0B8         	movff	?___fladd,_roundf$2132
 12360  002B4C  C060  F0B9         	movff	?___fladd+1,_roundf$2132+1
 12361  002B50  C061  F0BA         	movff	?___fladd+2,_roundf$2132+2
 12362  002B54  C062  F0BB         	movff	?___fladd+3,_roundf$2132+3
 12363  002B58  C0B8  F06F         	movff	_roundf$2132,___flsub@b
 12364  002B5C  C0B9  F070         	movff	_roundf$2132+1,___flsub@b+1
 12365  002B60  C0BA  F071         	movff	_roundf$2132+2,___flsub@b+2
 12366  002B64  C0BB  F072         	movff	_roundf$2132+3,___flsub@b+3
 12367  002B68  C077  F073         	movff	roundf@x,___flsub@a
 12368  002B6C  C078  F074         	movff	roundf@x+1,___flsub@a+1
 12369  002B70  C079  F075         	movff	roundf@x+2,___flsub@a+2
 12370  002B74  C07A  F076         	movff	roundf@x+3,___flsub@a+3
 12371  002B78  ECDB  F034         	call	___flsub	;wreg free
 12372  002B7C  C06F  F0C6         	movff	?___flsub,roundf@y
 12373  002B80  C070  F0C7         	movff	?___flsub+1,roundf@y+1
 12374  002B84  C071  F0C8         	movff	?___flsub+2,roundf@y+2
 12375  002B88  C072  F0C9         	movff	?___flsub+3,roundf@y+3
 12376  002B8C  0E00               	movlw	0
 12377  002B8E  6E01               	movwf	___flge@ff1^0,c
 12378  002B90  0E00               	movlw	0
 12379  002B92  6E02               	movwf	(___flge@ff1+1)^0,c
 12380  002B94  0E00               	movlw	0
 12381  002B96  6E03               	movwf	(___flge@ff1+2)^0,c
 12382  002B98  0E3F               	movlw	63
 12383  002B9A  6E04               	movwf	(___flge@ff1+3)^0,c
 12384  002B9C  C0C6  F005         	movff	roundf@y,___flge@ff2
 12385  002BA0  C0C7  F006         	movff	roundf@y+1,___flge@ff2+1
 12386  002BA4  C0C8  F007         	movff	roundf@y+2,___flge@ff2+2
 12387  002BA8  C0C9  F008         	movff	roundf@y+3,___flge@ff2+3
 12388  002BAC  ECC5  F03C         	call	___flge	;wreg free
 12389  002BB0  B0D8               	btfsc	status,0,c
 12390  002BB2  EFDD  F015         	goto	u6321
 12391  002BB6  EFE0  F015         	goto	u6320
 12392  002BBA                     u6321:
 12393  002BBA  FFFF               	dw	65535	; assembler added errata NOP
 12394  002BBC  EF17  F016         	goto	l5075
 12395  002BC0                     u6320:
 12396  002BC0  FFFF               	dw	65535	; assembler added errata NOP
 12397  002BC2  C077  F063         	movff	roundf@x,___fladd@a
 12398  002BC6  C078  F064         	movff	roundf@x+1,___fladd@a+1
 12399  002BCA  C079  F065         	movff	roundf@x+2,___fladd@a+2
 12400  002BCE  C07A  F066         	movff	roundf@x+3,___fladd@a+3
 12401  002BD2  C0C6  F05F         	movff	roundf@y,___fladd@b
 12402  002BD6  C0C7  F060         	movff	roundf@y+1,___fladd@b+1
 12403  002BDA  C0C8  F061         	movff	roundf@y+2,___fladd@b+2
 12404  002BDE  C0C9  F062         	movff	roundf@y+3,___fladd@b+3
 12405  002BE2  EC91  F00D         	call	___fladd	;wreg free
 12406  002BE6  C05F  F0BE         	movff	?___fladd,_roundf$2131
 12407  002BEA  C060  F0BF         	movff	?___fladd+1,_roundf$2131+1
 12408  002BEE  C061  F0C0         	movff	?___fladd+2,_roundf$2131+2
 12409  002BF2  C062  F0C1         	movff	?___fladd+3,_roundf$2131+3
 12410  002BF6  C0BE  F05F         	movff	_roundf$2131,___fladd@b
 12411  002BFA  C0BF  F060         	movff	_roundf$2131+1,___fladd@b+1
 12412  002BFE  C0C0  F061         	movff	_roundf$2131+2,___fladd@b+2
 12413  002C02  C0C1  F062         	movff	_roundf$2131+3,___fladd@b+3
 12414  002C06  0E00               	movlw	0
 12415  002C08  6E63               	movwf	___fladd@a^0,c
 12416  002C0A  0E00               	movlw	0
 12417  002C0C  6E64               	movwf	(___fladd@a+1)^0,c
 12418  002C0E  0E80               	movlw	128
 12419  002C10  6E65               	movwf	(___fladd@a+2)^0,c
 12420  002C12  0EBF               	movlw	191
 12421  002C14  6E66               	movwf	(___fladd@a+3)^0,c
 12422  002C16  EC91  F00D         	call	___fladd	;wreg free
 12423  002C1A  C05F  F0C6         	movff	?___fladd,roundf@y
 12424  002C1E  C060  F0C7         	movff	?___fladd+1,roundf@y+1
 12425  002C22  C061  F0C8         	movff	?___fladd+2,roundf@y+2
 12426  002C26  C062  F0C9         	movff	?___fladd+3,roundf@y+3
 12427  002C2A  EF84  F016         	goto	l5081
 12428  002C2E                     l5075:
 12429  002C2E  FFFF               	dw	65535	; assembler added errata NOP
 12430  002C30  0E00               	movlw	0
 12431  002C32  6E01               	movwf	___flge@ff1^0,c
 12432  002C34  0E00               	movlw	0
 12433  002C36  6E02               	movwf	(___flge@ff1+1)^0,c
 12434  002C38  0E00               	movlw	0
 12435  002C3A  6E03               	movwf	(___flge@ff1+2)^0,c
 12436  002C3C  0EBF               	movlw	191
 12437  002C3E  6E04               	movwf	(___flge@ff1+3)^0,c
 12438  002C40  C0C6  F005         	movff	roundf@y,___flge@ff2
 12439  002C44  C0C7  F006         	movff	roundf@y+1,___flge@ff2+1
 12440  002C48  C0C8  F007         	movff	roundf@y+2,___flge@ff2+2
 12441  002C4C  C0C9  F008         	movff	roundf@y+3,___flge@ff2+3
 12442  002C50  ECC5  F03C         	call	___flge	;wreg free
 12443  002C54  A0D8               	btfss	status,0,c
 12444  002C56  EF2F  F016         	goto	u6331
 12445  002C5A  EF32  F016         	goto	u6330
 12446  002C5E                     u6331:
 12447  002C5E  FFFF               	dw	65535	; assembler added errata NOP
 12448  002C60  EF69  F016         	goto	l5079
 12449  002C64                     u6330:
 12450  002C64  FFFF               	dw	65535	; assembler added errata NOP
 12451  002C66  C077  F063         	movff	roundf@x,___fladd@a
 12452  002C6A  C078  F064         	movff	roundf@x+1,___fladd@a+1
 12453  002C6E  C079  F065         	movff	roundf@x+2,___fladd@a+2
 12454  002C72  C07A  F066         	movff	roundf@x+3,___fladd@a+3
 12455  002C76  C0C6  F05F         	movff	roundf@y,___fladd@b
 12456  002C7A  C0C7  F060         	movff	roundf@y+1,___fladd@b+1
 12457  002C7E  C0C8  F061         	movff	roundf@y+2,___fladd@b+2
 12458  002C82  C0C9  F062         	movff	roundf@y+3,___fladd@b+3
 12459  002C86  EC91  F00D         	call	___fladd	;wreg free
 12460  002C8A  C05F  F0BE         	movff	?___fladd,_roundf$2131
 12461  002C8E  C060  F0BF         	movff	?___fladd+1,_roundf$2131+1
 12462  002C92  C061  F0C0         	movff	?___fladd+2,_roundf$2131+2
 12463  002C96  C062  F0C1         	movff	?___fladd+3,_roundf$2131+3
 12464  002C9A  C0BE  F05F         	movff	_roundf$2131,___fladd@b
 12465  002C9E  C0BF  F060         	movff	_roundf$2131+1,___fladd@b+1
 12466  002CA2  C0C0  F061         	movff	_roundf$2131+2,___fladd@b+2
 12467  002CA6  C0C1  F062         	movff	_roundf$2131+3,___fladd@b+3
 12468  002CAA  0E00               	movlw	0
 12469  002CAC  6E63               	movwf	___fladd@a^0,c
 12470  002CAE  0E00               	movlw	0
 12471  002CB0  6E64               	movwf	(___fladd@a+1)^0,c
 12472  002CB2  0E80               	movlw	128
 12473  002CB4  6E65               	movwf	(___fladd@a+2)^0,c
 12474  002CB6  0E3F               	movlw	63
 12475  002CB8  6E66               	movwf	(___fladd@a+3)^0,c
 12476  002CBA  EC91  F00D         	call	___fladd	;wreg free
 12477  002CBE  C05F  F0C6         	movff	?___fladd,roundf@y
 12478  002CC2  C060  F0C7         	movff	?___fladd+1,roundf@y+1
 12479  002CC6  C061  F0C8         	movff	?___fladd+2,roundf@y+2
 12480  002CCA  C062  F0C9         	movff	?___fladd+3,roundf@y+3
 12481  002CCE  EF84  F016         	goto	l5081
 12482  002CD2                     l5079:
 12483  002CD2  FFFF               	dw	65535	; assembler added errata NOP
 12484  002CD4  C0C6  F05F         	movff	roundf@y,___fladd@b
 12485  002CD8  C0C7  F060         	movff	roundf@y+1,___fladd@b+1
 12486  002CDC  C0C8  F061         	movff	roundf@y+2,___fladd@b+2
 12487  002CE0  C0C9  F062         	movff	roundf@y+3,___fladd@b+3
 12488  002CE4  C077  F063         	movff	roundf@x,___fladd@a
 12489  002CE8  C078  F064         	movff	roundf@x+1,___fladd@a+1
 12490  002CEC  C079  F065         	movff	roundf@x+2,___fladd@a+2
 12491  002CF0  C07A  F066         	movff	roundf@x+3,___fladd@a+3
 12492  002CF4  EC91  F00D         	call	___fladd	;wreg free
 12493  002CF8  C05F  F0C6         	movff	?___fladd,roundf@y
 12494  002CFC  C060  F0C7         	movff	?___fladd+1,roundf@y+1
 12495  002D00  C061  F0C8         	movff	?___fladd+2,roundf@y+2
 12496  002D04  C062  F0C9         	movff	?___fladd+3,roundf@y+3
 12497  002D08                     l5081:
 12498  002D08  FFFF               	dw	65535	; assembler added errata NOP
 12499  002D0A  C0C2  F07B         	movff	roundf@u,??_roundf
 12500  002D0E  C0C3  F07C         	movff	roundf@u+1,??_roundf+1
 12501  002D12  C0C4  F07D         	movff	roundf@u+2,??_roundf+2
 12502  002D16  C0C5  F07E         	movff	roundf@u+3,??_roundf+3
 12503  002D1A  0E20               	movlw	32
 12504  002D1C  EF96  F016         	goto	u6340
 12505  002D20                     u6345:
 12506  002D20  FFFF               	dw	65535	; assembler added errata NOP
 12507  002D22  90D8               	bcf	status,0,c
 12508  002D24  327E               	rrcf	(??_roundf+3)^0,f,c
 12509  002D26  327D               	rrcf	(??_roundf+2)^0,f,c
 12510  002D28  327C               	rrcf	(??_roundf+1)^0,f,c
 12511  002D2A  327B               	rrcf	??_roundf^0,f,c
 12512  002D2C                     u6340:
 12513  002D2C  FFFF               	dw	65535	; assembler added errata NOP
 12514  002D2E  2EE8               	decfsz	wreg,f,c
 12515  002D30  EF90  F016         	goto	u6345
 12516  002D34  507B               	movf	??_roundf^0,w,c
 12517  002D36  107C               	iorwf	(??_roundf+1)^0,w,c
 12518  002D38  107D               	iorwf	(??_roundf+2)^0,w,c
 12519  002D3A  107E               	iorwf	(??_roundf+3)^0,w,c
 12520  002D3C  B4D8               	btfsc	status,2,c
 12521  002D3E  EFA3  F016         	goto	u6351
 12522  002D42  EFA6  F016         	goto	u6350
 12523  002D46                     u6351:
 12524  002D46  FFFF               	dw	65535	; assembler added errata NOP
 12525  002D48  EFB9  F016         	goto	l5085
 12526  002D4C                     u6350:
 12527  002D4C  FFFF               	dw	65535	; assembler added errata NOP
 12528  002D4E  C0C6  F001         	movff	roundf@y,___flneg@f1
 12529  002D52  C0C7  F002         	movff	roundf@y+1,___flneg@f1+1
 12530  002D56  C0C8  F003         	movff	roundf@y+2,___flneg@f1+2
 12531  002D5A  C0C9  F004         	movff	roundf@y+3,___flneg@f1+3
 12532  002D5E  EC13  F034         	call	___flneg	;wreg free
 12533  002D62  C001  F0C6         	movff	?___flneg,roundf@y
 12534  002D66  C002  F0C7         	movff	?___flneg+1,roundf@y+1
 12535  002D6A  C003  F0C8         	movff	?___flneg+2,roundf@y+2
 12536  002D6E  C004  F0C9         	movff	?___flneg+3,roundf@y+3
 12537  002D72                     l5085:
 12538  002D72  FFFF               	dw	65535	; assembler added errata NOP
 12539  002D74  C0C6  F077         	movff	roundf@y,?_roundf
 12540  002D78  C0C7  F078         	movff	roundf@y+1,?_roundf+1
 12541  002D7C  C0C8  F079         	movff	roundf@y+2,?_roundf+2
 12542  002D80  C0C9  F07A         	movff	roundf@y+3,?_roundf+3
 12543  002D84                     l1063:
 12544  002D84  FFFF               	dw	65535	; assembler added errata NOP
 12545  002D86  0012               	return		;funcret
 12546  002D88  FFFF               	dw	65535	; errata NOP
 12547  002D8A                     __end_of_roundf:
 12548                           	callstack 0
 12549                           
 12550 ;; *************** function ___flsub *****************
 12551 ;; Defined at:
 12552 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
 12553 ;; Parameters:    Size  Location     Type
 12554 ;;  b               4  110[COMRAM] float 
 12555 ;;  a               4  114[COMRAM] float 
 12556 ;; Auto vars:     Size  Location     Type
 12557 ;;		None
 12558 ;; Return value:  Size  Location     Type
 12559 ;;                  4  110[COMRAM] float 
 12560 ;; Registers used:
 12561 ;;		wreg, status,2, status,0, cstack
 12562 ;; Tracked objects:
 12563 ;;		On entry : 0/0
 12564 ;;		On exit  : 0/0
 12565 ;;		Unchanged: 0/0
 12566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12567 ;;      Params:         8       0       0       0       0       0       0
 12568 ;;      Locals:         0       0       0       0       0       0       0
 12569 ;;      Temps:          0       0       0       0       0       0       0
 12570 ;;      Totals:         8       0       0       0       0       0       0
 12571 ;;Total ram usage:        8 bytes
 12572 ;; Hardware stack levels used:    1
 12573 ;; Hardware stack levels required when called:    2
 12574 ;; This function calls:
 12575 ;;		___fladd
 12576 ;; This function is called by:
 12577 ;;		_roundf
 12578 ;; This function uses a non-reentrant model
 12579 ;;
 12580                           
 12581                           	psect	text51
 12582  0069B6                     __ptext51:
 12583                           	callstack 0
 12584  0069B6                     ___flsub:
 12585                           	callstack 0
 12586  0069B6  FFFF               	dw	65535	; assembler added errata NOP
 12587  0069B8  0E00               	movlw	0
 12588  0069BA  1A73               	xorwf	___flsub@a^0,f,c
 12589  0069BC  0E00               	movlw	0
 12590  0069BE  1A74               	xorwf	(___flsub@a+1)^0,f,c
 12591  0069C0  0E00               	movlw	0
 12592  0069C2  1A75               	xorwf	(___flsub@a+2)^0,f,c
 12593  0069C4  0E80               	movlw	128
 12594  0069C6  1A76               	xorwf	(___flsub@a+3)^0,f,c
 12595  0069C8  C06F  F05F         	movff	___flsub@b,___fladd@b
 12596  0069CC  C070  F060         	movff	___flsub@b+1,___fladd@b+1
 12597  0069D0  C071  F061         	movff	___flsub@b+2,___fladd@b+2
 12598  0069D4  C072  F062         	movff	___flsub@b+3,___fladd@b+3
 12599  0069D8  C073  F063         	movff	___flsub@a,___fladd@a
 12600  0069DC  C074  F064         	movff	___flsub@a+1,___fladd@a+1
 12601  0069E0  C075  F065         	movff	___flsub@a+2,___fladd@a+2
 12602  0069E4  C076  F066         	movff	___flsub@a+3,___fladd@a+3
 12603  0069E8  EC91  F00D         	call	___fladd	;wreg free
 12604  0069EC  C05F  F06F         	movff	?___fladd,?___flsub
 12605  0069F0  C060  F070         	movff	?___fladd+1,?___flsub+1
 12606  0069F4  C061  F071         	movff	?___fladd+2,?___flsub+2
 12607  0069F8  C062  F072         	movff	?___fladd+3,?___flsub+3
 12608  0069FC  0012               	return		;funcret
 12609  0069FE  FFFF               	dw	65535	; errata NOP
 12610  006A00                     __end_of___flsub:
 12611                           	callstack 0
 12612                           
 12613 ;; *************** function ___fladd *****************
 12614 ;; Defined at:
 12615 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
 12616 ;; Parameters:    Size  Location     Type
 12617 ;;  b               4   94[COMRAM] float 
 12618 ;;  a               4   98[COMRAM] float 
 12619 ;; Auto vars:     Size  Location     Type
 12620 ;;  grs             1  109[COMRAM] unsigned char 
 12621 ;;  bexp            1  108[COMRAM] unsigned char 
 12622 ;;  aexp            1  107[COMRAM] unsigned char 
 12623 ;;  signs           1  106[COMRAM] unsigned char 
 12624 ;; Return value:  Size  Location     Type
 12625 ;;                  4   94[COMRAM] unsigned char 
 12626 ;; Registers used:
 12627 ;;		wreg, status,2, status,0
 12628 ;; Tracked objects:
 12629 ;;		On entry : 0/0
 12630 ;;		On exit  : 0/0
 12631 ;;		Unchanged: 0/0
 12632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12633 ;;      Params:         8       0       0       0       0       0       0
 12634 ;;      Locals:         4       0       0       0       0       0       0
 12635 ;;      Temps:          4       0       0       0       0       0       0
 12636 ;;      Totals:        16       0       0       0       0       0       0
 12637 ;;Total ram usage:       16 bytes
 12638 ;; Hardware stack levels used:    1
 12639 ;; Hardware stack levels required when called:    1
 12640 ;; This function calls:
 12641 ;;		Nothing
 12642 ;; This function is called by:
 12643 ;;		_init_timer_2
 12644 ;;		___flsub
 12645 ;;		_roundf
 12646 ;; This function uses a non-reentrant model
 12647 ;;
 12648                           
 12649                           	psect	text52
 12650  001B22                     __ptext52:
 12651                           	callstack 0
 12652  001B22                     ___fladd:
 12653                           	callstack 0
 12654  001B22  FFFF               	dw	65535	; assembler added errata NOP
 12655  001B24  5062               	movf	(___fladd@b+3)^0,w,c
 12656  001B26  0B80               	andlw	128
 12657  001B28  6E6B               	movwf	___fladd@signs^0,c
 12658  001B2A  5062               	movf	(___fladd@b+3)^0,w,c
 12659  001B2C  2462               	addwf	(___fladd@b+3)^0,w,c
 12660  001B2E  6E6D               	movwf	___fladd@bexp^0,c
 12661  001B30  AE61               	btfss	(___fladd@b+2)^0,7,c
 12662  001B32  EF9D  F00D         	goto	u4731
 12663  001B36  EFA0  F00D         	goto	u4730
 12664  001B3A                     u4731:
 12665  001B3A  FFFF               	dw	65535	; assembler added errata NOP
 12666  001B3C  EFA2  F00D         	goto	l4123
 12667  001B40                     u4730:
 12668  001B40  FFFF               	dw	65535	; assembler added errata NOP
 12669  001B42  806D               	bsf	___fladd@bexp^0,0,c
 12670  001B44                     l4123:
 12671  001B44  FFFF               	dw	65535	; assembler added errata NOP
 12672  001B46  506D               	movf	___fladd@bexp^0,w,c
 12673  001B48  B4D8               	btfsc	status,2,c
 12674  001B4A  EFA9  F00D         	goto	u4741
 12675  001B4E  EFAC  F00D         	goto	u4740
 12676  001B52                     u4741:
 12677  001B52  FFFF               	dw	65535	; assembler added errata NOP
 12678  001B54  EFC5  F00D         	goto	l4133
 12679  001B58                     u4740:
 12680  001B58  FFFF               	dw	65535	; assembler added errata NOP
 12681  001B5A  286D               	incf	___fladd@bexp^0,w,c
 12682  001B5C  A4D8               	btfss	status,2,c
 12683  001B5E  EFB3  F00D         	goto	u4751
 12684  001B62  EFB6  F00D         	goto	u4750
 12685  001B66                     u4751:
 12686  001B66  FFFF               	dw	65535	; assembler added errata NOP
 12687  001B68  EFBF  F00D         	goto	l4129
 12688  001B6C                     u4750:
 12689  001B6C  FFFF               	dw	65535	; assembler added errata NOP
 12690  001B6E  0E00               	movlw	0
 12691  001B70  6E5F               	movwf	___fladd@b^0,c
 12692  001B72  0E00               	movlw	0
 12693  001B74  6E60               	movwf	(___fladd@b+1)^0,c
 12694  001B76  0E00               	movlw	0
 12695  001B78  6E61               	movwf	(___fladd@b+2)^0,c
 12696  001B7A  0E00               	movlw	0
 12697  001B7C  6E62               	movwf	(___fladd@b+3)^0,c
 12698  001B7E                     l4129:
 12699  001B7E  FFFF               	dw	65535	; assembler added errata NOP
 12700  001B80  8E61               	bsf	(___fladd@b+2)^0,7,c
 12701  001B82  0E00               	movlw	0
 12702  001B84  6E62               	movwf	(___fladd@b+3)^0,c
 12703  001B86  EFCE  F00D         	goto	l4135
 12704  001B8A                     l4133:
 12705  001B8A  FFFF               	dw	65535	; assembler added errata NOP
 12706  001B8C  0E00               	movlw	0
 12707  001B8E  6E5F               	movwf	___fladd@b^0,c
 12708  001B90  0E00               	movlw	0
 12709  001B92  6E60               	movwf	(___fladd@b+1)^0,c
 12710  001B94  0E00               	movlw	0
 12711  001B96  6E61               	movwf	(___fladd@b+2)^0,c
 12712  001B98  0E00               	movlw	0
 12713  001B9A  6E62               	movwf	(___fladd@b+3)^0,c
 12714  001B9C                     l4135:
 12715  001B9C  FFFF               	dw	65535	; assembler added errata NOP
 12716  001B9E  5066               	movf	(___fladd@a+3)^0,w,c
 12717  001BA0  0B80               	andlw	128
 12718  001BA2  6E6C               	movwf	___fladd@aexp^0,c
 12719  001BA4  506B               	movf	___fladd@signs^0,w,c
 12720  001BA6  186C               	xorwf	___fladd@aexp^0,w,c
 12721  001BA8  B4D8               	btfsc	status,2,c
 12722  001BAA  EFD9  F00D         	goto	u4761
 12723  001BAE  EFDC  F00D         	goto	u4760
 12724  001BB2                     u4761:
 12725  001BB2  FFFF               	dw	65535	; assembler added errata NOP
 12726  001BB4  EFDE  F00D         	goto	l4141
 12727  001BB8                     u4760:
 12728  001BB8  FFFF               	dw	65535	; assembler added errata NOP
 12729  001BBA  8C6B               	bsf	___fladd@signs^0,6,c
 12730  001BBC                     l4141:
 12731  001BBC  FFFF               	dw	65535	; assembler added errata NOP
 12732  001BBE  5066               	movf	(___fladd@a+3)^0,w,c
 12733  001BC0  2466               	addwf	(___fladd@a+3)^0,w,c
 12734  001BC2  6E6C               	movwf	___fladd@aexp^0,c
 12735  001BC4  AE65               	btfss	(___fladd@a+2)^0,7,c
 12736  001BC6  EFE7  F00D         	goto	u4771
 12737  001BCA  EFEA  F00D         	goto	u4770
 12738  001BCE                     u4771:
 12739  001BCE  FFFF               	dw	65535	; assembler added errata NOP
 12740  001BD0  EFEC  F00D         	goto	l4147
 12741  001BD4                     u4770:
 12742  001BD4  FFFF               	dw	65535	; assembler added errata NOP
 12743  001BD6  806C               	bsf	___fladd@aexp^0,0,c
 12744  001BD8                     l4147:
 12745  001BD8  FFFF               	dw	65535	; assembler added errata NOP
 12746  001BDA  506C               	movf	___fladd@aexp^0,w,c
 12747  001BDC  B4D8               	btfsc	status,2,c
 12748  001BDE  EFF3  F00D         	goto	u4781
 12749  001BE2  EFF6  F00D         	goto	u4780
 12750  001BE6                     u4781:
 12751  001BE6  FFFF               	dw	65535	; assembler added errata NOP
 12752  001BE8  EF0F  F00E         	goto	l4157
 12753  001BEC                     u4780:
 12754  001BEC  FFFF               	dw	65535	; assembler added errata NOP
 12755  001BEE  286C               	incf	___fladd@aexp^0,w,c
 12756  001BF0  A4D8               	btfss	status,2,c
 12757  001BF2  EFFD  F00D         	goto	u4791
 12758  001BF6  EF00  F00E         	goto	u4790
 12759  001BFA                     u4791:
 12760  001BFA  FFFF               	dw	65535	; assembler added errata NOP
 12761  001BFC  EF09  F00E         	goto	l4153
 12762  001C00                     u4790:
 12763  001C00  FFFF               	dw	65535	; assembler added errata NOP
 12764  001C02  0E00               	movlw	0
 12765  001C04  6E63               	movwf	___fladd@a^0,c
 12766  001C06  0E00               	movlw	0
 12767  001C08  6E64               	movwf	(___fladd@a+1)^0,c
 12768  001C0A  0E00               	movlw	0
 12769  001C0C  6E65               	movwf	(___fladd@a+2)^0,c
 12770  001C0E  0E00               	movlw	0
 12771  001C10  6E66               	movwf	(___fladd@a+3)^0,c
 12772  001C12                     l4153:
 12773  001C12  FFFF               	dw	65535	; assembler added errata NOP
 12774  001C14  8E65               	bsf	(___fladd@a+2)^0,7,c
 12775  001C16  0E00               	movlw	0
 12776  001C18  6E66               	movwf	(___fladd@a+3)^0,c
 12777  001C1A  EF18  F00E         	goto	l4159
 12778  001C1E                     l4157:
 12779  001C1E  FFFF               	dw	65535	; assembler added errata NOP
 12780  001C20  0E00               	movlw	0
 12781  001C22  6E63               	movwf	___fladd@a^0,c
 12782  001C24  0E00               	movlw	0
 12783  001C26  6E64               	movwf	(___fladd@a+1)^0,c
 12784  001C28  0E00               	movlw	0
 12785  001C2A  6E65               	movwf	(___fladd@a+2)^0,c
 12786  001C2C  0E00               	movlw	0
 12787  001C2E  6E66               	movwf	(___fladd@a+3)^0,c
 12788  001C30                     l4159:
 12789  001C30  FFFF               	dw	65535	; assembler added errata NOP
 12790  001C32  506D               	movf	___fladd@bexp^0,w,c
 12791  001C34  5C6C               	subwf	___fladd@aexp^0,w,c
 12792  001C36  B0D8               	btfsc	status,0,c
 12793  001C38  EF20  F00E         	goto	u4801
 12794  001C3C  EF23  F00E         	goto	u4800
 12795  001C40                     u4801:
 12796  001C40  FFFF               	dw	65535	; assembler added errata NOP
 12797  001C42  EF4E  F00E         	goto	l4195
 12798  001C46                     u4800:
 12799  001C46  FFFF               	dw	65535	; assembler added errata NOP
 12800  001C48  AC6B               	btfss	___fladd@signs^0,6,c
 12801  001C4A  EF29  F00E         	goto	u4811
 12802  001C4E  EF2C  F00E         	goto	u4810
 12803  001C52                     u4811:
 12804  001C52  FFFF               	dw	65535	; assembler added errata NOP
 12805  001C54  EF2F  F00E         	goto	l4165
 12806  001C58                     u4810:
 12807  001C58  FFFF               	dw	65535	; assembler added errata NOP
 12808  001C5A  0E80               	movlw	128
 12809  001C5C  1A6B               	xorwf	___fladd@signs^0,f,c
 12810  001C5E                     l4165:
 12811  001C5E  FFFF               	dw	65535	; assembler added errata NOP
 12812  001C60  C06D  F06E         	movff	___fladd@bexp,___fladd@grs
 12813  001C64  C06C  F06D         	movff	___fladd@aexp,___fladd@bexp
 12814  001C68  C06E  F06C         	movff	___fladd@grs,___fladd@aexp
 12815  001C6C  C05F  F06E         	movff	___fladd@b,___fladd@grs
 12816  001C70  C063  F05F         	movff	___fladd@a,___fladd@b
 12817  001C74  C06E  F063         	movff	___fladd@grs,___fladd@a
 12818  001C78  C060  F06E         	movff	___fladd@b+1,___fladd@grs
 12819  001C7C  C064  F060         	movff	___fladd@a+1,___fladd@b+1
 12820  001C80  C06E  F064         	movff	___fladd@grs,___fladd@a+1
 12821  001C84  C061  F06E         	movff	___fladd@b+2,___fladd@grs
 12822  001C88  C065  F061         	movff	___fladd@a+2,___fladd@b+2
 12823  001C8C  C06E  F065         	movff	___fladd@grs,___fladd@a+2
 12824  001C90  C062  F06E         	movff	___fladd@b+3,___fladd@grs
 12825  001C94  C066  F062         	movff	___fladd@a+3,___fladd@b+3
 12826  001C98  C06E  F066         	movff	___fladd@grs,___fladd@a+3
 12827  001C9C                     l4195:
 12828  001C9C  FFFF               	dw	65535	; assembler added errata NOP
 12829  001C9E  0E00               	movlw	0
 12830  001CA0  6E6E               	movwf	___fladd@grs^0,c
 12831  001CA2  506D               	movf	___fladd@bexp^0,w,c
 12832  001CA4  C06C  F067         	movff	___fladd@aexp,??___fladd
 12833  001CA8  6A68               	clrf	(??___fladd+1)^0,c
 12834  001CAA  5E67               	subwf	??___fladd^0,f,c
 12835  001CAC  0E00               	movlw	0
 12836  001CAE  5A68               	subwfb	(??___fladd+1)^0,f,c
 12837  001CB0  BE68               	btfsc	(??___fladd+1)^0,7,c
 12838  001CB2  EF64  F00E         	goto	u4821
 12839  001CB6  5068               	movf	(??___fladd+1)^0,w,c
 12840  001CB8  E10A               	bnz	u4820
 12841  001CBA  0E1A               	movlw	26
 12842  001CBC  5C67               	subwf	??___fladd^0,w,c
 12843  001CBE  A0D8               	btfss	status,0,c
 12844  001CC0  EF64  F00E         	goto	u4821
 12845  001CC4  EF67  F00E         	goto	u4820
 12846  001CC8                     u4821:
 12847  001CC8  FFFF               	dw	65535	; assembler added errata NOP
 12848  001CCA  EFAA  F00E         	goto	l906
 12849  001CCE                     u4820:
 12850  001CCE  FFFF               	dw	65535	; assembler added errata NOP
 12851  001CD0  505F               	movf	___fladd@b^0,w,c
 12852  001CD2  1060               	iorwf	(___fladd@b+1)^0,w,c
 12853  001CD4  1061               	iorwf	(___fladd@b+2)^0,w,c
 12854  001CD6  1062               	iorwf	(___fladd@b+3)^0,w,c
 12855  001CD8  A4D8               	btfss	status,2,c
 12856  001CDA  EF71  F00E         	goto	u4831
 12857  001CDE  EF75  F00E         	goto	u4830
 12858  001CE2                     u4831:
 12859  001CE2  FFFF               	dw	65535	; assembler added errata NOP
 12860  001CE4  0E01               	movlw	1
 12861  001CE6  EF77  F00E         	goto	u4840
 12862  001CEA                     u4830:
 12863  001CEA  FFFF               	dw	65535	; assembler added errata NOP
 12864  001CEC  0E00               	movlw	0
 12865  001CEE                     u4840:
 12866  001CEE  FFFF               	dw	65535	; assembler added errata NOP
 12867  001CF0  6E6E               	movwf	___fladd@grs^0,c
 12868  001CF2  0E00               	movlw	0
 12869  001CF4  6E5F               	movwf	___fladd@b^0,c
 12870  001CF6  0E00               	movlw	0
 12871  001CF8  6E60               	movwf	(___fladd@b+1)^0,c
 12872  001CFA  0E00               	movlw	0
 12873  001CFC  6E61               	movwf	(___fladd@b+2)^0,c
 12874  001CFE  0E00               	movlw	0
 12875  001D00  6E62               	movwf	(___fladd@b+3)^0,c
 12876  001D02  C06C  F06D         	movff	___fladd@aexp,___fladd@bexp
 12877  001D06  EFB5  F00E         	goto	l905
 12878  001D0A                     l907:
 12879  001D0A  FFFF               	dw	65535	; assembler added errata NOP
 12880  001D0C  A06E               	btfss	___fladd@grs^0,0,c
 12881  001D0E  EF8B  F00E         	goto	u4851
 12882  001D12  EF8E  F00E         	goto	u4850
 12883  001D16                     u4851:
 12884  001D16  FFFF               	dw	65535	; assembler added errata NOP
 12885  001D18  EF95  F00E         	goto	l4207
 12886  001D1C                     u4850:
 12887  001D1C  FFFF               	dw	65535	; assembler added errata NOP
 12888  001D1E  90D8               	bcf	status,0,c
 12889  001D20  306E               	rrcf	___fladd@grs^0,w,c
 12890  001D22  0901               	iorlw	1
 12891  001D24  6E6E               	movwf	___fladd@grs^0,c
 12892  001D26  EF98  F00E         	goto	l4209
 12893  001D2A                     l4207:
 12894  001D2A  FFFF               	dw	65535	; assembler added errata NOP
 12895  001D2C  90D8               	bcf	status,0,c
 12896  001D2E  326E               	rrcf	___fladd@grs^0,f,c
 12897  001D30                     l4209:
 12898  001D30  FFFF               	dw	65535	; assembler added errata NOP
 12899  001D32  A05F               	btfss	___fladd@b^0,0,c
 12900  001D34  EF9E  F00E         	goto	u4861
 12901  001D38  EFA1  F00E         	goto	u4860
 12902  001D3C                     u4861:
 12903  001D3C  FFFF               	dw	65535	; assembler added errata NOP
 12904  001D3E  EFA3  F00E         	goto	l4213
 12905  001D42                     u4860:
 12906  001D42  FFFF               	dw	65535	; assembler added errata NOP
 12907  001D44  8E6E               	bsf	___fladd@grs^0,7,c
 12908  001D46                     l4213:
 12909  001D46  FFFF               	dw	65535	; assembler added errata NOP
 12910  001D48  3462               	rlcf	(___fladd@b+3)^0,w,c
 12911  001D4A  3262               	rrcf	(___fladd@b+3)^0,f,c
 12912  001D4C  3261               	rrcf	(___fladd@b+2)^0,f,c
 12913  001D4E  3260               	rrcf	(___fladd@b+1)^0,f,c
 12914  001D50  325F               	rrcf	___fladd@b^0,f,c
 12915  001D52  2A6D               	incf	___fladd@bexp^0,f,c
 12916  001D54                     l906:
 12917  001D54  FFFF               	dw	65535	; assembler added errata NOP
 12918  001D56  506C               	movf	___fladd@aexp^0,w,c
 12919  001D58  5C6D               	subwf	___fladd@bexp^0,w,c
 12920  001D5A  A0D8               	btfss	status,0,c
 12921  001D5C  EFB2  F00E         	goto	u4871
 12922  001D60  EFB5  F00E         	goto	u4870
 12923  001D64                     u4871:
 12924  001D64  FFFF               	dw	65535	; assembler added errata NOP
 12925  001D66  EF85  F00E         	goto	l907
 12926  001D6A                     u4870:
 12927  001D6A                     l905:
 12928  001D6A  FFFF               	dw	65535	; assembler added errata NOP
 12929  001D6C  BC6B               	btfsc	___fladd@signs^0,6,c
 12930  001D6E  EFBB  F00E         	goto	u4881
 12931  001D72  EFBE  F00E         	goto	u4880
 12932  001D76                     u4881:
 12933  001D76  FFFF               	dw	65535	; assembler added errata NOP
 12934  001D78  EF0B  F00F         	goto	l4241
 12935  001D7C                     u4880:
 12936  001D7C  FFFF               	dw	65535	; assembler added errata NOP
 12937  001D7E  506D               	movf	___fladd@bexp^0,w,c
 12938  001D80  A4D8               	btfss	status,2,c
 12939  001D82  EFC5  F00E         	goto	u4891
 12940  001D86  EFC8  F00E         	goto	u4890
 12941  001D8A                     u4891:
 12942  001D8A  FFFF               	dw	65535	; assembler added errata NOP
 12943  001D8C  EFD3  F00E         	goto	l4223
 12944  001D90                     u4890:
 12945  001D90  FFFF               	dw	65535	; assembler added errata NOP
 12946  001D92  0E00               	movlw	0
 12947  001D94  6E5F               	movwf	?___fladd^0,c
 12948  001D96  0E00               	movlw	0
 12949  001D98  6E60               	movwf	(?___fladd+1)^0,c
 12950  001D9A  0E00               	movlw	0
 12951  001D9C  6E61               	movwf	(?___fladd+2)^0,c
 12952  001D9E  0E00               	movlw	0
 12953  001DA0  6E62               	movwf	(?___fladd+3)^0,c
 12954  001DA2  EF62  F010         	goto	l914
 12955  001DA6                     l4223:
 12956  001DA6  FFFF               	dw	65535	; assembler added errata NOP
 12957  001DA8  5063               	movf	___fladd@a^0,w,c
 12958  001DAA  265F               	addwf	___fladd@b^0,f,c
 12959  001DAC  5064               	movf	(___fladd@a+1)^0,w,c
 12960  001DAE  2260               	addwfc	(___fladd@b+1)^0,f,c
 12961  001DB0  5065               	movf	(___fladd@a+2)^0,w,c
 12962  001DB2  2261               	addwfc	(___fladd@b+2)^0,f,c
 12963  001DB4  5066               	movf	(___fladd@a+3)^0,w,c
 12964  001DB6  2262               	addwfc	(___fladd@b+3)^0,f,c
 12965  001DB8  A062               	btfss	(___fladd@b+3)^0,0,c
 12966  001DBA  EFE1  F00E         	goto	u4901
 12967  001DBE  EFE4  F00E         	goto	u4900
 12968  001DC2                     u4901:
 12969  001DC2  FFFF               	dw	65535	; assembler added errata NOP
 12970  001DC4  EFAF  F00F         	goto	l4277
 12971  001DC8                     u4900:
 12972  001DC8  FFFF               	dw	65535	; assembler added errata NOP
 12973  001DCA  A06E               	btfss	___fladd@grs^0,0,c
 12974  001DCC  EFEA  F00E         	goto	u4911
 12975  001DD0  EFED  F00E         	goto	u4910
 12976  001DD4                     u4911:
 12977  001DD4  FFFF               	dw	65535	; assembler added errata NOP
 12978  001DD6  EFF4  F00E         	goto	l4231
 12979  001DDA                     u4910:
 12980  001DDA  FFFF               	dw	65535	; assembler added errata NOP
 12981  001DDC  90D8               	bcf	status,0,c
 12982  001DDE  306E               	rrcf	___fladd@grs^0,w,c
 12983  001DE0  0901               	iorlw	1
 12984  001DE2  6E6E               	movwf	___fladd@grs^0,c
 12985  001DE4  EFF7  F00E         	goto	l4233
 12986  001DE8                     l4231:
 12987  001DE8  FFFF               	dw	65535	; assembler added errata NOP
 12988  001DEA  90D8               	bcf	status,0,c
 12989  001DEC  326E               	rrcf	___fladd@grs^0,f,c
 12990  001DEE                     l4233:
 12991  001DEE  FFFF               	dw	65535	; assembler added errata NOP
 12992  001DF0  A05F               	btfss	___fladd@b^0,0,c
 12993  001DF2  EFFD  F00E         	goto	u4921
 12994  001DF6  EF00  F00F         	goto	u4920
 12995  001DFA                     u4921:
 12996  001DFA  FFFF               	dw	65535	; assembler added errata NOP
 12997  001DFC  EF02  F00F         	goto	l4237
 12998  001E00                     u4920:
 12999  001E00  FFFF               	dw	65535	; assembler added errata NOP
 13000  001E02  8E6E               	bsf	___fladd@grs^0,7,c
 13001  001E04                     l4237:
 13002  001E04  FFFF               	dw	65535	; assembler added errata NOP
 13003  001E06  3462               	rlcf	(___fladd@b+3)^0,w,c
 13004  001E08  3262               	rrcf	(___fladd@b+3)^0,f,c
 13005  001E0A  3261               	rrcf	(___fladd@b+2)^0,f,c
 13006  001E0C  3260               	rrcf	(___fladd@b+1)^0,f,c
 13007  001E0E  325F               	rrcf	___fladd@b^0,f,c
 13008  001E10  2A6D               	incf	___fladd@bexp^0,f,c
 13009  001E12  EFAF  F00F         	goto	l4277
 13010  001E16                     l4241:
 13011  001E16  FFFF               	dw	65535	; assembler added errata NOP
 13012  001E18  5063               	movf	___fladd@a^0,w,c
 13013  001E1A  5C5F               	subwf	___fladd@b^0,w,c
 13014  001E1C  5064               	movf	(___fladd@a+1)^0,w,c
 13015  001E1E  5860               	subwfb	(___fladd@b+1)^0,w,c
 13016  001E20  5065               	movf	(___fladd@a+2)^0,w,c
 13017  001E22  5861               	subwfb	(___fladd@b+2)^0,w,c
 13018  001E24  5062               	movf	(___fladd@b+3)^0,w,c
 13019  001E26  0A80               	xorlw	128
 13020  001E28  6E67               	movwf	??___fladd^0,c
 13021  001E2A  5066               	movf	(___fladd@a+3)^0,w,c
 13022  001E2C  0A80               	xorlw	128
 13023  001E2E  5867               	subwfb	??___fladd^0,w,c
 13024  001E30  B0D8               	btfsc	status,0,c
 13025  001E32  EF1D  F00F         	goto	u4931
 13026  001E36  EF20  F00F         	goto	u4930
 13027  001E3A                     u4931:
 13028  001E3A  FFFF               	dw	65535	; assembler added errata NOP
 13029  001E3C  EF4E  F00F         	goto	l4251
 13030  001E40                     u4930:
 13031  001E40  FFFF               	dw	65535	; assembler added errata NOP
 13032  001E42  505F               	movf	___fladd@b^0,w,c
 13033  001E44  5C63               	subwf	___fladd@a^0,w,c
 13034  001E46  6E67               	movwf	??___fladd^0,c
 13035  001E48  5060               	movf	(___fladd@b+1)^0,w,c
 13036  001E4A  5864               	subwfb	(___fladd@a+1)^0,w,c
 13037  001E4C  6E68               	movwf	(??___fladd+1)^0,c
 13038  001E4E  5061               	movf	(___fladd@b+2)^0,w,c
 13039  001E50  5865               	subwfb	(___fladd@a+2)^0,w,c
 13040  001E52  6E69               	movwf	(??___fladd+2)^0,c
 13041  001E54  5062               	movf	(___fladd@b+3)^0,w,c
 13042  001E56  5866               	subwfb	(___fladd@a+3)^0,w,c
 13043  001E58  6E6A               	movwf	(??___fladd+3)^0,c
 13044  001E5A  0EFF               	movlw	255
 13045  001E5C  2467               	addwf	??___fladd^0,w,c
 13046  001E5E  6E5F               	movwf	___fladd@b^0,c
 13047  001E60  0EFF               	movlw	255
 13048  001E62  2068               	addwfc	(??___fladd+1)^0,w,c
 13049  001E64  6E60               	movwf	(___fladd@b+1)^0,c
 13050  001E66  0EFF               	movlw	255
 13051  001E68  2069               	addwfc	(??___fladd+2)^0,w,c
 13052  001E6A  6E61               	movwf	(___fladd@b+2)^0,c
 13053  001E6C  0EFF               	movlw	255
 13054  001E6E  206A               	addwfc	(??___fladd+3)^0,w,c
 13055  001E70  6E62               	movwf	(___fladd@b+3)^0,c
 13056  001E72  0E80               	movlw	128
 13057  001E74  1A6B               	xorwf	___fladd@signs^0,f,c
 13058  001E76  6C6E               	negf	___fladd@grs^0,c
 13059  001E78  506E               	movf	___fladd@grs^0,w,c
 13060  001E7A  A4D8               	btfss	status,2,c
 13061  001E7C  EF42  F00F         	goto	u4941
 13062  001E80  EF45  F00F         	goto	u4940
 13063  001E84                     u4941:
 13064  001E84  FFFF               	dw	65535	; assembler added errata NOP
 13065  001E86  EF57  F00F         	goto	l922
 13066  001E8A                     u4940:
 13067  001E8A  FFFF               	dw	65535	; assembler added errata NOP
 13068  001E8C  0E01               	movlw	1
 13069  001E8E  265F               	addwf	___fladd@b^0,f,c
 13070  001E90  0E00               	movlw	0
 13071  001E92  2260               	addwfc	(___fladd@b+1)^0,f,c
 13072  001E94  2261               	addwfc	(___fladd@b+2)^0,f,c
 13073  001E96  2262               	addwfc	(___fladd@b+3)^0,f,c
 13074  001E98  EF57  F00F         	goto	l922
 13075  001E9C                     l4251:
 13076  001E9C  FFFF               	dw	65535	; assembler added errata NOP
 13077  001E9E  5063               	movf	___fladd@a^0,w,c
 13078  001EA0  5E5F               	subwf	___fladd@b^0,f,c
 13079  001EA2  5064               	movf	(___fladd@a+1)^0,w,c
 13080  001EA4  5A60               	subwfb	(___fladd@b+1)^0,f,c
 13081  001EA6  5065               	movf	(___fladd@a+2)^0,w,c
 13082  001EA8  5A61               	subwfb	(___fladd@b+2)^0,f,c
 13083  001EAA  5066               	movf	(___fladd@a+3)^0,w,c
 13084  001EAC  5A62               	subwfb	(___fladd@b+3)^0,f,c
 13085  001EAE                     l922:
 13086  001EAE  FFFF               	dw	65535	; assembler added errata NOP
 13087  001EB0  505F               	movf	___fladd@b^0,w,c
 13088  001EB2  1060               	iorwf	(___fladd@b+1)^0,w,c
 13089  001EB4  1061               	iorwf	(___fladd@b+2)^0,w,c
 13090  001EB6  1062               	iorwf	(___fladd@b+3)^0,w,c
 13091  001EB8  A4D8               	btfss	status,2,c
 13092  001EBA  EF61  F00F         	goto	u4951
 13093  001EBE  EF64  F00F         	goto	u4950
 13094  001EC2                     u4951:
 13095  001EC2  FFFF               	dw	65535	; assembler added errata NOP
 13096  001EC4  EFA6  F00F         	goto	l4275
 13097  001EC8                     u4950:
 13098  001EC8  FFFF               	dw	65535	; assembler added errata NOP
 13099  001ECA  506E               	movf	___fladd@grs^0,w,c
 13100  001ECC  A4D8               	btfss	status,2,c
 13101  001ECE  EF6B  F00F         	goto	u4961
 13102  001ED2  EF6E  F00F         	goto	u4960
 13103  001ED6                     u4961:
 13104  001ED6  FFFF               	dw	65535	; assembler added errata NOP
 13105  001ED8  EFA6  F00F         	goto	l4275
 13106  001EDC                     u4960:
 13107  001EDC  FFFF               	dw	65535	; assembler added errata NOP
 13108  001EDE  0E00               	movlw	0
 13109  001EE0  6E5F               	movwf	?___fladd^0,c
 13110  001EE2  0E00               	movlw	0
 13111  001EE4  6E60               	movwf	(?___fladd+1)^0,c
 13112  001EE6  0E00               	movlw	0
 13113  001EE8  6E61               	movwf	(?___fladd+2)^0,c
 13114  001EEA  0E00               	movlw	0
 13115  001EEC  6E62               	movwf	(?___fladd+3)^0,c
 13116  001EEE  EF62  F010         	goto	l914
 13117  001EF2                     l4259:
 13118  001EF2  FFFF               	dw	65535	; assembler added errata NOP
 13119  001EF4  90D8               	bcf	status,0,c
 13120  001EF6  365F               	rlcf	___fladd@b^0,f,c
 13121  001EF8  3660               	rlcf	(___fladd@b+1)^0,f,c
 13122  001EFA  3661               	rlcf	(___fladd@b+2)^0,f,c
 13123  001EFC  3662               	rlcf	(___fladd@b+3)^0,f,c
 13124  001EFE  AE6E               	btfss	___fladd@grs^0,7,c
 13125  001F00  EF84  F00F         	goto	u4971
 13126  001F04  EF87  F00F         	goto	u4970
 13127  001F08                     u4971:
 13128  001F08  FFFF               	dw	65535	; assembler added errata NOP
 13129  001F0A  EF89  F00F         	goto	l4265
 13130  001F0E                     u4970:
 13131  001F0E  FFFF               	dw	65535	; assembler added errata NOP
 13132  001F10  805F               	bsf	___fladd@b^0,0,c
 13133  001F12                     l4265:
 13134  001F12  FFFF               	dw	65535	; assembler added errata NOP
 13135  001F14  A06E               	btfss	___fladd@grs^0,0,c
 13136  001F16  EF8F  F00F         	goto	u4981
 13137  001F1A  EF92  F00F         	goto	u4980
 13138  001F1E                     u4981:
 13139  001F1E  FFFF               	dw	65535	; assembler added errata NOP
 13140  001F20  EF97  F00F         	goto	l4269
 13141  001F24                     u4980:
 13142  001F24  FFFF               	dw	65535	; assembler added errata NOP
 13143  001F26  80D8               	bsf	status,0,c
 13144  001F28  366E               	rlcf	___fladd@grs^0,f,c
 13145  001F2A  EF9A  F00F         	goto	l4271
 13146  001F2E                     l4269:
 13147  001F2E  FFFF               	dw	65535	; assembler added errata NOP
 13148  001F30  90D8               	bcf	status,0,c
 13149  001F32  366E               	rlcf	___fladd@grs^0,f,c
 13150  001F34                     l4271:
 13151  001F34  FFFF               	dw	65535	; assembler added errata NOP
 13152  001F36  506D               	movf	___fladd@bexp^0,w,c
 13153  001F38  B4D8               	btfsc	status,2,c
 13154  001F3A  EFA1  F00F         	goto	u4991
 13155  001F3E  EFA4  F00F         	goto	u4990
 13156  001F42                     u4991:
 13157  001F42  FFFF               	dw	65535	; assembler added errata NOP
 13158  001F44  EFA6  F00F         	goto	l4275
 13159  001F48                     u4990:
 13160  001F48  FFFF               	dw	65535	; assembler added errata NOP
 13161  001F4A  066D               	decf	___fladd@bexp^0,f,c
 13162  001F4C                     l4275:
 13163  001F4C  FFFF               	dw	65535	; assembler added errata NOP
 13164  001F4E  AE61               	btfss	(___fladd@b+2)^0,7,c
 13165  001F50  EFAC  F00F         	goto	u5001
 13166  001F54  EFAF  F00F         	goto	u5000
 13167  001F58                     u5001:
 13168  001F58  FFFF               	dw	65535	; assembler added errata NOP
 13169  001F5A  EF79  F00F         	goto	l4259
 13170  001F5E                     u5000:
 13171  001F5E                     l4277:
 13172  001F5E  FFFF               	dw	65535	; assembler added errata NOP
 13173  001F60  0E00               	movlw	0
 13174  001F62  6E6C               	movwf	___fladd@aexp^0,c
 13175  001F64  AE6E               	btfss	___fladd@grs^0,7,c
 13176  001F66  EFB7  F00F         	goto	u5011
 13177  001F6A  EFBA  F00F         	goto	u5010
 13178  001F6E                     u5011:
 13179  001F6E  FFFF               	dw	65535	; assembler added errata NOP
 13180  001F70  EFD9  F00F         	goto	l931
 13181  001F74                     u5010:
 13182  001F74  FFFF               	dw	65535	; assembler added errata NOP
 13183  001F76  C06E  F067         	movff	___fladd@grs,??___fladd
 13184  001F7A  0E7F               	movlw	127
 13185  001F7C  1667               	andwf	??___fladd^0,f,c
 13186  001F7E  B4D8               	btfsc	status,2,c
 13187  001F80  EFC4  F00F         	goto	u5021
 13188  001F84  EFC7  F00F         	goto	u5020
 13189  001F88                     u5021:
 13190  001F88  FFFF               	dw	65535	; assembler added errata NOP
 13191  001F8A  EFCD  F00F         	goto	l932
 13192  001F8E                     u5020:
 13193  001F8E  FFFF               	dw	65535	; assembler added errata NOP
 13194  001F90                     l4283:
 13195  001F90  FFFF               	dw	65535	; assembler added errata NOP
 13196  001F92  0E01               	movlw	1
 13197  001F94  6E6C               	movwf	___fladd@aexp^0,c
 13198  001F96  EFD9  F00F         	goto	l931
 13199  001F9A                     l932:
 13200  001F9A  FFFF               	dw	65535	; assembler added errata NOP
 13201  001F9C  A05F               	btfss	___fladd@b^0,0,c
 13202  001F9E  EFD3  F00F         	goto	u5031
 13203  001FA2  EFD6  F00F         	goto	u5030
 13204  001FA6                     u5031:
 13205  001FA6  FFFF               	dw	65535	; assembler added errata NOP
 13206  001FA8  EFD9  F00F         	goto	l931
 13207  001FAC                     u5030:
 13208  001FAC  FFFF               	dw	65535	; assembler added errata NOP
 13209  001FAE  EFC8  F00F         	goto	l4283
 13210  001FB2                     l931:
 13211  001FB2  FFFF               	dw	65535	; assembler added errata NOP
 13212  001FB4  506C               	movf	___fladd@aexp^0,w,c
 13213  001FB6  B4D8               	btfsc	status,2,c
 13214  001FB8  EFE0  F00F         	goto	u5041
 13215  001FBC  EFE3  F00F         	goto	u5040
 13216  001FC0                     u5041:
 13217  001FC0  FFFF               	dw	65535	; assembler added errata NOP
 13218  001FC2  EF13  F010         	goto	l4295
 13219  001FC6                     u5040:
 13220  001FC6  FFFF               	dw	65535	; assembler added errata NOP
 13221  001FC8  0E01               	movlw	1
 13222  001FCA  265F               	addwf	___fladd@b^0,f,c
 13223  001FCC  0E00               	movlw	0
 13224  001FCE  2260               	addwfc	(___fladd@b+1)^0,f,c
 13225  001FD0  2261               	addwfc	(___fladd@b+2)^0,f,c
 13226  001FD2  2262               	addwfc	(___fladd@b+3)^0,f,c
 13227  001FD4  A062               	btfss	(___fladd@b+3)^0,0,c
 13228  001FD6  EFEF  F00F         	goto	u5051
 13229  001FDA  EFF2  F00F         	goto	u5050
 13230  001FDE                     u5051:
 13231  001FDE  FFFF               	dw	65535	; assembler added errata NOP
 13232  001FE0  EF13  F010         	goto	l4295
 13233  001FE4                     u5050:
 13234  001FE4  FFFF               	dw	65535	; assembler added errata NOP
 13235  001FE6  C05F  F067         	movff	___fladd@b,??___fladd
 13236  001FEA  C060  F068         	movff	___fladd@b+1,??___fladd+1
 13237  001FEE  C061  F069         	movff	___fladd@b+2,??___fladd+2
 13238  001FF2  C062  F06A         	movff	___fladd@b+3,??___fladd+3
 13239  001FF6  346A               	rlcf	(??___fladd+3)^0,w,c
 13240  001FF8  326A               	rrcf	(??___fladd+3)^0,f,c
 13241  001FFA  3269               	rrcf	(??___fladd+2)^0,f,c
 13242  001FFC  3268               	rrcf	(??___fladd+1)^0,f,c
 13243  001FFE  3267               	rrcf	??___fladd^0,f,c
 13244  002000  C067  F05F         	movff	??___fladd,___fladd@b
 13245  002004  C068  F060         	movff	??___fladd+1,___fladd@b+1
 13246  002008  C069  F061         	movff	??___fladd+2,___fladd@b+2
 13247  00200C  C06A  F062         	movff	??___fladd+3,___fladd@b+3
 13248  002010  286D               	incf	___fladd@bexp^0,w,c
 13249  002012  B4D8               	btfsc	status,2,c
 13250  002014  EF0E  F010         	goto	u5061
 13251  002018  EF11  F010         	goto	u5060
 13252  00201C                     u5061:
 13253  00201C  FFFF               	dw	65535	; assembler added errata NOP
 13254  00201E  EF13  F010         	goto	l4295
 13255  002022                     u5060:
 13256  002022  FFFF               	dw	65535	; assembler added errata NOP
 13257  002024  2A6D               	incf	___fladd@bexp^0,f,c
 13258  002026                     l4295:
 13259  002026  FFFF               	dw	65535	; assembler added errata NOP
 13260  002028  286D               	incf	___fladd@bexp^0,w,c
 13261  00202A  B4D8               	btfsc	status,2,c
 13262  00202C  EF1A  F010         	goto	u5071
 13263  002030  EF1D  F010         	goto	u5070
 13264  002034                     u5071:
 13265  002034  FFFF               	dw	65535	; assembler added errata NOP
 13266  002036  EF27  F010         	goto	l4299
 13267  00203A                     u5070:
 13268  00203A  FFFF               	dw	65535	; assembler added errata NOP
 13269  00203C  506D               	movf	___fladd@bexp^0,w,c
 13270  00203E  A4D8               	btfss	status,2,c
 13271  002040  EF24  F010         	goto	u5081
 13272  002044  EF27  F010         	goto	u5080
 13273  002048                     u5081:
 13274  002048  FFFF               	dw	65535	; assembler added errata NOP
 13275  00204A  EF3C  F010         	goto	l4303
 13276  00204E                     u5080:
 13277  00204E                     l4299:
 13278  00204E  FFFF               	dw	65535	; assembler added errata NOP
 13279  002050  0E00               	movlw	0
 13280  002052  6E5F               	movwf	___fladd@b^0,c
 13281  002054  0E00               	movlw	0
 13282  002056  6E60               	movwf	(___fladd@b+1)^0,c
 13283  002058  0E00               	movlw	0
 13284  00205A  6E61               	movwf	(___fladd@b+2)^0,c
 13285  00205C  0E00               	movlw	0
 13286  00205E  6E62               	movwf	(___fladd@b+3)^0,c
 13287  002060  506D               	movf	___fladd@bexp^0,w,c
 13288  002062  A4D8               	btfss	status,2,c
 13289  002064  EF36  F010         	goto	u5091
 13290  002068  EF39  F010         	goto	u5090
 13291  00206C                     u5091:
 13292  00206C  FFFF               	dw	65535	; assembler added errata NOP
 13293  00206E  EF3C  F010         	goto	l4303
 13294  002072                     u5090:
 13295  002072  FFFF               	dw	65535	; assembler added errata NOP
 13296  002074  0E00               	movlw	0
 13297  002076  6E6B               	movwf	___fladd@signs^0,c
 13298  002078                     l4303:
 13299  002078  FFFF               	dw	65535	; assembler added errata NOP
 13300  00207A  A06D               	btfss	___fladd@bexp^0,0,c
 13301  00207C  EF42  F010         	goto	u5101
 13302  002080  EF45  F010         	goto	u5100
 13303  002084                     u5101:
 13304  002084  FFFF               	dw	65535	; assembler added errata NOP
 13305  002086  EF49  F010         	goto	l4307
 13306  00208A                     u5100:
 13307  00208A  FFFF               	dw	65535	; assembler added errata NOP
 13308  00208C  8E61               	bsf	(___fladd@b+2)^0,7,c
 13309  00208E  EF4B  F010         	goto	l4309
 13310  002092                     l4307:
 13311  002092  FFFF               	dw	65535	; assembler added errata NOP
 13312  002094  9E61               	bcf	(___fladd@b+2)^0,7,c
 13313  002096                     l4309:
 13314  002096  FFFF               	dw	65535	; assembler added errata NOP
 13315  002098  90D8               	bcf	status,0,c
 13316  00209A  306D               	rrcf	___fladd@bexp^0,w,c
 13317  00209C  6E62               	movwf	(___fladd@b+3)^0,c
 13318  00209E  AE6B               	btfss	___fladd@signs^0,7,c
 13319  0020A0  EF54  F010         	goto	u5111
 13320  0020A4  EF57  F010         	goto	u5110
 13321  0020A8                     u5111:
 13322  0020A8  FFFF               	dw	65535	; assembler added errata NOP
 13323  0020AA  EF59  F010         	goto	l4315
 13324  0020AE                     u5110:
 13325  0020AE  FFFF               	dw	65535	; assembler added errata NOP
 13326  0020B0  8E62               	bsf	(___fladd@b+3)^0,7,c
 13327  0020B2                     l4315:
 13328  0020B2  FFFF               	dw	65535	; assembler added errata NOP
 13329  0020B4  C05F  F05F         	movff	___fladd@b,?___fladd
 13330  0020B8  C060  F060         	movff	___fladd@b+1,?___fladd+1
 13331  0020BC  C061  F061         	movff	___fladd@b+2,?___fladd+2
 13332  0020C0  C062  F062         	movff	___fladd@b+3,?___fladd+3
 13333  0020C4                     l914:
 13334  0020C4  FFFF               	dw	65535	; assembler added errata NOP
 13335  0020C6  0012               	return		;funcret
 13336  0020C8  FFFF               	dw	65535	; errata NOP
 13337  0020CA                     __end_of___fladd:
 13338                           	callstack 0
 13339                           
 13340 ;; *************** function ___flneg *****************
 13341 ;; Defined at:
 13342 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
 13343 ;; Parameters:    Size  Location     Type
 13344 ;;  f1              4    0[COMRAM] unsigned char 
 13345 ;; Auto vars:     Size  Location     Type
 13346 ;;		None
 13347 ;; Return value:  Size  Location     Type
 13348 ;;                  4    0[COMRAM] unsigned char 
 13349 ;; Registers used:
 13350 ;;		wreg, status,2, status,0
 13351 ;; Tracked objects:
 13352 ;;		On entry : 0/0
 13353 ;;		On exit  : 0/0
 13354 ;;		Unchanged: 0/0
 13355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13356 ;;      Params:         4       0       0       0       0       0       0
 13357 ;;      Locals:         0       0       0       0       0       0       0
 13358 ;;      Temps:          0       0       0       0       0       0       0
 13359 ;;      Totals:         4       0       0       0       0       0       0
 13360 ;;Total ram usage:        4 bytes
 13361 ;; Hardware stack levels used:    1
 13362 ;; Hardware stack levels required when called:    1
 13363 ;; This function calls:
 13364 ;;		Nothing
 13365 ;; This function is called by:
 13366 ;;		_roundf
 13367 ;; This function uses a non-reentrant model
 13368 ;;
 13369                           
 13370                           	psect	text53
 13371  006826                     __ptext53:
 13372                           	callstack 0
 13373  006826                     ___flneg:
 13374                           	callstack 0
 13375  006826  FFFF               	dw	65535	; assembler added errata NOP
 13376  006828  5001               	movf	___flneg@f1^0,w,c
 13377  00682A  1002               	iorwf	(___flneg@f1+1)^0,w,c
 13378  00682C  1003               	iorwf	(___flneg@f1+2)^0,w,c
 13379  00682E  1004               	iorwf	(___flneg@f1+3)^0,w,c
 13380  006830  B4D8               	btfsc	status,2,c
 13381  006832  EF1D  F034         	goto	u6081
 13382  006836  EF20  F034         	goto	u6080
 13383  00683A                     u6081:
 13384  00683A  FFFF               	dw	65535	; assembler added errata NOP
 13385  00683C  EF29  F034         	goto	l4953
 13386  006840                     u6080:
 13387  006840  FFFF               	dw	65535	; assembler added errata NOP
 13388  006842  0E00               	movlw	0
 13389  006844  1A01               	xorwf	___flneg@f1^0,f,c
 13390  006846  0E00               	movlw	0
 13391  006848  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 13392  00684A  0E00               	movlw	0
 13393  00684C  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 13394  00684E  0E80               	movlw	128
 13395  006850  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 13396  006852                     l4953:
 13397  006852  FFFF               	dw	65535	; assembler added errata NOP
 13398  006854  C001  F001         	movff	___flneg@f1,?___flneg
 13399  006858  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 13400  00685C  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 13401  006860  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 13402  006864  0012               	return		;funcret
 13403  006866  FFFF               	dw	65535	; errata NOP
 13404  006868                     __end_of___flneg:
 13405                           	callstack 0
 13406                           
 13407 ;; *************** function ___flmul *****************
 13408 ;; Defined at:
 13409 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
 13410 ;; Parameters:    Size  Location     Type
 13411 ;;  b               4   44[COMRAM] unsigned char 
 13412 ;;  a               4   48[COMRAM] unsigned char 
 13413 ;; Auto vars:     Size  Location     Type
 13414 ;;  prod            4   63[COMRAM] struct .
 13415 ;;  grs             4   57[COMRAM] unsigned long 
 13416 ;;  temp            2   67[COMRAM] struct .
 13417 ;;  bexp            1   62[COMRAM] unsigned char 
 13418 ;;  aexp            1   61[COMRAM] unsigned char 
 13419 ;;  sign            1   56[COMRAM] unsigned char 
 13420 ;; Return value:  Size  Location     Type
 13421 ;;                  4   44[COMRAM] unsigned char 
 13422 ;; Registers used:
 13423 ;;		wreg, status,2, status,0, prodl, prodh
 13424 ;; Tracked objects:
 13425 ;;		On entry : 0/0
 13426 ;;		On exit  : 0/0
 13427 ;;		Unchanged: 0/0
 13428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13429 ;;      Params:         8       0       0       0       0       0       0
 13430 ;;      Locals:        13       0       0       0       0       0       0
 13431 ;;      Temps:          4       0       0       0       0       0       0
 13432 ;;      Totals:        25       0       0       0       0       0       0
 13433 ;;Total ram usage:       25 bytes
 13434 ;; Hardware stack levels used:    1
 13435 ;; Hardware stack levels required when called:    1
 13436 ;; This function calls:
 13437 ;;		Nothing
 13438 ;; This function is called by:
 13439 ;;		_init_timer_2
 13440 ;;		_update_pwm_duty_ccp1
 13441 ;;		_get_temperature
 13442 ;;		_roundf
 13443 ;; This function uses a non-reentrant model
 13444 ;;
 13445                           
 13446                           	psect	text54
 13447  0020CA                     __ptext54:
 13448                           	callstack 0
 13449  0020CA                     ___flmul:
 13450                           	callstack 0
 13451  0020CA  FFFF               	dw	65535	; assembler added errata NOP
 13452  0020CC  5030               	movf	(___flmul@b+3)^0,w,c
 13453  0020CE  0B80               	andlw	128
 13454  0020D0  6E39               	movwf	___flmul@sign^0,c
 13455  0020D2  5030               	movf	(___flmul@b+3)^0,w,c
 13456  0020D4  2430               	addwf	(___flmul@b+3)^0,w,c
 13457  0020D6  6E3F               	movwf	___flmul@bexp^0,c
 13458  0020D8  AE2F               	btfss	(___flmul@b+2)^0,7,c
 13459  0020DA  EF71  F010         	goto	u5841
 13460  0020DE  EF74  F010         	goto	u5840
 13461  0020E2                     u5841:
 13462  0020E2  FFFF               	dw	65535	; assembler added errata NOP
 13463  0020E4  EF76  F010         	goto	l4797
 13464  0020E8                     u5840:
 13465  0020E8  FFFF               	dw	65535	; assembler added errata NOP
 13466  0020EA  803F               	bsf	___flmul@bexp^0,0,c
 13467  0020EC                     l4797:
 13468  0020EC  FFFF               	dw	65535	; assembler added errata NOP
 13469  0020EE  503F               	movf	___flmul@bexp^0,w,c
 13470  0020F0  B4D8               	btfsc	status,2,c
 13471  0020F2  EF7D  F010         	goto	u5851
 13472  0020F6  EF80  F010         	goto	u5850
 13473  0020FA                     u5851:
 13474  0020FA  FFFF               	dw	65535	; assembler added errata NOP
 13475  0020FC  EF97  F010         	goto	l4805
 13476  002100                     u5850:
 13477  002100  FFFF               	dw	65535	; assembler added errata NOP
 13478  002102  283F               	incf	___flmul@bexp^0,w,c
 13479  002104  A4D8               	btfss	status,2,c
 13480  002106  EF87  F010         	goto	u5861
 13481  00210A  EF8A  F010         	goto	u5860
 13482  00210E                     u5861:
 13483  00210E  FFFF               	dw	65535	; assembler added errata NOP
 13484  002110  EF93  F010         	goto	l4803
 13485  002114                     u5860:
 13486  002114  FFFF               	dw	65535	; assembler added errata NOP
 13487  002116  0E00               	movlw	0
 13488  002118  6E2D               	movwf	___flmul@b^0,c
 13489  00211A  0E00               	movlw	0
 13490  00211C  6E2E               	movwf	(___flmul@b+1)^0,c
 13491  00211E  0E00               	movlw	0
 13492  002120  6E2F               	movwf	(___flmul@b+2)^0,c
 13493  002122  0E00               	movlw	0
 13494  002124  6E30               	movwf	(___flmul@b+3)^0,c
 13495  002126                     l4803:
 13496  002126  FFFF               	dw	65535	; assembler added errata NOP
 13497  002128  8E2F               	bsf	(___flmul@b+2)^0,7,c
 13498  00212A  EFA0  F010         	goto	l4807
 13499  00212E                     l4805:
 13500  00212E  FFFF               	dw	65535	; assembler added errata NOP
 13501  002130  0E00               	movlw	0
 13502  002132  6E2D               	movwf	___flmul@b^0,c
 13503  002134  0E00               	movlw	0
 13504  002136  6E2E               	movwf	(___flmul@b+1)^0,c
 13505  002138  0E00               	movlw	0
 13506  00213A  6E2F               	movwf	(___flmul@b+2)^0,c
 13507  00213C  0E00               	movlw	0
 13508  00213E  6E30               	movwf	(___flmul@b+3)^0,c
 13509  002140                     l4807:
 13510  002140  FFFF               	dw	65535	; assembler added errata NOP
 13511  002142  5034               	movf	(___flmul@a+3)^0,w,c
 13512  002144  0B80               	andlw	128
 13513  002146  1A39               	xorwf	___flmul@sign^0,f,c
 13514  002148  5034               	movf	(___flmul@a+3)^0,w,c
 13515  00214A  2434               	addwf	(___flmul@a+3)^0,w,c
 13516  00214C  6E3E               	movwf	___flmul@aexp^0,c
 13517  00214E  AE33               	btfss	(___flmul@a+2)^0,7,c
 13518  002150  EFAC  F010         	goto	u5871
 13519  002154  EFAF  F010         	goto	u5870
 13520  002158                     u5871:
 13521  002158  FFFF               	dw	65535	; assembler added errata NOP
 13522  00215A  EFB1  F010         	goto	l4815
 13523  00215E                     u5870:
 13524  00215E  FFFF               	dw	65535	; assembler added errata NOP
 13525  002160  803E               	bsf	___flmul@aexp^0,0,c
 13526  002162                     l4815:
 13527  002162  FFFF               	dw	65535	; assembler added errata NOP
 13528  002164  503E               	movf	___flmul@aexp^0,w,c
 13529  002166  B4D8               	btfsc	status,2,c
 13530  002168  EFB8  F010         	goto	u5881
 13531  00216C  EFBB  F010         	goto	u5880
 13532  002170                     u5881:
 13533  002170  FFFF               	dw	65535	; assembler added errata NOP
 13534  002172  EFD2  F010         	goto	l4823
 13535  002176                     u5880:
 13536  002176  FFFF               	dw	65535	; assembler added errata NOP
 13537  002178  283E               	incf	___flmul@aexp^0,w,c
 13538  00217A  A4D8               	btfss	status,2,c
 13539  00217C  EFC2  F010         	goto	u5891
 13540  002180  EFC5  F010         	goto	u5890
 13541  002184                     u5891:
 13542  002184  FFFF               	dw	65535	; assembler added errata NOP
 13543  002186  EFCE  F010         	goto	l4821
 13544  00218A                     u5890:
 13545  00218A  FFFF               	dw	65535	; assembler added errata NOP
 13546  00218C  0E00               	movlw	0
 13547  00218E  6E31               	movwf	___flmul@a^0,c
 13548  002190  0E00               	movlw	0
 13549  002192  6E32               	movwf	(___flmul@a+1)^0,c
 13550  002194  0E00               	movlw	0
 13551  002196  6E33               	movwf	(___flmul@a+2)^0,c
 13552  002198  0E00               	movlw	0
 13553  00219A  6E34               	movwf	(___flmul@a+3)^0,c
 13554  00219C                     l4821:
 13555  00219C  FFFF               	dw	65535	; assembler added errata NOP
 13556  00219E  8E33               	bsf	(___flmul@a+2)^0,7,c
 13557  0021A0  EFDB  F010         	goto	l991
 13558  0021A4                     l4823:
 13559  0021A4  FFFF               	dw	65535	; assembler added errata NOP
 13560  0021A6  0E00               	movlw	0
 13561  0021A8  6E31               	movwf	___flmul@a^0,c
 13562  0021AA  0E00               	movlw	0
 13563  0021AC  6E32               	movwf	(___flmul@a+1)^0,c
 13564  0021AE  0E00               	movlw	0
 13565  0021B0  6E33               	movwf	(___flmul@a+2)^0,c
 13566  0021B2  0E00               	movlw	0
 13567  0021B4  6E34               	movwf	(___flmul@a+3)^0,c
 13568  0021B6                     l991:
 13569  0021B6  FFFF               	dw	65535	; assembler added errata NOP
 13570  0021B8  503E               	movf	___flmul@aexp^0,w,c
 13571  0021BA  B4D8               	btfsc	status,2,c
 13572  0021BC  EFE2  F010         	goto	u5901
 13573  0021C0  EFE5  F010         	goto	u5900
 13574  0021C4                     u5901:
 13575  0021C4  FFFF               	dw	65535	; assembler added errata NOP
 13576  0021C6  EFEF  F010         	goto	l4827
 13577  0021CA                     u5900:
 13578  0021CA  FFFF               	dw	65535	; assembler added errata NOP
 13579  0021CC  503F               	movf	___flmul@bexp^0,w,c
 13580  0021CE  A4D8               	btfss	status,2,c
 13581  0021D0  EFEC  F010         	goto	u5911
 13582  0021D4  EFEF  F010         	goto	u5910
 13583  0021D8                     u5911:
 13584  0021D8  FFFF               	dw	65535	; assembler added errata NOP
 13585  0021DA  EFFA  F010         	goto	l4831
 13586  0021DE                     u5910:
 13587  0021DE                     l4827:
 13588  0021DE  FFFF               	dw	65535	; assembler added errata NOP
 13589  0021E0  0E00               	movlw	0
 13590  0021E2  6E2D               	movwf	?___flmul^0,c
 13591  0021E4  0E00               	movlw	0
 13592  0021E6  6E2E               	movwf	(?___flmul+1)^0,c
 13593  0021E8  0E00               	movlw	0
 13594  0021EA  6E2F               	movwf	(?___flmul+2)^0,c
 13595  0021EC  0E00               	movlw	0
 13596  0021EE  6E30               	movwf	(?___flmul+3)^0,c
 13597  0021F0  EFB4  F012         	goto	l995
 13598  0021F4                     l4831:
 13599  0021F4  FFFF               	dw	65535	; assembler added errata NOP
 13600  0021F6  5033               	movf	(___flmul@a+2)^0,w,c
 13601  0021F8  022D               	mulwf	___flmul@b^0,c
 13602  0021FA  CFF3 F044          	movff	prodl,___flmul@temp
 13603  0021FE  CFF4 F045          	movff	prodh,___flmul@temp+1
 13604  002202  5044               	movf	___flmul@temp^0,w,c
 13605  002204  6E3A               	movwf	___flmul@grs^0,c
 13606  002206  6A3B               	clrf	(___flmul@grs+1)^0,c
 13607  002208  6A3C               	clrf	(___flmul@grs+2)^0,c
 13608  00220A  6A3D               	clrf	(___flmul@grs+3)^0,c
 13609  00220C  5045               	movf	(___flmul@temp+1)^0,w,c
 13610  00220E  6E40               	movwf	___flmul@prod^0,c
 13611  002210  6A41               	clrf	(___flmul@prod+1)^0,c
 13612  002212  6A42               	clrf	(___flmul@prod+2)^0,c
 13613  002214  6A43               	clrf	(___flmul@prod+3)^0,c
 13614  002216  5032               	movf	(___flmul@a+1)^0,w,c
 13615  002218  022E               	mulwf	(___flmul@b+1)^0,c
 13616  00221A  CFF3 F044          	movff	prodl,___flmul@temp
 13617  00221E  CFF4 F045          	movff	prodh,___flmul@temp+1
 13618  002222  5044               	movf	___flmul@temp^0,w,c
 13619  002224  263A               	addwf	___flmul@grs^0,f,c
 13620  002226  0E00               	movlw	0
 13621  002228  223B               	addwfc	(___flmul@grs+1)^0,f,c
 13622  00222A  223C               	addwfc	(___flmul@grs+2)^0,f,c
 13623  00222C  223D               	addwfc	(___flmul@grs+3)^0,f,c
 13624  00222E  5045               	movf	(___flmul@temp+1)^0,w,c
 13625  002230  2640               	addwf	___flmul@prod^0,f,c
 13626  002232  0E00               	movlw	0
 13627  002234  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13628  002236  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13629  002238  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13630  00223A  5031               	movf	___flmul@a^0,w,c
 13631  00223C  022F               	mulwf	(___flmul@b+2)^0,c
 13632  00223E  CFF3 F044          	movff	prodl,___flmul@temp
 13633  002242  CFF4 F045          	movff	prodh,___flmul@temp+1
 13634  002246  5044               	movf	___flmul@temp^0,w,c
 13635  002248  263A               	addwf	___flmul@grs^0,f,c
 13636  00224A  0E00               	movlw	0
 13637  00224C  223B               	addwfc	(___flmul@grs+1)^0,f,c
 13638  00224E  223C               	addwfc	(___flmul@grs+2)^0,f,c
 13639  002250  223D               	addwfc	(___flmul@grs+3)^0,f,c
 13640  002252  5045               	movf	(___flmul@temp+1)^0,w,c
 13641  002254  2640               	addwf	___flmul@prod^0,f,c
 13642  002256  0E00               	movlw	0
 13643  002258  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13644  00225A  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13645  00225C  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13646  00225E  C03C  F03D         	movff	___flmul@grs+2,___flmul@grs+3
 13647  002262  C03B  F03C         	movff	___flmul@grs+1,___flmul@grs+2
 13648  002266  C03A  F03B         	movff	___flmul@grs,___flmul@grs+1
 13649  00226A  6A3A               	clrf	___flmul@grs^0,c
 13650  00226C  5031               	movf	___flmul@a^0,w,c
 13651  00226E  022E               	mulwf	(___flmul@b+1)^0,c
 13652  002270  CFF3 F044          	movff	prodl,___flmul@temp
 13653  002274  CFF4 F045          	movff	prodh,___flmul@temp+1
 13654  002278  5044               	movf	___flmul@temp^0,w,c
 13655  00227A  263A               	addwf	___flmul@grs^0,f,c
 13656  00227C  5045               	movf	(___flmul@temp+1)^0,w,c
 13657  00227E  223B               	addwfc	(___flmul@grs+1)^0,f,c
 13658  002280  0E00               	movlw	0
 13659  002282  223C               	addwfc	(___flmul@grs+2)^0,f,c
 13660  002284  0E00               	movlw	0
 13661  002286  223D               	addwfc	(___flmul@grs+3)^0,f,c
 13662  002288  5032               	movf	(___flmul@a+1)^0,w,c
 13663  00228A  022D               	mulwf	___flmul@b^0,c
 13664  00228C  CFF3 F044          	movff	prodl,___flmul@temp
 13665  002290  CFF4 F045          	movff	prodh,___flmul@temp+1
 13666  002294  5044               	movf	___flmul@temp^0,w,c
 13667  002296  263A               	addwf	___flmul@grs^0,f,c
 13668  002298  5045               	movf	(___flmul@temp+1)^0,w,c
 13669  00229A  223B               	addwfc	(___flmul@grs+1)^0,f,c
 13670  00229C  0E00               	movlw	0
 13671  00229E  223C               	addwfc	(___flmul@grs+2)^0,f,c
 13672  0022A0  0E00               	movlw	0
 13673  0022A2  223D               	addwfc	(___flmul@grs+3)^0,f,c
 13674  0022A4  C03C  F03D         	movff	___flmul@grs+2,___flmul@grs+3
 13675  0022A8  C03B  F03C         	movff	___flmul@grs+1,___flmul@grs+2
 13676  0022AC  C03A  F03B         	movff	___flmul@grs,___flmul@grs+1
 13677  0022B0  6A3A               	clrf	___flmul@grs^0,c
 13678  0022B2  5031               	movf	___flmul@a^0,w,c
 13679  0022B4  022D               	mulwf	___flmul@b^0,c
 13680  0022B6  CFF3 F044          	movff	prodl,___flmul@temp
 13681  0022BA  CFF4 F045          	movff	prodh,___flmul@temp+1
 13682  0022BE  5044               	movf	___flmul@temp^0,w,c
 13683  0022C0  263A               	addwf	___flmul@grs^0,f,c
 13684  0022C2  5045               	movf	(___flmul@temp+1)^0,w,c
 13685  0022C4  223B               	addwfc	(___flmul@grs+1)^0,f,c
 13686  0022C6  0E00               	movlw	0
 13687  0022C8  223C               	addwfc	(___flmul@grs+2)^0,f,c
 13688  0022CA  0E00               	movlw	0
 13689  0022CC  223D               	addwfc	(___flmul@grs+3)^0,f,c
 13690  0022CE  5033               	movf	(___flmul@a+2)^0,w,c
 13691  0022D0  022E               	mulwf	(___flmul@b+1)^0,c
 13692  0022D2  CFF3 F044          	movff	prodl,___flmul@temp
 13693  0022D6  CFF4 F045          	movff	prodh,___flmul@temp+1
 13694  0022DA  5044               	movf	___flmul@temp^0,w,c
 13695  0022DC  2640               	addwf	___flmul@prod^0,f,c
 13696  0022DE  5045               	movf	(___flmul@temp+1)^0,w,c
 13697  0022E0  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13698  0022E2  0E00               	movlw	0
 13699  0022E4  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13700  0022E6  0E00               	movlw	0
 13701  0022E8  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13702  0022EA  5032               	movf	(___flmul@a+1)^0,w,c
 13703  0022EC  022F               	mulwf	(___flmul@b+2)^0,c
 13704  0022EE  CFF3 F044          	movff	prodl,___flmul@temp
 13705  0022F2  CFF4 F045          	movff	prodh,___flmul@temp+1
 13706  0022F6  5044               	movf	___flmul@temp^0,w,c
 13707  0022F8  2640               	addwf	___flmul@prod^0,f,c
 13708  0022FA  5045               	movf	(___flmul@temp+1)^0,w,c
 13709  0022FC  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13710  0022FE  0E00               	movlw	0
 13711  002300  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13712  002302  0E00               	movlw	0
 13713  002304  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13714  002306  5033               	movf	(___flmul@a+2)^0,w,c
 13715  002308  022F               	mulwf	(___flmul@b+2)^0,c
 13716  00230A  CFF3 F044          	movff	prodl,___flmul@temp
 13717  00230E  CFF4 F045          	movff	prodh,___flmul@temp+1
 13718  002312  5044               	movf	___flmul@temp^0,w,c
 13719  002314  6E35               	movwf	??___flmul^0,c
 13720  002316  5045               	movf	(___flmul@temp+1)^0,w,c
 13721  002318  6E36               	movwf	(??___flmul+1)^0,c
 13722  00231A  6A37               	clrf	(??___flmul+2)^0,c
 13723  00231C  6A38               	clrf	(??___flmul+3)^0,c
 13724  00231E  C037  F038         	movff	??___flmul+2,??___flmul+3
 13725  002322  C036  F037         	movff	??___flmul+1,??___flmul+2
 13726  002326  C035  F036         	movff	??___flmul,??___flmul+1
 13727  00232A  6A35               	clrf	??___flmul^0,c
 13728  00232C  5035               	movf	??___flmul^0,w,c
 13729  00232E  2640               	addwf	___flmul@prod^0,f,c
 13730  002330  5036               	movf	(??___flmul+1)^0,w,c
 13731  002332  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13732  002334  5037               	movf	(??___flmul+2)^0,w,c
 13733  002336  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13734  002338  5038               	movf	(??___flmul+3)^0,w,c
 13735  00233A  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13736  00233C  C03A  F035         	movff	___flmul@grs,??___flmul
 13737  002340  C03B  F036         	movff	___flmul@grs+1,??___flmul+1
 13738  002344  C03C  F037         	movff	___flmul@grs+2,??___flmul+2
 13739  002348  C03D  F038         	movff	___flmul@grs+3,??___flmul+3
 13740  00234C  0E19               	movlw	25
 13741  00234E  EFAF  F011         	goto	u5920
 13742  002352                     u5925:
 13743  002352  FFFF               	dw	65535	; assembler added errata NOP
 13744  002354  90D8               	bcf	status,0,c
 13745  002356  3238               	rrcf	(??___flmul+3)^0,f,c
 13746  002358  3237               	rrcf	(??___flmul+2)^0,f,c
 13747  00235A  3236               	rrcf	(??___flmul+1)^0,f,c
 13748  00235C  3235               	rrcf	??___flmul^0,f,c
 13749  00235E                     u5920:
 13750  00235E  FFFF               	dw	65535	; assembler added errata NOP
 13751  002360  2EE8               	decfsz	wreg,f,c
 13752  002362  EFA9  F011         	goto	u5925
 13753  002366  5035               	movf	??___flmul^0,w,c
 13754  002368  2640               	addwf	___flmul@prod^0,f,c
 13755  00236A  5036               	movf	(??___flmul+1)^0,w,c
 13756  00236C  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13757  00236E  5037               	movf	(??___flmul+2)^0,w,c
 13758  002370  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13759  002372  5038               	movf	(??___flmul+3)^0,w,c
 13760  002374  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13761  002376  C03C  F03D         	movff	___flmul@grs+2,___flmul@grs+3
 13762  00237A  C03B  F03C         	movff	___flmul@grs+1,___flmul@grs+2
 13763  00237E  C03A  F03B         	movff	___flmul@grs,___flmul@grs+1
 13764  002382  6A3A               	clrf	___flmul@grs^0,c
 13765  002384  503E               	movf	___flmul@aexp^0,w,c
 13766  002386  C03F  F035         	movff	___flmul@bexp,??___flmul
 13767  00238A  6A36               	clrf	(??___flmul+1)^0,c
 13768  00238C  2635               	addwf	??___flmul^0,f,c
 13769  00238E  0E00               	movlw	0
 13770  002390  2236               	addwfc	(??___flmul+1)^0,f,c
 13771  002392  0E82               	movlw	130
 13772  002394  2435               	addwf	??___flmul^0,w,c
 13773  002396  6E44               	movwf	___flmul@temp^0,c
 13774  002398  0EFF               	movlw	255
 13775  00239A  2036               	addwfc	(??___flmul+1)^0,w,c
 13776  00239C  6E45               	movwf	(___flmul@temp+1)^0,c
 13777  00239E  EFEA  F011         	goto	l4879
 13778  0023A2                     l4873:
 13779  0023A2  FFFF               	dw	65535	; assembler added errata NOP
 13780  0023A4  90D8               	bcf	status,0,c
 13781  0023A6  3640               	rlcf	___flmul@prod^0,f,c
 13782  0023A8  3641               	rlcf	(___flmul@prod+1)^0,f,c
 13783  0023AA  3642               	rlcf	(___flmul@prod+2)^0,f,c
 13784  0023AC  3643               	rlcf	(___flmul@prod+3)^0,f,c
 13785  0023AE  AE3D               	btfss	(___flmul@grs+3)^0,7,c
 13786  0023B0  EFDC  F011         	goto	u5931
 13787  0023B4  EFDF  F011         	goto	u5930
 13788  0023B8                     u5931:
 13789  0023B8  FFFF               	dw	65535	; assembler added errata NOP
 13790  0023BA  EFE1  F011         	goto	l998
 13791  0023BE                     u5930:
 13792  0023BE  FFFF               	dw	65535	; assembler added errata NOP
 13793  0023C0  8040               	bsf	___flmul@prod^0,0,c
 13794  0023C2                     l998:
 13795  0023C2  FFFF               	dw	65535	; assembler added errata NOP
 13796  0023C4  90D8               	bcf	status,0,c
 13797  0023C6  363A               	rlcf	___flmul@grs^0,f,c
 13798  0023C8  363B               	rlcf	(___flmul@grs+1)^0,f,c
 13799  0023CA  363C               	rlcf	(___flmul@grs+2)^0,f,c
 13800  0023CC  363D               	rlcf	(___flmul@grs+3)^0,f,c
 13801  0023CE  0644               	decf	___flmul@temp^0,f,c
 13802  0023D0  A0D8               	btfss	status,0,c
 13803  0023D2  0645               	decf	(___flmul@temp+1)^0,f,c
 13804  0023D4                     l4879:
 13805  0023D4  FFFF               	dw	65535	; assembler added errata NOP
 13806  0023D6  AE42               	btfss	(___flmul@prod+2)^0,7,c
 13807  0023D8  EFF0  F011         	goto	u5941
 13808  0023DC  EFF3  F011         	goto	u5940
 13809  0023E0                     u5941:
 13810  0023E0  FFFF               	dw	65535	; assembler added errata NOP
 13811  0023E2  EFD1  F011         	goto	l4873
 13812  0023E6                     u5940:
 13813  0023E6  FFFF               	dw	65535	; assembler added errata NOP
 13814  0023E8  0E00               	movlw	0
 13815  0023EA  6E3E               	movwf	___flmul@aexp^0,c
 13816  0023EC  AE3D               	btfss	(___flmul@grs+3)^0,7,c
 13817  0023EE  EFFB  F011         	goto	u5951
 13818  0023F2  EFFE  F011         	goto	u5950
 13819  0023F6                     u5951:
 13820  0023F6  FFFF               	dw	65535	; assembler added errata NOP
 13821  0023F8  EF29  F012         	goto	l1000
 13822  0023FC                     u5950:
 13823  0023FC  FFFF               	dw	65535	; assembler added errata NOP
 13824  0023FE  0EFF               	movlw	255
 13825  002400  143A               	andwf	___flmul@grs^0,w,c
 13826  002402  6E35               	movwf	??___flmul^0,c
 13827  002404  0EFF               	movlw	255
 13828  002406  143B               	andwf	(___flmul@grs+1)^0,w,c
 13829  002408  6E36               	movwf	(??___flmul+1)^0,c
 13830  00240A  0EFF               	movlw	255
 13831  00240C  143C               	andwf	(___flmul@grs+2)^0,w,c
 13832  00240E  6E37               	movwf	(??___flmul+2)^0,c
 13833  002410  0E7F               	movlw	127
 13834  002412  143D               	andwf	(___flmul@grs+3)^0,w,c
 13835  002414  6E38               	movwf	(??___flmul+3)^0,c
 13836  002416  5035               	movf	??___flmul^0,w,c
 13837  002418  1036               	iorwf	(??___flmul+1)^0,w,c
 13838  00241A  1037               	iorwf	(??___flmul+2)^0,w,c
 13839  00241C  1038               	iorwf	(??___flmul+3)^0,w,c
 13840  00241E  B4D8               	btfsc	status,2,c
 13841  002420  EF14  F012         	goto	u5961
 13842  002424  EF17  F012         	goto	u5960
 13843  002428                     u5961:
 13844  002428  FFFF               	dw	65535	; assembler added errata NOP
 13845  00242A  EF1D  F012         	goto	l1001
 13846  00242E                     u5960:
 13847  00242E  FFFF               	dw	65535	; assembler added errata NOP
 13848  002430                     l4887:
 13849  002430  FFFF               	dw	65535	; assembler added errata NOP
 13850  002432  0E01               	movlw	1
 13851  002434  6E3E               	movwf	___flmul@aexp^0,c
 13852  002436  EF29  F012         	goto	l1000
 13853  00243A                     l1001:
 13854  00243A  FFFF               	dw	65535	; assembler added errata NOP
 13855  00243C  A040               	btfss	___flmul@prod^0,0,c
 13856  00243E  EF23  F012         	goto	u5971
 13857  002442  EF26  F012         	goto	u5970
 13858  002446                     u5971:
 13859  002446  FFFF               	dw	65535	; assembler added errata NOP
 13860  002448  EF29  F012         	goto	l1000
 13861  00244C                     u5970:
 13862  00244C  FFFF               	dw	65535	; assembler added errata NOP
 13863  00244E  EF18  F012         	goto	l4887
 13864  002452                     l1000:
 13865  002452  FFFF               	dw	65535	; assembler added errata NOP
 13866  002454  503E               	movf	___flmul@aexp^0,w,c
 13867  002456  B4D8               	btfsc	status,2,c
 13868  002458  EF30  F012         	goto	u5981
 13869  00245C  EF33  F012         	goto	u5980
 13870  002460                     u5981:
 13871  002460  FFFF               	dw	65535	; assembler added errata NOP
 13872  002462  EF5A  F012         	goto	l4899
 13873  002466                     u5980:
 13874  002466  FFFF               	dw	65535	; assembler added errata NOP
 13875  002468  0E01               	movlw	1
 13876  00246A  2640               	addwf	___flmul@prod^0,f,c
 13877  00246C  0E00               	movlw	0
 13878  00246E  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13879  002470  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13880  002472  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13881  002474  A043               	btfss	(___flmul@prod+3)^0,0,c
 13882  002476  EF3F  F012         	goto	u5991
 13883  00247A  EF42  F012         	goto	u5990
 13884  00247E                     u5991:
 13885  00247E  FFFF               	dw	65535	; assembler added errata NOP
 13886  002480  EF5A  F012         	goto	l4899
 13887  002484                     u5990:
 13888  002484  FFFF               	dw	65535	; assembler added errata NOP
 13889  002486  C040  F035         	movff	___flmul@prod,??___flmul
 13890  00248A  C041  F036         	movff	___flmul@prod+1,??___flmul+1
 13891  00248E  C042  F037         	movff	___flmul@prod+2,??___flmul+2
 13892  002492  C043  F038         	movff	___flmul@prod+3,??___flmul+3
 13893  002496  3438               	rlcf	(??___flmul+3)^0,w,c
 13894  002498  3238               	rrcf	(??___flmul+3)^0,f,c
 13895  00249A  3237               	rrcf	(??___flmul+2)^0,f,c
 13896  00249C  3236               	rrcf	(??___flmul+1)^0,f,c
 13897  00249E  3235               	rrcf	??___flmul^0,f,c
 13898  0024A0  C035  F040         	movff	??___flmul,___flmul@prod
 13899  0024A4  C036  F041         	movff	??___flmul+1,___flmul@prod+1
 13900  0024A8  C037  F042         	movff	??___flmul+2,___flmul@prod+2
 13901  0024AC  C038  F043         	movff	??___flmul+3,___flmul@prod+3
 13902  0024B0  4A44               	infsnz	___flmul@temp^0,f,c
 13903  0024B2  2A45               	incf	(___flmul@temp+1)^0,f,c
 13904  0024B4                     l4899:
 13905  0024B4  FFFF               	dw	65535	; assembler added errata NOP
 13906  0024B6  BE45               	btfsc	(___flmul@temp+1)^0,7,c
 13907  0024B8  EF66  F012         	goto	u6001
 13908  0024BC  5045               	movf	(___flmul@temp+1)^0,w,c
 13909  0024BE  E109               	bnz	u6000
 13910  0024C0  2844               	incf	___flmul@temp^0,w,c
 13911  0024C2  A0D8               	btfss	status,0,c
 13912  0024C4  EF66  F012         	goto	u6001
 13913  0024C8  EF69  F012         	goto	u6000
 13914  0024CC                     u6001:
 13915  0024CC  FFFF               	dw	65535	; assembler added errata NOP
 13916  0024CE  EF74  F012         	goto	l4903
 13917  0024D2                     u6000:
 13918  0024D2  FFFF               	dw	65535	; assembler added errata NOP
 13919  0024D4  0E00               	movlw	0
 13920  0024D6  6E40               	movwf	___flmul@prod^0,c
 13921  0024D8  0E00               	movlw	0
 13922  0024DA  6E41               	movwf	(___flmul@prod+1)^0,c
 13923  0024DC  0E80               	movlw	128
 13924  0024DE  6E42               	movwf	(___flmul@prod+2)^0,c
 13925  0024E0  0E7F               	movlw	127
 13926  0024E2  6E43               	movwf	(___flmul@prod+3)^0,c
 13927  0024E4  EFA9  F012         	goto	l4915
 13928  0024E8                     l4903:
 13929  0024E8  FFFF               	dw	65535	; assembler added errata NOP
 13930  0024EA  BE45               	btfsc	(___flmul@temp+1)^0,7,c
 13931  0024EC  EF83  F012         	goto	u6010
 13932  0024F0  5045               	movf	(___flmul@temp+1)^0,w,c
 13933  0024F2  E106               	bnz	u6011
 13934  0024F4  0444               	decf	___flmul@temp^0,w,c
 13935  0024F6  B0D8               	btfsc	status,0,c
 13936  0024F8  EF80  F012         	goto	u6011
 13937  0024FC  EF83  F012         	goto	u6010
 13938  002500                     u6011:
 13939  002500  FFFF               	dw	65535	; assembler added errata NOP
 13940  002502  EF90  F012         	goto	l1008
 13941  002506                     u6010:
 13942  002506  FFFF               	dw	65535	; assembler added errata NOP
 13943  002508  0E00               	movlw	0
 13944  00250A  6E40               	movwf	___flmul@prod^0,c
 13945  00250C  0E00               	movlw	0
 13946  00250E  6E41               	movwf	(___flmul@prod+1)^0,c
 13947  002510  0E00               	movlw	0
 13948  002512  6E42               	movwf	(___flmul@prod+2)^0,c
 13949  002514  0E00               	movlw	0
 13950  002516  6E43               	movwf	(___flmul@prod+3)^0,c
 13951  002518  0E00               	movlw	0
 13952  00251A  6E39               	movwf	___flmul@sign^0,c
 13953  00251C  EFA9  F012         	goto	l4915
 13954  002520                     l1008:
 13955  002520  FFFF               	dw	65535	; assembler added errata NOP
 13956  002522  C044  F03F         	movff	___flmul@temp,___flmul@bexp
 13957  002526  0EFF               	movlw	255
 13958  002528  1640               	andwf	___flmul@prod^0,f,c
 13959  00252A  0EFF               	movlw	255
 13960  00252C  1641               	andwf	(___flmul@prod+1)^0,f,c
 13961  00252E  0E7F               	movlw	127
 13962  002530  1642               	andwf	(___flmul@prod+2)^0,f,c
 13963  002532  0E00               	movlw	0
 13964  002534  1643               	andwf	(___flmul@prod+3)^0,f,c
 13965  002536  A03F               	btfss	___flmul@bexp^0,0,c
 13966  002538  EFA0  F012         	goto	u6021
 13967  00253C  EFA3  F012         	goto	u6020
 13968  002540                     u6021:
 13969  002540  FFFF               	dw	65535	; assembler added errata NOP
 13970  002542  EFA5  F012         	goto	l4913
 13971  002546                     u6020:
 13972  002546  FFFF               	dw	65535	; assembler added errata NOP
 13973  002548  8E42               	bsf	(___flmul@prod+2)^0,7,c
 13974  00254A                     l4913:
 13975  00254A  FFFF               	dw	65535	; assembler added errata NOP
 13976  00254C  90D8               	bcf	status,0,c
 13977  00254E  303F               	rrcf	___flmul@bexp^0,w,c
 13978  002550  6E43               	movwf	(___flmul@prod+3)^0,c
 13979  002552                     l4915:
 13980  002552  FFFF               	dw	65535	; assembler added errata NOP
 13981  002554  5039               	movf	___flmul@sign^0,w,c
 13982  002556  1243               	iorwf	(___flmul@prod+3)^0,f,c
 13983  002558  C040  F02D         	movff	___flmul@prod,?___flmul
 13984  00255C  C041  F02E         	movff	___flmul@prod+1,?___flmul+1
 13985  002560  C042  F02F         	movff	___flmul@prod+2,?___flmul+2
 13986  002564  C043  F030         	movff	___flmul@prod+3,?___flmul+3
 13987  002568                     l995:
 13988  002568  FFFF               	dw	65535	; assembler added errata NOP
 13989  00256A  0012               	return		;funcret
 13990  00256C  FFFF               	dw	65535	; errata NOP
 13991  00256E                     __end_of___flmul:
 13992                           	callstack 0
 13993                           
 13994 ;; *************** function ___fltol *****************
 13995 ;; Defined at:
 13996 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
 13997 ;; Parameters:    Size  Location     Type
 13998 ;;  f1              4   18[BANK0 ] unsigned char 
 13999 ;; Auto vars:     Size  Location     Type
 14000 ;;  exp1            1   27[BANK0 ] unsigned char 
 14001 ;;  sign1           1   26[BANK0 ] unsigned char 
 14002 ;; Return value:  Size  Location     Type
 14003 ;;                  4   18[BANK0 ] long 
 14004 ;; Registers used:
 14005 ;;		wreg, status,2, status,0
 14006 ;; Tracked objects:
 14007 ;;		On entry : 0/0
 14008 ;;		On exit  : 0/0
 14009 ;;		Unchanged: 0/0
 14010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14011 ;;      Params:         0       4       0       0       0       0       0
 14012 ;;      Locals:         0       2       0       0       0       0       0
 14013 ;;      Temps:          0       4       0       0       0       0       0
 14014 ;;      Totals:         0      10       0       0       0       0       0
 14015 ;;Total ram usage:       10 bytes
 14016 ;; Hardware stack levels used:    1
 14017 ;; Hardware stack levels required when called:    1
 14018 ;; This function calls:
 14019 ;;		Nothing
 14020 ;; This function is called by:
 14021 ;;		_init_USART
 14022 ;;		_init_timer_2
 14023 ;;		_update_pwm_duty_ccp1
 14024 ;;		_get_temperature
 14025 ;; This function uses a non-reentrant model
 14026 ;;
 14027                           
 14028                           	psect	text55
 14029  007AB2                     __ptext55:
 14030                           	callstack 0
 14031  007AB2                     ___fltol:
 14032                           	callstack 0
 14033  007AB2  FFFF               	dw	65535	; assembler added errata NOP
 14034  007AB4  0100               	movlb	0	; () banked
 14035  007AB6  35CC               	rlcf	(___fltol@f1+2)& (0+255),w,b
 14036  007AB8  35CD               	rlcf	(___fltol@f1+3)& (0+255),w,b
 14037  007ABA  6FD3               	movwf	___fltol@exp1& (0+255),b
 14038  007ABC  51D3               	movf	___fltol@exp1& (0+255),w,b
 14039  007ABE  A4D8               	btfss	status,2,c
 14040  007AC0  EF64  F03D         	goto	u6091
 14041  007AC4  EF67  F03D         	goto	u6090
 14042  007AC8                     u6091:
 14043  007AC8  FFFF               	dw	65535	; assembler added errata NOP
 14044  007ACA  EF73  F03D         	goto	l4963
 14045  007ACE                     u6090:
 14046  007ACE  FFFF               	dw	65535	; assembler added errata NOP
 14047  007AD0                     l4959:
 14048  007AD0  FFFF               	dw	65535	; assembler added errata NOP
 14049                           
 14050                           ; BSR set to: 0
 14051  007AD2  0E00               	movlw	0
 14052  007AD4  6FCA               	movwf	?___fltol& (0+255),b
 14053  007AD6  0E00               	movlw	0
 14054  007AD8  6FCB               	movwf	(?___fltol+1)& (0+255),b
 14055  007ADA  0E00               	movlw	0
 14056  007ADC  6FCC               	movwf	(?___fltol+2)& (0+255),b
 14057  007ADE  0E00               	movlw	0
 14058  007AE0  6FCD               	movwf	(?___fltol+3)& (0+255),b
 14059  007AE2  EFF2  F03D         	goto	l674
 14060  007AE6                     l4963:
 14061  007AE6  FFFF               	dw	65535	; assembler added errata NOP
 14062                           
 14063                           ; BSR set to: 0
 14064  007AE8  C0CA  F0CE         	movff	___fltol@f1,??___fltol
 14065  007AEC  C0CB  F0CF         	movff	___fltol@f1+1,??___fltol+1
 14066  007AF0  C0CC  F0D0         	movff	___fltol@f1+2,??___fltol+2
 14067  007AF4  C0CD  F0D1         	movff	___fltol@f1+3,??___fltol+3
 14068  007AF8  0E20               	movlw	32
 14069  007AFA  EF85  F03D         	goto	u6100
 14070  007AFE                     u6105:
 14071  007AFE  FFFF               	dw	65535	; assembler added errata NOP
 14072  007B00  90D8               	bcf	status,0,c
 14073  007B02  33D1               	rrcf	(??___fltol+3)& (0+255),f,b
 14074  007B04  33D0               	rrcf	(??___fltol+2)& (0+255),f,b
 14075  007B06  33CF               	rrcf	(??___fltol+1)& (0+255),f,b
 14076  007B08  33CE               	rrcf	??___fltol& (0+255),f,b
 14077  007B0A                     u6100:
 14078  007B0A  FFFF               	dw	65535	; assembler added errata NOP
 14079  007B0C  2EE8               	decfsz	wreg,f,c
 14080  007B0E  EF7F  F03D         	goto	u6105
 14081  007B12  51CE               	movf	??___fltol& (0+255),w,b
 14082  007B14  6FD2               	movwf	___fltol@sign1& (0+255),b
 14083  007B16                     
 14084                           ; BSR set to: 0
 14085  007B16  8FCC               	bsf	(___fltol@f1+2)& (0+255),7,b
 14086  007B18                     
 14087                           ; BSR set to: 0
 14088  007B18  0EFF               	movlw	255
 14089  007B1A  17CA               	andwf	___fltol@f1& (0+255),f,b
 14090  007B1C  0EFF               	movlw	255
 14091  007B1E  17CB               	andwf	(___fltol@f1+1)& (0+255),f,b
 14092  007B20  0EFF               	movlw	255
 14093  007B22  17CC               	andwf	(___fltol@f1+2)& (0+255),f,b
 14094  007B24  0E00               	movlw	0
 14095  007B26  17CD               	andwf	(___fltol@f1+3)& (0+255),f,b
 14096  007B28                     
 14097                           ; BSR set to: 0
 14098  007B28  0E96               	movlw	150
 14099  007B2A  5FD3               	subwf	___fltol@exp1& (0+255),f,b
 14100  007B2C                     
 14101                           ; BSR set to: 0
 14102  007B2C  BFD3               	btfsc	___fltol@exp1& (0+255),7,b
 14103  007B2E  EF9E  F03D         	goto	u6110
 14104  007B32  EF9B  F03D         	goto	u6111
 14105  007B36                     u6111:
 14106  007B36  FFFF               	dw	65535	; assembler added errata NOP
 14107  007B38  EFB8  F03D         	goto	l4983
 14108  007B3C                     u6110:
 14109  007B3C  FFFF               	dw	65535	; assembler added errata NOP
 14110  007B3E                     
 14111                           ; BSR set to: 0
 14112  007B3E  51D3               	movf	___fltol@exp1& (0+255),w,b
 14113  007B40  0A80               	xorlw	128
 14114  007B42  0F97               	addlw	151
 14115  007B44  B0D8               	btfsc	status,0,c
 14116  007B46  EFA7  F03D         	goto	u6121
 14117  007B4A  EFAA  F03D         	goto	u6120
 14118  007B4E                     u6121:
 14119  007B4E  FFFF               	dw	65535	; assembler added errata NOP
 14120  007B50  EFAD  F03D         	goto	l4979
 14121  007B54                     u6120:
 14122  007B54  FFFF               	dw	65535	; assembler added errata NOP
 14123  007B56  EF68  F03D         	goto	l4959
 14124  007B5A                     l4979:
 14125  007B5A  FFFF               	dw	65535	; assembler added errata NOP
 14126                           
 14127                           ; BSR set to: 0
 14128  007B5C  90D8               	bcf	status,0,c
 14129  007B5E  33CD               	rrcf	(___fltol@f1+3)& (0+255),f,b
 14130  007B60  33CC               	rrcf	(___fltol@f1+2)& (0+255),f,b
 14131  007B62  33CB               	rrcf	(___fltol@f1+1)& (0+255),f,b
 14132  007B64  33CA               	rrcf	___fltol@f1& (0+255),f,b
 14133  007B66                     
 14134                           ; BSR set to: 0
 14135  007B66  3FD3               	incfsz	___fltol@exp1& (0+255),f,b
 14136  007B68  EFAD  F03D         	goto	l4979
 14137  007B6C  EFD6  F03D         	goto	l4993
 14138  007B70                     l4983:
 14139  007B70  FFFF               	dw	65535	; assembler added errata NOP
 14140                           
 14141                           ; BSR set to: 0
 14142  007B72  0E1F               	movlw	31
 14143  007B74  65D3               	cpfsgt	___fltol@exp1& (0+255),b
 14144  007B76  EFBF  F03D         	goto	u6131
 14145  007B7A  EFC2  F03D         	goto	u6130
 14146  007B7E                     u6131:
 14147  007B7E  FFFF               	dw	65535	; assembler added errata NOP
 14148  007B80  EFCC  F03D         	goto	l4991
 14149  007B84                     u6130:
 14150  007B84  FFFF               	dw	65535	; assembler added errata NOP
 14151  007B86  EF68  F03D         	goto	l4959
 14152  007B8A                     l4989:
 14153  007B8A  FFFF               	dw	65535	; assembler added errata NOP
 14154                           
 14155                           ; BSR set to: 0
 14156  007B8C  90D8               	bcf	status,0,c
 14157  007B8E  37CA               	rlcf	___fltol@f1& (0+255),f,b
 14158  007B90  37CB               	rlcf	(___fltol@f1+1)& (0+255),f,b
 14159  007B92  37CC               	rlcf	(___fltol@f1+2)& (0+255),f,b
 14160  007B94  37CD               	rlcf	(___fltol@f1+3)& (0+255),f,b
 14161  007B96  07D3               	decf	___fltol@exp1& (0+255),f,b
 14162  007B98                     l4991:
 14163  007B98  FFFF               	dw	65535	; assembler added errata NOP
 14164                           
 14165                           ; BSR set to: 0
 14166  007B9A  51D3               	movf	___fltol@exp1& (0+255),w,b
 14167  007B9C  A4D8               	btfss	status,2,c
 14168  007B9E  EFD3  F03D         	goto	u6141
 14169  007BA2  EFD6  F03D         	goto	u6140
 14170  007BA6                     u6141:
 14171  007BA6  FFFF               	dw	65535	; assembler added errata NOP
 14172  007BA8  EFC5  F03D         	goto	l4989
 14173  007BAC                     u6140:
 14174  007BAC                     l4993:
 14175  007BAC  FFFF               	dw	65535	; assembler added errata NOP
 14176                           
 14177                           ; BSR set to: 0
 14178  007BAE  51D2               	movf	___fltol@sign1& (0+255),w,b
 14179  007BB0  B4D8               	btfsc	status,2,c
 14180  007BB2  EFDD  F03D         	goto	u6151
 14181  007BB6  EFE0  F03D         	goto	u6150
 14182  007BBA                     u6151:
 14183  007BBA  FFFF               	dw	65535	; assembler added errata NOP
 14184  007BBC  EFE9  F03D         	goto	l4997
 14185  007BC0                     u6150:
 14186  007BC0  FFFF               	dw	65535	; assembler added errata NOP
 14187  007BC2                     
 14188                           ; BSR set to: 0
 14189  007BC2  1FCD               	comf	(___fltol@f1+3)& (0+255),f,b
 14190  007BC4  1FCC               	comf	(___fltol@f1+2)& (0+255),f,b
 14191  007BC6  1FCB               	comf	(___fltol@f1+1)& (0+255),f,b
 14192  007BC8  6DCA               	negf	___fltol@f1& (0+255),b
 14193  007BCA  0E00               	movlw	0
 14194  007BCC  23CB               	addwfc	(___fltol@f1+1)& (0+255),f,b
 14195  007BCE  23CC               	addwfc	(___fltol@f1+2)& (0+255),f,b
 14196  007BD0  23CD               	addwfc	(___fltol@f1+3)& (0+255),f,b
 14197  007BD2                     l4997:
 14198  007BD2  FFFF               	dw	65535	; assembler added errata NOP
 14199                           
 14200                           ; BSR set to: 0
 14201  007BD4  C0CA  F0CA         	movff	___fltol@f1,?___fltol
 14202  007BD8  C0CB  F0CB         	movff	___fltol@f1+1,?___fltol+1
 14203  007BDC  C0CC  F0CC         	movff	___fltol@f1+2,?___fltol+2
 14204  007BE0  C0CD  F0CD         	movff	___fltol@f1+3,?___fltol+3
 14205  007BE4                     l674:
 14206  007BE4  FFFF               	dw	65535	; assembler added errata NOP
 14207                           
 14208                           ; BSR set to: 0
 14209  007BE6  0012               	return		;funcret
 14210  007BE8  FFFF               	dw	65535	; errata NOP
 14211  007BEA                     __end_of___fltol:
 14212                           	callstack 0
 14213                           
 14214 ;; *************** function _init_PORTS *****************
 14215 ;; Defined at:
 14216 ;;		line 61 in file "init_PIC.c"
 14217 ;; Parameters:    Size  Location     Type
 14218 ;;		None
 14219 ;; Auto vars:     Size  Location     Type
 14220 ;;		None
 14221 ;; Return value:  Size  Location     Type
 14222 ;;                  1    wreg      void 
 14223 ;; Registers used:
 14224 ;;		wreg, status,2
 14225 ;; Tracked objects:
 14226 ;;		On entry : 0/0
 14227 ;;		On exit  : 0/0
 14228 ;;		Unchanged: 0/0
 14229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14230 ;;      Params:         0       0       0       0       0       0       0
 14231 ;;      Locals:         0       0       0       0       0       0       0
 14232 ;;      Temps:          0       0       0       0       0       0       0
 14233 ;;      Totals:         0       0       0       0       0       0       0
 14234 ;;Total ram usage:        0 bytes
 14235 ;; Hardware stack levels used:    1
 14236 ;; Hardware stack levels required when called:    1
 14237 ;; This function calls:
 14238 ;;		Nothing
 14239 ;; This function is called by:
 14240 ;;		_main
 14241 ;; This function uses a non-reentrant model
 14242 ;;
 14243                           
 14244                           	psect	text56
 14245  006754                     __ptext56:
 14246                           	callstack 0
 14247  006754                     _init_PORTS:
 14248                           	callstack 0
 14249  006754  FFFF               	dw	65535	; assembler added errata NOP
 14250  006756                     
 14251                           ;init_PIC.c: 63:     LATA = 0;
 14252  006756  0E00               	movlw	0
 14253  006758  6E89               	movwf	137,c	;volatile
 14254                           
 14255                           ;init_PIC.c: 64:     PORTA = 0;
 14256  00675A  0E00               	movlw	0
 14257  00675C  6E80               	movwf	128,c	;volatile
 14258                           
 14259                           ;init_PIC.c: 65:     TRISA = 0xF0;
 14260  00675E  0EF0               	movlw	240
 14261  006760  6E92               	movwf	146,c	;volatile
 14262                           
 14263                           ;init_PIC.c: 67:     LATB = 0;
 14264  006762  0E00               	movlw	0
 14265  006764  6E8A               	movwf	138,c	;volatile
 14266                           
 14267                           ;init_PIC.c: 68:     PORTB = 0;
 14268  006766  0E00               	movlw	0
 14269  006768  6E81               	movwf	129,c	;volatile
 14270                           
 14271                           ;init_PIC.c: 69:     TRISB = 0x00;
 14272  00676A  0E00               	movlw	0
 14273  00676C  6E93               	movwf	147,c	;volatile
 14274                           
 14275                           ;init_PIC.c: 72:     LATC = 0;
 14276  00676E  0E00               	movlw	0
 14277  006770  6E8B               	movwf	139,c	;volatile
 14278                           
 14279                           ;init_PIC.c: 73:     PORTC = 0;
 14280  006772  0E00               	movlw	0
 14281  006774  6E82               	movwf	130,c	;volatile
 14282  006776                     
 14283                           ;init_PIC.c: 74:     TRISCbits.RC2 = 0;
 14284  006776  9494               	bcf	148,2,c	;volatile
 14285  006778                     
 14286                           ;init_PIC.c: 75:     TRISCbits.RC7 = 1;
 14287  006778  8E94               	bsf	148,7,c	;volatile
 14288  00677A                     
 14289                           ;init_PIC.c: 76:     TRISCbits.RC6 = 0;
 14290  00677A  9C94               	bcf	148,6,c	;volatile
 14291  00677C  0012               	return		;funcret
 14292  00677E  FFFF               	dw	65535	; errata NOP
 14293  006780                     __end_of_init_PORTS:
 14294                           	callstack 0
 14295                           
 14296 ;; *************** function _get_reg_value *****************
 14297 ;; Defined at:
 14298 ;;		line 51 in file "serial_rs232.c"
 14299 ;; Parameters:    Size  Location     Type
 14300 ;;		None
 14301 ;; Auto vars:     Size  Location     Type
 14302 ;;  rx_char         1    0[COMRAM] unsigned char 
 14303 ;; Return value:  Size  Location     Type
 14304 ;;                  1    wreg      unsigned char 
 14305 ;; Registers used:
 14306 ;;		wreg, status,2
 14307 ;; Tracked objects:
 14308 ;;		On entry : 0/0
 14309 ;;		On exit  : 0/0
 14310 ;;		Unchanged: 0/0
 14311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14312 ;;      Params:         0       0       0       0       0       0       0
 14313 ;;      Locals:         1       0       0       0       0       0       0
 14314 ;;      Temps:          0       0       0       0       0       0       0
 14315 ;;      Totals:         1       0       0       0       0       0       0
 14316 ;;Total ram usage:        1 bytes
 14317 ;; Hardware stack levels used:    1
 14318 ;; Hardware stack levels required when called:    1
 14319 ;; This function calls:
 14320 ;;		Nothing
 14321 ;; This function is called by:
 14322 ;;		_main
 14323 ;; This function uses a non-reentrant model
 14324 ;;
 14325                           
 14326                           	psect	text57
 14327  0065DC                     __ptext57:
 14328                           	callstack 0
 14329  0065DC                     _get_reg_value:
 14330                           	callstack 0
 14331  0065DC  FFFF               	dw	65535	; assembler added errata NOP
 14332  0065DE                     
 14333                           ;serial_rs232.c: 52:     unsigned char rx_char = RCREG;
 14334  0065DE  CFAE F001          	movff	4014,get_reg_value@rx_char	;volatile
 14335  0065E2                     
 14336                           ;serial_rs232.c: 53:     RCREG = 0;
 14337  0065E2  0E00               	movlw	0
 14338  0065E4  6EAE               	movwf	174,c	;volatile
 14339                           
 14340                           ;serial_rs232.c: 54:     return rx_char;
 14341  0065E6  5001               	movf	get_reg_value@rx_char^0,w,c
 14342  0065E8  0012               	return		;funcret
 14343  0065EA  FFFF               	dw	65535	; errata NOP
 14344  0065EC                     __end_of_get_reg_value:
 14345                           	callstack 0
 14346                           
 14347 ;; *************** function _configure_analog_digital_conversion *****************
 14348 ;; Defined at:
 14349 ;;		line 8 in file "oven.c"
 14350 ;; Parameters:    Size  Location     Type
 14351 ;;		None
 14352 ;; Auto vars:     Size  Location     Type
 14353 ;;		None
 14354 ;; Return value:  Size  Location     Type
 14355 ;;                  1    wreg      void 
 14356 ;; Registers used:
 14357 ;;		wreg, status,2
 14358 ;; Tracked objects:
 14359 ;;		On entry : 0/0
 14360 ;;		On exit  : 0/0
 14361 ;;		Unchanged: 0/0
 14362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14363 ;;      Params:         0       0       0       0       0       0       0
 14364 ;;      Locals:         0       0       0       0       0       0       0
 14365 ;;      Temps:          0       0       0       0       0       0       0
 14366 ;;      Totals:         0       0       0       0       0       0       0
 14367 ;;Total ram usage:        0 bytes
 14368 ;; Hardware stack levels used:    1
 14369 ;; Hardware stack levels required when called:    1
 14370 ;; This function calls:
 14371 ;;		Nothing
 14372 ;; This function is called by:
 14373 ;;		_main
 14374 ;; This function uses a non-reentrant model
 14375 ;;
 14376                           
 14377                           	psect	text58
 14378  006686                     __ptext58:
 14379                           	callstack 0
 14380  006686                     _configure_analog_digital_conversion:
 14381                           	callstack 0
 14382  006686  FFFF               	dw	65535	; assembler added errata NOP
 14383  006688                     
 14384                           ;oven.c: 9:     LATA = 0;
 14385  006688  0E00               	movlw	0
 14386  00668A  6E89               	movwf	137,c	;volatile
 14387                           
 14388                           ;oven.c: 10:     PORTA = 0;
 14389  00668C  0E00               	movlw	0
 14390  00668E  6E80               	movwf	128,c	;volatile
 14391  006690                     
 14392                           ;oven.c: 11:     TRISA = 0xFF;
 14393  006690  6892               	setf	146,c	;volatile
 14394                           
 14395                           ;oven.c: 12:     ADCON0 = 0;
 14396  006692  0E00               	movlw	0
 14397  006694  6EC2               	movwf	194,c	;volatile
 14398  006696                     
 14399                           ;oven.c: 13:     ADCON0bits.CHS0 = 0;
 14400  006696  96C2               	bcf	194,3,c	;volatile
 14401  006698                     
 14402                           ;oven.c: 14:     ADCON0bits.CHS1 = 0;
 14403  006698  98C2               	bcf	194,4,c	;volatile
 14404  00669A                     
 14405                           ;oven.c: 15:     ADCON0bits.CHS2 = 1;
 14406  00669A  8AC2               	bsf	194,5,c	;volatile
 14407  00669C                     
 14408                           ;oven.c: 16:     ADCON0bits.ADON = 1;
 14409  00669C  80C2               	bsf	194,0,c	;volatile
 14410                           
 14411                           ;oven.c: 17:     ADRESH = 0;
 14412  00669E  0E00               	movlw	0
 14413  0066A0  6EC4               	movwf	196,c	;volatile
 14414                           
 14415                           ;oven.c: 18:     ADRESL = 0;
 14416  0066A2  0E00               	movlw	0
 14417  0066A4  6EC3               	movwf	195,c	;volatile
 14418                           
 14419                           ;oven.c: 19:     ADCON1 = 0;
 14420  0066A6  0E00               	movlw	0
 14421  0066A8  6EC1               	movwf	193,c	;volatile
 14422  0066AA  0012               	return		;funcret
 14423  0066AC  FFFF               	dw	65535	; errata NOP
 14424  0066AE                     __end_of_configure_analog_digital_conversion:
 14425                           	callstack 0
 14426                           
 14427 ;; *************** function _check_temperature *****************
 14428 ;; Defined at:
 14429 ;;		line 36 in file "oven.c"
 14430 ;; Parameters:    Size  Location     Type
 14431 ;;  temp_to_be_c    2   30[BANK0 ] int 
 14432 ;; Auto vars:     Size  Location     Type
 14433 ;;  grad            4   32[BANK0 ] float 
 14434 ;; Return value:  Size  Location     Type
 14435 ;;                  2   30[BANK0 ] int 
 14436 ;; Registers used:
 14437 ;;		wreg, status,2, status,0, cstack
 14438 ;; Tracked objects:
 14439 ;;		On entry : 0/0
 14440 ;;		On exit  : 0/0
 14441 ;;		Unchanged: 0/0
 14442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14443 ;;      Params:         0       2       0       0       0       0       0
 14444 ;;      Locals:         0       4       0       0       0       0       0
 14445 ;;      Temps:          0       0       0       0       0       0       0
 14446 ;;      Totals:         0       6       0       0       0       0       0
 14447 ;;Total ram usage:        6 bytes
 14448 ;; Hardware stack levels used:    1
 14449 ;; Hardware stack levels required when called:    2
 14450 ;; This function calls:
 14451 ;;		___awdiv
 14452 ;;		___flge
 14453 ;;		___xxtofl
 14454 ;;		_abs
 14455 ;; This function is called by:
 14456 ;;		_main
 14457 ;; This function uses a non-reentrant model
 14458 ;;
 14459                           
 14460                           	psect	text59
 14461  0071FE                     __ptext59:
 14462                           	callstack 0
 14463  0071FE                     _check_temperature:
 14464                           	callstack 0
 14465  0071FE  FFFF               	dw	65535	; assembler added errata NOP
 14466  007200                     
 14467                           ;oven.c: 37:     float grad = abs(temp_to_be_checked - (-63))/5;
 14468  007200  0E00               	movlw	0
 14469  007202  6E1A               	movwf	(___awdiv@divisor+1)^0,c
 14470  007204  0E05               	movlw	5
 14471  007206  6E19               	movwf	___awdiv@divisor^0,c
 14472  007208  0E3F               	movlw	63
 14473  00720A  0100               	movlb	0	; () banked
 14474  00720C  25D6               	addwf	check_temperature@temp_to_be_checked& (0+255),w,b
 14475  00720E  6E13               	movwf	abs@a^0,c
 14476  007210  0E00               	movlw	0
 14477  007212  21D7               	addwfc	(check_temperature@temp_to_be_checked+1)& (0+255),w,b
 14478  007214  6E14               	movwf	(abs@a+1)^0,c
 14479  007216  EC00  F035         	call	_abs	;wreg free
 14480  00721A  C013  F017         	movff	?_abs,___awdiv@dividend
 14481  00721E  C014  F018         	movff	?_abs+1,___awdiv@dividend+1
 14482  007222  ECC6  F03A         	call	___awdiv	;wreg free
 14483  007226  C017  F01F         	movff	?___awdiv,___xxtofl@val
 14484  00722A  C018  F020         	movff	?___awdiv+1,___xxtofl@val+1
 14485  00722E  0E00               	movlw	0
 14486  007230  BE20               	btfsc	(___xxtofl@val+1)^0,7,c
 14487  007232  0EFF               	movlw	-1
 14488  007234  6E21               	movwf	(___xxtofl@val+2)^0,c
 14489  007236  6E22               	movwf	(___xxtofl@val+3)^0,c
 14490  007238  0E01               	movlw	1
 14491  00723A  EC20  F01C         	call	___xxtofl
 14492  00723E  C01F  F0D8         	movff	?___xxtofl,check_temperature@grad
 14493  007242  C020  F0D9         	movff	?___xxtofl+1,check_temperature@grad+1
 14494  007246  C021  F0DA         	movff	?___xxtofl+2,check_temperature@grad+2
 14495  00724A  C022  F0DB         	movff	?___xxtofl+3,check_temperature@grad+3
 14496                           
 14497                           ;oven.c: 38:     if (grad >= 12 && grad <= 13){
 14498  00724E  C0D8  F001         	movff	check_temperature@grad,___flge@ff1
 14499  007252  C0D9  F002         	movff	check_temperature@grad+1,___flge@ff1+1
 14500  007256  C0DA  F003         	movff	check_temperature@grad+2,___flge@ff1+2
 14501  00725A  C0DB  F004         	movff	check_temperature@grad+3,___flge@ff1+3
 14502  00725E  0E00               	movlw	0
 14503  007260  6E05               	movwf	___flge@ff2^0,c
 14504  007262  0E00               	movlw	0
 14505  007264  6E06               	movwf	(___flge@ff2+1)^0,c
 14506  007266  0E40               	movlw	64
 14507  007268  6E07               	movwf	(___flge@ff2+2)^0,c
 14508  00726A  0E41               	movlw	65
 14509  00726C  6E08               	movwf	(___flge@ff2+3)^0,c
 14510  00726E  ECC5  F03C         	call	___flge	;wreg free
 14511  007272  A0D8               	btfss	status,0,c
 14512  007274  EF3E  F039         	goto	u6641
 14513  007278  EF41  F039         	goto	u6640
 14514  00727C                     u6641:
 14515  00727C  FFFF               	dw	65535	; assembler added errata NOP
 14516  00727E  EF64  F039         	goto	l5409
 14517  007282                     u6640:
 14518  007282  FFFF               	dw	65535	; assembler added errata NOP
 14519  007284  0E00               	movlw	0
 14520  007286  6E01               	movwf	___flge@ff1^0,c
 14521  007288  0E00               	movlw	0
 14522  00728A  6E02               	movwf	(___flge@ff1+1)^0,c
 14523  00728C  0E50               	movlw	80
 14524  00728E  6E03               	movwf	(___flge@ff1+2)^0,c
 14525  007290  0E41               	movlw	65
 14526  007292  6E04               	movwf	(___flge@ff1+3)^0,c
 14527  007294  C0D8  F005         	movff	check_temperature@grad,___flge@ff2
 14528  007298  C0D9  F006         	movff	check_temperature@grad+1,___flge@ff2+1
 14529  00729C  C0DA  F007         	movff	check_temperature@grad+2,___flge@ff2+2
 14530  0072A0  C0DB  F008         	movff	check_temperature@grad+3,___flge@ff2+3
 14531  0072A4  ECC5  F03C         	call	___flge	;wreg free
 14532  0072A8  A0D8               	btfss	status,0,c
 14533  0072AA  EF59  F039         	goto	u6651
 14534  0072AE  EF5C  F039         	goto	u6650
 14535  0072B2                     u6651:
 14536  0072B2  FFFF               	dw	65535	; assembler added errata NOP
 14537  0072B4  EF64  F039         	goto	l5409
 14538  0072B8                     u6650:
 14539  0072B8  FFFF               	dw	65535	; assembler added errata NOP
 14540  0072BA                     
 14541                           ;oven.c: 39:         return 1;
 14542  0072BA  0E00               	movlw	0
 14543  0072BC  0100               	movlb	0	; () banked
 14544  0072BE  6FD7               	movwf	(?_check_temperature+1)& (0+255),b
 14545  0072C0  0E01               	movlw	1
 14546  0072C2  6FD6               	movwf	?_check_temperature& (0+255),b
 14547  0072C4  EF6A  F039         	goto	l373
 14548  0072C8                     l5409:
 14549  0072C8  FFFF               	dw	65535	; assembler added errata NOP
 14550                           
 14551                           ;oven.c: 41:         return 0;
 14552  0072CA  0E00               	movlw	0
 14553  0072CC  0100               	movlb	0	; () banked
 14554  0072CE  6FD7               	movwf	(?_check_temperature+1)& (0+255),b
 14555  0072D0  0E00               	movlw	0
 14556  0072D2  6FD6               	movwf	?_check_temperature& (0+255),b
 14557  0072D4                     l373:
 14558  0072D4  FFFF               	dw	65535	; assembler added errata NOP
 14559                           
 14560                           ; BSR set to: 0
 14561  0072D6  0012               	return		;funcret
 14562  0072D8  FFFF               	dw	65535	; errata NOP
 14563  0072DA                     __end_of_check_temperature:
 14564                           	callstack 0
 14565                           
 14566 ;; *************** function _abs *****************
 14567 ;; Defined at:
 14568 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
 14569 ;; Parameters:    Size  Location     Type
 14570 ;;  a               2   18[COMRAM] int 
 14571 ;; Auto vars:     Size  Location     Type
 14572 ;;		None
 14573 ;; Return value:  Size  Location     Type
 14574 ;;                  2   18[COMRAM] int 
 14575 ;; Registers used:
 14576 ;;		wreg, status,2, status,0
 14577 ;; Tracked objects:
 14578 ;;		On entry : 0/0
 14579 ;;		On exit  : 0/0
 14580 ;;		Unchanged: 0/0
 14581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14582 ;;      Params:         2       0       0       0       0       0       0
 14583 ;;      Locals:         0       0       0       0       0       0       0
 14584 ;;      Temps:          2       0       0       0       0       0       0
 14585 ;;      Totals:         4       0       0       0       0       0       0
 14586 ;;Total ram usage:        4 bytes
 14587 ;; Hardware stack levels used:    1
 14588 ;; Hardware stack levels required when called:    1
 14589 ;; This function calls:
 14590 ;;		Nothing
 14591 ;; This function is called by:
 14592 ;;		_check_temperature
 14593 ;;		_dtoa
 14594 ;; This function uses a non-reentrant model
 14595 ;;
 14596                           
 14597                           	psect	text60
 14598  006A00                     __ptext60:
 14599                           	callstack 0
 14600  006A00                     _abs:
 14601                           	callstack 0
 14602  006A00  FFFF               	dw	65535	; assembler added errata NOP
 14603  006A02  BE14               	btfsc	(abs@a+1)^0,7,c
 14604  006A04  EF0F  F035         	goto	u3650
 14605  006A08  5014               	movf	(abs@a+1)^0,w,c
 14606  006A0A  E106               	bnz	u3651
 14607  006A0C  0413               	decf	abs@a^0,w,c
 14608  006A0E  B0D8               	btfsc	status,0,c
 14609  006A10  EF0C  F035         	goto	u3651
 14610  006A14  EF0F  F035         	goto	u3650
 14611  006A18                     u3651:
 14612  006A18  FFFF               	dw	65535	; assembler added errata NOP
 14613  006A1A  EF1E  F035         	goto	l1052
 14614  006A1E                     u3650:
 14615  006A1E  FFFF               	dw	65535	; assembler added errata NOP
 14616  006A20  C013  F015         	movff	abs@a,??_abs
 14617  006A24  C014  F016         	movff	abs@a+1,??_abs+1
 14618  006A28  1E15               	comf	??_abs^0,f,c
 14619  006A2A  1E16               	comf	(??_abs+1)^0,f,c
 14620  006A2C  4A15               	infsnz	??_abs^0,f,c
 14621  006A2E  2A16               	incf	(??_abs+1)^0,f,c
 14622  006A30  C015  F013         	movff	??_abs,?_abs
 14623  006A34  C016  F014         	movff	??_abs+1,?_abs+1
 14624  006A38  EF23  F035         	goto	l1055
 14625  006A3C                     l1052:
 14626  006A3C  FFFF               	dw	65535	; assembler added errata NOP
 14627  006A3E  C013  F013         	movff	abs@a,?_abs
 14628  006A42  C014  F014         	movff	abs@a+1,?_abs+1
 14629  006A46                     l1055:
 14630  006A46  FFFF               	dw	65535	; assembler added errata NOP
 14631  006A48  0012               	return		;funcret
 14632  006A4A  FFFF               	dw	65535	; errata NOP
 14633  006A4C                     __end_of_abs:
 14634                           	callstack 0
 14635                           
 14636 ;; *************** function ___xxtofl *****************
 14637 ;; Defined at:
 14638 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
 14639 ;; Parameters:    Size  Location     Type
 14640 ;;  sign            1    wreg     unsigned char 
 14641 ;;  val             4   30[COMRAM] long 
 14642 ;; Auto vars:     Size  Location     Type
 14643 ;;  sign            1   38[COMRAM] unsigned char 
 14644 ;;  arg             4   40[COMRAM] unsigned long 
 14645 ;;  exp             1   39[COMRAM] unsigned char 
 14646 ;; Return value:  Size  Location     Type
 14647 ;;                  4   30[COMRAM] unsigned char 
 14648 ;; Registers used:
 14649 ;;		wreg, status,2, status,0
 14650 ;; Tracked objects:
 14651 ;;		On entry : 0/0
 14652 ;;		On exit  : 0/0
 14653 ;;		Unchanged: 0/0
 14654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14655 ;;      Params:         4       0       0       0       0       0       0
 14656 ;;      Locals:         6       0       0       0       0       0       0
 14657 ;;      Temps:          4       0       0       0       0       0       0
 14658 ;;      Totals:        14       0       0       0       0       0       0
 14659 ;;Total ram usage:       14 bytes
 14660 ;; Hardware stack levels used:    1
 14661 ;; Hardware stack levels required when called:    1
 14662 ;; This function calls:
 14663 ;;		Nothing
 14664 ;; This function is called by:
 14665 ;;		_get_temperature
 14666 ;;		_check_temperature
 14667 ;; This function uses a non-reentrant model
 14668 ;;
 14669                           
 14670                           	psect	text61
 14671  003840                     __ptext61:
 14672                           	callstack 0
 14673  003840                     ___xxtofl:
 14674                           	callstack 0
 14675  003840  FFFF               	dw	65535	; assembler added errata NOP
 14676                           
 14677                           ;incstack = 0
 14678                           ;___xxtofl@sign stored from wreg
 14679  003842  6E27               	movwf	___xxtofl@sign^0,c
 14680  003844  5027               	movf	___xxtofl@sign^0,w,c
 14681  003846  B4D8               	btfsc	status,2,c
 14682  003848  EF28  F01C         	goto	u6161
 14683  00384C  EF2B  F01C         	goto	u6160
 14684  003850                     u6161:
 14685  003850  FFFF               	dw	65535	; assembler added errata NOP
 14686  003852  EF50  F01C         	goto	l1032
 14687  003856                     u6160:
 14688  003856  FFFF               	dw	65535	; assembler added errata NOP
 14689  003858  BE22               	btfsc	(___xxtofl@val+3)^0,7,c
 14690  00385A  EF34  F01C         	goto	u6170
 14691  00385E  EF31  F01C         	goto	u6171
 14692  003862                     u6171:
 14693  003862  FFFF               	dw	65535	; assembler added errata NOP
 14694  003864  EF50  F01C         	goto	l1032
 14695  003868                     u6170:
 14696  003868  FFFF               	dw	65535	; assembler added errata NOP
 14697  00386A  C01F  F023         	movff	___xxtofl@val,??___xxtofl
 14698  00386E  C020  F024         	movff	___xxtofl@val+1,??___xxtofl+1
 14699  003872  C021  F025         	movff	___xxtofl@val+2,??___xxtofl+2
 14700  003876  C022  F026         	movff	___xxtofl@val+3,??___xxtofl+3
 14701  00387A  1E23               	comf	??___xxtofl^0,f,c
 14702  00387C  1E24               	comf	(??___xxtofl+1)^0,f,c
 14703  00387E  1E25               	comf	(??___xxtofl+2)^0,f,c
 14704  003880  1E26               	comf	(??___xxtofl+3)^0,f,c
 14705  003882  2A23               	incf	??___xxtofl^0,f,c
 14706  003884  0E00               	movlw	0
 14707  003886  2224               	addwfc	(??___xxtofl+1)^0,f,c
 14708  003888  2225               	addwfc	(??___xxtofl+2)^0,f,c
 14709  00388A  2226               	addwfc	(??___xxtofl+3)^0,f,c
 14710  00388C  C023  F029         	movff	??___xxtofl,___xxtofl@arg
 14711  003890  C024  F02A         	movff	??___xxtofl+1,___xxtofl@arg+1
 14712  003894  C025  F02B         	movff	??___xxtofl+2,___xxtofl@arg+2
 14713  003898  C026  F02C         	movff	??___xxtofl+3,___xxtofl@arg+3
 14714  00389C  EF59  F01C         	goto	l5007
 14715  0038A0                     l1032:
 14716  0038A0  FFFF               	dw	65535	; assembler added errata NOP
 14717  0038A2  C01F  F029         	movff	___xxtofl@val,___xxtofl@arg
 14718  0038A6  C020  F02A         	movff	___xxtofl@val+1,___xxtofl@arg+1
 14719  0038AA  C021  F02B         	movff	___xxtofl@val+2,___xxtofl@arg+2
 14720  0038AE  C022  F02C         	movff	___xxtofl@val+3,___xxtofl@arg+3
 14721  0038B2                     l5007:
 14722  0038B2  FFFF               	dw	65535	; assembler added errata NOP
 14723  0038B4  501F               	movf	___xxtofl@val^0,w,c
 14724  0038B6  1020               	iorwf	(___xxtofl@val+1)^0,w,c
 14725  0038B8  1021               	iorwf	(___xxtofl@val+2)^0,w,c
 14726  0038BA  1022               	iorwf	(___xxtofl@val+3)^0,w,c
 14727  0038BC  A4D8               	btfss	status,2,c
 14728  0038BE  EF63  F01C         	goto	u6181
 14729  0038C2  EF66  F01C         	goto	u6180
 14730  0038C6                     u6181:
 14731  0038C6  FFFF               	dw	65535	; assembler added errata NOP
 14732  0038C8  EF71  F01C         	goto	l5013
 14733  0038CC                     u6180:
 14734  0038CC  FFFF               	dw	65535	; assembler added errata NOP
 14735  0038CE  0E00               	movlw	0
 14736  0038D0  6E1F               	movwf	?___xxtofl^0,c
 14737  0038D2  0E00               	movlw	0
 14738  0038D4  6E20               	movwf	(?___xxtofl+1)^0,c
 14739  0038D6  0E00               	movlw	0
 14740  0038D8  6E21               	movwf	(?___xxtofl+2)^0,c
 14741  0038DA  0E00               	movlw	0
 14742  0038DC  6E22               	movwf	(?___xxtofl+3)^0,c
 14743  0038DE  EF19  F01D         	goto	l1035
 14744  0038E2                     l5013:
 14745  0038E2  FFFF               	dw	65535	; assembler added errata NOP
 14746  0038E4  0E96               	movlw	150
 14747  0038E6  6E28               	movwf	___xxtofl@exp^0,c
 14748  0038E8  EF7D  F01C         	goto	l5017
 14749  0038EC                     l5015:
 14750  0038EC  FFFF               	dw	65535	; assembler added errata NOP
 14751  0038EE  2A28               	incf	___xxtofl@exp^0,f,c
 14752  0038F0  90D8               	bcf	status,0,c
 14753  0038F2  322C               	rrcf	(___xxtofl@arg+3)^0,f,c
 14754  0038F4  322B               	rrcf	(___xxtofl@arg+2)^0,f,c
 14755  0038F6  322A               	rrcf	(___xxtofl@arg+1)^0,f,c
 14756  0038F8  3229               	rrcf	___xxtofl@arg^0,f,c
 14757  0038FA                     l5017:
 14758  0038FA  FFFF               	dw	65535	; assembler added errata NOP
 14759  0038FC  0E00               	movlw	0
 14760  0038FE  1429               	andwf	___xxtofl@arg^0,w,c
 14761  003900  6E23               	movwf	??___xxtofl^0,c
 14762  003902  0E00               	movlw	0
 14763  003904  142A               	andwf	(___xxtofl@arg+1)^0,w,c
 14764  003906  6E24               	movwf	(??___xxtofl+1)^0,c
 14765  003908  0E00               	movlw	0
 14766  00390A  142B               	andwf	(___xxtofl@arg+2)^0,w,c
 14767  00390C  6E25               	movwf	(??___xxtofl+2)^0,c
 14768  00390E  0EFE               	movlw	254
 14769  003910  142C               	andwf	(___xxtofl@arg+3)^0,w,c
 14770  003912  6E26               	movwf	(??___xxtofl+3)^0,c
 14771  003914  5023               	movf	??___xxtofl^0,w,c
 14772  003916  1024               	iorwf	(??___xxtofl+1)^0,w,c
 14773  003918  1025               	iorwf	(??___xxtofl+2)^0,w,c
 14774  00391A  1026               	iorwf	(??___xxtofl+3)^0,w,c
 14775  00391C  A4D8               	btfss	status,2,c
 14776  00391E  EF93  F01C         	goto	u6191
 14777  003922  EF96  F01C         	goto	u6190
 14778  003926                     u6191:
 14779  003926  FFFF               	dw	65535	; assembler added errata NOP
 14780  003928  EF76  F01C         	goto	l5015
 14781  00392C                     u6190:
 14782  00392C  FFFF               	dw	65535	; assembler added errata NOP
 14783  00392E  EFA6  F01C         	goto	l1039
 14784  003932                     l5019:
 14785  003932  FFFF               	dw	65535	; assembler added errata NOP
 14786  003934  2A28               	incf	___xxtofl@exp^0,f,c
 14787  003936  0E01               	movlw	1
 14788  003938  2629               	addwf	___xxtofl@arg^0,f,c
 14789  00393A  0E00               	movlw	0
 14790  00393C  222A               	addwfc	(___xxtofl@arg+1)^0,f,c
 14791  00393E  222B               	addwfc	(___xxtofl@arg+2)^0,f,c
 14792  003940  222C               	addwfc	(___xxtofl@arg+3)^0,f,c
 14793  003942  90D8               	bcf	status,0,c
 14794  003944  322C               	rrcf	(___xxtofl@arg+3)^0,f,c
 14795  003946  322B               	rrcf	(___xxtofl@arg+2)^0,f,c
 14796  003948  322A               	rrcf	(___xxtofl@arg+1)^0,f,c
 14797  00394A  3229               	rrcf	___xxtofl@arg^0,f,c
 14798  00394C                     l1039:
 14799  00394C  FFFF               	dw	65535	; assembler added errata NOP
 14800  00394E  0E00               	movlw	0
 14801  003950  1429               	andwf	___xxtofl@arg^0,w,c
 14802  003952  6E23               	movwf	??___xxtofl^0,c
 14803  003954  0E00               	movlw	0
 14804  003956  142A               	andwf	(___xxtofl@arg+1)^0,w,c
 14805  003958  6E24               	movwf	(??___xxtofl+1)^0,c
 14806  00395A  0E00               	movlw	0
 14807  00395C  142B               	andwf	(___xxtofl@arg+2)^0,w,c
 14808  00395E  6E25               	movwf	(??___xxtofl+2)^0,c
 14809  003960  0EFF               	movlw	255
 14810  003962  142C               	andwf	(___xxtofl@arg+3)^0,w,c
 14811  003964  6E26               	movwf	(??___xxtofl+3)^0,c
 14812  003966  5023               	movf	??___xxtofl^0,w,c
 14813  003968  1024               	iorwf	(??___xxtofl+1)^0,w,c
 14814  00396A  1025               	iorwf	(??___xxtofl+2)^0,w,c
 14815  00396C  1026               	iorwf	(??___xxtofl+3)^0,w,c
 14816  00396E  A4D8               	btfss	status,2,c
 14817  003970  EFBC  F01C         	goto	u6201
 14818  003974  EFBF  F01C         	goto	u6200
 14819  003978                     u6201:
 14820  003978  FFFF               	dw	65535	; assembler added errata NOP
 14821  00397A  EF99  F01C         	goto	l5019
 14822  00397E                     u6200:
 14823  00397E  FFFF               	dw	65535	; assembler added errata NOP
 14824  003980  EFC9  F01C         	goto	l5027
 14825  003984                     l5025:
 14826  003984  FFFF               	dw	65535	; assembler added errata NOP
 14827  003986  0628               	decf	___xxtofl@exp^0,f,c
 14828  003988  90D8               	bcf	status,0,c
 14829  00398A  3629               	rlcf	___xxtofl@arg^0,f,c
 14830  00398C  362A               	rlcf	(___xxtofl@arg+1)^0,f,c
 14831  00398E  362B               	rlcf	(___xxtofl@arg+2)^0,f,c
 14832  003990  362C               	rlcf	(___xxtofl@arg+3)^0,f,c
 14833  003992                     l5027:
 14834  003992  FFFF               	dw	65535	; assembler added errata NOP
 14835  003994  BE2B               	btfsc	(___xxtofl@arg+2)^0,7,c
 14836  003996  EFCF  F01C         	goto	u6211
 14837  00399A  EFD2  F01C         	goto	u6210
 14838  00399E                     u6211:
 14839  00399E  FFFF               	dw	65535	; assembler added errata NOP
 14840  0039A0  EFDC  F01C         	goto	l1046
 14841  0039A4                     u6210:
 14842  0039A4  FFFF               	dw	65535	; assembler added errata NOP
 14843  0039A6  0E02               	movlw	2
 14844  0039A8  6028               	cpfslt	___xxtofl@exp^0,c
 14845  0039AA  EFD9  F01C         	goto	u6221
 14846  0039AE  EFDC  F01C         	goto	u6220
 14847  0039B2                     u6221:
 14848  0039B2  FFFF               	dw	65535	; assembler added errata NOP
 14849  0039B4  EFC2  F01C         	goto	l5025
 14850  0039B8                     u6220:
 14851  0039B8                     l1046:
 14852  0039B8  FFFF               	dw	65535	; assembler added errata NOP
 14853  0039BA  B028               	btfsc	___xxtofl@exp^0,0,c
 14854  0039BC  EFE2  F01C         	goto	u6231
 14855  0039C0  EFE5  F01C         	goto	u6230
 14856  0039C4                     u6231:
 14857  0039C4  FFFF               	dw	65535	; assembler added errata NOP
 14858  0039C6  EFE7  F01C         	goto	l5033
 14859  0039CA                     u6230:
 14860  0039CA  FFFF               	dw	65535	; assembler added errata NOP
 14861  0039CC  9E2B               	bcf	(___xxtofl@arg+2)^0,7,c
 14862  0039CE                     l5033:
 14863  0039CE  FFFF               	dw	65535	; assembler added errata NOP
 14864  0039D0  90D8               	bcf	status,0,c
 14865  0039D2  3228               	rrcf	___xxtofl@exp^0,f,c
 14866  0039D4  C028  F023         	movff	___xxtofl@exp,??___xxtofl
 14867  0039D8  6A24               	clrf	(??___xxtofl+1)^0,c
 14868  0039DA  6A25               	clrf	(??___xxtofl+2)^0,c
 14869  0039DC  6A26               	clrf	(??___xxtofl+3)^0,c
 14870  0039DE  C023  F026         	movff	??___xxtofl,??___xxtofl+3
 14871  0039E2  6A25               	clrf	(??___xxtofl+2)^0,c
 14872  0039E4  6A24               	clrf	(??___xxtofl+1)^0,c
 14873  0039E6  6A23               	clrf	??___xxtofl^0,c
 14874  0039E8  5023               	movf	??___xxtofl^0,w,c
 14875  0039EA  1229               	iorwf	___xxtofl@arg^0,f,c
 14876  0039EC  5024               	movf	(??___xxtofl+1)^0,w,c
 14877  0039EE  122A               	iorwf	(___xxtofl@arg+1)^0,f,c
 14878  0039F0  5025               	movf	(??___xxtofl+2)^0,w,c
 14879  0039F2  122B               	iorwf	(___xxtofl@arg+2)^0,f,c
 14880  0039F4  5026               	movf	(??___xxtofl+3)^0,w,c
 14881  0039F6  122C               	iorwf	(___xxtofl@arg+3)^0,f,c
 14882  0039F8  5027               	movf	___xxtofl@sign^0,w,c
 14883  0039FA  B4D8               	btfsc	status,2,c
 14884  0039FC  EF02  F01D         	goto	u6241
 14885  003A00  EF05  F01D         	goto	u6240
 14886  003A04                     u6241:
 14887  003A04  FFFF               	dw	65535	; assembler added errata NOP
 14888  003A06  EF10  F01D         	goto	l5043
 14889  003A0A                     u6240:
 14890  003A0A  FFFF               	dw	65535	; assembler added errata NOP
 14891  003A0C  BE22               	btfsc	(___xxtofl@val+3)^0,7,c
 14892  003A0E  EF0E  F01D         	goto	u6250
 14893  003A12  EF0B  F01D         	goto	u6251
 14894  003A16                     u6251:
 14895  003A16  FFFF               	dw	65535	; assembler added errata NOP
 14896  003A18  EF10  F01D         	goto	l5043
 14897  003A1C                     u6250:
 14898  003A1C  FFFF               	dw	65535	; assembler added errata NOP
 14899  003A1E  8E2C               	bsf	(___xxtofl@arg+3)^0,7,c
 14900  003A20                     l5043:
 14901  003A20  FFFF               	dw	65535	; assembler added errata NOP
 14902  003A22  C029  F01F         	movff	___xxtofl@arg,?___xxtofl
 14903  003A26  C02A  F020         	movff	___xxtofl@arg+1,?___xxtofl+1
 14904  003A2A  C02B  F021         	movff	___xxtofl@arg+2,?___xxtofl+2
 14905  003A2E  C02C  F022         	movff	___xxtofl@arg+3,?___xxtofl+3
 14906  003A32                     l1035:
 14907  003A32  FFFF               	dw	65535	; assembler added errata NOP
 14908  003A34  0012               	return		;funcret
 14909  003A36  FFFF               	dw	65535	; errata NOP
 14910  003A38                     __end_of___xxtofl:
 14911                           	callstack 0
 14912                           
 14913 ;; *************** function ___flge *****************
 14914 ;; Defined at:
 14915 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
 14916 ;; Parameters:    Size  Location     Type
 14917 ;;  ff1             4    0[COMRAM] unsigned char 
 14918 ;;  ff2             4    4[COMRAM] unsigned char 
 14919 ;; Auto vars:     Size  Location     Type
 14920 ;;		None
 14921 ;; Return value:  Size  Location     Type
 14922 ;;		None               void
 14923 ;; Registers used:
 14924 ;;		wreg, status,2, status,0
 14925 ;; Tracked objects:
 14926 ;;		On entry : 0/0
 14927 ;;		On exit  : 0/0
 14928 ;;		Unchanged: 0/0
 14929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14930 ;;      Params:         8       0       0       0       0       0       0
 14931 ;;      Locals:         0       0       0       0       0       0       0
 14932 ;;      Temps:          4       0       0       0       0       0       0
 14933 ;;      Totals:        12       0       0       0       0       0       0
 14934 ;;Total ram usage:       12 bytes
 14935 ;; Hardware stack levels used:    1
 14936 ;; Hardware stack levels required when called:    1
 14937 ;; This function calls:
 14938 ;;		Nothing
 14939 ;; This function is called by:
 14940 ;;		_check_temperature
 14941 ;;		_roundf
 14942 ;; This function uses a non-reentrant model
 14943 ;;
 14944                           
 14945                           	psect	text62
 14946  00798A                     __ptext62:
 14947                           	callstack 0
 14948  00798A                     ___flge:
 14949                           	callstack 0
 14950  00798A  FFFF               	dw	65535	; assembler added errata NOP
 14951  00798C  0E00               	movlw	0
 14952  00798E  1401               	andwf	___flge@ff1^0,w,c
 14953  007990  6E09               	movwf	??___flge^0,c
 14954  007992  0E00               	movlw	0
 14955  007994  1402               	andwf	(___flge@ff1+1)^0,w,c
 14956  007996  6E0A               	movwf	(??___flge+1)^0,c
 14957  007998  0E80               	movlw	128
 14958  00799A  1403               	andwf	(___flge@ff1+2)^0,w,c
 14959  00799C  6E0B               	movwf	(??___flge+2)^0,c
 14960  00799E  0E7F               	movlw	127
 14961  0079A0  1404               	andwf	(___flge@ff1+3)^0,w,c
 14962  0079A2  6E0C               	movwf	(??___flge+3)^0,c
 14963  0079A4  5009               	movf	??___flge^0,w,c
 14964  0079A6  100A               	iorwf	(??___flge+1)^0,w,c
 14965  0079A8  100B               	iorwf	(??___flge+2)^0,w,c
 14966  0079AA  100C               	iorwf	(??___flge+3)^0,w,c
 14967  0079AC  A4D8               	btfss	status,2,c
 14968  0079AE  EFDB  F03C         	goto	u6031
 14969  0079B2  EFDE  F03C         	goto	u6030
 14970  0079B6                     u6031:
 14971  0079B6  FFFF               	dw	65535	; assembler added errata NOP
 14972  0079B8  EFE7  F03C         	goto	l4931
 14973  0079BC                     u6030:
 14974  0079BC  FFFF               	dw	65535	; assembler added errata NOP
 14975  0079BE  0E00               	movlw	0
 14976  0079C0  6E01               	movwf	___flge@ff1^0,c
 14977  0079C2  0E00               	movlw	0
 14978  0079C4  6E02               	movwf	(___flge@ff1+1)^0,c
 14979  0079C6  0E00               	movlw	0
 14980  0079C8  6E03               	movwf	(___flge@ff1+2)^0,c
 14981  0079CA  0E00               	movlw	0
 14982  0079CC  6E04               	movwf	(___flge@ff1+3)^0,c
 14983  0079CE                     l4931:
 14984  0079CE  FFFF               	dw	65535	; assembler added errata NOP
 14985  0079D0  0E00               	movlw	0
 14986  0079D2  1405               	andwf	___flge@ff2^0,w,c
 14987  0079D4  6E09               	movwf	??___flge^0,c
 14988  0079D6  0E00               	movlw	0
 14989  0079D8  1406               	andwf	(___flge@ff2+1)^0,w,c
 14990  0079DA  6E0A               	movwf	(??___flge+1)^0,c
 14991  0079DC  0E80               	movlw	128
 14992  0079DE  1407               	andwf	(___flge@ff2+2)^0,w,c
 14993  0079E0  6E0B               	movwf	(??___flge+2)^0,c
 14994  0079E2  0E7F               	movlw	127
 14995  0079E4  1408               	andwf	(___flge@ff2+3)^0,w,c
 14996  0079E6  6E0C               	movwf	(??___flge+3)^0,c
 14997  0079E8  5009               	movf	??___flge^0,w,c
 14998  0079EA  100A               	iorwf	(??___flge+1)^0,w,c
 14999  0079EC  100B               	iorwf	(??___flge+2)^0,w,c
 15000  0079EE  100C               	iorwf	(??___flge+3)^0,w,c
 15001  0079F0  A4D8               	btfss	status,2,c
 15002  0079F2  EFFD  F03C         	goto	u6041
 15003  0079F6  EF00  F03D         	goto	u6040
 15004  0079FA                     u6041:
 15005  0079FA  FFFF               	dw	65535	; assembler added errata NOP
 15006  0079FC  EF09  F03D         	goto	l4935
 15007  007A00                     u6040:
 15008  007A00  FFFF               	dw	65535	; assembler added errata NOP
 15009  007A02  0E00               	movlw	0
 15010  007A04  6E05               	movwf	___flge@ff2^0,c
 15011  007A06  0E00               	movlw	0
 15012  007A08  6E06               	movwf	(___flge@ff2+1)^0,c
 15013  007A0A  0E00               	movlw	0
 15014  007A0C  6E07               	movwf	(___flge@ff2+2)^0,c
 15015  007A0E  0E00               	movlw	0
 15016  007A10  6E08               	movwf	(___flge@ff2+3)^0,c
 15017  007A12                     l4935:
 15018  007A12  FFFF               	dw	65535	; assembler added errata NOP
 15019  007A14  AE04               	btfss	(___flge@ff1+3)^0,7,c
 15020  007A16  EF0F  F03D         	goto	u6051
 15021  007A1A  EF12  F03D         	goto	u6050
 15022  007A1E                     u6051:
 15023  007A1E  FFFF               	dw	65535	; assembler added errata NOP
 15024  007A20  EF1C  F03D         	goto	l4939
 15025  007A24                     u6050:
 15026  007A24  FFFF               	dw	65535	; assembler added errata NOP
 15027  007A26  6C01               	negf	___flge@ff1^0,c
 15028  007A28  1E02               	comf	(___flge@ff1+1)^0,f,c
 15029  007A2A  B0D8               	btfsc	status,0,c
 15030  007A2C  2A02               	incf	(___flge@ff1+1)^0,f,c
 15031  007A2E  1E03               	comf	(___flge@ff1+2)^0,f,c
 15032  007A30  B0D8               	btfsc	status,0,c
 15033  007A32  2A03               	incf	(___flge@ff1+2)^0,f,c
 15034  007A34  0E80               	movlw	128
 15035  007A36  5604               	subfwb	(___flge@ff1+3)^0,f,c
 15036  007A38                     l4939:
 15037  007A38  FFFF               	dw	65535	; assembler added errata NOP
 15038  007A3A  AE08               	btfss	(___flge@ff2+3)^0,7,c
 15039  007A3C  EF22  F03D         	goto	u6061
 15040  007A40  EF25  F03D         	goto	u6060
 15041  007A44                     u6061:
 15042  007A44  FFFF               	dw	65535	; assembler added errata NOP
 15043  007A46  EF2F  F03D         	goto	l642
 15044  007A4A                     u6060:
 15045  007A4A  FFFF               	dw	65535	; assembler added errata NOP
 15046  007A4C  6C05               	negf	___flge@ff2^0,c
 15047  007A4E  1E06               	comf	(___flge@ff2+1)^0,f,c
 15048  007A50  B0D8               	btfsc	status,0,c
 15049  007A52  2A06               	incf	(___flge@ff2+1)^0,f,c
 15050  007A54  1E07               	comf	(___flge@ff2+2)^0,f,c
 15051  007A56  B0D8               	btfsc	status,0,c
 15052  007A58  2A07               	incf	(___flge@ff2+2)^0,f,c
 15053  007A5A  0E80               	movlw	128
 15054  007A5C  5608               	subfwb	(___flge@ff2+3)^0,f,c
 15055  007A5E                     l642:
 15056  007A5E  FFFF               	dw	65535	; assembler added errata NOP
 15057  007A60  0E00               	movlw	0
 15058  007A62  1A01               	xorwf	___flge@ff1^0,f,c
 15059  007A64  0E00               	movlw	0
 15060  007A66  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 15061  007A68  0E00               	movlw	0
 15062  007A6A  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 15063  007A6C  0E80               	movlw	128
 15064  007A6E  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 15065  007A70  0E00               	movlw	0
 15066  007A72  1A05               	xorwf	___flge@ff2^0,f,c
 15067  007A74  0E00               	movlw	0
 15068  007A76  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 15069  007A78  0E00               	movlw	0
 15070  007A7A  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 15071  007A7C  0E80               	movlw	128
 15072  007A7E  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 15073  007A80  5005               	movf	___flge@ff2^0,w,c
 15074  007A82  5C01               	subwf	___flge@ff1^0,w,c
 15075  007A84  5006               	movf	(___flge@ff2+1)^0,w,c
 15076  007A86  5802               	subwfb	(___flge@ff1+1)^0,w,c
 15077  007A88  5007               	movf	(___flge@ff2+2)^0,w,c
 15078  007A8A  5803               	subwfb	(___flge@ff1+2)^0,w,c
 15079  007A8C  5008               	movf	(___flge@ff2+3)^0,w,c
 15080  007A8E  5804               	subwfb	(___flge@ff1+3)^0,w,c
 15081  007A90  B0D8               	btfsc	status,0,c
 15082  007A92  EF4D  F03D         	goto	u6071
 15083  007A96  EF50  F03D         	goto	u6070
 15084  007A9A                     u6071:
 15085  007A9A  FFFF               	dw	65535	; assembler added errata NOP
 15086  007A9C  EF54  F03D         	goto	l4945
 15087  007AA0                     u6070:
 15088  007AA0  FFFF               	dw	65535	; assembler added errata NOP
 15089  007AA2  90D8               	bcf	status,0,c
 15090  007AA4  EF56  F03D         	goto	l647
 15091  007AA8                     l4945:
 15092  007AA8  FFFF               	dw	65535	; assembler added errata NOP
 15093  007AAA  80D8               	bsf	status,0,c
 15094  007AAC                     l647:
 15095  007AAC  FFFF               	dw	65535	; assembler added errata NOP
 15096  007AAE  0012               	return		;funcret
 15097  007AB0  FFFF               	dw	65535	; errata NOP
 15098  007AB2                     __end_of___flge:
 15099                           	callstack 0
 15100                           
 15101 ;; *************** function ___awdiv *****************
 15102 ;; Defined at:
 15103 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
 15104 ;; Parameters:    Size  Location     Type
 15105 ;;  dividend        2   22[COMRAM] int 
 15106 ;;  divisor         2   24[COMRAM] int 
 15107 ;; Auto vars:     Size  Location     Type
 15108 ;;  quotient        2   28[COMRAM] int 
 15109 ;;  sign            1   27[COMRAM] unsigned char 
 15110 ;;  counter         1   26[COMRAM] unsigned char 
 15111 ;; Return value:  Size  Location     Type
 15112 ;;                  2   22[COMRAM] int 
 15113 ;; Registers used:
 15114 ;;		wreg, status,2, status,0
 15115 ;; Tracked objects:
 15116 ;;		On entry : 0/0
 15117 ;;		On exit  : 0/0
 15118 ;;		Unchanged: 0/0
 15119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15120 ;;      Params:         4       0       0       0       0       0       0
 15121 ;;      Locals:         4       0       0       0       0       0       0
 15122 ;;      Temps:          0       0       0       0       0       0       0
 15123 ;;      Totals:         8       0       0       0       0       0       0
 15124 ;;Total ram usage:        8 bytes
 15125 ;; Hardware stack levels used:    1
 15126 ;; Hardware stack levels required when called:    1
 15127 ;; This function calls:
 15128 ;;		Nothing
 15129 ;; This function is called by:
 15130 ;;		_check_temperature
 15131 ;; This function uses a non-reentrant model
 15132 ;;
 15133                           
 15134                           	psect	text63
 15135  00758C                     __ptext63:
 15136                           	callstack 0
 15137  00758C                     ___awdiv:
 15138                           	callstack 0
 15139  00758C  FFFF               	dw	65535	; assembler added errata NOP
 15140  00758E  0E00               	movlw	0
 15141  007590  6E1C               	movwf	___awdiv@sign^0,c
 15142  007592  BE1A               	btfsc	(___awdiv@divisor+1)^0,7,c
 15143  007594  EFD1  F03A         	goto	u6410
 15144  007598  EFCE  F03A         	goto	u6411
 15145  00759C                     u6411:
 15146  00759C  FFFF               	dw	65535	; assembler added errata NOP
 15147  00759E  EFD8  F03A         	goto	l5163
 15148  0075A2                     u6410:
 15149  0075A2  FFFF               	dw	65535	; assembler added errata NOP
 15150  0075A4  6C19               	negf	___awdiv@divisor^0,c
 15151  0075A6  1E1A               	comf	(___awdiv@divisor+1)^0,f,c
 15152  0075A8  B0D8               	btfsc	status,0,c
 15153  0075AA  2A1A               	incf	(___awdiv@divisor+1)^0,f,c
 15154  0075AC  0E01               	movlw	1
 15155  0075AE  6E1C               	movwf	___awdiv@sign^0,c
 15156  0075B0                     l5163:
 15157  0075B0  FFFF               	dw	65535	; assembler added errata NOP
 15158  0075B2  BE18               	btfsc	(___awdiv@dividend+1)^0,7,c
 15159  0075B4  EFE1  F03A         	goto	u6420
 15160  0075B8  EFDE  F03A         	goto	u6421
 15161  0075BC                     u6421:
 15162  0075BC  FFFF               	dw	65535	; assembler added errata NOP
 15163  0075BE  EFE8  F03A         	goto	l5169
 15164  0075C2                     u6420:
 15165  0075C2  FFFF               	dw	65535	; assembler added errata NOP
 15166  0075C4  6C17               	negf	___awdiv@dividend^0,c
 15167  0075C6  1E18               	comf	(___awdiv@dividend+1)^0,f,c
 15168  0075C8  B0D8               	btfsc	status,0,c
 15169  0075CA  2A18               	incf	(___awdiv@dividend+1)^0,f,c
 15170  0075CC  0E01               	movlw	1
 15171  0075CE  1A1C               	xorwf	___awdiv@sign^0,f,c
 15172  0075D0                     l5169:
 15173  0075D0  FFFF               	dw	65535	; assembler added errata NOP
 15174  0075D2  0E00               	movlw	0
 15175  0075D4  6E1E               	movwf	(___awdiv@quotient+1)^0,c
 15176  0075D6  0E00               	movlw	0
 15177  0075D8  6E1D               	movwf	___awdiv@quotient^0,c
 15178  0075DA  5019               	movf	___awdiv@divisor^0,w,c
 15179  0075DC  101A               	iorwf	(___awdiv@divisor+1)^0,w,c
 15180  0075DE  B4D8               	btfsc	status,2,c
 15181  0075E0  EFF4  F03A         	goto	u6431
 15182  0075E4  EFF7  F03A         	goto	u6430
 15183  0075E8                     u6431:
 15184  0075E8  FFFF               	dw	65535	; assembler added errata NOP
 15185  0075EA  EF28  F03B         	goto	l5191
 15186  0075EE                     u6430:
 15187  0075EE  FFFF               	dw	65535	; assembler added errata NOP
 15188  0075F0  0E01               	movlw	1
 15189  0075F2  6E1B               	movwf	___awdiv@counter^0,c
 15190  0075F4  EF01  F03B         	goto	l5177
 15191  0075F8                     l5175:
 15192  0075F8  FFFF               	dw	65535	; assembler added errata NOP
 15193  0075FA  90D8               	bcf	status,0,c
 15194  0075FC  3619               	rlcf	___awdiv@divisor^0,f,c
 15195  0075FE  361A               	rlcf	(___awdiv@divisor+1)^0,f,c
 15196  007600  2A1B               	incf	___awdiv@counter^0,f,c
 15197  007602                     l5177:
 15198  007602  FFFF               	dw	65535	; assembler added errata NOP
 15199  007604  AE1A               	btfss	(___awdiv@divisor+1)^0,7,c
 15200  007606  EF07  F03B         	goto	u6441
 15201  00760A  EF0A  F03B         	goto	u6440
 15202  00760E                     u6441:
 15203  00760E  FFFF               	dw	65535	; assembler added errata NOP
 15204  007610  EFFC  F03A         	goto	l5175
 15205  007614                     u6440:
 15206  007614  FFFF               	dw	65535	; assembler added errata NOP
 15207  007616                     l5179:
 15208  007616  FFFF               	dw	65535	; assembler added errata NOP
 15209  007618  90D8               	bcf	status,0,c
 15210  00761A  361D               	rlcf	___awdiv@quotient^0,f,c
 15211  00761C  361E               	rlcf	(___awdiv@quotient+1)^0,f,c
 15212  00761E  5019               	movf	___awdiv@divisor^0,w,c
 15213  007620  5C17               	subwf	___awdiv@dividend^0,w,c
 15214  007622  501A               	movf	(___awdiv@divisor+1)^0,w,c
 15215  007624  5818               	subwfb	(___awdiv@dividend+1)^0,w,c
 15216  007626  A0D8               	btfss	status,0,c
 15217  007628  EF18  F03B         	goto	u6451
 15218  00762C  EF1B  F03B         	goto	u6450
 15219  007630                     u6451:
 15220  007630  FFFF               	dw	65535	; assembler added errata NOP
 15221  007632  EF21  F03B         	goto	l5187
 15222  007636                     u6450:
 15223  007636  FFFF               	dw	65535	; assembler added errata NOP
 15224  007638  5019               	movf	___awdiv@divisor^0,w,c
 15225  00763A  5E17               	subwf	___awdiv@dividend^0,f,c
 15226  00763C  501A               	movf	(___awdiv@divisor+1)^0,w,c
 15227  00763E  5A18               	subwfb	(___awdiv@dividend+1)^0,f,c
 15228  007640  801D               	bsf	___awdiv@quotient^0,0,c
 15229  007642                     l5187:
 15230  007642  FFFF               	dw	65535	; assembler added errata NOP
 15231  007644  90D8               	bcf	status,0,c
 15232  007646  321A               	rrcf	(___awdiv@divisor+1)^0,f,c
 15233  007648  3219               	rrcf	___awdiv@divisor^0,f,c
 15234  00764A  2E1B               	decfsz	___awdiv@counter^0,f,c
 15235  00764C  EF0B  F03B         	goto	l5179
 15236  007650                     l5191:
 15237  007650  FFFF               	dw	65535	; assembler added errata NOP
 15238  007652  501C               	movf	___awdiv@sign^0,w,c
 15239  007654  B4D8               	btfsc	status,2,c
 15240  007656  EF2F  F03B         	goto	u6461
 15241  00765A  EF32  F03B         	goto	u6460
 15242  00765E                     u6461:
 15243  00765E  FFFF               	dw	65535	; assembler added errata NOP
 15244  007660  EF37  F03B         	goto	l5195
 15245  007664                     u6460:
 15246  007664  FFFF               	dw	65535	; assembler added errata NOP
 15247  007666  6C1D               	negf	___awdiv@quotient^0,c
 15248  007668  1E1E               	comf	(___awdiv@quotient+1)^0,f,c
 15249  00766A  B0D8               	btfsc	status,0,c
 15250  00766C  2A1E               	incf	(___awdiv@quotient+1)^0,f,c
 15251  00766E                     l5195:
 15252  00766E  FFFF               	dw	65535	; assembler added errata NOP
 15253  007670  C01D  F017         	movff	___awdiv@quotient,?___awdiv
 15254  007674  C01E  F018         	movff	___awdiv@quotient+1,?___awdiv+1
 15255  007678  0012               	return		;funcret
 15256  00767A  FFFF               	dw	65535	; errata NOP
 15257  00767C                     __end_of___awdiv:
 15258                           	callstack 0
 15259                           
 15260 ;; *************** function _change_direction *****************
 15261 ;; Defined at:
 15262 ;;		line 40 in file "stepper_motor.c"
 15263 ;; Parameters:    Size  Location     Type
 15264 ;;  stepper_moto    2    0[COMRAM] PTR struct .
 15265 ;;		 -> end_effector_stepper(14), joint_stepper(14), 
 15266 ;; Auto vars:     Size  Location     Type
 15267 ;;		None
 15268 ;; Return value:  Size  Location     Type
 15269 ;;                  1    wreg      void 
 15270 ;; Registers used:
 15271 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15272 ;; Tracked objects:
 15273 ;;		On entry : 0/0
 15274 ;;		On exit  : 0/0
 15275 ;;		Unchanged: 0/0
 15276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15277 ;;      Params:         2       0       0       0       0       0       0
 15278 ;;      Locals:         0       0       0       0       0       0       0
 15279 ;;      Temps:          2       0       0       0       0       0       0
 15280 ;;      Totals:         4       0       0       0       0       0       0
 15281 ;;Total ram usage:        4 bytes
 15282 ;; Hardware stack levels used:    1
 15283 ;; Hardware stack levels required when called:    1
 15284 ;; This function calls:
 15285 ;;		Nothing
 15286 ;; This function is called by:
 15287 ;;		_main
 15288 ;; This function uses a non-reentrant model
 15289 ;;
 15290                           
 15291                           	psect	text64
 15292  0067B4                     __ptext64:
 15293                           	callstack 0
 15294  0067B4                     _change_direction:
 15295                           	callstack 0
 15296  0067B4  FFFF               	dw	65535	; assembler added errata NOP
 15297  0067B6                     
 15298                           ;stepper_motor.c: 41:     stepper_motor -> direction = stepper_motor -> direction*(-1);
 15299  0067B6  EE20 F004          	lfsr	2,4
 15300  0067BA  5001               	movf	change_direction@stepper_motor^0,w,c
 15301  0067BC  26D9               	addwf	fsr2l,f,c
 15302  0067BE  5002               	movf	(change_direction@stepper_motor+1)^0,w,c
 15303  0067C0  22DA               	addwfc	fsr2h,f,c
 15304  0067C2  CFDE F003          	movff	postinc2,??_change_direction
 15305  0067C6  CFDD F004          	movff	postdec2,??_change_direction+1
 15306  0067CA  1E03               	comf	??_change_direction^0,f,c
 15307  0067CC  1E04               	comf	(??_change_direction+1)^0,f,c
 15308  0067CE  4A03               	infsnz	??_change_direction^0,f,c
 15309  0067D0  2A04               	incf	(??_change_direction+1)^0,f,c
 15310  0067D2  EE20 F004          	lfsr	2,4
 15311  0067D6  5001               	movf	change_direction@stepper_motor^0,w,c
 15312  0067D8  26D9               	addwf	fsr2l,f,c
 15313  0067DA  5002               	movf	(change_direction@stepper_motor+1)^0,w,c
 15314  0067DC  22DA               	addwfc	fsr2h,f,c
 15315  0067DE  C003  FFDE         	movff	??_change_direction,postinc2
 15316  0067E2  C004  FFDD         	movff	??_change_direction+1,postdec2
 15317  0067E6  0012               	return		;funcret
 15318  0067E8  FFFF               	dw	65535	; errata NOP
 15319  0067EA                     __end_of_change_direction:
 15320                           	callstack 0
 15321                           
 15322 ;; *************** function _rx_char_usart *****************
 15323 ;; Defined at:
 15324 ;;		line 193 in file "main.c"
 15325 ;; Parameters:    Size  Location     Type
 15326 ;;		None
 15327 ;; Auto vars:     Size  Location     Type
 15328 ;;		None
 15329 ;; Return value:  Size  Location     Type
 15330 ;;                  1    wreg      void 
 15331 ;; Registers used:
 15332 ;;		wreg, status,2
 15333 ;; Tracked objects:
 15334 ;;		On entry : 0/0
 15335 ;;		On exit  : 0/0
 15336 ;;		Unchanged: 0/0
 15337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15338 ;;      Params:         0       0       0       0       0       0       0
 15339 ;;      Locals:         0       0       0       0       0       0       0
 15340 ;;      Temps:          0       0       0       0       0       0       0
 15341 ;;      Totals:         0       0       0       0       0       0       0
 15342 ;;Total ram usage:        0 bytes
 15343 ;; Hardware stack levels used:    1
 15344 ;; This function calls:
 15345 ;;		Nothing
 15346 ;; This function is called by:
 15347 ;;		Interrupt level 2
 15348 ;; This function uses a non-reentrant model
 15349 ;;
 15350                           
 15351                           	psect	intcode
 15352  000008                     __pintcode:
 15353                           	callstack 0
 15354  000008                     _rx_char_usart:
 15355                           	callstack 0
 15356  000008  FFFF               	dw	65535	; assembler added errata NOP
 15357                           
 15358                           ;incstack = 0
 15359  00000A  827F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15360  00000C                     
 15361                           ;main.c: 194:     if(PIE1bits.RCIE && PIR1bits.RCIF){
 15362  00000C  AA9D               	btfss	157,5,c	;volatile
 15363  00000E  EF0B  F000         	goto	i2u707_41
 15364  000012  EF0E  F000         	goto	i2u707_40
 15365  000016                     i2u707_41:
 15366  000016  FFFF               	dw	65535	; assembler added errata NOP
 15367  000018  EF1E  F000         	goto	i2l5639
 15368  00001C                     i2u707_40:
 15369  00001C  FFFF               	dw	65535	; assembler added errata NOP
 15370  00001E  AA9E               	btfss	158,5,c	;volatile
 15371  000020  EF14  F000         	goto	i2u708_41
 15372  000024  EF17  F000         	goto	i2u708_40
 15373  000028                     i2u708_41:
 15374  000028  FFFF               	dw	65535	; assembler added errata NOP
 15375  00002A  EF1E  F000         	goto	i2l5639
 15376  00002E                     i2u708_40:
 15377  00002E  FFFF               	dw	65535	; assembler added errata NOP
 15378  000030                     
 15379                           ;main.c: 195:         PIR1bits.RCIF = 0;
 15380  000030  9A9E               	bcf	158,5,c	;volatile
 15381  000032                     
 15382                           ;main.c: 196:         state_changed = 1;
 15383  000032  0E01               	movlw	1
 15384  000034  0101               	movlb	1	; () banked
 15385  000036  6FB0               	movwf	_state_changed& (0+255),b
 15386                           
 15387                           ;main.c: 197:         read_new_char = 1;
 15388  000038  0E01               	movlw	1
 15389  00003A  6FAE               	movwf	_read_new_char& (0+255),b
 15390  00003C                     i2l5639:
 15391  00003C  FFFF               	dw	65535	; assembler added errata NOP
 15392                           
 15393                           ;main.c: 199:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF){
 15394  00003E  AAF2               	btfss	242,5,c	;volatile
 15395  000040  EF24  F000         	goto	i2u709_41
 15396  000044  EF27  F000         	goto	i2u709_40
 15397  000048                     i2u709_41:
 15398  000048  FFFF               	dw	65535	; assembler added errata NOP
 15399  00004A  EF37  F000         	goto	i2l181
 15400  00004E                     i2u709_40:
 15401  00004E  FFFF               	dw	65535	; assembler added errata NOP
 15402  000050  A4F2               	btfss	242,2,c	;volatile
 15403  000052  EF2D  F000         	goto	i2u710_41
 15404  000056  EF30  F000         	goto	i2u710_40
 15405  00005A                     i2u710_41:
 15406  00005A  FFFF               	dw	65535	; assembler added errata NOP
 15407  00005C  EF37  F000         	goto	i2l181
 15408  000060                     i2u710_40:
 15409  000060  FFFF               	dw	65535	; assembler added errata NOP
 15410  000062                     
 15411                           ;main.c: 200:         T0CON = 0;
 15412  000062  0E00               	movlw	0
 15413  000064  6ED5               	movwf	213,c	;volatile
 15414  000066                     
 15415                           ;main.c: 201:         INTCONbits.TMR0IF = 0;
 15416  000066  94F2               	bcf	242,2,c	;volatile
 15417                           
 15418                           ;main.c: 202:         timer_done = 1;
 15419  000068  0E01               	movlw	1
 15420  00006A  0101               	movlb	1	; () banked
 15421  00006C  6FAD               	movwf	_timer_done& (0+255),b
 15422  00006E                     i2l181:
 15423  00006E  FFFF               	dw	65535	; assembler added errata NOP
 15424  000070  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15425  000072  0011               	retfie		f
 15426  000074  FFFF               	dw	65535	; errata NOP
 15427  000076                     __end_of_rx_char_usart:
 15428                           	callstack 0
 15429                           
 15430                           	psect	rparam
 15431  0000                     
 15432                           	psect	temp
 15433  00007F                     btemp:
 15434                           	callstack 0
 15435  00007F                     	ds	1
 15436  0000                     int$flags	set	btemp
 15437  0000                     wtemp8	set	btemp+1
 15438  0000                     ttemp5	set	btemp+1
 15439  0000                     ttemp6	set	btemp+4
 15440  0000                     ttemp7	set	btemp+8
 15441                           
 15442                           	psect	idloc
 15443                           
 15444                           ;Config register IDLOC0 @ 0x200000
 15445                           ;	unspecified, using default values
 15446  200000                     	org	2097152
 15447  200000  FF                 	db	255
 15448                           
 15449                           ;Config register IDLOC1 @ 0x200001
 15450                           ;	unspecified, using default values
 15451  200001                     	org	2097153
 15452  200001  FF                 	db	255
 15453                           
 15454                           ;Config register IDLOC2 @ 0x200002
 15455                           ;	unspecified, using default values
 15456  200002                     	org	2097154
 15457  200002  FF                 	db	255
 15458                           
 15459                           ;Config register IDLOC3 @ 0x200003
 15460                           ;	unspecified, using default values
 15461  200003                     	org	2097155
 15462  200003  FF                 	db	255
 15463                           
 15464                           ;Config register IDLOC4 @ 0x200004
 15465                           ;	unspecified, using default values
 15466  200004                     	org	2097156
 15467  200004  FF                 	db	255
 15468                           
 15469                           ;Config register IDLOC5 @ 0x200005
 15470                           ;	unspecified, using default values
 15471  200005                     	org	2097157
 15472  200005  FF                 	db	255
 15473                           
 15474                           ;Config register IDLOC6 @ 0x200006
 15475                           ;	unspecified, using default values
 15476  200006                     	org	2097158
 15477  200006  FF                 	db	255
 15478                           
 15479                           ;Config register IDLOC7 @ 0x200007
 15480                           ;	unspecified, using default values
 15481  200007                     	org	2097159
 15482  200007  FF                 	db	255
 15483                           
 15484                           	psect	config
 15485                           
 15486                           ; Padding undefined space
 15487  300000                     	org	3145728
 15488  300000  FF                 	db	255
 15489                           
 15490                           ;Config register CONFIG1H @ 0x300001
 15491                           ;	Oscillator Selection bits
 15492                           ;	OSC = RCIO, RC oscillator w/ OSC2 configured as RA6
 15493                           ;	Oscillator System Clock Switch Enable bit
 15494                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
 15495  300001                     	org	3145729
 15496  300001  27                 	db	39
 15497                           
 15498                           ;Config register CONFIG2L @ 0x300002
 15499                           ;	Power-up Timer Enable bit
 15500                           ;	PWRT = OFF, PWRT disabled
 15501                           ;	Brown-out Reset Enable bit
 15502                           ;	BOR = ON, Brown-out Reset enabled
 15503                           ;	Brown-out Reset Voltage bits
 15504                           ;	BORV = 20, VBOR set to 2.0V
 15505  300002                     	org	3145730
 15506  300002  0F                 	db	15
 15507                           
 15508                           ;Config register CONFIG2H @ 0x300003
 15509                           ;	Watchdog Timer Enable bit
 15510                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 15511                           ;	Watchdog Timer Postscale Select bits
 15512                           ;	WDTPS = 128, 1:128
 15513  300003                     	org	3145731
 15514  300003  0E                 	db	14
 15515                           
 15516                           ; Padding undefined space
 15517  300004                     	org	3145732
 15518  300004  FF                 	db	255
 15519                           
 15520                           ;Config register CONFIG3H @ 0x300005
 15521                           ;	CCP2 Mux bit
 15522                           ;	CCP2MUX = ON, CCP2 input/output is multiplexed with RC1
 15523  300005                     	org	3145733
 15524  300005  01                 	db	1
 15525                           
 15526                           ;Config register CONFIG4L @ 0x300006
 15527                           ;	Stack Full/Underflow Reset Enable bit
 15528                           ;	STVR = ON, Stack Full/Underflow will cause RESET
 15529                           ;	Low Voltage ICSP Enable bit
 15530                           ;	LVP = ON, Low Voltage ICSP enabled
 15531                           ;	Background Debugger Enable bit
 15532                           ;	DEBUG = 0x1, unprogrammed default
 15533  300006                     	org	3145734
 15534  300006  85                 	db	133
 15535                           
 15536                           ; Padding undefined space
 15537  300007                     	org	3145735
 15538  300007  FF                 	db	255
 15539                           
 15540                           ;Config register CONFIG5L @ 0x300008
 15541                           ;	Code Protection bit
 15542                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
 15543                           ;	Code Protection bit
 15544                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
 15545                           ;	Code Protection bit
 15546                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
 15547                           ;	Code Protection bit
 15548                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
 15549  300008                     	org	3145736
 15550  300008  0F                 	db	15
 15551                           
 15552                           ;Config register CONFIG5H @ 0x300009
 15553                           ;	Boot Block Code Protection bit
 15554                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
 15555                           ;	Data EEPROM Code Protection bit
 15556                           ;	CPD = OFF, Data EEPROM not code protected
 15557  300009                     	org	3145737
 15558  300009  C0                 	db	192
 15559                           
 15560                           ;Config register CONFIG6L @ 0x30000A
 15561                           ;	Write Protection bit
 15562                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
 15563                           ;	Write Protection bit
 15564                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
 15565                           ;	Write Protection bit
 15566                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
 15567                           ;	Write Protection bit
 15568                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
 15569  30000A                     	org	3145738
 15570  30000A  0F                 	db	15
 15571                           
 15572                           ;Config register CONFIG6H @ 0x30000B
 15573                           ;	Configuration Register Write Protection bit
 15574                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
 15575                           ;	Boot Block Write Protection bit
 15576                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
 15577                           ;	Data EEPROM Write Protection bit
 15578                           ;	WRTD = OFF, Data EEPROM not write protected
 15579  30000B                     	org	3145739
 15580  30000B  E0                 	db	224
 15581                           
 15582                           ;Config register CONFIG7L @ 0x30000C
 15583                           ;	Table Read Protection bit
 15584                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
 15585                           ;	Table Read Protection bit
 15586                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
 15587                           ;	Table Read Protection bit
 15588                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
 15589                           ;	Table Read Protection bit
 15590                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
 15591  30000C                     	org	3145740
 15592  30000C  0F                 	db	15
 15593                           
 15594                           ;Config register CONFIG7H @ 0x30000D
 15595                           ;	Boot Block Table Read Protection bit
 15596                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
 15597  30000D                     	org	3145741
 15598  30000D  40                 	db	64
 15599                           tosu	equ	0xFFF
 15600                           tosh	equ	0xFFE
 15601                           tosl	equ	0xFFD
 15602                           stkptr	equ	0xFFC
 15603                           pclatu	equ	0xFFB
 15604                           pclath	equ	0xFFA
 15605                           pcl	equ	0xFF9
 15606                           tblptru	equ	0xFF8
 15607                           tblptrh	equ	0xFF7
 15608                           tblptrl	equ	0xFF6
 15609                           tablat	equ	0xFF5
 15610                           prodh	equ	0xFF4
 15611                           prodl	equ	0xFF3
 15612                           indf0	equ	0xFEF
 15613                           postinc0	equ	0xFEE
 15614                           postdec0	equ	0xFED
 15615                           preinc0	equ	0xFEC
 15616                           plusw0	equ	0xFEB
 15617                           fsr0h	equ	0xFEA
 15618                           fsr0l	equ	0xFE9
 15619                           wreg	equ	0xFE8
 15620                           indf1	equ	0xFE7
 15621                           postinc1	equ	0xFE6
 15622                           postdec1	equ	0xFE5
 15623                           preinc1	equ	0xFE4
 15624                           plusw1	equ	0xFE3
 15625                           fsr1h	equ	0xFE2
 15626                           fsr1l	equ	0xFE1
 15627                           bsr	equ	0xFE0
 15628                           indf2	equ	0xFDF
 15629                           postinc2	equ	0xFDE
 15630                           postdec2	equ	0xFDD
 15631                           preinc2	equ	0xFDC
 15632                           plusw2	equ	0xFDB
 15633                           fsr2h	equ	0xFDA
 15634                           fsr2l	equ	0xFD9
 15635                           status	equ	0xFD8

Data Sizes:
    Strings     310
    Constant    20
    Data        51
    BSS         100
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    126     126
    BANK0           128     38     113
    BANK1           256    163     239
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    main$2129	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[9]), 
		 -> STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), STR_1(CODE[49]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_107(CODE[3]), STR_103(CODE[3]), STR_98(CODE[3]), STR_94(CODE[3]), 
		 -> STR_89(CODE[4]), STR_85(CODE[4]), STR_80(CODE[3]), STR_75(CODE[3]), 
		 -> STR_70(CODE[4]), STR_65(CODE[3]), STR_60(CODE[3]), STR_55(CODE[4]), 
		 -> STR_50(CODE[3]), STR_45(CODE[3]), STR_40(CODE[4]), STR_35(CODE[3]), 
		 -> STR_31(CODE[3]), STR_26(CODE[3]), STR_22(CODE[3]), STR_17(CODE[4]), 
		 -> STR_13(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_107(CODE[3]), STR_103(CODE[3]), STR_98(CODE[3]), STR_94(CODE[3]), 
		 -> STR_89(CODE[4]), STR_85(CODE[4]), STR_80(CODE[3]), STR_75(CODE[3]), 
		 -> STR_70(CODE[4]), STR_65(CODE[3]), STR_60(CODE[3]), STR_55(CODE[4]), 
		 -> STR_50(CODE[3]), STR_45(CODE[3]), STR_40(CODE[4]), STR_35(CODE[3]), 
		 -> STR_31(CODE[3]), STR_26(CODE[3]), STR_22(CODE[3]), STR_17(CODE[4]), 
		 -> STR_13(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), ?_snprintf(BANK0[2]), STR_8(CODE[50]), 
		 -> STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[39]), 
		 -> STR_3(CODE[9]), STR_2(CODE[64]), STR_1(CODE[49]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), ?_snprintf(BANK0[2]), STR_8(CODE[50]), 
		 -> STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[39]), 
		 -> STR_3(CODE[9]), STR_2(CODE[64]), STR_1(CODE[49]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), 
		 -> STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), 
		 -> STR_1(CODE[49]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), 
		 -> STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), 
		 -> STR_1(CODE[49]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), 
		 -> STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), 
		 -> STR_1(CODE[49]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_snprintf(BANK0[2]), STR_8(CODE[50]), STR_7(CODE[9]), 
		 -> STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), 
		 -> STR_2(CODE[64]), STR_1(CODE[49]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    S1525_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    change_direction@stepper_motor	PTR struct . size(2) Largest target is 14
		 -> end_effector_stepper(BANK1[14]), joint_stepper(BANK1[14]), 

    reach_goal@stepper_motor	PTR struct . size(2) Largest target is 14
		 -> end_effector_stepper(BANK1[14]), joint_stepper(BANK1[14]), 

    update_current_coil@stepper_motor	PTR struct . size(2) Largest target is 14
		 -> end_effector_stepper(BANK1[14]), joint_stepper(BANK1[14]), 

    turn_on_current_coil@stepper_motor	PTR struct . size(2) Largest target is 14
		 -> end_effector_stepper(BANK1[14]), joint_stepper(BANK1[14]), 

    init_stepper@hex_coil_register_values	PTR int  size(2) Largest target is 8
		 -> hex_end_effector_values(BANK1[8]), hex_joint_values(BANK1[8]), 

    init_stepper@stepper_motor	PTR struct . size(2) Largest target is 14
		 -> end_effector_stepper(BANK1[14]), joint_stepper(BANK1[14]), 

    state_translator_micro_to_fpga@state	PTR int  size(2) Largest target is 2
		 -> state(BANK1[2]), 

    state_translator_fpga_to_micro@state	PTR int  size(2) Largest target is 2
		 -> state(BANK1[2]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), STR_9(CODE[22]), 

    main@greet_str	PTR const unsigned char [80] size(2) Largest target is 64
		 -> ?_snprintf(BANK0[2]), STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), 
		 -> STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), 
		 -> STR_1(CODE[49]), 

    state_msgs	PTR const unsigned char [8] size(2) Largest target is 64
		 -> STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[9]), 
		 -> STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), STR_1(CODE[49]), 


Critical Paths under _main in COMRAM

    _state_translator_fpga_to_micro->_lcd_dat
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _reach_goal->_turn_on_current_coil
    _reach_goal->_update_current_coil
    _lcd_str->_lcd_dat
    _lcd_dat->_lcd_wr
    _lcd_init->_lcd_cmd
    _lcd_cmd->_lcd_wr
    ___fldiv->___flmul
    _init_USART->_roundf
    _roundf->___flsub
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flmul->___xxtofl
    ___fltol->_roundf
    _abs->___aomod
    ___xxtofl->___awdiv
    ___awdiv->_abs

Critical Paths under _rx_char_usart in COMRAM

    None.

Critical Paths under _main in BANK0

    _wait_for_zero->_get_temperature
    _get_temperature->___fltol
    _snprintf->_vsnprintf
    _init_timer_2->___fltol
    _init_ccp1->_update_pwm_duty_ccp1
    _update_pwm_duty_ccp1->___fltol
    _init_USART->___fltol
    ___fltol->_roundf
    _check_temperature->_get_temperature

Critical Paths under _rx_char_usart in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rx_char_usart in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rx_char_usart in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rx_char_usart in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _rx_char_usart in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _rx_char_usart in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               164   164      0   84957
                                             37 BANK0      1     1      0
                                              0 BANK1    163   163      0
                             ___wmul
                   _change_direction
                  _check_temperature
_configure_analog_digital_conversion
                      _get_reg_value
                    _get_temperature
                         _init_PORTS
                         _init_USART
                          _init_ccp1
                    _init_interrupts
                       _init_stepper
                       _init_timer_0
                       _init_timer_2
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                         _reach_goal
                     _serial_tx_char
                           _snprintf
     _state_translator_fpga_to_micro
     _state_translator_micro_to_fpga
                      _wait_for_zero
 ---------------------------------------------------------------------------------
 (1) _wait_for_zero                                        0     0      0    3359
                    _get_temperature
 ---------------------------------------------------------------------------------
 (2) _get_temperature                                      2     0      2    3359
                                             28 BANK0      2     0      2
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _state_translator_micro_to_fpga                       5     3      2     145
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _state_translator_fpga_to_micro                       3     1      2     384
                                              2 COMRAM     3     1      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            12     4      8   46693
                                             10 BANK0     12     4      8
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (2) _vsnprintf                                           22    14      8   46319
                                            111 COMRAM    12     4      8
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   45556
                                            103 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   45095
                                             66 COMRAM    37    31      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    7075
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    6115
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    5013
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    5560
                                             27 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6790
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    4829
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4609
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    2168
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1175
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _serial_tx_char                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _reach_goal                                           7     3      4    1264
                                              6 COMRAM     7     3      4
               _turn_on_current_coil
                _update_current_coil
 ---------------------------------------------------------------------------------
 (2) _update_current_coil                                  6     4      2     274
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _turn_on_current_coil                                 6     4      2     120
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              5     3      2     286
                                              2 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              1     1      0      44
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0      44
                                              2 COMRAM     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0      44
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_timer_2                                         4     4      0    7937
                                             28 BANK0      4     4      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _init_timer_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_stepper                                        16     6     10    1406
                                              0 COMRAM    16     6     10
 ---------------------------------------------------------------------------------
 (1) _init_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ccp1                                            0     0      0    4602
               _update_pwm_duty_ccp1
 ---------------------------------------------------------------------------------
 (2) _update_pwm_duty_ccp1                                 9     5      4    4602
                                             28 BANK0      9     5      4
                            ___fldiv
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1551
                                             69 COMRAM    25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_USART                                           0     0      0   11790
                            ___fltol
                             _roundf
 ---------------------------------------------------------------------------------
 (2) _roundf                                              26    22      4   11257
                                            118 COMRAM     8     4      4
                                              0 BANK0     18    18      0
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3801
                                            110 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    3478
                                             94 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2352
                                             44 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     533
                                             18 BANK0     10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_PORTS                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_reg_value                                        1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _configure_analog_digital_conversion                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_temperature                                    6     4      2    2077
                                             30 BANK0      6     4      2
                            ___awdiv
                             ___flge
                           ___xxtofl
                                _abs
                    _get_temperature (ARG)
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     218
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     474
                                             30 COMRAM    14    10      4
                            ___awdiv (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     790
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                             22 COMRAM     8     4      4
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (1) _change_direction                                     4     2      2     272
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _rx_char_usart                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul
   _change_direction
   _check_temperature
     ___awdiv
       _abs (ARG)
         ___aomod (ARG)
     ___flge
     ___xxtofl
       ___awdiv (ARG)
         _abs (ARG)
           ___aomod (ARG)
       _abs (ARG)
         ___aomod (ARG)
     _abs
       ___aomod (ARG)
     _get_temperature (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _roundf (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flge
           ___flmul
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       _abs (ARG)
                         ___aomod (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
       ___xxtofl
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
   _configure_analog_digital_conversion
   _get_reg_value
   _get_temperature
     ___flmul
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
       _roundf (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flge
         ___flmul
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
     ___xxtofl
       ___awdiv (ARG)
         _abs (ARG)
           ___aomod (ARG)
       _abs (ARG)
         ___aomod (ARG)
   _init_PORTS
   _init_USART
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
       _roundf (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flge
         ___flmul
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
     _roundf
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flge
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___flneg
       ___flsub
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
   _init_ccp1
     _update_pwm_duty_ccp1
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _roundf (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flge
           ___flmul
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       _abs (ARG)
                         ___aomod (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
   _init_interrupts
   _init_stepper
   _init_timer_0
   _init_timer_2
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
     ___fldiv
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
     ___flmul
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
       _roundf (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flge
         ___flmul
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
   _lcd_cmd
     _lcd_wr
   _lcd_init
     _lcd_cmd
       _lcd_wr
   _lcd_str
     _lcd_dat
       _lcd_wr
   _reach_goal
     _turn_on_current_coil
     _update_current_coil
   _serial_tx_char
   _snprintf
     _vsnprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _state_translator_fpga_to_micro
     _lcd_dat
       _lcd_wr
   _state_translator_micro_to_fpga
   _wait_for_zero
     _get_temperature
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _roundf (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flge
           ___flmul
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       _abs (ARG)
                         ___aomod (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
       ___xxtofl
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)

 _rx_char_usart (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     A3      EF       7       93.4%
BITBANK0            80      0       0       4        0.0%
BANK0               80     26      71       5       88.3%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7E      7E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1DE      15        0.0%
DATA                 0      0     1DE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Jun 11 23:23:29 2023

                                           ?_get_reg_value 0001  
                                          ??_wait_for_zero 007F  
                                             ___fldiv@aexp 005E  
                                             ___fldiv@bexp 005D  
                                             ___fldiv@sign 0056  
                                                       l21 68A6  
                                                       l24 6608  
                                                       l27 661C  
                                                       l36 65E8  
                                             ___awdiv@sign 001C  
                                      ___wmul@multiplicand 0003  
                                                      l211 65CC  
                                                      l300 6682  
                                                      l220 65D8  
                                                      l223 66FC  
                                                      l143 169A  
                                                      l208 677C  
                                                      l137 1660  
                                                      l314 6F8E  
                                                      l226 6726  
                                                      l250 7772  
                                                      l331 67E6  
                                                      l307 7052  
                                                      l235 6EDE  
                                                      l323 71F8  
                                                      l148 1734  
                                                      l229 6E56  
                                                      l317 6822  
                                                      l254 6BB0  
                                                      l327 6DD6  
                                                      l504 7EB0  
                                                      l257 6BB4  
                                                      l169 1B02  
                                                      l362 3FFC  
                                                      l356 66AA  
                                                      l373 72D4  
                                                      l365 66B0  
                                                      l294 665E  
                                                      l359 3F92  
                                                      l608 7678  
                                                      l297 7120  
                                                      l377 6750  
                                                      l369 66D2  
                                                      l642 7A5E  
                                                      l651 6864  
                                                      l491 3F8A  
                                                      l822 7986  
                                                      l647 7AAC  
                                                      l815 7964  
                                                      l832 7588  
                                                      l905 1D6A  
                                                      l825 7566  
                                                      l674 7BE4  
                                                      l922 1EAE  
                                                      l914 20C4  
                                                      l906 1D54  
                                                      l931 1FB2  
                                                      l907 1D0A  
                                                      l932 1F9A  
                                                      l961 27B2  
                                                      l970 2808  
                                                      l947 69FC  
                                                      l972 2898  
                                                      l964 276C  
                                                      l973 2880  
                                                      l991 21B6  
                                                      l959 299A  
                                                      l995 2568  
                                                      l998 23C2  
                                        ??_init_interrupts 0001  
                                                      _PR2 000FCB  
                                                      _abs 6A00  
                                                      _pad 73BC  
                                                      wreg 000FE8  
                                           ?_rx_char_usart 0001  
                                             ___flmul@aexp 003E  
                                             ___flmul@bexp 003F  
                                             ___flmul@sign 0039  
                                             ___flmul@temp 0044  
                                             ___flmul@prod 0040  
                                             ___fltol@exp1 00D3  
                                                     l1000 2452  
                                                     l1001 243A  
                                                     l1032 38A0  
                                                     l1008 2520  
                                                     l1035 3A32  
                                                     l1131 7410  
                                                     l1203 3BAA  
                                                     ?_abs 0013  
                                                     l1052 6A3C  
                                                     l1204 3BFE  
                                                     l1213 3432  
                                                     l1046 39B8  
                                                     l1134 745C  
                                                     l1230 310C  
                                                     l1039 394C  
                                                     l1055 6A46  
                                                     l1063 2D84  
                                                     l1143 6C1A  
                                                     l1151 2E4C  
                                                     l1223 3616  
                                                     l1215 343C  
                                                     l1136 749E  
                                                     l1208 3C08  
                                                     l1090 7CF8  
                                                     l1251 337E  
                                                     l1228 3102  
                                                     PORTD 000F83  
                                                     l1149 2E42  
                                                     l1253 33EA  
                                                     l1237 31B0  
                                                     l1085 7D1E  
                                                     l1077 67B0  
                                                     PORTE 000F84  
                                                     l1406 73B6  
                                                     l1414 6A98  
                                                     l1174 365E  
                                                     l1334 6D58  
                                                     l1423 6AF4  
                                                     l1183 37CA  
                                                     l1335 6D60  
                                                     l1176 3668  
                                                     l1192 3AC8  
                                                     l1417 65C0  
                                                     l1169 30BA  
                                                     l1185 383C  
                                                     l4001 3152  
                                                     l1194 3AD2  
                                                     l1442 6CEE  
                                                     l1290 145C  
                                                     l1363 3DCA  
                                                     l1427 787A  
                                                     l1371 69B2  
                                                     l4011 3192  
                                                     l4003 315A  
                                                     l1267 0198  
                                                     l1437 6CE4  
                                                     l4013 31A2  
                                                     l4005 3162  
                                                     l1366 3DD4  
                                                     l4111 7820  
                                                     l4103 77B4  
                                                     l1391 692A  
                                                     l4031 3284  
                                                     l4023 3242  
                                                     l4007 316A  
                                                     l1448 696C  
                                                     l5001 3844  
                                                     l4201 1CF2  
                                                     l4121 1B42  
                                                     l1377 68E8  
                                                     l1385 6B54  
                                                     l4113 7850  
                                                     l4105 77C4  
                                                     l4041 334E  
                                                     l4033 328A  
                                                     l4025 3258  
                                                     l4017 31EC  
                                                     l4009 3172  
                                                     l5003 3858  
                                                     l4211 1D44  
                                                     l4203 1D02  
                                                     l4131 1B82  
                                                     l4123 1B44  
                                                     l4107 77E8  
                                                     l4051 33C0  
                                                     l4043 336C  
                                                     l4019 3202  
                                                     l4027 326C  
                                                     l4035 32EC  
                                                     l5021 3936  
                                                     l5013 38E2  
                                                     l5005 386A  
                                                     l4301 2074  
                                                     l4213 1D46  
                                                     l4205 1D1E  
                                                     l4141 1BBC  
                                                     l4125 1B5A  
                                                     l4133 1B8A  
                                                     l4117 1B24  
                                                     l5101 66FA  
                                                     l4061 3C2E  
                                                     l4109 780A  
                                                     l4045 3394  
                                                     l4037 330E  
                                                     l4029 327E  
                                                     l5031 39CC  
                                                     l5023 3942  
                                                     l5015 38EC  
                                                     l5007 38B2  
                                                     l4311 209E  
                                                     l4303 2078  
                                                     l4231 1DE8  
                                                     l4223 1DA6  
                                                     l4215 1D52  
                                                     l4207 1D2A  
                                                     l4151 1C02  
                                                     l4143 1BC4  
                                                     l4135 1B9C  
                                                     l4127 1B6E  
                                                     l4119 1B30  
                                                     l5111 6706  
                                                     l4071 3C98  
                                                     l4063 3C50  
                                                     l4055 3C0E  
                                                     l4047 339A  
                                                     l4039 3330  
                                                     l5103 3F90  
                                                     l5041 3A1E  
                                                     l5033 39CE  
                                                     l5025 3984  
                                                     l5017 38FA  
                                                     l5009 38CE  
                                                     l4313 20B0  
                                                     l4305 208C  
                                                     l4233 1DEE  
                                                     l4225 1DB8  
                                                     l4217 1D7E  
                                                     l4241 1E16  
                                                     l4209 1D30  
                                                     l4161 1C48  
                                                     l4153 1C12  
                                                     l4145 1BD6  
                                                     l4137 1BA4  
                                                     l4129 1B7E  
                                                     l5121 6724  
                                                     l5113 670C  
                                                     l4073 3CB2  
                                                     l4065 3C8C  
                                                     l4057 3C22  
                                                     l4049 33AA  
                                                     l4401 0462  
                                                     l4321 00A6  
                                                     l5201 7C02  
                                                     l5105 3FA6  
                                                     l5043 3A20  
                                                     l5035 39D4  
                                                     l5027 3992  
                                                     l5019 3932  
                                                     l3603 6A02  
                                                     l4315 20B2  
                                                     l4307 2092  
                                                     l4243 1E42  
                                                     l4251 1E9C  
                                                     l4235 1E02  
                                                     l4227 1DCA  
                                                     l4219 1D92  
                                                     l4171 1C6C  
                                                     l4163 1C5A  
                                                     l4155 1C16  
                                                     l4147 1BD8  
                                                     l4139 1BBA  
                                                     l5131 7016  
                                                     l5123 6F94  
                                                     l5115 670E  
                                                     l4091 3DAE  
                                                     l4083 3D3A  
                                                     l4075 3CBC  
                                                     l4067 3C90  
                                                     l4059 3C28  
                                                     l4411 053C  
                                                     l4331 00DC  
                                                     l4323 00B4  
                                                     l5051 6D0C  
                                                     l5211 7C46  
                                                     l5203 7C0C  
                                                     l5037 39F8  
                                                     l5029 39A6  
                                                     l3605 6A20  
                                                     l5301 669A  
                                                     l4309 2096  
                                                     l4261 1EFE  
                                                     l4253 1ECA  
                                                     l4245 1E76  
                                                     l4237 1E04  
                                                     l4229 1DDC  
                                                     l4181 1C80  
                                                     l4173 1C70  
                                                     l4165 1C5E  
                                                     l4149 1BEE  
                                                     l4157 1C1E  
                                                     l5061 2A28  
                                                     l5133 701A  
                                                     l5125 6FF8  
                                                     l5117 6718  
                                                     l5109 6704  
                                                     l5141 67EC  
                                                     l4077 3CC6  
                                                     l3621 3E16  
                                                     l3613 3DDC  
                                                     l3701 78CE  
                                                     l4501 0B9E  
                                                     l4405 047E  
                                                     l4341 0104  
                                                     l4333 00F0  
                                                     l4325 00C6  
                                                     l5053 6D34  
                                                     l5221 7CB6  
                                                     l5213 7C52  
                                                     l5039 3A0C  
                                                     l5303 669C  
                                                     l4271 1F34  
                                                     l4263 1F10  
                                                     l4255 1EDE  
                                                     l4247 1E78  
                                                     l4239 1E10  
                                                     l4191 1C94  
                                                     l4183 1C84  
                                                     l4175 1C74  
                                                     l4167 1C64  
                                                     l4159 1C30  
                                                     l5071 2AEE  
                                                     l5063 2A6E  
                                                     l5055 29A2  
                                                     l5231 686A  
                                                     l5135 702E  
                                                     l5127 6FFC  
                                                     l5311 6EEC  
                                                     l5119 671A  
                                                     l5151 71E8  
                                                     l3607 672C  
                                                     l4087 3D82  
                                                     l4079 3D00  
                                                     l3631 3E7E  
                                                     l3623 3E2A  
                                                     l3615 3DE0  
                                                     l3711 794A  
                                                     l3703 78E2  
                                                     l4511 0C44  
                                                     l4415 0576  
                                                     l4407 04BA  
                                                     l4327 00CA  
                                                     l4319 007C  
                                                     l5047 6CF6  
                                                     l5223 7CE8  
                                                     l5215 7C66  
                                                     l5207 7C14  
                                                     l5161 75AC  
                                                     l5401 7284  
                                                     l4281 1F76  
                                                     l4273 1F4A  
                                                     l4265 1F12  
                                                     l4249 1E8C  
                                                     l4193 1C98  
                                                     l4185 1C88  
                                                     l4177 1C78  
                                                     l4169 1C68  
                                                     l5081 2D08  
                                                     l5073 2BC2  
                                                     l5065 2A92  
                                                     l5057 29C2  
                                                     l5241 68A0  
                                                     l5233 6898  
                                                     l5137 7034  
                                                     l5129 7010  
                                                     l5321 6F7A  
                                                     l5313 6F32  
                                                     l5305 6EE4  
                                                     l5145 7126  
                                                     l3609 6748  
                                                     l4089 3D98  
                                                     l3641 3EF6  
                                                     l3633 3E86  
                                                     l3625 3E4A  
                                                     l3617 3DF2  
                                                     l3801 2D8C  
                                                     l4097 777A  
                                                     l3713 795E  
                                                     l3705 78F6  
                                                     l3721 74E4  
                                                     l4601 1284  
                                                     l4521 0CEC  
                                                     l4425 063A  
                                                     l4417 05B2  
                                                     l4409 04F2  
                                                     l4361 01DA  
                                                     l4353 0126  
                                                     l4345 010E  
                                                     l4337 00FA  
                                                     l4329 00D6  
                                                     l5049 6CFE  
                                                     l5225 7D02  
                                                     l5217 7C8C  
                                                     l5209 7C38  
                                                     l5171 75DA  
                                                     l5163 75B0  
                                                     l5155 758E  
                                                     l5403 72BA  
                                                     l5251 65DE  
                                                     l4291 1FE6  
                                                     l4283 1F90  
                                                     l4267 1F26  
                                                     l4259 1EF2  
                                                     l4275 1F4C  
                                                     l4187 1C8C  
                                                     l4179 1C7C  
                                                     l4195 1C9C  
                                                     l5083 2D4E  
                                                     l5075 2C2E  
                                                     l5067 2AB6  
                                                     l5059 2A14  
                                                     l5243 68A2  
                                                     l5235 689A  
                                                     l5139 7038  
                                                     l5315 6F36  
                                                     l5091 66DC  
                                                     l5331 6E08  
                                                     l5323 6DDE  
                                                     l5147 71B2  
                                                     l3571 7306  
                                                     l3731 73BE  
                                                     l3651 3F48  
                                                     l3643 3F16  
                                                     l3635 3E9C  
                                                     l3627 3E4E  
                                                     l3619 3E12  
                                                     l3811 2E16  
                                                     l3803 2DAC  
                                                     l4099 77A8  
                                                     l3707 7928  
                                                     l3723 74F8  
                                                     l3715 74A4  
                                                     l4611 1338  
                                                     l4507 0BD0  
                                                     l4435 06DC  
                                                     l4427 0666  
                                                     l4419 05EA  
                                                     l4371 0262  
                                                     l4363 0210  
                                                     l4355 0180  
                                                     l5219 7CA2  
                                                     l5227 7D14  
                                                     l5181 761E  
                                                     l5173 75F0  
                                                     l5165 75C4  
                                                     l5157 7592  
                                                     l5253 65E2  
                                                     l5261 6778  
                                                     l4293 2024  
                                                     l4269 1F2E  
                                                     l4277 1F5E  
                                                     l4197 1CA2  
                                                     l4189 1C90  
                                                     l5085 2D72  
                                                     l5077 2C66  
                                                     l5245 68A4  
                                                     l5237 689C  
                                                     l5317 6F56  
                                                     l5421 6650  
                                                     l5093 66E2  
                                                     l5341 6E44  
                                                     l5333 6E20  
                                                     l5325 6DEE  
                                                     l5149 71C6  
                                                     l3573 7312  
                                                     l3581 6A4E  
                                                     l3741 741E  
                                                     l3733 73D2  
                                                     l3653 3F68  
                                                     l3645 3F18  
                                                     l3637 3EB0  
                                                     l3629 3E5C  
                                                     l3661 7D3C  
                                                     l3821 2E84  
                                                     l3813 2E36  
                                                     l3805 2DDE  
                                                     l3901 37F6  
                                                     l3709 7948  
                                                     l3725 752C  
                                                     l3717 74C6  
                                                     l4613 1362  
                                                     l4621 13B2  
                                                     l4541 0E66  
                                                     l4533 0DAA  
                                                     l4525 0D28  
                                                     l4509 0C0C  
                                                     l4517 0C76  
                                                     l4461 08EA  
                                                     l4453 085E  
                                                     l4445 07A2  
                                                     l4437 0718  
                                                     l4429 068E  
                                                     l4381 02FC  
                                                     l4365 0222  
                                                     l4357 01AC  
                                                     l4349 0118  
                                                     l5413 66B2  
                                                     l5501 1536  
                                                     ?_pad 0011  
                                                     l5183 7638  
                                                     l5175 75F8  
                                                     l5191 7650  
                                                     l5167 75CC  
                                                     l5159 75A4  
                                                     l5263 677A  
                                                     l4287 1FC8  
                                                     l4295 2026  
                                                     l4279 1F64  
                                                     l4199 1CD0  
                                                     l5079 2CD2  
                                                     l5239 689E  
                                                     l4711 26DA  
                                                     l4703 26B0  
                                                     l5319 6F66  
                                                     l5431 665A  
                                                     l5423 6652  
                                                     l5271 7062  
                                                     l5095 66E4  
                                                     l5343 6E4A  
                                                     l5335 6E32  
                                                     l5327 6E00  
                                                     l5351 6E98  
                                                     l3575 7336  
                                                     l3567 72DC  
                                                     l3583 6A5A  
                                                     l3591 6AAA  
                                                     l3743 7434  
                                                     l3735 73E6  
                                                     l3647 3F2C  
                                                     l3639 3EC4  
                                                     l3671 7DB8  
                                                     l3663 7D5C  
                                                     l3831 2F26  
                                                     l3823 2E8E  
                                                     l3815 2E56  
                                                     l3807 2DFE  
                                                     l3903 37FC  
                                                     l3911 3A3A  
                                                     l3727 754C  
                                                     l3719 74CE  
                                                     l4623 13DE  
                                                     l4631 140E  
                                                     l4615 1372  
                                                     l4607 12C4  
                                                     l4551 0F1E  
                                                     l4543 0EA2  
                                                     l4535 0DE6  
                                                     l4527 0D54  
                                                     l4519 0CA2  
                                                     l4471 09A0  
                                                     l4463 0916  
                                                     l4455 089A  
                                                     l4447 07DE  
                                                     l4439 0750  
                                                     l4391 03A0  
                                                     l4383 030A  
                                                     l4375 02B2  
                                                     l4367 0230  
                                                     l4359 01AE  
                                                     l5511 15A2  
                                                     l5503 1544  
                                                     l5193 7666  
                                                     l5185 7640  
                                                     l5177 7602  
                                                     l5169 75D0  
                                                     l5409 72C8  
                                                     l5257 6756  
                                                     l4801 2116  
                                                     l4297 203C  
                                                     l4289 1FD4  
                                                     l4721 272E  
                                                     l4713 26F6  
                                                     l4705 26C6  
                                                     l5281 6664  
                                                     l5433 665C  
                                                     l5425 6654  
                                                     l5417 6642  
                                                     l5273 7064  
                                                     l5097 66EE  
                                                     l5089 66DA  
                                                     l5345 6E50  
                                                     l5337 6E38  
                                                     l5329 6E02  
                                                     l5353 6E9A  
                                                     l5249 6604  
                                                     l3577 736E  
                                                     l3569 72F2  
                                                     l3585 6A6E  
                                                     l3593 6AB0  
                                                     l3745 7438  
                                                     l3737 73FA  
                                                     l3649 3F32  
                                                     l3681 7E3E  
                                                     l3673 7DC0  
                                                     l3665 7D60  
                                                     l3657 7D26  
                                                     l3841 2FF0  
                                                     l3833 2F2C  
                                                     l3825 2E96  
                                                     l3817 2E6C  
                                                     l3809 2E14  
                                                     l3905 380C  
                                                     l3921 3A88  
                                                     l3913 3A4C  
                                                     l3729 7560  
                                                     l3753 68EC  
                                                     l3761 6C86  
                                                     l4625 13EC  
                                                     l4609 1300  
                                                     l4537 0E2C  
                                                     l4529 0D8A  
                                                     l4481 0A64  
                                                     l4449 0824  
                                                     l4385 0334  
                                                     l4369 0252  
                                                     l4377 02C6  
                                                     l5361 76B0  
                                                     l5601 199A  
                                                     l5521 15D8  
                                                     l5513 15A8  
                                                     l5505 154E  
                                                     l5451 67B6  
                                                     l5195 766E  
                                                     l5187 7642  
                                                     l5179 7616  
                                                     l5259 6776  
                                                     l4811 214E  
                                                     l4803 2126  
                                                     l4299 204E  
                                                     l4731 279C  
                                                     l4723 2744  
                                                     l4715 2706  
                                                     l4707 26C6  
                                                     l5283 6668  
                                                     l5291 65C6  
                                                     l5427 6656  
                                                     l5419 664E  
                                                     l5275 7066  
                                                     l5267 7058  
                                                     l4651 65D4  
                                                     l5099 66F0  
                                                     l5339 6E3E  
                                                     l5347 6E5C  
                                                     l5435 6D66  
                                                     l3771 68AA  
                                                     l3587 6A72  
                                                     l3595 6AE8  
                                                     l3747 7470  
                                                     l3739 7406  
                                                     l3683 7E52  
                                                     l3675 7DD6  
                                                     l3667 7D74  
                                                     l3659 7D2A  
                                                     l3851 3052  
                                                     l3843 300E  
                                                     l3827 2E9E  
                                                     l3835 2F90  
                                                     l3819 2E7C  
                                                     l3907 3812  
                                                     l3931 3B12  
                                                     l3923 3A90  
                                                     l3915 3A54  
                                                     l4627 1400  
                                                     l4571 1096  
                                                     l4491 0B0A  
                                                     l4483 0A88  
                                                     l4395 03F0  
                                                     l4387 036E  
                                                     l4379 02F2  
                                                     l5371 7720  
                                                     l5363 76C8  
                                                     l5355 7680  
                                                     l5611 1A16  
                                                     l5603 19B4  
                                                     l5531 1630  
                                                     l5523 15DA  
                                                     l5515 15B4  
                                                     l5507 1560  
                                                     l5189 764A  
                                                     l5293 6688  
                                                     l4901 24D4  
                                                     l4821 219C  
                                                     l4813 2160  
                                                     l4805 212E  
                                                     l4741 27E8  
                                                     l4733 279E  
                                                     l4725 2758  
                                                     l4717 2716  
                                                     l4661 25A6  
                                                     l4653 2570  
                                                     l5285 667E  
                                                     l5429 6658  
                                                     l5277 70E2  
                                                     l5269 7060  
                                                     l5349 6E64  
                                                     l5437 6D94  
                                                     l5445 6DB4  
                                                     l3781 6B48  
                                                     l3589 6A9E  
                                                     l3749 7484  
                                                     l3677 7DEA  
                                                     l3685 7E58  
                                                     l3669 7D94  
                                                     l3853 3068  
                                                     l3837 2FB0  
                                                     l3845 3020  
                                                     l3829 2F20  
                                                     l3941 3B82  
                                                     l3933 3B16  
                                                     l3925 3AA2  
                                                     l3917 3A6A  
                                                     l3693 7882  
                                                     l3757 6970  
                                                     l3765 6CC2  
                                                     l4581 1156  
                                                     l4573 10A6  
                                                     l4565 0FF8  
                                                     l4557 0F6C  
                                                     l4549 0EF2  
                                                     l4477 09F0  
                                                     l4469 0964  
                                                     l4389 0390  
                                                     l4397 0404  
                                                     l4637 1422  
                                                     l5373 7734  
                                                     l5365 76DC  
                                                     l5357 7686  
                                                     l5381 6B5A  
                                                     l5621 1AA6  
                                                     l5613 1A30  
                                                     l5605 19CA  
                                                     l5541 16A0  
                                                     l5533 1650  
                                                     l5525 15F0  
                                                     l5517 15BA  
                                                     l5509 159C  
                                                     l5295 6690  
                                                     l4911 2548  
                                                     l4903 24E8  
                                                     l4831 21F4  
                                                     l4823 21A4  
                                                     l4815 2162  
                                                     l4807 2140  
                                                     l4751 2832  
                                                     l4743 27F4  
                                                     l4735 27AE  
                                                     l4727 276A  
                                                     l4719 2726  
                                                     l4671 25E8  
                                                     l4663 25BA  
                                                     l4655 257C  
                                                     l5287 6680  
                                                     l5447 6DCE  
                                                     l5439 6DA8  
                                                     l3783 6B4C  
                                                     l3775 6AF8  
                                                     l3791 6BDE  
                                                     l3687 7E6E  
                                                     l3679 7E1E  
                                                     l3855 3074  
                                                     l3847 3038  
                                                     l3839 2FD2  
                                                     l3871 3692  
                                                     l3863 361C  
                                                     l3951 3BDC  
                                                     l3943 3B86  
                                                     l3935 3B38  
                                                     l3919 3A72  
                                                     l3695 788E  
                                                     l3599 692E  
                                                     l3767 6CD8  
                                                     l4639 144A  
                                                     l4583 118E  
                                                     l4575 10DC  
                                                     l4567 1034  
                                                     l4559 0FA8  
                                                     l4479 0A2C  
                                                     l4487 0A96  
                                                     l4399 0430  
                                                     l5199 7BEC  
                                                     l5375 774C  
                                                     l5367 76F4  
                                                     l5359 769C  
                                                     l5383 6B7A  
                                                     l5615 1A46  
                                                     l5607 19E2  
                                                     l5623 1AB4  
                                                     l5551 171E  
                                                     l5543 16B8  
                                                     l5535 1664  
                                                     l5527 1610  
                                                     l5519 15BE  
                                                     l5471 1470  
                                                     l5463 1462  
                                                     l5297 6696  
                                                     l4913 254A  
                                                     l4905 2508  
                                                     l4841 2246  
                                                     l4833 2202  
                                                     l4825 21CC  
                                                     l4817 2178  
                                                     l4809 2148  
                                                     l4921 69B8  
                                                     l4761 28BA  
                                                     l4753 2844  
                                                     l4745 2806  
                                                     l4737 27C8  
                                                     l4729 2778  
                                                     l4681 2620  
                                                     l4673 25F0  
                                                     l4665 25CA  
                                                     l4657 258E  
                                                     l3777 6AFE  
                                                     l3793 6BEC  
                                                     l3689 7E8E  
                                                     l3857 307E  
                                                     l3849 304A  
                                                     l3881 36BA  
                                                     l3873 369A  
                                                     l3865 3630  
                                                     l3937 3B46  
                                                     l3929 3AFC  
                                                     l3697 78B0  
                                                     l3961 3466  
                                                     l3953 33F0  
                                                     l4585 11B8  
                                                     l4593 1208  
                                                     l4569 106C  
                                                     l4489 0AD2  
                                                     l4497 0B3C  
                                                     l5393 6782  
                                                     l5377 7760  
                                                     l5369 7708  
                                                     l5385 6B82  
                                                     l5625 1ACE  
                                                     l5617 1A70  
                                                     l5609 1A0C  
                                                     l5561 177C  
                                                     l5553 1748  
                                                     l5545 16C8  
                                                     l5537 167A  
                                                     l5529 1618  
                                                     l5481 14D4  
                                                     l5473 1474  
                                                     l5465 1462  
                                                     l4931 79CE  
                                                     l5299 6698  
                                                     l4907 2526  
                                                     l4915 2552  
                                                     l4851 2288  
                                                     l4843 2252  
                                                     l4835 220C  
                                                     l4827 21DE  
                                                     l4819 218C  
                                                     l4923 69C8  
                                                     l4771 2930  
                                                     l4763 28CC  
                                                     l4755 2876  
                                                     l4739 27E2  
                                                     l4747 281A  
                                                     l4691 2662  
                                                     l4683 2634  
                                                     l4675 25F6  
                                                     l4667 25CE  
                                                     l4659 2590  
                                                     l3779 6B16  
                                                     l3795 6BF2  
                                                     l3787 6BBA  
                                                     l3859 3090  
                                                     l3891 375A  
                                                     l3883 36CC  
                                                     l3875 369E  
                                                     l3867 3632  
                                                     l3947 3BC2  
                                                     l3939 3B7E  
                                                     l3699 78B8  
                                                     l3971 34FA  
                                                     l3963 346E  
                                                     l3955 3404  
                                                     l4595 1234  
                                                     l4587 11C8  
                                                     l4579 111A  
                                                     l4499 0B68  
                                                     l5395 678C  
                                                     l5387 6BA2  
                                                     l5627 1AE2  
                                                     l5619 1A7A  
                                                     l5571 17F8  
                                                     l5563 1792  
                                                     l5555 174C  
                                                     l5547 16E2  
                                                     l5539 168E  
                                                     l5491 14F6  
                                                     l5483 14D8  
                                                     l5475 1478  
                                                     l5467 1468  
                                                     l4941 7A4C  
                                                     l4933 7A02  
                                                     l4917 2558  
                                                     l4909 2536  
                                                     l4861 22EA  
                                                     l4853 2294  
                                                     l4845 225E  
                                                     l4837 2222  
                                                     l4781 298A  
                                                     l4773 2950  
                                                     l4765 28F6  
                                                     l4749 282E  
                                                     l4693 267E  
                                                     l4685 2644  
                                                     l4677 2608  
                                                     l4669 25D6  
                                                     l3797 6BF6  
                                                     l3789 6BD2  
                                                     l3893 377C  
                                                     l3885 36D2  
                                                     l3877 36AA  
                                                     l3869 3652  
                                                     l3949 3BD8  
                                                     l3981 35BC  
                                                     l3973 3500  
                                                     l3965 3476  
                                                     l3957 3406  
                                                     l4597 125C  
                                                     l5389 6BAA  
                                                     l5629 1B16  
                                                     l5573 180E  
                                                     l5565 17AA  
                                                     l5581 18B2  
                                                     l5557 1750  
                                                     l5549 16F6  
                                                     l5493 14F8  
                                                     l5485 14DE  
                                                     l5477 147C  
                                                     l5469 146C  
                                                     TRISD 000F95  
                                                     l4943 7AA2  
                                                     l4935 7A12  
                                                     l4927 798C  
                                                     l5399 7200  
                                                     l4871 2384  
                                                     l4863 22F6  
                                                     l4855 22A4  
                                                     l4847 226C  
                                                     l4839 222E  
                                                     l4791 20CC  
                                                     l4951 6842  
                                                     l4783 298E  
                                                     l4775 296C  
                                                     l4759 28AE  
                                                     l4767 28FA  
                                                     l4695 268E  
                                                     l4687 2648  
                                                     l4679 260A  
                                                     l3895 379A  
                                                     l3887 36D8  
                                                     l3879 36B2  
                                                     l3983 35DA  
                                                     l3967 347E  
                                                     l3975 3564  
                                                     l3959 3426  
                                                     l3991 30D4  
                                                     l4599 1276  
                                                     l5591 191E  
                                                     l5583 18CC  
                                                     l5575 1838  
                                                     l5567 17D4  
                                                     l5559 1762  
                                                     l5495 1502  
                                                     l5487 14E4  
                                                     l5479 14A8  
                                                     TRISE 000F96  
                                                     l4945 7AA8  
                                                     l4937 7A26  
                                                     l4929 79BE  
                                                     l4881 23E8  
                                                     l4873 23A2  
                                                     l4865 2312  
                                                     l4857 22BE  
                                                     l4849 2278  
                                                     l4793 20D8  
                                                     l4953 6852  
                                                     l4777 2972  
                                                     l4769 291A  
                                                     l4697 2696  
                                                     l4689 2650  
                                                     l3897 37B8  
                                                     l3889 373A  
                                                     l3977 357C  
                                                     l3985 35EC  
                                                     l3969 34F4  
                                                     l3993 30D6  
                                                     l5593 1942  
                                                     l5585 18E2  
                                                     l5577 1842  
                                                     l5569 17DE  
                                                     l5497 151A  
                                                     l5489 14EA  
                                                     l4939 7A38  
                                                     l4971 7B2C  
                                                     l4963 7AE6  
                                                     l4891 2468  
                                                     l4883 23EC  
                                                     l4875 23AE  
                                                     l4867 233C  
                                                     l4859 22CE  
                                                     l4795 20EA  
                                                     l4779 2984  
                                                     l4699 269C  
                                                     l3899 37E0  
                                                     l3979 359E  
                                                     l3995 30F6  
                                                     l5595 1952  
                                                     l5587 190C  
                                                     l5579 18A0  
                                                     l5499 152E  
                                                     l4981 7B66  
                                                     l4973 7B3E  
                                                     l4965 7B16  
                                                     l4957 7AB4  
                                                     l4893 2474  
                                                     l4885 23FE  
                                                     l4877 23C0  
                                                     l4869 2376  
                                                     l4797 20EC  
                                                     l4949 6828  
                                                     l3997 3128  
                                                     l3989 30C0  
                                                     l5597 197E  
                                                     l5589 1918  
                                                     l4991 7B98  
                                                     l4983 7B70  
                                                     l4967 7B18  
                                                     l4959 7AD0  
                                                     l4895 2486  
                                                     l4887 2430  
                                                     l4879 23D4  
                                                     l4799 2102  
                                                     l3999 3130  
                                                     l5599 198A  
                                                     l4993 7BAC  
                                                     l4969 7B28  
                                                     l4897 24B0  
                                                     l5697 0150  
                                                     l4995 7BC2  
                                                     l4979 7B5A  
                                                     l4899 24B4  
                                                     l5699 3CE8  
                                                     l4997 7BD2  
                                                     l4989 7B8A  
                                                     STR_1 7F3B  
                                                     STR_2 7EC9  
                                                     STR_3 7FBB  
                                                     STR_4 7F6C  
                                                     STR_5 7FA9  
                                                     STR_6 7FC4  
                                                     STR_7 7FB2  
                                                     STR_8 7F09  
                                                     STR_9 7F93  
                                            _state_changed 01B0  
                                                     _LATA 000F89  
                                                     _LATB 000F8A  
                                                     _LATC 000F8B  
                                                     u4000 6B46  
                                                     u4001 6B40  
                                                     u4010 6BD0  
                                                     u4011 6BCA  
                                                     u4100 2FD0  
                                                     u4020 2DBE  
                                                     u4101 2FCA  
                                                     u4021 2DB6  
                                                     u4110 2FEE  
                                                     u4030 2DC2  
                                                     u4111 2FE8  
                                                     u5000 1F5E  
                                                     u4120 300C  
                                                     u4040 2DDC  
                                                     u4200 3758  
                                                     u5001 1F58  
                                                     u4121 3006  
                                                     u4041 2DD6  
                                                     u4201 3752  
                                                     u5010 1F74  
                                                     u4130 3020  
                                                     u4050 2E12  
                                                     u4210 377A  
                                                     u5011 1F6E  
                                                     u4131 301A  
                                                     u4051 2E0C  
                                                     u4211 3774  
                                                     u5100 208A  
                                                     u5020 1F8E  
                                                     u4140 3036  
                                                     u4060 2E34  
                                                     u4220 3798  
                                                     u4300 3AC2  
                                                     u5101 2084  
                                                     u5021 1F88  
                                                     u4141 3030  
                                                     u4061 2E2E  
                                                     u4221 3792  
                                                     u4301 3ABC  
                                                     u5110 20AE  
                                                     u5030 1FAC  
                                                     u4150 304A  
                                                     u4070 2E6A  
                                                     u4230 37B6  
                                                     u4310 3AF6  
                                                     u5111 20A8  
                                                     u5031 1FA6  
                                                     u4151 3044  
                                                     u4071 2E64  
                                                     u4231 37B0  
                                                     u4311 3AF0  
                                                     u6000 24D2  
                                                     u5040 1FC6  
                                                     u3600 6A96  
                                                     u4160 3066  
                                                     u4080 2E7C  
                                                     u4240 37CA  
                                                     u4320 3B38  
                                                     u4400 359C  
                                                     u5200 02F0  
                                                     u5120 00A4  
                                                     u6001 24CC  
                                                     u5041 1FC0  
                                                     u3601 6A90  
                                                     u4161 3060  
                                                     u4081 2E76  
                                                     u4241 37C4  
                                                     u4321 3B32  
                                                     u4401 3596  
                                                     u5201 02EA  
                                                     u5121 009E  
                                                     u6010 2506  
                                                     u5050 1FE4  
                                                     u3610 6AD4  
                                                     u4090 2FAE  
                                                     u4250 37DE  
                                                     u4170 362E  
                                                     u4330 3B6A  
                                                     u4410 35BA  
                                                     u5210 0332  
                                                     u5130 0196  
                                                     u6011 2500  
                                                     u5051 1FDE  
                                                     u4091 2FA8  
                                                     u4251 37D8  
                                                     u4171 3628  
                                                     u4411 35B4  
                                                     u5211 032C  
                                                     u5131 0190  
                                                     u6100 7B0A  
                                                     u6020 2546  
                                                     u5060 2022  
                                                     u3620 6AE6  
                                                     u3700 3EAE  
                                                     u4260 37F4  
                                                     u4180 3650  
                                                     u4340 3BA8  
                                                     u4420 35D8  
                                                     u4500 3200  
                                                     u5300 0664  
                                                     u5220 03E6  
                                                     u5140 01AA  
                                                     u6021 2540  
                                                     u5061 201C  
                                                     u3621 6AE0  
                                                     u3701 3EA8  
                                                     u4261 37EE  
                                                     u4181 364A  
                                                     u4341 3BA2  
                                                     u4421 35D2  
                                                     u4501 31FA  
                                                     u5301 065E  
                                                     u5221 03DE  
                                                     u5141 01A4  
                                                     u6030 79BC  
                                                     u6110 7B3C  
                                                     u5070 203A  
                                                     u3710 3EF4  
                                                     u4190 3712  
                                                     u4350 3BBC  
                                                     u4430 35EC  
                                                     u3630 6962  
                                                     u4510 3238  
                                                     u5310 068E  
                                                     u5230 03EA  
                                                     u5150 01D8  
                                                     u6031 79B6  
                                                     u6111 7B36  
                                                     u5071 2034  
                                                     u3711 3EEE  
                                                     u4351 3BB6  
                                                     u4271 3A44  
                                                     u4431 35E6  
                                                     u3631 695A  
                                                     u4511 3230  
                                                     u5311 0688  
                                                     u5151 01D2  
                                                     u6040 7A00  
                                                     u6200 397E  
                                                     u6120 7B54  
                                                     u5080 204E  
                                                     u3560 72F0  
                                                     u3720 3F46  
                                                     u4360 3BFE  
                                                     u4280 3A68  
                                                     u3800 78AE  
                                                     u3640 6966  
                                                     u4600 3392  
                                                     u4520 323C  
                                                     u4440 30D2  
                                                     u5400 0AD0  
                                                     u5320 0716  
                                                     u5240 0404  
                                                     u5160 0220  
                                                     u7000 1A2E  
                                                     u6041 79FA  
                                                     u6201 3978  
                                                     u6121 7B4E  
                                                     u6105 7AFE  
                                                     u5081 2048  
                                                     u3561 72EA  
                                                     u3617 6ACA  
                                                     u3721 3F40  
                                                     u4361 3BF8  
                                                     u4337 3B60  
                                                     u4281 3A62  
                                                     u3801 78A8  
                                                     u4601 338C  
                                                     u4441 30CC  
                                                     u5401 0ACA  
                                                     u5321 0710  
                                                     u5241 03FE  
                                                     u5161 021A  
                                                     u7001 1A28  
                                                     u6050 7A24  
                                                     u6210 39A4  
                                                     u3650 6A1E  
                                                     u6130 7B84  
                                                     u5090 2072  
                                                     u4610 3C4E  
                                                     u3570 7306  
                                                     u3730 7D3A  
                                                     u4290 3AA0  
                                                     u3810 78E0  
                                                     u4370 3402  
                                                     u4530 3256  
                                                     u4450 30F4  
                                                     u5410 0B38  
                                                     u5330 0750  
                                                     u5250 042E  
                                                     u5170 02A8  
                                                     u7010 1A44  
                                                     u6051 7A1E  
                                                     u6211 399E  
                                                     u3651 6A18  
                                                     u6131 7B7E  
                                                     u5091 206C  
                                                     u4611 3C48  
                                                     u3571 7300  
                                                     u3731 7D34  
                                                     u4195 36FE  
                                                     u4291 3A9A  
                                                     u3811 78DA  
                                                     u4371 33FC  
                                                     u4531 3250  
                                                     u4451 30EE  
                                                     u5331 074A  
                                                     u5251 0428  
                                                     u5171 02A0  
                                                     u7011 1A3E  
                                                     u6060 7A4A  
                                                     u6220 39B8  
                                                     u6140 7BAC  
                                                     u6300 2A6C  
                                                     u4620 3C8A  
                                                     u3580 7334  
                                                     u3660 3DF0  
                                                     u3740 7D72  
                                                     u4700 7808  
                                                     u3820 7926  
                                                     u4380 3424  
                                                     u3900 6920  
                                                     u4540 32C4  
                                                     u4460 3126  
                                                     u5500 0F1C  
                                                     u5420 0B66  
                                                     u5340 07DC  
                                                     u5260 04B8  
                                                     u5180 02AC  
                                                     u7020 1A6E  
                                                     u6061 7A44  
                                                     u6221 39B2  
                                                     u6141 7BA6  
                                                     u6301 2A66  
                                                     u4621 3C84  
                                                     u3581 732E  
                                                     u3661 3DEA  
                                                     u3741 7D6C  
                                                     u4701 7802  
                                                     u3821 7920  
                                                     u4381 341E  
                                                     u3901 6918  
                                                     u4461 3120  
                                                     u5501 0F16  
                                                     u5421 0B60  
                                                     u5341 07D6  
                                                     u5261 04B2  
                                                     u7021 1A68  
                                                     u6070 7AA0  
                                                     u6230 39CA  
                                                     u6150 7BC0  
                                                     u6310 2AB4  
                                                     u4630 3CAC  
                                                     u3590 736E  
                                                     u3670 3E28  
                                                     u3750 7DB6  
                                                     u4710 781E  
                                                     u3830 74C4  
                                                     u4390 357A  
                                                     u3910 6924  
                                                     u4550 330C  
                                                     u4470 3190  
                                                     u5510 0FA6  
                                                     u5430 0BCC  
                                                     u5350 0898  
                                                     u5270 04F2  
                                                     u5190 02C6  
                                                     u7030 1AA4  
                                                     u6071 7A9A  
                                                     u6231 39C4  
                                                     u6151 7BBA  
                                                     u6311 2AAE  
                                                     u4631 3CA6  
                                                     u3591 7368  
                                                     u3671 3E22  
                                                     u3751 7DB0  
                                                     u4711 7818  
                                                     u3831 74BE  
                                                     u4391 3574  
                                                     u4551 3306  
                                                     u4471 318A  
                                                     u5511 0FA0  
                                                     u5351 0892  
                                                     u5271 04EC  
                                                     u5191 02C0  
                                                     u7031 1A9E  
                                                     u6240 3A0A  
                                                     u6160 3856  
                                                     u6080 6840  
                                                     u4800 1C46  
                                                     u6320 2BC0  
                                                     u6400 71E6  
                                                     u4640 3D78  
                                                     u3760 7DE8  
                                                     u4720 7850  
                                                     u3840 74F6  
                                                     u3920 69A8  
                                                     u4560 332E  
                                                     u4480 31E2  
                                                     u5600 13DC  
                                                     u5520 1032  
                                                     u5440 0C0A  
                                                     u5360 0914  
                                                     u5280 05B0  
                                                     u7040 1ACC  
                                                     u6241 3A04  
                                                     u6161 3850  
                                                     u6081 683A  
                                                     u4801 1C40  
                                                     u6321 2BBA  
                                                     u6401 71E0  
                                                     u4641 3D70  
                                                     u3681 3E56  
                                                     u3761 7DE2  
                                                     u4721 784A  
                                                     u3841 74F0  
                                                     u3921 69A0  
                                                     u4561 3328  
                                                     u4545 32B0  
                                                     u4481 31DA  
                                                     u5601 13D6  
                                                     u5521 102C  
                                                     u5441 0C04  
                                                     u5417 0B28  
                                                     u5361 090E  
                                                     u5281 05AA  
                                                     u7041 1AC6  
                                                     u6410 75A2  
                                                     u6250 3A1C  
                                                     u6170 3868  
                                                     u6090 7ACE  
                                                     u4810 1C58  
                                                     u4730 1B40  
                                                     u6330 2C64  
                                                     u5610 258C  
                                                     u4650 3D7C  
                                                     u3690 3E7C  
                                                     u3770 7E1C  
                                                     u3850 752A  
                                                     u3930 69AC  
                                                     u4570 334C  
                                                     u4490 31E6  
                                                     u5530 106C  
                                                     u5450 0C72  
                                                     u5370 099E  
                                                     u5290 05EA  
                                                     u7050 1AE0  
                                                     u6411 759C  
                                                     u6251 3A16  
                                                     u6171 3862  
                                                     u6091 7AC8  
                                                     u4811 1C52  
                                                     u4731 1B3A  
                                                     u6331 2C5E  
                                                     u5611 2586  
                                                     u3691 3E76  
                                                     u3771 7E16  
                                                     u3851 7524  
                                                     u4571 3346  
                                                     u5531 1066  
                                                     u5371 0998  
                                                     u5291 05E4  
                                                     u7051 1ADA  
                                                     u6420 75C2  
                                                     u6180 38CC  
                                                     u4900 1DC8  
                                                     u4820 1CCE  
                                                     u4740 1B58  
                                                     u6340 2D2C  
                                                     u5700 2768  
                                                     u5620 25A4  
                                                     u4660 3D96  
                                                     u3860 73D0  
                                                     u3780 7E6C  
                                                     u3940 6CB8  
                                                     u4580 336A  
                                                     u5540 1154  
                                                     u5460 0CA0  
                                                     u5380 0A2A  
                                                     u6260 6D56  
                                                     u6500 7CB4  
                                                     u7060 1B14  
                                                     u6421 75BC  
                                                     u6181 38C6  
                                                     u4901 1DC2  
                                                     u4821 1CC8  
                                                     u4741 1B52  
                                                     u5701 2762  
                                                     u5621 259E  
                                                     u4661 3D90  
                                                     u3861 73CA  
                                                     u3781 7E66  
                                                     u3941 6CB0  
                                                     u4581 3364  
                                                     u5541 114E  
                                                     u5461 0C9A  
                                                     u5437 0BBC  
                                                     u5381 0A24  
                                                     u6261 6D50  
                                                     u6501 7CAE  
                                                     u7061 1B0E  
                                                     u7117 1784  
                                                     u6430 75EE  
                                                     u6190 392C  
                                                     u4910 1DDA  
                                                     u4830 1CEA  
                                                     u4750 1B6C  
                                                     u6350 2D4C  
                                                     u6270 29E4  
                                                     u5710 279A  
                                                     u5630 25B8  
                                                     u4670 3DAC  
                                                     u3870 73F8  
                                                     u3950 6CBC  
                                                     u4590 337E  
                                                     u5550 118E  
                                                     u5470 0D52  
                                                     u5390 0A88  
                                                     u6510 7CE6  
                                                     u6431 75E8  
                                                     u6191 3926  
                                                     u4911 1DD4  
                                                     u4831 1CE2  
                                                     u4751 1B66  
                                                     u6351 2D46  
                                                     u5711 2794  
                                                     u5631 25B2  
                                                     u7207 66F2  
                                                     u4671 3DA6  
                                                     u3871 73F2  
                                                     u3791 7888  
                                                     u4591 3378  
                                                     u5551 1188  
                                                     u5471 0D4C  
                                                     u6511 7CE0  
                                                     u7127 18D4  
                                                     u6440 7614  
                                                     u4920 1E00  
                                                     u4840 1CEE  
                                                     u4760 1BB8  
                                                     u6280 2A12  
                                                     u5800 28CA  
                                                     u5720 27C6  
                                                     u5640 2606  
                                                     u6520 661A  
                                                     u3880 745A  
                                                     u4680 77A6  
                                                     u3960 6CD6  
                                                     u5560 1232  
                                                     u5480 0DE4  
                                                     u6600 771E  
                                                     u6360 3FA4  
                                                     u6441 760E  
                                                     u4921 1DFA  
                                                     u4761 1BB2  
                                                     u6345 2D20  
                                                     u6281 2A0C  
                                                     u5801 28C4  
                                                     u5721 27C0  
                                                     u5641 2600  
                                                     u6521 6614  
                                                     u3881 7454  
                                                     u4681 77A0  
                                                     u3961 6CD0  
                                                     u5561 122C  
                                                     u5481 0DDE  
                                                     u5457 0C62  
                                                     u6601 7718  
                                                     u6361 3F9E  
                                                     u7137 19BC  
                                                     u6450 7636  
                                                     u4930 1E40  
                                                     u4850 1D1C  
                                                     u4770 1BD4  
                                                     u6290 2A4C  
                                                     u5810 2918  
                                                     u5730 27E0  
                                                     u5650 261E  
                                                     u6370 700E  
                                                     u6530 6F54  
                                                     u3970 68DE  
                                                     u3890 746E  
                                                     u4690 77E6  
                                                     u5570 125C  
                                                     u5490 0EA0  
                                                     u6610 774A  
                                                     u6451 7630  
                                                     u4931 1E3A  
                                                     u4851 1D16  
                                                     u4771 1BCE  
                                                     u6275 29D8  
                                                     u5811 2912  
                                                     u5731 27DA  
                                                     u5651 2618  
                                                     u6371 7008  
                                                     u6531 6F4E  
                                                     u7147 6710  
                                                     u3971 68D6  
                                                     u3891 7468  
                                                     u4691 77E0  
                                                     u5571 1256  
                                                     u5491 0E9A  
                                                     u6611 7744  
                                                     u6460 7664  
                                                     u5900 21CA  
                                                     u4940 1E8A  
                                                     u4860 1D42  
                                                     u4780 1BEC  
                                                     u5820 294E  
                                                     u5740 2804  
                                                     u5660 2632  
                                                     u6380 702C  
                                                     u6540 6E94  
                                                     u3980 68E2  
                                                     u5580 12FE  
                                                     u6620 6B78  
                                                     u6700 152C  
                                                     u6461 765E  
                                                     u5901 21C4  
                                                     u4941 1E84  
                                                     u4861 1D3C  
                                                     u4781 1BE6  
                                                     u5821 2948  
                                                     u5741 27FE  
                                                     u5661 262C  
                                                     u6381 7026  
                                                     u7157 671C  
                                                     u5581 12F8  
                                                     u5397 0A7C  
                                                     u6621 6B72  
                                                     u6701 1526  
                                                     u5910 21DE  
                                                     u4950 1EC8  
                                                     u4870 1D6A  
                                                     u4790 1C00  
                                                     u5830 2982  
                                                     u5750 282C  
                                                     u5670 267C  
                                                     u6550 6ECA  
                                                     u6390 71B0  
                                                     u3990 6B14  
                                                     u5590 1338  
                                                     u6470 7C00  
                                                     u6630 6BA0  
                                                     u6710 15D6  
                                                     u5911 21D8  
                                                     u4951 1EC2  
                                                     u4871 1D64  
                                                     u4791 1BFA  
                                                     u6295 2A40  
                                                     u5831 297C  
                                                     u5751 2826  
                                                     u5671 2676  
                                                     u7167 6DF4  
                                                     u6391 71AA  
                                                     u3991 6B0E  
                                                     u5591 1332  
                                                     u6471 7BFA  
                                                     u6631 6B9A  
                                                     u6711 15D0  
                                                     u6640 7282  
                                                     u5920 235E  
                                                     u5840 20E8  
                                                     u4960 1EDC  
                                                     u4880 1D7C  
                                                     u5760 2842  
                                                     u5680 26C4  
                                                     u6560 6EDC  
                                                     u6480 7C36  
                                                     u6800 16F4  
                                                     u6720 15EE  
                                                     u6641 727C  
                                                     u5841 20E2  
                                                     u4961 1ED6  
                                                     u4881 1D76  
                                                     u5761 283C  
                                                     u5681 26BE  
                                                     u7177 6E0E  
                                                     u6561 6ED6  
                                                     u6481 7C30  
                                                     u6801 16EE  
                                                     u6721 15E8  
                                                     u6650 72B8  
                                                     u5930 23BE  
                                                     u5850 2100  
                                                     u4970 1F0E  
                                                     u4890 1D90  
                                                     u5770 2874  
                                                     u5690 2742  
                                                     u6490 7CA0  
                                                     u6570 769A  
                                                     u6810 171C  
                                                     u6730 160E  
                                                     u6651 72B2  
                                                     u5931 23B8  
                                                     u5851 20FA  
                                                     u4971 1F08  
                                                     u4891 1D8A  
                                                     u5771 286E  
                                                     u5691 273C  
                                                     u7187 6E26  
                                                     u6547 6E8A  
                                                     u6491 7C9A  
                                                     u6571 7694  
                                                     u6811 1716  
                                                     u6731 1608  
                                                     u5940 23E6  
                                                     u5860 2114  
                                                     u4980 1F24  
                                                     u5780 2892  
                                                     u6580 76C6  
                                                     u6660 66D0  
                                                     u6900 1860  
                                                     u6820 1746  
                                                     u6740 162E  
                                                     u5941 23E0  
                                                     u5925 2352  
                                                     u5861 210E  
                                                     u4981 1F1E  
                                                     u5781 288C  
                                                     u7197 66E6  
                                                     u6557 6EC0  
                                                     u6581 76C0  
                                                     u6661 66CA  
                                                     u6821 1740  
                                                     u6741 1628  
                                                     u5950 23FC  
                                                     u5870 215E  
                                                     u4990 1F48  
                                                     u5790 28AC  
                                                     u6670 6D92  
                                                     u6590 76F2  
                                                     u6910 187C  
                                                     u6830 177A  
                                                     u6750 164E  
                                                     u5951 23F6  
                                                     u5871 2158  
                                                     u4991 1F42  
                                                     u5791 28A6  
                                                     u6671 6D8C  
                                                     u6591 76EC  
                                                     u6911 1874  
                                                     u6831 1774  
                                                     u6751 1648  
                                                     u5960 242E  
                                                     u5880 2176  
                                                     u6920 1880  
                                                     u6840 17A8  
                                                     u6760 1678  
                                                     u5961 2428  
                                                     u5881 2170  
                                                     u6841 17A2  
                                                     u6761 1672  
                                                     u5970 244C  
                                                     u5890 218A  
                                                     u6930 189E  
                                                     u6850 17D2  
                                                     u6770 168C  
                                                     u6690 1518  
                                                     u5971 2446  
                                                     u5891 2184  
                                                     u6931 1898  
                                                     u6851 17CC  
                                                     u6771 1686  
                                                     u6691 1512  
                                                     u5980 2466  
                                                     u6940 18CA  
                                                     u6860 17F6  
                                                     u6780 16B6  
                                                     u5981 2460  
                                                     u6941 18C4  
                                                     u6861 17F0  
                                                     u6781 16B0  
                                                     u5990 2484  
                                                     u6950 190A  
                                                     u6870 180C  
                                                     u6790 16E0  
                                                     u5991 247E  
                                                     u6951 1904  
                                                     u6871 1806  
                                                     u6791 16DA  
                                                     u6960 1940  
                                                     u6880 1836  
                                                     u6961 193A  
                                                     u6881 1830  
                                                     u6970 19B2  
                                                     u6890 185C  
                                                     u6971 19AC  
                                                     u6891 1854  
                                                     u6980 19E0  
                                                     u6981 19DA  
                                                     u6990 1A0A  
                                                     u6991 1A04  
                                                     _TMR2 000FCC  
                                                     abs@a 0013  
                                                     _dbuf 0098  
                                                     _atoi 3C0C  
                                                     _ctoa 6BB8  
                                                     _main 1462  
                                                     _dtoa 2D8A  
                                                     _fosc 7EC5  
                                                     _prec 0088  
                                                     _otoa 361A  
                                                     _nout 0084  
                                                     pad@i 0018  
                                                     pad@p 0015  
                                                     fsr1h 000FE2  
                                                     fsr2h 000FDA  
                                                     indf1 000FE7  
                                                     indf2 000FDF  
                                                     fsr1l 000FE1  
                                                     pad@w 001A  
                                                     fsr2l 000FD9  
                                                     _tosc 00E9  
                                                     _stoa 3A38  
                                                     btemp 007F  
                                                     _utoa 33EE  
                                                     _xtoa 30BE  
                              update_pwm_duty_ccp1@time_up 00D4  
                                              main@rx_char 01A2  
                                                     prodh 000FF4  
                                            _trash_counter 01A5  
                                                     prodl 000FF3  
                                                     start 0076  
                                          ___fldiv@new_exp 0057  
         state_translator_fpga_to_micro@state_machine_code 0005  
                                             ___param_bank 000000  
                                                    ??_abs 0015  
                                     _update_pwm_duty_ccp1 6F92  
                                                    ??_pad 0017  
                                            ___fltol@sign1 00D2  
                                          __end_of___aodiv 3F8E  
                                                    ?_atoi 0008  
                                                    ?_ctoa 001C  
                                          __end_of___fladd 20CA  
                                                    ?_main 0001  
                                                    ?_dtoa 001C  
                                          __end_of___aomod 7EB4  
                                          __end_of___fldiv 29A0  
                                          __end_of___awdiv 767C  
                                          __end_of___flneg 6868  
                                                    STR_10 7FFC  
                                                    STR_11 7FCF  
                                                    STR_13 7FCF  
                                                    STR_22 7FD0  
                                                    STR_31 7FEA  
                                                    STR_15 7FD3  
                                                    STR_40 7FDB  
                                                    STR_17 7FD3  
                                                    STR_33 7FED  
                                                    STR_26 7FD4  
                                                    STR_50 7FF3  
                                                    STR_35 7FED  
                                                    STR_60 7FD8  
                                                    STR_45 7FDC  
                                                    STR_29 7FEA  
                                                    STR_53 7FD7  
                                                    STR_70 7FDF  
                                                    STR_38 7FDB  
                                                    STR_55 7FD7  
                                                    STR_63 7FF0  
                                                    STR_80 7FF6  
                                                    STR_48 7FF3  
                                                    STR_65 7FF0  
                                                    STR_75 7FE0  
                                                    STR_83 7FE3  
                                                    STR_68 7FDF  
                                                    STR_85 7FE3  
                                                    STR_94 7FE4  
                                                    STR_78 7FF6  
                                                    STR_87 7FCB  
                                          __end_of___flmul 256E  
                                                    STR_89 7FCB  
                                                    STR_98 7FCC  
                                                    ?_otoa 001C  
                                          __end_of___flsub 6A00  
                                          __end_of___fltol 7BEA  
                                                    ?_stoa 000A  
                                                    ?_utoa 001C  
                                                    _T0CON 000FD5  
                                          __end_of___lodiv 798A  
                                          ___awdiv@divisor 0019  
                                                    ?_xtoa 001C  
                                                    _T2CON 000FCA  
                                          __end_of___lomod 758C  
                                                    i2l181 006E  
                              __end_of_update_current_coil 71FE  
                                          ___awdiv@counter 001B  
                                                    _RCREG 000FAE  
                                             vfpfcnvrt@fmt 0045  
                                                    _TMR0H 000FD7  
                                             vfpfcnvrt@llu 0060  
                                                    _TMR0L 000FD6  
                                                    _SPBRG 000FAF  
                                                    _PORTA 000F80  
                                                    _PORTB 000F81  
                                                    _PORTC 000F82  
                                                    _PORTD 000F83  
                                                    _TRISA 000F92  
                                                    _TRISB 000F93  
                                                    _TXREG 000FAD  
                                         ?_get_temperature 00D4  
                                          __end_of_lcd_dat 672A  
                                          __end_of_lcd_cmd 6700  
                                          __end_of_lcd_str 6EE2  
                                                    _f_osc 7EC1  
                                                    _flags 008A  
                                                    _errno 008C  
                                                    _fputc 72DA  
                                          __end_of_isalpha 69B6  
                                                    _fputs 6A4C  
                                          __end_of_isdigit 68EC  
                                                    _t_osc 7EBD  
                                                    atoi@n 0015  
                                                    pad@fp 0011  
                                                    atoi@s 0008  
                                                    _width 0086  
                                                    ctoa@c 001E  
                                                    _state 01CD  
                                                    _putch 65BE  
                                                    _toint 7EB5  
                                                    ctoa@w 001F  
                                                    dtoa@d 001E  
                                                    dtoa@i 003E  
                                                    dtoa@n 0036  
                                                    dtoa@p 0030  
                                                    dtoa@s 0034  
                                                    dtoa@w 0032  
                                          __end_of_islower 6970  
                                          __end_of_isspace 6B58  
                                          __end_of_isupper 692E  
                                                    tablat 000FF5  
                                                    otoa@d 001E  
                                                    otoa@i 003C  
                                                    otoa@n 0034  
                                                    otoa@p 002E  
                                                    otoa@t 0030  
                                                    otoa@w 0032  
                                                    plusw1 000FE3  
                                                    plusw2 000FDB  
                                                    stoa@i 0016  
                                                    stoa@l 001E  
                                                    stoa@p 001C  
                                                    stoa@s 000C  
                                                    stoa@w 0018  
                                                    ttemp5 0080  
                                                    ttemp6 0083  
                                                    ttemp7 0087  
                                                    utoa@d 001E  
                                                    utoa@i 003A  
                                                    utoa@n 0032  
                                                    utoa@p 002E  
                                                    utoa@w 0030  
                                                    status 000FD8  
                                                    wtemp8 0080  
                                                    xtoa@c 0041  
                                                    xtoa@d 001E  
                                                    xtoa@i 003F  
                                                    xtoa@n 0037  
                                                    xtoa@p 0033  
                                                    xtoa@w 0035  
                                                    xtoa@x 0026  
                                          __end_of_strncmp 7880  
                                          __end_of_toupper 6CF4  
                                         ___lodiv@dividend 0001  
                                       _end_effector_homed 01A7  
                                          ??_get_reg_value 0001  
                                             _toupper$1893 000D  
                                     get_reg_value@rx_char 0001  
                                          __initialization 6C1E  
                                             __end_of_atoi 3DDA  
                                             __end_of_ctoa 6C1E  
                                             __end_of_main 1B22  
                                             __end_of_dtoa 30BE  
                                             __end_of_fosc 7EC9  
                                             __end_of_otoa 3840  
                                             __end_of_stoa 3C0C  
                                             __end_of_utoa 361A  
                                    ?_update_pwm_duty_ccp1 00D4  
                                             __end_of_xtoa 33EE  
                                                   ??_atoi 000A  
                                                   ??_ctoa 001F  
                                                   ??_main 00DD  
                                                   ??_dtoa 0026  
                                                   ??_otoa 0026  
                                                   ??_stoa 000E  
                                                   ??_utoa 0026  
                                                   ??_xtoa 0027  
                                            __activetblptr 000002  
                                          ??_rx_char_usart 0001  
                                         ___lodiv@quotient 0011  
                                                   _ADCON0 000FC2  
                                                   _ADCON1 000FC1  
                                         _change_direction 67B4  
                                                   ?_fputc 0001  
                                                   STR_101 7FF9  
                                                   ?_fputs 000A  
                                                   STR_103 7FF9  
                                                   STR_105 7FE7  
                                                   _ADRESH 000FC4  
                                                   STR_107 7FE7  
                                                   _ADRESL 000FC3  
                             __end_of_turn_on_current_coil 6826  
                                                   _CCPR1L 000FBE  
                                         ___awdiv@dividend 0017  
                                                   ?_putch 0001  
                                                   i2l5631 000C  
                                                   i2l5641 0050  
                                                   i2l5633 001E  
                                                   i2l5643 0062  
                                                   i2l5635 0030  
                                                   i2l5645 0066  
                                                   i2l5637 0032  
                                                   i2l5639 003C  
                                            main@greet_str 0100  
                                            vfpfcnvrt@done 004F  
                                         __end_of___xxtofl 3A38  
                                            ?_init_timer_0 0001  
                                            ?_init_timer_2 0001  
                   __end_of_state_translator_fpga_to_micro 7778  
                  __size_of_state_translator_fpga_to_micro 00FC  
                           _state_translator_fpga_to_micro 767C  
                                            ?_init_stepper 0001  
                                             vfprintf@cfmt 006E  
                                         __end_of_lcd_init 6E5A  
                                                   ___flge 798A  
                                        _init_timer_2$2130 00D4  
                                                ??___aodiv 0011  
                                                ??___fladd 0067  
                                                ??___aomod 0011  
                                                   ___wmul 672A  
                                                ??___fldiv 004E  
                                                ??___awdiv 001B  
                                                ??___flneg 0005  
                                                ??___flmul 0035  
                                                ??___flsub 0077  
                                                ??___fltol 00CE  
                                                ??___lodiv 0011  
                                                ??___lomod 0011  
                                                   _lcd_wr 65D0  
                                                   clear_0 6C64  
                                                   clear_1 6C70  
                                         ___awdiv@quotient 001D  
                                                   pad@buf 0013  
                                                   ctoa@fp 001C  
                                                   _roundf 29A0  
                                                ??_lcd_dat 0002  
                                                ??_lcd_cmd 0002  
                                                   dtoa@fp 001C  
                                                   _strlen 6A9C  
                                                ??_lcd_str 0005  
                                                   fputc@c 0001  
                                                   fputs@c 000E  
                                                   fputs@i 000F  
                                                   fputs@s 000A  
                                                ??_isalpha 0003  
                                                ??_isdigit 0003  
                                                ??_islower 0003  
                                             __mediumconst 7EB4  
                                                ??_isspace 0003  
                                                   otoa@fp 001C  
                                                   tblptrh 000FF7  
                                                ??_isupper 0003  
                                                   tblptrl 000FF6  
                                                   tblptru 000FF8  
                                  reach_goal@goal_to_reach 0009  
                                                   stoa@cp 001A  
                                                   stoa@fp 000A  
                                                   putch@c 0001  
                                         __end_of_vfprintf 6D64  
                                                   utoa@fp 001C  
                                         __end_of_snprintf 67B4  
                                                   xtoa@fp 001C  
                                                ??_strncmp 0007  
                                                ??_toupper 0009  
                                               ___flge@ff1 0001  
                                               ___flge@ff2 0005  
                         update_current_coil@stepper_motor 0001  
                                             ___xxtofl@arg 0029  
                                             ___xxtofl@exp 0028  
                                             ___xxtofl@val 001F  
                                               __accesstop 0080  
                                  __end_of__initialization 6C76  
                                               ___flneg@f1 0001  
                                        serial_tx_char@val 0001  
                                           ??_init_timer_0 0001  
                                           ??_init_timer_2 007F  
                                            ___rparam_used 000001  
                                               ___fltol@f1 00CA  
                                           ??_init_stepper 000B  
                                           _tmr2_prescaler 00ED  
                                          _init_interrupts 65C4  
                                   ??_update_pwm_duty_ccp1 00D8  
                                           __pcstackCOMRAM 0001  
                                             __pidataBANK0 65ED  
                                             __pidataBANK1 6620  
                                            __end_of_f_osc 7EC5  
                                            __end_of_fputc 73BC  
                                            __end_of_fputs 6A9C  
                                            __end_of_t_osc 7EC1  
                                            __end_of_putch 65C4  
                                            __end_of_toint 7EB9  
                                          _temperature_int 0090  
                                  __size_of_serial_tx_char 0020  
                      state_translator_fpga_to_micro@state 0003  
                                                  ??_fputc 0005  
                                                  ??_fputs 000E  
                                                  ??_putch 0001  
                                         _mix_current_step 0096  
                                               __pbssBANK0 0080  
                                               __pbssBANK1 01A3  
                                       __size_of_init_ccp1 0024  
                                                  ?___flge 0001  
                                                  ?___wmul 0001  
                      check_temperature@temp_to_be_checked 00D6  
                                                  ?_lcd_wr 0001  
                                                  _CCP1CON 000FBD  
                                     _turn_on_current_coil 67EA  
                                    __end_of_wait_for_zero 66D6  
                                  _hex_end_effector_values 01DF  
                                            _read_new_char 01AE  
                                                  ?_roundf 0077  
                                                  ?_strlen 0001  
                                       _temperature_scaled 008E  
                                                ?___xxtofl 001F  
                                  reach_goal@stepper_motor 0007  
                                       __size_of_vfpfcnvrt 13E8  
                        turn_on_current_coil@stepper_motor 0001  
                                         _desired_baudrate 7EB9  
                                                ?_lcd_init 0001  
                                         ___lomod@dividend 0001  
                                  __end_of_init_interrupts 65D0  
                                        _check_temperature 71FE  
                            change_direction@stepper_motor 0001  
                                                  __Hparam 0000  
                                       ?_check_temperature 00D6  
                                                  __Lparam 0000  
                                       __size_of_vsnprintf 013A  
                                               _init_PORTS 6754  
                                               _init_USART 6868  
                                          __size_of___flge 0128  
                                                  ___aodiv 3DDA  
                                                  ___fladd 1B22  
                                                  ___aomod 7D24  
                                                  ___fldiv 256E  
                                                  ___awdiv 758C  
                                                  ___flneg 6826  
                                                  ___flmul 20CA  
                                 __end_of_change_direction 67EA  
                                                  ___flsub 69B6  
                                                  ___fltol 7AB2  
                                          __size_of___wmul 002A  
                                                  ___lodiv 7880  
                                    ?_turn_on_current_coil 0001  
                                                  ___lomod 74A2  
                                                ?_vfprintf 0068  
                                                ?_snprintf 00C2  
                                          __size_of_lcd_wr 000C  
                                      ??_check_temperature 007F  
                                                  __pcinit 6C1E  
                     init_stepper@hex_coil_register_values 0009  
                                                  __ramtop 0600  
                                               _reach_goal 6D64  
                                                  __ptext0 1462  
                                                  __ptext1 66AE  
                                                  __ptext2 3F8E  
                                                  __ptext3 6B58  
                                                  __ptext4 767C  
                                                  __ptext5 6780  
                                                  __ptext6 7BEA  
                                                  __ptext7 6CF4  
                                                  __ptext8 007A  
                                                  __ptext9 30BE  
                                                  _lcd_dat 6700  
                                                  _lcd_cmd 66D6  
                                                  _lcd_str 6E5A  
                                                _T0CONbits 000FD5  
                                          __size_of_roundf 03EA  
                                          __size_of_strlen 005C  
                                        __end_of_init_ccp1 6686  
                                                _T2CONbits 000FCA  
                                             __size_of_abs 004C  
                                             __size_of_pad 00E6  
                                                  _isalpha 6970  
                                                  _isdigit 68AA  
                                               ??___xxtofl 0023  
                                     __end_of_init_timer_0 6662  
                                     __end_of_init_timer_2 7124  
                                                  _islower 692E  
                                                  _isspace 6AF8  
                                                  _isupper 68EC  
                                     __end_of_init_stepper 6F92  
                                                  atoi@neg 000E  
                                            _joint_stepper 01BF  
                                               ??_lcd_init 0003  
                                                  _strncmp 7778  
                                                  _toupper 6C84  
                             __size_of_update_current_coil 00DA  
                                     end_of_initialization 6C76  
                                __end_of_check_temperature 72DA  
                                 __size_of_get_temperature 0072  
                                                  fputc@fp 0003  
                                            __Lmediumconst 7EB4  
                                                  fputs@fp 000C  
                      state_translator_micro_to_fpga@state 0001  
                                        __end_of_vfpfcnvrt 1462  
                                    __end_of_get_reg_value 65EC  
                                                _RCSTAbits 000FAB  
                                                  postdec1 000FE5  
                                                  postdec2 000FDD  
                                                  postinc0 000FEE  
                                                  postinc1 000FE6  
                                                  postinc2 000FDE  
                                                  roundf@e 00BC  
                                                  roundf@u 00C2  
                                                  roundf@x 0077  
                                                  roundf@y 00C6  
                                               ??_vfprintf 006E  
                                               ??_snprintf 007C  
                                                  strlen@a 0003  
                                                  strlen@s 0001  
                                               _timer_done 01AD  
                                                _PORTEbits 000F84  
                         ??_state_translator_fpga_to_micro 0005  
                          ?_state_translator_fpga_to_micro 0003  
                                              ___fladd@grs 006E  
                                           _serial_tx_char 6600  
                                            ___xxtofl@sign 0027  
                                    __end_of_rx_char_usart 0076  
                                                _TRISCbits 000F94  
                                               lcd_dat@val 0002  
                                        __end_of_vsnprintf 7D24  
                                               lcd_cmd@val 0002  
                                              ___fldiv@grs 0059  
                                              ___fldiv@rem 0052  
                                               _pwm_period 00E5  
                                               _state_msgs 01CF  
                                            _mix_direction 0094  
                                     _end_effector_stepper 01B1  
                                              ___flmul@grs 003A  
                                         ?_init_interrupts 0001  
                                              _CCP1CONbits 000FBD  
                                                _TXSTAbits 000FAC  
                                         main@current_temp 01A0  
                                               lcd_str@str 0003  
              __end_of_configure_analog_digital_conversion 66AE  
             __size_of_configure_analog_digital_conversion 0028  
                    ??_configure_analog_digital_conversion 0001  
                     ?_configure_analog_digital_conversion 0001  
                      _configure_analog_digital_conversion 6686  
                                              ?_init_PORTS 0001  
                                              ?_init_USART 0001  
                                   ??_turn_on_current_coil 0003  
                                           __end_of___flge 7AB2  
                   __end_of_state_translator_micro_to_fpga 6BB8  
                  __size_of_state_translator_micro_to_fpga 0060  
                           _state_translator_micro_to_fpga 6B58  
                                              vfpfcnvrt@ap 0047  
                                              vfpfcnvrt@cp 004D  
                                              vfpfcnvrt@fp 0043  
                                              vfpfcnvrt@ll 0055  
                                           __end_of___wmul 6754  
                                              vfpfcnvrt@vp 005D  
                                           __end_of_lcd_wr 65DC  
                                              ?_reach_goal 0007  
         state_translator_micro_to_fpga@state_machine_code 0005  
                                   __end_of_serial_tx_char 6620  
                                           __end_of_roundf 2D8A  
                                           __end_of_strlen 6AF8  
                                      start_initialization 6C1E  
                                          ___lodiv@divisor 0009  
                                          ___lodiv@counter 0019  
                                              __end_of_abs 6A4C  
                                              __end_of_pad 74A2  
                                         _hex_joint_values 01E7  
                               __size_of_check_temperature 00DC  
                                 init_stepper@current_coil 0003  
                                init_stepper@stepper_motor 0001  
                                        ??_get_temperature 007F  
                                              vfprintf@fmt 006A  
                                                 ??___flge 0009  
                                 __end_of_desired_baudrate 7EBD  
                                                 ??___wmul 0005  
                            __size_of_update_pwm_duty_ccp1 00C4  
                                                 ??_lcd_wr 0001  
                                              __pdataBANK0 00DE  
                                              __pdataBANK1 01CF  
                                    check_temperature@grad 00D8  
                                    __size_of_init_timer_0 0022  
                                    __size_of_init_timer_2 00CE  
                                    __size_of_init_stepper 00B0  
                                                 ??_roundf 007B  
                                                 ??_strlen 0003  
                                          ?_serial_tx_char 0001  
                                                ___fladd@a 0063  
                                                ___fladd@b 005F  
                                             vsnprintf@cnt 00BA  
                                             vsnprintf@fmt 0074  
                                                ___fldiv@a 004A  
                                                ___fldiv@b 0046  
                                                ___flmul@a 0031  
                                                ___flmul@b 002D  
                                                ___flsub@a 0073  
                                                ___flsub@b 006F  
                                            __pcstackBANK0 00B8  
                                            __pcstackBANK1 0100  
                                         ___aodiv@dividend 0001  
                                              snprintf@fmt 00C6  
                                        __size_of___xxtofl 01F8  
                                      __size_of_init_PORTS 002C  
                                      __size_of_init_USART 0042  
                                        __size_of_lcd_init 007E  
                                      __size_of_reach_goal 0078  
                                                _atoi$1805 0010  
                                                _atoi$1806 0014  
                                                _atoi$1807 0012  
                                             _init_timer_0 6640  
                                             _init_timer_2 7056  
                                                _dtoa$1631 002E  
                                             _init_stepper 6EE2  
                                    init_stepper@direction 0007  
                                                __pintcode 0008  
                                            __pmediumconst 7EB4  
                                                 ?___aodiv 0001  
                                                 ?___fladd 005F  
                                                 ?___aomod 0001  
                                                 ?___fldiv 0046  
                                                 ?___awdiv 0017  
                                         ___aodiv@quotient 0013  
                                                 ?___flneg 0001  
                                                 ?___flmul 002D  
                                                 ?___flsub 006F  
                                                 ?___fltol 00CA  
                                                 ?___lodiv 0001  
                                                 ?___lomod 0001  
                                      _update_current_coil 7124  
                                        ?_change_direction 0001  
                                       ??_change_direction 0003  
                                                 ?_lcd_dat 0001  
                                                 ?_lcd_cmd 0001  
                                        __size_of_vfprintf 0070  
                                                 ?_lcd_str 0003  
                                        __size_of_snprintf 0034  
                                          ___lomod@divisor 0009  
                             update_pwm_duty_ccp1@new_duty 00DA  
                                          ___lomod@counter 0011  
                                                 ?_isalpha 0001  
                                                 ?_isdigit 0001  
                                         _mix_step_counter 0092  
                                                 ?_islower 0001  
                                                 ?_isspace 0001  
                                                 ?_isupper 0001  
                                                _init_ccp1 6662  
                                           __size_of_fputc 00E2  
                                           __size_of_fputs 0050  
                                     ?_update_current_coil 0001  
                                                 ?_strncmp 0001  
                                                 ?_toupper 0007  
                                           __size_of_putch 0006  
                                   __size_of_wait_for_zero 0028  
                                           ___wmul@product 0005  
                                                 _LATAbits 000F89  
                                                 _PIE1bits 000F9D  
                                            _move_to_trash 01A3  
                                                 _PIR1bits 000F9E  
                                                 i2u710_40 0060  
                                                 i2u710_41 005A  
                                                 i2u707_40 001C  
                                                 i2u707_41 0016  
                                                 i2u708_40 002E  
                                                 i2u708_41 0028  
                                                 i2u709_40 004E  
                                                 i2u709_41 0048  
                                                _vfpfcnvrt 007A  
                                                _xtoa$1667 002F  
                                                _xtoa$1668 0031  
                                               _ADCON0bits 000FC2  
                                        ___wmul@multiplier 0001  
                                                lcd_wr@val 0001  
                                             _isspace$1833 0007  
                                               ?_init_ccp1 0001  
                                    ??_update_current_coil 0003  
                                               vfpfcnvrt@c 005F  
                                                copy_data0 6C32  
                                                copy_data1 6C52  
                                                _vsnprintf 7BEA  
                                               roundf@F525 0080  
                                                 __Hrparam 0000  
                                             ??_init_PORTS 0001  
                                             ??_init_USART 007F  
                                               vfprintf@ap 006C  
                                                 __Lrparam 0000  
                                               vfprintf@fp 0068  
                                         __size_of___aodiv 01B4  
                                         __size_of___fladd 05A8  
                                         __size_of___aomod 0190  
                                         __size_of___fldiv 0432  
                                         __size_of___awdiv 00F0  
                                         __size_of___flneg 0042  
                                              vsnprintf@ap 0076  
                                         __size_of___flmul 04A4  
                                         __size_of___flsub 004A  
                                         __size_of___fltol 0138  
                                         __size_of___lodiv 010A  
                                         __size_of___lomod 00EA  
                                               ?_vfpfcnvrt 0043  
                                            _wait_for_zero 66AE  
                                             ??_reach_goal 000B  
                                               snprintf@ap 00CC  
                                          ___aodiv@divisor 0009  
                                          ___aodiv@counter 0011  
                                         __size_of_lcd_dat 002A  
                                         __size_of_lcd_cmd 002A  
                                         __size_of_lcd_str 0088  
                                                 ___xxtofl 3840  
                                         __size_of_isalpha 0046  
                                         __size_of_isdigit 0042  
                                         __size_of_islower 0042  
                                         __size_of_isspace 0060  
                                                 __ptext10 6C84  
                                                 __ptext11 692E  
                                                 __ptext20 2D8A  
                                                 __ptext12 68EC  
                                                 __ptext21 7D24  
                                                 __ptext13 6970  
                                                 __ptext30 6AF8  
                                                 __ptext22 3DDA  
                                                 __ptext14 33EE  
                                                 __ptext31 68AA  
                                                 __ptext23 6BB8  
                                                 __ptext15 74A2  
                                                 __ptext40 66D6  
                                                 __ptext32 672A  
                                                 __ptext24 73BC  
                                                 __ptext16 7880  
                                                 __ptext41 65D0  
                                                 __ptext33 6600  
                                                 __ptext25 6A9C  
                                                 __ptext17 7778  
                                                 __ptext50 29A0  
                                                 __ptext42 7056  
                                                 __ptext34 6D64  
                                                 __ptext26 6A4C  
                                                 __ptext18 3A38  
                                                 __ptext51 69B6  
                                                 __ptext43 6640  
                                                 __ptext35 7124  
                                                 __ptext27 72DA  
                                                 __ptext19 361A  
                                                 __ptext60 6A00  
                                                 __ptext52 1B22  
                                                 __ptext44 6EE2  
                                                 __ptext36 67EA  
                                                 __ptext28 65BE  
                                                 __ptext61 3840  
                                                 __ptext53 6826  
                                                 __ptext45 65C4  
                                                 __ptext37 6E5A  
                                                 __ptext29 3C0C  
                                                 __ptext62 798A  
                                                 __ptext54 20CA  
                                                 __ptext46 6662  
                                                 __ptext38 6700  
                                                 __ptext63 758C  
                                                 __ptext55 7AB2  
                                                 __ptext47 6F92  
                                                 __ptext39 6DDC  
                                                 __ptext64 67B4  
                                                 __ptext56 6754  
                                                 __ptext48 256E  
                                                 __ptext57 65DC  
                                                 __ptext49 6868  
                                                 __ptext58 6686  
                                                 __ptext59 71FE  
                                         __size_of_isupper 0042  
                         ??_state_translator_micro_to_fpga 0003  
                          ?_state_translator_micro_to_fpga 0001  
                                   __size_of_get_reg_value 0010  
                                       __end_of_init_PORTS 6780  
                                                 _lcd_init 6DDC  
                                       __end_of_init_USART 68AA  
                                          _get_temperature 3F8E  
                                         __size_of_strncmp 0108  
                                         __size_of_toupper 0070  
                                               ?_vsnprintf 0070  
                                            __size_of_atoi 01CE  
                                            __size_of_ctoa 0066  
                                            __size_of_main 06C0  
                                            __size_of_dtoa 0334  
                                            __size_of_otoa 0226  
                                            __size_of_stoa 01D4  
                                            __size_of_utoa 022C  
                                              _joint_homed 01A9  
                                            __size_of_xtoa 0330  
                                       __end_of_reach_goal 6DDC  
                                                stoa@F1152 00DE  
                                   __size_of_rx_char_usart 006E  
                                 __size_of_init_interrupts 000C  
                                                 int$flags 007F  
                                         ??_serial_tx_char 0001  
                                                 _vfprintf 6CF4  
                            __size_of_turn_on_current_coil 003C  
                                           ?_wait_for_zero 0001  
                                                 _snprintf 6780  
                                                 lcd_str@i 0007  
                                              _mix_counter 01AB  
                                         ___aomod@dividend 0001  
                                           _vfpfcnvrt$1682 0051  
                                           _vfpfcnvrt$1683 0053  
                                               _INTCONbits 000FF2  
                                                 isalpha@c 0001  
                                                 isdigit@c 0001  
                                              ??_init_ccp1 007F  
                             __end_of_update_pwm_duty_ccp1 7056  
                                               vsnprintf@f 00BC  
                                            _idle_msg_sent 01AF  
                                               vsnprintf@n 0072  
                                               vsnprintf@s 0070  
                                                snprintf@n 00C4  
                                                snprintf@s 00C2  
                                                 intlevel2 0006  
                                                 islower@c 0001  
                                                 isspace@c 0001  
                                                 isupper@c 0001  
                                                strncmp@_l 0001  
                                                strncmp@_r 0003  
                                            _get_reg_value 65DC  
                                            init_stepper@i 000F  
                                          ___aomod@divisor 0009  
                                              ??_vfpfcnvrt 0049  
                                                 stoa@nuls 000F  
                                          ___aomod@counter 0011  
                                           _vsnprintf$1549 00B8  
                                  __end_of_get_temperature 4000  
                                                 strncmp@l 0008  
                                                 strncmp@n 0005  
                                                 strncmp@r 000A  
                                                 toupper@c 0007  
                                 init_stepper@step_counter 0005  
                                            _rx_char_usart 0008  
                                __size_of_change_direction 0036  
                                            ___fladd@signs 006B  
                            update_pwm_duty_ccp1@lsbs_duty 00DC  
                                             ___aodiv@sign 0012  
                                              ??_vsnprintf 0078  
                                             ___fladd@aexp 006C  
                                             ___fladd@bexp 006D  
                                             ___aomod@sign 0012  
                                              _roundf$2131 00BE  
                                              _roundf$2132 00B8  
