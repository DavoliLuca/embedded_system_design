

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Jun 08 18:41:00 2023

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    79                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    80                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    81                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    82  0000                     
    83                           ; Version 2.20
    84                           ; Generated 12/02/2020 GMT
    85                           ; 
    86                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC18F452 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117  0000                     
   118                           	psect	idataBANK0
   119  006C0D                     __pidataBANK0:
   120                           	callstack 0
   121                           
   122                           ;initializer for stoa@F1152
   123  006C0D  28                 	db	40
   124  006C0E  6E                 	db	110
   125  006C0F  75                 	db	117
   126  006C10  6C                 	db	108
   127  006C11  6C                 	db	108
   128  006C12  29                 	db	41
   129  006C13  00                 	db	0
   130                           
   131                           ;initializer for _pwm_period
   132                           ;timer.c: 5: static double const f_osc = 1000000;;timer.c: 6: static double const t_osc 
      +                          = 1/f_osc;;timer.c: 7: static double pwm_period = 20e-3;
   133  006C14  D70A               	dw	55050
   134  006C16  3CA3               	dw	15523
   135                           
   136                           ;initializer for _tosc
   137  006C18  37BD               	dw	14269
   138  006C1A  3486               	dw	13446
   139                           
   140                           ;initializer for _tmr2_prescaler
   141  006C1C  0000               	dw	0
   142  006C1E  4180               	dw	16768
   143                           
   144                           	psect	idataBANK1
   145  006C20                     __pidataBANK1:
   146                           	callstack 0
   147                           
   148                           ;initializer for _state_msgs
   149  006C20  43                 	db	low STR_1
   150  006C21  7F                 	db	high STR_1
   151  006C22  03                 	db	low STR_2
   152  006C23  7F                 	db	high STR_2
   153  006C24  BA                 	db	low STR_3
   154  006C25  7F                 	db	high STR_3
   155  006C26  74                 	db	low STR_4
   156  006C27  7F                 	db	high STR_4
   157  006C28  B1                 	db	low STR_5
   158  006C29  7F                 	db	high STR_5
   159  006C2A  C3                 	db	low STR_6
   160  006C2B  7F                 	db	high STR_6
   161                           
   162                           ;initializer for _hex_end_effector_values
   163  006C2C  0010               	dw	16
   164  006C2E  0020               	dw	32
   165  006C30  0040               	dw	64
   166  006C32  0080               	dw	128
   167                           
   168                           ;initializer for _hex_joint_values
   169  006C34  0001               	dw	1
   170  006C36  0002               	dw	2
   171  006C38  0004               	dw	4
   172  006C3A  0008               	dw	8
   173                           
   174                           	psect	mediumconst
   175  007EEE                     __pmediumconst:
   176                           	callstack 0
   177  007EEE  00                 	db	0
   178  007EEF  0000               	dw	0
   179  007EF1  4B00               	dw	19200
   180  007EF3                     __end_of_toint:
   181                           	callstack 0
   182  007EF3  0000               	dw	0
   183  007EF5  4616               	dw	17942
   184  007EF7                     __end_of_desired_baudrate:
   185                           	callstack 0
   186  007EF7  37BD               	dw	14269
   187  007EF9  3586               	dw	13702
   188  007EFB                     __end_of_t_osc:
   189                           	callstack 0
   190  007EFB  2400               	dw	9216
   191  007EFD  4974               	dw	18804
   192  007EFF                     __end_of_f_osc:
   193                           	callstack 0
   194  007EFF  2400               	dw	9216
   195  007F01  4A74               	dw	19060
   196  007F03                     __end_of_fosc:
   197                           	callstack 0
   198  0000                     _CCPR1L	set	4030
   199  0000                     _CCP1CONbits	set	4029
   200  0000                     _CCP1CON	set	4029
   201  0000                     _PR2	set	4043
   202  0000                     _T2CONbits	set	4042
   203  0000                     _TMR2	set	4044
   204  0000                     _T2CON	set	4042
   205  0000                     _TMR0H	set	4055
   206  0000                     _TMR0L	set	4054
   207  0000                     _PORTEbits	set	3972
   208  0000                     _PORTD	set	3971
   209  0000                     _TRISCbits	set	3988
   210  0000                     _PORTC	set	3970
   211  0000                     _LATC	set	3979
   212  0000                     _TRISB	set	3987
   213  0000                     _PORTB	set	3969
   214  0000                     _LATB	set	3978
   215  0000                     _TRISA	set	3986
   216  0000                     _PORTA	set	3968
   217  0000                     _LATA	set	3977
   218  0000                     _T0CON	set	4053
   219  0000                     _PIR1bits	set	3998
   220  0000                     _PIE1bits	set	3997
   221  0000                     _T0CONbits	set	4053
   222  0000                     _LATAbits	set	3977
   223  0000                     _INTCONbits	set	4082
   224  0000                     _RCREG	set	4014
   225  0000                     _TXREG	set	4013
   226  0000                     _RCSTAbits	set	4011
   227  0000                     _TXSTAbits	set	4012
   228  0000                     _SPBRG	set	4015
   229  007F03                     STR_2:
   230  007F03  49                 	db	73	;'I'
   231  007F04  4E                 	db	78	;'N'
   232  007F05  49                 	db	73	;'I'
   233  007F06  54                 	db	84	;'T'
   234  007F07  5F                 	db	95	;'_'
   235  007F08  50                 	db	80	;'P'
   236  007F09  4F                 	db	79	;'O'
   237  007F0A  53                 	db	83	;'S'
   238  007F0B  3A                 	db	58	;':'
   239  007F0C  20                 	db	32
   240  007F0D  74                 	db	116	;'t'
   241  007F0E  68                 	db	104	;'h'
   242  007F0F  65                 	db	101	;'e'
   243  007F10  20                 	db	32
   244  007F11  76                 	db	118	;'v'
   245  007F12  69                 	db	105	;'i'
   246  007F13  61                 	db	97	;'a'
   247  007F14  6C                 	db	108	;'l'
   248  007F15  20                 	db	32
   249  007F16  69                 	db	105	;'i'
   250  007F17  73                 	db	115	;'s'
   251  007F18  20                 	db	32
   252  007F19  61                 	db	97	;'a'
   253  007F1A  74                 	db	116	;'t'
   254  007F1B  20                 	db	32
   255  007F1C  74                 	db	116	;'t'
   256  007F1D  68                 	db	104	;'h'
   257  007F1E  65                 	db	101	;'e'
   258  007F1F  20                 	db	32
   259  007F20  69                 	db	105	;'i'
   260  007F21  6E                 	db	110	;'n'
   261  007F22  69                 	db	105	;'i'
   262  007F23  74                 	db	116	;'t'
   263  007F24  20                 	db	32
   264  007F25  70                 	db	112	;'p'
   265  007F26  6F                 	db	111	;'o'
   266  007F27  73                 	db	115	;'s'
   267  007F28  69                 	db	105	;'i'
   268  007F29  74                 	db	116	;'t'
   269  007F2A  69                 	db	105	;'i'
   270  007F2B  6F                 	db	111	;'o'
   271  007F2C  6E                 	db	110	;'n'
   272  007F2D  2C                 	db	44
   273  007F2E  20                 	db	32
   274  007F2F  70                 	db	112	;'p'
   275  007F30  72                 	db	114	;'r'
   276  007F31  6F                 	db	111	;'o'
   277  007F32  63                 	db	99	;'c'
   278  007F33  65                 	db	101	;'e'
   279  007F34  73                 	db	115	;'s'
   280  007F35  73                 	db	115	;'s'
   281  007F36  20                 	db	32
   282  007F37  69                 	db	105	;'i'
   283  007F38  73                 	db	115	;'s'
   284  007F39  20                 	db	32
   285  007F3A  73                 	db	115	;'s'
   286  007F3B  74                 	db	116	;'t'
   287  007F3C  61                 	db	97	;'a'
   288  007F3D  72                 	db	114	;'r'
   289  007F3E  74                 	db	116	;'t'
   290  007F3F  69                 	db	105	;'i'
   291  007F40  6E                 	db	110	;'n'
   292  007F41  67                 	db	103	;'g'
   293  007F42  00                 	db	0
   294  007F43                     STR_1:
   295  007F43  49                 	db	73	;'I'
   296  007F44  44                 	db	68	;'D'
   297  007F45  4C                 	db	76	;'L'
   298  007F46  45                 	db	69	;'E'
   299  007F47  3A                 	db	58	;':'
   300  007F48  20                 	db	32
   301  007F49  77                 	db	119	;'w'
   302  007F4A  61                 	db	97	;'a'
   303  007F4B  69                 	db	105	;'i'
   304  007F4C  74                 	db	116	;'t'
   305  007F4D  69                 	db	105	;'i'
   306  007F4E  6E                 	db	110	;'n'
   307  007F4F  67                 	db	103	;'g'
   308  007F50  20                 	db	32
   309  007F51  66                 	db	102	;'f'
   310  007F52  6F                 	db	111	;'o'
   311  007F53  72                 	db	114	;'r'
   312  007F54  20                 	db	32
   313  007F55  20                 	db	32
   314  007F56  76                 	db	118	;'v'
   315  007F57  69                 	db	105	;'i'
   316  007F58  61                 	db	97	;'a'
   317  007F59  6C                 	db	108	;'l'
   318  007F5A  20                 	db	32
   319  007F5B  74                 	db	116	;'t'
   320  007F5C  6F                 	db	111	;'o'
   321  007F5D  20                 	db	32
   322  007F5E  62                 	db	98	;'b'
   323  007F5F  65                 	db	101	;'e'
   324  007F60  20                 	db	32
   325  007F61  70                 	db	112	;'p'
   326  007F62  6C                 	db	108	;'l'
   327  007F63  61                 	db	97	;'a'
   328  007F64  63                 	db	99	;'c'
   329  007F65  65                 	db	101	;'e'
   330  007F66  64                 	db	100	;'d'
   331  007F67  20                 	db	32
   332  007F68  69                 	db	105	;'i'
   333  007F69  6E                 	db	110	;'n'
   334  007F6A  20                 	db	32
   335  007F6B  69                 	db	105	;'i'
   336  007F6C  6E                 	db	110	;'n'
   337  007F6D  69                 	db	105	;'i'
   338  007F6E  74                 	db	116	;'t'
   339  007F6F  20                 	db	32
   340  007F70  70                 	db	112	;'p'
   341  007F71  6F                 	db	111	;'o'
   342  007F72  73                 	db	115	;'s'
   343  007F73  00                 	db	0
   344  007F74                     STR_4:
   345  007F74  4F                 	db	79	;'O'
   346  007F75  56                 	db	86	;'V'
   347  007F76  45                 	db	69	;'E'
   348  007F77  4E                 	db	78	;'N'
   349  007F78  3A                 	db	58	;':'
   350  007F79  20                 	db	32
   351  007F7A  72                 	db	114	;'r'
   352  007F7B  65                 	db	101	;'e'
   353  007F7C  61                 	db	97	;'a'
   354  007F7D  63                 	db	99	;'c'
   355  007F7E  68                 	db	104	;'h'
   356  007F7F  69                 	db	105	;'i'
   357  007F80  6E                 	db	110	;'n'
   358  007F81  67                 	db	103	;'g'
   359  007F82  20                 	db	32
   360  007F83  74                 	db	116	;'t'
   361  007F84  68                 	db	104	;'h'
   362  007F85  65                 	db	101	;'e'
   363  007F86  20                 	db	32
   364  007F87  63                 	db	99	;'c'
   365  007F88  6F                 	db	111	;'o'
   366  007F89  72                 	db	114	;'r'
   367  007F8A  72                 	db	114	;'r'
   368  007F8B  65                 	db	101	;'e'
   369  007F8C  63                 	db	99	;'c'
   370  007F8D  74                 	db	116	;'t'
   371  007F8E  20                 	db	32
   372  007F8F  74                 	db	116	;'t'
   373  007F90  65                 	db	101	;'e'
   374  007F91  6D                 	db	109	;'m'
   375  007F92  70                 	db	112	;'p'
   376  007F93  65                 	db	101	;'e'
   377  007F94  72                 	db	114	;'r'
   378  007F95  61                 	db	97	;'a'
   379  007F96  74                 	db	116	;'t'
   380  007F97  75                 	db	117	;'u'
   381  007F98  72                 	db	114	;'r'
   382  007F99  65                 	db	101	;'e'
   383  007F9A  00                 	db	0
   384  007F9B                     STR_7:
   385  007F9B  44                 	db	68	;'D'
   386  007F9C  65                 	db	101	;'e'
   387  007F9D  76                 	db	118	;'v'
   388  007F9E  69                 	db	105	;'i'
   389  007F9F  63                 	db	99	;'c'
   390  007FA0  65                 	db	101	;'e'
   391  007FA1  20                 	db	32
   392  007FA2  68                 	db	104	;'h'
   393  007FA3  61                 	db	97	;'a'
   394  007FA4  73                 	db	115	;'s'
   395  007FA5  20                 	db	32
   396  007FA6  62                 	db	98	;'b'
   397  007FA7  65                 	db	101	;'e'
   398  007FA8  65                 	db	101	;'e'
   399  007FA9  6E                 	db	110	;'n'
   400  007FAA  20                 	db	32
   401  007FAB  72                 	db	114	;'r'
   402  007FAC  65                 	db	101	;'e'
   403  007FAD  73                 	db	115	;'s'
   404  007FAE  65                 	db	101	;'e'
   405  007FAF  74                 	db	116	;'t'
   406  007FB0  00                 	db	0
   407  007FB1                     STR_5:
   408  007FB1  47                 	db	71	;'G'
   409  007FB2  52                 	db	82	;'R'
   410  007FB3  41                 	db	65	;'A'
   411  007FB4  53                 	db	83	;'S'
   412  007FB5  50                 	db	80	;'P'
   413  007FB6  49                 	db	73	;'I'
   414  007FB7  4E                 	db	78	;'N'
   415  007FB8  47                 	db	71	;'G'
   416  007FB9  00                 	db	0
   417  007FBA                     STR_3:
   418  007FBA  4D                 	db	77	;'M'
   419  007FBB  4F                 	db	79	;'O'
   420  007FBC  56                 	db	86	;'V'
   421  007FBD  45                 	db	69	;'E'
   422  007FBE  4D                 	db	77	;'M'
   423  007FBF  45                 	db	69	;'E'
   424  007FC0  4E                 	db	78	;'N'
   425  007FC1  54                 	db	84	;'T'
   426  007FC2  00                 	db	0
   427  007FC3                     STR_6:
   428  007FC3  4D                 	db	77	;'M'
   429  007FC4  49                 	db	73	;'I'
   430  007FC5  58                 	db	88	;'X'
   431  007FC6  49                 	db	73	;'I'
   432  007FC7  4E                 	db	78	;'N'
   433  007FC8  47                 	db	71	;'G'
   434  007FC9  00                 	db	0
   435  007FCA                     STR_85:
   436  007FCA  68                 	db	104	;'h'
   437  007FCB  68                 	db	104	;'h'
   438  007FCC  58                 	db	88	;'X'
   439  007FCD  00                 	db	0
   440  007FCE                     STR_9:
   441  007FCE  68                 	db	104	;'h'
   442  007FCF  68                 	db	104	;'h'
   443  007FD0  64                 	db	100	;'d'
   444  007FD1  00                 	db	0
   445  007FD2                     STR_13:
   446  007FD2  68                 	db	104	;'h'
   447  007FD3  68                 	db	104	;'h'
   448  007FD4  69                 	db	105	;'i'
   449  007FD5  00                 	db	0
   450  007FD6                     STR_51:
   451  007FD6  68                 	db	104	;'h'
   452  007FD7  68                 	db	104	;'h'
   453  007FD8  6E                 	db	110	;'n'
   454  007FD9  00                 	db	0
   455  007FDA                     STR_36:
   456  007FDA  68                 	db	104	;'h'
   457  007FDB  68                 	db	104	;'h'
   458  007FDC  6F                 	db	111	;'o'
   459  007FDD  00                 	db	0
   460  007FDE                     STR_66:
   461  007FDE  68                 	db	104	;'h'
   462  007FDF  68                 	db	104	;'h'
   463  007FE0  75                 	db	117	;'u'
   464  007FE1  00                 	db	0
   465  007FE2                     STR_81:
   466  007FE2  68                 	db	104	;'h'
   467  007FE3  68                 	db	104	;'h'
   468  007FE4  78                 	db	120	;'x'
   469  007FE5  00                 	db	0
   470  007FE6                     STR_103:
   471  007FE6  7A                 	db	122	;'z'
   472  007FE7  58                 	db	88	;'X'
   473  007FE8  00                 	db	0
   474  007FE9                     STR_27:
   475  007FE9  7A                 	db	122	;'z'
   476  007FEA  64                 	db	100	;'d'
   477  007FEB  00                 	db	0
   478  007FEC                     STR_31:
   479  007FEC  7A                 	db	122	;'z'
   480  007FED  69                 	db	105	;'i'
   481  007FEE  00                 	db	0
   482  007FEF                     STR_61:
   483  007FEF  7A                 	db	122	;'z'
   484  007FF0  6E                 	db	110	;'n'
   485  007FF1  00                 	db	0
   486  007FF2                     STR_46:
   487  007FF2  7A                 	db	122	;'z'
   488  007FF3  6F                 	db	111	;'o'
   489  007FF4  00                 	db	0
   490  007FF5                     STR_76:
   491  007FF5  7A                 	db	122	;'z'
   492  007FF6  75                 	db	117	;'u'
   493  007FF7  00                 	db	0
   494  007FF8                     STR_99:
   495  007FF8  7A                 	db	122	;'z'
   496  007FF9  78                 	db	120	;'x'
   497  007FFA  00                 	db	0
   498  007FFB                     STR_8:
   499  007FFB  25                 	db	37
   500  007FFC  73                 	db	115	;'s'
   501  007FFD  00                 	db	0
   502  007FFE  00                 	db	0	; dummy byte at the end
   503  0000                     
   504                           ; #config settings
   505                           
   506                           	psect	cinit
   507  00712A                     __pcinit:
   508                           	callstack 0
   509  00712A                     start_initialization:
   510                           	callstack 0
   511  00712A                     __initialization:
   512                           	callstack 0
   513                           
   514                           ; Initialize objects allocated to BANK1 (28 bytes)
   515                           ; load TBLPTR registers with __pidataBANK1
   516  00712A  0E20               	movlw	low __pidataBANK1
   517  00712C  6EF6               	movwf	tblptrl,c
   518  00712E  0E6C               	movlw	high __pidataBANK1
   519  007130  6EF7               	movwf	tblptrh,c
   520  007132  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   521  007134  6EF8               	movwf	tblptru,c
   522  007136  EE01  F0C9         	lfsr	0,__pdataBANK1
   523  00713A  EE10 F01C          	lfsr	1,28
   524  00713E                     copy_data0:
   525  00713E  0009               	tblrd		*+
   526  007140  CFF5 FFEE          	movff	tablat,postinc0
   527  007144  50E5               	movf	postdec1,w,c
   528  007146  50E1               	movf	fsr1l,w,c
   529  007148  E1FA               	bnz	copy_data0
   530                           
   531                           ; Initialize objects allocated to BANK0 (19 bytes)
   532                           ; load TBLPTR registers with __pidataBANK0
   533  00714A  0E0D               	movlw	low __pidataBANK0
   534  00714C  6EF6               	movwf	tblptrl,c
   535  00714E  0E6C               	movlw	high __pidataBANK0
   536  007150  6EF7               	movwf	tblptrh,c
   537  007152  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   538  007154  6EF8               	movwf	tblptru,c
   539  007156  EE00  F0C8         	lfsr	0,__pdataBANK0
   540  00715A  EE10 F013          	lfsr	1,19
   541  00715E                     copy_data1:
   542  00715E  0009               	tblrd		*+
   543  007160  CFF5 FFEE          	movff	tablat,postinc0
   544  007164  50E5               	movf	postdec1,w,c
   545  007166  50E1               	movf	fsr1l,w,c
   546  007168  E1FA               	bnz	copy_data1
   547                           
   548                           ; Clear objects allocated to BANK1 (40 bytes)
   549  00716A  EE01  F0A1         	lfsr	0,__pbssBANK1
   550  00716E  0E28               	movlw	40
   551  007170                     clear_0:
   552  007170  6AEE               	clrf	postinc0,c
   553  007172  06E8               	decf	wreg,f,c
   554  007174  E1FD               	bnz	clear_0
   555                           
   556                           ; Clear objects allocated to BANK0 (50 bytes)
   557  007176  EE00  F080         	lfsr	0,__pbssBANK0
   558  00717A  0E32               	movlw	50
   559  00717C                     clear_1:
   560  00717C  6AEE               	clrf	postinc0,c
   561  00717E  06E8               	decf	wreg,f,c
   562  007180  E1FD               	bnz	clear_1
   563                           
   564                           ; Clear objects allocated to COMRAM (2 bytes)
   565  007182  6A7E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   566  007184  6A7D               	clrf	__pbssCOMRAM& (0+255),c
   567  007186                     end_of_initialization:
   568                           	callstack 0
   569  007186                     __end_of__initialization:
   570                           	callstack 0
   571  007186  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   572  007188  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   573  00718A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   574  00718C  6EF8               	movwf	tblptru,c
   575  00718E  0100               	movlb	0
   576  007190  EF00  F00D         	goto	_main	;jump to C main() function
   577                           
   578                           	psect	bssCOMRAM
   579  00007D                     __pbssCOMRAM:
   580                           	callstack 0
   581  00007D                     _flags:
   582                           	callstack 0
   583  00007D                     	ds	2
   584                           
   585                           	psect	bssBANK0
   586  000080                     __pbssBANK0:
   587                           	callstack 0
   588  000080                     roundf@F525:
   589                           	callstack 0
   590  000080                     	ds	4
   591  000084                     _nout:
   592                           	callstack 0
   593  000084                     	ds	2
   594  000086                     _width:
   595                           	callstack 0
   596  000086                     	ds	2
   597  000088                     _prec:
   598                           	callstack 0
   599  000088                     	ds	2
   600  00008A                     _errno:
   601                           	callstack 0
   602  00008A                     	ds	2
   603  00008C                     _mix_step_counter:
   604                           	callstack 0
   605  00008C                     	ds	2
   606  00008E                     _mix_direction:
   607                           	callstack 0
   608  00008E                     	ds	2
   609  000090                     _mix_current_step:
   610                           	callstack 0
   611  000090                     	ds	2
   612  000092                     _dbuf:
   613                           	callstack 0
   614  000092                     	ds	32
   615                           
   616                           	psect	dataBANK0
   617  0000C8                     __pdataBANK0:
   618                           	callstack 0
   619  0000C8                     stoa@F1152:
   620                           	callstack 0
   621  0000C8                     	ds	7
   622  0000CF                     	ds	4
   623  0000D3                     	ds	4
   624  0000D7                     _tmr2_prescaler:
   625                           	callstack 0
   626  0000D7                     	ds	4
   627                           
   628                           	psect	bssBANK1
   629  0001A1                     __pbssBANK1:
   630                           	callstack 0
   631  0001A1                     _end_effector_ready:
   632                           	callstack 0
   633  0001A1                     	ds	2
   634  0001A3                     _joint_ready:
   635                           	callstack 0
   636  0001A3                     	ds	2
   637  0001A5                     _mix_counter:
   638                           	callstack 0
   639  0001A5                     	ds	2
   640  0001A7                     _timer_done:
   641                           	callstack 0
   642  0001A7                     	ds	1
   643  0001A8                     _read_new_char:
   644                           	callstack 0
   645  0001A8                     	ds	1
   646  0001A9                     _msg_sent:
   647                           	callstack 0
   648  0001A9                     	ds	1
   649  0001AA                     _state_changed:
   650                           	callstack 0
   651  0001AA                     	ds	1
   652  0001AB                     _end_effector_stepper:
   653                           	callstack 0
   654  0001AB                     	ds	14
   655  0001B9                     _joint_stepper:
   656                           	callstack 0
   657  0001B9                     	ds	14
   658  0001C7                     _state:
   659                           	callstack 0
   660  0001C7                     	ds	2
   661                           
   662                           	psect	dataBANK1
   663  0001C9                     __pdataBANK1:
   664                           	callstack 0
   665  0001C9                     _state_msgs:
   666                           	callstack 0
   667  0001C9                     	ds	12
   668  0001D5                     _hex_end_effector_values:
   669                           	callstack 0
   670  0001D5                     	ds	8
   671  0001DD                     _hex_joint_values:
   672                           	callstack 0
   673  0001DD                     	ds	8
   674                           
   675                           	psect	cstackBANK1
   676  000100                     __pcstackBANK1:
   677                           	callstack 0
   678  000100                     main@greet_str:
   679                           	callstack 0
   680                           
   681                           ; 160 bytes @ 0x0
   682  000100                     	ds	160
   683  0001A0                     main@rx_char:
   684                           	callstack 0
   685                           
   686                           ; 1 bytes @ 0xA0
   687  0001A0                     	ds	1
   688                           
   689                           	psect	cstackBANK0
   690  0000B2                     __pcstackBANK0:
   691                           	callstack 0
   692  0000B2                     _vsnprintf$1416:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0x0
   696  0000B2                     	ds	2
   697  0000B4                     vsnprintf@cnt:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x2
   701  0000B4                     	ds	2
   702  0000B6                     vsnprintf@f:
   703                           	callstack 0
   704                           
   705                           ; 6 bytes @ 0x4
   706  0000B6                     	ds	6
   707  0000BC                     ?_snprintf:
   708                           	callstack 0
   709  0000BC                     snprintf@s:
   710                           	callstack 0
   711                           
   712                           ; 2 bytes @ 0xA
   713  0000BC                     	ds	2
   714  0000BE                     snprintf@n:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0xC
   718  0000BE                     	ds	2
   719  0000C0                     snprintf@fmt:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0xE
   723  0000C0                     	ds	6
   724  0000C6                     snprintf@ap:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0x14
   728  0000C6                     	ds	2
   729                           
   730                           	psect	cstackCOMRAM
   731  000001                     __pcstackCOMRAM:
   732                           	callstack 0
   733  000001                     ?_strlen:
   734                           	callstack 0
   735  000001                     ?_isupper:
   736                           	callstack 0
   737  000001                     ?_isalpha:
   738                           	callstack 0
   739  000001                     ?_isdigit:
   740                           	callstack 0
   741  000001                     ?_strncmp:
   742                           	callstack 0
   743  000001                     ?_isspace:
   744                           	callstack 0
   745  000001                     ?_islower:
   746                           	callstack 0
   747  000001                     ?___wmul:
   748                           	callstack 0
   749  000001                     ?___flmul:
   750                           	callstack 0
   751  000001                     ?___flneg:
   752                           	callstack 0
   753  000001                     ?___aodiv:
   754                           	callstack 0
   755  000001                     ?___aomod:
   756                           	callstack 0
   757  000001                     ?___lodiv:
   758                           	callstack 0
   759  000001                     ?___lomod:
   760                           	callstack 0
   761  000001                     serial_tx_char@val:
   762                           	callstack 0
   763  000001                     get_reg_value@rx_char:
   764                           	callstack 0
   765  000001                     lcd_wr@val:
   766                           	callstack 0
   767  000001                     state_translator_micro_to_fpga@state:
   768                           	callstack 0
   769  000001                     init_stepper@stepper_motor:
   770                           	callstack 0
   771  000001                     turn_on_current_coil@stepper_motor:
   772                           	callstack 0
   773  000001                     update_current_coil@stepper_motor:
   774                           	callstack 0
   775  000001                     change_direction@stepper_motor:
   776                           	callstack 0
   777  000001                     ___wmul@multiplier:
   778                           	callstack 0
   779  000001                     isalpha@c:
   780                           	callstack 0
   781  000001                     isdigit@c:
   782                           	callstack 0
   783  000001                     isspace@c:
   784                           	callstack 0
   785  000001                     isupper@c:
   786                           	callstack 0
   787  000001                     fputc@c:
   788                           	callstack 0
   789  000001                     strlen@s:
   790                           	callstack 0
   791  000001                     strncmp@_l:
   792                           	callstack 0
   793  000001                     islower@c:
   794                           	callstack 0
   795  000001                     ___flge@ff1:
   796                           	callstack 0
   797  000001                     ___flneg@f1:
   798                           	callstack 0
   799  000001                     ___flmul@b:
   800                           	callstack 0
   801  000001                     ___aodiv@dividend:
   802                           	callstack 0
   803  000001                     ___aomod@dividend:
   804                           	callstack 0
   805  000001                     ___lodiv@dividend:
   806                           	callstack 0
   807  000001                     ___lomod@dividend:
   808                           	callstack 0
   809                           
   810                           ; 8 bytes @ 0x0
   811  000001                     	ds	1
   812  000002                     lcd_cmd@val:
   813                           	callstack 0
   814  000002                     lcd_dat@val:
   815                           	callstack 0
   816                           
   817                           ; 1 bytes @ 0x1
   818  000002                     	ds	1
   819  000003                     ??_lcd_init:
   820  000003                     ??_change_direction:
   821  000003                     ??_isupper:
   822  000003                     ??_isalpha:
   823  000003                     ??_isdigit:
   824  000003                     ??_isspace:
   825  000003                     ??_islower:
   826  000003                     ??_turn_on_current_coil:
   827  000003                     ??_update_current_coil:
   828  000003                     lcd_str@str:
   829                           	callstack 0
   830  000003                     state_translator_fpga_to_micro@state:
   831                           	callstack 0
   832  000003                     init_stepper@current_coil:
   833                           	callstack 0
   834  000003                     ___wmul@multiplicand:
   835                           	callstack 0
   836  000003                     fputc@fp:
   837                           	callstack 0
   838  000003                     strlen@a:
   839                           	callstack 0
   840  000003                     strncmp@_r:
   841                           	callstack 0
   842                           
   843                           ; 2 bytes @ 0x2
   844  000003                     	ds	2
   845  000005                     ??_lcd_str:
   846  000005                     ??_fputc:
   847  000005                     state_translator_fpga_to_micro@state_machine_code:
   848                           	callstack 0
   849  000005                     state_translator_micro_to_fpga@state_machine_code:
   850                           	callstack 0
   851  000005                     init_stepper@step_counter:
   852                           	callstack 0
   853  000005                     ___wmul@product:
   854                           	callstack 0
   855  000005                     strncmp@n:
   856                           	callstack 0
   857  000005                     ___flge@ff2:
   858                           	callstack 0
   859  000005                     ___flmul@a:
   860                           	callstack 0
   861                           
   862                           ; 4 bytes @ 0x4
   863  000005                     	ds	2
   864  000007                     ??_strncmp:
   865  000007                     ?_reach_goal:
   866                           	callstack 0
   867  000007                     ?_toupper:
   868                           	callstack 0
   869  000007                     lcd_str@i:
   870                           	callstack 0
   871  000007                     _isspace$1706:
   872                           	callstack 0
   873  000007                     init_stepper@direction:
   874                           	callstack 0
   875  000007                     reach_goal@stepper_motor:
   876                           	callstack 0
   877  000007                     toupper@c:
   878                           	callstack 0
   879                           
   880                           ; 2 bytes @ 0x6
   881  000007                     	ds	1
   882  000008                     ?_atoi:
   883                           	callstack 0
   884  000008                     atoi@s:
   885                           	callstack 0
   886  000008                     strncmp@l:
   887                           	callstack 0
   888                           
   889                           ; 2 bytes @ 0x7
   890  000008                     	ds	1
   891  000009                     ??___flmul:
   892  000009                     ??_toupper:
   893  000009                     ??___flge:
   894  000009                     init_stepper@hex_coil_register_values:
   895                           	callstack 0
   896  000009                     reach_goal@goal_to_reach:
   897                           	callstack 0
   898  000009                     ___aodiv@divisor:
   899                           	callstack 0
   900  000009                     ___aomod@divisor:
   901                           	callstack 0
   902  000009                     ___lodiv@divisor:
   903                           	callstack 0
   904  000009                     ___lomod@divisor:
   905                           	callstack 0
   906                           
   907                           ; 8 bytes @ 0x8
   908  000009                     	ds	1
   909  00000A                     ??_atoi:
   910  00000A                     ?_stoa:
   911                           	callstack 0
   912  00000A                     stoa@fp:
   913                           	callstack 0
   914  00000A                     fputs@s:
   915                           	callstack 0
   916  00000A                     strncmp@r:
   917                           	callstack 0
   918                           
   919                           ; 2 bytes @ 0x9
   920  00000A                     	ds	1
   921  00000B                     ??_init_stepper:
   922  00000B                     ??_reach_goal:
   923                           
   924                           ; 1 bytes @ 0xA
   925  00000B                     	ds	1
   926  00000C                     stoa@s:
   927                           	callstack 0
   928  00000C                     fputs@fp:
   929                           	callstack 0
   930                           
   931                           ; 2 bytes @ 0xB
   932  00000C                     	ds	1
   933  00000D                     ___flmul@sign:
   934                           	callstack 0
   935  00000D                     _toupper$1766:
   936                           	callstack 0
   937                           
   938                           ; 2 bytes @ 0xC
   939  00000D                     	ds	1
   940  00000E                     ??_stoa:
   941  00000E                     fputs@c:
   942                           	callstack 0
   943  00000E                     atoi@neg:
   944                           	callstack 0
   945  00000E                     ___flmul@grs:
   946                           	callstack 0
   947                           
   948                           ; 4 bytes @ 0xD
   949  00000E                     	ds	1
   950  00000F                     init_stepper@i:
   951                           	callstack 0
   952  00000F                     fputs@i:
   953                           	callstack 0
   954  00000F                     stoa@nuls:
   955                           	callstack 0
   956                           
   957                           ; 7 bytes @ 0xE
   958  00000F                     	ds	1
   959  000010                     _atoi$1678:
   960                           	callstack 0
   961                           
   962                           ; 2 bytes @ 0xF
   963  000010                     	ds	1
   964  000011                     ?_pad:
   965                           	callstack 0
   966  000011                     ___aodiv@counter:
   967                           	callstack 0
   968  000011                     ___aomod@counter:
   969                           	callstack 0
   970  000011                     ___lomod@counter:
   971                           	callstack 0
   972  000011                     pad@fp:
   973                           	callstack 0
   974  000011                     ___lodiv@quotient:
   975                           	callstack 0
   976                           
   977                           ; 8 bytes @ 0x10
   978  000011                     	ds	1
   979  000012                     ___aodiv@sign:
   980                           	callstack 0
   981  000012                     ___aomod@sign:
   982                           	callstack 0
   983  000012                     ___flmul@aexp:
   984                           	callstack 0
   985  000012                     _atoi$1680:
   986                           	callstack 0
   987                           
   988                           ; 2 bytes @ 0x11
   989  000012                     	ds	1
   990  000013                     ?_abs:
   991                           	callstack 0
   992  000013                     ___flmul@bexp:
   993                           	callstack 0
   994  000013                     pad@buf:
   995                           	callstack 0
   996  000013                     abs@a:
   997                           	callstack 0
   998  000013                     ___aodiv@quotient:
   999                           	callstack 0
  1000                           
  1001                           ; 8 bytes @ 0x12
  1002  000013                     	ds	1
  1003  000014                     _atoi$1679:
  1004                           	callstack 0
  1005  000014                     ___flmul@prod:
  1006                           	callstack 0
  1007                           
  1008                           ; 4 bytes @ 0x13
  1009  000014                     	ds	1
  1010  000015                     ??_abs:
  1011  000015                     pad@p:
  1012                           	callstack 0
  1013  000015                     atoi@n:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x14
  1017  000015                     	ds	1
  1018  000016                     stoa@i:
  1019                           	callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x15
  1022  000016                     	ds	1
  1023  000017                     ??_pad:
  1024                           
  1025                           ; 1 bytes @ 0x16
  1026  000017                     	ds	1
  1027  000018                     ___flmul@temp:
  1028                           	callstack 0
  1029  000018                     pad@i:
  1030                           	callstack 0
  1031  000018                     stoa@w:
  1032                           	callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x17
  1035  000018                     	ds	1
  1036  000019                     ___lodiv@counter:
  1037                           	callstack 0
  1038                           
  1039                           ; 1 bytes @ 0x18
  1040  000019                     	ds	1
  1041  00001A                     ?___fldiv:
  1042                           	callstack 0
  1043  00001A                     pad@w:
  1044                           	callstack 0
  1045  00001A                     stoa@cp:
  1046                           	callstack 0
  1047  00001A                     ___fldiv@b:
  1048                           	callstack 0
  1049                           
  1050                           ; 4 bytes @ 0x19
  1051  00001A                     	ds	2
  1052  00001C                     ?_ctoa:
  1053                           	callstack 0
  1054  00001C                     ?_dtoa:
  1055                           	callstack 0
  1056  00001C                     ?_otoa:
  1057                           	callstack 0
  1058  00001C                     ?_utoa:
  1059                           	callstack 0
  1060  00001C                     ?_xtoa:
  1061                           	callstack 0
  1062  00001C                     ctoa@fp:
  1063                           	callstack 0
  1064  00001C                     dtoa@fp:
  1065                           	callstack 0
  1066  00001C                     otoa@fp:
  1067                           	callstack 0
  1068  00001C                     stoa@p:
  1069                           	callstack 0
  1070  00001C                     utoa@fp:
  1071                           	callstack 0
  1072  00001C                     xtoa@fp:
  1073                           	callstack 0
  1074                           
  1075                           ; 2 bytes @ 0x1B
  1076  00001C                     	ds	2
  1077  00001E                     ctoa@c:
  1078                           	callstack 0
  1079  00001E                     stoa@l:
  1080                           	callstack 0
  1081  00001E                     ___fldiv@a:
  1082                           	callstack 0
  1083  00001E                     dtoa@d:
  1084                           	callstack 0
  1085  00001E                     otoa@d:
  1086                           	callstack 0
  1087  00001E                     utoa@d:
  1088                           	callstack 0
  1089  00001E                     xtoa@d:
  1090                           	callstack 0
  1091                           
  1092                           ; 8 bytes @ 0x1D
  1093  00001E                     	ds	1
  1094  00001F                     ctoa@w:
  1095                           	callstack 0
  1096                           
  1097                           ; 2 bytes @ 0x1E
  1098  00001F                     	ds	3
  1099  000022                     ??___fldiv:
  1100                           
  1101                           ; 1 bytes @ 0x21
  1102  000022                     	ds	4
  1103  000026                     ??_dtoa:
  1104  000026                     ??_otoa:
  1105  000026                     ??_utoa:
  1106  000026                     xtoa@x:
  1107                           	callstack 0
  1108  000026                     ___fldiv@rem:
  1109                           	callstack 0
  1110                           
  1111                           ; 4 bytes @ 0x25
  1112  000026                     	ds	1
  1113  000027                     ??_xtoa:
  1114                           
  1115                           ; 1 bytes @ 0x26
  1116  000027                     	ds	3
  1117  00002A                     ___fldiv@sign:
  1118                           	callstack 0
  1119                           
  1120                           ; 1 bytes @ 0x29
  1121  00002A                     	ds	1
  1122  00002B                     ___fldiv@new_exp:
  1123                           	callstack 0
  1124                           
  1125                           ; 2 bytes @ 0x2A
  1126  00002B                     	ds	2
  1127  00002D                     ___fldiv@grs:
  1128                           	callstack 0
  1129                           
  1130                           ; 4 bytes @ 0x2C
  1131  00002D                     	ds	1
  1132  00002E                     _dtoa$1502:
  1133                           	callstack 0
  1134  00002E                     otoa@p:
  1135                           	callstack 0
  1136  00002E                     utoa@p:
  1137                           	callstack 0
  1138                           
  1139                           ; 2 bytes @ 0x2D
  1140  00002E                     	ds	1
  1141  00002F                     _xtoa$1538:
  1142                           	callstack 0
  1143                           
  1144                           ; 2 bytes @ 0x2E
  1145  00002F                     	ds	1
  1146  000030                     dtoa@p:
  1147                           	callstack 0
  1148  000030                     otoa@t:
  1149                           	callstack 0
  1150  000030                     utoa@w:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x2F
  1154  000030                     	ds	1
  1155  000031                     ___fldiv@bexp:
  1156                           	callstack 0
  1157  000031                     _xtoa$1539:
  1158                           	callstack 0
  1159                           
  1160                           ; 2 bytes @ 0x30
  1161  000031                     	ds	1
  1162  000032                     ___fldiv@aexp:
  1163                           	callstack 0
  1164  000032                     dtoa@w:
  1165                           	callstack 0
  1166  000032                     otoa@w:
  1167                           	callstack 0
  1168  000032                     utoa@n:
  1169                           	callstack 0
  1170                           
  1171                           ; 8 bytes @ 0x31
  1172  000032                     	ds	1
  1173  000033                     ?___fladd:
  1174                           	callstack 0
  1175  000033                     xtoa@p:
  1176                           	callstack 0
  1177  000033                     ___fladd@b:
  1178                           	callstack 0
  1179                           
  1180                           ; 4 bytes @ 0x32
  1181  000033                     	ds	1
  1182  000034                     dtoa@s:
  1183                           	callstack 0
  1184  000034                     otoa@n:
  1185                           	callstack 0
  1186                           
  1187                           ; 8 bytes @ 0x33
  1188  000034                     	ds	1
  1189  000035                     xtoa@w:
  1190                           	callstack 0
  1191                           
  1192                           ; 2 bytes @ 0x34
  1193  000035                     	ds	1
  1194  000036                     dtoa@n:
  1195                           	callstack 0
  1196                           
  1197                           ; 8 bytes @ 0x35
  1198  000036                     	ds	1
  1199  000037                     ___fladd@a:
  1200                           	callstack 0
  1201  000037                     xtoa@n:
  1202                           	callstack 0
  1203                           
  1204                           ; 8 bytes @ 0x36
  1205  000037                     	ds	3
  1206  00003A                     utoa@i:
  1207                           	callstack 0
  1208                           
  1209                           ; 2 bytes @ 0x39
  1210  00003A                     	ds	1
  1211  00003B                     ??___fladd:
  1212                           
  1213                           ; 1 bytes @ 0x3A
  1214  00003B                     	ds	1
  1215  00003C                     otoa@i:
  1216                           	callstack 0
  1217                           
  1218                           ; 2 bytes @ 0x3B
  1219  00003C                     	ds	2
  1220  00003E                     dtoa@i:
  1221                           	callstack 0
  1222                           
  1223                           ; 2 bytes @ 0x3D
  1224  00003E                     	ds	1
  1225  00003F                     ___fladd@signs:
  1226                           	callstack 0
  1227  00003F                     xtoa@i:
  1228                           	callstack 0
  1229                           
  1230                           ; 2 bytes @ 0x3E
  1231  00003F                     	ds	1
  1232  000040                     ___fladd@aexp:
  1233                           	callstack 0
  1234                           
  1235                           ; 1 bytes @ 0x3F
  1236  000040                     	ds	1
  1237  000041                     ___fladd@bexp:
  1238                           	callstack 0
  1239  000041                     xtoa@c:
  1240                           	callstack 0
  1241                           
  1242                           ; 2 bytes @ 0x40
  1243  000041                     	ds	1
  1244  000042                     ___fladd@grs:
  1245                           	callstack 0
  1246                           
  1247                           ; 1 bytes @ 0x41
  1248  000042                     	ds	1
  1249  000043                     ?_vfpfcnvrt:
  1250                           	callstack 0
  1251  000043                     ?___flsub:
  1252                           	callstack 0
  1253  000043                     vfpfcnvrt@fp:
  1254                           	callstack 0
  1255  000043                     ___flsub@b:
  1256                           	callstack 0
  1257                           
  1258                           ; 4 bytes @ 0x42
  1259  000043                     	ds	2
  1260  000045                     vfpfcnvrt@fmt:
  1261                           	callstack 0
  1262                           
  1263                           ; 2 bytes @ 0x44
  1264  000045                     	ds	2
  1265  000047                     vfpfcnvrt@ap:
  1266                           	callstack 0
  1267  000047                     ___flsub@a:
  1268                           	callstack 0
  1269                           
  1270                           ; 4 bytes @ 0x46
  1271  000047                     	ds	2
  1272  000049                     ??_vfpfcnvrt:
  1273                           
  1274                           ; 1 bytes @ 0x48
  1275  000049                     	ds	2
  1276  00004B                     ?_roundf:
  1277                           	callstack 0
  1278  00004B                     roundf@x:
  1279                           	callstack 0
  1280                           
  1281                           ; 4 bytes @ 0x4A
  1282  00004B                     	ds	2
  1283  00004D                     vfpfcnvrt@cp:
  1284                           	callstack 0
  1285                           
  1286                           ; 2 bytes @ 0x4C
  1287  00004D                     	ds	2
  1288  00004F                     ??_roundf:
  1289  00004F                     vfpfcnvrt@done:
  1290                           	callstack 0
  1291                           
  1292                           ; 2 bytes @ 0x4E
  1293  00004F                     	ds	2
  1294  000051                     _vfpfcnvrt$1553:
  1295                           	callstack 0
  1296                           
  1297                           ; 2 bytes @ 0x50
  1298  000051                     	ds	2
  1299  000053                     _vfpfcnvrt$1554:
  1300                           	callstack 0
  1301  000053                     _roundf$2008:
  1302                           	callstack 0
  1303                           
  1304                           ; 4 bytes @ 0x52
  1305  000053                     	ds	2
  1306  000055                     vfpfcnvrt@ll:
  1307                           	callstack 0
  1308                           
  1309                           ; 8 bytes @ 0x54
  1310  000055                     	ds	2
  1311  000057                     roundf@e:
  1312                           	callstack 0
  1313                           
  1314                           ; 2 bytes @ 0x56
  1315  000057                     	ds	2
  1316  000059                     _roundf$2007:
  1317                           	callstack 0
  1318                           
  1319                           ; 4 bytes @ 0x58
  1320  000059                     	ds	4
  1321  00005D                     vfpfcnvrt@vp:
  1322                           	callstack 0
  1323  00005D                     roundf@u:
  1324                           	callstack 0
  1325                           
  1326                           ; 4 bytes @ 0x5C
  1327  00005D                     	ds	2
  1328  00005F                     vfpfcnvrt@c:
  1329                           	callstack 0
  1330                           
  1331                           ; 1 bytes @ 0x5E
  1332  00005F                     	ds	1
  1333  000060                     vfpfcnvrt@llu:
  1334                           	callstack 0
  1335                           
  1336                           ; 8 bytes @ 0x5F
  1337  000060                     	ds	1
  1338  000061                     roundf@y:
  1339                           	callstack 0
  1340                           
  1341                           ; 4 bytes @ 0x60
  1342  000061                     	ds	4
  1343  000065                     ?___fltol:
  1344                           	callstack 0
  1345  000065                     ___fltol@f1:
  1346                           	callstack 0
  1347                           
  1348                           ; 4 bytes @ 0x64
  1349  000065                     	ds	3
  1350  000068                     ?_vfprintf:
  1351                           	callstack 0
  1352  000068                     vfprintf@fp:
  1353                           	callstack 0
  1354                           
  1355                           ; 2 bytes @ 0x67
  1356  000068                     	ds	1
  1357  000069                     ??___fltol:
  1358                           
  1359                           ; 1 bytes @ 0x68
  1360  000069                     	ds	1
  1361  00006A                     vfprintf@fmt:
  1362                           	callstack 0
  1363                           
  1364                           ; 2 bytes @ 0x69
  1365  00006A                     	ds	2
  1366  00006C                     vfprintf@ap:
  1367                           	callstack 0
  1368                           
  1369                           ; 2 bytes @ 0x6B
  1370  00006C                     	ds	1
  1371  00006D                     ___fltol@sign1:
  1372                           	callstack 0
  1373                           
  1374                           ; 1 bytes @ 0x6C
  1375  00006D                     	ds	1
  1376  00006E                     ___fltol@exp1:
  1377                           	callstack 0
  1378  00006E                     vfprintf@cfmt:
  1379                           	callstack 0
  1380                           
  1381                           ; 2 bytes @ 0x6D
  1382  00006E                     	ds	1
  1383  00006F                     update_pwm_duty_ccp1@time_up:
  1384                           	callstack 0
  1385  00006F                     _init_timer_2$2006:
  1386                           	callstack 0
  1387                           
  1388                           ; 4 bytes @ 0x6E
  1389  00006F                     	ds	1
  1390  000070                     ?_vsnprintf:
  1391                           	callstack 0
  1392  000070                     vsnprintf@s:
  1393                           	callstack 0
  1394                           
  1395                           ; 2 bytes @ 0x6F
  1396  000070                     	ds	2
  1397  000072                     vsnprintf@n:
  1398                           	callstack 0
  1399                           
  1400                           ; 2 bytes @ 0x71
  1401  000072                     	ds	1
  1402  000073                     ??_update_pwm_duty_ccp1:
  1403                           
  1404                           ; 1 bytes @ 0x72
  1405  000073                     	ds	1
  1406  000074                     vsnprintf@fmt:
  1407                           	callstack 0
  1408                           
  1409                           ; 2 bytes @ 0x73
  1410  000074                     	ds	1
  1411  000075                     update_pwm_duty_ccp1@new_duty:
  1412                           	callstack 0
  1413                           
  1414                           ; 2 bytes @ 0x74
  1415  000075                     	ds	1
  1416  000076                     vsnprintf@ap:
  1417                           	callstack 0
  1418                           
  1419                           ; 2 bytes @ 0x75
  1420  000076                     	ds	1
  1421  000077                     update_pwm_duty_ccp1@lsbs_duty:
  1422                           	callstack 0
  1423                           
  1424                           ; 1 bytes @ 0x76
  1425  000077                     	ds	1
  1426  000078                     ??_vsnprintf:
  1427                           
  1428                           ; 1 bytes @ 0x77
  1429  000078                     	ds	4
  1430  00007C                     ??_main:
  1431                           
  1432                           ; 1 bytes @ 0x7B
  1433  00007C                     	ds	1
  1434                           
  1435 ;;
  1436 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1437 ;;
  1438 ;; *************** function _main *****************
  1439 ;; Defined at:
  1440 ;;		line 54 in file "main.c"
  1441 ;; Parameters:    Size  Location     Type
  1442 ;;		None
  1443 ;; Auto vars:     Size  Location     Type
  1444 ;;  greet_str     160    0[BANK1 ] PTR const unsigned char 
  1445 ;;		 -> ?_snprintf(2), STR_6(7), STR_5(9), STR_4(39), 
  1446 ;;		 -> STR_3(9), STR_2(64), STR_1(49), 
  1447 ;;  rx_char         1  160[BANK1 ] unsigned char 
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  1    wreg      void 
  1450 ;; Registers used:
  1451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1457 ;;      Params:         0       0       0       0       0       0       0
  1458 ;;      Locals:         0       0     161       0       0       0       0
  1459 ;;      Temps:          1       0       0       0       0       0       0
  1460 ;;      Totals:         1       0     161       0       0       0       0
  1461 ;;Total ram usage:      162 bytes
  1462 ;; Hardware stack levels required when called:   10
  1463 ;; This function calls:
  1464 ;;		___wmul
  1465 ;;		_change_direction
  1466 ;;		_get_reg_value
  1467 ;;		_init_PORTS
  1468 ;;		_init_USART
  1469 ;;		_init_ccp1
  1470 ;;		_init_interrupts
  1471 ;;		_init_stepper
  1472 ;;		_init_timer_0
  1473 ;;		_init_timer_2
  1474 ;;		_lcd_cmd
  1475 ;;		_lcd_init
  1476 ;;		_lcd_str
  1477 ;;		_reach_goal
  1478 ;;		_serial_tx_char
  1479 ;;		_snprintf
  1480 ;;		_state_translator_fpga_to_micro
  1481 ;;		_state_translator_micro_to_fpga
  1482 ;; This function is called by:
  1483 ;;		Startup code after reset
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           
  1487                           	psect	text0
  1488  001A00                     __ptext0:
  1489                           	callstack 0
  1490  001A00                     _main:
  1491                           	callstack 21
  1492  001A00  FFFF               	dw	65535	; assembler added errata NOP
  1493                           
  1494                           ;main.c: 56:     init_PORTS();
  1495  001A02  EC8F  F036         	call	_init_PORTS	;wreg free
  1496  001A06                     
  1497                           ;main.c: 57:     init_USART();
  1498  001A06  ECF8  F036         	call	_init_USART	;wreg free
  1499  001A0A                     
  1500                           ;main.c: 58:     init_timer_2();
  1501  001A0A  ECB2  F03A         	call	_init_timer_2	;wreg free
  1502  001A0E                     
  1503                           ;main.c: 59:     init_ccp1();
  1504  001A0E  EC2E  F036         	call	_init_ccp1	;wreg free
  1505  001A12                     
  1506                           ;main.c: 60:     init_interrupts();
  1507  001A12  ECF2  F035         	call	_init_interrupts	;wreg free
  1508  001A16                     
  1509                           ;main.c: 61:     init_stepper(&joint_stepper, 0, 0, 1, hex_joint_values);
  1510  001A16  0EB9               	movlw	low _joint_stepper
  1511  001A18  6E01               	movwf	init_stepper@stepper_motor^0,c
  1512  001A1A  0E01               	movlw	high _joint_stepper
  1513  001A1C  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  1514  001A1E  0E00               	movlw	0
  1515  001A20  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  1516  001A22  0E00               	movlw	0
  1517  001A24  6E03               	movwf	init_stepper@current_coil^0,c
  1518  001A26  0E00               	movlw	0
  1519  001A28  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  1520  001A2A  0E00               	movlw	0
  1521  001A2C  6E05               	movwf	init_stepper@step_counter^0,c
  1522  001A2E  0E00               	movlw	0
  1523  001A30  6E08               	movwf	(init_stepper@direction+1)^0,c
  1524  001A32  0E01               	movlw	1
  1525  001A34  6E07               	movwf	init_stepper@direction^0,c
  1526  001A36  0EDD               	movlw	low _hex_joint_values
  1527  001A38  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  1528  001A3A  0E01               	movlw	high _hex_joint_values
  1529  001A3C  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  1530  001A3E  ECF9  F039         	call	_init_stepper	;wreg free
  1531  001A42                     
  1532                           ;main.c: 62:     init_stepper(&end_effector_stepper, 0, 0, 1, hex_end_effector_values);
  1533  001A42  0EAB               	movlw	low _end_effector_stepper
  1534  001A44  6E01               	movwf	init_stepper@stepper_motor^0,c
  1535  001A46  0E01               	movlw	high _end_effector_stepper
  1536  001A48  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  1537  001A4A  0E00               	movlw	0
  1538  001A4C  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  1539  001A4E  0E00               	movlw	0
  1540  001A50  6E03               	movwf	init_stepper@current_coil^0,c
  1541  001A52  0E00               	movlw	0
  1542  001A54  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  1543  001A56  0E00               	movlw	0
  1544  001A58  6E05               	movwf	init_stepper@step_counter^0,c
  1545  001A5A  0E00               	movlw	0
  1546  001A5C  6E08               	movwf	(init_stepper@direction+1)^0,c
  1547  001A5E  0E01               	movlw	1
  1548  001A60  6E07               	movwf	init_stepper@direction^0,c
  1549  001A62  0ED5               	movlw	low _hex_end_effector_values
  1550  001A64  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  1551  001A66  0E01               	movlw	high _hex_end_effector_values
  1552  001A68  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  1553  001A6A  ECF9  F039         	call	_init_stepper	;wreg free
  1554  001A6E                     
  1555                           ;main.c: 63:     lcd_init();
  1556  001A6E  EC76  F039         	call	_lcd_init	;wreg free
  1557  001A72                     
  1558                           ;main.c: 64:     lcd_cmd(0x0C);
  1559  001A72  0E0C               	movlw	12
  1560  001A74  EC50  F036         	call	_lcd_cmd
  1561  001A78                     
  1562                           ;main.c: 66:     lcd_cmd(0x01);
  1563  001A78  0E01               	movlw	1
  1564  001A7A  EC50  F036         	call	_lcd_cmd
  1565  001A7E                     
  1566                           ;main.c: 67:     lcd_cmd(0x80);
  1567  001A7E  0E80               	movlw	128
  1568  001A80  EC50  F036         	call	_lcd_cmd
  1569  001A84                     
  1570                           ;main.c: 68:     lcd_str("Device has been reset");
  1571  001A84  0E9B               	movlw	low STR_7
  1572  001A86  6E03               	movwf	lcd_str@str^0,c
  1573  001A88  0E7F               	movlw	high STR_7
  1574  001A8A  6E04               	movwf	(lcd_str@str+1)^0,c
  1575  001A8C  ECB5  F039         	call	_lcd_str	;wreg free
  1576  001A90                     
  1577                           ;main.c: 70:     (INTCONbits.GIE = 1);
  1578  001A90  8EF2               	bsf	242,7,c	;volatile
  1579  001A92                     
  1580                           ;main.c: 72:     mix_counter = 0;
  1581  001A92  0E00               	movlw	0
  1582  001A94  0101               	movlb	1	; () banked
  1583  001A96  6FA6               	movwf	(_mix_counter+1)& (0+255),b
  1584  001A98  0E00               	movlw	0
  1585  001A9A  6FA5               	movwf	_mix_counter& (0+255),b
  1586  001A9C                     l5179:
  1587  001A9C  FFFF               	dw	65535	; assembler added errata NOP
  1588                           
  1589                           ;main.c: 75:         if (state_changed){
  1590  001A9E  0101               	movlb	1	; () banked
  1591  001AA0  51AA               	movf	_state_changed& (0+255),w,b
  1592  001AA2  B4D8               	btfsc	status,2,c
  1593  001AA4  EF56  F00D         	goto	u6231
  1594  001AA8  EF59  F00D         	goto	u6230
  1595  001AAC                     u6231:
  1596  001AAC  FFFF               	dw	65535	; assembler added errata NOP
  1597  001AAE  EFB3  F00D         	goto	l5203
  1598  001AB2                     u6230:
  1599  001AB2  FFFF               	dw	65535	; assembler added errata NOP
  1600  001AB4                     
  1601                           ; BSR set to: 1
  1602                           ;main.c: 76:             const char* greet_str[80];;main.c: 77:             if (read_new
      +                          _char){
  1603  001AB4  51A8               	movf	_read_new_char& (0+255),w,b
  1604  001AB6  B4D8               	btfsc	status,2,c
  1605  001AB8  EF60  F00D         	goto	u6241
  1606  001ABC  EF63  F00D         	goto	u6240
  1607  001AC0                     u6241:
  1608  001AC0  FFFF               	dw	65535	; assembler added errata NOP
  1609  001AC2  EF86  F00D         	goto	l5193
  1610  001AC6                     u6240:
  1611  001AC6  FFFF               	dw	65535	; assembler added errata NOP
  1612  001AC8                     
  1613                           ; BSR set to: 1
  1614                           ;main.c: 78:                 rx_char = get_reg_value();
  1615  001AC8  ECFE  F035         	call	_get_reg_value	;wreg free
  1616  001ACC  0101               	movlb	1	; () banked
  1617  001ACE  6FA0               	movwf	main@rx_char& (0+255),b
  1618  001AD0                     
  1619                           ; BSR set to: 1
  1620                           ;main.c: 79:                 if (rx_char == 'u'){
  1621  001AD0  0E75               	movlw	117
  1622  001AD2  19A0               	xorwf	main@rx_char& (0+255),w,b
  1623  001AD4  A4D8               	btfss	status,2,c
  1624  001AD6  EF6F  F00D         	goto	u6251
  1625  001ADA  EF72  F00D         	goto	u6250
  1626  001ADE                     u6251:
  1627  001ADE  FFFF               	dw	65535	; assembler added errata NOP
  1628  001AE0  EF76  F00D         	goto	l124
  1629  001AE4                     u6250:
  1630  001AE4  FFFF               	dw	65535	; assembler added errata NOP
  1631  001AE6                     
  1632                           ; BSR set to: 1
  1633                           ;main.c: 80:                     serial_tx_char(rx_char);
  1634  001AE6  51A0               	movf	main@rx_char& (0+255),w,b
  1635  001AE8  EC1E  F036         	call	_serial_tx_char
  1636  001AEC                     l124:
  1637  001AEC  FFFF               	dw	65535	; assembler added errata NOP
  1638                           
  1639                           ;main.c: 82:                 serial_tx_char(rx_char);
  1640  001AEE  0101               	movlb	1	; () banked
  1641  001AF0  51A0               	movf	main@rx_char& (0+255),w,b
  1642  001AF2  EC1E  F036         	call	_serial_tx_char
  1643  001AF6                     
  1644                           ;main.c: 83:                 state_translator_fpga_to_micro(rx_char, &state);
  1645  001AF6  0EC7               	movlw	low _state
  1646  001AF8  6E03               	movwf	state_translator_fpga_to_micro@state^0,c
  1647  001AFA  0E01               	movlw	high _state
  1648  001AFC  6E04               	movwf	(state_translator_fpga_to_micro@state+1)^0,c
  1649  001AFE  0101               	movlb	1	; () banked
  1650  001B00  51A0               	movf	main@rx_char& (0+255),w,b
  1651  001B02  ECDC  F03C         	call	_state_translator_fpga_to_micro
  1652  001B06                     
  1653                           ;main.c: 84:                 read_new_char = 0;
  1654  001B06  0E00               	movlw	0
  1655  001B08  0101               	movlb	1	; () banked
  1656  001B0A  6FA8               	movwf	_read_new_char& (0+255),b
  1657  001B0C                     l5193:
  1658  001B0C  FFFF               	dw	65535	; assembler added errata NOP
  1659                           
  1660                           ; BSR set to: 1
  1661                           ;main.c: 86:             snprintf(greet_str, sizeof(greet_str), "%s", state_msgs[state])
      +                          ;
  1662  001B0E  0E00               	movlw	low main@greet_str
  1663  001B10  0100               	movlb	0	; () banked
  1664  001B12  6FBC               	movwf	snprintf@s& (0+255),b
  1665  001B14  0E01               	movlw	high main@greet_str
  1666  001B16  6FBD               	movwf	(snprintf@s+1)& (0+255),b
  1667  001B18  0E00               	movlw	0
  1668  001B1A  6FBF               	movwf	(snprintf@n+1)& (0+255),b
  1669  001B1C  0EA0               	movlw	160
  1670  001B1E  6FBE               	movwf	snprintf@n& (0+255),b
  1671  001B20  0EFB               	movlw	low STR_8
  1672  001B22  6FC0               	movwf	snprintf@fmt& (0+255),b
  1673  001B24  0E7F               	movlw	high STR_8
  1674  001B26  6FC1               	movwf	(snprintf@fmt+1)& (0+255),b
  1675  001B28  90D8               	bcf	status,0,c
  1676  001B2A  0101               	movlb	1	; () banked
  1677  001B2C  35C7               	rlcf	_state& (0+255),w,b
  1678  001B2E  6ED9               	movwf	fsr2l,c
  1679  001B30  35C8               	rlcf	(_state+1)& (0+255),w,b
  1680  001B32  6EDA               	movwf	fsr2h,c
  1681  001B34  0EC9               	movlw	low _state_msgs
  1682  001B36  26D9               	addwf	fsr2l,f,c
  1683  001B38  0E01               	movlw	high _state_msgs
  1684  001B3A  22DA               	addwfc	fsr2h,f,c
  1685  001B3C  CFDE F0C2          	movff	postinc2,?_snprintf+6
  1686  001B40  CFDD F0C3          	movff	postdec2,?_snprintf+7
  1687  001B44  ECA5  F036         	call	_snprintf	;wreg free
  1688  001B48                     
  1689                           ;main.c: 87:             lcd_cmd(0x01);
  1690  001B48  0E01               	movlw	1
  1691  001B4A  EC50  F036         	call	_lcd_cmd
  1692  001B4E                     
  1693                           ;main.c: 88:             lcd_cmd(0x80);
  1694  001B4E  0E80               	movlw	128
  1695  001B50  EC50  F036         	call	_lcd_cmd
  1696  001B54                     
  1697                           ;main.c: 89:             lcd_str(greet_str);
  1698  001B54  0E00               	movlw	low main@greet_str
  1699  001B56  6E03               	movwf	lcd_str@str^0,c
  1700  001B58  0E01               	movlw	high main@greet_str
  1701  001B5A  6E04               	movwf	(lcd_str@str+1)^0,c
  1702  001B5C  ECB5  F039         	call	_lcd_str	;wreg free
  1703  001B60                     
  1704                           ;main.c: 91:             state_changed = 0;
  1705  001B60  0E00               	movlw	0
  1706  001B62  0101               	movlb	1	; () banked
  1707  001B64  6FAA               	movwf	_state_changed& (0+255),b
  1708  001B66                     l5203:
  1709  001B66  FFFF               	dw	65535	; assembler added errata NOP
  1710                           
  1711                           ; BSR set to: 1
  1712                           ;main.c: 95:         if (state == 2){
  1713  001B68  0E02               	movlw	2
  1714  001B6A  19C7               	xorwf	_state& (0+255),w,b
  1715  001B6C  11C8               	iorwf	(_state+1)& (0+255),w,b
  1716  001B6E  A4D8               	btfss	status,2,c
  1717  001B70  EFBC  F00D         	goto	u6261
  1718  001B74  EFBF  F00D         	goto	u6260
  1719  001B78                     u6261:
  1720  001B78  FFFF               	dw	65535	; assembler added errata NOP
  1721  001B7A  EFC3  F00D         	goto	l125
  1722  001B7E                     u6260:
  1723  001B7E  FFFF               	dw	65535	; assembler added errata NOP
  1724  001B80                     
  1725                           ; BSR set to: 1
  1726                           ;main.c: 96:             LATAbits.LATA1 = 1;
  1727  001B80  8289               	bsf	137,1,c	;volatile
  1728                           
  1729                           ;main.c: 97:         } else {
  1730  001B82  EF4E  F00D         	goto	l5179
  1731  001B86                     l125:
  1732  001B86  FFFF               	dw	65535	; assembler added errata NOP
  1733                           
  1734                           ; BSR set to: 1
  1735                           ;main.c: 98:             LATAbits.LATA1 = 0;
  1736  001B88  9289               	bcf	137,1,c	;volatile
  1737  001B8A                     
  1738                           ; BSR set to: 1
  1739                           ;main.c: 99:             if (state == 0) {
  1740  001B8A  51C7               	movf	_state& (0+255),w,b
  1741  001B8C  11C8               	iorwf	(_state+1)& (0+255),w,b
  1742  001B8E  A4D8               	btfss	status,2,c
  1743  001B90  EFCC  F00D         	goto	u6271
  1744  001B94  EFCF  F00D         	goto	u6270
  1745  001B98                     u6271:
  1746  001B98  FFFF               	dw	65535	; assembler added errata NOP
  1747  001B9A  EFEA  F00D         	goto	l5215
  1748  001B9E                     u6270:
  1749  001B9E  FFFF               	dw	65535	; assembler added errata NOP
  1750  001BA0                     
  1751                           ; BSR set to: 1
  1752                           ;main.c: 100:                 if (!msg_sent){
  1753  001BA0  51A9               	movf	_msg_sent& (0+255),w,b
  1754  001BA2  A4D8               	btfss	status,2,c
  1755  001BA4  EFD6  F00D         	goto	u6281
  1756  001BA8  EFD9  F00D         	goto	u6280
  1757  001BAC                     u6281:
  1758  001BAC  FFFF               	dw	65535	; assembler added errata NOP
  1759  001BAE  EF4E  F00D         	goto	l5179
  1760  001BB2                     u6280:
  1761  001BB2  FFFF               	dw	65535	; assembler added errata NOP
  1762  001BB4                     
  1763                           ; BSR set to: 1
  1764                           ;main.c: 101:                     serial_tx_char(state_translator_micro_to_fpga(&state))
      +                          ;
  1765  001BB4  0EC7               	movlw	low _state
  1766  001BB6  6E01               	movwf	state_translator_micro_to_fpga@state^0,c
  1767  001BB8  0E01               	movlw	high _state
  1768  001BBA  6E02               	movwf	(state_translator_micro_to_fpga@state+1)^0,c
  1769  001BBC  EC5A  F03D         	call	_state_translator_micro_to_fpga	;wreg free
  1770  001BC0  EC1E  F036         	call	_serial_tx_char
  1771  001BC4                     
  1772                           ;main.c: 102:                     msg_sent = 1;
  1773  001BC4  0E01               	movlw	1
  1774  001BC6  0101               	movlb	1	; () banked
  1775  001BC8  6FA9               	movwf	_msg_sent& (0+255),b
  1776  001BCA  EF4E  F00D         	goto	l5179
  1777  001BCE                     l128:
  1778  001BCE  FFFF               	dw	65535	; assembler added errata NOP
  1779                           
  1780                           ; BSR set to: 1
  1781                           ;main.c: 104:             } else if (state == 1){
  1782  001BD0  EF4E  F00D         	goto	l5179
  1783  001BD4                     l5215:
  1784  001BD4  FFFF               	dw	65535	; assembler added errata NOP
  1785                           
  1786                           ; BSR set to: 1
  1787  001BD6  05C7               	decf	_state& (0+255),w,b
  1788  001BD8  11C8               	iorwf	(_state+1)& (0+255),w,b
  1789  001BDA  A4D8               	btfss	status,2,c
  1790  001BDC  EFF2  F00D         	goto	u6291
  1791  001BE0  EFF5  F00D         	goto	u6290
  1792  001BE4                     u6291:
  1793  001BE4  FFFF               	dw	65535	; assembler added errata NOP
  1794  001BE6  EF06  F00E         	goto	l5221
  1795  001BEA                     u6290:
  1796  001BEA  FFFF               	dw	65535	; assembler added errata NOP
  1797  001BEC                     
  1798                           ; BSR set to: 1
  1799                           ;main.c: 105:                 state = 2;
  1800  001BEC  0E00               	movlw	0
  1801  001BEE  6FC8               	movwf	(_state+1)& (0+255),b
  1802  001BF0  0E02               	movlw	2
  1803  001BF2  6FC7               	movwf	_state& (0+255),b
  1804                           
  1805                           ;main.c: 106:                 state_changed = 1;
  1806  001BF4  0E01               	movlw	1
  1807  001BF6  6FAA               	movwf	_state_changed& (0+255),b
  1808  001BF8                     
  1809                           ; BSR set to: 1
  1810                           ;main.c: 107:                 serial_tx_char(state_translator_micro_to_fpga(&state));
  1811  001BF8  0EC7               	movlw	low _state
  1812  001BFA  6E01               	movwf	state_translator_micro_to_fpga@state^0,c
  1813  001BFC  0E01               	movlw	high _state
  1814  001BFE  6E02               	movwf	(state_translator_micro_to_fpga@state+1)^0,c
  1815  001C00  EC5A  F03D         	call	_state_translator_micro_to_fpga	;wreg free
  1816  001C04  EC1E  F036         	call	_serial_tx_char
  1817                           
  1818                           ;main.c: 108:             } else if (state == 3){
  1819  001C08  EF4E  F00D         	goto	l5179
  1820  001C0C                     l5221:
  1821  001C0C  FFFF               	dw	65535	; assembler added errata NOP
  1822                           
  1823                           ; BSR set to: 1
  1824  001C0E  0E03               	movlw	3
  1825  001C10  19C7               	xorwf	_state& (0+255),w,b
  1826  001C12  11C8               	iorwf	(_state+1)& (0+255),w,b
  1827  001C14  A4D8               	btfss	status,2,c
  1828  001C16  EF0F  F00E         	goto	u6301
  1829  001C1A  EF12  F00E         	goto	u6300
  1830  001C1E                     u6301:
  1831  001C1E  FFFF               	dw	65535	; assembler added errata NOP
  1832  001C20  EF3C  F00E         	goto	l5231
  1833  001C24                     u6300:
  1834  001C24  FFFF               	dw	65535	; assembler added errata NOP
  1835  001C26                     
  1836                           ; BSR set to: 1
  1837                           ;main.c: 109:                 if (timer_done){
  1838  001C26  51A7               	movf	_timer_done& (0+255),w,b
  1839  001C28  B4D8               	btfsc	status,2,c
  1840  001C2A  EF19  F00E         	goto	u6311
  1841  001C2E  EF1C  F00E         	goto	u6310
  1842  001C32                     u6311:
  1843  001C32  FFFF               	dw	65535	; assembler added errata NOP
  1844  001C34  EF2D  F00E         	goto	l133
  1845  001C38                     u6310:
  1846  001C38  FFFF               	dw	65535	; assembler added errata NOP
  1847  001C3A                     
  1848                           ; BSR set to: 1
  1849                           ;main.c: 110:                     state = 2;
  1850  001C3A  0E00               	movlw	0
  1851  001C3C  6FC8               	movwf	(_state+1)& (0+255),b
  1852  001C3E  0E02               	movlw	2
  1853  001C40  6FC7               	movwf	_state& (0+255),b
  1854                           
  1855                           ;main.c: 111:                     state_changed = 1;
  1856  001C42  0E01               	movlw	1
  1857  001C44  6FAA               	movwf	_state_changed& (0+255),b
  1858  001C46                     
  1859                           ; BSR set to: 1
  1860                           ;main.c: 112:                     serial_tx_char(state_translator_micro_to_fpga(&state))
      +                          ;
  1861  001C46  0EC7               	movlw	low _state
  1862  001C48  6E01               	movwf	state_translator_micro_to_fpga@state^0,c
  1863  001C4A  0E01               	movlw	high _state
  1864  001C4C  6E02               	movwf	(state_translator_micro_to_fpga@state+1)^0,c
  1865  001C4E  EC5A  F03D         	call	_state_translator_micro_to_fpga	;wreg free
  1866  001C52  EC1E  F036         	call	_serial_tx_char
  1867                           
  1868                           ;main.c: 114:                 } else {
  1869  001C56  EF4E  F00D         	goto	l5179
  1870  001C5A                     l133:
  1871  001C5A  FFFF               	dw	65535	; assembler added errata NOP
  1872                           
  1873                           ; BSR set to: 1
  1874                           ;main.c: 115:                     if (T0CONbits.TMR0ON == 0){
  1875  001C5C  BED5               	btfsc	213,7,c	;volatile
  1876  001C5E  EF33  F00E         	goto	u6321
  1877  001C62  EF36  F00E         	goto	u6320
  1878  001C66                     u6321:
  1879  001C66  FFFF               	dw	65535	; assembler added errata NOP
  1880  001C68  EFE7  F00D         	goto	l128
  1881  001C6C                     u6320:
  1882  001C6C  FFFF               	dw	65535	; assembler added errata NOP
  1883  001C6E                     l5229:
  1884  001C6E  FFFF               	dw	65535	; assembler added errata NOP
  1885                           
  1886                           ; BSR set to: 1
  1887                           ;main.c: 116:                         init_timer_0();
  1888  001C70  EC3F  F036         	call	_init_timer_0	;wreg free
  1889  001C74  EF4E  F00D         	goto	l5179
  1890  001C78                     l5231:
  1891  001C78  FFFF               	dw	65535	; assembler added errata NOP
  1892                           
  1893                           ; BSR set to: 1
  1894  001C7A  0E04               	movlw	4
  1895  001C7C  19C7               	xorwf	_state& (0+255),w,b
  1896  001C7E  11C8               	iorwf	(_state+1)& (0+255),w,b
  1897  001C80  A4D8               	btfss	status,2,c
  1898  001C82  EF45  F00E         	goto	u6331
  1899  001C86  EF48  F00E         	goto	u6330
  1900  001C8A                     u6331:
  1901  001C8A  FFFF               	dw	65535	; assembler added errata NOP
  1902  001C8C  EFCE  F00E         	goto	l5253
  1903  001C90                     u6330:
  1904  001C90  FFFF               	dw	65535	; assembler added errata NOP
  1905  001C92                     
  1906                           ; BSR set to: 1
  1907                           ;main.c: 120:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  1908  001C92  0E03               	movlw	3
  1909  001C94  6E7C               	movwf	??_main^0,c
  1910  001C96  0EEC               	movlw	236
  1911  001C98                     u6517:
  1912  001C98  FFFF               	dw	65535	; errata NOP
  1913  001C9A  2EE8               	decfsz	wreg,f,c
  1914  001C9C  D7FD               	bra	u6517
  1915  001C9E  2E7C               	decfsz	??_main^0,f,c
  1916  001CA0  D7FB               	bra	u6517
  1917  001CA2                     
  1918                           ;main.c: 121:                 if (!joint_ready && reach_goal(&joint_stepper, 50)){
  1919  001CA2  0101               	movlb	1	; () banked
  1920  001CA4  51A3               	movf	_joint_ready& (0+255),w,b
  1921  001CA6  11A4               	iorwf	(_joint_ready+1)& (0+255),w,b
  1922  001CA8  A4D8               	btfss	status,2,c
  1923  001CAA  EF59  F00E         	goto	u6341
  1924  001CAE  EF5C  F00E         	goto	u6340
  1925  001CB2                     u6341:
  1926  001CB2  FFFF               	dw	65535	; assembler added errata NOP
  1927  001CB4  EF77  F00E         	goto	l5241
  1928  001CB8                     u6340:
  1929  001CB8  FFFF               	dw	65535	; assembler added errata NOP
  1930  001CBA                     
  1931                           ; BSR set to: 1
  1932  001CBA  0EB9               	movlw	low _joint_stepper
  1933  001CBC  6E07               	movwf	reach_goal@stepper_motor^0,c
  1934  001CBE  0E01               	movlw	high _joint_stepper
  1935  001CC0  6E08               	movwf	(reach_goal@stepper_motor+1)^0,c
  1936  001CC2  0E00               	movlw	0
  1937  001CC4  6E0A               	movwf	(reach_goal@goal_to_reach+1)^0,c
  1938  001CC6  0E32               	movlw	50
  1939  001CC8  6E09               	movwf	reach_goal@goal_to_reach^0,c
  1940  001CCA  EC3A  F039         	call	_reach_goal	;wreg free
  1941  001CCE  5007               	movf	?_reach_goal^0,w,c
  1942  001CD0  1008               	iorwf	(?_reach_goal+1)^0,w,c
  1943  001CD2  B4D8               	btfsc	status,2,c
  1944  001CD4  EF6E  F00E         	goto	u6351
  1945  001CD8  EF71  F00E         	goto	u6350
  1946  001CDC                     u6351:
  1947  001CDC  FFFF               	dw	65535	; assembler added errata NOP
  1948  001CDE  EF77  F00E         	goto	l5241
  1949  001CE2                     u6350:
  1950  001CE2  FFFF               	dw	65535	; assembler added errata NOP
  1951  001CE4                     
  1952                           ;main.c: 122:                     joint_ready = 1;
  1953  001CE4  0E00               	movlw	0
  1954  001CE6  0101               	movlb	1	; () banked
  1955  001CE8  6FA4               	movwf	(_joint_ready+1)& (0+255),b
  1956  001CEA  0E01               	movlw	1
  1957  001CEC  6FA3               	movwf	_joint_ready& (0+255),b
  1958  001CEE                     l5241:
  1959  001CEE  FFFF               	dw	65535	; assembler added errata NOP
  1960                           
  1961                           ;main.c: 124:                 if (joint_ready && !end_effector_ready && reach_goal(&end_
      +                          effector_stepper, 100)){
  1962  001CF0  0101               	movlb	1	; () banked
  1963  001CF2  51A3               	movf	_joint_ready& (0+255),w,b
  1964  001CF4  11A4               	iorwf	(_joint_ready+1)& (0+255),w,b
  1965  001CF6  B4D8               	btfsc	status,2,c
  1966  001CF8  EF80  F00E         	goto	u6361
  1967  001CFC  EF83  F00E         	goto	u6360
  1968  001D00                     u6361:
  1969  001D00  FFFF               	dw	65535	; assembler added errata NOP
  1970  001D02  EFA9  F00E         	goto	l5249
  1971  001D06                     u6360:
  1972  001D06  FFFF               	dw	65535	; assembler added errata NOP
  1973  001D08                     
  1974                           ; BSR set to: 1
  1975  001D08  51A1               	movf	_end_effector_ready& (0+255),w,b
  1976  001D0A  11A2               	iorwf	(_end_effector_ready+1)& (0+255),w,b
  1977  001D0C  A4D8               	btfss	status,2,c
  1978  001D0E  EF8B  F00E         	goto	u6371
  1979  001D12  EF8E  F00E         	goto	u6370
  1980  001D16                     u6371:
  1981  001D16  FFFF               	dw	65535	; assembler added errata NOP
  1982  001D18  EFA9  F00E         	goto	l5249
  1983  001D1C                     u6370:
  1984  001D1C  FFFF               	dw	65535	; assembler added errata NOP
  1985  001D1E                     
  1986                           ; BSR set to: 1
  1987  001D1E  0EAB               	movlw	low _end_effector_stepper
  1988  001D20  6E07               	movwf	reach_goal@stepper_motor^0,c
  1989  001D22  0E01               	movlw	high _end_effector_stepper
  1990  001D24  6E08               	movwf	(reach_goal@stepper_motor+1)^0,c
  1991  001D26  0E00               	movlw	0
  1992  001D28  6E0A               	movwf	(reach_goal@goal_to_reach+1)^0,c
  1993  001D2A  0E64               	movlw	100
  1994  001D2C  6E09               	movwf	reach_goal@goal_to_reach^0,c
  1995  001D2E  EC3A  F039         	call	_reach_goal	;wreg free
  1996  001D32  5007               	movf	?_reach_goal^0,w,c
  1997  001D34  1008               	iorwf	(?_reach_goal+1)^0,w,c
  1998  001D36  B4D8               	btfsc	status,2,c
  1999  001D38  EFA0  F00E         	goto	u6381
  2000  001D3C  EFA3  F00E         	goto	u6380
  2001  001D40                     u6381:
  2002  001D40  FFFF               	dw	65535	; assembler added errata NOP
  2003  001D42  EFA9  F00E         	goto	l5249
  2004  001D46                     u6380:
  2005  001D46  FFFF               	dw	65535	; assembler added errata NOP
  2006  001D48                     
  2007                           ;main.c: 125:                     end_effector_ready = 1;
  2008  001D48  0E00               	movlw	0
  2009  001D4A  0101               	movlb	1	; () banked
  2010  001D4C  6FA2               	movwf	(_end_effector_ready+1)& (0+255),b
  2011  001D4E  0E01               	movlw	1
  2012  001D50  6FA1               	movwf	_end_effector_ready& (0+255),b
  2013  001D52                     l5249:
  2014  001D52  FFFF               	dw	65535	; assembler added errata NOP
  2015                           
  2016                           ;main.c: 127:                 if (end_effector_ready * joint_ready){
  2017  001D54  C1A1  F001         	movff	_end_effector_ready,___wmul@multiplier
  2018  001D58  C1A2  F002         	movff	_end_effector_ready+1,___wmul@multiplier+1
  2019  001D5C  C1A3  F003         	movff	_joint_ready,___wmul@multiplicand
  2020  001D60  C1A4  F004         	movff	_joint_ready+1,___wmul@multiplicand+1
  2021  001D64  EC7A  F036         	call	___wmul	;wreg free
  2022  001D68  5001               	movf	?___wmul^0,w,c
  2023  001D6A  1002               	iorwf	(?___wmul+1)^0,w,c
  2024  001D6C  B4D8               	btfsc	status,2,c
  2025  001D6E  EFBB  F00E         	goto	u6391
  2026  001D72  EFBE  F00E         	goto	u6390
  2027  001D76                     u6391:
  2028  001D76  FFFF               	dw	65535	; assembler added errata NOP
  2029  001D78  EF4E  F00D         	goto	l5179
  2030  001D7C                     u6390:
  2031  001D7C  FFFF               	dw	65535	; assembler added errata NOP
  2032  001D7E                     
  2033                           ;main.c: 128:                     state = 2;
  2034  001D7E  0E00               	movlw	0
  2035  001D80  0101               	movlb	1	; () banked
  2036  001D82  6FC8               	movwf	(_state+1)& (0+255),b
  2037  001D84  0E02               	movlw	2
  2038  001D86  6FC7               	movwf	_state& (0+255),b
  2039                           
  2040                           ;main.c: 129:                     joint_ready = 0;
  2041  001D88  0E00               	movlw	0
  2042  001D8A  6FA4               	movwf	(_joint_ready+1)& (0+255),b
  2043  001D8C  0E00               	movlw	0
  2044  001D8E  6FA3               	movwf	_joint_ready& (0+255),b
  2045                           
  2046                           ;main.c: 130:                     end_effector_ready = 0;
  2047  001D90  0E00               	movlw	0
  2048  001D92  6FA2               	movwf	(_end_effector_ready+1)& (0+255),b
  2049  001D94  0E00               	movlw	0
  2050  001D96  6FA1               	movwf	_end_effector_ready& (0+255),b
  2051  001D98  EF4E  F00D         	goto	l5179
  2052  001D9C                     l5253:
  2053  001D9C  FFFF               	dw	65535	; assembler added errata NOP
  2054                           
  2055                           ; BSR set to: 1
  2056  001D9E  0E05               	movlw	5
  2057  001DA0  19C7               	xorwf	_state& (0+255),w,b
  2058  001DA2  11C8               	iorwf	(_state+1)& (0+255),w,b
  2059  001DA4  A4D8               	btfss	status,2,c
  2060  001DA6  EFD7  F00E         	goto	u6401
  2061  001DAA  EFDA  F00E         	goto	u6400
  2062  001DAE                     u6401:
  2063  001DAE  FFFF               	dw	65535	; assembler added errata NOP
  2064  001DB0  EF33  F00F         	goto	l5269
  2065  001DB4                     u6400:
  2066  001DB4  FFFF               	dw	65535	; assembler added errata NOP
  2067  001DB6                     
  2068                           ; BSR set to: 1
  2069                           ;main.c: 133:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  2070  001DB6  0E03               	movlw	3
  2071  001DB8  6E7C               	movwf	??_main^0,c
  2072  001DBA  0EEC               	movlw	236
  2073  001DBC                     u6527:
  2074  001DBC  FFFF               	dw	65535	; errata NOP
  2075  001DBE  2EE8               	decfsz	wreg,f,c
  2076  001DC0  D7FD               	bra	u6527
  2077  001DC2  2E7C               	decfsz	??_main^0,f,c
  2078  001DC4  D7FB               	bra	u6527
  2079  001DC6                     
  2080                           ;main.c: 134:                 if (reach_goal(&joint_stepper, 100)) {
  2081  001DC6  0EB9               	movlw	low _joint_stepper
  2082  001DC8  6E07               	movwf	reach_goal@stepper_motor^0,c
  2083  001DCA  0E01               	movlw	high _joint_stepper
  2084  001DCC  6E08               	movwf	(reach_goal@stepper_motor+1)^0,c
  2085  001DCE  0E00               	movlw	0
  2086  001DD0  6E0A               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2087  001DD2  0E64               	movlw	100
  2088  001DD4  6E09               	movwf	reach_goal@goal_to_reach^0,c
  2089  001DD6  EC3A  F039         	call	_reach_goal	;wreg free
  2090  001DDA  5007               	movf	?_reach_goal^0,w,c
  2091  001DDC  1008               	iorwf	(?_reach_goal+1)^0,w,c
  2092  001DDE  B4D8               	btfsc	status,2,c
  2093  001DE0  EFF4  F00E         	goto	u6411
  2094  001DE4  EFF7  F00E         	goto	u6410
  2095  001DE8                     u6411:
  2096  001DE8  FFFF               	dw	65535	; assembler added errata NOP
  2097  001DEA  EF01  F00F         	goto	l5263
  2098  001DEE                     u6410:
  2099  001DEE  FFFF               	dw	65535	; assembler added errata NOP
  2100  001DF0                     
  2101                           ;main.c: 135:                     change_direction(&joint_stepper);
  2102  001DF0  0EB9               	movlw	low _joint_stepper
  2103  001DF2  6E01               	movwf	change_direction@stepper_motor^0,c
  2104  001DF4  0E01               	movlw	high _joint_stepper
  2105  001DF6  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2106  001DF8  ECBF  F036         	call	_change_direction	;wreg free
  2107  001DFC                     
  2108                           ;main.c: 136:                     mix_counter++;
  2109  001DFC  0101               	movlb	1	; () banked
  2110  001DFE  4BA5               	infsnz	_mix_counter& (0+255),f,b
  2111  001E00  2BA6               	incf	(_mix_counter+1)& (0+255),f,b
  2112  001E02                     l5263:
  2113  001E02  FFFF               	dw	65535	; assembler added errata NOP
  2114                           
  2115                           ;main.c: 139:                 if (mix_counter >= 20){
  2116  001E04  0101               	movlb	1	; () banked
  2117  001E06  BFA6               	btfsc	(_mix_counter+1)& (0+255),7,b
  2118  001E08  EF0F  F00F         	goto	u6421
  2119  001E0C  51A6               	movf	(_mix_counter+1)& (0+255),w,b
  2120  001E0E  E10A               	bnz	u6420
  2121  001E10  0E14               	movlw	20
  2122  001E12  5DA5               	subwf	_mix_counter& (0+255),w,b
  2123  001E14  A0D8               	btfss	status,0,c
  2124  001E16  EF0F  F00F         	goto	u6421
  2125  001E1A  EF12  F00F         	goto	u6420
  2126  001E1E                     u6421:
  2127  001E1E  FFFF               	dw	65535	; assembler added errata NOP
  2128  001E20  EF4E  F00D         	goto	l5179
  2129  001E24                     u6420:
  2130  001E24  FFFF               	dw	65535	; assembler added errata NOP
  2131  001E26                     
  2132                           ; BSR set to: 1
  2133                           ;main.c: 140:                     state = 2;
  2134  001E26  0E00               	movlw	0
  2135  001E28  6FC8               	movwf	(_state+1)& (0+255),b
  2136  001E2A  0E02               	movlw	2
  2137  001E2C  6FC7               	movwf	_state& (0+255),b
  2138                           
  2139                           ;main.c: 141:                     mix_counter = 0;
  2140  001E2E  0E00               	movlw	0
  2141  001E30  6FA6               	movwf	(_mix_counter+1)& (0+255),b
  2142  001E32  0E00               	movlw	0
  2143  001E34  6FA5               	movwf	_mix_counter& (0+255),b
  2144  001E36                     
  2145                           ; BSR set to: 1
  2146                           ;main.c: 142:                     init_stepper(&joint_stepper, 0, 0, 1, hex_joint_values
      +                          );
  2147  001E36  0EB9               	movlw	low _joint_stepper
  2148  001E38  6E01               	movwf	init_stepper@stepper_motor^0,c
  2149  001E3A  0E01               	movlw	high _joint_stepper
  2150  001E3C  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  2151  001E3E  0E00               	movlw	0
  2152  001E40  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  2153  001E42  0E00               	movlw	0
  2154  001E44  6E03               	movwf	init_stepper@current_coil^0,c
  2155  001E46  0E00               	movlw	0
  2156  001E48  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  2157  001E4A  0E00               	movlw	0
  2158  001E4C  6E05               	movwf	init_stepper@step_counter^0,c
  2159  001E4E  0E00               	movlw	0
  2160  001E50  6E08               	movwf	(init_stepper@direction+1)^0,c
  2161  001E52  0E01               	movlw	1
  2162  001E54  6E07               	movwf	init_stepper@direction^0,c
  2163  001E56  0EDD               	movlw	low _hex_joint_values
  2164  001E58  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  2165  001E5A  0E01               	movlw	high _hex_joint_values
  2166  001E5C  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  2167  001E5E  ECF9  F039         	call	_init_stepper	;wreg free
  2168  001E62  EF4E  F00D         	goto	l5179
  2169  001E66                     l5269:
  2170  001E66  FFFF               	dw	65535	; assembler added errata NOP
  2171                           
  2172                           ; BSR set to: 1
  2173  001E68  0E06               	movlw	6
  2174  001E6A  19C7               	xorwf	_state& (0+255),w,b
  2175  001E6C  11C8               	iorwf	(_state+1)& (0+255),w,b
  2176  001E6E  A4D8               	btfss	status,2,c
  2177  001E70  EF3C  F00F         	goto	u6431
  2178  001E74  EF3F  F00F         	goto	u6430
  2179  001E78                     u6431:
  2180  001E78  FFFF               	dw	65535	; assembler added errata NOP
  2181  001E7A  EF42  F00F         	goto	l5273
  2182  001E7E                     u6430:
  2183  001E7E  FFFF               	dw	65535	; assembler added errata NOP
  2184  001E80  EF4E  F00D         	goto	l5179
  2185  001E84                     l5273:
  2186  001E84  FFFF               	dw	65535	; assembler added errata NOP
  2187                           
  2188                           ; BSR set to: 1
  2189  001E86  0E07               	movlw	7
  2190  001E88  19C7               	xorwf	_state& (0+255),w,b
  2191  001E8A  11C8               	iorwf	(_state+1)& (0+255),w,b
  2192  001E8C  A4D8               	btfss	status,2,c
  2193  001E8E  EF4B  F00F         	goto	u6441
  2194  001E92  EF4E  F00F         	goto	u6440
  2195  001E96                     u6441:
  2196  001E96  FFFF               	dw	65535	; assembler added errata NOP
  2197  001E98  EFE7  F00D         	goto	l128
  2198  001E9C                     u6440:
  2199  001E9C  FFFF               	dw	65535	; assembler added errata NOP
  2200  001E9E                     
  2201                           ; BSR set to: 1
  2202                           ;main.c: 147:                 if (timer_done){
  2203  001E9E  51A7               	movf	_timer_done& (0+255),w,b
  2204  001EA0  B4D8               	btfsc	status,2,c
  2205  001EA2  EF55  F00F         	goto	u6451
  2206  001EA6  EF58  F00F         	goto	u6450
  2207  001EAA                     u6451:
  2208  001EAA  FFFF               	dw	65535	; assembler added errata NOP
  2209  001EAC  EF69  F00F         	goto	l149
  2210  001EB0                     u6450:
  2211  001EB0  FFFF               	dw	65535	; assembler added errata NOP
  2212  001EB2                     
  2213                           ; BSR set to: 1
  2214                           ;main.c: 148:                     state = 2;
  2215  001EB2  0E00               	movlw	0
  2216  001EB4  6FC8               	movwf	(_state+1)& (0+255),b
  2217  001EB6  0E02               	movlw	2
  2218  001EB8  6FC7               	movwf	_state& (0+255),b
  2219                           
  2220                           ;main.c: 149:                     state_changed = 1;
  2221  001EBA  0E01               	movlw	1
  2222  001EBC  6FAA               	movwf	_state_changed& (0+255),b
  2223  001EBE                     
  2224                           ; BSR set to: 1
  2225                           ;main.c: 150:                     serial_tx_char(state_translator_micro_to_fpga(&state))
      +                          ;
  2226  001EBE  0EC7               	movlw	low _state
  2227  001EC0  6E01               	movwf	state_translator_micro_to_fpga@state^0,c
  2228  001EC2  0E01               	movlw	high _state
  2229  001EC4  6E02               	movwf	(state_translator_micro_to_fpga@state+1)^0,c
  2230  001EC6  EC5A  F03D         	call	_state_translator_micro_to_fpga	;wreg free
  2231  001ECA  EC1E  F036         	call	_serial_tx_char
  2232                           
  2233                           ;main.c: 151:                 } else {
  2234  001ECE  EF4E  F00D         	goto	l5179
  2235  001ED2                     l149:
  2236  001ED2  FFFF               	dw	65535	; assembler added errata NOP
  2237                           
  2238                           ; BSR set to: 1
  2239                           ;main.c: 152:                     if (T0CONbits.TMR0ON == 0){
  2240  001ED4  BED5               	btfsc	213,7,c	;volatile
  2241  001ED6  EF6F  F00F         	goto	u6461
  2242  001EDA  EF72  F00F         	goto	u6460
  2243  001EDE                     u6461:
  2244  001EDE  FFFF               	dw	65535	; assembler added errata NOP
  2245  001EE0  EFE7  F00D         	goto	l128
  2246  001EE4                     u6460:
  2247  001EE4  FFFF               	dw	65535	; assembler added errata NOP
  2248  001EE6  EF37  F00E         	goto	l5229
  2249  001EEA  EF3B  F000         	goto	start
  2250  001EEE                     __end_of_main:
  2251                           	callstack 0
  2252                           
  2253 ;; *************** function _state_translator_micro_to_fpga *****************
  2254 ;; Defined at:
  2255 ;;		line 19 in file "utils.c"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;  state           2    0[COMRAM] PTR int 
  2258 ;;		 -> state(2), 
  2259 ;; Auto vars:     Size  Location     Type
  2260 ;;  state_machin    1    4[COMRAM] unsigned char 
  2261 ;; Return value:  Size  Location     Type
  2262 ;;                  1    wreg      unsigned char 
  2263 ;; Registers used:
  2264 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2270 ;;      Params:         2       0       0       0       0       0       0
  2271 ;;      Locals:         1       0       0       0       0       0       0
  2272 ;;      Temps:          2       0       0       0       0       0       0
  2273 ;;      Totals:         5       0       0       0       0       0       0
  2274 ;;Total ram usage:        5 bytes
  2275 ;; Hardware stack levels used:    1
  2276 ;; Hardware stack levels required when called:    1
  2277 ;; This function calls:
  2278 ;;		Nothing
  2279 ;; This function is called by:
  2280 ;;		_main
  2281 ;; This function uses a non-reentrant model
  2282 ;;
  2283                           
  2284                           	psect	text1
  2285  007AB4                     __ptext1:
  2286                           	callstack 0
  2287  007AB4                     _state_translator_micro_to_fpga:
  2288                           	callstack 0
  2289  007AB4  FFFF               	dw	65535	; assembler added errata NOP
  2290  007AB6                     
  2291                           ;utils.c: 20:     unsigned char state_machine_code;;utils.c: 21:     if (*state == 0){
  2292  007AB6  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  2293  007ABA  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  2294  007ABE  50DE               	movf	postinc2,w,c
  2295  007AC0  10DE               	iorwf	postinc2,w,c
  2296  007AC2  A4D8               	btfss	status,2,c
  2297  007AC4  EF66  F03D         	goto	u6151
  2298  007AC8  EF69  F03D         	goto	u6150
  2299  007ACC                     u6151:
  2300  007ACC  FFFF               	dw	65535	; assembler added errata NOP
  2301  007ACE  EF6E  F03D         	goto	l5081
  2302  007AD2                     u6150:
  2303  007AD2  FFFF               	dw	65535	; assembler added errata NOP
  2304  007AD4                     
  2305                           ;utils.c: 22:         state_machine_code = 0;
  2306  007AD4  0E00               	movlw	0
  2307  007AD6  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  2308                           
  2309                           ;utils.c: 23:     } else if (*state == 1){
  2310  007AD8  EFD6  F03D         	goto	l238
  2311  007ADC                     l5081:
  2312  007ADC  FFFF               	dw	65535	; assembler added errata NOP
  2313  007ADE  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  2314  007AE2  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  2315  007AE6  04DE               	decf	postinc2,w,c
  2316  007AE8  10DE               	iorwf	postinc2,w,c
  2317  007AEA  A4D8               	btfss	status,2,c
  2318  007AEC  EF7A  F03D         	goto	u6161
  2319  007AF0  EF7D  F03D         	goto	u6160
  2320  007AF4                     u6161:
  2321  007AF4  FFFF               	dw	65535	; assembler added errata NOP
  2322  007AF6  EF82  F03D         	goto	l5085
  2323  007AFA                     u6160:
  2324  007AFA  FFFF               	dw	65535	; assembler added errata NOP
  2325  007AFC                     
  2326                           ;utils.c: 24:         state_machine_code = 'A';
  2327  007AFC  0E41               	movlw	65
  2328  007AFE  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  2329                           
  2330                           ;utils.c: 25:     } else if (*state == 3){
  2331  007B00  EFD6  F03D         	goto	l238
  2332  007B04                     l5085:
  2333  007B04  FFFF               	dw	65535	; assembler added errata NOP
  2334  007B06  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  2335  007B0A  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  2336  007B0E  0E03               	movlw	3
  2337  007B10  18DE               	xorwf	postinc2,w,c
  2338  007B12  10DE               	iorwf	postinc2,w,c
  2339  007B14  A4D8               	btfss	status,2,c
  2340  007B16  EF8F  F03D         	goto	u6171
  2341  007B1A  EF92  F03D         	goto	u6170
  2342  007B1E                     u6171:
  2343  007B1E  FFFF               	dw	65535	; assembler added errata NOP
  2344  007B20  EF97  F03D         	goto	l5089
  2345  007B24                     u6170:
  2346  007B24  FFFF               	dw	65535	; assembler added errata NOP
  2347  007B26                     
  2348                           ;utils.c: 26:         state_machine_code = 'B';
  2349  007B26  0E42               	movlw	66
  2350  007B28  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  2351                           
  2352                           ;utils.c: 27:     } else if (*state == 4){
  2353  007B2A  EFD6  F03D         	goto	l238
  2354  007B2E                     l5089:
  2355  007B2E  FFFF               	dw	65535	; assembler added errata NOP
  2356  007B30  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  2357  007B34  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  2358  007B38  0E04               	movlw	4
  2359  007B3A  18DE               	xorwf	postinc2,w,c
  2360  007B3C  10DE               	iorwf	postinc2,w,c
  2361  007B3E  A4D8               	btfss	status,2,c
  2362  007B40  EFA4  F03D         	goto	u6181
  2363  007B44  EFA7  F03D         	goto	u6180
  2364  007B48                     u6181:
  2365  007B48  FFFF               	dw	65535	; assembler added errata NOP
  2366  007B4A  EFAC  F03D         	goto	l5093
  2367  007B4E                     u6180:
  2368  007B4E  FFFF               	dw	65535	; assembler added errata NOP
  2369  007B50                     
  2370                           ;utils.c: 28:         state_machine_code = 'D';
  2371  007B50  0E44               	movlw	68
  2372  007B52  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  2373                           
  2374                           ;utils.c: 29:     } else if (*state == 5){
  2375  007B54  EFD6  F03D         	goto	l238
  2376  007B58                     l5093:
  2377  007B58  FFFF               	dw	65535	; assembler added errata NOP
  2378  007B5A  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  2379  007B5E  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  2380  007B62  0E05               	movlw	5
  2381  007B64  18DE               	xorwf	postinc2,w,c
  2382  007B66  10DE               	iorwf	postinc2,w,c
  2383  007B68  A4D8               	btfss	status,2,c
  2384  007B6A  EFB9  F03D         	goto	u6191
  2385  007B6E  EFBC  F03D         	goto	u6190
  2386  007B72                     u6191:
  2387  007B72  FFFF               	dw	65535	; assembler added errata NOP
  2388  007B74  EFC1  F03D         	goto	l5097
  2389  007B78                     u6190:
  2390  007B78  FFFF               	dw	65535	; assembler added errata NOP
  2391  007B7A                     
  2392                           ;utils.c: 30:         state_machine_code = '@';
  2393  007B7A  0E40               	movlw	64
  2394  007B7C  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  2395                           
  2396                           ;utils.c: 31:     } else if (*state == 2){
  2397  007B7E  EFD6  F03D         	goto	l238
  2398  007B82                     l5097:
  2399  007B82  FFFF               	dw	65535	; assembler added errata NOP
  2400  007B84  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  2401  007B88  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  2402  007B8C  0E02               	movlw	2
  2403  007B8E  18DE               	xorwf	postinc2,w,c
  2404  007B90  10DE               	iorwf	postinc2,w,c
  2405  007B92  A4D8               	btfss	status,2,c
  2406  007B94  EFCE  F03D         	goto	u6201
  2407  007B98  EFD1  F03D         	goto	u6200
  2408  007B9C                     u6201:
  2409  007B9C  FFFF               	dw	65535	; assembler added errata NOP
  2410  007B9E  EFD6  F03D         	goto	l242
  2411  007BA2                     u6200:
  2412  007BA2  FFFF               	dw	65535	; assembler added errata NOP
  2413  007BA4                     
  2414                           ;utils.c: 32:         state_machine_code = 'H';
  2415  007BA4  0E48               	movlw	72
  2416  007BA6  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  2417  007BA8  EFD6  F03D         	goto	l238
  2418  007BAC                     l242:
  2419  007BAC                     l238:
  2420  007BAC  FFFF               	dw	65535	; assembler added errata NOP
  2421                           
  2422                           ;utils.c: 34:     return state_machine_code;
  2423  007BAE  5005               	movf	state_translator_micro_to_fpga@state_machine_code^0,w,c
  2424  007BB0  0012               	return		;funcret
  2425  007BB2  FFFF               	dw	65535	; errata NOP
  2426  007BB4                     __end_of_state_translator_micro_to_fpga:
  2427                           	callstack 0
  2428                           
  2429 ;; *************** function _state_translator_fpga_to_micro *****************
  2430 ;; Defined at:
  2431 ;;		line 2 in file "utils.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;  state_machin    1    wreg     unsigned char 
  2434 ;;  state           2    2[COMRAM] PTR int 
  2435 ;;		 -> state(2), 
  2436 ;; Auto vars:     Size  Location     Type
  2437 ;;  state_machin    1    4[COMRAM] unsigned char 
  2438 ;; Return value:  Size  Location     Type
  2439 ;;                  1    wreg      void 
  2440 ;; Registers used:
  2441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2447 ;;      Params:         2       0       0       0       0       0       0
  2448 ;;      Locals:         1       0       0       0       0       0       0
  2449 ;;      Temps:          0       0       0       0       0       0       0
  2450 ;;      Totals:         3       0       0       0       0       0       0
  2451 ;;Total ram usage:        3 bytes
  2452 ;; Hardware stack levels used:    1
  2453 ;; Hardware stack levels required when called:    3
  2454 ;; This function calls:
  2455 ;;		_lcd_dat
  2456 ;; This function is called by:
  2457 ;;		_main
  2458 ;; This function uses a non-reentrant model
  2459 ;;
  2460                           
  2461                           	psect	text2
  2462  0079B8                     __ptext2:
  2463                           	callstack 0
  2464  0079B8                     _state_translator_fpga_to_micro:
  2465                           	callstack 0
  2466  0079B8  FFFF               	dw	65535	; assembler added errata NOP
  2467                           
  2468                           ;incstack = 0
  2469                           ;state_translator_fpga_to_micro@state_machine_code stored from wreg
  2470  0079BA  6E05               	movwf	state_translator_fpga_to_micro@state_machine_code^0,c
  2471  0079BC                     
  2472                           ;utils.c: 3:     lcd_dat(state_machine_code);
  2473  0079BC  5005               	movf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  2474  0079BE  EC65  F036         	call	_lcd_dat
  2475  0079C2                     
  2476                           ;utils.c: 4:     if (state_machine_code == 'A'){
  2477  0079C2  0E41               	movlw	65
  2478  0079C4  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  2479  0079C6  A4D8               	btfss	status,2,c
  2480  0079C8  EFE8  F03C         	goto	u6101
  2481  0079CC  EFEB  F03C         	goto	u6100
  2482  0079D0                     u6101:
  2483  0079D0  FFFF               	dw	65535	; assembler added errata NOP
  2484  0079D2  EFF6  F03C         	goto	l5053
  2485  0079D6                     u6100:
  2486  0079D6  FFFF               	dw	65535	; assembler added errata NOP
  2487  0079D8                     
  2488                           ;utils.c: 5:         *state = 1;
  2489  0079D8  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  2490  0079DC  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  2491  0079E0  0E01               	movlw	1
  2492  0079E2  6EDE               	movwf	postinc2,c
  2493  0079E4  0E00               	movlw	0
  2494  0079E6  6EDD               	movwf	postdec2,c
  2495                           
  2496                           ;utils.c: 6:     } else if (state_machine_code == 'B'){
  2497  0079E8  EF57  F03D         	goto	l234
  2498  0079EC                     l5053:
  2499  0079EC  FFFF               	dw	65535	; assembler added errata NOP
  2500  0079EE  0E42               	movlw	66
  2501  0079F0  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  2502  0079F2  A4D8               	btfss	status,2,c
  2503  0079F4  EFFE  F03C         	goto	u6111
  2504  0079F8  EF01  F03D         	goto	u6110
  2505  0079FC                     u6111:
  2506  0079FC  FFFF               	dw	65535	; assembler added errata NOP
  2507  0079FE  EF0C  F03D         	goto	l5057
  2508  007A02                     u6110:
  2509  007A02  FFFF               	dw	65535	; assembler added errata NOP
  2510  007A04                     
  2511                           ;utils.c: 7:         *state = 3;
  2512  007A04  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  2513  007A08  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  2514  007A0C  0E03               	movlw	3
  2515  007A0E  6EDE               	movwf	postinc2,c
  2516  007A10  0E00               	movlw	0
  2517  007A12  6EDD               	movwf	postdec2,c
  2518                           
  2519                           ;utils.c: 8:     } else if (state_machine_code == 'D'){
  2520  007A14  EF57  F03D         	goto	l234
  2521  007A18                     l5057:
  2522  007A18  FFFF               	dw	65535	; assembler added errata NOP
  2523  007A1A  0E44               	movlw	68
  2524  007A1C  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  2525  007A1E  A4D8               	btfss	status,2,c
  2526  007A20  EF14  F03D         	goto	u6121
  2527  007A24  EF17  F03D         	goto	u6120
  2528  007A28                     u6121:
  2529  007A28  FFFF               	dw	65535	; assembler added errata NOP
  2530  007A2A  EF22  F03D         	goto	l5061
  2531  007A2E                     u6120:
  2532  007A2E  FFFF               	dw	65535	; assembler added errata NOP
  2533  007A30                     
  2534                           ;utils.c: 9:         *state = 4;
  2535  007A30  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  2536  007A34  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  2537  007A38  0E04               	movlw	4
  2538  007A3A  6EDE               	movwf	postinc2,c
  2539  007A3C  0E00               	movlw	0
  2540  007A3E  6EDD               	movwf	postdec2,c
  2541                           
  2542                           ;utils.c: 10:     } else if (state_machine_code == '@'){
  2543  007A40  EF57  F03D         	goto	l234
  2544  007A44                     l5061:
  2545  007A44  FFFF               	dw	65535	; assembler added errata NOP
  2546  007A46  0E40               	movlw	64
  2547  007A48  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  2548  007A4A  A4D8               	btfss	status,2,c
  2549  007A4C  EF2A  F03D         	goto	u6131
  2550  007A50  EF2D  F03D         	goto	u6130
  2551  007A54                     u6131:
  2552  007A54  FFFF               	dw	65535	; assembler added errata NOP
  2553  007A56  EF38  F03D         	goto	l5065
  2554  007A5A                     u6130:
  2555  007A5A  FFFF               	dw	65535	; assembler added errata NOP
  2556  007A5C                     
  2557                           ;utils.c: 11:         *state = 5;
  2558  007A5C  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  2559  007A60  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  2560  007A64  0E05               	movlw	5
  2561  007A66  6EDE               	movwf	postinc2,c
  2562  007A68  0E00               	movlw	0
  2563  007A6A  6EDD               	movwf	postdec2,c
  2564                           
  2565                           ;utils.c: 12:     } else if (state_machine_code == 'H'){
  2566  007A6C  EF57  F03D         	goto	l234
  2567  007A70                     l5065:
  2568  007A70  FFFF               	dw	65535	; assembler added errata NOP
  2569  007A72  0E48               	movlw	72
  2570  007A74  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  2571  007A76  A4D8               	btfss	status,2,c
  2572  007A78  EF40  F03D         	goto	u6141
  2573  007A7C  EF43  F03D         	goto	u6140
  2574  007A80                     u6141:
  2575  007A80  FFFF               	dw	65535	; assembler added errata NOP
  2576  007A82  EF4E  F03D         	goto	l5069
  2577  007A86                     u6140:
  2578  007A86  FFFF               	dw	65535	; assembler added errata NOP
  2579  007A88                     
  2580                           ;utils.c: 13:         *state = 2;
  2581  007A88  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  2582  007A8C  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  2583  007A90  0E02               	movlw	2
  2584  007A92  6EDE               	movwf	postinc2,c
  2585  007A94  0E00               	movlw	0
  2586  007A96  6EDD               	movwf	postdec2,c
  2587                           
  2588                           ;utils.c: 14:     } else {
  2589  007A98  EF57  F03D         	goto	l234
  2590  007A9C                     l5069:
  2591  007A9C  FFFF               	dw	65535	; assembler added errata NOP
  2592                           
  2593                           ;utils.c: 15:         *state = 0;
  2594  007A9E  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  2595  007AA2  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  2596  007AA6  0E00               	movlw	0
  2597  007AA8  6EDE               	movwf	postinc2,c
  2598  007AAA  0E00               	movlw	0
  2599  007AAC  6EDD               	movwf	postdec2,c
  2600  007AAE                     l234:
  2601  007AAE  FFFF               	dw	65535	; assembler added errata NOP
  2602  007AB0  0012               	return		;funcret
  2603  007AB2  FFFF               	dw	65535	; errata NOP
  2604  007AB4                     __end_of_state_translator_fpga_to_micro:
  2605                           	callstack 0
  2606                           
  2607 ;; *************** function _snprintf *****************
  2608 ;; Defined at:
  2609 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\snprintf.c"
  2610 ;; Parameters:    Size  Location     Type
  2611 ;;  s               2   10[BANK0 ] PTR unsigned char 
  2612 ;;		 -> main@greet_str(160), 
  2613 ;;  n               2   12[BANK0 ] unsigned int 
  2614 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  2615 ;;		 -> STR_8(3), 
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;  ap              2   20[BANK0 ] PTR void [1]
  2618 ;;		 -> ?_snprintf(2), 
  2619 ;;  ret             2    0        int 
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  2   10[BANK0 ] int 
  2622 ;; Registers used:
  2623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2629 ;;      Params:         0       8       0       0       0       0       0
  2630 ;;      Locals:         0       4       0       0       0       0       0
  2631 ;;      Temps:          0       0       0       0       0       0       0
  2632 ;;      Totals:         0      12       0       0       0       0       0
  2633 ;;Total ram usage:       12 bytes
  2634 ;; Hardware stack levels used:    1
  2635 ;; Hardware stack levels required when called:    9
  2636 ;; This function calls:
  2637 ;;		_vsnprintf
  2638 ;; This function is called by:
  2639 ;;		_main
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           	psect	text3
  2644  006D4A                     __ptext3:
  2645                           	callstack 0
  2646  006D4A                     _snprintf:
  2647                           	callstack 0
  2648  006D4A  FFFF               	dw	65535	; assembler added errata NOP
  2649  006D4C  0EC2               	movlw	low (?_snprintf+6)
  2650  006D4E  0100               	movlb	0	; () banked
  2651  006D50  6FC6               	movwf	snprintf@ap& (0+255),b
  2652  006D52  0E00               	movlw	high (?_snprintf+6)
  2653  006D54  6FC7               	movwf	(snprintf@ap+1)& (0+255),b
  2654  006D56                     
  2655                           ; BSR set to: 0
  2656  006D56  C0BC  F070         	movff	snprintf@s,vsnprintf@s
  2657  006D5A  C0BD  F071         	movff	snprintf@s+1,vsnprintf@s+1
  2658  006D5E  C0BE  F072         	movff	snprintf@n,vsnprintf@n
  2659  006D62  C0BF  F073         	movff	snprintf@n+1,vsnprintf@n+1
  2660  006D66  C0C0  F074         	movff	snprintf@fmt,vsnprintf@fmt
  2661  006D6A  C0C1  F075         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  2662  006D6E  0EC6               	movlw	low snprintf@ap
  2663  006D70  6E76               	movwf	vsnprintf@ap^0,c
  2664  006D72  0E00               	movlw	high snprintf@ap
  2665  006D74  6E77               	movwf	(vsnprintf@ap+1)^0,c
  2666  006D76  EC9A  F01E         	call	_vsnprintf	;wreg free
  2667  006D7A  0012               	return		;funcret
  2668  006D7C  FFFF               	dw	65535	; errata NOP
  2669  006D7E                     __end_of_snprintf:
  2670                           	callstack 0
  2671                           
  2672 ;; *************** function _vsnprintf *****************
  2673 ;; Defined at:
  2674 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_vsnprintf.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;  s               2  111[COMRAM] PTR unsigned char 
  2677 ;;		 -> main@greet_str(160), 
  2678 ;;  n               2  113[COMRAM] unsigned int 
  2679 ;;  fmt             2  115[COMRAM] PTR const unsigned char 
  2680 ;;		 -> STR_8(3), 
  2681 ;;  ap              2  117[COMRAM] PTR PTR void 
  2682 ;;		 -> snprintf@ap(2), 
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;  f               6    4[BANK0 ] struct _IO_FILE
  2685 ;;  cnt             2    2[BANK0 ] int 
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  2  111[COMRAM] int 
  2688 ;; Registers used:
  2689 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2695 ;;      Params:         8       0       0       0       0       0       0
  2696 ;;      Locals:         0      10       0       0       0       0       0
  2697 ;;      Temps:          4       0       0       0       0       0       0
  2698 ;;      Totals:        12      10       0       0       0       0       0
  2699 ;;Total ram usage:       22 bytes
  2700 ;; Hardware stack levels used:    1
  2701 ;; Hardware stack levels required when called:    8
  2702 ;; This function calls:
  2703 ;;		_vfprintf
  2704 ;; This function is called by:
  2705 ;;		_snprintf
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           
  2709                           	psect	text4
  2710  003D34                     __ptext4:
  2711                           	callstack 0
  2712  003D34                     _vsnprintf:
  2713                           	callstack 0
  2714  003D34  FFFF               	dw	65535	; assembler added errata NOP
  2715  003D36  0E80               	movlw	128
  2716  003D38  5C73               	subwf	(vsnprintf@n+1)^0,w,c
  2717  003D3A  A0D8               	btfss	status,0,c
  2718  003D3C  EFA2  F01E         	goto	u6001
  2719  003D40  EFA5  F01E         	goto	u6000
  2720  003D44                     u6001:
  2721  003D44  FFFF               	dw	65535	; assembler added errata NOP
  2722  003D46  EFAF  F01E         	goto	l4911
  2723  003D4A                     u6000:
  2724  003D4A  FFFF               	dw	65535	; assembler added errata NOP
  2725  003D4C  0E00               	movlw	0
  2726  003D4E  0100               	movlb	0	; () banked
  2727  003D50  6F8B               	movwf	(_errno+1)& (0+255),b
  2728  003D52  0E4B               	movlw	75
  2729  003D54  6F8A               	movwf	_errno& (0+255),b
  2730  003D56                     
  2731                           ; BSR set to: 0
  2732  003D56  6870               	setf	?_vsnprintf^0,c
  2733  003D58  6871               	setf	(?_vsnprintf+1)^0,c
  2734  003D5A  EF34  F01F         	goto	l1026
  2735  003D5E                     l4911:
  2736  003D5E  FFFF               	dw	65535	; assembler added errata NOP
  2737  003D60  C070  F0B6         	movff	vsnprintf@s,vsnprintf@f
  2738  003D64  C071  F0B7         	movff	vsnprintf@s+1,vsnprintf@f+1
  2739  003D68  5073               	movf	(vsnprintf@n+1)^0,w,c
  2740  003D6A  E10A               	bnz	u6010
  2741  003D6C  0E02               	movlw	2
  2742  003D6E  5C72               	subwf	vsnprintf@n^0,w,c
  2743  003D70  A0D8               	btfss	status,0,c
  2744  003D72  EFBD  F01E         	goto	u6011
  2745  003D76  EFC0  F01E         	goto	u6010
  2746  003D7A                     u6011:
  2747  003D7A  FFFF               	dw	65535	; assembler added errata NOP
  2748  003D7C  EFCE  F01E         	goto	l4917
  2749  003D80                     u6010:
  2750  003D80  FFFF               	dw	65535	; assembler added errata NOP
  2751  003D82  0EFF               	movlw	255
  2752  003D84  2472               	addwf	vsnprintf@n^0,w,c
  2753  003D86  0100               	movlb	0	; () banked
  2754  003D88  6FBA               	movwf	(vsnprintf@f+4)& (0+255),b
  2755  003D8A  0EFF               	movlw	255
  2756  003D8C  2073               	addwfc	(vsnprintf@n+1)^0,w,c
  2757  003D8E  6FBB               	movwf	(vsnprintf@f+5)& (0+255),b
  2758  003D90                     
  2759                           ; BSR set to: 0
  2760  003D90  0E00               	movlw	0
  2761  003D92  6FB9               	movwf	(vsnprintf@f+3)& (0+255),b
  2762  003D94  0E00               	movlw	0
  2763  003D96  6FB8               	movwf	(vsnprintf@f+2)& (0+255),b
  2764  003D98  EFD8  F01E         	goto	l4919
  2765  003D9C                     l4917:
  2766  003D9C  FFFF               	dw	65535	; assembler added errata NOP
  2767  003D9E  0E00               	movlw	0
  2768  003DA0  0100               	movlb	0	; () banked
  2769  003DA2  6FBB               	movwf	(vsnprintf@f+5)& (0+255),b
  2770  003DA4  0E01               	movlw	1
  2771  003DA6  6FBA               	movwf	(vsnprintf@f+4)& (0+255),b
  2772  003DA8  0E00               	movlw	0
  2773  003DAA  6FB9               	movwf	(vsnprintf@f+3)& (0+255),b
  2774  003DAC  0E01               	movlw	1
  2775  003DAE  6FB8               	movwf	(vsnprintf@f+2)& (0+255),b
  2776  003DB0                     l4919:
  2777  003DB0  FFFF               	dw	65535	; assembler added errata NOP
  2778                           
  2779                           ; BSR set to: 0
  2780  003DB2  0EB6               	movlw	low vsnprintf@f
  2781  003DB4  6E68               	movwf	vfprintf@fp^0,c
  2782  003DB6  0E00               	movlw	high vsnprintf@f
  2783  003DB8  6E69               	movwf	(vfprintf@fp+1)^0,c
  2784  003DBA  C074  F06A         	movff	vsnprintf@fmt,vfprintf@fmt
  2785  003DBE  C075  F06B         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  2786  003DC2  C076  F06C         	movff	vsnprintf@ap,vfprintf@ap
  2787  003DC6  C077  F06D         	movff	vsnprintf@ap+1,vfprintf@ap+1
  2788  003DCA  EC02  F039         	call	_vfprintf	;wreg free
  2789  003DCE  C068  F0B4         	movff	?_vfprintf,vsnprintf@cnt
  2790  003DD2  C069  F0B5         	movff	?_vfprintf+1,vsnprintf@cnt+1
  2791  003DD6  5072               	movf	vsnprintf@n^0,w,c
  2792  003DD8  1073               	iorwf	(vsnprintf@n+1)^0,w,c
  2793  003DDA  B4D8               	btfsc	status,2,c
  2794  003DDC  EFF2  F01E         	goto	u6021
  2795  003DE0  EFF5  F01E         	goto	u6020
  2796  003DE4                     u6021:
  2797  003DE4  FFFF               	dw	65535	; assembler added errata NOP
  2798  003DE6  EF2F  F01F         	goto	l4931
  2799  003DEA                     u6020:
  2800  003DEA  FFFF               	dw	65535	; assembler added errata NOP
  2801  003DEC  0100               	movlb	0	; () banked
  2802  003DEE  BFB5               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  2803  003DF0  EFFC  F01E         	goto	u6031
  2804  003DF4  EFFF  F01E         	goto	u6030
  2805  003DF8                     u6031:
  2806  003DF8  FFFF               	dw	65535	; assembler added errata NOP
  2807  003DFA  EF2F  F01F         	goto	l4931
  2808  003DFE                     u6030:
  2809  003DFE  FFFF               	dw	65535	; assembler added errata NOP
  2810  003E00                     
  2811                           ; BSR set to: 0
  2812  003E00  0EFF               	movlw	255
  2813  003E02  6E78               	movwf	??_vsnprintf^0,c
  2814  003E04  0EFF               	movlw	255
  2815  003E06  6E79               	movwf	(??_vsnprintf+1)^0,c
  2816  003E08  C072  F07A         	movff	vsnprintf@n,??_vsnprintf+2
  2817  003E0C  C073  F07B         	movff	vsnprintf@n+1,??_vsnprintf+3
  2818  003E10  5078               	movf	??_vsnprintf^0,w,c
  2819  003E12  267A               	addwf	(??_vsnprintf+2)^0,f,c
  2820  003E14  5079               	movf	(??_vsnprintf+1)^0,w,c
  2821  003E16  227B               	addwfc	(??_vsnprintf+3)^0,f,c
  2822  003E18  507A               	movf	(??_vsnprintf+2)^0,w,c
  2823  003E1A  5DB4               	subwf	vsnprintf@cnt& (0+255),w,b
  2824  003E1C  507B               	movf	(??_vsnprintf+3)^0,w,c
  2825  003E1E  59B5               	subwfb	(vsnprintf@cnt+1)& (0+255),w,b
  2826  003E20  A0D8               	btfss	status,0,c
  2827  003E22  EF15  F01F         	goto	u6041
  2828  003E26  EF18  F01F         	goto	u6040
  2829  003E2A                     u6041:
  2830  003E2A  FFFF               	dw	65535	; assembler added errata NOP
  2831  003E2C  EF21  F01F         	goto	l1031
  2832  003E30                     u6040:
  2833  003E30  FFFF               	dw	65535	; assembler added errata NOP
  2834  003E32                     
  2835                           ; BSR set to: 0
  2836  003E32  0EFF               	movlw	255
  2837  003E34  2472               	addwf	vsnprintf@n^0,w,c
  2838  003E36  6FB2               	movwf	_vsnprintf$1416& (0+255),b
  2839  003E38  0EFF               	movlw	255
  2840  003E3A  2073               	addwfc	(vsnprintf@n+1)^0,w,c
  2841  003E3C  6FB3               	movwf	(_vsnprintf$1416+1)& (0+255),b
  2842  003E3E  EF26  F01F         	goto	l4929
  2843  003E42                     l1031:
  2844  003E42  FFFF               	dw	65535	; assembler added errata NOP
  2845                           
  2846                           ; BSR set to: 0
  2847  003E44  C0B4  F0B2         	movff	vsnprintf@cnt,_vsnprintf$1416
  2848  003E48  C0B5  F0B3         	movff	vsnprintf@cnt+1,_vsnprintf$1416+1
  2849  003E4C                     l4929:
  2850  003E4C  FFFF               	dw	65535	; assembler added errata NOP
  2851                           
  2852                           ; BSR set to: 0
  2853  003E4E  51B2               	movf	_vsnprintf$1416& (0+255),w,b
  2854  003E50  2470               	addwf	vsnprintf@s^0,w,c
  2855  003E52  6ED9               	movwf	fsr2l,c
  2856  003E54  51B3               	movf	(_vsnprintf$1416+1)& (0+255),w,b
  2857  003E56  2071               	addwfc	(vsnprintf@s+1)^0,w,c
  2858  003E58  6EDA               	movwf	fsr2h,c
  2859  003E5A  0E00               	movlw	0
  2860  003E5C  6EDF               	movwf	indf2,c
  2861  003E5E                     l4931:
  2862  003E5E  FFFF               	dw	65535	; assembler added errata NOP
  2863  003E60  C0B4  F070         	movff	vsnprintf@cnt,?_vsnprintf
  2864  003E64  C0B5  F071         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  2865  003E68                     l1026:
  2866  003E68  FFFF               	dw	65535	; assembler added errata NOP
  2867  003E6A  0012               	return		;funcret
  2868  003E6C  FFFF               	dw	65535	; errata NOP
  2869  003E6E                     __end_of_vsnprintf:
  2870                           	callstack 0
  2871                           
  2872 ;; *************** function _vfprintf *****************
  2873 ;; Defined at:
  2874 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2875 ;; Parameters:    Size  Location     Type
  2876 ;;  fp              2  103[COMRAM] PTR struct _IO_FILE
  2877 ;;		 -> vsnprintf@f(6), 
  2878 ;;  fmt             2  105[COMRAM] PTR const unsigned char 
  2879 ;;		 -> STR_8(3), 
  2880 ;;  ap              2  107[COMRAM] PTR PTR void 
  2881 ;;		 -> snprintf@ap(2), 
  2882 ;; Auto vars:     Size  Location     Type
  2883 ;;  cfmt            2  109[COMRAM] PTR unsigned char 
  2884 ;;		 -> STR_8(3), 
  2885 ;; Return value:  Size  Location     Type
  2886 ;;                  2  103[COMRAM] int 
  2887 ;; Registers used:
  2888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2889 ;; Tracked objects:
  2890 ;;		On entry : 0/0
  2891 ;;		On exit  : 0/0
  2892 ;;		Unchanged: 0/0
  2893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2894 ;;      Params:         6       0       0       0       0       0       0
  2895 ;;      Locals:         2       0       0       0       0       0       0
  2896 ;;      Temps:          0       0       0       0       0       0       0
  2897 ;;      Totals:         8       0       0       0       0       0       0
  2898 ;;Total ram usage:        8 bytes
  2899 ;; Hardware stack levels used:    1
  2900 ;; Hardware stack levels required when called:    7
  2901 ;; This function calls:
  2902 ;;		_vfpfcnvrt
  2903 ;; This function is called by:
  2904 ;;		_vsnprintf
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           	psect	text5
  2909  007204                     __ptext5:
  2910                           	callstack 0
  2911  007204                     _vfprintf:
  2912                           	callstack 0
  2913  007204  FFFF               	dw	65535	; assembler added errata NOP
  2914  007206                     
  2915                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2916  007206  C06A  F06E         	movff	vfprintf@fmt,vfprintf@cfmt
  2917  00720A  C06B  F06F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2918  00720E                     
  2919                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  2920  00720E  0E00               	movlw	0
  2921  007210  0100               	movlb	0	; () banked
  2922  007212  6F85               	movwf	(_nout+1)& (0+255),b
  2923  007214  0E00               	movlw	0
  2924  007216  6F84               	movwf	_nout& (0+255),b
  2925                           
  2926                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  2927  007218  EF22  F039         	goto	l4807
  2928  00721C                     l4805:
  2929  00721C  FFFF               	dw	65535	; assembler added errata NOP
  2930                           
  2931                           ; BSR set to: 0
  2932                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2933  00721E  C068  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  2934  007222  C069  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2935  007226  0E6E               	movlw	low vfprintf@cfmt
  2936  007228  6E45               	movwf	vfpfcnvrt@fmt^0,c
  2937  00722A  0E00               	movlw	high vfprintf@cfmt
  2938  00722C  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2939  00722E  C06C  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  2940  007232  C06D  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2941  007236  EC3D  F000         	call	_vfpfcnvrt	;wreg free
  2942  00723A  5043               	movf	?_vfpfcnvrt^0,w,c
  2943  00723C  0100               	movlb	0	; () banked
  2944  00723E  2784               	addwf	_nout& (0+255),f,b
  2945  007240  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  2946  007242  2385               	addwfc	(_nout+1)& (0+255),f,b
  2947  007244                     l4807:
  2948  007244  FFFF               	dw	65535	; assembler added errata NOP
  2949                           
  2950                           ; BSR set to: 0
  2951                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  2952  007246  C06E  FFF6         	movff	vfprintf@cfmt,tblptrl
  2953  00724A  C06F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2954  00724E                     	if	0	;tblptru may be non-zero
  2955  00724E                     	endif
  2956  00724E                     	if	0	;tblptru may be non-zero
  2957  00724E                     	endif
  2958  00724E  0008               	tblrd		*
  2959  007250  FFFF               	dw	65535	; errata NOP
  2960  007252  50F5               	movf	tablat,w,c
  2961  007254  0900               	iorlw	0
  2962  007256  A4D8               	btfss	status,2,c
  2963  007258  EF30  F039         	goto	u5861
  2964  00725C  EF33  F039         	goto	u5860
  2965  007260                     u5861:
  2966  007260  FFFF               	dw	65535	; assembler added errata NOP
  2967  007262  EF0E  F039         	goto	l4805
  2968  007266                     u5860:
  2969  007266  FFFF               	dw	65535	; assembler added errata NOP
  2970  007268                     
  2971                           ; BSR set to: 0
  2972                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  2973  007268  C084  F068         	movff	_nout,?_vfprintf
  2974  00726C  C085  F069         	movff	_nout+1,?_vfprintf+1
  2975  007270                     
  2976                           ; BSR set to: 0
  2977  007270  0012               	return		;funcret
  2978  007272  FFFF               	dw	65535	; errata NOP
  2979  007274                     __end_of_vfprintf:
  2980                           	callstack 0
  2981                           
  2982 ;; *************** function _vfpfcnvrt *****************
  2983 ;; Defined at:
  2984 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2985 ;; Parameters:    Size  Location     Type
  2986 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  2987 ;;		 -> vsnprintf@f(6), 
  2988 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  2989 ;;		 -> vfprintf@cfmt(2), 
  2990 ;;  ap              2   70[COMRAM] PTR PTR void 
  2991 ;;		 -> snprintf@ap(2), 
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;  llu             8   95[COMRAM] unsigned long long 
  2994 ;;  ll              8   84[COMRAM] long long 
  2995 ;;  f               4    0        long long 
  2996 ;;  ct              3    0        unsigned char [3]
  2997 ;;  vp              2   92[COMRAM] PTR void 
  2998 ;;		 -> ?_snprintf(2), STR_6(7), STR_5(9), STR_4(39), 
  2999 ;;		 -> STR_3(9), STR_2(64), STR_1(49), 
  3000 ;;  done            2   78[COMRAM] int 
  3001 ;;  cp              2   76[COMRAM] PTR unsigned char 
  3002 ;;		 -> ?_snprintf(2), STR_6(7), STR_5(9), STR_4(39), 
  3003 ;;		 -> STR_3(9), STR_2(64), STR_1(49), 
  3004 ;;  i               2    0        int 
  3005 ;;  c               1   94[COMRAM] unsigned char 
  3006 ;; Return value:  Size  Location     Type
  3007 ;;                  2   66[COMRAM] int 
  3008 ;; Registers used:
  3009 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3015 ;;      Params:         6       0       0       0       0       0       0
  3016 ;;      Locals:        27       0       0       0       0       0       0
  3017 ;;      Temps:          4       0       0       0       0       0       0
  3018 ;;      Totals:        37       0       0       0       0       0       0
  3019 ;;Total ram usage:       37 bytes
  3020 ;; Hardware stack levels used:    1
  3021 ;; Hardware stack levels required when called:    6
  3022 ;; This function calls:
  3023 ;;		_atoi
  3024 ;;		_ctoa
  3025 ;;		_dtoa
  3026 ;;		_fputc
  3027 ;;		_isdigit
  3028 ;;		_otoa
  3029 ;;		_stoa
  3030 ;;		_strncmp
  3031 ;;		_utoa
  3032 ;;		_xtoa
  3033 ;; This function is called by:
  3034 ;;		_vfprintf
  3035 ;; This function uses a non-reentrant model
  3036 ;;
  3037                           
  3038                           	psect	text6
  3039  00007A                     __ptext6:
  3040                           	callstack 0
  3041  00007A                     _vfpfcnvrt:
  3042                           	callstack 0
  3043  00007A  FFFF               	dw	65535	; assembler added errata NOP
  3044  00007C                     
  3045                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  3046  00007C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3047  000080  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3048  000084  CFDE FFF6          	movff	postinc2,tblptrl
  3049  000088  CFDD FFF7          	movff	postdec2,tblptrh
  3050  00008C                     	if	0	;tblptru may be non-zero
  3051  00008C                     	endif
  3052  00008C                     	if	0	;tblptru may be non-zero
  3053  00008C                     	endif
  3054  00008C  0008               	tblrd		*
  3055  00008E  FFFF               	dw	65535	; errata NOP
  3056  000090  50F5               	movf	tablat,w,c
  3057  000092  0A25               	xorlw	37
  3058  000094  A4D8               	btfss	status,2,c
  3059  000096  EF4F  F000         	goto	u4821
  3060  00009A  EF52  F000         	goto	u4820
  3061  00009E                     u4821:
  3062  00009E  FFFF               	dw	65535	; assembler added errata NOP
  3063  0000A0  EF0C  F00A         	goto	l4439
  3064  0000A4                     u4820:
  3065  0000A4  FFFF               	dw	65535	; assembler added errata NOP
  3066  0000A6                     
  3067                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  3068  0000A6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3069  0000AA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3070  0000AE  2ADE               	incf	postinc2,f,c
  3071  0000B0  0E00               	movlw	0
  3072  0000B2  22DD               	addwfc	postdec2,f,c
  3073  0000B4                     
  3074                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  3075  0000B4  0E00               	movlw	0
  3076  0000B6  0100               	movlb	0	; () banked
  3077  0000B8  6F87               	movwf	(_width+1)& (0+255),b
  3078  0000BA  0E00               	movlw	0
  3079  0000BC  6F86               	movwf	_width& (0+255),b
  3080  0000BE  C086  F07D         	movff	_width,_flags
  3081  0000C2  C087  F07E         	movff	_width+1,_flags+1
  3082  0000C6                     
  3083                           ; BSR set to: 0
  3084                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  3085  0000C6  6988               	setf	_prec& (0+255),b
  3086  0000C8  6989               	setf	(_prec+1)& (0+255),b
  3087  0000CA                     
  3088                           ; BSR set to: 0
  3089                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 688:         done
      +                           = 0;
  3090  0000CA  0E00               	movlw	0
  3091  0000CC  6E50               	movwf	(vfpfcnvrt@done+1)^0,c
  3092  0000CE  0E00               	movlw	0
  3093  0000D0  6E4F               	movwf	vfpfcnvrt@done^0,c
  3094                           
  3095                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  3096  0000D2  EFBB  F000         	goto	l4157
  3097  0000D6                     l4131:
  3098  0000D6  FFFF               	dw	65535	; assembler added errata NOP
  3099                           
  3100                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 692:             
      +                                  flags |= (1 << 0);
  3101  0000D8  807D               	bsf	_flags^0,0,c
  3102  0000DA                     l4133:
  3103  0000DA  FFFF               	dw	65535	; assembler added errata NOP
  3104                           
  3105                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 693:             
      +                                  ++*fmt;
  3106  0000DC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3107  0000E0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3108  0000E4  2ADE               	incf	postinc2,f,c
  3109  0000E6  0E00               	movlw	0
  3110  0000E8  22DD               	addwfc	postdec2,f,c
  3111                           
  3112                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 694:             
      +                                  break;
  3113  0000EA  EFBB  F000         	goto	l4157
  3114  0000EE                     l4135:
  3115  0000EE  FFFF               	dw	65535	; assembler added errata NOP
  3116                           
  3117                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 696:             
      +                                  flags |= (1 << 1);
  3118  0000F0  827D               	bsf	_flags^0,1,c
  3119  0000F2  EF6D  F000         	goto	l4133
  3120  0000F6                     l4139:
  3121  0000F6  FFFF               	dw	65535	; assembler added errata NOP
  3122                           
  3123                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 700:             
      +                                  flags |= (1 << 2);
  3124  0000F8  847D               	bsf	_flags^0,2,c
  3125  0000FA  EF6D  F000         	goto	l4133
  3126  0000FE                     l4143:
  3127  0000FE  FFFF               	dw	65535	; assembler added errata NOP
  3128                           
  3129                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 704:             
      +                                  flags |= (1 << 3);
  3130  000100  867D               	bsf	_flags^0,3,c
  3131  000102  EF6D  F000         	goto	l4133
  3132  000106                     l4147:
  3133  000106  FFFF               	dw	65535	; assembler added errata NOP
  3134                           
  3135                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 708:             
      +                                  flags |= (1 << 4);
  3136  000108  887D               	bsf	_flags^0,4,c
  3137  00010A  EF6D  F000         	goto	l4133
  3138  00010E                     l4151:
  3139  00010E  FFFF               	dw	65535	; assembler added errata NOP
  3140                           
  3141                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 712:             
      +                                  done = 1;
  3142  000110  0E00               	movlw	0
  3143  000112  6E50               	movwf	(vfpfcnvrt@done+1)^0,c
  3144  000114  0E01               	movlw	1
  3145  000116  6E4F               	movwf	vfpfcnvrt@done^0,c
  3146                           
  3147                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 713:             
      +                                  break;
  3148  000118  EFBB  F000         	goto	l4157
  3149  00011C                     l4155:
  3150  00011C  FFFF               	dw	65535	; assembler added errata NOP
  3151  00011E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3152  000122  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3153  000126  CFDE FFF6          	movff	postinc2,tblptrl
  3154  00012A  CFDD FFF7          	movff	postdec2,tblptrh
  3155  00012E                     	if	0	;tblptru may be non-zero
  3156  00012E                     	endif
  3157  00012E                     	if	0	;tblptru may be non-zero
  3158  00012E                     	endif
  3159  00012E  0008               	tblrd		*
  3160  000130  FFFF               	dw	65535	; errata NOP
  3161  000132  50F5               	movf	tablat,w,c
  3162  000134  6E49               	movwf	??_vfpfcnvrt^0,c
  3163  000136  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  3164                           
  3165                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3166                           ; Switch size 1, requested type "simple"
  3167                           ; Number of cases is 1, Range of values is 0 to 0
  3168                           ; switch strategies available:
  3169                           ; Name         Instructions Cycles
  3170                           ; simple_byte            4     3 (average)
  3171                           ;	Chosen strategy is simple_byte
  3172  000138  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  3173  00013A  0A00               	xorlw	0	; case 0
  3174  00013C  B4D8               	btfsc	status,2,c
  3175  00013E  EFA3  F000         	goto	l5339
  3176  000142  EF87  F000         	goto	l4151
  3177  000146                     l5339:
  3178  000146  FFFF               	dw	65535	; assembler added errata NOP
  3179                           
  3180                           ; Switch size 1, requested type "simple"
  3181                           ; Number of cases is 5, Range of values is 32 to 48
  3182                           ; switch strategies available:
  3183                           ; Name         Instructions Cycles
  3184                           ; simple_byte           16     9 (average)
  3185                           ;	Chosen strategy is simple_byte
  3186  000148  5049               	movf	??_vfpfcnvrt^0,w,c
  3187  00014A  0A20               	xorlw	32	; case 32
  3188  00014C  B4D8               	btfsc	status,2,c
  3189  00014E  EF7F  F000         	goto	l4143
  3190  000152  0A03               	xorlw	3	; case 35
  3191  000154  B4D8               	btfsc	status,2,c
  3192  000156  EF83  F000         	goto	l4147
  3193  00015A  0A08               	xorlw	8	; case 43
  3194  00015C  B4D8               	btfsc	status,2,c
  3195  00015E  EF7B  F000         	goto	l4139
  3196  000162  0A06               	xorlw	6	; case 45
  3197  000164  B4D8               	btfsc	status,2,c
  3198  000166  EF6B  F000         	goto	l4131
  3199  00016A  0A1D               	xorlw	29	; case 48
  3200  00016C  B4D8               	btfsc	status,2,c
  3201  00016E  EF77  F000         	goto	l4135
  3202  000172  EF87  F000         	goto	l4151
  3203  000176                     l4157:
  3204  000176  FFFF               	dw	65535	; assembler added errata NOP
  3205                           
  3206                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  3207  000178  504F               	movf	vfpfcnvrt@done^0,w,c
  3208  00017A  1050               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  3209  00017C  B4D8               	btfsc	status,2,c
  3210  00017E  EFC3  F000         	goto	u4831
  3211  000182  EFC6  F000         	goto	u4830
  3212  000186                     u4831:
  3213  000186  FFFF               	dw	65535	; assembler added errata NOP
  3214  000188  EF8E  F000         	goto	l4155
  3215  00018C                     u4830:
  3216  00018C  FFFF               	dw	65535	; assembler added errata NOP
  3217  00018E                     
  3218                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 716:         if (
      +                          flags & (1 << 0)) {
  3219  00018E  A07D               	btfss	_flags^0,0,c
  3220  000190  EFCC  F000         	goto	u4841
  3221  000194  EFCF  F000         	goto	u4840
  3222  000198                     u4841:
  3223  000198  FFFF               	dw	65535	; assembler added errata NOP
  3224  00019A  EFD1  F000         	goto	l4161
  3225  00019E                     u4840:
  3226  00019E  FFFF               	dw	65535	; assembler added errata NOP
  3227  0001A0                     
  3228                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 717:             
      +                          flags &= ~(1 << 1);
  3229  0001A0  927D               	bcf	_flags^0,1,c
  3230  0001A2                     l4161:
  3231  0001A2  FFFF               	dw	65535	; assembler added errata NOP
  3232                           
  3233                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  3234  0001A4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3235  0001A8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3236  0001AC  CFDE FFF6          	movff	postinc2,tblptrl
  3237  0001B0  CFDD FFF7          	movff	postdec2,tblptrh
  3238  0001B4                     	if	0	;tblptru may be non-zero
  3239  0001B4                     	endif
  3240  0001B4                     	if	0	;tblptru may be non-zero
  3241  0001B4                     	endif
  3242  0001B4  0008               	tblrd		*
  3243  0001B6  FFFF               	dw	65535	; errata NOP
  3244  0001B8  50F5               	movf	tablat,w,c
  3245  0001BA  0A2A               	xorlw	42
  3246  0001BC  A4D8               	btfss	status,2,c
  3247  0001BE  EFE3  F000         	goto	u4851
  3248  0001C2  EFE6  F000         	goto	u4850
  3249  0001C6                     u4851:
  3250  0001C6  FFFF               	dw	65535	; assembler added errata NOP
  3251  0001C8  EF13  F001         	goto	l4169
  3252  0001CC                     u4850:
  3253  0001CC  FFFF               	dw	65535	; assembler added errata NOP
  3254  0001CE                     
  3255                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  3256  0001CE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3257  0001D2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3258  0001D6  2ADE               	incf	postinc2,f,c
  3259  0001D8  0E00               	movlw	0
  3260  0001DA  22DD               	addwfc	postdec2,f,c
  3261                           
  3262                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3263  0001DC  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3264  0001E0  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3265  0001E4  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3266  0001E8  0E02               	movlw	2
  3267  0001EA  26DE               	addwf	postinc2,f,c
  3268  0001EC  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3269  0001F0  0E00               	movlw	0
  3270  0001F2  22DD               	addwfc	postdec2,f,c
  3271  0001F4  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3272  0001F8  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3273  0001FC  CFDE F086          	movff	postinc2,_width
  3274  000200  CFDD F087          	movff	postdec2,_width+1
  3275  000204                     
  3276                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  3277  000204  0100               	movlb	0	; () banked
  3278  000206  BF87               	btfsc	(_width+1)& (0+255),7,b
  3279  000208  EF0B  F001         	goto	u4860
  3280  00020C  EF08  F001         	goto	u4861
  3281  000210                     u4861:
  3282  000210  FFFF               	dw	65535	; assembler added errata NOP
  3283  000212  EF5E  F001         	goto	l4179
  3284  000216                     u4860:
  3285  000216  FFFF               	dw	65535	; assembler added errata NOP
  3286  000218                     
  3287                           ; BSR set to: 0
  3288                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  3289  000218  807D               	bsf	_flags^0,0,c
  3290                           
  3291                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  3292  00021A  6D86               	negf	_width& (0+255),b
  3293  00021C  1F87               	comf	(_width+1)& (0+255),f,b
  3294  00021E  B0D8               	btfsc	status,0,c
  3295  000220  2B87               	incf	(_width+1)& (0+255),f,b
  3296  000222  EF5E  F001         	goto	l4179
  3297  000226                     l4169:
  3298  000226  FFFF               	dw	65535	; assembler added errata NOP
  3299                           
  3300                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  3301  000228  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3302  00022C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3303  000230  CFDE F008          	movff	postinc2,atoi@s
  3304  000234  CFDD F009          	movff	postdec2,atoi@s+1
  3305  000238  EC11  F01C         	call	_atoi	;wreg free
  3306  00023C  C008  F086         	movff	?_atoi,_width
  3307  000240  C009  F087         	movff	?_atoi+1,_width+1
  3308                           
  3309                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3310  000244  EF2C  F001         	goto	l4173
  3311  000248                     l4171:
  3312  000248  FFFF               	dw	65535	; assembler added errata NOP
  3313                           
  3314                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  3315  00024A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3316  00024E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3317  000252  2ADE               	incf	postinc2,f,c
  3318  000254  0E00               	movlw	0
  3319  000256  22DD               	addwfc	postdec2,f,c
  3320  000258                     l4173:
  3321  000258  FFFF               	dw	65535	; assembler added errata NOP
  3322  00025A  0ED0               	movlw	208
  3323  00025C  6E49               	movwf	??_vfpfcnvrt^0,c
  3324  00025E  0EFF               	movlw	255
  3325  000260  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  3326  000262  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3327  000266  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3328  00026A  CFDE FFF6          	movff	postinc2,tblptrl
  3329  00026E  CFDD FFF7          	movff	postdec2,tblptrh
  3330  000272                     	if	0	;tblptru may be non-zero
  3331  000272                     	endif
  3332  000272                     	if	0	;tblptru may be non-zero
  3333  000272                     	endif
  3334  000272  0008               	tblrd		*
  3335  000274  FFFF               	dw	65535	; errata NOP
  3336  000276  50F5               	movf	tablat,w,c
  3337  000278  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  3338  00027A  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  3339  00027C  5049               	movf	??_vfpfcnvrt^0,w,c
  3340  00027E  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3341  000280  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  3342  000282  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3343  000284  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  3344  000286  E10B               	bnz	u4870
  3345  000288  0E0A               	movlw	10
  3346  00028A  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3347  00028C  A0D8               	btfss	status,0,c
  3348  00028E  EF4B  F001         	goto	u4871
  3349  000292  EF4F  F001         	goto	u4870
  3350  000296                     u4871:
  3351  000296  FFFF               	dw	65535	; assembler added errata NOP
  3352  000298  0E01               	movlw	1
  3353  00029A  EF51  F001         	goto	u4880
  3354  00029E                     u4870:
  3355  00029E  FFFF               	dw	65535	; assembler added errata NOP
  3356  0002A0  0E00               	movlw	0
  3357  0002A2                     u4880:
  3358  0002A2  FFFF               	dw	65535	; assembler added errata NOP
  3359  0002A4  6E51               	movwf	_vfpfcnvrt$1553^0,c
  3360  0002A6  6A52               	clrf	(_vfpfcnvrt$1553+1)^0,c
  3361  0002A8  5051               	movf	_vfpfcnvrt$1553^0,w,c
  3362  0002AA  1052               	iorwf	(_vfpfcnvrt$1553+1)^0,w,c
  3363  0002AC  A4D8               	btfss	status,2,c
  3364  0002AE  EF5B  F001         	goto	u4891
  3365  0002B2  EF5E  F001         	goto	u4890
  3366  0002B6                     u4891:
  3367  0002B6  FFFF               	dw	65535	; assembler added errata NOP
  3368  0002B8  EF24  F001         	goto	l4171
  3369  0002BC                     u4890:
  3370  0002BC                     l4179:
  3371  0002BC  FFFF               	dw	65535	; assembler added errata NOP
  3372                           
  3373                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  3374  0002BE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3375  0002C2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3376  0002C6  CFDE FFF6          	movff	postinc2,tblptrl
  3377  0002CA  CFDD FFF7          	movff	postdec2,tblptrh
  3378  0002CE                     	if	0	;tblptru may be non-zero
  3379  0002CE                     	endif
  3380  0002CE                     	if	0	;tblptru may be non-zero
  3381  0002CE                     	endif
  3382  0002CE  0008               	tblrd		*
  3383  0002D0  FFFF               	dw	65535	; errata NOP
  3384  0002D2  50F5               	movf	tablat,w,c
  3385  0002D4  0A2E               	xorlw	46
  3386  0002D6  A4D8               	btfss	status,2,c
  3387  0002D8  EF70  F001         	goto	u4901
  3388  0002DC  EF73  F001         	goto	u4900
  3389  0002E0                     u4901:
  3390  0002E0  FFFF               	dw	65535	; assembler added errata NOP
  3391  0002E2  EFFD  F001         	goto	l4199
  3392  0002E6                     u4900:
  3393  0002E6  FFFF               	dw	65535	; assembler added errata NOP
  3394  0002E8                     
  3395                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  3396  0002E8  0E00               	movlw	0
  3397  0002EA  0100               	movlb	0	; () banked
  3398  0002EC  6F89               	movwf	(_prec+1)& (0+255),b
  3399  0002EE  0E00               	movlw	0
  3400  0002F0  6F88               	movwf	_prec& (0+255),b
  3401  0002F2                     
  3402                           ; BSR set to: 0
  3403                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  3404  0002F2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3405  0002F6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3406  0002FA  2ADE               	incf	postinc2,f,c
  3407  0002FC  0E00               	movlw	0
  3408  0002FE  22DD               	addwfc	postdec2,f,c
  3409  000300                     
  3410                           ; BSR set to: 0
  3411                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  3412  000300  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3413  000304  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3414  000308  CFDE FFF6          	movff	postinc2,tblptrl
  3415  00030C  CFDD FFF7          	movff	postdec2,tblptrh
  3416  000310                     	if	0	;tblptru may be non-zero
  3417  000310                     	endif
  3418  000310                     	if	0	;tblptru may be non-zero
  3419  000310                     	endif
  3420  000310  0008               	tblrd		*
  3421  000312  FFFF               	dw	65535	; errata NOP
  3422  000314  50F5               	movf	tablat,w,c
  3423  000316  0A2A               	xorlw	42
  3424  000318  A4D8               	btfss	status,2,c
  3425  00031A  EF91  F001         	goto	u4911
  3426  00031E  EF94  F001         	goto	u4910
  3427  000322                     u4911:
  3428  000322  FFFF               	dw	65535	; assembler added errata NOP
  3429  000324  EFB2  F001         	goto	l4189
  3430  000328                     u4910:
  3431  000328  FFFF               	dw	65535	; assembler added errata NOP
  3432  00032A                     
  3433                           ; BSR set to: 0
  3434                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  3435  00032A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3436  00032E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3437  000332  2ADE               	incf	postinc2,f,c
  3438  000334  0E00               	movlw	0
  3439  000336  22DD               	addwfc	postdec2,f,c
  3440                           
  3441                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3442  000338  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3443  00033C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3444  000340  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3445  000344  0E02               	movlw	2
  3446  000346  26DE               	addwf	postinc2,f,c
  3447  000348  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3448  00034C  0E00               	movlw	0
  3449  00034E  22DD               	addwfc	postdec2,f,c
  3450  000350  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3451  000354  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3452  000358  CFDE F088          	movff	postinc2,_prec
  3453  00035C  CFDD F089          	movff	postdec2,_prec+1
  3454                           
  3455                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  3456  000360  EFFD  F001         	goto	l4199
  3457  000364                     l4189:
  3458  000364  FFFF               	dw	65535	; assembler added errata NOP
  3459                           
  3460                           ; BSR set to: 0
  3461                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  3462  000366  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3463  00036A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3464  00036E  CFDE F008          	movff	postinc2,atoi@s
  3465  000372  CFDD F009          	movff	postdec2,atoi@s+1
  3466  000376  EC11  F01C         	call	_atoi	;wreg free
  3467  00037A  C008  F088         	movff	?_atoi,_prec
  3468  00037E  C009  F089         	movff	?_atoi+1,_prec+1
  3469                           
  3470                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3471  000382  EFCB  F001         	goto	l4193
  3472  000386                     l4191:
  3473  000386  FFFF               	dw	65535	; assembler added errata NOP
  3474                           
  3475                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  3476  000388  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3477  00038C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3478  000390  2ADE               	incf	postinc2,f,c
  3479  000392  0E00               	movlw	0
  3480  000394  22DD               	addwfc	postdec2,f,c
  3481  000396                     l4193:
  3482  000396  FFFF               	dw	65535	; assembler added errata NOP
  3483  000398  0ED0               	movlw	208
  3484  00039A  6E49               	movwf	??_vfpfcnvrt^0,c
  3485  00039C  0EFF               	movlw	255
  3486  00039E  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  3487  0003A0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3488  0003A4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3489  0003A8  CFDE FFF6          	movff	postinc2,tblptrl
  3490  0003AC  CFDD FFF7          	movff	postdec2,tblptrh
  3491  0003B0                     	if	0	;tblptru may be non-zero
  3492  0003B0                     	endif
  3493  0003B0                     	if	0	;tblptru may be non-zero
  3494  0003B0                     	endif
  3495  0003B0  0008               	tblrd		*
  3496  0003B2  FFFF               	dw	65535	; errata NOP
  3497  0003B4  50F5               	movf	tablat,w,c
  3498  0003B6  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  3499  0003B8  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  3500  0003BA  5049               	movf	??_vfpfcnvrt^0,w,c
  3501  0003BC  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3502  0003BE  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  3503  0003C0  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3504  0003C2  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  3505  0003C4  E10B               	bnz	u4920
  3506  0003C6  0E0A               	movlw	10
  3507  0003C8  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3508  0003CA  A0D8               	btfss	status,0,c
  3509  0003CC  EFEA  F001         	goto	u4921
  3510  0003D0  EFEE  F001         	goto	u4920
  3511  0003D4                     u4921:
  3512  0003D4  FFFF               	dw	65535	; assembler added errata NOP
  3513  0003D6  0E01               	movlw	1
  3514  0003D8  EFF0  F001         	goto	u4930
  3515  0003DC                     u4920:
  3516  0003DC  FFFF               	dw	65535	; assembler added errata NOP
  3517  0003DE  0E00               	movlw	0
  3518  0003E0                     u4930:
  3519  0003E0  FFFF               	dw	65535	; assembler added errata NOP
  3520  0003E2  6E53               	movwf	_vfpfcnvrt$1554^0,c
  3521  0003E4  6A54               	clrf	(_vfpfcnvrt$1554+1)^0,c
  3522  0003E6  5053               	movf	_vfpfcnvrt$1554^0,w,c
  3523  0003E8  1054               	iorwf	(_vfpfcnvrt$1554+1)^0,w,c
  3524  0003EA  A4D8               	btfss	status,2,c
  3525  0003EC  EFFA  F001         	goto	u4941
  3526  0003F0  EFFD  F001         	goto	u4940
  3527  0003F4                     u4941:
  3528  0003F4  FFFF               	dw	65535	; assembler added errata NOP
  3529  0003F6  EFC3  F001         	goto	l4191
  3530  0003FA                     u4940:
  3531  0003FA                     l4199:
  3532  0003FA  FFFF               	dw	65535	; assembler added errata NOP
  3533                           
  3534                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 792:         if (
      +                          *fmt[0] == 'c') {
  3535  0003FC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3536  000400  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3537  000404  CFDE FFF6          	movff	postinc2,tblptrl
  3538  000408  CFDD FFF7          	movff	postdec2,tblptrh
  3539  00040C                     	if	0	;tblptru may be non-zero
  3540  00040C                     	endif
  3541  00040C                     	if	0	;tblptru may be non-zero
  3542  00040C                     	endif
  3543  00040C  0008               	tblrd		*
  3544  00040E  FFFF               	dw	65535	; errata NOP
  3545  000410  50F5               	movf	tablat,w,c
  3546  000412  0A63               	xorlw	99
  3547  000414  A4D8               	btfss	status,2,c
  3548  000416  EF0F  F002         	goto	u4951
  3549  00041A  EF12  F002         	goto	u4950
  3550  00041E                     u4951:
  3551  00041E  FFFF               	dw	65535	; assembler added errata NOP
  3552  000420  EF3A  F002         	goto	l4207
  3553  000424                     u4950:
  3554  000424  FFFF               	dw	65535	; assembler added errata NOP
  3555  000426                     
  3556                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 793:             
      +                          ++*fmt;
  3557  000426  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3558  00042A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3559  00042E  2ADE               	incf	postinc2,f,c
  3560  000430  0E00               	movlw	0
  3561  000432  22DD               	addwfc	postdec2,f,c
  3562                           
  3563                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 794:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3564  000434  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3565  000438  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3566  00043C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3567  000440  0E02               	movlw	2
  3568  000442  26DE               	addwf	postinc2,f,c
  3569  000444  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3570  000448  0E00               	movlw	0
  3571  00044A  22DD               	addwfc	postdec2,f,c
  3572  00044C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3573  000450  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3574  000454  50DF               	movf	indf2,w,c
  3575  000456  6E5F               	movwf	vfpfcnvrt@c^0,c
  3576  000458                     
  3577                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 795:             
      +                          return ctoa(fp, c);
  3578  000458  C043  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  3579  00045C  C044  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  3580  000460  C05F  F01E         	movff	vfpfcnvrt@c,ctoa@c
  3581  000464  EC62  F038         	call	_ctoa	;wreg free
  3582  000468  C01C  F043         	movff	?_ctoa,?_vfpfcnvrt
  3583  00046C  C01D  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  3584  000470  EF29  F00A         	goto	l1231
  3585  000474                     l4207:
  3586  000474  FFFF               	dw	65535	; assembler added errata NOP
  3587                           
  3588                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 802:         if (
      +                          !strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi", ((s
      +                          izeof("hhi")/sizeof("hhi"[0]))-1))) {
  3589  000476  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3590  00047A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3591  00047E  CFDE F001          	movff	postinc2,strncmp@_l
  3592  000482  CFDD F002          	movff	postdec2,strncmp@_l+1
  3593  000486  0ECE               	movlw	low STR_9
  3594  000488  6E03               	movwf	strncmp@_r^0,c
  3595  00048A  0E7F               	movlw	high STR_9
  3596  00048C  6E04               	movwf	(strncmp@_r+1)^0,c
  3597  00048E  0E00               	movlw	0
  3598  000490  6E06               	movwf	(strncmp@n+1)^0,c
  3599  000492  0E03               	movlw	3
  3600  000494  6E05               	movwf	strncmp@n^0,c
  3601  000496  ECDA  F03D         	call	_strncmp	;wreg free
  3602  00049A  5001               	movf	?_strncmp^0,w,c
  3603  00049C  1002               	iorwf	(?_strncmp+1)^0,w,c
  3604  00049E  B4D8               	btfsc	status,2,c
  3605  0004A0  EF54  F002         	goto	u4961
  3606  0004A4  EF57  F002         	goto	u4960
  3607  0004A8                     u4961:
  3608  0004A8  FFFF               	dw	65535	; assembler added errata NOP
  3609  0004AA  EF74  F002         	goto	l4211
  3610  0004AE                     u4960:
  3611  0004AE  FFFF               	dw	65535	; assembler added errata NOP
  3612  0004B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3613  0004B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3614  0004B8  CFDE F001          	movff	postinc2,strncmp@_l
  3615  0004BC  CFDD F002          	movff	postdec2,strncmp@_l+1
  3616  0004C0  0ED2               	movlw	low STR_13
  3617  0004C2  6E03               	movwf	strncmp@_r^0,c
  3618  0004C4  0E7F               	movlw	high STR_13
  3619  0004C6  6E04               	movwf	(strncmp@_r+1)^0,c
  3620  0004C8  0E00               	movlw	0
  3621  0004CA  6E06               	movwf	(strncmp@n+1)^0,c
  3622  0004CC  0E03               	movlw	3
  3623  0004CE  6E05               	movwf	strncmp@n^0,c
  3624  0004D0  ECDA  F03D         	call	_strncmp	;wreg free
  3625  0004D4  5001               	movf	?_strncmp^0,w,c
  3626  0004D6  1002               	iorwf	(?_strncmp+1)^0,w,c
  3627  0004D8  A4D8               	btfss	status,2,c
  3628  0004DA  EF71  F002         	goto	u4971
  3629  0004DE  EF74  F002         	goto	u4970
  3630  0004E2                     u4971:
  3631  0004E2  FFFF               	dw	65535	; assembler added errata NOP
  3632  0004E4  EFB6  F002         	goto	l4217
  3633  0004E8                     u4970:
  3634  0004E8                     l4211:
  3635  0004E8  FFFF               	dw	65535	; assembler added errata NOP
  3636                           
  3637                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 803: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 805:             *fmt += ((si
      +                          zeof("hhd")/sizeof("hhd"[0]))-1);
  3638  0004EA  0E03               	movlw	3
  3639  0004EC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3640  0004F0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3641  0004F4  26DE               	addwf	postinc2,f,c
  3642  0004F6  0E00               	movlw	0
  3643  0004F8  22DD               	addwfc	postdec2,f,c
  3644                           
  3645                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 806:             
      +                          ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3646  0004FA  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3647  0004FE  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3648  000502  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3649  000506  0E02               	movlw	2
  3650  000508  26DE               	addwf	postinc2,f,c
  3651  00050A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3652  00050E  0E00               	movlw	0
  3653  000510  22DD               	addwfc	postdec2,f,c
  3654  000512  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3655  000516  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3656  00051A  50DF               	movf	indf2,w,c
  3657  00051C  6E55               	movwf	vfpfcnvrt@ll^0,c
  3658  00051E  0E00               	movlw	0
  3659  000520  BE55               	btfsc	vfpfcnvrt@ll^0,7,c
  3660  000522  0EFF               	movlw	-1
  3661  000524  6E56               	movwf	(vfpfcnvrt@ll+1)^0,c
  3662  000526  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  3663  000528  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  3664  00052A  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  3665  00052C  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  3666  00052E  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  3667  000530  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  3668  000532                     l4213:
  3669  000532  FFFF               	dw	65535	; assembler added errata NOP
  3670                           
  3671                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 808:             
      +                          return dtoa(fp, ll);
  3672  000534  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  3673  000538  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3674  00053C  C055  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  3675  000540  C056  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3676  000544  C057  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3677  000548  C058  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3678  00054C  C059  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3679  000550  C05A  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3680  000554  C05B  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3681  000558  C05C  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3682  00055C  ECD5  F015         	call	_dtoa	;wreg free
  3683  000560  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  3684  000564  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3685  000568  EF29  F00A         	goto	l1231
  3686  00056C                     l4217:
  3687  00056C  FFFF               	dw	65535	; assembler added errata NOP
  3688                           
  3689                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          !strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", ((sizeo
      +                          f("hi")/sizeof("hi"[0]))-1))) {
  3690  00056E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3691  000572  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3692  000576  CFDE F001          	movff	postinc2,strncmp@_l
  3693  00057A  CFDD F002          	movff	postdec2,strncmp@_l+1
  3694  00057E  0ECF               	movlw	low (STR_9+1)
  3695  000580  6E03               	movwf	strncmp@_r^0,c
  3696  000582  0E7F               	movlw	high (STR_9+1)
  3697  000584  6E04               	movwf	(strncmp@_r+1)^0,c
  3698  000586  0E00               	movlw	0
  3699  000588  6E06               	movwf	(strncmp@n+1)^0,c
  3700  00058A  0E02               	movlw	2
  3701  00058C  6E05               	movwf	strncmp@n^0,c
  3702  00058E  ECDA  F03D         	call	_strncmp	;wreg free
  3703  000592  5001               	movf	?_strncmp^0,w,c
  3704  000594  1002               	iorwf	(?_strncmp+1)^0,w,c
  3705  000596  B4D8               	btfsc	status,2,c
  3706  000598  EFD0  F002         	goto	u4981
  3707  00059C  EFD3  F002         	goto	u4980
  3708  0005A0                     u4981:
  3709  0005A0  FFFF               	dw	65535	; assembler added errata NOP
  3710  0005A2  EFF0  F002         	goto	l4221
  3711  0005A6                     u4980:
  3712  0005A6  FFFF               	dw	65535	; assembler added errata NOP
  3713  0005A8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3714  0005AC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3715  0005B0  CFDE F001          	movff	postinc2,strncmp@_l
  3716  0005B4  CFDD F002          	movff	postdec2,strncmp@_l+1
  3717  0005B8  0ED3               	movlw	low (STR_13+1)
  3718  0005BA  6E03               	movwf	strncmp@_r^0,c
  3719  0005BC  0E7F               	movlw	high (STR_13+1)
  3720  0005BE  6E04               	movwf	(strncmp@_r+1)^0,c
  3721  0005C0  0E00               	movlw	0
  3722  0005C2  6E06               	movwf	(strncmp@n+1)^0,c
  3723  0005C4  0E02               	movlw	2
  3724  0005C6  6E05               	movwf	strncmp@n^0,c
  3725  0005C8  ECDA  F03D         	call	_strncmp	;wreg free
  3726  0005CC  5001               	movf	?_strncmp^0,w,c
  3727  0005CE  1002               	iorwf	(?_strncmp+1)^0,w,c
  3728  0005D0  A4D8               	btfss	status,2,c
  3729  0005D2  EFED  F002         	goto	u4991
  3730  0005D6  EFF0  F002         	goto	u4990
  3731  0005DA                     u4991:
  3732  0005DA  FFFF               	dw	65535	; assembler added errata NOP
  3733  0005DC  EF18  F003         	goto	l4227
  3734  0005E0                     u4990:
  3735  0005E0                     l4221:
  3736  0005E0  FFFF               	dw	65535	; assembler added errata NOP
  3737                           
  3738                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 815: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 817:             *fmt += ((si
      +                          zeof("hd")/sizeof("hd"[0]))-1);
  3739  0005E2  0E02               	movlw	2
  3740  0005E4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3741  0005E8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3742  0005EC  26DE               	addwf	postinc2,f,c
  3743  0005EE  0E00               	movlw	0
  3744  0005F0  22DD               	addwfc	postdec2,f,c
  3745                           
  3746                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 818:             
      +                          ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  3747  0005F2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3748  0005F6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3749  0005FA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3750  0005FE  0E02               	movlw	2
  3751  000600  26DE               	addwf	postinc2,f,c
  3752  000602  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3753  000606  0E00               	movlw	0
  3754  000608  22DD               	addwfc	postdec2,f,c
  3755  00060A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3756  00060E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3757  000612  CFDE F055          	movff	postinc2,vfpfcnvrt@ll
  3758  000616  CFDD F056          	movff	postdec2,vfpfcnvrt@ll+1
  3759  00061A  0E00               	movlw	0
  3760  00061C  BE56               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  3761  00061E  0EFF               	movlw	-1
  3762  000620  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  3763  000622  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  3764  000624  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  3765  000626  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  3766  000628  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  3767  00062A  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  3768  00062C  EF99  F002         	goto	l4213
  3769  000630                     l4227:
  3770  000630  FFFF               	dw	65535	; assembler added errata NOP
  3771                           
  3772                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3773  000632  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3774  000636  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3775  00063A  CFDE FFF6          	movff	postinc2,tblptrl
  3776  00063E  CFDD FFF7          	movff	postdec2,tblptrh
  3777  000642                     	if	0	;tblptru may be non-zero
  3778  000642                     	endif
  3779  000642                     	if	0	;tblptru may be non-zero
  3780  000642                     	endif
  3781  000642  0008               	tblrd		*
  3782  000644  FFFF               	dw	65535	; errata NOP
  3783  000646  50F5               	movf	tablat,w,c
  3784  000648  0A64               	xorlw	100
  3785  00064A  B4D8               	btfsc	status,2,c
  3786  00064C  EF2A  F003         	goto	u5001
  3787  000650  EF2D  F003         	goto	u5000
  3788  000654                     u5001:
  3789  000654  FFFF               	dw	65535	; assembler added errata NOP
  3790  000656  EF42  F003         	goto	l4231
  3791  00065A                     u5000:
  3792  00065A  FFFF               	dw	65535	; assembler added errata NOP
  3793  00065C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3794  000660  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3795  000664  CFDE FFF6          	movff	postinc2,tblptrl
  3796  000668  CFDD FFF7          	movff	postdec2,tblptrh
  3797  00066C                     	if	0	;tblptru may be non-zero
  3798  00066C                     	endif
  3799  00066C                     	if	0	;tblptru may be non-zero
  3800  00066C                     	endif
  3801  00066C  0008               	tblrd		*
  3802  00066E  FFFF               	dw	65535	; errata NOP
  3803  000670  50F5               	movf	tablat,w,c
  3804  000672  0A69               	xorlw	105
  3805  000674  A4D8               	btfss	status,2,c
  3806  000676  EF3F  F003         	goto	u5011
  3807  00067A  EF42  F003         	goto	u5010
  3808  00067E                     u5011:
  3809  00067E  FFFF               	dw	65535	; assembler added errata NOP
  3810  000680  EF69  F003         	goto	l4237
  3811  000684                     u5010:
  3812  000684                     l4231:
  3813  000684  FFFF               	dw	65535	; assembler added errata NOP
  3814                           
  3815                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  3816  000686  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3817  00068A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3818  00068E  2ADE               	incf	postinc2,f,c
  3819  000690  0E00               	movlw	0
  3820  000692  22DD               	addwfc	postdec2,f,c
  3821                           
  3822                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3823  000694  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3824  000698  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3825  00069C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3826  0006A0  0E02               	movlw	2
  3827  0006A2  26DE               	addwf	postinc2,f,c
  3828  0006A4  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3829  0006A8  0E00               	movlw	0
  3830  0006AA  22DD               	addwfc	postdec2,f,c
  3831  0006AC  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3832  0006B0  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3833  0006B4  CFDE F055          	movff	postinc2,vfpfcnvrt@ll
  3834  0006B8  CFDD F056          	movff	postdec2,vfpfcnvrt@ll+1
  3835  0006BC  0E00               	movlw	0
  3836  0006BE  BE56               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  3837  0006C0  0EFF               	movlw	-1
  3838  0006C2  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  3839  0006C4  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  3840  0006C6  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  3841  0006C8  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  3842  0006CA  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  3843  0006CC  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  3844  0006CE  EF99  F002         	goto	l4213
  3845  0006D2                     l4237:
  3846  0006D2  FFFF               	dw	65535	; assembler added errata NOP
  3847                           
  3848                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 883:         if (
      +                          !strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", ((sizeo
      +                          f("zi")/sizeof("zi"[0]))-1))) {
  3849  0006D4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3850  0006D8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3851  0006DC  CFDE F001          	movff	postinc2,strncmp@_l
  3852  0006E0  CFDD F002          	movff	postdec2,strncmp@_l+1
  3853  0006E4  0EE9               	movlw	low STR_27
  3854  0006E6  6E03               	movwf	strncmp@_r^0,c
  3855  0006E8  0E7F               	movlw	high STR_27
  3856  0006EA  6E04               	movwf	(strncmp@_r+1)^0,c
  3857  0006EC  0E00               	movlw	0
  3858  0006EE  6E06               	movwf	(strncmp@n+1)^0,c
  3859  0006F0  0E02               	movlw	2
  3860  0006F2  6E05               	movwf	strncmp@n^0,c
  3861  0006F4  ECDA  F03D         	call	_strncmp	;wreg free
  3862  0006F8  5001               	movf	?_strncmp^0,w,c
  3863  0006FA  1002               	iorwf	(?_strncmp+1)^0,w,c
  3864  0006FC  B4D8               	btfsc	status,2,c
  3865  0006FE  EF83  F003         	goto	u5021
  3866  000702  EF86  F003         	goto	u5020
  3867  000706                     u5021:
  3868  000706  FFFF               	dw	65535	; assembler added errata NOP
  3869  000708  EFA3  F003         	goto	l4241
  3870  00070C                     u5020:
  3871  00070C  FFFF               	dw	65535	; assembler added errata NOP
  3872  00070E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3873  000712  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3874  000716  CFDE F001          	movff	postinc2,strncmp@_l
  3875  00071A  CFDD F002          	movff	postdec2,strncmp@_l+1
  3876  00071E  0EEC               	movlw	low STR_31
  3877  000720  6E03               	movwf	strncmp@_r^0,c
  3878  000722  0E7F               	movlw	high STR_31
  3879  000724  6E04               	movwf	(strncmp@_r+1)^0,c
  3880  000726  0E00               	movlw	0
  3881  000728  6E06               	movwf	(strncmp@n+1)^0,c
  3882  00072A  0E02               	movlw	2
  3883  00072C  6E05               	movwf	strncmp@n^0,c
  3884  00072E  ECDA  F03D         	call	_strncmp	;wreg free
  3885  000732  5001               	movf	?_strncmp^0,w,c
  3886  000734  1002               	iorwf	(?_strncmp+1)^0,w,c
  3887  000736  A4D8               	btfss	status,2,c
  3888  000738  EFA0  F003         	goto	u5031
  3889  00073C  EFA3  F003         	goto	u5030
  3890  000740                     u5031:
  3891  000740  FFFF               	dw	65535	; assembler added errata NOP
  3892  000742  EFCC  F003         	goto	l4247
  3893  000746                     u5030:
  3894  000746                     l4241:
  3895  000746  FFFF               	dw	65535	; assembler added errata NOP
  3896                           
  3897                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 884: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 886:             *fmt += ((si
      +                          zeof("zd")/sizeof("zd"[0]))-1);
  3898  000748  0E02               	movlw	2
  3899  00074A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3900  00074E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3901  000752  26DE               	addwf	postinc2,f,c
  3902  000754  0E00               	movlw	0
  3903  000756  22DD               	addwfc	postdec2,f,c
  3904                           
  3905                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 887:             
      +                          ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3906  000758  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3907  00075C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3908  000760  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3909  000764  0E02               	movlw	2
  3910  000766  26DE               	addwf	postinc2,f,c
  3911  000768  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3912  00076C  0E00               	movlw	0
  3913  00076E  22DD               	addwfc	postdec2,f,c
  3914  000770  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3915  000774  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3916  000778  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3917  00077C  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3918  000780  C04B  F055         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  3919  000784  C04C  F056         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  3920  000788  6A57               	clrf	(vfpfcnvrt@ll+2)^0,c
  3921  00078A  6A58               	clrf	(vfpfcnvrt@ll+3)^0,c
  3922  00078C  6A59               	clrf	(vfpfcnvrt@ll+4)^0,c
  3923  00078E  6A5A               	clrf	(vfpfcnvrt@ll+5)^0,c
  3924  000790  6A5B               	clrf	(vfpfcnvrt@ll+6)^0,c
  3925  000792  6A5C               	clrf	(vfpfcnvrt@ll+7)^0,c
  3926  000794  EF99  F002         	goto	l4213
  3927  000798                     l4247:
  3928  000798  FFFF               	dw	65535	; assembler added errata NOP
  3929                           
  3930                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 969:         if (
      +                          !strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  3931  00079A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3932  00079E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3933  0007A2  CFDE F001          	movff	postinc2,strncmp@_l
  3934  0007A6  CFDD F002          	movff	postdec2,strncmp@_l+1
  3935  0007AA  0EDA               	movlw	low STR_36
  3936  0007AC  6E03               	movwf	strncmp@_r^0,c
  3937  0007AE  0E7F               	movlw	high STR_36
  3938  0007B0  6E04               	movwf	(strncmp@_r+1)^0,c
  3939  0007B2  0E00               	movlw	0
  3940  0007B4  6E06               	movwf	(strncmp@n+1)^0,c
  3941  0007B6  0E03               	movlw	3
  3942  0007B8  6E05               	movwf	strncmp@n^0,c
  3943  0007BA  ECDA  F03D         	call	_strncmp	;wreg free
  3944  0007BE  5001               	movf	?_strncmp^0,w,c
  3945  0007C0  1002               	iorwf	(?_strncmp+1)^0,w,c
  3946  0007C2  A4D8               	btfss	status,2,c
  3947  0007C4  EFE6  F003         	goto	u5041
  3948  0007C8  EFE9  F003         	goto	u5040
  3949  0007CC                     u5041:
  3950  0007CC  FFFF               	dw	65535	; assembler added errata NOP
  3951  0007CE  EF2A  F004         	goto	l4255
  3952  0007D2                     u5040:
  3953  0007D2  FFFF               	dw	65535	; assembler added errata NOP
  3954  0007D4                     
  3955                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 971:             
      +                          *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  3956  0007D4  0E03               	movlw	3
  3957  0007D6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3958  0007DA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3959  0007DE  26DE               	addwf	postinc2,f,c
  3960  0007E0  0E00               	movlw	0
  3961  0007E2  22DD               	addwfc	postdec2,f,c
  3962                           
  3963                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 972:             
      +                          llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3964  0007E4  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3965  0007E8  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3966  0007EC  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3967  0007F0  0E02               	movlw	2
  3968  0007F2  26DE               	addwf	postinc2,f,c
  3969  0007F4  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3970  0007F8  0E00               	movlw	0
  3971  0007FA  22DD               	addwfc	postdec2,f,c
  3972  0007FC  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3973  000800  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3974  000804  50DF               	movf	indf2,w,c
  3975  000806  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  3976  000808  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  3977  00080A  6E60               	movwf	vfpfcnvrt@llu^0,c
  3978  00080C  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  3979  00080E  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  3980  000810  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  3981  000812  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  3982  000814  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  3983  000816  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  3984  000818  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  3985  00081A                     l4251:
  3986  00081A  FFFF               	dw	65535	; assembler added errata NOP
  3987                           
  3988                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 974:             
      +                          return otoa(fp, llu);
  3989  00081C  C043  F01C         	movff	vfpfcnvrt@fp,otoa@fp
  3990  000820  C044  F01D         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  3991  000824  C060  F01E         	movff	vfpfcnvrt@llu,otoa@d
  3992  000828  C061  F01F         	movff	vfpfcnvrt@llu+1,otoa@d+1
  3993  00082C  C062  F020         	movff	vfpfcnvrt@llu+2,otoa@d+2
  3994  000830  C063  F021         	movff	vfpfcnvrt@llu+3,otoa@d+3
  3995  000834  C064  F022         	movff	vfpfcnvrt@llu+4,otoa@d+4
  3996  000838  C065  F023         	movff	vfpfcnvrt@llu+5,otoa@d+5
  3997  00083C  C066  F024         	movff	vfpfcnvrt@llu+6,otoa@d+6
  3998  000840  C067  F025         	movff	vfpfcnvrt@llu+7,otoa@d+7
  3999  000844  EC18  F01A         	call	_otoa	;wreg free
  4000  000848  C01C  F043         	movff	?_otoa,?_vfpfcnvrt
  4001  00084C  C01D  F044         	movff	?_otoa+1,?_vfpfcnvrt+1
  4002  000850  EF29  F00A         	goto	l1231
  4003  000854                     l4255:
  4004  000854  FFFF               	dw	65535	; assembler added errata NOP
  4005                           
  4006                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 980:         if (
      +                          !strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  4007  000856  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4008  00085A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4009  00085E  CFDE F001          	movff	postinc2,strncmp@_l
  4010  000862  CFDD F002          	movff	postdec2,strncmp@_l+1
  4011  000866  0EDB               	movlw	low (STR_36+1)
  4012  000868  6E03               	movwf	strncmp@_r^0,c
  4013  00086A  0E7F               	movlw	high (STR_36+1)
  4014  00086C  6E04               	movwf	(strncmp@_r+1)^0,c
  4015  00086E  0E00               	movlw	0
  4016  000870  6E06               	movwf	(strncmp@n+1)^0,c
  4017  000872  0E02               	movlw	2
  4018  000874  6E05               	movwf	strncmp@n^0,c
  4019  000876  ECDA  F03D         	call	_strncmp	;wreg free
  4020  00087A  5001               	movf	?_strncmp^0,w,c
  4021  00087C  1002               	iorwf	(?_strncmp+1)^0,w,c
  4022  00087E  A4D8               	btfss	status,2,c
  4023  000880  EF44  F004         	goto	u5051
  4024  000884  EF47  F004         	goto	u5050
  4025  000888                     u5051:
  4026  000888  FFFF               	dw	65535	; assembler added errata NOP
  4027  00088A  EF70  F004         	goto	l4263
  4028  00088E                     u5050:
  4029  00088E  FFFF               	dw	65535	; assembler added errata NOP
  4030  000890                     
  4031                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 982:             
      +                          *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  4032  000890  0E02               	movlw	2
  4033  000892  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4034  000896  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4035  00089A  26DE               	addwf	postinc2,f,c
  4036  00089C  0E00               	movlw	0
  4037  00089E  22DD               	addwfc	postdec2,f,c
  4038                           
  4039                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 983:             
      +                          llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4040  0008A0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4041  0008A4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4042  0008A8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4043  0008AC  0E02               	movlw	2
  4044  0008AE  26DE               	addwf	postinc2,f,c
  4045  0008B0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4046  0008B4  0E00               	movlw	0
  4047  0008B6  22DD               	addwfc	postdec2,f,c
  4048  0008B8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4049  0008BC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4050  0008C0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4051  0008C4  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4052  0008C8  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4053  0008CC  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4054  0008D0  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4055  0008D2  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4056  0008D4  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4057  0008D6  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4058  0008D8  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4059  0008DA  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4060  0008DC  EF0D  F004         	goto	l4251
  4061  0008E0                     l4263:
  4062  0008E0  FFFF               	dw	65535	; assembler added errata NOP
  4063                           
  4064                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 990:         if (
      +                          *fmt[0] == 'o') {
  4065  0008E2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4066  0008E6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4067  0008EA  CFDE FFF6          	movff	postinc2,tblptrl
  4068  0008EE  CFDD FFF7          	movff	postdec2,tblptrh
  4069  0008F2                     	if	0	;tblptru may be non-zero
  4070  0008F2                     	endif
  4071  0008F2                     	if	0	;tblptru may be non-zero
  4072  0008F2                     	endif
  4073  0008F2  0008               	tblrd		*
  4074  0008F4  FFFF               	dw	65535	; errata NOP
  4075  0008F6  50F5               	movf	tablat,w,c
  4076  0008F8  0A6F               	xorlw	111
  4077  0008FA  A4D8               	btfss	status,2,c
  4078  0008FC  EF82  F004         	goto	u5061
  4079  000900  EF85  F004         	goto	u5060
  4080  000904                     u5061:
  4081  000904  FFFF               	dw	65535	; assembler added errata NOP
  4082  000906  EFAD  F004         	goto	l4271
  4083  00090A                     u5060:
  4084  00090A  FFFF               	dw	65535	; assembler added errata NOP
  4085  00090C                     
  4086                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 992:             
      +                          ++*fmt;
  4087  00090C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4088  000910  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4089  000914  2ADE               	incf	postinc2,f,c
  4090  000916  0E00               	movlw	0
  4091  000918  22DD               	addwfc	postdec2,f,c
  4092                           
  4093                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 993:             
      +                          llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int
      +                          )0));
  4094  00091A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4095  00091E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4096  000922  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4097  000926  0E02               	movlw	2
  4098  000928  26DE               	addwf	postinc2,f,c
  4099  00092A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4100  00092E  0E00               	movlw	0
  4101  000930  22DD               	addwfc	postdec2,f,c
  4102  000932  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4103  000936  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4104  00093A  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4105  00093E  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4106  000942  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4107  000946  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4108  00094A  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4109  00094C  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4110  00094E  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4111  000950  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4112  000952  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4113  000954  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4114  000956  EF0D  F004         	goto	l4251
  4115  00095A                     l4271:
  4116  00095A  FFFF               	dw	65535	; assembler added errata NOP
  4117                           
  4118                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1044:         if 
      +                          (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  4119  00095C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4120  000960  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4121  000964  CFDE F001          	movff	postinc2,strncmp@_l
  4122  000968  CFDD F002          	movff	postdec2,strncmp@_l+1
  4123  00096C  0EF2               	movlw	low STR_46
  4124  00096E  6E03               	movwf	strncmp@_r^0,c
  4125  000970  0E7F               	movlw	high STR_46
  4126  000972  6E04               	movwf	(strncmp@_r+1)^0,c
  4127  000974  0E00               	movlw	0
  4128  000976  6E06               	movwf	(strncmp@n+1)^0,c
  4129  000978  0E02               	movlw	2
  4130  00097A  6E05               	movwf	strncmp@n^0,c
  4131  00097C  ECDA  F03D         	call	_strncmp	;wreg free
  4132  000980  5001               	movf	?_strncmp^0,w,c
  4133  000982  1002               	iorwf	(?_strncmp+1)^0,w,c
  4134  000984  A4D8               	btfss	status,2,c
  4135  000986  EFC7  F004         	goto	u5071
  4136  00098A  EFCA  F004         	goto	u5070
  4137  00098E                     u5071:
  4138  00098E  FFFF               	dw	65535	; assembler added errata NOP
  4139  000990  EFF3  F004         	goto	l4279
  4140  000994                     u5070:
  4141  000994  FFFF               	dw	65535	; assembler added errata NOP
  4142  000996                     
  4143                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1046:            
      +                           *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  4144  000996  0E02               	movlw	2
  4145  000998  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4146  00099C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4147  0009A0  26DE               	addwf	postinc2,f,c
  4148  0009A2  0E00               	movlw	0
  4149  0009A4  22DD               	addwfc	postdec2,f,c
  4150                           
  4151                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1047:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4152  0009A6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4153  0009AA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4154  0009AE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4155  0009B2  0E02               	movlw	2
  4156  0009B4  26DE               	addwf	postinc2,f,c
  4157  0009B6  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4158  0009BA  0E00               	movlw	0
  4159  0009BC  22DD               	addwfc	postdec2,f,c
  4160  0009BE  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4161  0009C2  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4162  0009C6  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4163  0009CA  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4164  0009CE  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4165  0009D2  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4166  0009D6  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4167  0009D8  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4168  0009DA  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4169  0009DC  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4170  0009DE  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4171  0009E0  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4172  0009E2  EF0D  F004         	goto	l4251
  4173  0009E6                     l4279:
  4174  0009E6  FFFF               	dw	65535	; assembler added errata NOP
  4175                           
  4176                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1058:         if 
      +                          (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  4177  0009E8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4178  0009EC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4179  0009F0  CFDE F001          	movff	postinc2,strncmp@_l
  4180  0009F4  CFDD F002          	movff	postdec2,strncmp@_l+1
  4181  0009F8  0ED6               	movlw	low STR_51
  4182  0009FA  6E03               	movwf	strncmp@_r^0,c
  4183  0009FC  0E7F               	movlw	high STR_51
  4184  0009FE  6E04               	movwf	(strncmp@_r+1)^0,c
  4185  000A00  0E00               	movlw	0
  4186  000A02  6E06               	movwf	(strncmp@n+1)^0,c
  4187  000A04  0E03               	movlw	3
  4188  000A06  6E05               	movwf	strncmp@n^0,c
  4189  000A08  ECDA  F03D         	call	_strncmp	;wreg free
  4190  000A0C  5001               	movf	?_strncmp^0,w,c
  4191  000A0E  1002               	iorwf	(?_strncmp+1)^0,w,c
  4192  000A10  A4D8               	btfss	status,2,c
  4193  000A12  EF0D  F005         	goto	u5081
  4194  000A16  EF10  F005         	goto	u5080
  4195  000A1A                     u5081:
  4196  000A1A  FFFF               	dw	65535	; assembler added errata NOP
  4197  000A1C  EF46  F005         	goto	l4289
  4198  000A20                     u5080:
  4199  000A20  FFFF               	dw	65535	; assembler added errata NOP
  4200  000A22                     
  4201                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1060:            
      +                           *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  4202  000A22  0E03               	movlw	3
  4203  000A24  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4204  000A28  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4205  000A2C  26DE               	addwf	postinc2,f,c
  4206  000A2E  0E00               	movlw	0
  4207  000A30  22DD               	addwfc	postdec2,f,c
  4208                           
  4209                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1061:            
      +                           vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  4210  000A32  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4211  000A36  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4212  000A3A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4213  000A3E  0E02               	movlw	2
  4214  000A40  26DE               	addwf	postinc2,f,c
  4215  000A42  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4216  000A46  0E00               	movlw	0
  4217  000A48  22DD               	addwfc	postdec2,f,c
  4218  000A4A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4219  000A4E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4220  000A52  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  4221  000A56  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  4222  000A5A                     
  4223                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1062:            
      +                           *(char *)vp = (char)nout;
  4224  000A5A  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  4225  000A5E  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  4226  000A62  6AF8               	clrf	tblptru,c
  4227  000A64  0E05               	movlw	(high __ramtop+-1)
  4228  000A66  64F7               	cpfsgt	tblptrh,c
  4229  000A68  D004               	bra	u5097
  4230  000A6A  C084  FFF5         	movff	_nout,tablat
  4231  000A6E  000C               	tblwt		*
  4232  000A70  D006               	bra	u5090
  4233  000A72                     u5097:
  4234  000A72  CFF6 FFE1          	movff	tblptrl,fsr1l
  4235  000A76  CFF7 FFE2          	movff	tblptrh,fsr1h
  4236  000A7A  C084  FFE7         	movff	_nout,indf1
  4237  000A7E                     u5090:
  4238  000A7E                     l4285:
  4239  000A7E  FFFF               	dw	65535	; assembler added errata NOP
  4240                           
  4241                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1063:            
      +                           return 0;
  4242  000A80  0E00               	movlw	0
  4243  000A82  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  4244  000A84  0E00               	movlw	0
  4245  000A86  6E43               	movwf	?_vfpfcnvrt^0,c
  4246  000A88  EF29  F00A         	goto	l1231
  4247  000A8C                     l4289:
  4248  000A8C  FFFF               	dw	65535	; assembler added errata NOP
  4249                           
  4250                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1068:         if 
      +                          (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  4251  000A8E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4252  000A92  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4253  000A96  CFDE F001          	movff	postinc2,strncmp@_l
  4254  000A9A  CFDD F002          	movff	postdec2,strncmp@_l+1
  4255  000A9E  0ED7               	movlw	low (STR_51+1)
  4256  000AA0  6E03               	movwf	strncmp@_r^0,c
  4257  000AA2  0E7F               	movlw	high (STR_51+1)
  4258  000AA4  6E04               	movwf	(strncmp@_r+1)^0,c
  4259  000AA6  0E00               	movlw	0
  4260  000AA8  6E06               	movwf	(strncmp@n+1)^0,c
  4261  000AAA  0E02               	movlw	2
  4262  000AAC  6E05               	movwf	strncmp@n^0,c
  4263  000AAE  ECDA  F03D         	call	_strncmp	;wreg free
  4264  000AB2  5001               	movf	?_strncmp^0,w,c
  4265  000AB4  1002               	iorwf	(?_strncmp+1)^0,w,c
  4266  000AB6  A4D8               	btfss	status,2,c
  4267  000AB8  EF60  F005         	goto	u5101
  4268  000ABC  EF63  F005         	goto	u5100
  4269  000AC0                     u5101:
  4270  000AC0  FFFF               	dw	65535	; assembler added errata NOP
  4271  000AC2  EF99  F005         	goto	l4299
  4272  000AC6                     u5100:
  4273  000AC6  FFFF               	dw	65535	; assembler added errata NOP
  4274  000AC8                     
  4275                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1070:            
      +                           *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  4276  000AC8  0E02               	movlw	2
  4277  000ACA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4278  000ACE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4279  000AD2  26DE               	addwf	postinc2,f,c
  4280  000AD4  0E00               	movlw	0
  4281  000AD6  22DD               	addwfc	postdec2,f,c
  4282                           
  4283                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1071:            
      +                           vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  4284  000AD8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4285  000ADC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4286  000AE0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4287  000AE4  0E02               	movlw	2
  4288  000AE6  26DE               	addwf	postinc2,f,c
  4289  000AE8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4290  000AEC  0E00               	movlw	0
  4291  000AEE  22DD               	addwfc	postdec2,f,c
  4292  000AF0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4293  000AF4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4294  000AF8  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  4295  000AFC  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  4296  000B00                     
  4297                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1072:            
      +                           *(short *)vp = (short)nout;
  4298  000B00  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  4299  000B04  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  4300  000B08  6AF8               	clrf	tblptru,c
  4301  000B0A  0E05               	movlw	(high __ramtop+-1)
  4302  000B0C  64F7               	cpfsgt	tblptrh,c
  4303  000B0E  D007               	bra	u5117
  4304  000B10  C084  FFF5         	movff	_nout,tablat
  4305  000B14  000D               	tblwt		*+
  4306  000B16  C085  FFF5         	movff	_nout+1,tablat
  4307  000B1A  000C               	tblwt		*
  4308  000B1C  D008               	bra	u5110
  4309  000B1E                     u5117:
  4310  000B1E  CFF6 FFE1          	movff	tblptrl,fsr1l
  4311  000B22  CFF7 FFE2          	movff	tblptrh,fsr1h
  4312  000B26  C084  FFE6         	movff	_nout,postinc1
  4313  000B2A  C085  FFE7         	movff	_nout+1,indf1
  4314  000B2E                     u5110:
  4315  000B2E  EF3F  F005         	goto	l4285
  4316  000B32                     l4299:
  4317  000B32  FFFF               	dw	65535	; assembler added errata NOP
  4318                           
  4319                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1077:         if 
      +                          (*fmt[0] == 'n') {
  4320  000B34  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4321  000B38  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4322  000B3C  CFDE FFF6          	movff	postinc2,tblptrl
  4323  000B40  CFDD FFF7          	movff	postdec2,tblptrh
  4324  000B44                     	if	0	;tblptru may be non-zero
  4325  000B44                     	endif
  4326  000B44                     	if	0	;tblptru may be non-zero
  4327  000B44                     	endif
  4328  000B44  0008               	tblrd		*
  4329  000B46  FFFF               	dw	65535	; errata NOP
  4330  000B48  50F5               	movf	tablat,w,c
  4331  000B4A  0A6E               	xorlw	110
  4332  000B4C  A4D8               	btfss	status,2,c
  4333  000B4E  EFAB  F005         	goto	u5121
  4334  000B52  EFAE  F005         	goto	u5120
  4335  000B56                     u5121:
  4336  000B56  FFFF               	dw	65535	; assembler added errata NOP
  4337  000B58  EFE3  F005         	goto	l4309
  4338  000B5C                     u5120:
  4339  000B5C  FFFF               	dw	65535	; assembler added errata NOP
  4340  000B5E                     
  4341                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1078:            
      +                           ++*fmt;
  4342  000B5E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4343  000B62  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4344  000B66  2ADE               	incf	postinc2,f,c
  4345  000B68  0E00               	movlw	0
  4346  000B6A  22DD               	addwfc	postdec2,f,c
  4347                           
  4348                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1079:            
      +                           vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  4349  000B6C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4350  000B70  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4351  000B74  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4352  000B78  0E02               	movlw	2
  4353  000B7A  26DE               	addwf	postinc2,f,c
  4354  000B7C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4355  000B80  0E00               	movlw	0
  4356  000B82  22DD               	addwfc	postdec2,f,c
  4357  000B84  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4358  000B88  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4359  000B8C  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  4360  000B90  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  4361  000B94                     
  4362                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1080:            
      +                           *(int *)vp = nout;
  4363  000B94  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  4364  000B98  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  4365  000B9C  6AF8               	clrf	tblptru,c
  4366  000B9E  0E05               	movlw	(high __ramtop+-1)
  4367  000BA0  64F7               	cpfsgt	tblptrh,c
  4368  000BA2  D007               	bra	u5137
  4369  000BA4  C084  FFF5         	movff	_nout,tablat
  4370  000BA8  000D               	tblwt		*+
  4371  000BAA  C085  FFF5         	movff	_nout+1,tablat
  4372  000BAE  000C               	tblwt		*
  4373  000BB0  D008               	bra	u5130
  4374  000BB2                     u5137:
  4375  000BB2  CFF6 FFE1          	movff	tblptrl,fsr1l
  4376  000BB6  CFF7 FFE2          	movff	tblptrh,fsr1h
  4377  000BBA  C084  FFE6         	movff	_nout,postinc1
  4378  000BBE  C085  FFE7         	movff	_nout+1,indf1
  4379  000BC2                     u5130:
  4380  000BC2  EF3F  F005         	goto	l4285
  4381  000BC6                     l4309:
  4382  000BC6  FFFF               	dw	65535	; assembler added errata NOP
  4383                           
  4384                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1125:         if 
      +                          (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  4385  000BC8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4386  000BCC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4387  000BD0  CFDE F001          	movff	postinc2,strncmp@_l
  4388  000BD4  CFDD F002          	movff	postdec2,strncmp@_l+1
  4389  000BD8  0EEF               	movlw	low STR_61
  4390  000BDA  6E03               	movwf	strncmp@_r^0,c
  4391  000BDC  0E7F               	movlw	high STR_61
  4392  000BDE  6E04               	movwf	(strncmp@_r+1)^0,c
  4393  000BE0  0E00               	movlw	0
  4394  000BE2  6E06               	movwf	(strncmp@n+1)^0,c
  4395  000BE4  0E02               	movlw	2
  4396  000BE6  6E05               	movwf	strncmp@n^0,c
  4397  000BE8  ECDA  F03D         	call	_strncmp	;wreg free
  4398  000BEC  5001               	movf	?_strncmp^0,w,c
  4399  000BEE  1002               	iorwf	(?_strncmp+1)^0,w,c
  4400  000BF0  A4D8               	btfss	status,2,c
  4401  000BF2  EFFD  F005         	goto	u5141
  4402  000BF6  EF00  F006         	goto	u5140
  4403  000BFA                     u5141:
  4404  000BFA  FFFF               	dw	65535	; assembler added errata NOP
  4405  000BFC  EF36  F006         	goto	l4319
  4406  000C00                     u5140:
  4407  000C00  FFFF               	dw	65535	; assembler added errata NOP
  4408  000C02                     
  4409                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1127:            
      +                           *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  4410  000C02  0E02               	movlw	2
  4411  000C04  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4412  000C08  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4413  000C0C  26DE               	addwf	postinc2,f,c
  4414  000C0E  0E00               	movlw	0
  4415  000C10  22DD               	addwfc	postdec2,f,c
  4416                           
  4417                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1128:            
      +                           vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  4418  000C12  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4419  000C16  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4420  000C1A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4421  000C1E  0E02               	movlw	2
  4422  000C20  26DE               	addwf	postinc2,f,c
  4423  000C22  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4424  000C26  0E00               	movlw	0
  4425  000C28  22DD               	addwfc	postdec2,f,c
  4426  000C2A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4427  000C2E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4428  000C32  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  4429  000C36  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  4430  000C3A                     
  4431                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1129:            
      +                           *(size_t *)vp = (size_t)nout;
  4432  000C3A  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  4433  000C3E  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  4434  000C42  6AF8               	clrf	tblptru,c
  4435  000C44  0E05               	movlw	(high __ramtop+-1)
  4436  000C46  64F7               	cpfsgt	tblptrh,c
  4437  000C48  D007               	bra	u5157
  4438  000C4A  C084  FFF5         	movff	_nout,tablat
  4439  000C4E  000D               	tblwt		*+
  4440  000C50  C085  FFF5         	movff	_nout+1,tablat
  4441  000C54  000C               	tblwt		*
  4442  000C56  D008               	bra	u5150
  4443  000C58                     u5157:
  4444  000C58  CFF6 FFE1          	movff	tblptrl,fsr1l
  4445  000C5C  CFF7 FFE2          	movff	tblptrh,fsr1h
  4446  000C60  C084  FFE6         	movff	_nout,postinc1
  4447  000C64  C085  FFE7         	movff	_nout+1,indf1
  4448  000C68                     u5150:
  4449  000C68  EF3F  F005         	goto	l4285
  4450  000C6C                     l4319:
  4451  000C6C  FFFF               	dw	65535	; assembler added errata NOP
  4452                           
  4453                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1138:         if 
      +                          (*fmt[0] == 'p') {
  4454  000C6E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4455  000C72  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4456  000C76  CFDE FFF6          	movff	postinc2,tblptrl
  4457  000C7A  CFDD FFF7          	movff	postdec2,tblptrh
  4458  000C7E                     	if	0	;tblptru may be non-zero
  4459  000C7E                     	endif
  4460  000C7E                     	if	0	;tblptru may be non-zero
  4461  000C7E                     	endif
  4462  000C7E  0008               	tblrd		*
  4463  000C80  FFFF               	dw	65535	; errata NOP
  4464  000C82  50F5               	movf	tablat,w,c
  4465  000C84  0A70               	xorlw	112
  4466  000C86  A4D8               	btfss	status,2,c
  4467  000C88  EF48  F006         	goto	u5161
  4468  000C8C  EF4B  F006         	goto	u5160
  4469  000C90                     u5161:
  4470  000C90  FFFF               	dw	65535	; assembler added errata NOP
  4471  000C92  EF8F  F006         	goto	l4327
  4472  000C96                     u5160:
  4473  000C96  FFFF               	dw	65535	; assembler added errata NOP
  4474  000C98                     
  4475                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1140:            
      +                           ++*fmt;
  4476  000C98  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4477  000C9C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4478  000CA0  2ADE               	incf	postinc2,f,c
  4479  000CA2  0E00               	movlw	0
  4480  000CA4  22DD               	addwfc	postdec2,f,c
  4481                           
  4482                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1141:            
      +                           llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0));
  4483  000CA6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4484  000CAA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4485  000CAE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4486  000CB2  0E02               	movlw	2
  4487  000CB4  26DE               	addwf	postinc2,f,c
  4488  000CB6  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4489  000CBA  0E00               	movlw	0
  4490  000CBC  22DD               	addwfc	postdec2,f,c
  4491  000CBE  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4492  000CC2  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4493  000CC6  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4494  000CCA  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4495  000CCE  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4496  000CD2  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4497  000CD6  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4498  000CD8  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4499  000CDA  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4500  000CDC  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4501  000CDE  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4502  000CE0  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4503  000CE2                     
  4504                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1143:            
      +                           return xtoa(fp, llu, 'x');
  4505  000CE2  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  4506  000CE6  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  4507  000CEA  C060  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  4508  000CEE  C061  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  4509  000CF2  C062  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  4510  000CF6  C063  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  4511  000CFA  C064  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  4512  000CFE  C065  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  4513  000D02  C066  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  4514  000D06  C067  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  4515  000D0A  0E78               	movlw	120
  4516  000D0C  6E26               	movwf	xtoa@x^0,c
  4517  000D0E  EC6D  F017         	call	_xtoa	;wreg free
  4518  000D12  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  4519  000D16  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  4520  000D1A  EF29  F00A         	goto	l1231
  4521  000D1E                     l4327:
  4522  000D1E  FFFF               	dw	65535	; assembler added errata NOP
  4523                           
  4524                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1149:         if 
      +                          (*fmt[0] == 's') {
  4525  000D20  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4526  000D24  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4527  000D28  CFDE FFF6          	movff	postinc2,tblptrl
  4528  000D2C  CFDD FFF7          	movff	postdec2,tblptrh
  4529  000D30                     	if	0	;tblptru may be non-zero
  4530  000D30                     	endif
  4531  000D30                     	if	0	;tblptru may be non-zero
  4532  000D30                     	endif
  4533  000D30  0008               	tblrd		*
  4534  000D32  FFFF               	dw	65535	; errata NOP
  4535  000D34  50F5               	movf	tablat,w,c
  4536  000D36  0A73               	xorlw	115
  4537  000D38  A4D8               	btfss	status,2,c
  4538  000D3A  EFA1  F006         	goto	u5171
  4539  000D3E  EFA4  F006         	goto	u5170
  4540  000D42                     u5171:
  4541  000D42  FFFF               	dw	65535	; assembler added errata NOP
  4542  000D44  EFD0  F006         	goto	l4335
  4543  000D48                     u5170:
  4544  000D48  FFFF               	dw	65535	; assembler added errata NOP
  4545  000D4A                     
  4546                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1151:            
      +                           ++*fmt;
  4547  000D4A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4548  000D4E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4549  000D52  2ADE               	incf	postinc2,f,c
  4550  000D54  0E00               	movlw	0
  4551  000D56  22DD               	addwfc	postdec2,f,c
  4552                           
  4553                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1152:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  4554  000D58  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4555  000D5C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4556  000D60  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4557  000D64  0E02               	movlw	2
  4558  000D66  26DE               	addwf	postinc2,f,c
  4559  000D68  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4560  000D6C  0E00               	movlw	0
  4561  000D6E  22DD               	addwfc	postdec2,f,c
  4562  000D70  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4563  000D74  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4564  000D78  CFDE F04D          	movff	postinc2,vfpfcnvrt@cp
  4565  000D7C  CFDD F04E          	movff	postdec2,vfpfcnvrt@cp+1
  4566  000D80                     
  4567                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1154:            
      +                           return stoa(fp, cp);
  4568  000D80  C043  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  4569  000D84  C044  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  4570  000D88  C04D  F00C         	movff	vfpfcnvrt@cp,stoa@s
  4571  000D8C  C04E  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  4572  000D90  EC29  F01B         	call	_stoa	;wreg free
  4573  000D94  C00A  F043         	movff	?_stoa,?_vfpfcnvrt
  4574  000D98  C00B  F044         	movff	?_stoa+1,?_vfpfcnvrt+1
  4575  000D9C  EF29  F00A         	goto	l1231
  4576  000DA0                     l4335:
  4577  000DA0  FFFF               	dw	65535	; assembler added errata NOP
  4578                           
  4579                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1161:         if 
      +                          (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  4580  000DA2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4581  000DA6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4582  000DAA  CFDE F001          	movff	postinc2,strncmp@_l
  4583  000DAE  CFDD F002          	movff	postdec2,strncmp@_l+1
  4584  000DB2  0EDE               	movlw	low STR_66
  4585  000DB4  6E03               	movwf	strncmp@_r^0,c
  4586  000DB6  0E7F               	movlw	high STR_66
  4587  000DB8  6E04               	movwf	(strncmp@_r+1)^0,c
  4588  000DBA  0E00               	movlw	0
  4589  000DBC  6E06               	movwf	(strncmp@n+1)^0,c
  4590  000DBE  0E03               	movlw	3
  4591  000DC0  6E05               	movwf	strncmp@n^0,c
  4592  000DC2  ECDA  F03D         	call	_strncmp	;wreg free
  4593  000DC6  5001               	movf	?_strncmp^0,w,c
  4594  000DC8  1002               	iorwf	(?_strncmp+1)^0,w,c
  4595  000DCA  A4D8               	btfss	status,2,c
  4596  000DCC  EFEA  F006         	goto	u5181
  4597  000DD0  EFED  F006         	goto	u5180
  4598  000DD4                     u5181:
  4599  000DD4  FFFF               	dw	65535	; assembler added errata NOP
  4600  000DD6  EF2E  F007         	goto	l4343
  4601  000DDA                     u5180:
  4602  000DDA  FFFF               	dw	65535	; assembler added errata NOP
  4603  000DDC                     
  4604                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1163:            
      +                           *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  4605  000DDC  0E03               	movlw	3
  4606  000DDE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4607  000DE2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4608  000DE6  26DE               	addwf	postinc2,f,c
  4609  000DE8  0E00               	movlw	0
  4610  000DEA  22DD               	addwfc	postdec2,f,c
  4611                           
  4612                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1164:            
      +                           llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4613  000DEC  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4614  000DF0  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4615  000DF4  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4616  000DF8  0E02               	movlw	2
  4617  000DFA  26DE               	addwf	postinc2,f,c
  4618  000DFC  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4619  000E00  0E00               	movlw	0
  4620  000E02  22DD               	addwfc	postdec2,f,c
  4621  000E04  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4622  000E08  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4623  000E0C  50DF               	movf	indf2,w,c
  4624  000E0E  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  4625  000E10  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  4626  000E12  6E60               	movwf	vfpfcnvrt@llu^0,c
  4627  000E14  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  4628  000E16  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4629  000E18  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4630  000E1A  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4631  000E1C  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4632  000E1E  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4633  000E20  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4634  000E22                     l4339:
  4635  000E22  FFFF               	dw	65535	; assembler added errata NOP
  4636                           
  4637                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1166:            
      +                           return utoa(fp, llu);
  4638  000E24  C043  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  4639  000E28  C044  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  4640  000E2C  C060  F01E         	movff	vfpfcnvrt@llu,utoa@d
  4641  000E30  C061  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  4642  000E34  C062  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  4643  000E38  C063  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  4644  000E3C  C064  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  4645  000E40  C065  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  4646  000E44  C066  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  4647  000E48  C067  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  4648  000E4C  EC03  F019         	call	_utoa	;wreg free
  4649  000E50  C01C  F043         	movff	?_utoa,?_vfpfcnvrt
  4650  000E54  C01D  F044         	movff	?_utoa+1,?_vfpfcnvrt+1
  4651  000E58  EF29  F00A         	goto	l1231
  4652  000E5C                     l4343:
  4653  000E5C  FFFF               	dw	65535	; assembler added errata NOP
  4654                           
  4655                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1172:         if 
      +                          (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  4656  000E5E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4657  000E62  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4658  000E66  CFDE F001          	movff	postinc2,strncmp@_l
  4659  000E6A  CFDD F002          	movff	postdec2,strncmp@_l+1
  4660  000E6E  0EDF               	movlw	low (STR_66+1)
  4661  000E70  6E03               	movwf	strncmp@_r^0,c
  4662  000E72  0E7F               	movlw	high (STR_66+1)
  4663  000E74  6E04               	movwf	(strncmp@_r+1)^0,c
  4664  000E76  0E00               	movlw	0
  4665  000E78  6E06               	movwf	(strncmp@n+1)^0,c
  4666  000E7A  0E02               	movlw	2
  4667  000E7C  6E05               	movwf	strncmp@n^0,c
  4668  000E7E  ECDA  F03D         	call	_strncmp	;wreg free
  4669  000E82  5001               	movf	?_strncmp^0,w,c
  4670  000E84  1002               	iorwf	(?_strncmp+1)^0,w,c
  4671  000E86  A4D8               	btfss	status,2,c
  4672  000E88  EF48  F007         	goto	u5191
  4673  000E8C  EF4B  F007         	goto	u5190
  4674  000E90                     u5191:
  4675  000E90  FFFF               	dw	65535	; assembler added errata NOP
  4676  000E92  EF74  F007         	goto	l4351
  4677  000E96                     u5190:
  4678  000E96  FFFF               	dw	65535	; assembler added errata NOP
  4679  000E98                     
  4680                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1174:            
      +                           *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  4681  000E98  0E02               	movlw	2
  4682  000E9A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4683  000E9E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4684  000EA2  26DE               	addwf	postinc2,f,c
  4685  000EA4  0E00               	movlw	0
  4686  000EA6  22DD               	addwfc	postdec2,f,c
  4687                           
  4688                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1175:            
      +                           llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4689  000EA8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4690  000EAC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4691  000EB0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4692  000EB4  0E02               	movlw	2
  4693  000EB6  26DE               	addwf	postinc2,f,c
  4694  000EB8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4695  000EBC  0E00               	movlw	0
  4696  000EBE  22DD               	addwfc	postdec2,f,c
  4697  000EC0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4698  000EC4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4699  000EC8  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4700  000ECC  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4701  000ED0  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4702  000ED4  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4703  000ED8  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4704  000EDA  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4705  000EDC  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4706  000EDE  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4707  000EE0  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4708  000EE2  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4709  000EE4  EF11  F007         	goto	l4339
  4710  000EE8                     l4351:
  4711  000EE8  FFFF               	dw	65535	; assembler added errata NOP
  4712                           
  4713                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1182:         if 
      +                          (*fmt[0] == 'u') {
  4714  000EEA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4715  000EEE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4716  000EF2  CFDE FFF6          	movff	postinc2,tblptrl
  4717  000EF6  CFDD FFF7          	movff	postdec2,tblptrh
  4718  000EFA                     	if	0	;tblptru may be non-zero
  4719  000EFA                     	endif
  4720  000EFA                     	if	0	;tblptru may be non-zero
  4721  000EFA                     	endif
  4722  000EFA  0008               	tblrd		*
  4723  000EFC  FFFF               	dw	65535	; errata NOP
  4724  000EFE  50F5               	movf	tablat,w,c
  4725  000F00  0A75               	xorlw	117
  4726  000F02  A4D8               	btfss	status,2,c
  4727  000F04  EF86  F007         	goto	u5201
  4728  000F08  EF89  F007         	goto	u5200
  4729  000F0C                     u5201:
  4730  000F0C  FFFF               	dw	65535	; assembler added errata NOP
  4731  000F0E  EFB1  F007         	goto	l4359
  4732  000F12                     u5200:
  4733  000F12  FFFF               	dw	65535	; assembler added errata NOP
  4734  000F14                     
  4735                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1184:            
      +                           ++*fmt;
  4736  000F14  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4737  000F18  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4738  000F1C  2ADE               	incf	postinc2,f,c
  4739  000F1E  0E00               	movlw	0
  4740  000F20  22DD               	addwfc	postdec2,f,c
  4741                           
  4742                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1185:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  4743  000F22  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4744  000F26  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4745  000F2A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4746  000F2E  0E02               	movlw	2
  4747  000F30  26DE               	addwf	postinc2,f,c
  4748  000F32  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4749  000F36  0E00               	movlw	0
  4750  000F38  22DD               	addwfc	postdec2,f,c
  4751  000F3A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4752  000F3E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4753  000F42  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4754  000F46  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4755  000F4A  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4756  000F4E  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4757  000F52  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4758  000F54  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4759  000F56  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4760  000F58  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4761  000F5A  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4762  000F5C  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4763  000F5E  EF11  F007         	goto	l4339
  4764  000F62                     l4359:
  4765  000F62  FFFF               	dw	65535	; assembler added errata NOP
  4766                           
  4767                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1236:         if 
      +                          (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  4768  000F64  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4769  000F68  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4770  000F6C  CFDE F001          	movff	postinc2,strncmp@_l
  4771  000F70  CFDD F002          	movff	postdec2,strncmp@_l+1
  4772  000F74  0EF5               	movlw	low STR_76
  4773  000F76  6E03               	movwf	strncmp@_r^0,c
  4774  000F78  0E7F               	movlw	high STR_76
  4775  000F7A  6E04               	movwf	(strncmp@_r+1)^0,c
  4776  000F7C  0E00               	movlw	0
  4777  000F7E  6E06               	movwf	(strncmp@n+1)^0,c
  4778  000F80  0E02               	movlw	2
  4779  000F82  6E05               	movwf	strncmp@n^0,c
  4780  000F84  ECDA  F03D         	call	_strncmp	;wreg free
  4781  000F88  5001               	movf	?_strncmp^0,w,c
  4782  000F8A  1002               	iorwf	(?_strncmp+1)^0,w,c
  4783  000F8C  A4D8               	btfss	status,2,c
  4784  000F8E  EFCB  F007         	goto	u5211
  4785  000F92  EFCE  F007         	goto	u5210
  4786  000F96                     u5211:
  4787  000F96  FFFF               	dw	65535	; assembler added errata NOP
  4788  000F98  EFF7  F007         	goto	l4367
  4789  000F9C                     u5210:
  4790  000F9C  FFFF               	dw	65535	; assembler added errata NOP
  4791  000F9E                     
  4792                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1238:            
      +                           *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  4793  000F9E  0E02               	movlw	2
  4794  000FA0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4795  000FA4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4796  000FA8  26DE               	addwf	postinc2,f,c
  4797  000FAA  0E00               	movlw	0
  4798  000FAC  22DD               	addwfc	postdec2,f,c
  4799                           
  4800                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1239:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4801  000FAE  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4802  000FB2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4803  000FB6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4804  000FBA  0E02               	movlw	2
  4805  000FBC  26DE               	addwf	postinc2,f,c
  4806  000FBE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4807  000FC2  0E00               	movlw	0
  4808  000FC4  22DD               	addwfc	postdec2,f,c
  4809  000FC6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4810  000FCA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4811  000FCE  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4812  000FD2  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4813  000FD6  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4814  000FDA  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4815  000FDE  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4816  000FE0  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4817  000FE2  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4818  000FE4  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4819  000FE6  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4820  000FE8  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4821  000FEA  EF11  F007         	goto	l4339
  4822  000FEE                     l4367:
  4823  000FEE  FFFF               	dw	65535	; assembler added errata NOP
  4824                           
  4825                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1249:         if 
      +                          (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hhX", ((
      +                          sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  4826  000FF0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4827  000FF4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4828  000FF8  CFDE F001          	movff	postinc2,strncmp@_l
  4829  000FFC  CFDD F002          	movff	postdec2,strncmp@_l+1
  4830  001000  0EE2               	movlw	low STR_81
  4831  001002  6E03               	movwf	strncmp@_r^0,c
  4832  001004  0E7F               	movlw	high STR_81
  4833  001006  6E04               	movwf	(strncmp@_r+1)^0,c
  4834  001008  0E00               	movlw	0
  4835  00100A  6E06               	movwf	(strncmp@n+1)^0,c
  4836  00100C  0E03               	movlw	3
  4837  00100E  6E05               	movwf	strncmp@n^0,c
  4838  001010  ECDA  F03D         	call	_strncmp	;wreg free
  4839  001014  5001               	movf	?_strncmp^0,w,c
  4840  001016  1002               	iorwf	(?_strncmp+1)^0,w,c
  4841  001018  B4D8               	btfsc	status,2,c
  4842  00101A  EF11  F008         	goto	u5221
  4843  00101E  EF14  F008         	goto	u5220
  4844  001022                     u5221:
  4845  001022  FFFF               	dw	65535	; assembler added errata NOP
  4846  001024  EF31  F008         	goto	l4371
  4847  001028                     u5220:
  4848  001028  FFFF               	dw	65535	; assembler added errata NOP
  4849  00102A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4850  00102E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4851  001032  CFDE F001          	movff	postinc2,strncmp@_l
  4852  001036  CFDD F002          	movff	postdec2,strncmp@_l+1
  4853  00103A  0ECA               	movlw	low STR_85
  4854  00103C  6E03               	movwf	strncmp@_r^0,c
  4855  00103E  0E7F               	movlw	high STR_85
  4856  001040  6E04               	movwf	(strncmp@_r+1)^0,c
  4857  001042  0E00               	movlw	0
  4858  001044  6E06               	movwf	(strncmp@n+1)^0,c
  4859  001046  0E03               	movlw	3
  4860  001048  6E05               	movwf	strncmp@n^0,c
  4861  00104A  ECDA  F03D         	call	_strncmp	;wreg free
  4862  00104E  5001               	movf	?_strncmp^0,w,c
  4863  001050  1002               	iorwf	(?_strncmp+1)^0,w,c
  4864  001052  A4D8               	btfss	status,2,c
  4865  001054  EF2E  F008         	goto	u5231
  4866  001058  EF31  F008         	goto	u5230
  4867  00105C                     u5231:
  4868  00105C  FFFF               	dw	65535	; assembler added errata NOP
  4869  00105E  EF88  F008         	goto	l4381
  4870  001062                     u5230:
  4871  001062                     l4371:
  4872  001062  FFFF               	dw	65535	; assembler added errata NOP
  4873                           
  4874                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1250: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1252:             c = (*fmt)
      +                          [2];
  4875  001064  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4876  001068  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4877  00106C  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  4878  001070  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  4879  001074  0E02               	movlw	2
  4880  001076  2649               	addwf	??_vfpfcnvrt^0,f,c
  4881  001078  0E00               	movlw	0
  4882  00107A  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4883  00107C  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4884  001080  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4885  001084                     	if	0	;tblptru may be non-zero
  4886  001084                     	endif
  4887  001084                     	if	0	;tblptru may be non-zero
  4888  001084                     	endif
  4889  001084  0008               	tblrd		*
  4890  001086  FFFF               	dw	65535	; errata NOP
  4891  001088  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  4892  00108C                     
  4893                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1253:            
      +                           *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  4894  00108C  0E03               	movlw	3
  4895  00108E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4896  001092  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4897  001096  26DE               	addwf	postinc2,f,c
  4898  001098  0E00               	movlw	0
  4899  00109A  22DD               	addwfc	postdec2,f,c
  4900  00109C                     
  4901                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1254:            
      +                           llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4902  00109C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4903  0010A0  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4904  0010A4  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4905  0010A8  0E02               	movlw	2
  4906  0010AA  26DE               	addwf	postinc2,f,c
  4907  0010AC  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4908  0010B0  0E00               	movlw	0
  4909  0010B2  22DD               	addwfc	postdec2,f,c
  4910  0010B4  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4911  0010B8  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4912  0010BC  50DF               	movf	indf2,w,c
  4913  0010BE  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  4914  0010C0  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  4915  0010C2  6E60               	movwf	vfpfcnvrt@llu^0,c
  4916  0010C4  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  4917  0010C6  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4918  0010C8  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4919  0010CA  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4920  0010CC  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4921  0010CE  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4922  0010D0  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4923  0010D2                     l4377:
  4924  0010D2  FFFF               	dw	65535	; assembler added errata NOP
  4925                           
  4926                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1256:            
      +                           return xtoa(fp, llu, c);
  4927  0010D4  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  4928  0010D8  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  4929  0010DC  C060  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  4930  0010E0  C061  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  4931  0010E4  C062  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  4932  0010E8  C063  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  4933  0010EC  C064  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  4934  0010F0  C065  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  4935  0010F4  C066  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  4936  0010F8  C067  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  4937  0010FC  C05F  F026         	movff	vfpfcnvrt@c,xtoa@x
  4938  001100  EC6D  F017         	call	_xtoa	;wreg free
  4939  001104  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  4940  001108  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  4941  00110C  EF29  F00A         	goto	l1231
  4942  001110                     l4381:
  4943  001110  FFFF               	dw	65535	; assembler added errata NOP
  4944                           
  4945                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1262:         if 
      +                          (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", ((size
      +                          of("hX")/sizeof("hX"[0]))-1))) {
  4946  001112  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4947  001116  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4948  00111A  CFDE F001          	movff	postinc2,strncmp@_l
  4949  00111E  CFDD F002          	movff	postdec2,strncmp@_l+1
  4950  001122  0EE3               	movlw	low (STR_81+1)
  4951  001124  6E03               	movwf	strncmp@_r^0,c
  4952  001126  0E7F               	movlw	high (STR_81+1)
  4953  001128  6E04               	movwf	(strncmp@_r+1)^0,c
  4954  00112A  0E00               	movlw	0
  4955  00112C  6E06               	movwf	(strncmp@n+1)^0,c
  4956  00112E  0E02               	movlw	2
  4957  001130  6E05               	movwf	strncmp@n^0,c
  4958  001132  ECDA  F03D         	call	_strncmp	;wreg free
  4959  001136  5001               	movf	?_strncmp^0,w,c
  4960  001138  1002               	iorwf	(?_strncmp+1)^0,w,c
  4961  00113A  B4D8               	btfsc	status,2,c
  4962  00113C  EFA2  F008         	goto	u5241
  4963  001140  EFA5  F008         	goto	u5240
  4964  001144                     u5241:
  4965  001144  FFFF               	dw	65535	; assembler added errata NOP
  4966  001146  EFC2  F008         	goto	l4385
  4967  00114A                     u5240:
  4968  00114A  FFFF               	dw	65535	; assembler added errata NOP
  4969  00114C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4970  001150  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4971  001154  CFDE F001          	movff	postinc2,strncmp@_l
  4972  001158  CFDD F002          	movff	postdec2,strncmp@_l+1
  4973  00115C  0ECB               	movlw	low (STR_85+1)
  4974  00115E  6E03               	movwf	strncmp@_r^0,c
  4975  001160  0E7F               	movlw	high (STR_85+1)
  4976  001162  6E04               	movwf	(strncmp@_r+1)^0,c
  4977  001164  0E00               	movlw	0
  4978  001166  6E06               	movwf	(strncmp@n+1)^0,c
  4979  001168  0E02               	movlw	2
  4980  00116A  6E05               	movwf	strncmp@n^0,c
  4981  00116C  ECDA  F03D         	call	_strncmp	;wreg free
  4982  001170  5001               	movf	?_strncmp^0,w,c
  4983  001172  1002               	iorwf	(?_strncmp+1)^0,w,c
  4984  001174  A4D8               	btfss	status,2,c
  4985  001176  EFBF  F008         	goto	u5251
  4986  00117A  EFC2  F008         	goto	u5250
  4987  00117E                     u5251:
  4988  00117E  FFFF               	dw	65535	; assembler added errata NOP
  4989  001180  EFFF  F008         	goto	l4395
  4990  001184                     u5250:
  4991  001184                     l4385:
  4992  001184  FFFF               	dw	65535	; assembler added errata NOP
  4993                           
  4994                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1263: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1265:             c = (*fmt)
      +                          [1];
  4995  001186  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4996  00118A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4997  00118E  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  4998  001192  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  4999  001196  0E01               	movlw	1
  5000  001198  2649               	addwf	??_vfpfcnvrt^0,f,c
  5001  00119A  0E00               	movlw	0
  5002  00119C  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5003  00119E  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5004  0011A2  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5005  0011A6                     	if	0	;tblptru may be non-zero
  5006  0011A6                     	endif
  5007  0011A6                     	if	0	;tblptru may be non-zero
  5008  0011A6                     	endif
  5009  0011A6  0008               	tblrd		*
  5010  0011A8  FFFF               	dw	65535	; errata NOP
  5011  0011AA  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  5012  0011AE                     
  5013                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1266:            
      +                           *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  5014  0011AE  0E02               	movlw	2
  5015  0011B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5016  0011B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5017  0011B8  26DE               	addwf	postinc2,f,c
  5018  0011BA  0E00               	movlw	0
  5019  0011BC  22DD               	addwfc	postdec2,f,c
  5020  0011BE                     
  5021                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1267:            
      +                           llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5022  0011BE  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5023  0011C2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5024  0011C6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5025  0011CA  0E02               	movlw	2
  5026  0011CC  26DE               	addwf	postinc2,f,c
  5027  0011CE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5028  0011D2  0E00               	movlw	0
  5029  0011D4  22DD               	addwfc	postdec2,f,c
  5030  0011D6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5031  0011DA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5032  0011DE  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5033  0011E2  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5034  0011E6  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5035  0011EA  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5036  0011EE  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5037  0011F0  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5038  0011F2  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5039  0011F4  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5040  0011F6  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5041  0011F8  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5042  0011FA  EF69  F008         	goto	l4377
  5043  0011FE                     l4395:
  5044  0011FE  FFFF               	dw	65535	; assembler added errata NOP
  5045                           
  5046                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1274:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  5047  001200  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5048  001204  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5049  001208  CFDE FFF6          	movff	postinc2,tblptrl
  5050  00120C  CFDD FFF7          	movff	postdec2,tblptrh
  5051  001210                     	if	0	;tblptru may be non-zero
  5052  001210                     	endif
  5053  001210                     	if	0	;tblptru may be non-zero
  5054  001210                     	endif
  5055  001210  0008               	tblrd		*
  5056  001212  FFFF               	dw	65535	; errata NOP
  5057  001214  50F5               	movf	tablat,w,c
  5058  001216  0A78               	xorlw	120
  5059  001218  B4D8               	btfsc	status,2,c
  5060  00121A  EF11  F009         	goto	u5261
  5061  00121E  EF14  F009         	goto	u5260
  5062  001222                     u5261:
  5063  001222  FFFF               	dw	65535	; assembler added errata NOP
  5064  001224  EF29  F009         	goto	l4399
  5065  001228                     u5260:
  5066  001228  FFFF               	dw	65535	; assembler added errata NOP
  5067  00122A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5068  00122E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5069  001232  CFDE FFF6          	movff	postinc2,tblptrl
  5070  001236  CFDD FFF7          	movff	postdec2,tblptrh
  5071  00123A                     	if	0	;tblptru may be non-zero
  5072  00123A                     	endif
  5073  00123A                     	if	0	;tblptru may be non-zero
  5074  00123A                     	endif
  5075  00123A  0008               	tblrd		*
  5076  00123C  FFFF               	dw	65535	; errata NOP
  5077  00123E  50F5               	movf	tablat,w,c
  5078  001240  0A58               	xorlw	88
  5079  001242  A4D8               	btfss	status,2,c
  5080  001244  EF26  F009         	goto	u5271
  5081  001248  EF29  F009         	goto	u5270
  5082  00124C                     u5271:
  5083  00124C  FFFF               	dw	65535	; assembler added errata NOP
  5084  00124E  EF5D  F009         	goto	l4409
  5085  001252                     u5270:
  5086  001252                     l4399:
  5087  001252  FFFF               	dw	65535	; assembler added errata NOP
  5088                           
  5089                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1276:            
      +                           c = (*fmt)[0];
  5090  001254  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5091  001258  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5092  00125C  CFDE FFF6          	movff	postinc2,tblptrl
  5093  001260  CFDD FFF7          	movff	postdec2,tblptrh
  5094  001264                     	if	0	;tblptru may be non-zero
  5095  001264                     	endif
  5096  001264                     	if	0	;tblptru may be non-zero
  5097  001264                     	endif
  5098  001264  0008               	tblrd		*
  5099  001266  FFFF               	dw	65535	; errata NOP
  5100  001268  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  5101  00126C                     
  5102                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1277:            
      +                           ++*fmt;
  5103  00126C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5104  001270  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5105  001274  2ADE               	incf	postinc2,f,c
  5106  001276  0E00               	movlw	0
  5107  001278  22DD               	addwfc	postdec2,f,c
  5108  00127A                     
  5109                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1278:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  5110  00127A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5111  00127E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5112  001282  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5113  001286  0E02               	movlw	2
  5114  001288  26DE               	addwf	postinc2,f,c
  5115  00128A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5116  00128E  0E00               	movlw	0
  5117  001290  22DD               	addwfc	postdec2,f,c
  5118  001292  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5119  001296  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5120  00129A  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5121  00129E  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5122  0012A2  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5123  0012A6  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5124  0012AA  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5125  0012AC  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5126  0012AE  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5127  0012B0  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5128  0012B2  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5129  0012B4  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5130  0012B6  EF69  F008         	goto	l4377
  5131  0012BA                     l4409:
  5132  0012BA  FFFF               	dw	65535	; assembler added errata NOP
  5133                           
  5134                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1337:         if 
      +                          (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", ((size
      +                          of("zX")/sizeof("zX"[0]))-1))) {
  5135  0012BC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5136  0012C0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5137  0012C4  CFDE F001          	movff	postinc2,strncmp@_l
  5138  0012C8  CFDD F002          	movff	postdec2,strncmp@_l+1
  5139  0012CC  0EF8               	movlw	low STR_99
  5140  0012CE  6E03               	movwf	strncmp@_r^0,c
  5141  0012D0  0E7F               	movlw	high STR_99
  5142  0012D2  6E04               	movwf	(strncmp@_r+1)^0,c
  5143  0012D4  0E00               	movlw	0
  5144  0012D6  6E06               	movwf	(strncmp@n+1)^0,c
  5145  0012D8  0E02               	movlw	2
  5146  0012DA  6E05               	movwf	strncmp@n^0,c
  5147  0012DC  ECDA  F03D         	call	_strncmp	;wreg free
  5148  0012E0  5001               	movf	?_strncmp^0,w,c
  5149  0012E2  1002               	iorwf	(?_strncmp+1)^0,w,c
  5150  0012E4  B4D8               	btfsc	status,2,c
  5151  0012E6  EF77  F009         	goto	u5281
  5152  0012EA  EF7A  F009         	goto	u5280
  5153  0012EE                     u5281:
  5154  0012EE  FFFF               	dw	65535	; assembler added errata NOP
  5155  0012F0  EF97  F009         	goto	l4413
  5156  0012F4                     u5280:
  5157  0012F4  FFFF               	dw	65535	; assembler added errata NOP
  5158  0012F6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5159  0012FA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5160  0012FE  CFDE F001          	movff	postinc2,strncmp@_l
  5161  001302  CFDD F002          	movff	postdec2,strncmp@_l+1
  5162  001306  0EE6               	movlw	low STR_103
  5163  001308  6E03               	movwf	strncmp@_r^0,c
  5164  00130A  0E7F               	movlw	high STR_103
  5165  00130C  6E04               	movwf	(strncmp@_r+1)^0,c
  5166  00130E  0E00               	movlw	0
  5167  001310  6E06               	movwf	(strncmp@n+1)^0,c
  5168  001312  0E02               	movlw	2
  5169  001314  6E05               	movwf	strncmp@n^0,c
  5170  001316  ECDA  F03D         	call	_strncmp	;wreg free
  5171  00131A  5001               	movf	?_strncmp^0,w,c
  5172  00131C  1002               	iorwf	(?_strncmp+1)^0,w,c
  5173  00131E  A4D8               	btfss	status,2,c
  5174  001320  EF94  F009         	goto	u5291
  5175  001324  EF97  F009         	goto	u5290
  5176  001328                     u5291:
  5177  001328  FFFF               	dw	65535	; assembler added errata NOP
  5178  00132A  EFD4  F009         	goto	l4423
  5179  00132E                     u5290:
  5180  00132E                     l4413:
  5181  00132E  FFFF               	dw	65535	; assembler added errata NOP
  5182                           
  5183                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1338: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1340:             c = (*fmt)
      +                          [1];
  5184  001330  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5185  001334  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5186  001338  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  5187  00133C  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  5188  001340  0E01               	movlw	1
  5189  001342  2649               	addwf	??_vfpfcnvrt^0,f,c
  5190  001344  0E00               	movlw	0
  5191  001346  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5192  001348  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5193  00134C  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5194  001350                     	if	0	;tblptru may be non-zero
  5195  001350                     	endif
  5196  001350                     	if	0	;tblptru may be non-zero
  5197  001350                     	endif
  5198  001350  0008               	tblrd		*
  5199  001352  FFFF               	dw	65535	; errata NOP
  5200  001354  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  5201  001358                     
  5202                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1341:            
      +                           *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  5203  001358  0E02               	movlw	2
  5204  00135A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5205  00135E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5206  001362  26DE               	addwf	postinc2,f,c
  5207  001364  0E00               	movlw	0
  5208  001366  22DD               	addwfc	postdec2,f,c
  5209  001368                     
  5210                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1342:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5211  001368  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5212  00136C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5213  001370  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5214  001374  0E02               	movlw	2
  5215  001376  26DE               	addwf	postinc2,f,c
  5216  001378  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5217  00137C  0E00               	movlw	0
  5218  00137E  22DD               	addwfc	postdec2,f,c
  5219  001380  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5220  001384  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5221  001388  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5222  00138C  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5223  001390  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5224  001394  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5225  001398  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5226  00139A  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5227  00139C  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5228  00139E  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5229  0013A0  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5230  0013A2  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5231  0013A4  EF69  F008         	goto	l4377
  5232  0013A8                     l4423:
  5233  0013A8  FFFF               	dw	65535	; assembler added errata NOP
  5234                           
  5235                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  5236  0013AA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5237  0013AE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5238  0013B2  CFDE FFF6          	movff	postinc2,tblptrl
  5239  0013B6  CFDD FFF7          	movff	postdec2,tblptrh
  5240  0013BA                     	if	0	;tblptru may be non-zero
  5241  0013BA                     	endif
  5242  0013BA                     	if	0	;tblptru may be non-zero
  5243  0013BA                     	endif
  5244  0013BA  0008               	tblrd		*
  5245  0013BC  FFFF               	dw	65535	; errata NOP
  5246  0013BE  50F5               	movf	tablat,w,c
  5247  0013C0  0A25               	xorlw	37
  5248  0013C2  A4D8               	btfss	status,2,c
  5249  0013C4  EFE6  F009         	goto	u5301
  5250  0013C8  EFE9  F009         	goto	u5300
  5251  0013CC                     u5301:
  5252  0013CC  FFFF               	dw	65535	; assembler added errata NOP
  5253  0013CE  EF02  F00A         	goto	l4433
  5254  0013D2                     u5300:
  5255  0013D2  FFFF               	dw	65535	; assembler added errata NOP
  5256  0013D4                     
  5257                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  5258  0013D4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5259  0013D8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5260  0013DC  2ADE               	incf	postinc2,f,c
  5261  0013DE  0E00               	movlw	0
  5262  0013E0  22DD               	addwfc	postdec2,f,c
  5263  0013E2                     
  5264                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  5265  0013E2  0E00               	movlw	0
  5266  0013E4  6E02               	movwf	(fputc@c+1)^0,c
  5267  0013E6  0E25               	movlw	37
  5268  0013E8  6E01               	movwf	fputc@c^0,c
  5269  0013EA  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5270  0013EE  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5271  0013F2  EC85  F03B         	call	_fputc	;wreg free
  5272  0013F6                     l4429:
  5273  0013F6  FFFF               	dw	65535	; assembler added errata NOP
  5274                           
  5275                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  5276  0013F8  0E00               	movlw	0
  5277  0013FA  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  5278  0013FC  0E01               	movlw	1
  5279  0013FE  6E43               	movwf	?_vfpfcnvrt^0,c
  5280  001400  EF29  F00A         	goto	l1231
  5281  001404                     l4433:
  5282  001404  FFFF               	dw	65535	; assembler added errata NOP
  5283                           
  5284                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  5285  001406  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5286  00140A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5287  00140E  2ADE               	incf	postinc2,f,c
  5288  001410  0E00               	movlw	0
  5289  001412  22DD               	addwfc	postdec2,f,c
  5290  001414  EF3F  F005         	goto	l4285
  5291  001418                     l4439:
  5292  001418  FFFF               	dw	65535	; assembler added errata NOP
  5293                           
  5294                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  5295  00141A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5296  00141E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5297  001422  CFDE FFF6          	movff	postinc2,tblptrl
  5298  001426  CFDD FFF7          	movff	postdec2,tblptrh
  5299  00142A                     	if	0	;tblptru may be non-zero
  5300  00142A                     	endif
  5301  00142A                     	if	0	;tblptru may be non-zero
  5302  00142A                     	endif
  5303  00142A  0008               	tblrd		*
  5304  00142C  FFFF               	dw	65535	; errata NOP
  5305  00142E  50F5               	movf	tablat,w,c
  5306  001430  6E01               	movwf	fputc@c^0,c
  5307  001432  6A02               	clrf	(fputc@c+1)^0,c
  5308  001434  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5309  001438  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5310  00143C  EC85  F03B         	call	_fputc	;wreg free
  5311  001440                     
  5312                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  5313  001440  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5314  001444  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5315  001448  2ADE               	incf	postinc2,f,c
  5316  00144A  0E00               	movlw	0
  5317  00144C  22DD               	addwfc	postdec2,f,c
  5318  00144E  EFFB  F009         	goto	l4429
  5319  001452                     l1231:
  5320  001452  FFFF               	dw	65535	; assembler added errata NOP
  5321  001454  0012               	return		;funcret
  5322  001456  FFFF               	dw	65535	; errata NOP
  5323  001458                     __end_of_vfpfcnvrt:
  5324                           	callstack 0
  5325                           
  5326 ;; *************** function _xtoa *****************
  5327 ;; Defined at:
  5328 ;;		line 623 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  5329 ;; Parameters:    Size  Location     Type
  5330 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5331 ;;		 -> vsnprintf@f(6), 
  5332 ;;  d               8   29[COMRAM] unsigned long long 
  5333 ;;  x               1   37[COMRAM] unsigned char 
  5334 ;; Auto vars:     Size  Location     Type
  5335 ;;  n               8   54[COMRAM] unsigned long long 
  5336 ;;  c               2   64[COMRAM] int 
  5337 ;;  i               2   62[COMRAM] int 
  5338 ;;  w               2   52[COMRAM] int 
  5339 ;;  p               2   50[COMRAM] int 
  5340 ;; Return value:  Size  Location     Type
  5341 ;;                  2   27[COMRAM] int 
  5342 ;; Registers used:
  5343 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5344 ;; Tracked objects:
  5345 ;;		On entry : 0/0
  5346 ;;		On exit  : 0/0
  5347 ;;		Unchanged: 0/0
  5348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5349 ;;      Params:        11       0       0       0       0       0       0
  5350 ;;      Locals:        20       0       0       0       0       0       0
  5351 ;;      Temps:          8       0       0       0       0       0       0
  5352 ;;      Totals:        39       0       0       0       0       0       0
  5353 ;;Total ram usage:       39 bytes
  5354 ;; Hardware stack levels used:    1
  5355 ;; Hardware stack levels required when called:    5
  5356 ;; This function calls:
  5357 ;;		_isalpha
  5358 ;;		_isupper
  5359 ;;		_pad
  5360 ;;		_toupper
  5361 ;; This function is called by:
  5362 ;;		_vfpfcnvrt
  5363 ;; This function uses a non-reentrant model
  5364 ;;
  5365                           
  5366                           	psect	text7
  5367  002EDA                     __ptext7:
  5368                           	callstack 0
  5369  002EDA                     _xtoa:
  5370                           	callstack 0
  5371  002EDA  FFFF               	dw	65535	; assembler added errata NOP
  5372  002EDC                     
  5373                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 623: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 624: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 625:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources
      +                          \c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0)) {
  5374  002EDC  0100               	movlb	0	; () banked
  5375  002EDE  BF89               	btfsc	(_prec+1)& (0+255),7,b
  5376  002EE0  EF74  F017         	goto	u4141
  5377  002EE4  EF77  F017         	goto	u4140
  5378  002EE8                     u4141:
  5379  002EE8  FFFF               	dw	65535	; assembler added errata NOP
  5380  002EEA  EF79  F017         	goto	l3795
  5381  002EEE                     u4140:
  5382  002EEE  FFFF               	dw	65535	; assembler added errata NOP
  5383  002EF0                     
  5384                           ; BSR set to: 0
  5385                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 630:         flag
      +                          s &= ~(1 << 1);
  5386  002EF0  927D               	bcf	_flags^0,1,c
  5387  002EF2                     l3795:
  5388  002EF2  FFFF               	dw	65535	; assembler added errata NOP
  5389                           
  5390                           ; BSR set to: 0
  5391                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 632:     p = (0 <
      +                           prec) ? prec : 1;
  5392  002EF4  BF89               	btfsc	(_prec+1)& (0+255),7,b
  5393  002EF6  EF88  F017         	goto	u4150
  5394  002EFA  5189               	movf	(_prec+1)& (0+255),w,b
  5395  002EFC  E106               	bnz	u4151
  5396  002EFE  0588               	decf	_prec& (0+255),w,b
  5397  002F00  B0D8               	btfsc	status,0,c
  5398  002F02  EF85  F017         	goto	u4151
  5399  002F06  EF88  F017         	goto	u4150
  5400  002F0A                     u4151:
  5401  002F0A  FFFF               	dw	65535	; assembler added errata NOP
  5402  002F0C  EF8F  F017         	goto	l1169
  5403  002F10                     u4150:
  5404  002F10  FFFF               	dw	65535	; assembler added errata NOP
  5405  002F12                     
  5406                           ; BSR set to: 0
  5407  002F12  0E00               	movlw	0
  5408  002F14  6E34               	movwf	(xtoa@p+1)^0,c
  5409  002F16  0E01               	movlw	1
  5410  002F18  6E33               	movwf	xtoa@p^0,c
  5411  002F1A  EF94  F017         	goto	l1171
  5412  002F1E                     l1169:
  5413  002F1E  FFFF               	dw	65535	; assembler added errata NOP
  5414                           
  5415                           ; BSR set to: 0
  5416  002F20  C088  F033         	movff	_prec,xtoa@p
  5417  002F24  C089  F034         	movff	_prec+1,xtoa@p+1
  5418  002F28                     l1171:
  5419  002F28  FFFF               	dw	65535	; assembler added errata NOP
  5420                           
  5421                           ; BSR set to: 0
  5422                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 633:     w = widt
      +                          h;
  5423  002F2A  C086  F035         	movff	_width,xtoa@w
  5424  002F2E  C087  F036         	movff	_width+1,xtoa@w+1
  5425                           
  5426                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 634:     if (flag
      +                          s & (1 << 4)) {
  5427  002F32  A87D               	btfss	_flags^0,4,c
  5428  002F34  EF9E  F017         	goto	u4161
  5429  002F38  EFA1  F017         	goto	u4160
  5430  002F3C                     u4161:
  5431  002F3C  FFFF               	dw	65535	; assembler added errata NOP
  5432  002F3E  EFA6  F017         	goto	l3801
  5433  002F42                     u4160:
  5434  002F42  FFFF               	dw	65535	; assembler added errata NOP
  5435  002F44                     
  5436                           ; BSR set to: 0
  5437                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 635:         w -=
      +                           2;
  5438  002F44  0EFE               	movlw	254
  5439  002F46  2635               	addwf	xtoa@w^0,f,c
  5440  002F48  0EFF               	movlw	255
  5441  002F4A  2236               	addwfc	(xtoa@w+1)^0,f,c
  5442  002F4C                     l3801:
  5443  002F4C  FFFF               	dw	65535	; assembler added errata NOP
  5444                           
  5445                           ; BSR set to: 0
  5446                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 639:     n = d;
  5447  002F4E  C01E  F037         	movff	xtoa@d,xtoa@n
  5448  002F52  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  5449  002F56  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  5450  002F5A  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  5451  002F5E  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  5452  002F62  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  5453  002F66  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  5454  002F6A  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  5455  002F6E                     
  5456                           ; BSR set to: 0
  5457                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 640:     i = size
      +                          of(dbuf) - 1;
  5458  002F6E  0E00               	movlw	0
  5459  002F70  6E40               	movwf	(xtoa@i+1)^0,c
  5460  002F72  0E1F               	movlw	31
  5461  002F74  6E3F               	movwf	xtoa@i^0,c
  5462  002F76                     
  5463                           ; BSR set to: 0
  5464                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 641:     dbuf[i] 
      +                          = '\0';
  5465  002F76  0E00               	movlw	0
  5466  002F78  6FB1               	movwf	(_dbuf+31)& (0+255),b
  5467                           
  5468                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5469  002F7A  EF84  F018         	goto	l3837
  5470  002F7E                     l3807:
  5471  002F7E  FFFF               	dw	65535	; assembler added errata NOP
  5472                           
  5473                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 643:         --i;
  5474  002F80  063F               	decf	xtoa@i^0,f,c
  5475  002F82  A0D8               	btfss	status,0,c
  5476  002F84  0640               	decf	(xtoa@i+1)^0,f,c
  5477  002F86                     
  5478                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 644:         c = 
      +                          n & 0x0f;
  5479  002F86  0E0F               	movlw	15
  5480  002F88  1437               	andwf	xtoa@n^0,w,c
  5481  002F8A  6E41               	movwf	xtoa@c^0,c
  5482  002F8C  6A42               	clrf	(xtoa@c+1)^0,c
  5483  002F8E                     
  5484                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 645:         c = 
      +                          (c < 10) ? '0' + c : 'a' + (c - 10);
  5485  002F8E  BE42               	btfsc	(xtoa@c+1)^0,7,c
  5486  002F90  EFD3  F017         	goto	u4171
  5487  002F94  5042               	movf	(xtoa@c+1)^0,w,c
  5488  002F96  E10A               	bnz	u4170
  5489  002F98  0E0A               	movlw	10
  5490  002F9A  5C41               	subwf	xtoa@c^0,w,c
  5491  002F9C  A0D8               	btfss	status,0,c
  5492  002F9E  EFD3  F017         	goto	u4171
  5493  002FA2  EFD6  F017         	goto	u4170
  5494  002FA6                     u4171:
  5495  002FA6  FFFF               	dw	65535	; assembler added errata NOP
  5496  002FA8  EFDF  F017         	goto	l3815
  5497  002FAC                     u4170:
  5498  002FAC  FFFF               	dw	65535	; assembler added errata NOP
  5499  002FAE  0E57               	movlw	87
  5500  002FB0  2441               	addwf	xtoa@c^0,w,c
  5501  002FB2  6E41               	movwf	xtoa@c^0,c
  5502  002FB4  0E00               	movlw	0
  5503  002FB6  2042               	addwfc	(xtoa@c+1)^0,w,c
  5504  002FB8  6E42               	movwf	(xtoa@c+1)^0,c
  5505  002FBA  EFE6  F017         	goto	l1178
  5506  002FBE                     l3815:
  5507  002FBE  FFFF               	dw	65535	; assembler added errata NOP
  5508  002FC0  0E30               	movlw	48
  5509  002FC2  2441               	addwf	xtoa@c^0,w,c
  5510  002FC4  6E41               	movwf	xtoa@c^0,c
  5511  002FC6  0E00               	movlw	0
  5512  002FC8  2042               	addwfc	(xtoa@c+1)^0,w,c
  5513  002FCA  6E42               	movwf	(xtoa@c+1)^0,c
  5514  002FCC                     l1178:
  5515  002FCC  FFFF               	dw	65535	; assembler added errata NOP
  5516  002FCE  0EBF               	movlw	191
  5517  002FD0  6E27               	movwf	??_xtoa^0,c
  5518  002FD2  0EFF               	movlw	255
  5519  002FD4  6E28               	movwf	(??_xtoa+1)^0,c
  5520  002FD6  5026               	movf	xtoa@x^0,w,c
  5521  002FD8  6E29               	movwf	(??_xtoa+2)^0,c
  5522  002FDA  6A2A               	clrf	(??_xtoa+3)^0,c
  5523  002FDC  5027               	movf	??_xtoa^0,w,c
  5524  002FDE  2629               	addwf	(??_xtoa+2)^0,f,c
  5525  002FE0  5028               	movf	(??_xtoa+1)^0,w,c
  5526  002FE2  222A               	addwfc	(??_xtoa+3)^0,f,c
  5527  002FE4  502A               	movf	(??_xtoa+3)^0,w,c
  5528  002FE6  E10B               	bnz	u4180
  5529  002FE8  0E1A               	movlw	26
  5530  002FEA  5C29               	subwf	(??_xtoa+2)^0,w,c
  5531  002FEC  A0D8               	btfss	status,0,c
  5532  002FEE  EFFB  F017         	goto	u4181
  5533  002FF2  EFFF  F017         	goto	u4180
  5534  002FF6                     u4181:
  5535  002FF6  FFFF               	dw	65535	; assembler added errata NOP
  5536  002FF8  0E01               	movlw	1
  5537  002FFA  EF01  F018         	goto	u4190
  5538  002FFE                     u4180:
  5539  002FFE  FFFF               	dw	65535	; assembler added errata NOP
  5540  003000  0E00               	movlw	0
  5541  003002                     u4190:
  5542  003002  FFFF               	dw	65535	; assembler added errata NOP
  5543  003004  6E2F               	movwf	_xtoa$1538^0,c
  5544  003006  6A30               	clrf	(_xtoa$1538+1)^0,c
  5545  003008  502F               	movf	_xtoa$1538^0,w,c
  5546  00300A  1030               	iorwf	(_xtoa$1538+1)^0,w,c
  5547  00300C  B4D8               	btfsc	status,2,c
  5548  00300E  EF0B  F018         	goto	u4201
  5549  003012  EF0E  F018         	goto	u4200
  5550  003016                     u4201:
  5551  003016  FFFF               	dw	65535	; assembler added errata NOP
  5552  003018  EF44  F018         	goto	l3829
  5553  00301C                     u4200:
  5554  00301C  FFFF               	dw	65535	; assembler added errata NOP
  5555  00301E  0E9F               	movlw	159
  5556  003020  6E27               	movwf	??_xtoa^0,c
  5557  003022  0EFF               	movlw	255
  5558  003024  6E28               	movwf	(??_xtoa+1)^0,c
  5559  003026  0E20               	movlw	32
  5560  003028  1041               	iorwf	xtoa@c^0,w,c
  5561  00302A  6E29               	movwf	(??_xtoa+2)^0,c
  5562  00302C  0E00               	movlw	0
  5563  00302E  1042               	iorwf	(xtoa@c+1)^0,w,c
  5564  003030  6E2A               	movwf	(??_xtoa+3)^0,c
  5565  003032  5027               	movf	??_xtoa^0,w,c
  5566  003034  2629               	addwf	(??_xtoa+2)^0,f,c
  5567  003036  5028               	movf	(??_xtoa+1)^0,w,c
  5568  003038  222A               	addwfc	(??_xtoa+3)^0,f,c
  5569  00303A  502A               	movf	(??_xtoa+3)^0,w,c
  5570  00303C  E10B               	bnz	u4210
  5571  00303E  0E1A               	movlw	26
  5572  003040  5C29               	subwf	(??_xtoa+2)^0,w,c
  5573  003042  A0D8               	btfss	status,0,c
  5574  003044  EF26  F018         	goto	u4211
  5575  003048  EF2A  F018         	goto	u4210
  5576  00304C                     u4211:
  5577  00304C  FFFF               	dw	65535	; assembler added errata NOP
  5578  00304E  0E01               	movlw	1
  5579  003050  EF2C  F018         	goto	u4220
  5580  003054                     u4210:
  5581  003054  FFFF               	dw	65535	; assembler added errata NOP
  5582  003056  0E00               	movlw	0
  5583  003058                     u4220:
  5584  003058  FFFF               	dw	65535	; assembler added errata NOP
  5585  00305A  6E31               	movwf	_xtoa$1539^0,c
  5586  00305C  6A32               	clrf	(_xtoa$1539+1)^0,c
  5587  00305E  5031               	movf	_xtoa$1539^0,w,c
  5588  003060  1032               	iorwf	(_xtoa$1539+1)^0,w,c
  5589  003062  B4D8               	btfsc	status,2,c
  5590  003064  EF36  F018         	goto	u4231
  5591  003068  EF39  F018         	goto	u4230
  5592  00306C                     u4231:
  5593  00306C  FFFF               	dw	65535	; assembler added errata NOP
  5594  00306E  EF44  F018         	goto	l3829
  5595  003072                     u4230:
  5596  003072  FFFF               	dw	65535	; assembler added errata NOP
  5597  003074                     
  5598                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 647:             
      +                          c = toupper(c);
  5599  003074  C041  F007         	movff	xtoa@c,toupper@c
  5600  003078  C042  F008         	movff	xtoa@c+1,toupper@c+1
  5601  00307C  ECCA  F038         	call	_toupper	;wreg free
  5602  003080  C007  F041         	movff	?_toupper,xtoa@c
  5603  003084  C008  F042         	movff	?_toupper+1,xtoa@c+1
  5604  003088                     l3829:
  5605  003088  FFFF               	dw	65535	; assembler added errata NOP
  5606                           
  5607                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 649:         dbuf
      +                          [i] = (char)c;
  5608  00308A  0E92               	movlw	low _dbuf
  5609  00308C  243F               	addwf	xtoa@i^0,w,c
  5610  00308E  6ED9               	movwf	fsr2l,c
  5611  003090  0E00               	movlw	high _dbuf
  5612  003092  2040               	addwfc	(xtoa@i+1)^0,w,c
  5613  003094  6EDA               	movwf	fsr2h,c
  5614  003096  C041  FFDF         	movff	xtoa@c,indf2
  5615  00309A                     
  5616                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 650:         --p;
  5617  00309A  0633               	decf	xtoa@p^0,f,c
  5618  00309C  A0D8               	btfss	status,0,c
  5619  00309E  0634               	decf	(xtoa@p+1)^0,f,c
  5620  0030A0                     
  5621                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 651:         --w;
  5622  0030A0  0635               	decf	xtoa@w^0,f,c
  5623  0030A2  A0D8               	btfss	status,0,c
  5624  0030A4  0636               	decf	(xtoa@w+1)^0,f,c
  5625  0030A6                     
  5626                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 652:         n = 
      +                          n >> 4;
  5627  0030A6  C037  F027         	movff	xtoa@n,??_xtoa
  5628  0030AA  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  5629  0030AE  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  5630  0030B2  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  5631  0030B6  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  5632  0030BA  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  5633  0030BE  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  5634  0030C2  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  5635  0030C6  0E05               	movlw	5
  5636  0030C8  EF70  F018         	goto	u4240
  5637  0030CC                     u4245:
  5638  0030CC  FFFF               	dw	65535	; assembler added errata NOP
  5639  0030CE  90D8               	bcf	status,0,c
  5640  0030D0  322E               	rrcf	(??_xtoa+7)^0,f,c
  5641  0030D2  322D               	rrcf	(??_xtoa+6)^0,f,c
  5642  0030D4  322C               	rrcf	(??_xtoa+5)^0,f,c
  5643  0030D6  322B               	rrcf	(??_xtoa+4)^0,f,c
  5644  0030D8  322A               	rrcf	(??_xtoa+3)^0,f,c
  5645  0030DA  3229               	rrcf	(??_xtoa+2)^0,f,c
  5646  0030DC  3228               	rrcf	(??_xtoa+1)^0,f,c
  5647  0030DE  3227               	rrcf	??_xtoa^0,f,c
  5648  0030E0                     u4240:
  5649  0030E0  FFFF               	dw	65535	; assembler added errata NOP
  5650  0030E2  2EE8               	decfsz	wreg,f,c
  5651  0030E4  EF66  F018         	goto	u4245
  5652  0030E8  C027  F037         	movff	??_xtoa,xtoa@n
  5653  0030EC  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  5654  0030F0  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  5655  0030F4  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  5656  0030F8  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  5657  0030FC  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  5658  003100  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  5659  003104  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  5660  003108                     l3837:
  5661  003108  FFFF               	dw	65535	; assembler added errata NOP
  5662                           
  5663                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5664  00310A  BE40               	btfsc	(xtoa@i+1)^0,7,c
  5665  00310C  EF91  F018         	goto	u4251
  5666  003110  5040               	movf	(xtoa@i+1)^0,w,c
  5667  003112  E10A               	bnz	u4250
  5668  003114  0E02               	movlw	2
  5669  003116  5C3F               	subwf	xtoa@i^0,w,c
  5670  003118  A0D8               	btfss	status,0,c
  5671  00311A  EF91  F018         	goto	u4251
  5672  00311E  EF94  F018         	goto	u4250
  5673  003122                     u4251:
  5674  003122  FFFF               	dw	65535	; assembler added errata NOP
  5675  003124  EFCC  F018         	goto	l1192
  5676  003128                     u4250:
  5677  003128  FFFF               	dw	65535	; assembler added errata NOP
  5678  00312A  5037               	movf	xtoa@n^0,w,c
  5679  00312C  1038               	iorwf	(xtoa@n+1)^0,w,c
  5680  00312E  1039               	iorwf	(xtoa@n+2)^0,w,c
  5681  003130  103A               	iorwf	(xtoa@n+3)^0,w,c
  5682  003132  103B               	iorwf	(xtoa@n+4)^0,w,c
  5683  003134  103C               	iorwf	(xtoa@n+5)^0,w,c
  5684  003136  103D               	iorwf	(xtoa@n+6)^0,w,c
  5685  003138  103E               	iorwf	(xtoa@n+7)^0,w,c
  5686  00313A  A4D8               	btfss	status,2,c
  5687  00313C  EFA2  F018         	goto	u4261
  5688  003140  EFA5  F018         	goto	u4260
  5689  003144                     u4261:
  5690  003144  FFFF               	dw	65535	; assembler added errata NOP
  5691  003146  EFBF  F017         	goto	l3807
  5692  00314A                     u4260:
  5693  00314A  FFFF               	dw	65535	; assembler added errata NOP
  5694  00314C  BE34               	btfsc	(xtoa@p+1)^0,7,c
  5695  00314E  EFB4  F018         	goto	u4270
  5696  003152  5034               	movf	(xtoa@p+1)^0,w,c
  5697  003154  E106               	bnz	u4271
  5698  003156  0433               	decf	xtoa@p^0,w,c
  5699  003158  B0D8               	btfsc	status,0,c
  5700  00315A  EFB1  F018         	goto	u4271
  5701  00315E  EFB4  F018         	goto	u4270
  5702  003162                     u4271:
  5703  003162  FFFF               	dw	65535	; assembler added errata NOP
  5704  003164  EFBF  F017         	goto	l3807
  5705  003168                     u4270:
  5706  003168  FFFF               	dw	65535	; assembler added errata NOP
  5707  00316A  BE36               	btfsc	(xtoa@w+1)^0,7,c
  5708  00316C  EFC0  F018         	goto	u4281
  5709  003170  5036               	movf	(xtoa@w+1)^0,w,c
  5710  003172  E109               	bnz	u4280
  5711  003174  0435               	decf	xtoa@w^0,w,c
  5712  003176  A0D8               	btfss	status,0,c
  5713  003178  EFC0  F018         	goto	u4281
  5714  00317C  EFC3  F018         	goto	u4280
  5715  003180                     u4281:
  5716  003180  FFFF               	dw	65535	; assembler added errata NOP
  5717  003182  EFCC  F018         	goto	l1192
  5718  003186                     u4280:
  5719  003186  FFFF               	dw	65535	; assembler added errata NOP
  5720  003188  B27D               	btfsc	_flags^0,1,c
  5721  00318A  EFC9  F018         	goto	u4291
  5722  00318E  EFCC  F018         	goto	u4290
  5723  003192                     u4291:
  5724  003192  FFFF               	dw	65535	; assembler added errata NOP
  5725  003194  EFBF  F017         	goto	l3807
  5726  003198                     u4290:
  5727  003198                     l1192:
  5728  003198  FFFF               	dw	65535	; assembler added errata NOP
  5729                           
  5730                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  5731  00319A  A87D               	btfss	_flags^0,4,c
  5732  00319C  EFD2  F018         	goto	u4301
  5733  0031A0  EFD5  F018         	goto	u4300
  5734  0031A4                     u4301:
  5735  0031A4  FFFF               	dw	65535	; assembler added errata NOP
  5736  0031A6  EFEC  F018         	goto	l3853
  5737  0031AA                     u4300:
  5738  0031AA  FFFF               	dw	65535	; assembler added errata NOP
  5739  0031AC                     
  5740                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 657:         --i;
  5741  0031AC  063F               	decf	xtoa@i^0,f,c
  5742  0031AE  A0D8               	btfss	status,0,c
  5743  0031B0  0640               	decf	(xtoa@i+1)^0,f,c
  5744  0031B2                     
  5745                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 658:         dbuf
      +                          [i] = x;
  5746  0031B2  0E92               	movlw	low _dbuf
  5747  0031B4  243F               	addwf	xtoa@i^0,w,c
  5748  0031B6  6ED9               	movwf	fsr2l,c
  5749  0031B8  0E00               	movlw	high _dbuf
  5750  0031BA  2040               	addwfc	(xtoa@i+1)^0,w,c
  5751  0031BC  6EDA               	movwf	fsr2h,c
  5752  0031BE  C026  FFDF         	movff	xtoa@x,indf2
  5753  0031C2                     
  5754                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 659:         --i;
  5755  0031C2  063F               	decf	xtoa@i^0,f,c
  5756  0031C4  A0D8               	btfss	status,0,c
  5757  0031C6  0640               	decf	(xtoa@i+1)^0,f,c
  5758                           
  5759                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 660:         dbuf
      +                          [i] = '0';
  5760  0031C8  0E92               	movlw	low _dbuf
  5761  0031CA  243F               	addwf	xtoa@i^0,w,c
  5762  0031CC  6ED9               	movwf	fsr2l,c
  5763  0031CE  0E00               	movlw	high _dbuf
  5764  0031D0  2040               	addwfc	(xtoa@i+1)^0,w,c
  5765  0031D2  6EDA               	movwf	fsr2h,c
  5766  0031D4  0E30               	movlw	48
  5767  0031D6  6EDF               	movwf	indf2,c
  5768  0031D8                     l3853:
  5769  0031D8  FFFF               	dw	65535	; assembler added errata NOP
  5770                           
  5771                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 664:     return p
      +                          ad(fp, &dbuf[i], w);
  5772  0031DA  C01C  F011         	movff	xtoa@fp,pad@fp
  5773  0031DE  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  5774  0031E2  0E92               	movlw	low _dbuf
  5775  0031E4  243F               	addwf	xtoa@i^0,w,c
  5776  0031E6  6E13               	movwf	pad@buf^0,c
  5777  0031E8  0E00               	movlw	high _dbuf
  5778  0031EA  2040               	addwfc	(xtoa@i+1)^0,w,c
  5779  0031EC  6E14               	movwf	(pad@buf+1)^0,c
  5780  0031EE  C035  F015         	movff	xtoa@w,pad@p
  5781  0031F2  C036  F016         	movff	xtoa@w+1,pad@p+1
  5782  0031F6  ECF6  F03B         	call	_pad	;wreg free
  5783  0031FA  C011  F01C         	movff	?_pad,?_xtoa
  5784  0031FE  C012  F01D         	movff	?_pad+1,?_xtoa+1
  5785  003202  0012               	return		;funcret
  5786  003204  FFFF               	dw	65535	; errata NOP
  5787  003206                     __end_of_xtoa:
  5788                           	callstack 0
  5789                           
  5790 ;; *************** function _toupper *****************
  5791 ;; Defined at:
  5792 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\toupper.c"
  5793 ;; Parameters:    Size  Location     Type
  5794 ;;  c               2    6[COMRAM] int 
  5795 ;; Auto vars:     Size  Location     Type
  5796 ;;		None
  5797 ;; Return value:  Size  Location     Type
  5798 ;;                  2    6[COMRAM] int 
  5799 ;; Registers used:
  5800 ;;		wreg, status,2, status,0
  5801 ;; Tracked objects:
  5802 ;;		On entry : 0/0
  5803 ;;		On exit  : 0/0
  5804 ;;		Unchanged: 0/0
  5805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5806 ;;      Params:         2       0       0       0       0       0       0
  5807 ;;      Locals:         2       0       0       0       0       0       0
  5808 ;;      Temps:          4       0       0       0       0       0       0
  5809 ;;      Totals:         8       0       0       0       0       0       0
  5810 ;;Total ram usage:        8 bytes
  5811 ;; Hardware stack levels used:    1
  5812 ;; Hardware stack levels required when called:    2
  5813 ;; This function calls:
  5814 ;;		_islower
  5815 ;; This function is called by:
  5816 ;;		_xtoa
  5817 ;; This function uses a non-reentrant model
  5818 ;;
  5819                           
  5820                           	psect	text8
  5821  007194                     __ptext8:
  5822                           	callstack 0
  5823  007194                     _toupper:
  5824                           	callstack 0
  5825  007194  FFFF               	dw	65535	; assembler added errata NOP
  5826  007196  0E9F               	movlw	159
  5827  007198  6E09               	movwf	??_toupper^0,c
  5828  00719A  0EFF               	movlw	255
  5829  00719C  6E0A               	movwf	(??_toupper+1)^0,c
  5830  00719E  C007  F00B         	movff	toupper@c,??_toupper+2
  5831  0071A2  C008  F00C         	movff	toupper@c+1,??_toupper+3
  5832  0071A6  5009               	movf	??_toupper^0,w,c
  5833  0071A8  260B               	addwf	(??_toupper+2)^0,f,c
  5834  0071AA  500A               	movf	(??_toupper+1)^0,w,c
  5835  0071AC  220C               	addwfc	(??_toupper+3)^0,f,c
  5836  0071AE  500C               	movf	(??_toupper+3)^0,w,c
  5837  0071B0  E10B               	bnz	u3640
  5838  0071B2  0E1A               	movlw	26
  5839  0071B4  5C0B               	subwf	(??_toupper+2)^0,w,c
  5840  0071B6  A0D8               	btfss	status,0,c
  5841  0071B8  EFE0  F038         	goto	u3641
  5842  0071BC  EFE4  F038         	goto	u3640
  5843  0071C0                     u3641:
  5844  0071C0  FFFF               	dw	65535	; assembler added errata NOP
  5845  0071C2  0E01               	movlw	1
  5846  0071C4  EFE6  F038         	goto	u3650
  5847  0071C8                     u3640:
  5848  0071C8  FFFF               	dw	65535	; assembler added errata NOP
  5849  0071CA  0E00               	movlw	0
  5850  0071CC                     u3650:
  5851  0071CC  FFFF               	dw	65535	; assembler added errata NOP
  5852  0071CE  6E0D               	movwf	_toupper$1766^0,c
  5853  0071D0  6A0E               	clrf	(_toupper$1766+1)^0,c
  5854  0071D2  500D               	movf	_toupper$1766^0,w,c
  5855  0071D4  100E               	iorwf	(_toupper$1766+1)^0,w,c
  5856  0071D6  B4D8               	btfsc	status,2,c
  5857  0071D8  EFF0  F038         	goto	u3661
  5858  0071DC  EFF3  F038         	goto	u3660
  5859  0071E0                     u3661:
  5860  0071E0  FFFF               	dw	65535	; assembler added errata NOP
  5861  0071E2  EFFA  F038         	goto	l1385
  5862  0071E6                     u3660:
  5863  0071E6  FFFF               	dw	65535	; assembler added errata NOP
  5864  0071E8  0E5F               	movlw	95
  5865  0071EA  1407               	andwf	toupper@c^0,w,c
  5866  0071EC  6E07               	movwf	?_toupper^0,c
  5867  0071EE  6A08               	clrf	(?_toupper+1)^0,c
  5868  0071F0  EFFF  F038         	goto	l1390
  5869  0071F4                     l1385:
  5870  0071F4  FFFF               	dw	65535	; assembler added errata NOP
  5871  0071F6  C007  F007         	movff	toupper@c,?_toupper
  5872  0071FA  C008  F008         	movff	toupper@c+1,?_toupper+1
  5873  0071FE                     l1390:
  5874  0071FE  FFFF               	dw	65535	; assembler added errata NOP
  5875  007200  0012               	return		;funcret
  5876  007202  FFFF               	dw	65535	; errata NOP
  5877  007204                     __end_of_toupper:
  5878                           	callstack 0
  5879                           
  5880 ;; *************** function _islower *****************
  5881 ;; Defined at:
  5882 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\islower.c"
  5883 ;; Parameters:    Size  Location     Type
  5884 ;;  c               2    0[COMRAM] int 
  5885 ;; Auto vars:     Size  Location     Type
  5886 ;;		None
  5887 ;; Return value:  Size  Location     Type
  5888 ;;                  2    0[COMRAM] int 
  5889 ;; Registers used:
  5890 ;;		wreg, status,2, status,0
  5891 ;; Tracked objects:
  5892 ;;		On entry : 0/0
  5893 ;;		On exit  : 0/0
  5894 ;;		Unchanged: 0/0
  5895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5896 ;;      Params:         2       0       0       0       0       0       0
  5897 ;;      Locals:         0       0       0       0       0       0       0
  5898 ;;      Temps:          4       0       0       0       0       0       0
  5899 ;;      Totals:         6       0       0       0       0       0       0
  5900 ;;Total ram usage:        6 bytes
  5901 ;; Hardware stack levels used:    1
  5902 ;; Hardware stack levels required when called:    1
  5903 ;; This function calls:
  5904 ;;		Nothing
  5905 ;; This function is called by:
  5906 ;;		_toupper
  5907 ;; This function uses a non-reentrant model
  5908 ;;
  5909                           
  5910                           	psect	text9
  5911  006EF6                     __ptext9:
  5912                           	callstack 0
  5913  006EF6                     _islower:
  5914                           	callstack 23
  5915  006EF6  FFFF               	dw	65535	; assembler added errata NOP
  5916  006EF8  0E9F               	movlw	159
  5917  006EFA  6E03               	movwf	??_islower^0,c
  5918  006EFC  0EFF               	movlw	255
  5919  006EFE  6E04               	movwf	(??_islower+1)^0,c
  5920  006F00  C001  F005         	movff	islower@c,??_islower+2
  5921  006F04  C002  F006         	movff	islower@c+1,??_islower+3
  5922  006F08  5003               	movf	??_islower^0,w,c
  5923  006F0A  2605               	addwf	(??_islower+2)^0,f,c
  5924  006F0C  5004               	movf	(??_islower+1)^0,w,c
  5925  006F0E  2206               	addwfc	(??_islower+3)^0,f,c
  5926  006F10  5006               	movf	(??_islower+3)^0,w,c
  5927  006F12  E10B               	bnz	u3330
  5928  006F14  0E1A               	movlw	26
  5929  006F16  5C05               	subwf	(??_islower+2)^0,w,c
  5930  006F18  A0D8               	btfss	status,0,c
  5931  006F1A  EF91  F037         	goto	u3331
  5932  006F1E  EF95  F037         	goto	u3330
  5933  006F22                     u3331:
  5934  006F22  FFFF               	dw	65535	; assembler added errata NOP
  5935  006F24  0E01               	movlw	1
  5936  006F26  EF97  F037         	goto	u3340
  5937  006F2A                     u3330:
  5938  006F2A  FFFF               	dw	65535	; assembler added errata NOP
  5939  006F2C  0E00               	movlw	0
  5940  006F2E                     u3340:
  5941  006F2E  FFFF               	dw	65535	; assembler added errata NOP
  5942  006F30  6E01               	movwf	?_islower^0,c
  5943  006F32  6A02               	clrf	(?_islower+1)^0,c
  5944  006F34  0012               	return		;funcret
  5945  006F36  FFFF               	dw	65535	; errata NOP
  5946  006F38                     __end_of_islower:
  5947                           	callstack 0
  5948                           
  5949 ;; *************** function _isupper *****************
  5950 ;; Defined at:
  5951 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  5952 ;; Parameters:    Size  Location     Type
  5953 ;;  c               2    0[COMRAM] int 
  5954 ;; Auto vars:     Size  Location     Type
  5955 ;;		None
  5956 ;; Return value:  Size  Location     Type
  5957 ;;                  2    0[COMRAM] int 
  5958 ;; Registers used:
  5959 ;;		wreg, status,2, status,0
  5960 ;; Tracked objects:
  5961 ;;		On entry : 0/0
  5962 ;;		On exit  : 0/0
  5963 ;;		Unchanged: 0/0
  5964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5965 ;;      Params:         2       0       0       0       0       0       0
  5966 ;;      Locals:         0       0       0       0       0       0       0
  5967 ;;      Temps:          4       0       0       0       0       0       0
  5968 ;;      Totals:         6       0       0       0       0       0       0
  5969 ;;Total ram usage:        6 bytes
  5970 ;; Hardware stack levels used:    1
  5971 ;; Hardware stack levels required when called:    1
  5972 ;; This function calls:
  5973 ;;		Nothing
  5974 ;; This function is called by:
  5975 ;;		_xtoa
  5976 ;; This function uses a non-reentrant model
  5977 ;;
  5978                           
  5979                           	psect	text10
  5980  006EB4                     __ptext10:
  5981                           	callstack 0
  5982  006EB4                     _isupper:
  5983                           	callstack 24
  5984  006EB4  FFFF               	dw	65535	; assembler added errata NOP
  5985  006EB6  0EBF               	movlw	191
  5986  006EB8  6E03               	movwf	??_isupper^0,c
  5987  006EBA  0EFF               	movlw	255
  5988  006EBC  6E04               	movwf	(??_isupper+1)^0,c
  5989  006EBE  C001  F005         	movff	isupper@c,??_isupper+2
  5990  006EC2  C002  F006         	movff	isupper@c+1,??_isupper+3
  5991  006EC6  5003               	movf	??_isupper^0,w,c
  5992  006EC8  2605               	addwf	(??_isupper+2)^0,f,c
  5993  006ECA  5004               	movf	(??_isupper+1)^0,w,c
  5994  006ECC  2206               	addwfc	(??_isupper+3)^0,f,c
  5995  006ECE  5006               	movf	(??_isupper+3)^0,w,c
  5996  006ED0  E10B               	bnz	u3600
  5997  006ED2  0E1A               	movlw	26
  5998  006ED4  5C05               	subwf	(??_isupper+2)^0,w,c
  5999  006ED6  A0D8               	btfss	status,0,c
  6000  006ED8  EF70  F037         	goto	u3601
  6001  006EDC  EF74  F037         	goto	u3600
  6002  006EE0                     u3601:
  6003  006EE0  FFFF               	dw	65535	; assembler added errata NOP
  6004  006EE2  0E01               	movlw	1
  6005  006EE4  EF76  F037         	goto	u3610
  6006  006EE8                     u3600:
  6007  006EE8  FFFF               	dw	65535	; assembler added errata NOP
  6008  006EEA  0E00               	movlw	0
  6009  006EEC                     u3610:
  6010  006EEC  FFFF               	dw	65535	; assembler added errata NOP
  6011  006EEE  6E01               	movwf	?_isupper^0,c
  6012  006EF0  6A02               	clrf	(?_isupper+1)^0,c
  6013  006EF2  0012               	return		;funcret
  6014  006EF4  FFFF               	dw	65535	; errata NOP
  6015  006EF6                     __end_of_isupper:
  6016                           	callstack 0
  6017                           
  6018 ;; *************** function _isalpha *****************
  6019 ;; Defined at:
  6020 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isalpha.c"
  6021 ;; Parameters:    Size  Location     Type
  6022 ;;  c               2    0[COMRAM] int 
  6023 ;; Auto vars:     Size  Location     Type
  6024 ;;		None
  6025 ;; Return value:  Size  Location     Type
  6026 ;;                  2    0[COMRAM] int 
  6027 ;; Registers used:
  6028 ;;		wreg, status,2, status,0
  6029 ;; Tracked objects:
  6030 ;;		On entry : 0/0
  6031 ;;		On exit  : 0/0
  6032 ;;		Unchanged: 0/0
  6033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6034 ;;      Params:         2       0       0       0       0       0       0
  6035 ;;      Locals:         0       0       0       0       0       0       0
  6036 ;;      Temps:          4       0       0       0       0       0       0
  6037 ;;      Totals:         6       0       0       0       0       0       0
  6038 ;;Total ram usage:        6 bytes
  6039 ;; Hardware stack levels used:    1
  6040 ;; Hardware stack levels required when called:    1
  6041 ;; This function calls:
  6042 ;;		Nothing
  6043 ;; This function is called by:
  6044 ;;		_xtoa
  6045 ;; This function uses a non-reentrant model
  6046 ;;
  6047                           
  6048                           	psect	text11
  6049  006F38                     __ptext11:
  6050                           	callstack 0
  6051  006F38                     _isalpha:
  6052                           	callstack 24
  6053  006F38  FFFF               	dw	65535	; assembler added errata NOP
  6054  006F3A  0E9F               	movlw	159
  6055  006F3C  6E03               	movwf	??_isalpha^0,c
  6056  006F3E  0EFF               	movlw	255
  6057  006F40  6E04               	movwf	(??_isalpha+1)^0,c
  6058  006F42  0E20               	movlw	32
  6059  006F44  1001               	iorwf	isalpha@c^0,w,c
  6060  006F46  6E05               	movwf	(??_isalpha+2)^0,c
  6061  006F48  0E00               	movlw	0
  6062  006F4A  1002               	iorwf	(isalpha@c+1)^0,w,c
  6063  006F4C  6E06               	movwf	(??_isalpha+3)^0,c
  6064  006F4E  5003               	movf	??_isalpha^0,w,c
  6065  006F50  2605               	addwf	(??_isalpha+2)^0,f,c
  6066  006F52  5004               	movf	(??_isalpha+1)^0,w,c
  6067  006F54  2206               	addwfc	(??_isalpha+3)^0,f,c
  6068  006F56  5006               	movf	(??_isalpha+3)^0,w,c
  6069  006F58  E10B               	bnz	u3620
  6070  006F5A  0E1A               	movlw	26
  6071  006F5C  5C05               	subwf	(??_isalpha+2)^0,w,c
  6072  006F5E  A0D8               	btfss	status,0,c
  6073  006F60  EFB4  F037         	goto	u3621
  6074  006F64  EFB8  F037         	goto	u3620
  6075  006F68                     u3621:
  6076  006F68  FFFF               	dw	65535	; assembler added errata NOP
  6077  006F6A  0E01               	movlw	1
  6078  006F6C  EFBA  F037         	goto	u3630
  6079  006F70                     u3620:
  6080  006F70  FFFF               	dw	65535	; assembler added errata NOP
  6081  006F72  0E00               	movlw	0
  6082  006F74                     u3630:
  6083  006F74  FFFF               	dw	65535	; assembler added errata NOP
  6084  006F76  6E01               	movwf	?_isalpha^0,c
  6085  006F78  6A02               	clrf	(?_isalpha+1)^0,c
  6086  006F7A  0012               	return		;funcret
  6087  006F7C  FFFF               	dw	65535	; errata NOP
  6088  006F7E                     __end_of_isalpha:
  6089                           	callstack 0
  6090                           
  6091 ;; *************** function _utoa *****************
  6092 ;; Defined at:
  6093 ;;		line 593 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6094 ;; Parameters:    Size  Location     Type
  6095 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6096 ;;		 -> vsnprintf@f(6), 
  6097 ;;  d               8   29[COMRAM] unsigned long long 
  6098 ;; Auto vars:     Size  Location     Type
  6099 ;;  n               8   49[COMRAM] unsigned long long 
  6100 ;;  i               2   57[COMRAM] int 
  6101 ;;  w               2   47[COMRAM] int 
  6102 ;;  p               2   45[COMRAM] int 
  6103 ;; Return value:  Size  Location     Type
  6104 ;;                  2   27[COMRAM] int 
  6105 ;; Registers used:
  6106 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6107 ;; Tracked objects:
  6108 ;;		On entry : 0/0
  6109 ;;		On exit  : 0/0
  6110 ;;		Unchanged: 0/0
  6111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6112 ;;      Params:        10       0       0       0       0       0       0
  6113 ;;      Locals:        14       0       0       0       0       0       0
  6114 ;;      Temps:          8       0       0       0       0       0       0
  6115 ;;      Totals:        32       0       0       0       0       0       0
  6116 ;;Total ram usage:       32 bytes
  6117 ;; Hardware stack levels used:    1
  6118 ;; Hardware stack levels required when called:    5
  6119 ;; This function calls:
  6120 ;;		___lodiv
  6121 ;;		___lomod
  6122 ;;		_pad
  6123 ;; This function is called by:
  6124 ;;		_vfpfcnvrt
  6125 ;; This function uses a non-reentrant model
  6126 ;;
  6127                           
  6128                           	psect	text12
  6129  003206                     __ptext12:
  6130                           	callstack 0
  6131  003206                     _utoa:
  6132                           	callstack 0
  6133  003206  FFFF               	dw	65535	; assembler added errata NOP
  6134  003208                     
  6135                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 593: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99
      +                          \common\doprnt.c: 594: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\dop
      +                          rnt.c: 595:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common
      +                          \doprnt.c: 596:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sourc
      +                          es\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  6136  003208  0100               	movlb	0	; () banked
  6137  00320A  BF89               	btfsc	(_prec+1)& (0+255),7,b
  6138  00320C  EF0A  F019         	goto	u4071
  6139  003210  EF0D  F019         	goto	u4070
  6140  003214                     u4071:
  6141  003214  FFFF               	dw	65535	; assembler added errata NOP
  6142  003216  EF0F  F019         	goto	l3759
  6143  00321A                     u4070:
  6144  00321A  FFFF               	dw	65535	; assembler added errata NOP
  6145  00321C                     
  6146                           ; BSR set to: 0
  6147                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 600:         flag
      +                          s &= ~(1 << 1);
  6148  00321C  927D               	bcf	_flags^0,1,c
  6149  00321E                     l3759:
  6150  00321E  FFFF               	dw	65535	; assembler added errata NOP
  6151                           
  6152                           ; BSR set to: 0
  6153                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 602:     p = (0 <
      +                           prec) ? prec : 1;
  6154  003220  BF89               	btfsc	(_prec+1)& (0+255),7,b
  6155  003222  EF1E  F019         	goto	u4080
  6156  003226  5189               	movf	(_prec+1)& (0+255),w,b
  6157  003228  E106               	bnz	u4081
  6158  00322A  0588               	decf	_prec& (0+255),w,b
  6159  00322C  B0D8               	btfsc	status,0,c
  6160  00322E  EF1B  F019         	goto	u4081
  6161  003232  EF1E  F019         	goto	u4080
  6162  003236                     u4081:
  6163  003236  FFFF               	dw	65535	; assembler added errata NOP
  6164  003238  EF25  F019         	goto	l1154
  6165  00323C                     u4080:
  6166  00323C  FFFF               	dw	65535	; assembler added errata NOP
  6167  00323E                     
  6168                           ; BSR set to: 0
  6169  00323E  0E00               	movlw	0
  6170  003240  6E2F               	movwf	(utoa@p+1)^0,c
  6171  003242  0E01               	movlw	1
  6172  003244  6E2E               	movwf	utoa@p^0,c
  6173  003246  EF2A  F019         	goto	l1156
  6174  00324A                     l1154:
  6175  00324A  FFFF               	dw	65535	; assembler added errata NOP
  6176                           
  6177                           ; BSR set to: 0
  6178  00324C  C088  F02E         	movff	_prec,utoa@p
  6179  003250  C089  F02F         	movff	_prec+1,utoa@p+1
  6180  003254                     l1156:
  6181  003254  FFFF               	dw	65535	; assembler added errata NOP
  6182                           
  6183                           ; BSR set to: 0
  6184                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 603:     w = widt
      +                          h;
  6185  003256  C086  F030         	movff	_width,utoa@w
  6186  00325A  C087  F031         	movff	_width+1,utoa@w+1
  6187                           
  6188                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 606:     n = d;
  6189  00325E  C01E  F032         	movff	utoa@d,utoa@n
  6190  003262  C01F  F033         	movff	utoa@d+1,utoa@n+1
  6191  003266  C020  F034         	movff	utoa@d+2,utoa@n+2
  6192  00326A  C021  F035         	movff	utoa@d+3,utoa@n+3
  6193  00326E  C022  F036         	movff	utoa@d+4,utoa@n+4
  6194  003272  C023  F037         	movff	utoa@d+5,utoa@n+5
  6195  003276  C024  F038         	movff	utoa@d+6,utoa@n+6
  6196  00327A  C025  F039         	movff	utoa@d+7,utoa@n+7
  6197  00327E                     
  6198                           ; BSR set to: 0
  6199                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 607:     i = size
      +                          of(dbuf) - 1;
  6200  00327E  0E00               	movlw	0
  6201  003280  6E3B               	movwf	(utoa@i+1)^0,c
  6202  003282  0E1F               	movlw	31
  6203  003284  6E3A               	movwf	utoa@i^0,c
  6204  003286                     
  6205                           ; BSR set to: 0
  6206                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 608:     dbuf[i] 
      +                          = '\0';
  6207  003286  0E00               	movlw	0
  6208  003288  6FB1               	movwf	(_dbuf+31)& (0+255),b
  6209                           
  6210                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 609:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6211  00328A  EFBE  F019         	goto	l3777
  6212  00328E                     l3767:
  6213  00328E  FFFF               	dw	65535	; assembler added errata NOP
  6214                           
  6215                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 610:         --i;
  6216  003290  063A               	decf	utoa@i^0,f,c
  6217  003292  A0D8               	btfss	status,0,c
  6218  003294  063B               	decf	(utoa@i+1)^0,f,c
  6219  003296                     
  6220                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 611:         dbuf
      +                          [i] = '0' + (n % 10);
  6221  003296  0E92               	movlw	low _dbuf
  6222  003298  243A               	addwf	utoa@i^0,w,c
  6223  00329A  6ED9               	movwf	fsr2l,c
  6224  00329C  0E00               	movlw	high _dbuf
  6225  00329E  203B               	addwfc	(utoa@i+1)^0,w,c
  6226  0032A0  6EDA               	movwf	fsr2h,c
  6227  0032A2  C032  F001         	movff	utoa@n,___lomod@dividend
  6228  0032A6  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  6229  0032AA  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  6230  0032AE  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  6231  0032B2  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  6232  0032B6  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  6233  0032BA  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  6234  0032BE  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  6235  0032C2  0E0A               	movlw	10
  6236  0032C4  6E09               	movwf	___lomod@divisor^0,c
  6237  0032C6  0E00               	movlw	0
  6238  0032C8  6E0A               	movwf	(___lomod@divisor+1)^0,c
  6239  0032CA  0E00               	movlw	0
  6240  0032CC  6E0B               	movwf	(___lomod@divisor+2)^0,c
  6241  0032CE  0E00               	movlw	0
  6242  0032D0  6E0C               	movwf	(___lomod@divisor+3)^0,c
  6243  0032D2  0E00               	movlw	0
  6244  0032D4  6E0D               	movwf	(___lomod@divisor+4)^0,c
  6245  0032D6  0E00               	movlw	0
  6246  0032D8  6E0E               	movwf	(___lomod@divisor+5)^0,c
  6247  0032DA  0E00               	movlw	0
  6248  0032DC  6E0F               	movwf	(___lomod@divisor+6)^0,c
  6249  0032DE  0E00               	movlw	0
  6250  0032E0  6E10               	movwf	(___lomod@divisor+7)^0,c
  6251  0032E2  EC67  F03C         	call	___lomod	;wreg free
  6252  0032E6  C001  F026         	movff	?___lomod,??_utoa
  6253  0032EA  C002  F027         	movff	?___lomod+1,??_utoa+1
  6254  0032EE  C003  F028         	movff	?___lomod+2,??_utoa+2
  6255  0032F2  C004  F029         	movff	?___lomod+3,??_utoa+3
  6256  0032F6  C005  F02A         	movff	?___lomod+4,??_utoa+4
  6257  0032FA  C006  F02B         	movff	?___lomod+5,??_utoa+5
  6258  0032FE  C007  F02C         	movff	?___lomod+6,??_utoa+6
  6259  003302  C008  F02D         	movff	?___lomod+7,??_utoa+7
  6260  003306  5026               	movf	??_utoa^0,w,c
  6261  003308  0F30               	addlw	48
  6262  00330A  6EDF               	movwf	indf2,c
  6263  00330C                     
  6264                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 612:         --p;
  6265  00330C  062E               	decf	utoa@p^0,f,c
  6266  00330E  A0D8               	btfss	status,0,c
  6267  003310  062F               	decf	(utoa@p+1)^0,f,c
  6268  003312                     
  6269                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 613:         --w;
  6270  003312  0630               	decf	utoa@w^0,f,c
  6271  003314  A0D8               	btfss	status,0,c
  6272  003316  0631               	decf	(utoa@w+1)^0,f,c
  6273  003318                     
  6274                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 614:         n = 
      +                          n / 10;
  6275  003318  C032  F001         	movff	utoa@n,___lodiv@dividend
  6276  00331C  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  6277  003320  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  6278  003324  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  6279  003328  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  6280  00332C  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  6281  003330  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  6282  003334  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  6283  003338  0E0A               	movlw	10
  6284  00333A  6E09               	movwf	___lodiv@divisor^0,c
  6285  00333C  0E00               	movlw	0
  6286  00333E  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  6287  003340  0E00               	movlw	0
  6288  003342  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  6289  003344  0E00               	movlw	0
  6290  003346  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  6291  003348  0E00               	movlw	0
  6292  00334A  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  6293  00334C  0E00               	movlw	0
  6294  00334E  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  6295  003350  0E00               	movlw	0
  6296  003352  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  6297  003354  0E00               	movlw	0
  6298  003356  6E10               	movwf	(___lodiv@divisor+7)^0,c
  6299  003358  EC5E  F03E         	call	___lodiv	;wreg free
  6300  00335C  C001  F032         	movff	?___lodiv,utoa@n
  6301  003360  C002  F033         	movff	?___lodiv+1,utoa@n+1
  6302  003364  C003  F034         	movff	?___lodiv+2,utoa@n+2
  6303  003368  C004  F035         	movff	?___lodiv+3,utoa@n+3
  6304  00336C  C005  F036         	movff	?___lodiv+4,utoa@n+4
  6305  003370  C006  F037         	movff	?___lodiv+5,utoa@n+5
  6306  003374  C007  F038         	movff	?___lodiv+6,utoa@n+6
  6307  003378  C008  F039         	movff	?___lodiv+7,utoa@n+7
  6308  00337C                     l3777:
  6309  00337C  FFFF               	dw	65535	; assembler added errata NOP
  6310                           
  6311                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 609:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6312  00337E  503A               	movf	utoa@i^0,w,c
  6313  003380  103B               	iorwf	(utoa@i+1)^0,w,c
  6314  003382  B4D8               	btfsc	status,2,c
  6315  003384  EFC6  F019         	goto	u4091
  6316  003388  EFC9  F019         	goto	u4090
  6317  00338C                     u4091:
  6318  00338C  FFFF               	dw	65535	; assembler added errata NOP
  6319  00338E  EF01  F01A         	goto	l3787
  6320  003392                     u4090:
  6321  003392  FFFF               	dw	65535	; assembler added errata NOP
  6322  003394  5032               	movf	utoa@n^0,w,c
  6323  003396  1033               	iorwf	(utoa@n+1)^0,w,c
  6324  003398  1034               	iorwf	(utoa@n+2)^0,w,c
  6325  00339A  1035               	iorwf	(utoa@n+3)^0,w,c
  6326  00339C  1036               	iorwf	(utoa@n+4)^0,w,c
  6327  00339E  1037               	iorwf	(utoa@n+5)^0,w,c
  6328  0033A0  1038               	iorwf	(utoa@n+6)^0,w,c
  6329  0033A2  1039               	iorwf	(utoa@n+7)^0,w,c
  6330  0033A4  A4D8               	btfss	status,2,c
  6331  0033A6  EFD7  F019         	goto	u4101
  6332  0033AA  EFDA  F019         	goto	u4100
  6333  0033AE                     u4101:
  6334  0033AE  FFFF               	dw	65535	; assembler added errata NOP
  6335  0033B0  EF47  F019         	goto	l3767
  6336  0033B4                     u4100:
  6337  0033B4  FFFF               	dw	65535	; assembler added errata NOP
  6338  0033B6  BE2F               	btfsc	(utoa@p+1)^0,7,c
  6339  0033B8  EFE9  F019         	goto	u4110
  6340  0033BC  502F               	movf	(utoa@p+1)^0,w,c
  6341  0033BE  E106               	bnz	u4111
  6342  0033C0  042E               	decf	utoa@p^0,w,c
  6343  0033C2  B0D8               	btfsc	status,0,c
  6344  0033C4  EFE6  F019         	goto	u4111
  6345  0033C8  EFE9  F019         	goto	u4110
  6346  0033CC                     u4111:
  6347  0033CC  FFFF               	dw	65535	; assembler added errata NOP
  6348  0033CE  EF47  F019         	goto	l3767
  6349  0033D2                     u4110:
  6350  0033D2  FFFF               	dw	65535	; assembler added errata NOP
  6351  0033D4  BE31               	btfsc	(utoa@w+1)^0,7,c
  6352  0033D6  EFF5  F019         	goto	u4121
  6353  0033DA  5031               	movf	(utoa@w+1)^0,w,c
  6354  0033DC  E109               	bnz	u4120
  6355  0033DE  0430               	decf	utoa@w^0,w,c
  6356  0033E0  A0D8               	btfss	status,0,c
  6357  0033E2  EFF5  F019         	goto	u4121
  6358  0033E6  EFF8  F019         	goto	u4120
  6359  0033EA                     u4121:
  6360  0033EA  FFFF               	dw	65535	; assembler added errata NOP
  6361  0033EC  EF01  F01A         	goto	l3787
  6362  0033F0                     u4120:
  6363  0033F0  FFFF               	dw	65535	; assembler added errata NOP
  6364  0033F2  B27D               	btfsc	_flags^0,1,c
  6365  0033F4  EFFE  F019         	goto	u4131
  6366  0033F8  EF01  F01A         	goto	u4130
  6367  0033FC                     u4131:
  6368  0033FC  FFFF               	dw	65535	; assembler added errata NOP
  6369  0033FE  EF47  F019         	goto	l3767
  6370  003402                     u4130:
  6371  003402                     l3787:
  6372  003402  FFFF               	dw	65535	; assembler added errata NOP
  6373                           
  6374                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 618:     return p
      +                          ad(fp, &dbuf[i], w);
  6375  003404  C01C  F011         	movff	utoa@fp,pad@fp
  6376  003408  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  6377  00340C  0E92               	movlw	low _dbuf
  6378  00340E  243A               	addwf	utoa@i^0,w,c
  6379  003410  6E13               	movwf	pad@buf^0,c
  6380  003412  0E00               	movlw	high _dbuf
  6381  003414  203B               	addwfc	(utoa@i+1)^0,w,c
  6382  003416  6E14               	movwf	(pad@buf+1)^0,c
  6383  003418  C030  F015         	movff	utoa@w,pad@p
  6384  00341C  C031  F016         	movff	utoa@w+1,pad@p+1
  6385  003420  ECF6  F03B         	call	_pad	;wreg free
  6386  003424  C011  F01C         	movff	?_pad,?_utoa
  6387  003428  C012  F01D         	movff	?_pad+1,?_utoa+1
  6388  00342C  0012               	return		;funcret
  6389  00342E  FFFF               	dw	65535	; errata NOP
  6390  003430                     __end_of_utoa:
  6391                           	callstack 0
  6392                           
  6393 ;; *************** function ___lomod *****************
  6394 ;; Defined at:
  6395 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lomod.c"
  6396 ;; Parameters:    Size  Location     Type
  6397 ;;  dividend        8    0[COMRAM] unsigned long long 
  6398 ;;  divisor         8    8[COMRAM] unsigned long long 
  6399 ;; Auto vars:     Size  Location     Type
  6400 ;;  counter         1   16[COMRAM] unsigned char 
  6401 ;; Return value:  Size  Location     Type
  6402 ;;                  8    0[COMRAM] unsigned long long 
  6403 ;; Registers used:
  6404 ;;		wreg, status,2, status,0
  6405 ;; Tracked objects:
  6406 ;;		On entry : 0/0
  6407 ;;		On exit  : 0/0
  6408 ;;		Unchanged: 0/0
  6409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6410 ;;      Params:        16       0       0       0       0       0       0
  6411 ;;      Locals:         1       0       0       0       0       0       0
  6412 ;;      Temps:          0       0       0       0       0       0       0
  6413 ;;      Totals:        17       0       0       0       0       0       0
  6414 ;;Total ram usage:       17 bytes
  6415 ;; Hardware stack levels used:    1
  6416 ;; Hardware stack levels required when called:    1
  6417 ;; This function calls:
  6418 ;;		Nothing
  6419 ;; This function is called by:
  6420 ;;		_utoa
  6421 ;; This function uses a non-reentrant model
  6422 ;;
  6423                           
  6424                           	psect	text13
  6425  0078CE                     __ptext13:
  6426                           	callstack 0
  6427  0078CE                     ___lomod:
  6428                           	callstack 0
  6429  0078CE  FFFF               	dw	65535	; assembler added errata NOP
  6430  0078D0  5009               	movf	___lomod@divisor^0,w,c
  6431  0078D2  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  6432  0078D4  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  6433  0078D6  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  6434  0078D8  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  6435  0078DA  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  6436  0078DC  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  6437  0078DE  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  6438  0078E0  B4D8               	btfsc	status,2,c
  6439  0078E2  EF75  F03C         	goto	u3521
  6440  0078E6  EF78  F03C         	goto	u3520
  6441  0078EA                     u3521:
  6442  0078EA  FFFF               	dw	65535	; assembler added errata NOP
  6443  0078EC  EFC9  F03C         	goto	l773
  6444  0078F0                     u3520:
  6445  0078F0  FFFF               	dw	65535	; assembler added errata NOP
  6446  0078F2  0E01               	movlw	1
  6447  0078F4  6E11               	movwf	___lomod@counter^0,c
  6448  0078F6  EF88  F03C         	goto	l3519
  6449  0078FA                     l3517:
  6450  0078FA  FFFF               	dw	65535	; assembler added errata NOP
  6451  0078FC  90D8               	bcf	status,0,c
  6452  0078FE  3609               	rlcf	___lomod@divisor^0,f,c
  6453  007900  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  6454  007902  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  6455  007904  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  6456  007906  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  6457  007908  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  6458  00790A  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  6459  00790C  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  6460  00790E  2A11               	incf	___lomod@counter^0,f,c
  6461  007910                     l3519:
  6462  007910  FFFF               	dw	65535	; assembler added errata NOP
  6463  007912  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  6464  007914  EF8E  F03C         	goto	u3531
  6465  007918  EF91  F03C         	goto	u3530
  6466  00791C                     u3531:
  6467  00791C  FFFF               	dw	65535	; assembler added errata NOP
  6468  00791E  EF7D  F03C         	goto	l3517
  6469  007922                     u3530:
  6470  007922  FFFF               	dw	65535	; assembler added errata NOP
  6471  007924                     l3521:
  6472  007924  FFFF               	dw	65535	; assembler added errata NOP
  6473  007926  5009               	movf	___lomod@divisor^0,w,c
  6474  007928  5C01               	subwf	___lomod@dividend^0,w,c
  6475  00792A  500A               	movf	(___lomod@divisor+1)^0,w,c
  6476  00792C  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  6477  00792E  500B               	movf	(___lomod@divisor+2)^0,w,c
  6478  007930  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  6479  007932  500C               	movf	(___lomod@divisor+3)^0,w,c
  6480  007934  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  6481  007936  500D               	movf	(___lomod@divisor+4)^0,w,c
  6482  007938  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  6483  00793A  500E               	movf	(___lomod@divisor+5)^0,w,c
  6484  00793C  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  6485  00793E  500F               	movf	(___lomod@divisor+6)^0,w,c
  6486  007940  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  6487  007942  5010               	movf	(___lomod@divisor+7)^0,w,c
  6488  007944  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  6489  007946  A0D8               	btfss	status,0,c
  6490  007948  EFA8  F03C         	goto	u3541
  6491  00794C  EFAB  F03C         	goto	u3540
  6492  007950                     u3541:
  6493  007950  FFFF               	dw	65535	; assembler added errata NOP
  6494  007952  EFBC  F03C         	goto	l3525
  6495  007956                     u3540:
  6496  007956  FFFF               	dw	65535	; assembler added errata NOP
  6497  007958  5009               	movf	___lomod@divisor^0,w,c
  6498  00795A  5E01               	subwf	___lomod@dividend^0,f,c
  6499  00795C  500A               	movf	(___lomod@divisor+1)^0,w,c
  6500  00795E  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  6501  007960  500B               	movf	(___lomod@divisor+2)^0,w,c
  6502  007962  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  6503  007964  500C               	movf	(___lomod@divisor+3)^0,w,c
  6504  007966  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  6505  007968  500D               	movf	(___lomod@divisor+4)^0,w,c
  6506  00796A  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  6507  00796C  500E               	movf	(___lomod@divisor+5)^0,w,c
  6508  00796E  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  6509  007970  500F               	movf	(___lomod@divisor+6)^0,w,c
  6510  007972  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  6511  007974  5010               	movf	(___lomod@divisor+7)^0,w,c
  6512  007976  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  6513  007978                     l3525:
  6514  007978  FFFF               	dw	65535	; assembler added errata NOP
  6515  00797A  90D8               	bcf	status,0,c
  6516  00797C  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  6517  00797E  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  6518  007980  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  6519  007982  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  6520  007984  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  6521  007986  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  6522  007988  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  6523  00798A  3209               	rrcf	___lomod@divisor^0,f,c
  6524  00798C  2E11               	decfsz	___lomod@counter^0,f,c
  6525  00798E  EF92  F03C         	goto	l3521
  6526  007992                     l773:
  6527  007992  FFFF               	dw	65535	; assembler added errata NOP
  6528  007994  C001  F001         	movff	___lomod@dividend,?___lomod
  6529  007998  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  6530  00799C  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  6531  0079A0  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  6532  0079A4  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  6533  0079A8  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  6534  0079AC  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  6535  0079B0  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  6536  0079B4  0012               	return		;funcret
  6537  0079B6  FFFF               	dw	65535	; errata NOP
  6538  0079B8                     __end_of___lomod:
  6539                           	callstack 0
  6540                           
  6541 ;; *************** function ___lodiv *****************
  6542 ;; Defined at:
  6543 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lodiv.c"
  6544 ;; Parameters:    Size  Location     Type
  6545 ;;  dividend        8    0[COMRAM] unsigned long long 
  6546 ;;  divisor         8    8[COMRAM] unsigned long long 
  6547 ;; Auto vars:     Size  Location     Type
  6548 ;;  quotient        8   16[COMRAM] unsigned long long 
  6549 ;;  counter         1   24[COMRAM] unsigned char 
  6550 ;; Return value:  Size  Location     Type
  6551 ;;                  8    0[COMRAM] unsigned long long 
  6552 ;; Registers used:
  6553 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6554 ;; Tracked objects:
  6555 ;;		On entry : 0/0
  6556 ;;		On exit  : 0/0
  6557 ;;		Unchanged: 0/0
  6558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6559 ;;      Params:        16       0       0       0       0       0       0
  6560 ;;      Locals:         9       0       0       0       0       0       0
  6561 ;;      Temps:          0       0       0       0       0       0       0
  6562 ;;      Totals:        25       0       0       0       0       0       0
  6563 ;;Total ram usage:       25 bytes
  6564 ;; Hardware stack levels used:    1
  6565 ;; Hardware stack levels required when called:    1
  6566 ;; This function calls:
  6567 ;;		Nothing
  6568 ;; This function is called by:
  6569 ;;		_utoa
  6570 ;; This function uses a non-reentrant model
  6571 ;;
  6572                           
  6573                           	psect	text14
  6574  007CBC                     __ptext14:
  6575                           	callstack 0
  6576  007CBC                     ___lodiv:
  6577                           	callstack 0
  6578  007CBC  FFFF               	dw	65535	; assembler added errata NOP
  6579  007CBE  EE20  F011         	lfsr	2,___lodiv@quotient
  6580  007CC2  0E07               	movlw	7
  6581  007CC4                     u3481:
  6582  007CC4  6ADE               	clrf	postinc2,c
  6583  007CC6  06E8               	decf	wreg,f,c
  6584  007CC8  E2FD               	bc	u3481
  6585  007CCA  5009               	movf	___lodiv@divisor^0,w,c
  6586  007CCC  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  6587  007CCE  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  6588  007CD0  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  6589  007CD2  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  6590  007CD4  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  6591  007CD6  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  6592  007CD8  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  6593  007CDA  B4D8               	btfsc	status,2,c
  6594  007CDC  EF72  F03E         	goto	u3491
  6595  007CE0  EF75  F03E         	goto	u3490
  6596  007CE4                     u3491:
  6597  007CE4  FFFF               	dw	65535	; assembler added errata NOP
  6598  007CE6  EFD0  F03E         	goto	l763
  6599  007CEA                     u3490:
  6600  007CEA  FFFF               	dw	65535	; assembler added errata NOP
  6601  007CEC  0E01               	movlw	1
  6602  007CEE  6E19               	movwf	___lodiv@counter^0,c
  6603  007CF0  EF85  F03E         	goto	l3499
  6604  007CF4                     l3497:
  6605  007CF4  FFFF               	dw	65535	; assembler added errata NOP
  6606  007CF6  90D8               	bcf	status,0,c
  6607  007CF8  3609               	rlcf	___lodiv@divisor^0,f,c
  6608  007CFA  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  6609  007CFC  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  6610  007CFE  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  6611  007D00  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  6612  007D02  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  6613  007D04  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  6614  007D06  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  6615  007D08  2A19               	incf	___lodiv@counter^0,f,c
  6616  007D0A                     l3499:
  6617  007D0A  FFFF               	dw	65535	; assembler added errata NOP
  6618  007D0C  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  6619  007D0E  EF8B  F03E         	goto	u3501
  6620  007D12  EF8E  F03E         	goto	u3500
  6621  007D16                     u3501:
  6622  007D16  FFFF               	dw	65535	; assembler added errata NOP
  6623  007D18  EF7A  F03E         	goto	l3497
  6624  007D1C                     u3500:
  6625  007D1C  FFFF               	dw	65535	; assembler added errata NOP
  6626  007D1E                     l3501:
  6627  007D1E  FFFF               	dw	65535	; assembler added errata NOP
  6628  007D20  90D8               	bcf	status,0,c
  6629  007D22  3611               	rlcf	___lodiv@quotient^0,f,c
  6630  007D24  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  6631  007D26  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  6632  007D28  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  6633  007D2A  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  6634  007D2C  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  6635  007D2E  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  6636  007D30  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  6637  007D32  5009               	movf	___lodiv@divisor^0,w,c
  6638  007D34  5C01               	subwf	___lodiv@dividend^0,w,c
  6639  007D36  500A               	movf	(___lodiv@divisor+1)^0,w,c
  6640  007D38  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  6641  007D3A  500B               	movf	(___lodiv@divisor+2)^0,w,c
  6642  007D3C  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  6643  007D3E  500C               	movf	(___lodiv@divisor+3)^0,w,c
  6644  007D40  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  6645  007D42  500D               	movf	(___lodiv@divisor+4)^0,w,c
  6646  007D44  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  6647  007D46  500E               	movf	(___lodiv@divisor+5)^0,w,c
  6648  007D48  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  6649  007D4A  500F               	movf	(___lodiv@divisor+6)^0,w,c
  6650  007D4C  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  6651  007D4E  5010               	movf	(___lodiv@divisor+7)^0,w,c
  6652  007D50  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  6653  007D52  A0D8               	btfss	status,0,c
  6654  007D54  EFAE  F03E         	goto	u3511
  6655  007D58  EFB1  F03E         	goto	u3510
  6656  007D5C                     u3511:
  6657  007D5C  FFFF               	dw	65535	; assembler added errata NOP
  6658  007D5E  EFC3  F03E         	goto	l3509
  6659  007D62                     u3510:
  6660  007D62  FFFF               	dw	65535	; assembler added errata NOP
  6661  007D64  5009               	movf	___lodiv@divisor^0,w,c
  6662  007D66  5E01               	subwf	___lodiv@dividend^0,f,c
  6663  007D68  500A               	movf	(___lodiv@divisor+1)^0,w,c
  6664  007D6A  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  6665  007D6C  500B               	movf	(___lodiv@divisor+2)^0,w,c
  6666  007D6E  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  6667  007D70  500C               	movf	(___lodiv@divisor+3)^0,w,c
  6668  007D72  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  6669  007D74  500D               	movf	(___lodiv@divisor+4)^0,w,c
  6670  007D76  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  6671  007D78  500E               	movf	(___lodiv@divisor+5)^0,w,c
  6672  007D7A  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  6673  007D7C  500F               	movf	(___lodiv@divisor+6)^0,w,c
  6674  007D7E  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  6675  007D80  5010               	movf	(___lodiv@divisor+7)^0,w,c
  6676  007D82  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  6677  007D84  8011               	bsf	___lodiv@quotient^0,0,c
  6678  007D86                     l3509:
  6679  007D86  FFFF               	dw	65535	; assembler added errata NOP
  6680  007D88  90D8               	bcf	status,0,c
  6681  007D8A  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  6682  007D8C  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  6683  007D8E  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  6684  007D90  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  6685  007D92  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  6686  007D94  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  6687  007D96  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  6688  007D98  3209               	rrcf	___lodiv@divisor^0,f,c
  6689  007D9A  2E19               	decfsz	___lodiv@counter^0,f,c
  6690  007D9C  EF8F  F03E         	goto	l3501
  6691  007DA0                     l763:
  6692  007DA0  FFFF               	dw	65535	; assembler added errata NOP
  6693  007DA2  C011  F001         	movff	___lodiv@quotient,?___lodiv
  6694  007DA6  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  6695  007DAA  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  6696  007DAE  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  6697  007DB2  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  6698  007DB6  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  6699  007DBA  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  6700  007DBE  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  6701  007DC2  0012               	return		;funcret
  6702  007DC4  FFFF               	dw	65535	; errata NOP
  6703  007DC6                     __end_of___lodiv:
  6704                           	callstack 0
  6705                           
  6706 ;; *************** function _strncmp *****************
  6707 ;; Defined at:
  6708 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  6709 ;; Parameters:    Size  Location     Type
  6710 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  6711 ;;		 -> STR_8(3), 
  6712 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  6713 ;;		 -> STR_105(3), STR_101(3), STR_96(3), STR_92(3), 
  6714 ;;		 -> STR_87(4), STR_83(4), STR_78(3), STR_73(3), 
  6715 ;;		 -> STR_68(4), STR_63(3), STR_58(3), STR_53(4), 
  6716 ;;		 -> STR_48(3), STR_43(3), STR_38(4), STR_33(3), 
  6717 ;;		 -> STR_29(3), STR_24(3), STR_20(3), STR_15(4), 
  6718 ;;		 -> STR_11(4), 
  6719 ;;  n               2    4[COMRAM] unsigned int 
  6720 ;; Auto vars:     Size  Location     Type
  6721 ;;  r               2    9[COMRAM] PTR const unsigned char 
  6722 ;;		 -> STR_105(3), STR_101(3), STR_96(3), STR_92(3), 
  6723 ;;		 -> STR_87(4), STR_83(4), STR_78(3), STR_73(3), 
  6724 ;;		 -> STR_68(4), STR_63(3), STR_58(3), STR_53(4), 
  6725 ;;		 -> STR_48(3), STR_43(3), STR_38(4), STR_33(3), 
  6726 ;;		 -> STR_29(3), STR_24(3), STR_20(3), STR_15(4), 
  6727 ;;		 -> STR_11(4), 
  6728 ;;  l               2    7[COMRAM] PTR const unsigned char 
  6729 ;;		 -> STR_8(3), 
  6730 ;; Return value:  Size  Location     Type
  6731 ;;                  2    0[COMRAM] int 
  6732 ;; Registers used:
  6733 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6734 ;; Tracked objects:
  6735 ;;		On entry : 0/0
  6736 ;;		On exit  : 0/0
  6737 ;;		Unchanged: 0/0
  6738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6739 ;;      Params:         6       0       0       0       0       0       0
  6740 ;;      Locals:         4       0       0       0       0       0       0
  6741 ;;      Temps:          1       0       0       0       0       0       0
  6742 ;;      Totals:        11       0       0       0       0       0       0
  6743 ;;Total ram usage:       11 bytes
  6744 ;; Hardware stack levels used:    1
  6745 ;; Hardware stack levels required when called:    1
  6746 ;; This function calls:
  6747 ;;		Nothing
  6748 ;; This function is called by:
  6749 ;;		_vfpfcnvrt
  6750 ;; This function uses a non-reentrant model
  6751 ;;
  6752                           
  6753                           	psect	text15
  6754  007BB4                     __ptext15:
  6755                           	callstack 0
  6756  007BB4                     _strncmp:
  6757                           	callstack 0
  6758  007BB4  FFFF               	dw	65535	; assembler added errata NOP
  6759  007BB6  C001  F008         	movff	strncmp@_l,strncmp@l
  6760  007BBA  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  6761  007BBE  C003  F00A         	movff	strncmp@_r,strncmp@r
  6762  007BC2  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  6763  007BC6  0605               	decf	strncmp@n^0,f,c
  6764  007BC8  A0D8               	btfss	status,0,c
  6765  007BCA  0606               	decf	(strncmp@n+1)^0,f,c
  6766  007BCC  2805               	incf	strncmp@n^0,w,c
  6767  007BCE  E106               	bnz	u4381
  6768  007BD0  2806               	incf	(strncmp@n+1)^0,w,c
  6769  007BD2  A4D8               	btfss	status,2,c
  6770  007BD4  EFEE  F03D         	goto	u4381
  6771  007BD8  EFF1  F03D         	goto	u4380
  6772  007BDC                     u4381:
  6773  007BDC  FFFF               	dw	65535	; assembler added errata NOP
  6774  007BDE  EF00  F03E         	goto	l3907
  6775  007BE2                     u4380:
  6776  007BE2  FFFF               	dw	65535	; assembler added errata NOP
  6777  007BE4  0E00               	movlw	0
  6778  007BE6  6E02               	movwf	(?_strncmp+1)^0,c
  6779  007BE8  0E00               	movlw	0
  6780  007BEA  6E01               	movwf	?_strncmp^0,c
  6781  007BEC  EF5B  F03E         	goto	l1375
  6782  007BF0                     l3905:
  6783  007BF0  FFFF               	dw	65535	; assembler added errata NOP
  6784  007BF2  4A08               	infsnz	strncmp@l^0,f,c
  6785  007BF4  2A09               	incf	(strncmp@l+1)^0,f,c
  6786  007BF6  4A0A               	infsnz	strncmp@r^0,f,c
  6787  007BF8  2A0B               	incf	(strncmp@r+1)^0,f,c
  6788  007BFA  0605               	decf	strncmp@n^0,f,c
  6789  007BFC  A0D8               	btfss	status,0,c
  6790  007BFE  0606               	decf	(strncmp@n+1)^0,f,c
  6791  007C00                     l3907:
  6792  007C00  FFFF               	dw	65535	; assembler added errata NOP
  6793  007C02  C008  FFF6         	movff	strncmp@l,tblptrl
  6794  007C06  C009  FFF7         	movff	strncmp@l+1,tblptrh
  6795  007C0A                     	if	0	;tblptru may be non-zero
  6796  007C0A                     	endif
  6797  007C0A                     	if	0	;tblptru may be non-zero
  6798  007C0A                     	endif
  6799  007C0A  0008               	tblrd		*
  6800  007C0C  FFFF               	dw	65535	; errata NOP
  6801  007C0E  50F5               	movf	tablat,w,c
  6802  007C10  0900               	iorlw	0
  6803  007C12  B4D8               	btfsc	status,2,c
  6804  007C14  EF0E  F03E         	goto	u4391
  6805  007C18  EF11  F03E         	goto	u4390
  6806  007C1C                     u4391:
  6807  007C1C  FFFF               	dw	65535	; assembler added errata NOP
  6808  007C1E  EF46  F03E         	goto	l3915
  6809  007C22                     u4390:
  6810  007C22  FFFF               	dw	65535	; assembler added errata NOP
  6811  007C24  C00A  FFF6         	movff	strncmp@r,tblptrl
  6812  007C28  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  6813  007C2C                     	if	0	;tblptru may be non-zero
  6814  007C2C                     	endif
  6815  007C2C                     	if	0	;tblptru may be non-zero
  6816  007C2C                     	endif
  6817  007C2C  0008               	tblrd		*
  6818  007C2E  FFFF               	dw	65535	; errata NOP
  6819  007C30  50F5               	movf	tablat,w,c
  6820  007C32  0900               	iorlw	0
  6821  007C34  B4D8               	btfsc	status,2,c
  6822  007C36  EF1F  F03E         	goto	u4401
  6823  007C3A  EF22  F03E         	goto	u4400
  6824  007C3E                     u4401:
  6825  007C3E  FFFF               	dw	65535	; assembler added errata NOP
  6826  007C40  EF46  F03E         	goto	l3915
  6827  007C44                     u4400:
  6828  007C44  FFFF               	dw	65535	; assembler added errata NOP
  6829  007C46  5005               	movf	strncmp@n^0,w,c
  6830  007C48  1006               	iorwf	(strncmp@n+1)^0,w,c
  6831  007C4A  B4D8               	btfsc	status,2,c
  6832  007C4C  EF2A  F03E         	goto	u4411
  6833  007C50  EF2D  F03E         	goto	u4410
  6834  007C54                     u4411:
  6835  007C54  FFFF               	dw	65535	; assembler added errata NOP
  6836  007C56  EF46  F03E         	goto	l3915
  6837  007C5A                     u4410:
  6838  007C5A  FFFF               	dw	65535	; assembler added errata NOP
  6839  007C5C  C008  FFF6         	movff	strncmp@l,tblptrl
  6840  007C60  C009  FFF7         	movff	strncmp@l+1,tblptrh
  6841  007C64                     	if	0	;tblptru may be non-zero
  6842  007C64                     	endif
  6843  007C64                     	if	0	;tblptru may be non-zero
  6844  007C64                     	endif
  6845  007C64  0008               	tblrd		*
  6846  007C66  FFFF               	dw	65535	; errata NOP
  6847  007C68  CFF5 F007          	movff	tablat,??_strncmp
  6848  007C6C  C00A  FFF6         	movff	strncmp@r,tblptrl
  6849  007C70  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  6850  007C74                     	if	0	;tblptru may be non-zero
  6851  007C74                     	endif
  6852  007C74                     	if	0	;tblptru may be non-zero
  6853  007C74                     	endif
  6854  007C74  0008               	tblrd		*
  6855  007C76  FFFF               	dw	65535	; errata NOP
  6856  007C78  50F5               	movf	tablat,w,c
  6857  007C7A  1807               	xorwf	??_strncmp^0,w,c
  6858  007C7C  B4D8               	btfsc	status,2,c
  6859  007C7E  EF43  F03E         	goto	u4421
  6860  007C82  EF46  F03E         	goto	u4420
  6861  007C86                     u4421:
  6862  007C86  FFFF               	dw	65535	; assembler added errata NOP
  6863  007C88  EFF8  F03D         	goto	l3905
  6864  007C8C                     u4420:
  6865  007C8C                     l3915:
  6866  007C8C  FFFF               	dw	65535	; assembler added errata NOP
  6867  007C8E  C008  FFF6         	movff	strncmp@l,tblptrl
  6868  007C92  C009  FFF7         	movff	strncmp@l+1,tblptrh
  6869  007C96                     	if	0	;tblptru may be non-zero
  6870  007C96                     	endif
  6871  007C96                     	if	0	;tblptru may be non-zero
  6872  007C96                     	endif
  6873  007C96  0008               	tblrd		*
  6874  007C98  FFFF               	dw	65535	; errata NOP
  6875  007C9A  CFF5 F007          	movff	tablat,??_strncmp
  6876  007C9E  C00A  FFF6         	movff	strncmp@r,tblptrl
  6877  007CA2  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  6878  007CA6                     	if	0	;tblptru may be non-zero
  6879  007CA6                     	endif
  6880  007CA6                     	if	0	;tblptru may be non-zero
  6881  007CA6                     	endif
  6882  007CA6  0008               	tblrd		*
  6883  007CA8  FFFF               	dw	65535	; errata NOP
  6884  007CAA  50F5               	movf	tablat,w,c
  6885  007CAC  5C07               	subwf	??_strncmp^0,w,c
  6886  007CAE  6E01               	movwf	?_strncmp^0,c
  6887  007CB0  6A02               	clrf	(?_strncmp+1)^0,c
  6888  007CB2  A0D8               	btfss	status,0,c
  6889  007CB4  0602               	decf	(?_strncmp+1)^0,f,c
  6890  007CB6                     l1375:
  6891  007CB6  FFFF               	dw	65535	; assembler added errata NOP
  6892  007CB8  0012               	return		;funcret
  6893  007CBA  FFFF               	dw	65535	; errata NOP
  6894  007CBC                     __end_of_strncmp:
  6895                           	callstack 0
  6896                           
  6897 ;; *************** function _stoa *****************
  6898 ;; Defined at:
  6899 ;;		line 546 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6900 ;; Parameters:    Size  Location     Type
  6901 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  6902 ;;		 -> vsnprintf@f(6), 
  6903 ;;  s               2   11[COMRAM] PTR unsigned char 
  6904 ;;		 -> ?_snprintf(2), STR_6(7), STR_5(9), STR_4(39), 
  6905 ;;		 -> STR_3(9), STR_2(64), STR_1(49), 
  6906 ;; Auto vars:     Size  Location     Type
  6907 ;;  nuls            7   14[COMRAM] unsigned char [7]
  6908 ;;  l               2   29[COMRAM] int 
  6909 ;;  p               2   27[COMRAM] int 
  6910 ;;  cp              2   25[COMRAM] PTR unsigned char 
  6911 ;;		 -> stoa@nuls(7), ?_snprintf(2), STR_6(7), STR_5(9), 
  6912 ;;		 -> STR_4(39), STR_3(9), STR_2(64), STR_1(49), 
  6913 ;;  w               2   23[COMRAM] int 
  6914 ;;  i               2   21[COMRAM] int 
  6915 ;; Return value:  Size  Location     Type
  6916 ;;                  2    9[COMRAM] int 
  6917 ;; Registers used:
  6918 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6919 ;; Tracked objects:
  6920 ;;		On entry : 0/0
  6921 ;;		On exit  : 0/0
  6922 ;;		Unchanged: 0/0
  6923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6924 ;;      Params:         4       0       0       0       0       0       0
  6925 ;;      Locals:        17       0       0       0       0       0       0
  6926 ;;      Temps:          1       0       0       0       0       0       0
  6927 ;;      Totals:        22       0       0       0       0       0       0
  6928 ;;Total ram usage:       22 bytes
  6929 ;; Hardware stack levels used:    1
  6930 ;; Hardware stack levels required when called:    3
  6931 ;; This function calls:
  6932 ;;		_fputc
  6933 ;;		_strlen
  6934 ;; This function is called by:
  6935 ;;		_vfpfcnvrt
  6936 ;; This function uses a non-reentrant model
  6937 ;;
  6938                           
  6939                           	psect	text16
  6940  003652                     __ptext16:
  6941                           	callstack 0
  6942  003652                     _stoa:
  6943                           	callstack 0
  6944  003652  FFFF               	dw	65535	; assembler added errata NOP
  6945  003654                     
  6946                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 546: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 547: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 548:  
      +                             char *cp, nuls[] = "(null)";
  6947  003654  EE20  F0C8         	lfsr	2,stoa@F1152
  6948  003658  EE10  F00F         	lfsr	1,stoa@nuls
  6949  00365C  0E06               	movlw	6
  6950  00365E                     u3971:
  6951  00365E  CFDB FFE3          	movff	plusw2,plusw1
  6952  003662  06E8               	decf	wreg,f,c
  6953  003664  E2FC               	bc	u3971
  6954  003666                     
  6955                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 549:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 552:     c
      +                          p = s;
  6956  003666  C00C  F01A         	movff	stoa@s,stoa@cp
  6957  00366A  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  6958  00366E                     
  6959                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 553:     if (!cp)
      +                           {
  6960  00366E  501A               	movf	stoa@cp^0,w,c
  6961  003670  101B               	iorwf	(stoa@cp+1)^0,w,c
  6962  003672  A4D8               	btfss	status,2,c
  6963  003674  EF3E  F01B         	goto	u3981
  6964  003678  EF41  F01B         	goto	u3980
  6965  00367C                     u3981:
  6966  00367C  FFFF               	dw	65535	; assembler added errata NOP
  6967  00367E  EF46  F01B         	goto	l3721
  6968  003682                     u3980:
  6969  003682  FFFF               	dw	65535	; assembler added errata NOP
  6970  003684                     
  6971                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 554:         cp =
      +                           nuls;
  6972  003684  0E0F               	movlw	low stoa@nuls
  6973  003686  6E1A               	movwf	stoa@cp^0,c
  6974  003688  0E00               	movlw	high stoa@nuls
  6975  00368A  6E1B               	movwf	(stoa@cp+1)^0,c
  6976  00368C                     l3721:
  6977  00368C  FFFF               	dw	65535	; assembler added errata NOP
  6978                           
  6979                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 558:     l = strl
      +                          en(cp);
  6980  00368E  C01A  F001         	movff	stoa@cp,strlen@s
  6981  003692  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  6982  003696  ECD2  F01F         	call	_strlen	;wreg free
  6983  00369A  C001  F01E         	movff	?_strlen,stoa@l
  6984  00369E  C002  F01F         	movff	?_strlen+1,stoa@l+1
  6985  0036A2                     
  6986                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 559:     p = prec
      +                          ;
  6987  0036A2  C088  F01C         	movff	_prec,stoa@p
  6988  0036A6  C089  F01D         	movff	_prec+1,stoa@p+1
  6989  0036AA                     
  6990                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 560:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  6991  0036AA  BE1D               	btfsc	(stoa@p+1)^0,7,c
  6992  0036AC  EF5A  F01B         	goto	u3991
  6993  0036B0  EF5D  F01B         	goto	u3990
  6994  0036B4                     u3991:
  6995  0036B4  FFFF               	dw	65535	; assembler added errata NOP
  6996  0036B6  EF76  F01B         	goto	l1135
  6997  0036BA                     u3990:
  6998  0036BA  FFFF               	dw	65535	; assembler added errata NOP
  6999  0036BC  501E               	movf	stoa@l^0,w,c
  7000  0036BE  5C1C               	subwf	stoa@p^0,w,c
  7001  0036C0  501D               	movf	(stoa@p+1)^0,w,c
  7002  0036C2  0A80               	xorlw	128
  7003  0036C4  6E0E               	movwf	??_stoa^0,c
  7004  0036C6  501F               	movf	(stoa@l+1)^0,w,c
  7005  0036C8  0A80               	xorlw	128
  7006  0036CA  580E               	subwfb	??_stoa^0,w,c
  7007  0036CC  A0D8               	btfss	status,0,c
  7008  0036CE  EF6B  F01B         	goto	u4001
  7009  0036D2  EF6E  F01B         	goto	u4000
  7010  0036D6                     u4001:
  7011  0036D6  FFFF               	dw	65535	; assembler added errata NOP
  7012  0036D8  EF71  F01B         	goto	l1133
  7013  0036DC                     u4000:
  7014  0036DC  FFFF               	dw	65535	; assembler added errata NOP
  7015  0036DE  EF76  F01B         	goto	l1135
  7016  0036E2                     l1133:
  7017  0036E2  FFFF               	dw	65535	; assembler added errata NOP
  7018  0036E4  C01C  F01E         	movff	stoa@p,stoa@l
  7019  0036E8  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  7020  0036EC                     l1135:
  7021  0036EC  FFFF               	dw	65535	; assembler added errata NOP
  7022                           
  7023                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 561:     p = l;
  7024  0036EE  C01E  F01C         	movff	stoa@l,stoa@p
  7025  0036F2  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  7026                           
  7027                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 562:     w = widt
      +                          h;
  7028  0036F6  C086  F018         	movff	_width,stoa@w
  7029  0036FA  C087  F019         	movff	_width+1,stoa@w+1
  7030                           
  7031                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 565:     if (!(fl
      +                          ags & (1 << 0))) {
  7032  0036FE  B07D               	btfsc	_flags^0,0,c
  7033  003700  EF84  F01B         	goto	u4011
  7034  003704  EF87  F01B         	goto	u4010
  7035  003708                     u4011:
  7036  003708  FFFF               	dw	65535	; assembler added errata NOP
  7037  00370A  EFA8  F01B         	goto	l3737
  7038  00370E                     u4010:
  7039  00370E  FFFF               	dw	65535	; assembler added errata NOP
  7040  003710  EF97  F01B         	goto	l3735
  7041  003714                     l3731:
  7042  003714  FFFF               	dw	65535	; assembler added errata NOP
  7043                           
  7044                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 567:             
      +                          fputc(' ', fp);
  7045  003716  0E00               	movlw	0
  7046  003718  6E02               	movwf	(fputc@c+1)^0,c
  7047  00371A  0E20               	movlw	32
  7048  00371C  6E01               	movwf	fputc@c^0,c
  7049  00371E  C00A  F003         	movff	stoa@fp,fputc@fp
  7050  003722  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  7051  003726  EC85  F03B         	call	_fputc	;wreg free
  7052  00372A                     
  7053                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 568:             
      +                          ++l;
  7054  00372A  4A1E               	infsnz	stoa@l^0,f,c
  7055  00372C  2A1F               	incf	(stoa@l+1)^0,f,c
  7056  00372E                     l3735:
  7057  00372E  FFFF               	dw	65535	; assembler added errata NOP
  7058                           
  7059                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 566:         whil
      +                          e (l < w) {
  7060  003730  5018               	movf	stoa@w^0,w,c
  7061  003732  5C1E               	subwf	stoa@l^0,w,c
  7062  003734  501F               	movf	(stoa@l+1)^0,w,c
  7063  003736  0A80               	xorlw	128
  7064  003738  6E0E               	movwf	??_stoa^0,c
  7065  00373A  5019               	movf	(stoa@w+1)^0,w,c
  7066  00373C  0A80               	xorlw	128
  7067  00373E  580E               	subwfb	??_stoa^0,w,c
  7068  003740  A0D8               	btfss	status,0,c
  7069  003742  EFA5  F01B         	goto	u4021
  7070  003746  EFA8  F01B         	goto	u4020
  7071  00374A                     u4021:
  7072  00374A  FFFF               	dw	65535	; assembler added errata NOP
  7073  00374C  EF8A  F01B         	goto	l3731
  7074  003750                     u4020:
  7075  003750                     l3737:
  7076  003750  FFFF               	dw	65535	; assembler added errata NOP
  7077                           
  7078                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 573:     i = 0;
  7079  003752  0E00               	movlw	0
  7080  003754  6E17               	movwf	(stoa@i+1)^0,c
  7081  003756  0E00               	movlw	0
  7082  003758  6E16               	movwf	stoa@i^0,c
  7083                           
  7084                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 574:     while (i
      +                           < p) {
  7085  00375A  EFCF  F01B         	goto	l3745
  7086  00375E                     l3739:
  7087  00375E  FFFF               	dw	65535	; assembler added errata NOP
  7088                           
  7089                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 575:         fput
      +                          c(*cp, fp);
  7090  003760  C01A  FFF6         	movff	stoa@cp,tblptrl
  7091  003764  C01B  FFF7         	movff	stoa@cp+1,tblptrh
  7092  003768  6AF8               	clrf	tblptru,c
  7093  00376A  0E05               	movlw	(high __ramtop+-1)
  7094  00376C  64F7               	cpfsgt	tblptrh,c
  7095  00376E  D004               	bra	u4037
  7096  003770  0008               	tblrd		*
  7097  003772  FFFF               	dw	65535	; errata NOP
  7098  003774  50F5               	movf	tablat,w,c
  7099  003776  D005               	bra	u4030
  7100  003778                     u4037:
  7101  003778  CFF6 FFE1          	movff	tblptrl,fsr1l
  7102  00377C  CFF7 FFE2          	movff	tblptrh,fsr1h
  7103  003780  50E7               	movf	indf1,w,c
  7104  003782                     u4030:
  7105  003782  6E0E               	movwf	??_stoa^0,c
  7106  003784  500E               	movf	??_stoa^0,w,c
  7107  003786  6E01               	movwf	fputc@c^0,c
  7108  003788  6A02               	clrf	(fputc@c+1)^0,c
  7109  00378A  C00A  F003         	movff	stoa@fp,fputc@fp
  7110  00378E  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  7111  003792  EC85  F03B         	call	_fputc	;wreg free
  7112  003796                     
  7113                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 576:         ++cp
      +                          ;
  7114  003796  4A1A               	infsnz	stoa@cp^0,f,c
  7115  003798  2A1B               	incf	(stoa@cp+1)^0,f,c
  7116  00379A                     
  7117                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 577:         ++i;
  7118  00379A  4A16               	infsnz	stoa@i^0,f,c
  7119  00379C  2A17               	incf	(stoa@i+1)^0,f,c
  7120  00379E                     l3745:
  7121  00379E  FFFF               	dw	65535	; assembler added errata NOP
  7122                           
  7123                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 574:     while (i
      +                           < p) {
  7124  0037A0  501C               	movf	stoa@p^0,w,c
  7125  0037A2  5C16               	subwf	stoa@i^0,w,c
  7126  0037A4  5017               	movf	(stoa@i+1)^0,w,c
  7127  0037A6  0A80               	xorlw	128
  7128  0037A8  6E0E               	movwf	??_stoa^0,c
  7129  0037AA  501D               	movf	(stoa@p+1)^0,w,c
  7130  0037AC  0A80               	xorlw	128
  7131  0037AE  580E               	subwfb	??_stoa^0,w,c
  7132  0037B0  A0D8               	btfss	status,0,c
  7133  0037B2  EFDD  F01B         	goto	u4041
  7134  0037B6  EFE0  F01B         	goto	u4040
  7135  0037BA                     u4041:
  7136  0037BA  FFFF               	dw	65535	; assembler added errata NOP
  7137  0037BC  EFAF  F01B         	goto	l3739
  7138  0037C0                     u4040:
  7139  0037C0  FFFF               	dw	65535	; assembler added errata NOP
  7140  0037C2                     
  7141                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 581:     if (flag
      +                          s & (1 << 0)) {
  7142  0037C2  A07D               	btfss	_flags^0,0,c
  7143  0037C4  EFE6  F01B         	goto	u4051
  7144  0037C8  EFE9  F01B         	goto	u4050
  7145  0037CC                     u4051:
  7146  0037CC  FFFF               	dw	65535	; assembler added errata NOP
  7147  0037CE  EF0A  F01C         	goto	l1145
  7148  0037D2                     u4050:
  7149  0037D2  FFFF               	dw	65535	; assembler added errata NOP
  7150  0037D4  EFF9  F01B         	goto	l3753
  7151  0037D8                     l3749:
  7152  0037D8  FFFF               	dw	65535	; assembler added errata NOP
  7153                           
  7154                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 583:             
      +                          fputc(' ', fp);
  7155  0037DA  0E00               	movlw	0
  7156  0037DC  6E02               	movwf	(fputc@c+1)^0,c
  7157  0037DE  0E20               	movlw	32
  7158  0037E0  6E01               	movwf	fputc@c^0,c
  7159  0037E2  C00A  F003         	movff	stoa@fp,fputc@fp
  7160  0037E6  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  7161  0037EA  EC85  F03B         	call	_fputc	;wreg free
  7162  0037EE                     
  7163                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 584:             
      +                          ++l;
  7164  0037EE  4A1E               	infsnz	stoa@l^0,f,c
  7165  0037F0  2A1F               	incf	(stoa@l+1)^0,f,c
  7166  0037F2                     l3753:
  7167  0037F2  FFFF               	dw	65535	; assembler added errata NOP
  7168                           
  7169                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 582:         whil
      +                          e (l < w) {
  7170  0037F4  5018               	movf	stoa@w^0,w,c
  7171  0037F6  5C1E               	subwf	stoa@l^0,w,c
  7172  0037F8  501F               	movf	(stoa@l+1)^0,w,c
  7173  0037FA  0A80               	xorlw	128
  7174  0037FC  6E0E               	movwf	??_stoa^0,c
  7175  0037FE  5019               	movf	(stoa@w+1)^0,w,c
  7176  003800  0A80               	xorlw	128
  7177  003802  580E               	subwfb	??_stoa^0,w,c
  7178  003804  A0D8               	btfss	status,0,c
  7179  003806  EF07  F01C         	goto	u4061
  7180  00380A  EF0A  F01C         	goto	u4060
  7181  00380E                     u4061:
  7182  00380E  FFFF               	dw	65535	; assembler added errata NOP
  7183  003810  EFEC  F01B         	goto	l3749
  7184  003814                     u4060:
  7185  003814                     l1145:
  7186  003814  FFFF               	dw	65535	; assembler added errata NOP
  7187                           
  7188                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 588:     return l
      +                          ;
  7189  003816  C01E  F00A         	movff	stoa@l,?_stoa
  7190  00381A  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  7191  00381E  0012               	return		;funcret
  7192  003820  FFFF               	dw	65535	; errata NOP
  7193  003822                     __end_of_stoa:
  7194                           	callstack 0
  7195                           
  7196 ;; *************** function _otoa *****************
  7197 ;; Defined at:
  7198 ;;		line 507 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7199 ;; Parameters:    Size  Location     Type
  7200 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7201 ;;		 -> vsnprintf@f(6), 
  7202 ;;  d               8   29[COMRAM] unsigned long long 
  7203 ;; Auto vars:     Size  Location     Type
  7204 ;;  n               8   51[COMRAM] unsigned long long 
  7205 ;;  i               2   59[COMRAM] int 
  7206 ;;  w               2   49[COMRAM] int 
  7207 ;;  t               2   47[COMRAM] int 
  7208 ;;  p               2   45[COMRAM] int 
  7209 ;; Return value:  Size  Location     Type
  7210 ;;                  2   27[COMRAM] int 
  7211 ;; Registers used:
  7212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7213 ;; Tracked objects:
  7214 ;;		On entry : 0/0
  7215 ;;		On exit  : 0/0
  7216 ;;		Unchanged: 0/0
  7217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7218 ;;      Params:        10       0       0       0       0       0       0
  7219 ;;      Locals:        16       0       0       0       0       0       0
  7220 ;;      Temps:          8       0       0       0       0       0       0
  7221 ;;      Totals:        34       0       0       0       0       0       0
  7222 ;;Total ram usage:       34 bytes
  7223 ;; Hardware stack levels used:    1
  7224 ;; Hardware stack levels required when called:    5
  7225 ;; This function calls:
  7226 ;;		_pad
  7227 ;; This function is called by:
  7228 ;;		_vfpfcnvrt
  7229 ;; This function uses a non-reentrant model
  7230 ;;
  7231                           
  7232                           	psect	text17
  7233  003430                     __ptext17:
  7234                           	callstack 0
  7235  003430                     _otoa:
  7236                           	callstack 0
  7237  003430  FFFF               	dw	65535	; assembler added errata NOP
  7238  003432                     
  7239                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 507: static int o
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99
      +                          \common\doprnt.c: 508: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\dop
      +                          rnt.c: 509:     int i, p, t, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\com
      +                          mon\doprnt.c: 510:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\so
      +                          urces\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  7240  003432  0100               	movlb	0	; () banked
  7241  003434  BF89               	btfsc	(_prec+1)& (0+255),7,b
  7242  003436  EF1F  F01A         	goto	u3871
  7243  00343A  EF22  F01A         	goto	u3870
  7244  00343E                     u3871:
  7245  00343E  FFFF               	dw	65535	; assembler added errata NOP
  7246  003440  EF24  F01A         	goto	l3669
  7247  003444                     u3870:
  7248  003444  FFFF               	dw	65535	; assembler added errata NOP
  7249  003446                     
  7250                           ; BSR set to: 0
  7251                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 514:         flag
      +                          s &= ~(1 << 1);
  7252  003446  927D               	bcf	_flags^0,1,c
  7253  003448                     l3669:
  7254  003448  FFFF               	dw	65535	; assembler added errata NOP
  7255                           
  7256                           ; BSR set to: 0
  7257                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 516:     p = (0 <
      +                           prec) ? prec : 1;
  7258  00344A  BF89               	btfsc	(_prec+1)& (0+255),7,b
  7259  00344C  EF33  F01A         	goto	u3880
  7260  003450  5189               	movf	(_prec+1)& (0+255),w,b
  7261  003452  E106               	bnz	u3881
  7262  003454  0588               	decf	_prec& (0+255),w,b
  7263  003456  B0D8               	btfsc	status,0,c
  7264  003458  EF30  F01A         	goto	u3881
  7265  00345C  EF33  F01A         	goto	u3880
  7266  003460                     u3881:
  7267  003460  FFFF               	dw	65535	; assembler added errata NOP
  7268  003462  EF3A  F01A         	goto	l1115
  7269  003466                     u3880:
  7270  003466  FFFF               	dw	65535	; assembler added errata NOP
  7271  003468                     
  7272                           ; BSR set to: 0
  7273  003468  0E00               	movlw	0
  7274  00346A  6E2F               	movwf	(otoa@p+1)^0,c
  7275  00346C  0E01               	movlw	1
  7276  00346E  6E2E               	movwf	otoa@p^0,c
  7277  003470  EF3F  F01A         	goto	l1117
  7278  003474                     l1115:
  7279  003474  FFFF               	dw	65535	; assembler added errata NOP
  7280                           
  7281                           ; BSR set to: 0
  7282  003476  C088  F02E         	movff	_prec,otoa@p
  7283  00347A  C089  F02F         	movff	_prec+1,otoa@p+1
  7284  00347E                     l1117:
  7285  00347E  FFFF               	dw	65535	; assembler added errata NOP
  7286                           
  7287                           ; BSR set to: 0
  7288                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 517:     w = widt
      +                          h;
  7289  003480  C086  F032         	movff	_width,otoa@w
  7290  003484  C087  F033         	movff	_width+1,otoa@w+1
  7291                           
  7292                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 520:     n = d;
  7293  003488  C01E  F034         	movff	otoa@d,otoa@n
  7294  00348C  C01F  F035         	movff	otoa@d+1,otoa@n+1
  7295  003490  C020  F036         	movff	otoa@d+2,otoa@n+2
  7296  003494  C021  F037         	movff	otoa@d+3,otoa@n+3
  7297  003498  C022  F038         	movff	otoa@d+4,otoa@n+4
  7298  00349C  C023  F039         	movff	otoa@d+5,otoa@n+5
  7299  0034A0  C024  F03A         	movff	otoa@d+6,otoa@n+6
  7300  0034A4  C025  F03B         	movff	otoa@d+7,otoa@n+7
  7301  0034A8                     
  7302                           ; BSR set to: 0
  7303                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 521:     i = size
      +                          of(dbuf) - 1;
  7304  0034A8  0E00               	movlw	0
  7305  0034AA  6E3D               	movwf	(otoa@i+1)^0,c
  7306  0034AC  0E1F               	movlw	31
  7307  0034AE  6E3C               	movwf	otoa@i^0,c
  7308  0034B0                     
  7309                           ; BSR set to: 0
  7310                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 522:     dbuf[i] 
      +                          = '\0';
  7311  0034B0  0E00               	movlw	0
  7312  0034B2  6FB1               	movwf	(_dbuf+31)& (0+255),b
  7313  0034B4                     
  7314                           ; BSR set to: 0
  7315                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 523:     t = 0;
  7316  0034B4  0E00               	movlw	0
  7317  0034B6  6E31               	movwf	(otoa@t+1)^0,c
  7318  0034B8  0E00               	movlw	0
  7319  0034BA  6E30               	movwf	otoa@t^0,c
  7320                           
  7321                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 524:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7322  0034BC  EFA8  F01A         	goto	l3691
  7323  0034C0                     l3679:
  7324  0034C0  FFFF               	dw	65535	; assembler added errata NOP
  7325                           
  7326                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 525:         --i;
  7327  0034C2  063C               	decf	otoa@i^0,f,c
  7328  0034C4  A0D8               	btfss	status,0,c
  7329  0034C6  063D               	decf	(otoa@i+1)^0,f,c
  7330  0034C8                     
  7331                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 526:         t = 
      +                          n & 07;
  7332  0034C8  0E07               	movlw	7
  7333  0034CA  1434               	andwf	otoa@n^0,w,c
  7334  0034CC  6E30               	movwf	otoa@t^0,c
  7335  0034CE  6A31               	clrf	(otoa@t+1)^0,c
  7336  0034D0                     
  7337                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 527:         dbuf
      +                          [i] = '0' + t;
  7338  0034D0  0E92               	movlw	low _dbuf
  7339  0034D2  243C               	addwf	otoa@i^0,w,c
  7340  0034D4  6ED9               	movwf	fsr2l,c
  7341  0034D6  0E00               	movlw	high _dbuf
  7342  0034D8  203D               	addwfc	(otoa@i+1)^0,w,c
  7343  0034DA  6EDA               	movwf	fsr2h,c
  7344  0034DC  5030               	movf	otoa@t^0,w,c
  7345  0034DE  0F30               	addlw	48
  7346  0034E0  6EDF               	movwf	indf2,c
  7347  0034E2                     
  7348                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 528:         --p;
  7349  0034E2  062E               	decf	otoa@p^0,f,c
  7350  0034E4  A0D8               	btfss	status,0,c
  7351  0034E6  062F               	decf	(otoa@p+1)^0,f,c
  7352  0034E8                     
  7353                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 529:         --w;
  7354  0034E8  0632               	decf	otoa@w^0,f,c
  7355  0034EA  A0D8               	btfss	status,0,c
  7356  0034EC  0633               	decf	(otoa@w+1)^0,f,c
  7357  0034EE                     
  7358                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 530:         n = 
      +                          n >> 3;
  7359  0034EE  C034  F026         	movff	otoa@n,??_otoa
  7360  0034F2  C035  F027         	movff	otoa@n+1,??_otoa+1
  7361  0034F6  C036  F028         	movff	otoa@n+2,??_otoa+2
  7362  0034FA  C037  F029         	movff	otoa@n+3,??_otoa+3
  7363  0034FE  C038  F02A         	movff	otoa@n+4,??_otoa+4
  7364  003502  C039  F02B         	movff	otoa@n+5,??_otoa+5
  7365  003506  C03A  F02C         	movff	otoa@n+6,??_otoa+6
  7366  00350A  C03B  F02D         	movff	otoa@n+7,??_otoa+7
  7367  00350E  0E04               	movlw	4
  7368  003510  EF94  F01A         	goto	u3890
  7369  003514                     u3895:
  7370  003514  FFFF               	dw	65535	; assembler added errata NOP
  7371  003516  90D8               	bcf	status,0,c
  7372  003518  322D               	rrcf	(??_otoa+7)^0,f,c
  7373  00351A  322C               	rrcf	(??_otoa+6)^0,f,c
  7374  00351C  322B               	rrcf	(??_otoa+5)^0,f,c
  7375  00351E  322A               	rrcf	(??_otoa+4)^0,f,c
  7376  003520  3229               	rrcf	(??_otoa+3)^0,f,c
  7377  003522  3228               	rrcf	(??_otoa+2)^0,f,c
  7378  003524  3227               	rrcf	(??_otoa+1)^0,f,c
  7379  003526  3226               	rrcf	??_otoa^0,f,c
  7380  003528                     u3890:
  7381  003528  FFFF               	dw	65535	; assembler added errata NOP
  7382  00352A  2EE8               	decfsz	wreg,f,c
  7383  00352C  EF8A  F01A         	goto	u3895
  7384  003530  C026  F034         	movff	??_otoa,otoa@n
  7385  003534  C027  F035         	movff	??_otoa+1,otoa@n+1
  7386  003538  C028  F036         	movff	??_otoa+2,otoa@n+2
  7387  00353C  C029  F037         	movff	??_otoa+3,otoa@n+3
  7388  003540  C02A  F038         	movff	??_otoa+4,otoa@n+4
  7389  003544  C02B  F039         	movff	??_otoa+5,otoa@n+5
  7390  003548  C02C  F03A         	movff	??_otoa+6,otoa@n+6
  7391  00354C  C02D  F03B         	movff	??_otoa+7,otoa@n+7
  7392  003550                     l3691:
  7393  003550  FFFF               	dw	65535	; assembler added errata NOP
  7394                           
  7395                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 524:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7396  003552  BE3D               	btfsc	(otoa@i+1)^0,7,c
  7397  003554  EFB4  F01A         	goto	u3901
  7398  003558  503D               	movf	(otoa@i+1)^0,w,c
  7399  00355A  E109               	bnz	u3900
  7400  00355C  043C               	decf	otoa@i^0,w,c
  7401  00355E  A0D8               	btfss	status,0,c
  7402  003560  EFB4  F01A         	goto	u3901
  7403  003564  EFB7  F01A         	goto	u3900
  7404  003568                     u3901:
  7405  003568  FFFF               	dw	65535	; assembler added errata NOP
  7406  00356A  EFEF  F01A         	goto	l1124
  7407  00356E                     u3900:
  7408  00356E  FFFF               	dw	65535	; assembler added errata NOP
  7409  003570  5034               	movf	otoa@n^0,w,c
  7410  003572  1035               	iorwf	(otoa@n+1)^0,w,c
  7411  003574  1036               	iorwf	(otoa@n+2)^0,w,c
  7412  003576  1037               	iorwf	(otoa@n+3)^0,w,c
  7413  003578  1038               	iorwf	(otoa@n+4)^0,w,c
  7414  00357A  1039               	iorwf	(otoa@n+5)^0,w,c
  7415  00357C  103A               	iorwf	(otoa@n+6)^0,w,c
  7416  00357E  103B               	iorwf	(otoa@n+7)^0,w,c
  7417  003580  A4D8               	btfss	status,2,c
  7418  003582  EFC5  F01A         	goto	u3911
  7419  003586  EFC8  F01A         	goto	u3910
  7420  00358A                     u3911:
  7421  00358A  FFFF               	dw	65535	; assembler added errata NOP
  7422  00358C  EF60  F01A         	goto	l3679
  7423  003590                     u3910:
  7424  003590  FFFF               	dw	65535	; assembler added errata NOP
  7425  003592  BE2F               	btfsc	(otoa@p+1)^0,7,c
  7426  003594  EFD7  F01A         	goto	u3920
  7427  003598  502F               	movf	(otoa@p+1)^0,w,c
  7428  00359A  E106               	bnz	u3921
  7429  00359C  042E               	decf	otoa@p^0,w,c
  7430  00359E  B0D8               	btfsc	status,0,c
  7431  0035A0  EFD4  F01A         	goto	u3921
  7432  0035A4  EFD7  F01A         	goto	u3920
  7433  0035A8                     u3921:
  7434  0035A8  FFFF               	dw	65535	; assembler added errata NOP
  7435  0035AA  EF60  F01A         	goto	l3679
  7436  0035AE                     u3920:
  7437  0035AE  FFFF               	dw	65535	; assembler added errata NOP
  7438  0035B0  BE33               	btfsc	(otoa@w+1)^0,7,c
  7439  0035B2  EFE3  F01A         	goto	u3931
  7440  0035B6  5033               	movf	(otoa@w+1)^0,w,c
  7441  0035B8  E109               	bnz	u3930
  7442  0035BA  0432               	decf	otoa@w^0,w,c
  7443  0035BC  A0D8               	btfss	status,0,c
  7444  0035BE  EFE3  F01A         	goto	u3931
  7445  0035C2  EFE6  F01A         	goto	u3930
  7446  0035C6                     u3931:
  7447  0035C6  FFFF               	dw	65535	; assembler added errata NOP
  7448  0035C8  EFEF  F01A         	goto	l1124
  7449  0035CC                     u3930:
  7450  0035CC  FFFF               	dw	65535	; assembler added errata NOP
  7451  0035CE  B27D               	btfsc	_flags^0,1,c
  7452  0035D0  EFEC  F01A         	goto	u3941
  7453  0035D4  EFEF  F01A         	goto	u3940
  7454  0035D8                     u3941:
  7455  0035D8  FFFF               	dw	65535	; assembler added errata NOP
  7456  0035DA  EF60  F01A         	goto	l3679
  7457  0035DE                     u3940:
  7458  0035DE                     l1124:
  7459  0035DE  FFFF               	dw	65535	; assembler added errata NOP
  7460                           
  7461                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 534:     if ((fla
      +                          gs & (1 << 4)) && t) {
  7462  0035E0  A87D               	btfss	_flags^0,4,c
  7463  0035E2  EFF5  F01A         	goto	u3951
  7464  0035E6  EFF8  F01A         	goto	u3950
  7465  0035EA                     u3951:
  7466  0035EA  FFFF               	dw	65535	; assembler added errata NOP
  7467  0035EC  EF12  F01B         	goto	l3709
  7468  0035F0                     u3950:
  7469  0035F0  FFFF               	dw	65535	; assembler added errata NOP
  7470  0035F2  5030               	movf	otoa@t^0,w,c
  7471  0035F4  1031               	iorwf	(otoa@t+1)^0,w,c
  7472  0035F6  B4D8               	btfsc	status,2,c
  7473  0035F8  EF00  F01B         	goto	u3961
  7474  0035FC  EF03  F01B         	goto	u3960
  7475  003600                     u3961:
  7476  003600  FFFF               	dw	65535	; assembler added errata NOP
  7477  003602  EF12  F01B         	goto	l3709
  7478  003606                     u3960:
  7479  003606  FFFF               	dw	65535	; assembler added errata NOP
  7480  003608                     
  7481                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 535:         --i;
  7482  003608  063C               	decf	otoa@i^0,f,c
  7483  00360A  A0D8               	btfss	status,0,c
  7484  00360C  063D               	decf	(otoa@i+1)^0,f,c
  7485  00360E                     
  7486                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 536:         dbuf
      +                          [i] = '0';
  7487  00360E  0E92               	movlw	low _dbuf
  7488  003610  243C               	addwf	otoa@i^0,w,c
  7489  003612  6ED9               	movwf	fsr2l,c
  7490  003614  0E00               	movlw	high _dbuf
  7491  003616  203D               	addwfc	(otoa@i+1)^0,w,c
  7492  003618  6EDA               	movwf	fsr2h,c
  7493  00361A  0E30               	movlw	48
  7494  00361C  6EDF               	movwf	indf2,c
  7495  00361E                     
  7496                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 537:         --w;
  7497  00361E  0632               	decf	otoa@w^0,f,c
  7498  003620  A0D8               	btfss	status,0,c
  7499  003622  0633               	decf	(otoa@w+1)^0,f,c
  7500  003624                     l3709:
  7501  003624  FFFF               	dw	65535	; assembler added errata NOP
  7502                           
  7503                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 541:     return p
      +                          ad(fp, &dbuf[i], w);
  7504  003626  C01C  F011         	movff	otoa@fp,pad@fp
  7505  00362A  C01D  F012         	movff	otoa@fp+1,pad@fp+1
  7506  00362E  0E92               	movlw	low _dbuf
  7507  003630  243C               	addwf	otoa@i^0,w,c
  7508  003632  6E13               	movwf	pad@buf^0,c
  7509  003634  0E00               	movlw	high _dbuf
  7510  003636  203D               	addwfc	(otoa@i+1)^0,w,c
  7511  003638  6E14               	movwf	(pad@buf+1)^0,c
  7512  00363A  C032  F015         	movff	otoa@w,pad@p
  7513  00363E  C033  F016         	movff	otoa@w+1,pad@p+1
  7514  003642  ECF6  F03B         	call	_pad	;wreg free
  7515  003646  C011  F01C         	movff	?_pad,?_otoa
  7516  00364A  C012  F01D         	movff	?_pad+1,?_otoa+1
  7517  00364E  0012               	return		;funcret
  7518  003650  FFFF               	dw	65535	; errata NOP
  7519  003652                     __end_of_otoa:
  7520                           	callstack 0
  7521                           
  7522 ;; *************** function _dtoa *****************
  7523 ;; Defined at:
  7524 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7525 ;; Parameters:    Size  Location     Type
  7526 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7527 ;;		 -> vsnprintf@f(6), 
  7528 ;;  d               8   29[COMRAM] long long 
  7529 ;; Auto vars:     Size  Location     Type
  7530 ;;  n               8   53[COMRAM] long long 
  7531 ;;  i               2   61[COMRAM] int 
  7532 ;;  s               2   51[COMRAM] int 
  7533 ;;  w               2   49[COMRAM] int 
  7534 ;;  p               2   47[COMRAM] int 
  7535 ;; Return value:  Size  Location     Type
  7536 ;;                  2   27[COMRAM] int 
  7537 ;; Registers used:
  7538 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7539 ;; Tracked objects:
  7540 ;;		On entry : 0/0
  7541 ;;		On exit  : 0/0
  7542 ;;		Unchanged: 0/0
  7543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7544 ;;      Params:        10       0       0       0       0       0       0
  7545 ;;      Locals:        18       0       0       0       0       0       0
  7546 ;;      Temps:          8       0       0       0       0       0       0
  7547 ;;      Totals:        36       0       0       0       0       0       0
  7548 ;;Total ram usage:       36 bytes
  7549 ;; Hardware stack levels used:    1
  7550 ;; Hardware stack levels required when called:    5
  7551 ;; This function calls:
  7552 ;;		___aodiv
  7553 ;;		___aomod
  7554 ;;		_abs
  7555 ;;		_pad
  7556 ;; This function is called by:
  7557 ;;		_vfpfcnvrt
  7558 ;; This function uses a non-reentrant model
  7559 ;;
  7560                           
  7561                           	psect	text18
  7562  002BAA                     __ptext18:
  7563                           	callstack 0
  7564  002BAA                     _dtoa:
  7565                           	callstack 0
  7566  002BAA  FFFF               	dw	65535	; assembler added errata NOP
  7567  002BAC                     
  7568                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
  7569  002BAC  C01E  F036         	movff	dtoa@d,dtoa@n
  7570  002BB0  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  7571  002BB4  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  7572  002BB8  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  7573  002BBC  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  7574  002BC0  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  7575  002BC4  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  7576  002BC8  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  7577  002BCC                     
  7578                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
  7579  002BCC  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  7580  002BCE  EFEB  F015         	goto	u3721
  7581  002BD2  EFEF  F015         	goto	u3720
  7582  002BD6                     u3721:
  7583  002BD6  FFFF               	dw	65535	; assembler added errata NOP
  7584  002BD8  0E01               	movlw	1
  7585  002BDA  EFF1  F015         	goto	u3730
  7586  002BDE                     u3720:
  7587  002BDE  FFFF               	dw	65535	; assembler added errata NOP
  7588  002BE0  0E00               	movlw	0
  7589  002BE2                     u3730:
  7590  002BE2  FFFF               	dw	65535	; assembler added errata NOP
  7591  002BE4  6E34               	movwf	dtoa@s^0,c
  7592  002BE6  6A35               	clrf	(dtoa@s+1)^0,c
  7593                           
  7594                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  7595  002BE8  5034               	movf	dtoa@s^0,w,c
  7596  002BEA  1035               	iorwf	(dtoa@s+1)^0,w,c
  7597  002BEC  B4D8               	btfsc	status,2,c
  7598  002BEE  EFFB  F015         	goto	u3741
  7599  002BF2  EFFE  F015         	goto	u3740
  7600  002BF6                     u3741:
  7601  002BF6  FFFF               	dw	65535	; assembler added errata NOP
  7602  002BF8  EF0F  F016         	goto	l3609
  7603  002BFC                     u3740:
  7604  002BFC  FFFF               	dw	65535	; assembler added errata NOP
  7605  002BFE                     
  7606                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
  7607  002BFE  1E3D               	comf	(dtoa@n+7)^0,f,c
  7608  002C00  1E3C               	comf	(dtoa@n+6)^0,f,c
  7609  002C02  1E3B               	comf	(dtoa@n+5)^0,f,c
  7610  002C04  1E3A               	comf	(dtoa@n+4)^0,f,c
  7611  002C06  1E39               	comf	(dtoa@n+3)^0,f,c
  7612  002C08  1E38               	comf	(dtoa@n+2)^0,f,c
  7613  002C0A  1E37               	comf	(dtoa@n+1)^0,f,c
  7614  002C0C  6C36               	negf	dtoa@n^0,c
  7615  002C0E  0E00               	movlw	0
  7616  002C10  2237               	addwfc	(dtoa@n+1)^0,f,c
  7617  002C12  2238               	addwfc	(dtoa@n+2)^0,f,c
  7618  002C14  2239               	addwfc	(dtoa@n+3)^0,f,c
  7619  002C16  223A               	addwfc	(dtoa@n+4)^0,f,c
  7620  002C18  223B               	addwfc	(dtoa@n+5)^0,f,c
  7621  002C1A  223C               	addwfc	(dtoa@n+6)^0,f,c
  7622  002C1C  223D               	addwfc	(dtoa@n+7)^0,f,c
  7623  002C1E                     l3609:
  7624  002C1E  FFFF               	dw	65535	; assembler added errata NOP
  7625                           
  7626                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
  7627  002C20  0100               	movlb	0	; () banked
  7628  002C22  BF89               	btfsc	(_prec+1)& (0+255),7,b
  7629  002C24  EF16  F016         	goto	u3751
  7630  002C28  EF19  F016         	goto	u3750
  7631  002C2C                     u3751:
  7632  002C2C  FFFF               	dw	65535	; assembler added errata NOP
  7633  002C2E  EF1B  F016         	goto	l3613
  7634  002C32                     u3750:
  7635  002C32  FFFF               	dw	65535	; assembler added errata NOP
  7636  002C34                     
  7637                           ; BSR set to: 0
  7638                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
  7639  002C34  927D               	bcf	_flags^0,1,c
  7640  002C36                     l3613:
  7641  002C36  FFFF               	dw	65535	; assembler added errata NOP
  7642                           
  7643                           ; BSR set to: 0
  7644                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
  7645  002C38  BF89               	btfsc	(_prec+1)& (0+255),7,b
  7646  002C3A  EF2A  F016         	goto	u3760
  7647  002C3E  5189               	movf	(_prec+1)& (0+255),w,b
  7648  002C40  E106               	bnz	u3761
  7649  002C42  0588               	decf	_prec& (0+255),w,b
  7650  002C44  B0D8               	btfsc	status,0,c
  7651  002C46  EF27  F016         	goto	u3761
  7652  002C4A  EF2A  F016         	goto	u3760
  7653  002C4E                     u3761:
  7654  002C4E  FFFF               	dw	65535	; assembler added errata NOP
  7655  002C50  EF31  F016         	goto	l1090
  7656  002C54                     u3760:
  7657  002C54  FFFF               	dw	65535	; assembler added errata NOP
  7658  002C56                     
  7659                           ; BSR set to: 0
  7660  002C56  0E00               	movlw	0
  7661  002C58  6E31               	movwf	(dtoa@p+1)^0,c
  7662  002C5A  0E01               	movlw	1
  7663  002C5C  6E30               	movwf	dtoa@p^0,c
  7664  002C5E  EF36  F016         	goto	l1092
  7665  002C62                     l1090:
  7666  002C62  FFFF               	dw	65535	; assembler added errata NOP
  7667                           
  7668                           ; BSR set to: 0
  7669  002C64  C088  F030         	movff	_prec,dtoa@p
  7670  002C68  C089  F031         	movff	_prec+1,dtoa@p+1
  7671  002C6C                     l1092:
  7672  002C6C  FFFF               	dw	65535	; assembler added errata NOP
  7673                           
  7674                           ; BSR set to: 0
  7675                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
  7676  002C6E  C086  F032         	movff	_width,dtoa@w
  7677  002C72  C087  F033         	movff	_width+1,dtoa@w+1
  7678  002C76                     
  7679                           ; BSR set to: 0
  7680                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
  7681  002C76  5034               	movf	dtoa@s^0,w,c
  7682  002C78  1035               	iorwf	(dtoa@s+1)^0,w,c
  7683  002C7A  A4D8               	btfss	status,2,c
  7684  002C7C  EF42  F016         	goto	u3771
  7685  002C80  EF45  F016         	goto	u3770
  7686  002C84                     u3771:
  7687  002C84  FFFF               	dw	65535	; assembler added errata NOP
  7688  002C86  EF4E  F016         	goto	l3621
  7689  002C8A                     u3770:
  7690  002C8A  FFFF               	dw	65535	; assembler added errata NOP
  7691  002C8C                     
  7692                           ; BSR set to: 0
  7693  002C8C  A47D               	btfss	_flags^0,2,c
  7694  002C8E  EF4B  F016         	goto	u3781
  7695  002C92  EF4E  F016         	goto	u3780
  7696  002C96                     u3781:
  7697  002C96  FFFF               	dw	65535	; assembler added errata NOP
  7698  002C98  EF52  F016         	goto	l3623
  7699  002C9C                     u3780:
  7700  002C9C                     l3621:
  7701  002C9C  FFFF               	dw	65535	; assembler added errata NOP
  7702                           
  7703                           ; BSR set to: 0
  7704                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
  7705  002C9E  0632               	decf	dtoa@w^0,f,c
  7706  002CA0  A0D8               	btfss	status,0,c
  7707  002CA2  0633               	decf	(dtoa@w+1)^0,f,c
  7708  002CA4                     l3623:
  7709  002CA4  FFFF               	dw	65535	; assembler added errata NOP
  7710                           
  7711                           ; BSR set to: 0
  7712                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
  7713  002CA6  0E00               	movlw	0
  7714  002CA8  6E3F               	movwf	(dtoa@i+1)^0,c
  7715  002CAA  0E1F               	movlw	31
  7716  002CAC  6E3E               	movwf	dtoa@i^0,c
  7717  002CAE                     
  7718                           ; BSR set to: 0
  7719                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
  7720  002CAE  0E00               	movlw	0
  7721  002CB0  6FB1               	movwf	(_dbuf+31)& (0+255),b
  7722                           
  7723                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7724  002CB2  EFD8  F016         	goto	l3637
  7725  002CB6                     l3627:
  7726  002CB6  FFFF               	dw	65535	; assembler added errata NOP
  7727                           
  7728                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
  7729  002CB8  063E               	decf	dtoa@i^0,f,c
  7730  002CBA  A0D8               	btfss	status,0,c
  7731  002CBC  063F               	decf	(dtoa@i+1)^0,f,c
  7732  002CBE                     
  7733                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
  7734  002CBE  0E92               	movlw	low _dbuf
  7735  002CC0  243E               	addwf	dtoa@i^0,w,c
  7736  002CC2  6ED9               	movwf	fsr2l,c
  7737  002CC4  0E00               	movlw	high _dbuf
  7738  002CC6  203F               	addwfc	(dtoa@i+1)^0,w,c
  7739  002CC8  6EDA               	movwf	fsr2h,c
  7740  002CCA  C036  F001         	movff	dtoa@n,___aomod@dividend
  7741  002CCE  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  7742  002CD2  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  7743  002CD6  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  7744  002CDA  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  7745  002CDE  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  7746  002CE2  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  7747  002CE6  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  7748  002CEA  0E0A               	movlw	10
  7749  002CEC  6E09               	movwf	___aomod@divisor^0,c
  7750  002CEE  0E00               	movlw	0
  7751  002CF0  6E0A               	movwf	(___aomod@divisor+1)^0,c
  7752  002CF2  0E00               	movlw	0
  7753  002CF4  6E0B               	movwf	(___aomod@divisor+2)^0,c
  7754  002CF6  0E00               	movlw	0
  7755  002CF8  6E0C               	movwf	(___aomod@divisor+3)^0,c
  7756  002CFA  0E00               	movlw	0
  7757  002CFC  6E0D               	movwf	(___aomod@divisor+4)^0,c
  7758  002CFE  0E00               	movlw	0
  7759  002D00  6E0E               	movwf	(___aomod@divisor+5)^0,c
  7760  002D02  0E00               	movlw	0
  7761  002D04  6E0F               	movwf	(___aomod@divisor+6)^0,c
  7762  002D06  0E00               	movlw	0
  7763  002D08  6E10               	movwf	(___aomod@divisor+7)^0,c
  7764  002D0A  ECD2  F01D         	call	___aomod	;wreg free
  7765  002D0E  C001  F026         	movff	?___aomod,??_dtoa
  7766  002D12  C002  F027         	movff	?___aomod+1,??_dtoa+1
  7767  002D16  C003  F028         	movff	?___aomod+2,??_dtoa+2
  7768  002D1A  C004  F029         	movff	?___aomod+3,??_dtoa+3
  7769  002D1E  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  7770  002D22  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  7771  002D26  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  7772  002D2A  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  7773  002D2E  C026  F013         	movff	??_dtoa,abs@a
  7774  002D32  C028  F014         	movff	??_dtoa+2,abs@a+1
  7775  002D36  ECE4  F037         	call	_abs	;wreg free
  7776  002D3A  5013               	movf	?_abs^0,w,c
  7777  002D3C  0F30               	addlw	48
  7778  002D3E  6EDF               	movwf	indf2,c
  7779  002D40                     
  7780                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
  7781  002D40  0630               	decf	dtoa@p^0,f,c
  7782  002D42  A0D8               	btfss	status,0,c
  7783  002D44  0631               	decf	(dtoa@p+1)^0,f,c
  7784  002D46                     
  7785                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
  7786  002D46  0632               	decf	dtoa@w^0,f,c
  7787  002D48  A0D8               	btfss	status,0,c
  7788  002D4A  0633               	decf	(dtoa@w+1)^0,f,c
  7789  002D4C                     
  7790                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
  7791  002D4C  C036  F001         	movff	dtoa@n,___aodiv@dividend
  7792  002D50  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  7793  002D54  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  7794  002D58  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  7795  002D5C  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  7796  002D60  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  7797  002D64  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  7798  002D68  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  7799  002D6C  0E0A               	movlw	10
  7800  002D6E  6E09               	movwf	___aodiv@divisor^0,c
  7801  002D70  0E00               	movlw	0
  7802  002D72  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  7803  002D74  0E00               	movlw	0
  7804  002D76  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  7805  002D78  0E00               	movlw	0
  7806  002D7A  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  7807  002D7C  0E00               	movlw	0
  7808  002D7E  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  7809  002D80  0E00               	movlw	0
  7810  002D82  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  7811  002D84  0E00               	movlw	0
  7812  002D86  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  7813  002D88  0E00               	movlw	0
  7814  002D8A  6E10               	movwf	(___aodiv@divisor+7)^0,c
  7815  002D8C  ECF8  F01C         	call	___aodiv	;wreg free
  7816  002D90  C001  F036         	movff	?___aodiv,dtoa@n
  7817  002D94  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  7818  002D98  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  7819  002D9C  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  7820  002DA0  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  7821  002DA4  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  7822  002DA8  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  7823  002DAC  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  7824  002DB0                     l3637:
  7825  002DB0  FFFF               	dw	65535	; assembler added errata NOP
  7826                           
  7827                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7828  002DB2  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  7829  002DB4  EFE4  F016         	goto	u3791
  7830  002DB8  503F               	movf	(dtoa@i+1)^0,w,c
  7831  002DBA  E109               	bnz	u3790
  7832  002DBC  043E               	decf	dtoa@i^0,w,c
  7833  002DBE  A0D8               	btfss	status,0,c
  7834  002DC0  EFE4  F016         	goto	u3791
  7835  002DC4  EFE7  F016         	goto	u3790
  7836  002DC8                     u3791:
  7837  002DC8  FFFF               	dw	65535	; assembler added errata NOP
  7838  002DCA  EF1F  F017         	goto	l3647
  7839  002DCE                     u3790:
  7840  002DCE  FFFF               	dw	65535	; assembler added errata NOP
  7841  002DD0  5036               	movf	dtoa@n^0,w,c
  7842  002DD2  1037               	iorwf	(dtoa@n+1)^0,w,c
  7843  002DD4  1038               	iorwf	(dtoa@n+2)^0,w,c
  7844  002DD6  1039               	iorwf	(dtoa@n+3)^0,w,c
  7845  002DD8  103A               	iorwf	(dtoa@n+4)^0,w,c
  7846  002DDA  103B               	iorwf	(dtoa@n+5)^0,w,c
  7847  002DDC  103C               	iorwf	(dtoa@n+6)^0,w,c
  7848  002DDE  103D               	iorwf	(dtoa@n+7)^0,w,c
  7849  002DE0  A4D8               	btfss	status,2,c
  7850  002DE2  EFF5  F016         	goto	u3801
  7851  002DE6  EFF8  F016         	goto	u3800
  7852  002DEA                     u3801:
  7853  002DEA  FFFF               	dw	65535	; assembler added errata NOP
  7854  002DEC  EF5B  F016         	goto	l3627
  7855  002DF0                     u3800:
  7856  002DF0  FFFF               	dw	65535	; assembler added errata NOP
  7857  002DF2  BE31               	btfsc	(dtoa@p+1)^0,7,c
  7858  002DF4  EF07  F017         	goto	u3810
  7859  002DF8  5031               	movf	(dtoa@p+1)^0,w,c
  7860  002DFA  E106               	bnz	u3811
  7861  002DFC  0430               	decf	dtoa@p^0,w,c
  7862  002DFE  B0D8               	btfsc	status,0,c
  7863  002E00  EF04  F017         	goto	u3811
  7864  002E04  EF07  F017         	goto	u3810
  7865  002E08                     u3811:
  7866  002E08  FFFF               	dw	65535	; assembler added errata NOP
  7867  002E0A  EF5B  F016         	goto	l3627
  7868  002E0E                     u3810:
  7869  002E0E  FFFF               	dw	65535	; assembler added errata NOP
  7870  002E10  BE33               	btfsc	(dtoa@w+1)^0,7,c
  7871  002E12  EF13  F017         	goto	u3821
  7872  002E16  5033               	movf	(dtoa@w+1)^0,w,c
  7873  002E18  E109               	bnz	u3820
  7874  002E1A  0432               	decf	dtoa@w^0,w,c
  7875  002E1C  A0D8               	btfss	status,0,c
  7876  002E1E  EF13  F017         	goto	u3821
  7877  002E22  EF16  F017         	goto	u3820
  7878  002E26                     u3821:
  7879  002E26  FFFF               	dw	65535	; assembler added errata NOP
  7880  002E28  EF1F  F017         	goto	l3647
  7881  002E2C                     u3820:
  7882  002E2C  FFFF               	dw	65535	; assembler added errata NOP
  7883  002E2E  B27D               	btfsc	_flags^0,1,c
  7884  002E30  EF1C  F017         	goto	u3831
  7885  002E34  EF1F  F017         	goto	u3830
  7886  002E38                     u3831:
  7887  002E38  FFFF               	dw	65535	; assembler added errata NOP
  7888  002E3A  EF5B  F016         	goto	l3627
  7889  002E3E                     u3830:
  7890  002E3E                     l3647:
  7891  002E3E  FFFF               	dw	65535	; assembler added errata NOP
  7892                           
  7893                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
  7894  002E40  5034               	movf	dtoa@s^0,w,c
  7895  002E42  1035               	iorwf	(dtoa@s+1)^0,w,c
  7896  002E44  A4D8               	btfss	status,2,c
  7897  002E46  EF27  F017         	goto	u3841
  7898  002E4A  EF2A  F017         	goto	u3840
  7899  002E4E                     u3841:
  7900  002E4E  FFFF               	dw	65535	; assembler added errata NOP
  7901  002E50  EF33  F017         	goto	l3651
  7902  002E54                     u3840:
  7903  002E54  FFFF               	dw	65535	; assembler added errata NOP
  7904  002E56  A47D               	btfss	_flags^0,2,c
  7905  002E58  EF30  F017         	goto	u3851
  7906  002E5C  EF33  F017         	goto	u3850
  7907  002E60                     u3851:
  7908  002E60  FFFF               	dw	65535	; assembler added errata NOP
  7909  002E62  EF56  F017         	goto	l3661
  7910  002E66                     u3850:
  7911  002E66                     l3651:
  7912  002E66  FFFF               	dw	65535	; assembler added errata NOP
  7913                           
  7914                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
  7915  002E68  063E               	decf	dtoa@i^0,f,c
  7916  002E6A  A0D8               	btfss	status,0,c
  7917  002E6C  063F               	decf	(dtoa@i+1)^0,f,c
  7918  002E6E                     
  7919                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
  7920  002E6E  5034               	movf	dtoa@s^0,w,c
  7921  002E70  1035               	iorwf	(dtoa@s+1)^0,w,c
  7922  002E72  A4D8               	btfss	status,2,c
  7923  002E74  EF3E  F017         	goto	u3861
  7924  002E78  EF41  F017         	goto	u3860
  7925  002E7C                     u3861:
  7926  002E7C  FFFF               	dw	65535	; assembler added errata NOP
  7927  002E7E  EF48  F017         	goto	l3657
  7928  002E82                     u3860:
  7929  002E82  FFFF               	dw	65535	; assembler added errata NOP
  7930  002E84  0E00               	movlw	0
  7931  002E86  6E2F               	movwf	(_dtoa$1502+1)^0,c
  7932  002E88  0E2B               	movlw	43
  7933  002E8A  6E2E               	movwf	_dtoa$1502^0,c
  7934  002E8C  EF4D  F017         	goto	l3659
  7935  002E90                     l3657:
  7936  002E90  FFFF               	dw	65535	; assembler added errata NOP
  7937  002E92  0E00               	movlw	0
  7938  002E94  6E2F               	movwf	(_dtoa$1502+1)^0,c
  7939  002E96  0E2D               	movlw	45
  7940  002E98  6E2E               	movwf	_dtoa$1502^0,c
  7941  002E9A                     l3659:
  7942  002E9A  FFFF               	dw	65535	; assembler added errata NOP
  7943  002E9C  0E92               	movlw	low _dbuf
  7944  002E9E  243E               	addwf	dtoa@i^0,w,c
  7945  002EA0  6ED9               	movwf	fsr2l,c
  7946  002EA2  0E00               	movlw	high _dbuf
  7947  002EA4  203F               	addwfc	(dtoa@i+1)^0,w,c
  7948  002EA6  6EDA               	movwf	fsr2h,c
  7949  002EA8  C02E  FFDF         	movff	_dtoa$1502,indf2
  7950  002EAC                     l3661:
  7951  002EAC  FFFF               	dw	65535	; assembler added errata NOP
  7952                           
  7953                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
  7954  002EAE  C01C  F011         	movff	dtoa@fp,pad@fp
  7955  002EB2  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  7956  002EB6  0E92               	movlw	low _dbuf
  7957  002EB8  243E               	addwf	dtoa@i^0,w,c
  7958  002EBA  6E13               	movwf	pad@buf^0,c
  7959  002EBC  0E00               	movlw	high _dbuf
  7960  002EBE  203F               	addwfc	(dtoa@i+1)^0,w,c
  7961  002EC0  6E14               	movwf	(pad@buf+1)^0,c
  7962  002EC2  C032  F015         	movff	dtoa@w,pad@p
  7963  002EC6  C033  F016         	movff	dtoa@w+1,pad@p+1
  7964  002ECA  ECF6  F03B         	call	_pad	;wreg free
  7965  002ECE  C011  F01C         	movff	?_pad,?_dtoa
  7966  002ED2  C012  F01D         	movff	?_pad+1,?_dtoa+1
  7967  002ED6  0012               	return		;funcret
  7968  002ED8  FFFF               	dw	65535	; errata NOP
  7969  002EDA                     __end_of_dtoa:
  7970                           	callstack 0
  7971                           
  7972 ;; *************** function _abs *****************
  7973 ;; Defined at:
  7974 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
  7975 ;; Parameters:    Size  Location     Type
  7976 ;;  a               2   18[COMRAM] int 
  7977 ;; Auto vars:     Size  Location     Type
  7978 ;;		None
  7979 ;; Return value:  Size  Location     Type
  7980 ;;                  2   18[COMRAM] int 
  7981 ;; Registers used:
  7982 ;;		wreg, status,2, status,0
  7983 ;; Tracked objects:
  7984 ;;		On entry : 0/0
  7985 ;;		On exit  : 0/0
  7986 ;;		Unchanged: 0/0
  7987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7988 ;;      Params:         2       0       0       0       0       0       0
  7989 ;;      Locals:         0       0       0       0       0       0       0
  7990 ;;      Temps:          2       0       0       0       0       0       0
  7991 ;;      Totals:         4       0       0       0       0       0       0
  7992 ;;Total ram usage:        4 bytes
  7993 ;; Hardware stack levels used:    1
  7994 ;; Hardware stack levels required when called:    1
  7995 ;; This function calls:
  7996 ;;		Nothing
  7997 ;; This function is called by:
  7998 ;;		_dtoa
  7999 ;; This function uses a non-reentrant model
  8000 ;;
  8001                           
  8002                           	psect	text19
  8003  006FC8                     __ptext19:
  8004                           	callstack 0
  8005  006FC8                     _abs:
  8006                           	callstack 0
  8007  006FC8  FFFF               	dw	65535	; assembler added errata NOP
  8008  006FCA  BE14               	btfsc	(abs@a+1)^0,7,c
  8009  006FCC  EFF3  F037         	goto	u3590
  8010  006FD0  5014               	movf	(abs@a+1)^0,w,c
  8011  006FD2  E106               	bnz	u3591
  8012  006FD4  0413               	decf	abs@a^0,w,c
  8013  006FD6  B0D8               	btfsc	status,0,c
  8014  006FD8  EFF0  F037         	goto	u3591
  8015  006FDC  EFF3  F037         	goto	u3590
  8016  006FE0                     u3591:
  8017  006FE0  FFFF               	dw	65535	; assembler added errata NOP
  8018  006FE2  EF02  F038         	goto	l1280
  8019  006FE6                     u3590:
  8020  006FE6  FFFF               	dw	65535	; assembler added errata NOP
  8021  006FE8  C013  F015         	movff	abs@a,??_abs
  8022  006FEC  C014  F016         	movff	abs@a+1,??_abs+1
  8023  006FF0  1E15               	comf	??_abs^0,f,c
  8024  006FF2  1E16               	comf	(??_abs+1)^0,f,c
  8025  006FF4  4A15               	infsnz	??_abs^0,f,c
  8026  006FF6  2A16               	incf	(??_abs+1)^0,f,c
  8027  006FF8  C015  F013         	movff	??_abs,?_abs
  8028  006FFC  C016  F014         	movff	??_abs+1,?_abs+1
  8029  007000  EF07  F038         	goto	l1283
  8030  007004                     l1280:
  8031  007004  FFFF               	dw	65535	; assembler added errata NOP
  8032  007006  C013  F013         	movff	abs@a,?_abs
  8033  00700A  C014  F014         	movff	abs@a+1,?_abs+1
  8034  00700E                     l1283:
  8035  00700E  FFFF               	dw	65535	; assembler added errata NOP
  8036  007010  0012               	return		;funcret
  8037  007012  FFFF               	dw	65535	; errata NOP
  8038  007014                     __end_of_abs:
  8039                           	callstack 0
  8040                           
  8041 ;; *************** function ___aomod *****************
  8042 ;; Defined at:
  8043 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
  8044 ;; Parameters:    Size  Location     Type
  8045 ;;  dividend        8    0[COMRAM] long long 
  8046 ;;  divisor         8    8[COMRAM] long long 
  8047 ;; Auto vars:     Size  Location     Type
  8048 ;;  sign            1   17[COMRAM] unsigned char 
  8049 ;;  counter         1   16[COMRAM] unsigned char 
  8050 ;; Return value:  Size  Location     Type
  8051 ;;                  8    0[COMRAM] long long 
  8052 ;; Registers used:
  8053 ;;		wreg, status,2, status,0
  8054 ;; Tracked objects:
  8055 ;;		On entry : 0/0
  8056 ;;		On exit  : 0/0
  8057 ;;		Unchanged: 0/0
  8058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8059 ;;      Params:        16       0       0       0       0       0       0
  8060 ;;      Locals:         2       0       0       0       0       0       0
  8061 ;;      Temps:          0       0       0       0       0       0       0
  8062 ;;      Totals:        18       0       0       0       0       0       0
  8063 ;;Total ram usage:       18 bytes
  8064 ;; Hardware stack levels used:    1
  8065 ;; Hardware stack levels required when called:    1
  8066 ;; This function calls:
  8067 ;;		Nothing
  8068 ;; This function is called by:
  8069 ;;		_dtoa
  8070 ;; This function uses a non-reentrant model
  8071 ;;
  8072                           
  8073                           	psect	text20
  8074  003BA4                     __ptext20:
  8075                           	callstack 0
  8076  003BA4                     ___aomod:
  8077                           	callstack 0
  8078  003BA4  FFFF               	dw	65535	; assembler added errata NOP
  8079  003BA6  0E00               	movlw	0
  8080  003BA8  6E12               	movwf	___aomod@sign^0,c
  8081  003BAA  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  8082  003BAC  EFDD  F01D         	goto	u3420
  8083  003BB0  EFDA  F01D         	goto	u3421
  8084  003BB4                     u3421:
  8085  003BB4  FFFF               	dw	65535	; assembler added errata NOP
  8086  003BB6  EFF0  F01D         	goto	l3463
  8087  003BBA                     u3420:
  8088  003BBA  FFFF               	dw	65535	; assembler added errata NOP
  8089  003BBC  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8090  003BBE  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8091  003BC0  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8092  003BC2  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8093  003BC4  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8094  003BC6  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8095  003BC8  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8096  003BCA  6C01               	negf	___aomod@dividend^0,c
  8097  003BCC  0E00               	movlw	0
  8098  003BCE  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8099  003BD0  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8100  003BD2  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8101  003BD4  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8102  003BD6  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8103  003BD8  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8104  003BDA  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8105  003BDC  0E01               	movlw	1
  8106  003BDE  6E12               	movwf	___aomod@sign^0,c
  8107  003BE0                     l3463:
  8108  003BE0  FFFF               	dw	65535	; assembler added errata NOP
  8109  003BE2  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  8110  003BE4  EFF9  F01D         	goto	u3430
  8111  003BE8  EFF6  F01D         	goto	u3431
  8112  003BEC                     u3431:
  8113  003BEC  FFFF               	dw	65535	; assembler added errata NOP
  8114  003BEE  EF0A  F01E         	goto	l3467
  8115  003BF2                     u3430:
  8116  003BF2  FFFF               	dw	65535	; assembler added errata NOP
  8117  003BF4  1E10               	comf	(___aomod@divisor+7)^0,f,c
  8118  003BF6  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  8119  003BF8  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  8120  003BFA  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  8121  003BFC  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  8122  003BFE  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  8123  003C00  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  8124  003C02  6C09               	negf	___aomod@divisor^0,c
  8125  003C04  0E00               	movlw	0
  8126  003C06  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  8127  003C08  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  8128  003C0A  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  8129  003C0C  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  8130  003C0E  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  8131  003C10  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  8132  003C12  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  8133  003C14                     l3467:
  8134  003C14  FFFF               	dw	65535	; assembler added errata NOP
  8135  003C16  5009               	movf	___aomod@divisor^0,w,c
  8136  003C18  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  8137  003C1A  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  8138  003C1C  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  8139  003C1E  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  8140  003C20  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  8141  003C22  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  8142  003C24  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  8143  003C26  B4D8               	btfsc	status,2,c
  8144  003C28  EF18  F01E         	goto	u3441
  8145  003C2C  EF1B  F01E         	goto	u3440
  8146  003C30                     u3441:
  8147  003C30  FFFF               	dw	65535	; assembler added errata NOP
  8148  003C32  EF6C  F01E         	goto	l3483
  8149  003C36                     u3440:
  8150  003C36  FFFF               	dw	65535	; assembler added errata NOP
  8151  003C38  0E01               	movlw	1
  8152  003C3A  6E11               	movwf	___aomod@counter^0,c
  8153  003C3C  EF2B  F01E         	goto	l3473
  8154  003C40                     l3471:
  8155  003C40  FFFF               	dw	65535	; assembler added errata NOP
  8156  003C42  90D8               	bcf	status,0,c
  8157  003C44  3609               	rlcf	___aomod@divisor^0,f,c
  8158  003C46  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  8159  003C48  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  8160  003C4A  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  8161  003C4C  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  8162  003C4E  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  8163  003C50  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  8164  003C52  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  8165  003C54  2A11               	incf	___aomod@counter^0,f,c
  8166  003C56                     l3473:
  8167  003C56  FFFF               	dw	65535	; assembler added errata NOP
  8168  003C58  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  8169  003C5A  EF31  F01E         	goto	u3451
  8170  003C5E  EF34  F01E         	goto	u3450
  8171  003C62                     u3451:
  8172  003C62  FFFF               	dw	65535	; assembler added errata NOP
  8173  003C64  EF20  F01E         	goto	l3471
  8174  003C68                     u3450:
  8175  003C68  FFFF               	dw	65535	; assembler added errata NOP
  8176  003C6A                     l3475:
  8177  003C6A  FFFF               	dw	65535	; assembler added errata NOP
  8178  003C6C  5009               	movf	___aomod@divisor^0,w,c
  8179  003C6E  5C01               	subwf	___aomod@dividend^0,w,c
  8180  003C70  500A               	movf	(___aomod@divisor+1)^0,w,c
  8181  003C72  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  8182  003C74  500B               	movf	(___aomod@divisor+2)^0,w,c
  8183  003C76  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  8184  003C78  500C               	movf	(___aomod@divisor+3)^0,w,c
  8185  003C7A  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  8186  003C7C  500D               	movf	(___aomod@divisor+4)^0,w,c
  8187  003C7E  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  8188  003C80  500E               	movf	(___aomod@divisor+5)^0,w,c
  8189  003C82  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  8190  003C84  500F               	movf	(___aomod@divisor+6)^0,w,c
  8191  003C86  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  8192  003C88  5010               	movf	(___aomod@divisor+7)^0,w,c
  8193  003C8A  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  8194  003C8C  A0D8               	btfss	status,0,c
  8195  003C8E  EF4B  F01E         	goto	u3461
  8196  003C92  EF4E  F01E         	goto	u3460
  8197  003C96                     u3461:
  8198  003C96  FFFF               	dw	65535	; assembler added errata NOP
  8199  003C98  EF5F  F01E         	goto	l3479
  8200  003C9C                     u3460:
  8201  003C9C  FFFF               	dw	65535	; assembler added errata NOP
  8202  003C9E  5009               	movf	___aomod@divisor^0,w,c
  8203  003CA0  5E01               	subwf	___aomod@dividend^0,f,c
  8204  003CA2  500A               	movf	(___aomod@divisor+1)^0,w,c
  8205  003CA4  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  8206  003CA6  500B               	movf	(___aomod@divisor+2)^0,w,c
  8207  003CA8  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  8208  003CAA  500C               	movf	(___aomod@divisor+3)^0,w,c
  8209  003CAC  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  8210  003CAE  500D               	movf	(___aomod@divisor+4)^0,w,c
  8211  003CB0  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  8212  003CB2  500E               	movf	(___aomod@divisor+5)^0,w,c
  8213  003CB4  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  8214  003CB6  500F               	movf	(___aomod@divisor+6)^0,w,c
  8215  003CB8  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  8216  003CBA  5010               	movf	(___aomod@divisor+7)^0,w,c
  8217  003CBC  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  8218  003CBE                     l3479:
  8219  003CBE  FFFF               	dw	65535	; assembler added errata NOP
  8220  003CC0  90D8               	bcf	status,0,c
  8221  003CC2  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  8222  003CC4  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  8223  003CC6  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  8224  003CC8  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  8225  003CCA  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  8226  003CCC  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  8227  003CCE  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  8228  003CD0  3209               	rrcf	___aomod@divisor^0,f,c
  8229  003CD2  2E11               	decfsz	___aomod@counter^0,f,c
  8230  003CD4  EF35  F01E         	goto	l3475
  8231  003CD8                     l3483:
  8232  003CD8  FFFF               	dw	65535	; assembler added errata NOP
  8233  003CDA  5012               	movf	___aomod@sign^0,w,c
  8234  003CDC  B4D8               	btfsc	status,2,c
  8235  003CDE  EF73  F01E         	goto	u3471
  8236  003CE2  EF76  F01E         	goto	u3470
  8237  003CE6                     u3471:
  8238  003CE6  FFFF               	dw	65535	; assembler added errata NOP
  8239  003CE8  EF87  F01E         	goto	l3487
  8240  003CEC                     u3470:
  8241  003CEC  FFFF               	dw	65535	; assembler added errata NOP
  8242  003CEE  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8243  003CF0  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8244  003CF2  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8245  003CF4  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8246  003CF6  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8247  003CF8  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8248  003CFA  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8249  003CFC  6C01               	negf	___aomod@dividend^0,c
  8250  003CFE  0E00               	movlw	0
  8251  003D00  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8252  003D02  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8253  003D04  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8254  003D06  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8255  003D08  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8256  003D0A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8257  003D0C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8258  003D0E                     l3487:
  8259  003D0E  FFFF               	dw	65535	; assembler added errata NOP
  8260  003D10  C001  F001         	movff	___aomod@dividend,?___aomod
  8261  003D14  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  8262  003D18  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  8263  003D1C  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  8264  003D20  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  8265  003D24  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  8266  003D28  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  8267  003D2C  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  8268  003D30  0012               	return		;funcret
  8269  003D32  FFFF               	dw	65535	; errata NOP
  8270  003D34                     __end_of___aomod:
  8271                           	callstack 0
  8272                           
  8273 ;; *************** function ___aodiv *****************
  8274 ;; Defined at:
  8275 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
  8276 ;; Parameters:    Size  Location     Type
  8277 ;;  dividend        8    0[COMRAM] long long 
  8278 ;;  divisor         8    8[COMRAM] long long 
  8279 ;; Auto vars:     Size  Location     Type
  8280 ;;  quotient        8   18[COMRAM] long long 
  8281 ;;  sign            1   17[COMRAM] unsigned char 
  8282 ;;  counter         1   16[COMRAM] unsigned char 
  8283 ;; Return value:  Size  Location     Type
  8284 ;;                  8    0[COMRAM] long long 
  8285 ;; Registers used:
  8286 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8287 ;; Tracked objects:
  8288 ;;		On entry : 0/0
  8289 ;;		On exit  : 0/0
  8290 ;;		Unchanged: 0/0
  8291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8292 ;;      Params:        16       0       0       0       0       0       0
  8293 ;;      Locals:        10       0       0       0       0       0       0
  8294 ;;      Temps:          0       0       0       0       0       0       0
  8295 ;;      Totals:        26       0       0       0       0       0       0
  8296 ;;Total ram usage:       26 bytes
  8297 ;; Hardware stack levels used:    1
  8298 ;; Hardware stack levels required when called:    1
  8299 ;; This function calls:
  8300 ;;		Nothing
  8301 ;; This function is called by:
  8302 ;;		_dtoa
  8303 ;; This function uses a non-reentrant model
  8304 ;;
  8305                           
  8306                           	psect	text21
  8307  0039F0                     __ptext21:
  8308                           	callstack 0
  8309  0039F0                     ___aodiv:
  8310                           	callstack 0
  8311  0039F0  FFFF               	dw	65535	; assembler added errata NOP
  8312  0039F2  0E00               	movlw	0
  8313  0039F4  6E12               	movwf	___aodiv@sign^0,c
  8314  0039F6  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  8315  0039F8  EF03  F01D         	goto	u3350
  8316  0039FC  EF00  F01D         	goto	u3351
  8317  003A00                     u3351:
  8318  003A00  FFFF               	dw	65535	; assembler added errata NOP
  8319  003A02  EF16  F01D         	goto	l3419
  8320  003A06                     u3350:
  8321  003A06  FFFF               	dw	65535	; assembler added errata NOP
  8322  003A08  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  8323  003A0A  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  8324  003A0C  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  8325  003A0E  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  8326  003A10  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  8327  003A12  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  8328  003A14  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  8329  003A16  6C09               	negf	___aodiv@divisor^0,c
  8330  003A18  0E00               	movlw	0
  8331  003A1A  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  8332  003A1C  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  8333  003A1E  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  8334  003A20  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  8335  003A22  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  8336  003A24  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  8337  003A26  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  8338  003A28  0E01               	movlw	1
  8339  003A2A  6E12               	movwf	___aodiv@sign^0,c
  8340  003A2C                     l3419:
  8341  003A2C  FFFF               	dw	65535	; assembler added errata NOP
  8342  003A2E  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  8343  003A30  EF1F  F01D         	goto	u3360
  8344  003A34  EF1C  F01D         	goto	u3361
  8345  003A38                     u3361:
  8346  003A38  FFFF               	dw	65535	; assembler added errata NOP
  8347  003A3A  EF32  F01D         	goto	l3425
  8348  003A3E                     u3360:
  8349  003A3E  FFFF               	dw	65535	; assembler added errata NOP
  8350  003A40  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  8351  003A42  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  8352  003A44  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  8353  003A46  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  8354  003A48  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  8355  003A4A  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  8356  003A4C  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  8357  003A4E  6C01               	negf	___aodiv@dividend^0,c
  8358  003A50  0E00               	movlw	0
  8359  003A52  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  8360  003A54  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  8361  003A56  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  8362  003A58  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  8363  003A5A  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  8364  003A5C  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  8365  003A5E  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  8366  003A60  0E01               	movlw	1
  8367  003A62  1A12               	xorwf	___aodiv@sign^0,f,c
  8368  003A64                     l3425:
  8369  003A64  FFFF               	dw	65535	; assembler added errata NOP
  8370  003A66  EE20  F013         	lfsr	2,___aodiv@quotient
  8371  003A6A  0E07               	movlw	7
  8372  003A6C                     u3371:
  8373  003A6C  6ADE               	clrf	postinc2,c
  8374  003A6E  06E8               	decf	wreg,f,c
  8375  003A70  E2FD               	bc	u3371
  8376  003A72  5009               	movf	___aodiv@divisor^0,w,c
  8377  003A74  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  8378  003A76  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  8379  003A78  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  8380  003A7A  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  8381  003A7C  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  8382  003A7E  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  8383  003A80  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  8384  003A82  B4D8               	btfsc	status,2,c
  8385  003A84  EF46  F01D         	goto	u3381
  8386  003A88  EF49  F01D         	goto	u3380
  8387  003A8C                     u3381:
  8388  003A8C  FFFF               	dw	65535	; assembler added errata NOP
  8389  003A8E  EFA4  F01D         	goto	l3447
  8390  003A92                     u3380:
  8391  003A92  FFFF               	dw	65535	; assembler added errata NOP
  8392  003A94  0E01               	movlw	1
  8393  003A96  6E11               	movwf	___aodiv@counter^0,c
  8394  003A98  EF59  F01D         	goto	l3433
  8395  003A9C                     l3431:
  8396  003A9C  FFFF               	dw	65535	; assembler added errata NOP
  8397  003A9E  90D8               	bcf	status,0,c
  8398  003AA0  3609               	rlcf	___aodiv@divisor^0,f,c
  8399  003AA2  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  8400  003AA4  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  8401  003AA6  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  8402  003AA8  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  8403  003AAA  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  8404  003AAC  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  8405  003AAE  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  8406  003AB0  2A11               	incf	___aodiv@counter^0,f,c
  8407  003AB2                     l3433:
  8408  003AB2  FFFF               	dw	65535	; assembler added errata NOP
  8409  003AB4  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  8410  003AB6  EF5F  F01D         	goto	u3391
  8411  003ABA  EF62  F01D         	goto	u3390
  8412  003ABE                     u3391:
  8413  003ABE  FFFF               	dw	65535	; assembler added errata NOP
  8414  003AC0  EF4E  F01D         	goto	l3431
  8415  003AC4                     u3390:
  8416  003AC4  FFFF               	dw	65535	; assembler added errata NOP
  8417  003AC6                     l3435:
  8418  003AC6  FFFF               	dw	65535	; assembler added errata NOP
  8419  003AC8  90D8               	bcf	status,0,c
  8420  003ACA  3613               	rlcf	___aodiv@quotient^0,f,c
  8421  003ACC  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  8422  003ACE  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  8423  003AD0  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  8424  003AD2  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  8425  003AD4  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  8426  003AD6  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  8427  003AD8  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  8428  003ADA  5009               	movf	___aodiv@divisor^0,w,c
  8429  003ADC  5C01               	subwf	___aodiv@dividend^0,w,c
  8430  003ADE  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8431  003AE0  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  8432  003AE2  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8433  003AE4  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  8434  003AE6  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8435  003AE8  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  8436  003AEA  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8437  003AEC  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  8438  003AEE  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8439  003AF0  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  8440  003AF2  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8441  003AF4  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  8442  003AF6  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8443  003AF8  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  8444  003AFA  A0D8               	btfss	status,0,c
  8445  003AFC  EF82  F01D         	goto	u3401
  8446  003B00  EF85  F01D         	goto	u3400
  8447  003B04                     u3401:
  8448  003B04  FFFF               	dw	65535	; assembler added errata NOP
  8449  003B06  EF97  F01D         	goto	l3443
  8450  003B0A                     u3400:
  8451  003B0A  FFFF               	dw	65535	; assembler added errata NOP
  8452  003B0C  5009               	movf	___aodiv@divisor^0,w,c
  8453  003B0E  5E01               	subwf	___aodiv@dividend^0,f,c
  8454  003B10  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8455  003B12  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  8456  003B14  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8457  003B16  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  8458  003B18  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8459  003B1A  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  8460  003B1C  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8461  003B1E  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  8462  003B20  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8463  003B22  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  8464  003B24  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8465  003B26  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  8466  003B28  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8467  003B2A  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  8468  003B2C  8013               	bsf	___aodiv@quotient^0,0,c
  8469  003B2E                     l3443:
  8470  003B2E  FFFF               	dw	65535	; assembler added errata NOP
  8471  003B30  90D8               	bcf	status,0,c
  8472  003B32  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  8473  003B34  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  8474  003B36  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  8475  003B38  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  8476  003B3A  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  8477  003B3C  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  8478  003B3E  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  8479  003B40  3209               	rrcf	___aodiv@divisor^0,f,c
  8480  003B42  2E11               	decfsz	___aodiv@counter^0,f,c
  8481  003B44  EF63  F01D         	goto	l3435
  8482  003B48                     l3447:
  8483  003B48  FFFF               	dw	65535	; assembler added errata NOP
  8484  003B4A  5012               	movf	___aodiv@sign^0,w,c
  8485  003B4C  B4D8               	btfsc	status,2,c
  8486  003B4E  EFAB  F01D         	goto	u3411
  8487  003B52  EFAE  F01D         	goto	u3410
  8488  003B56                     u3411:
  8489  003B56  FFFF               	dw	65535	; assembler added errata NOP
  8490  003B58  EFBF  F01D         	goto	l3451
  8491  003B5C                     u3410:
  8492  003B5C  FFFF               	dw	65535	; assembler added errata NOP
  8493  003B5E  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  8494  003B60  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  8495  003B62  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  8496  003B64  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  8497  003B66  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  8498  003B68  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  8499  003B6A  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  8500  003B6C  6C13               	negf	___aodiv@quotient^0,c
  8501  003B6E  0E00               	movlw	0
  8502  003B70  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  8503  003B72  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  8504  003B74  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  8505  003B76  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  8506  003B78  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  8507  003B7A  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  8508  003B7C  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  8509  003B7E                     l3451:
  8510  003B7E  FFFF               	dw	65535	; assembler added errata NOP
  8511  003B80  C013  F001         	movff	___aodiv@quotient,?___aodiv
  8512  003B84  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  8513  003B88  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  8514  003B8C  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  8515  003B90  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  8516  003B94  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  8517  003B98  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  8518  003B9C  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  8519  003BA0  0012               	return		;funcret
  8520  003BA2  FFFF               	dw	65535	; errata NOP
  8521  003BA4                     __end_of___aodiv:
  8522                           	callstack 0
  8523                           
  8524 ;; *************** function _ctoa *****************
  8525 ;; Defined at:
  8526 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  8527 ;; Parameters:    Size  Location     Type
  8528 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  8529 ;;		 -> vsnprintf@f(6), 
  8530 ;;  c               1   29[COMRAM] unsigned char 
  8531 ;; Auto vars:     Size  Location     Type
  8532 ;;  w               2   30[COMRAM] int 
  8533 ;;  l               2    0        int 
  8534 ;; Return value:  Size  Location     Type
  8535 ;;                  2   27[COMRAM] int 
  8536 ;; Registers used:
  8537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8538 ;; Tracked objects:
  8539 ;;		On entry : 0/0
  8540 ;;		On exit  : 0/0
  8541 ;;		Unchanged: 0/0
  8542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8543 ;;      Params:         3       0       0       0       0       0       0
  8544 ;;      Locals:         2       0       0       0       0       0       0
  8545 ;;      Temps:          0       0       0       0       0       0       0
  8546 ;;      Totals:         5       0       0       0       0       0       0
  8547 ;;Total ram usage:        5 bytes
  8548 ;; Hardware stack levels used:    1
  8549 ;; Hardware stack levels required when called:    5
  8550 ;; This function calls:
  8551 ;;		_pad
  8552 ;; This function is called by:
  8553 ;;		_vfpfcnvrt
  8554 ;; This function uses a non-reentrant model
  8555 ;;
  8556                           
  8557                           	psect	text22
  8558  0070C4                     __ptext22:
  8559                           	callstack 0
  8560  0070C4                     _ctoa:
  8561                           	callstack 0
  8562  0070C4  FFFF               	dw	65535	; assembler added errata NOP
  8563  0070C6                     
  8564                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  8565  0070C6  0100               	movlb	0	; () banked
  8566  0070C8  5186               	movf	_width& (0+255),w,b
  8567  0070CA  1187               	iorwf	(_width+1)& (0+255),w,b
  8568  0070CC  A4D8               	btfss	status,2,c
  8569  0070CE  EF6B  F038         	goto	u3711
  8570  0070D2  EF6E  F038         	goto	u3710
  8571  0070D6                     u3711:
  8572  0070D6  FFFF               	dw	65535	; assembler added errata NOP
  8573  0070D8  EF75  F038         	goto	l3593
  8574  0070DC                     u3710:
  8575  0070DC  FFFF               	dw	65535	; assembler added errata NOP
  8576  0070DE                     
  8577                           ; BSR set to: 0
  8578  0070DE  C086  F01F         	movff	_width,ctoa@w
  8579  0070E2  C087  F020         	movff	_width+1,ctoa@w+1
  8580  0070E6  EF7C  F038         	goto	l3595
  8581  0070EA                     l3593:
  8582  0070EA  FFFF               	dw	65535	; assembler added errata NOP
  8583                           
  8584                           ; BSR set to: 0
  8585  0070EC  0EFF               	movlw	255
  8586  0070EE  2586               	addwf	_width& (0+255),w,b
  8587  0070F0  6E1F               	movwf	ctoa@w^0,c
  8588  0070F2  0EFF               	movlw	255
  8589  0070F4  2187               	addwfc	(_width+1)& (0+255),w,b
  8590  0070F6  6E20               	movwf	(ctoa@w+1)^0,c
  8591  0070F8                     l3595:
  8592  0070F8  FFFF               	dw	65535	; assembler added errata NOP
  8593                           
  8594                           ; BSR set to: 0
  8595                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 267:     dbuf[0] 
      +                          = c;
  8596  0070FA  C01E  F092         	movff	ctoa@c,_dbuf
  8597  0070FE                     
  8598                           ; BSR set to: 0
  8599                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 268:     dbuf[1] 
      +                          = '\0';
  8600  0070FE  0E00               	movlw	0
  8601  007100  6F93               	movwf	(_dbuf+1)& (0+255),b
  8602  007102                     
  8603                           ; BSR set to: 0
  8604                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 269:     return p
      +                          ad(fp, &dbuf[0], w);
  8605  007102  C01C  F011         	movff	ctoa@fp,pad@fp
  8606  007106  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  8607  00710A  0E92               	movlw	low _dbuf
  8608  00710C  6E13               	movwf	pad@buf^0,c
  8609  00710E  0E00               	movlw	high _dbuf
  8610  007110  6E14               	movwf	(pad@buf+1)^0,c
  8611  007112  C01F  F015         	movff	ctoa@w,pad@p
  8612  007116  C020  F016         	movff	ctoa@w+1,pad@p+1
  8613  00711A  ECF6  F03B         	call	_pad	;wreg free
  8614  00711E  C011  F01C         	movff	?_pad,?_ctoa
  8615  007122  C012  F01D         	movff	?_pad+1,?_ctoa+1
  8616  007126  0012               	return		;funcret
  8617  007128  FFFF               	dw	65535	; errata NOP
  8618  00712A                     __end_of_ctoa:
  8619                           	callstack 0
  8620                           
  8621 ;; *************** function _pad *****************
  8622 ;; Defined at:
  8623 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  8624 ;; Parameters:    Size  Location     Type
  8625 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  8626 ;;		 -> vsnprintf@f(6), 
  8627 ;;  buf             2   18[COMRAM] PTR unsigned char 
  8628 ;;		 -> dbuf(32), 
  8629 ;;  p               2   20[COMRAM] int 
  8630 ;; Auto vars:     Size  Location     Type
  8631 ;;  w               2   25[COMRAM] int 
  8632 ;;  i               2   23[COMRAM] int 
  8633 ;; Return value:  Size  Location     Type
  8634 ;;                  2   16[COMRAM] int 
  8635 ;; Registers used:
  8636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8637 ;; Tracked objects:
  8638 ;;		On entry : 0/0
  8639 ;;		On exit  : 0/0
  8640 ;;		Unchanged: 0/0
  8641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8642 ;;      Params:         6       0       0       0       0       0       0
  8643 ;;      Locals:         4       0       0       0       0       0       0
  8644 ;;      Temps:          1       0       0       0       0       0       0
  8645 ;;      Totals:        11       0       0       0       0       0       0
  8646 ;;Total ram usage:       11 bytes
  8647 ;; Hardware stack levels used:    1
  8648 ;; Hardware stack levels required when called:    4
  8649 ;; This function calls:
  8650 ;;		_fputc
  8651 ;;		_fputs
  8652 ;;		_strlen
  8653 ;; This function is called by:
  8654 ;;		_ctoa
  8655 ;;		_dtoa
  8656 ;;		_otoa
  8657 ;;		_utoa
  8658 ;;		_xtoa
  8659 ;; This function uses a non-reentrant model
  8660 ;;
  8661                           
  8662                           	psect	text23
  8663  0077EC                     __ptext23:
  8664                           	callstack 0
  8665  0077EC                     _pad:
  8666                           	callstack 0
  8667  0077EC  FFFF               	dw	65535	; assembler added errata NOP
  8668  0077EE                     
  8669                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  8670  0077EE  A07D               	btfss	_flags^0,0,c
  8671  0077F0  EFFC  F03B         	goto	u3551
  8672  0077F4  EFFF  F03B         	goto	u3550
  8673  0077F8                     u3551:
  8674  0077F8  FFFF               	dw	65535	; assembler added errata NOP
  8675  0077FA  EF0A  F03C         	goto	l3533
  8676  0077FE                     u3550:
  8677  0077FE  FFFF               	dw	65535	; assembler added errata NOP
  8678  007800                     
  8679                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  8680  007800  C013  F00A         	movff	pad@buf,fputs@s
  8681  007804  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8682  007808  C011  F00C         	movff	pad@fp,fputs@fp
  8683  00780C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8684  007810  EC0A  F038         	call	_fputs	;wreg free
  8685  007814                     l3533:
  8686  007814  FFFF               	dw	65535	; assembler added errata NOP
  8687                           
  8688                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  8689  007816  BE16               	btfsc	(pad@p+1)^0,7,c
  8690  007818  EF10  F03C         	goto	u3561
  8691  00781C  EF13  F03C         	goto	u3560
  8692  007820                     u3561:
  8693  007820  FFFF               	dw	65535	; assembler added errata NOP
  8694  007822  EF1A  F03C         	goto	l3537
  8695  007826                     u3560:
  8696  007826  FFFF               	dw	65535	; assembler added errata NOP
  8697  007828  C015  F01A         	movff	pad@p,pad@w
  8698  00782C  C016  F01B         	movff	pad@p+1,pad@w+1
  8699  007830  EF1F  F03C         	goto	l1072
  8700  007834                     l3537:
  8701  007834  FFFF               	dw	65535	; assembler added errata NOP
  8702  007836  0E00               	movlw	0
  8703  007838  6E1B               	movwf	(pad@w+1)^0,c
  8704  00783A  0E00               	movlw	0
  8705  00783C  6E1A               	movwf	pad@w^0,c
  8706  00783E                     l1072:
  8707  00783E  FFFF               	dw	65535	; assembler added errata NOP
  8708                           
  8709                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  8710  007840  0E00               	movlw	0
  8711  007842  6E19               	movwf	(pad@i+1)^0,c
  8712  007844  0E00               	movlw	0
  8713  007846  6E18               	movwf	pad@i^0,c
  8714                           
  8715                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8716  007848  EF33  F03C         	goto	l3543
  8717  00784C                     l3539:
  8718  00784C  FFFF               	dw	65535	; assembler added errata NOP
  8719                           
  8720                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  8721  00784E  0E00               	movlw	0
  8722  007850  6E02               	movwf	(fputc@c+1)^0,c
  8723  007852  0E20               	movlw	32
  8724  007854  6E01               	movwf	fputc@c^0,c
  8725  007856  C011  F003         	movff	pad@fp,fputc@fp
  8726  00785A  C012  F004         	movff	pad@fp+1,fputc@fp+1
  8727  00785E  EC85  F03B         	call	_fputc	;wreg free
  8728  007862                     
  8729                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  8730  007862  4A18               	infsnz	pad@i^0,f,c
  8731  007864  2A19               	incf	(pad@i+1)^0,f,c
  8732  007866                     l3543:
  8733  007866  FFFF               	dw	65535	; assembler added errata NOP
  8734                           
  8735                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8736  007868  501A               	movf	pad@w^0,w,c
  8737  00786A  5C18               	subwf	pad@i^0,w,c
  8738  00786C  5019               	movf	(pad@i+1)^0,w,c
  8739  00786E  0A80               	xorlw	128
  8740  007870  6E17               	movwf	??_pad^0,c
  8741  007872  501B               	movf	(pad@w+1)^0,w,c
  8742  007874  0A80               	xorlw	128
  8743  007876  5817               	subwfb	??_pad^0,w,c
  8744  007878  A0D8               	btfss	status,0,c
  8745  00787A  EF41  F03C         	goto	u3571
  8746  00787E  EF44  F03C         	goto	u3570
  8747  007882                     u3571:
  8748  007882  FFFF               	dw	65535	; assembler added errata NOP
  8749  007884  EF26  F03C         	goto	l3539
  8750  007888                     u3570:
  8751  007888  FFFF               	dw	65535	; assembler added errata NOP
  8752  00788A                     
  8753                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  8754  00788A  B07D               	btfsc	_flags^0,0,c
  8755  00788C  EF4A  F03C         	goto	u3581
  8756  007890  EF4D  F03C         	goto	u3580
  8757  007894                     u3581:
  8758  007894  FFFF               	dw	65535	; assembler added errata NOP
  8759  007896  EF58  F03C         	goto	l3547
  8760  00789A                     u3580:
  8761  00789A  FFFF               	dw	65535	; assembler added errata NOP
  8762  00789C                     
  8763                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  8764  00789C  C013  F00A         	movff	pad@buf,fputs@s
  8765  0078A0  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8766  0078A4  C011  F00C         	movff	pad@fp,fputs@fp
  8767  0078A8  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8768  0078AC  EC0A  F038         	call	_fputs	;wreg free
  8769  0078B0                     l3547:
  8770  0078B0  FFFF               	dw	65535	; assembler added errata NOP
  8771                           
  8772                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  8773  0078B2  C013  F001         	movff	pad@buf,strlen@s
  8774  0078B6  C014  F002         	movff	pad@buf+1,strlen@s+1
  8775  0078BA  ECD2  F01F         	call	_strlen	;wreg free
  8776  0078BE  501A               	movf	pad@w^0,w,c
  8777  0078C0  2401               	addwf	?_strlen^0,w,c
  8778  0078C2  6E11               	movwf	?_pad^0,c
  8779  0078C4  501B               	movf	(pad@w+1)^0,w,c
  8780  0078C6  2002               	addwfc	(?_strlen+1)^0,w,c
  8781  0078C8  6E12               	movwf	(?_pad+1)^0,c
  8782  0078CA  0012               	return		;funcret
  8783  0078CC  FFFF               	dw	65535	; errata NOP
  8784  0078CE                     __end_of_pad:
  8785                           	callstack 0
  8786                           
  8787 ;; *************** function _strlen *****************
  8788 ;; Defined at:
  8789 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  8790 ;; Parameters:    Size  Location     Type
  8791 ;;  s               2    0[COMRAM] PTR const unsigned char 
  8792 ;;		 -> stoa@nuls(7), dbuf(32), ?_snprintf(2), STR_6(7), 
  8793 ;;		 -> STR_5(9), STR_4(39), STR_3(9), STR_2(64), 
  8794 ;;		 -> STR_1(49), 
  8795 ;; Auto vars:     Size  Location     Type
  8796 ;;  a               2    2[COMRAM] PTR const unsigned char 
  8797 ;;		 -> stoa@nuls(7), dbuf(32), ?_snprintf(2), STR_6(7), 
  8798 ;;		 -> STR_5(9), STR_4(39), STR_3(9), STR_2(64), 
  8799 ;;		 -> STR_1(49), 
  8800 ;; Return value:  Size  Location     Type
  8801 ;;                  2    0[COMRAM] unsigned int 
  8802 ;; Registers used:
  8803 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  8804 ;; Tracked objects:
  8805 ;;		On entry : 0/0
  8806 ;;		On exit  : 0/0
  8807 ;;		Unchanged: 0/0
  8808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8809 ;;      Params:         2       0       0       0       0       0       0
  8810 ;;      Locals:         2       0       0       0       0       0       0
  8811 ;;      Temps:          0       0       0       0       0       0       0
  8812 ;;      Totals:         4       0       0       0       0       0       0
  8813 ;;Total ram usage:        4 bytes
  8814 ;; Hardware stack levels used:    1
  8815 ;; Hardware stack levels required when called:    1
  8816 ;; This function calls:
  8817 ;;		Nothing
  8818 ;; This function is called by:
  8819 ;;		_pad
  8820 ;;		_stoa
  8821 ;; This function uses a non-reentrant model
  8822 ;;
  8823                           
  8824                           	psect	text24
  8825  003FA4                     __ptext24:
  8826                           	callstack 0
  8827  003FA4                     _strlen:
  8828                           	callstack 0
  8829  003FA4  FFFF               	dw	65535	; assembler added errata NOP
  8830  003FA6  C001  F003         	movff	strlen@s,strlen@a
  8831  003FAA  C002  F004         	movff	strlen@s+1,strlen@a+1
  8832  003FAE  EFDC  F01F         	goto	l3395
  8833  003FB2                     l3393:
  8834  003FB2  FFFF               	dw	65535	; assembler added errata NOP
  8835  003FB4  4A01               	infsnz	strlen@s^0,f,c
  8836  003FB6  2A02               	incf	(strlen@s+1)^0,f,c
  8837  003FB8                     l3395:
  8838  003FB8  FFFF               	dw	65535	; assembler added errata NOP
  8839  003FBA  C001  FFF6         	movff	strlen@s,tblptrl
  8840  003FBE  C002  FFF7         	movff	strlen@s+1,tblptrh
  8841  003FC2  6AF8               	clrf	tblptru,c
  8842  003FC4  0E05               	movlw	(high __ramtop+-1)
  8843  003FC6  64F7               	cpfsgt	tblptrh,c
  8844  003FC8  D004               	bra	u3317
  8845  003FCA  0008               	tblrd		*
  8846  003FCC  FFFF               	dw	65535	; errata NOP
  8847  003FCE  50F5               	movf	tablat,w,c
  8848  003FD0  D005               	bra	u3310
  8849  003FD2                     u3317:
  8850  003FD2  CFF6 FFE1          	movff	tblptrl,fsr1l
  8851  003FD6  CFF7 FFE2          	movff	tblptrh,fsr1h
  8852  003FDA  50E7               	movf	indf1,w,c
  8853  003FDC                     u3310:
  8854  003FDC  0900               	iorlw	0
  8855  003FDE  A4D8               	btfss	status,2,c
  8856  003FE0  EFF4  F01F         	goto	u3321
  8857  003FE4  EFF7  F01F         	goto	u3320
  8858  003FE8                     u3321:
  8859  003FE8  FFFF               	dw	65535	; assembler added errata NOP
  8860  003FEA  EFD9  F01F         	goto	l3393
  8861  003FEE                     u3320:
  8862  003FEE  FFFF               	dw	65535	; assembler added errata NOP
  8863  003FF0  5003               	movf	strlen@a^0,w,c
  8864  003FF2  5C01               	subwf	strlen@s^0,w,c
  8865  003FF4  6E01               	movwf	?_strlen^0,c
  8866  003FF6  5004               	movf	(strlen@a+1)^0,w,c
  8867  003FF8  5802               	subwfb	(strlen@s+1)^0,w,c
  8868  003FFA  6E02               	movwf	(?_strlen+1)^0,c
  8869  003FFC  0012               	return		;funcret
  8870  003FFE  FFFF               	dw	65535	; errata NOP
  8871  004000                     __end_of_strlen:
  8872                           	callstack 0
  8873                           
  8874 ;; *************** function _fputs *****************
  8875 ;; Defined at:
  8876 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  8877 ;; Parameters:    Size  Location     Type
  8878 ;;  s               2    9[COMRAM] PTR const unsigned char 
  8879 ;;		 -> dbuf(32), 
  8880 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  8881 ;;		 -> vsnprintf@f(6), 
  8882 ;; Auto vars:     Size  Location     Type
  8883 ;;  i               2   14[COMRAM] int 
  8884 ;;  c               1   13[COMRAM] unsigned char 
  8885 ;; Return value:  Size  Location     Type
  8886 ;;                  2    9[COMRAM] int 
  8887 ;; Registers used:
  8888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8889 ;; Tracked objects:
  8890 ;;		On entry : 0/0
  8891 ;;		On exit  : 0/0
  8892 ;;		Unchanged: 0/0
  8893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8894 ;;      Params:         4       0       0       0       0       0       0
  8895 ;;      Locals:         3       0       0       0       0       0       0
  8896 ;;      Temps:          0       0       0       0       0       0       0
  8897 ;;      Totals:         7       0       0       0       0       0       0
  8898 ;;Total ram usage:        7 bytes
  8899 ;; Hardware stack levels used:    1
  8900 ;; Hardware stack levels required when called:    3
  8901 ;; This function calls:
  8902 ;;		_fputc
  8903 ;; This function is called by:
  8904 ;;		_pad
  8905 ;; This function uses a non-reentrant model
  8906 ;;
  8907                           
  8908                           	psect	text25
  8909  007014                     __ptext25:
  8910                           	callstack 0
  8911  007014                     _fputs:
  8912                           	callstack 0
  8913  007014  FFFF               	dw	65535	; assembler added errata NOP
  8914  007016  0E00               	movlw	0
  8915  007018  6E10               	movwf	(fputs@i+1)^0,c
  8916  00701A  0E00               	movlw	0
  8917  00701C  6E0F               	movwf	fputs@i^0,c
  8918  00701E  EF1D  F038         	goto	l3389
  8919  007022                     l3385:
  8920  007022  FFFF               	dw	65535	; assembler added errata NOP
  8921  007024  C00E  F001         	movff	fputs@c,fputc@c
  8922  007028  6A02               	clrf	(fputc@c+1)^0,c
  8923  00702A  C00C  F003         	movff	fputs@fp,fputc@fp
  8924  00702E  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  8925  007032  EC85  F03B         	call	_fputc	;wreg free
  8926  007036  4A0F               	infsnz	fputs@i^0,f,c
  8927  007038  2A10               	incf	(fputs@i+1)^0,f,c
  8928  00703A                     l3389:
  8929  00703A  FFFF               	dw	65535	; assembler added errata NOP
  8930  00703C  500F               	movf	fputs@i^0,w,c
  8931  00703E  240A               	addwf	fputs@s^0,w,c
  8932  007040  6ED9               	movwf	fsr2l,c
  8933  007042  5010               	movf	(fputs@i+1)^0,w,c
  8934  007044  200B               	addwfc	(fputs@s+1)^0,w,c
  8935  007046  6EDA               	movwf	fsr2h,c
  8936  007048  50DF               	movf	indf2,w,c
  8937  00704A  6E0E               	movwf	fputs@c^0,c
  8938  00704C  500E               	movf	fputs@c^0,w,c
  8939  00704E  A4D8               	btfss	status,2,c
  8940  007050  EF2C  F038         	goto	u3301
  8941  007054  EF2F  F038         	goto	u3300
  8942  007058                     u3301:
  8943  007058  FFFF               	dw	65535	; assembler added errata NOP
  8944  00705A  EF11  F038         	goto	l3385
  8945  00705E                     u3300:
  8946  00705E  FFFF               	dw	65535	; assembler added errata NOP
  8947  007060  0012               	return		;funcret
  8948  007062  FFFF               	dw	65535	; errata NOP
  8949  007064                     __end_of_fputs:
  8950                           	callstack 0
  8951                           
  8952 ;; *************** function _fputc *****************
  8953 ;; Defined at:
  8954 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  8955 ;; Parameters:    Size  Location     Type
  8956 ;;  c               2    0[COMRAM] int 
  8957 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  8958 ;;		 -> vsnprintf@f(6), 
  8959 ;; Auto vars:     Size  Location     Type
  8960 ;;		None
  8961 ;; Return value:  Size  Location     Type
  8962 ;;                  2    0[COMRAM] int 
  8963 ;; Registers used:
  8964 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8965 ;; Tracked objects:
  8966 ;;		On entry : 0/0
  8967 ;;		On exit  : 0/0
  8968 ;;		Unchanged: 0/0
  8969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8970 ;;      Params:         4       0       0       0       0       0       0
  8971 ;;      Locals:         0       0       0       0       0       0       0
  8972 ;;      Temps:          5       0       0       0       0       0       0
  8973 ;;      Totals:         9       0       0       0       0       0       0
  8974 ;;Total ram usage:        9 bytes
  8975 ;; Hardware stack levels used:    1
  8976 ;; Hardware stack levels required when called:    2
  8977 ;; This function calls:
  8978 ;;		_putch
  8979 ;; This function is called by:
  8980 ;;		_pad
  8981 ;;		_stoa
  8982 ;;		_vfpfcnvrt
  8983 ;;		_fputs
  8984 ;; This function uses a non-reentrant model
  8985 ;;
  8986                           
  8987                           	psect	text26
  8988  00770A                     __ptext26:
  8989                           	callstack 0
  8990  00770A                     _fputc:
  8991                           	callstack 0
  8992  00770A  FFFF               	dw	65535	; assembler added errata NOP
  8993  00770C  5003               	movf	fputc@fp^0,w,c
  8994  00770E  1004               	iorwf	(fputc@fp+1)^0,w,c
  8995  007710  B4D8               	btfsc	status,2,c
  8996  007712  EF8D  F03B         	goto	u3261
  8997  007716  EF90  F03B         	goto	u3260
  8998  00771A                     u3261:
  8999  00771A  FFFF               	dw	65535	; assembler added errata NOP
  9000  00771C  EF9B  F03B         	goto	l3373
  9001  007720                     u3260:
  9002  007720  FFFF               	dw	65535	; assembler added errata NOP
  9003  007722  5003               	movf	fputc@fp^0,w,c
  9004  007724  1004               	iorwf	(fputc@fp+1)^0,w,c
  9005  007726  A4D8               	btfss	status,2,c
  9006  007728  EF98  F03B         	goto	u3271
  9007  00772C  EF9B  F03B         	goto	u3270
  9008  007730                     u3271:
  9009  007730  FFFF               	dw	65535	; assembler added errata NOP
  9010  007732  EFA1  F03B         	goto	l3375
  9011  007736                     u3270:
  9012  007736                     l3373:
  9013  007736  FFFF               	dw	65535	; assembler added errata NOP
  9014  007738  5001               	movf	fputc@c^0,w,c
  9015  00773A  ECEF  F035         	call	_putch
  9016  00773E  EFF3  F03B         	goto	l1354
  9017  007742                     l3375:
  9018  007742  FFFF               	dw	65535	; assembler added errata NOP
  9019  007744  EE20 F004          	lfsr	2,4
  9020  007748  5003               	movf	fputc@fp^0,w,c
  9021  00774A  26D9               	addwf	fsr2l,f,c
  9022  00774C  5004               	movf	(fputc@fp+1)^0,w,c
  9023  00774E  22DA               	addwfc	fsr2h,f,c
  9024  007750  50DE               	movf	postinc2,w,c
  9025  007752  10DE               	iorwf	postinc2,w,c
  9026  007754  B4D8               	btfsc	status,2,c
  9027  007756  EFAF  F03B         	goto	u3281
  9028  00775A  EFB2  F03B         	goto	u3280
  9029  00775E                     u3281:
  9030  00775E  FFFF               	dw	65535	; assembler added errata NOP
  9031  007760  EFCF  F03B         	goto	l3379
  9032  007764                     u3280:
  9033  007764  FFFF               	dw	65535	; assembler added errata NOP
  9034  007766  EE20 F004          	lfsr	2,4
  9035  00776A  5003               	movf	fputc@fp^0,w,c
  9036  00776C  26D9               	addwf	fsr2l,f,c
  9037  00776E  5004               	movf	(fputc@fp+1)^0,w,c
  9038  007770  22DA               	addwfc	fsr2h,f,c
  9039  007772  EE10 F002          	lfsr	1,2
  9040  007776  5003               	movf	fputc@fp^0,w,c
  9041  007778  26E1               	addwf	fsr1l,f,c
  9042  00777A  5004               	movf	(fputc@fp+1)^0,w,c
  9043  00777C  22E2               	addwfc	fsr1h,f,c
  9044  00777E  50DE               	movf	postinc2,w,c
  9045  007780  5CE6               	subwf	postinc1,w,c
  9046  007782  50E6               	movf	postinc1,w,c
  9047  007784  0A80               	xorlw	128
  9048  007786  6E09               	movwf	(??_fputc+4)^0,c
  9049  007788  50DE               	movf	postinc2,w,c
  9050  00778A  0A80               	xorlw	128
  9051  00778C  5809               	subwfb	(??_fputc+4)^0,w,c
  9052  00778E  B0D8               	btfsc	status,0,c
  9053  007790  EFCC  F03B         	goto	u3291
  9054  007794  EFCF  F03B         	goto	u3290
  9055  007798                     u3291:
  9056  007798  FFFF               	dw	65535	; assembler added errata NOP
  9057  00779A  EFF3  F03B         	goto	l1354
  9058  00779E                     u3290:
  9059  00779E                     l3379:
  9060  00779E  FFFF               	dw	65535	; assembler added errata NOP
  9061  0077A0  EE20 F002          	lfsr	2,2
  9062  0077A4  5003               	movf	fputc@fp^0,w,c
  9063  0077A6  26D9               	addwf	fsr2l,f,c
  9064  0077A8  5004               	movf	(fputc@fp+1)^0,w,c
  9065  0077AA  22DA               	addwfc	fsr2h,f,c
  9066  0077AC  CFDE F005          	movff	postinc2,??_fputc
  9067  0077B0  CFDD F006          	movff	postdec2,??_fputc+1
  9068  0077B4  C003  FFD9         	movff	fputc@fp,fsr2l
  9069  0077B8  C004  FFDA         	movff	fputc@fp+1,fsr2h
  9070  0077BC  CFDE F007          	movff	postinc2,??_fputc+2
  9071  0077C0  CFDD F008          	movff	postdec2,??_fputc+3
  9072  0077C4  5005               	movf	??_fputc^0,w,c
  9073  0077C6  2407               	addwf	(??_fputc+2)^0,w,c
  9074  0077C8  6ED9               	movwf	fsr2l,c
  9075  0077CA  5006               	movf	(??_fputc+1)^0,w,c
  9076  0077CC  2008               	addwfc	(??_fputc+3)^0,w,c
  9077  0077CE  6EDA               	movwf	fsr2h,c
  9078  0077D0  C001  FFDF         	movff	fputc@c,indf2
  9079  0077D4  EE20 F002          	lfsr	2,2
  9080  0077D8  5003               	movf	fputc@fp^0,w,c
  9081  0077DA  26D9               	addwf	fsr2l,f,c
  9082  0077DC  5004               	movf	(fputc@fp+1)^0,w,c
  9083  0077DE  22DA               	addwfc	fsr2h,f,c
  9084  0077E0  2ADE               	incf	postinc2,f,c
  9085  0077E2  0E00               	movlw	0
  9086  0077E4  22DD               	addwfc	postdec2,f,c
  9087  0077E6                     l1354:
  9088  0077E6  FFFF               	dw	65535	; assembler added errata NOP
  9089  0077E8  0012               	return		;funcret
  9090  0077EA  FFFF               	dw	65535	; errata NOP
  9091  0077EC                     __end_of_fputc:
  9092                           	callstack 0
  9093                           
  9094 ;; *************** function _putch *****************
  9095 ;; Defined at:
  9096 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
  9097 ;; Parameters:    Size  Location     Type
  9098 ;;  c               1    wreg     unsigned char 
  9099 ;; Auto vars:     Size  Location     Type
  9100 ;;  c               1    0[COMRAM] unsigned char 
  9101 ;; Return value:  Size  Location     Type
  9102 ;;                  1    wreg      void 
  9103 ;; Registers used:
  9104 ;;		wreg
  9105 ;; Tracked objects:
  9106 ;;		On entry : 0/0
  9107 ;;		On exit  : 0/0
  9108 ;;		Unchanged: 0/0
  9109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9110 ;;      Params:         0       0       0       0       0       0       0
  9111 ;;      Locals:         0       0       0       0       0       0       0
  9112 ;;      Temps:          0       0       0       0       0       0       0
  9113 ;;      Totals:         0       0       0       0       0       0       0
  9114 ;;Total ram usage:        0 bytes
  9115 ;; Hardware stack levels used:    1
  9116 ;; Hardware stack levels required when called:    1
  9117 ;; This function calls:
  9118 ;;		Nothing
  9119 ;; This function is called by:
  9120 ;;		_fputc
  9121 ;; This function uses a non-reentrant model
  9122 ;;
  9123                           
  9124                           	psect	text27
  9125  006BDE                     __ptext27:
  9126                           	callstack 0
  9127  006BDE                     _putch:
  9128                           	callstack 0
  9129  006BDE  FFFF               	dw	65535	; assembler added errata NOP
  9130  006BE0  0012               	return		;funcret
  9131  006BE2  FFFF               	dw	65535	; errata NOP
  9132  006BE4                     __end_of_putch:
  9133                           	callstack 0
  9134                           
  9135 ;; *************** function _atoi *****************
  9136 ;; Defined at:
  9137 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
  9138 ;; Parameters:    Size  Location     Type
  9139 ;;  s               2    7[COMRAM] PTR const unsigned char 
  9140 ;;		 -> STR_8(3), 
  9141 ;; Auto vars:     Size  Location     Type
  9142 ;;  n               2   20[COMRAM] int 
  9143 ;;  neg             2   13[COMRAM] int 
  9144 ;; Return value:  Size  Location     Type
  9145 ;;                  2    7[COMRAM] int 
  9146 ;; Registers used:
  9147 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9148 ;; Tracked objects:
  9149 ;;		On entry : 0/0
  9150 ;;		On exit  : 0/0
  9151 ;;		Unchanged: 0/0
  9152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9153 ;;      Params:         2       0       0       0       0       0       0
  9154 ;;      Locals:         9       0       0       0       0       0       0
  9155 ;;      Temps:          4       0       0       0       0       0       0
  9156 ;;      Totals:        15       0       0       0       0       0       0
  9157 ;;Total ram usage:       15 bytes
  9158 ;; Hardware stack levels used:    1
  9159 ;; Hardware stack levels required when called:    2
  9160 ;; This function calls:
  9161 ;;		___wmul
  9162 ;;		_isdigit
  9163 ;;		_isspace
  9164 ;; This function is called by:
  9165 ;;		_vfpfcnvrt
  9166 ;; This function uses a non-reentrant model
  9167 ;;
  9168                           
  9169                           	psect	text28
  9170  003822                     __ptext28:
  9171                           	callstack 0
  9172  003822                     _atoi:
  9173                           	callstack 0
  9174  003822  FFFF               	dw	65535	; assembler added errata NOP
  9175  003824  0E00               	movlw	0
  9176  003826  6E16               	movwf	(atoi@n+1)^0,c
  9177  003828  0E00               	movlw	0
  9178  00382A  6E15               	movwf	atoi@n^0,c
  9179  00382C  0E00               	movlw	0
  9180  00382E  6E0F               	movwf	(atoi@neg+1)^0,c
  9181  003830  0E00               	movlw	0
  9182  003832  6E0E               	movwf	atoi@neg^0,c
  9183  003834  EF1F  F01C         	goto	l3861
  9184  003838                     l3859:
  9185  003838  FFFF               	dw	65535	; assembler added errata NOP
  9186  00383A  4A08               	infsnz	atoi@s^0,f,c
  9187  00383C  2A09               	incf	(atoi@s+1)^0,f,c
  9188  00383E                     l3861:
  9189  00383E  FFFF               	dw	65535	; assembler added errata NOP
  9190  003840  0E01               	movlw	1
  9191  003842  6E14               	movwf	_atoi$1679^0,c
  9192  003844  C008  FFF6         	movff	atoi@s,tblptrl
  9193  003848  C009  FFF7         	movff	atoi@s+1,tblptrh
  9194  00384C                     	if	0	;tblptru may be non-zero
  9195  00384C                     	endif
  9196  00384C                     	if	0	;tblptru may be non-zero
  9197  00384C                     	endif
  9198  00384C  0008               	tblrd		*
  9199  00384E  FFFF               	dw	65535	; errata NOP
  9200  003850  50F5               	movf	tablat,w,c
  9201  003852  0A20               	xorlw	32
  9202  003854  B4D8               	btfsc	status,2,c
  9203  003856  EF2F  F01C         	goto	u4311
  9204  00385A  EF32  F01C         	goto	u4310
  9205  00385E                     u4311:
  9206  00385E  FFFF               	dw	65535	; assembler added errata NOP
  9207  003860  EF53  F01C         	goto	l3869
  9208  003864                     u4310:
  9209  003864  FFFF               	dw	65535	; assembler added errata NOP
  9210  003866  0EF7               	movlw	247
  9211  003868  6E0A               	movwf	??_atoi^0,c
  9212  00386A  0EFF               	movlw	255
  9213  00386C  6E0B               	movwf	(??_atoi+1)^0,c
  9214  00386E  C008  FFF6         	movff	atoi@s,tblptrl
  9215  003872  C009  FFF7         	movff	atoi@s+1,tblptrh
  9216  003876                     	if	0	;tblptru may be non-zero
  9217  003876                     	endif
  9218  003876                     	if	0	;tblptru may be non-zero
  9219  003876                     	endif
  9220  003876  0008               	tblrd		*
  9221  003878  FFFF               	dw	65535	; errata NOP
  9222  00387A  50F5               	movf	tablat,w,c
  9223  00387C  6E0C               	movwf	(??_atoi+2)^0,c
  9224  00387E  6A0D               	clrf	(??_atoi+3)^0,c
  9225  003880  500A               	movf	??_atoi^0,w,c
  9226  003882  260C               	addwf	(??_atoi+2)^0,f,c
  9227  003884  500B               	movf	(??_atoi+1)^0,w,c
  9228  003886  220D               	addwfc	(??_atoi+3)^0,f,c
  9229  003888  500D               	movf	(??_atoi+3)^0,w,c
  9230  00388A  E10A               	bnz	u4320
  9231  00388C  0E05               	movlw	5
  9232  00388E  5C0C               	subwf	(??_atoi+2)^0,w,c
  9233  003890  A0D8               	btfss	status,0,c
  9234  003892  EF4D  F01C         	goto	u4321
  9235  003896  EF50  F01C         	goto	u4320
  9236  00389A                     u4321:
  9237  00389A  FFFF               	dw	65535	; assembler added errata NOP
  9238  00389C  EF53  F01C         	goto	l3869
  9239  0038A0                     u4320:
  9240  0038A0  FFFF               	dw	65535	; assembler added errata NOP
  9241  0038A2  0E00               	movlw	0
  9242  0038A4  6E14               	movwf	_atoi$1679^0,c
  9243  0038A6                     l3869:
  9244  0038A6  FFFF               	dw	65535	; assembler added errata NOP
  9245  0038A8  C014  F010         	movff	_atoi$1679,_atoi$1678
  9246  0038AC  6A11               	clrf	(_atoi$1678+1)^0,c
  9247  0038AE  5010               	movf	_atoi$1678^0,w,c
  9248  0038B0  1011               	iorwf	(_atoi$1678+1)^0,w,c
  9249  0038B2  A4D8               	btfss	status,2,c
  9250  0038B4  EF5E  F01C         	goto	u4331
  9251  0038B8  EF61  F01C         	goto	u4330
  9252  0038BC                     u4331:
  9253  0038BC  FFFF               	dw	65535	; assembler added errata NOP
  9254  0038BE  EF1C  F01C         	goto	l3859
  9255  0038C2                     u4330:
  9256  0038C2  FFFF               	dw	65535	; assembler added errata NOP
  9257  0038C4  EF6E  F01C         	goto	l3879
  9258  0038C8                     l3875:
  9259  0038C8  FFFF               	dw	65535	; assembler added errata NOP
  9260  0038CA  0E00               	movlw	0
  9261  0038CC  6E0F               	movwf	(atoi@neg+1)^0,c
  9262  0038CE  0E01               	movlw	1
  9263  0038D0  6E0E               	movwf	atoi@neg^0,c
  9264  0038D2                     l3877:
  9265  0038D2  FFFF               	dw	65535	; assembler added errata NOP
  9266  0038D4  4A08               	infsnz	atoi@s^0,f,c
  9267  0038D6  2A09               	incf	(atoi@s+1)^0,f,c
  9268  0038D8  EFA8  F01C         	goto	l3885
  9269  0038DC                     l3879:
  9270  0038DC  FFFF               	dw	65535	; assembler added errata NOP
  9271  0038DE  C008  FFF6         	movff	atoi@s,tblptrl
  9272  0038E2  C009  FFF7         	movff	atoi@s+1,tblptrh
  9273  0038E6                     	if	0	;tblptru may be non-zero
  9274  0038E6                     	endif
  9275  0038E6                     	if	0	;tblptru may be non-zero
  9276  0038E6                     	endif
  9277  0038E6  0008               	tblrd		*
  9278  0038E8  FFFF               	dw	65535	; errata NOP
  9279  0038EA  50F5               	movf	tablat,w,c
  9280  0038EC  6E0A               	movwf	??_atoi^0,c
  9281  0038EE  6A0B               	clrf	(??_atoi+1)^0,c
  9282                           
  9283                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9284                           ; Switch size 1, requested type "simple"
  9285                           ; Number of cases is 1, Range of values is 0 to 0
  9286                           ; switch strategies available:
  9287                           ; Name         Instructions Cycles
  9288                           ; simple_byte            4     3 (average)
  9289                           ;	Chosen strategy is simple_byte
  9290  0038F0  500B               	movf	(??_atoi+1)^0,w,c
  9291  0038F2  0A00               	xorlw	0	; case 0
  9292  0038F4  B4D8               	btfsc	status,2,c
  9293  0038F6  EF7F  F01C         	goto	l5341
  9294  0038FA  EFA8  F01C         	goto	l3885
  9295  0038FE                     l5341:
  9296  0038FE  FFFF               	dw	65535	; assembler added errata NOP
  9297                           
  9298                           ; Switch size 1, requested type "simple"
  9299                           ; Number of cases is 2, Range of values is 43 to 45
  9300                           ; switch strategies available:
  9301                           ; Name         Instructions Cycles
  9302                           ; simple_byte            7     4 (average)
  9303                           ;	Chosen strategy is simple_byte
  9304  003900  500A               	movf	??_atoi^0,w,c
  9305  003902  0A2B               	xorlw	43	; case 43
  9306  003904  B4D8               	btfsc	status,2,c
  9307  003906  EF69  F01C         	goto	l3877
  9308  00390A  0A06               	xorlw	6	; case 45
  9309  00390C  B4D8               	btfsc	status,2,c
  9310  00390E  EF64  F01C         	goto	l3875
  9311  003912  EFA8  F01C         	goto	l3885
  9312  003916                     l3881:
  9313  003916  FFFF               	dw	65535	; assembler added errata NOP
  9314  003918  C015  F001         	movff	atoi@n,___wmul@multiplier
  9315  00391C  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  9316  003920  0E00               	movlw	0
  9317  003922  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9318  003924  0E0A               	movlw	10
  9319  003926  6E03               	movwf	___wmul@multiplicand^0,c
  9320  003928  EC7A  F036         	call	___wmul	;wreg free
  9321  00392C  C008  FFF6         	movff	atoi@s,tblptrl
  9322  003930  C009  FFF7         	movff	atoi@s+1,tblptrh
  9323  003934                     	if	0	;tblptru may be non-zero
  9324  003934                     	endif
  9325  003934                     	if	0	;tblptru may be non-zero
  9326  003934                     	endif
  9327  003934  0008               	tblrd		*
  9328  003936  FFFF               	dw	65535	; errata NOP
  9329  003938  50F5               	movf	tablat,w,c
  9330  00393A  5E01               	subwf	?___wmul^0,f,c
  9331  00393C  0E00               	movlw	0
  9332  00393E  5A02               	subwfb	(?___wmul+1)^0,f,c
  9333  003940  0E30               	movlw	48
  9334  003942  2401               	addwf	?___wmul^0,w,c
  9335  003944  6E15               	movwf	atoi@n^0,c
  9336  003946  0E00               	movlw	0
  9337  003948  2002               	addwfc	(?___wmul+1)^0,w,c
  9338  00394A  6E16               	movwf	(atoi@n+1)^0,c
  9339  00394C  EF69  F01C         	goto	l3877
  9340  003950                     l3885:
  9341  003950  FFFF               	dw	65535	; assembler added errata NOP
  9342  003952  0ED0               	movlw	208
  9343  003954  6E0A               	movwf	??_atoi^0,c
  9344  003956  0EFF               	movlw	255
  9345  003958  6E0B               	movwf	(??_atoi+1)^0,c
  9346  00395A  C008  FFF6         	movff	atoi@s,tblptrl
  9347  00395E  C009  FFF7         	movff	atoi@s+1,tblptrh
  9348  003962                     	if	0	;tblptru may be non-zero
  9349  003962                     	endif
  9350  003962                     	if	0	;tblptru may be non-zero
  9351  003962                     	endif
  9352  003962  0008               	tblrd		*
  9353  003964  FFFF               	dw	65535	; errata NOP
  9354  003966  50F5               	movf	tablat,w,c
  9355  003968  6E0C               	movwf	(??_atoi+2)^0,c
  9356  00396A  6A0D               	clrf	(??_atoi+3)^0,c
  9357  00396C  500A               	movf	??_atoi^0,w,c
  9358  00396E  260C               	addwf	(??_atoi+2)^0,f,c
  9359  003970  500B               	movf	(??_atoi+1)^0,w,c
  9360  003972  220D               	addwfc	(??_atoi+3)^0,f,c
  9361  003974  500D               	movf	(??_atoi+3)^0,w,c
  9362  003976  E10B               	bnz	u4340
  9363  003978  0E0A               	movlw	10
  9364  00397A  5C0C               	subwf	(??_atoi+2)^0,w,c
  9365  00397C  A0D8               	btfss	status,0,c
  9366  00397E  EFC3  F01C         	goto	u4341
  9367  003982  EFC7  F01C         	goto	u4340
  9368  003986                     u4341:
  9369  003986  FFFF               	dw	65535	; assembler added errata NOP
  9370  003988  0E01               	movlw	1
  9371  00398A  EFC9  F01C         	goto	u4350
  9372  00398E                     u4340:
  9373  00398E  FFFF               	dw	65535	; assembler added errata NOP
  9374  003990  0E00               	movlw	0
  9375  003992                     u4350:
  9376  003992  FFFF               	dw	65535	; assembler added errata NOP
  9377  003994  6E12               	movwf	_atoi$1680^0,c
  9378  003996  6A13               	clrf	(_atoi$1680+1)^0,c
  9379  003998  5012               	movf	_atoi$1680^0,w,c
  9380  00399A  1013               	iorwf	(_atoi$1680+1)^0,w,c
  9381  00399C  A4D8               	btfss	status,2,c
  9382  00399E  EFD3  F01C         	goto	u4361
  9383  0039A2  EFD6  F01C         	goto	u4360
  9384  0039A6                     u4361:
  9385  0039A6  FFFF               	dw	65535	; assembler added errata NOP
  9386  0039A8  EF8B  F01C         	goto	l3881
  9387  0039AC                     u4360:
  9388  0039AC  FFFF               	dw	65535	; assembler added errata NOP
  9389  0039AE  500E               	movf	atoi@neg^0,w,c
  9390  0039B0  100F               	iorwf	(atoi@neg+1)^0,w,c
  9391  0039B2  A4D8               	btfss	status,2,c
  9392  0039B4  EFDE  F01C         	goto	u4371
  9393  0039B8  EFE1  F01C         	goto	u4370
  9394  0039BC                     u4371:
  9395  0039BC  FFFF               	dw	65535	; assembler added errata NOP
  9396  0039BE  EFF0  F01C         	goto	l1311
  9397  0039C2                     u4370:
  9398  0039C2  FFFF               	dw	65535	; assembler added errata NOP
  9399  0039C4  C015  F00A         	movff	atoi@n,??_atoi
  9400  0039C8  C016  F00B         	movff	atoi@n+1,??_atoi+1
  9401  0039CC  1E0A               	comf	??_atoi^0,f,c
  9402  0039CE  1E0B               	comf	(??_atoi+1)^0,f,c
  9403  0039D0  4A0A               	infsnz	??_atoi^0,f,c
  9404  0039D2  2A0B               	incf	(??_atoi+1)^0,f,c
  9405  0039D4  C00A  F008         	movff	??_atoi,?_atoi
  9406  0039D8  C00B  F009         	movff	??_atoi+1,?_atoi+1
  9407  0039DC  EFF5  F01C         	goto	l1314
  9408  0039E0                     l1311:
  9409  0039E0  FFFF               	dw	65535	; assembler added errata NOP
  9410  0039E2  C015  F008         	movff	atoi@n,?_atoi
  9411  0039E6  C016  F009         	movff	atoi@n+1,?_atoi+1
  9412  0039EA                     l1314:
  9413  0039EA  FFFF               	dw	65535	; assembler added errata NOP
  9414  0039EC  0012               	return		;funcret
  9415  0039EE  FFFF               	dw	65535	; errata NOP
  9416  0039F0                     __end_of_atoi:
  9417                           	callstack 0
  9418                           
  9419 ;; *************** function _isspace *****************
  9420 ;; Defined at:
  9421 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
  9422 ;; Parameters:    Size  Location     Type
  9423 ;;  c               2    0[COMRAM] int 
  9424 ;; Auto vars:     Size  Location     Type
  9425 ;;		None
  9426 ;; Return value:  Size  Location     Type
  9427 ;;                  2    0[COMRAM] int 
  9428 ;; Registers used:
  9429 ;;		wreg, status,2, status,0
  9430 ;; Tracked objects:
  9431 ;;		On entry : 0/0
  9432 ;;		On exit  : 0/0
  9433 ;;		Unchanged: 0/0
  9434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9435 ;;      Params:         2       0       0       0       0       0       0
  9436 ;;      Locals:         1       0       0       0       0       0       0
  9437 ;;      Temps:          4       0       0       0       0       0       0
  9438 ;;      Totals:         7       0       0       0       0       0       0
  9439 ;;Total ram usage:        7 bytes
  9440 ;; Hardware stack levels used:    1
  9441 ;; Hardware stack levels required when called:    1
  9442 ;; This function calls:
  9443 ;;		Nothing
  9444 ;; This function is called by:
  9445 ;;		_atoi
  9446 ;; This function uses a non-reentrant model
  9447 ;;
  9448                           
  9449                           	psect	text29
  9450  007064                     __ptext29:
  9451                           	callstack 0
  9452  007064                     _isspace:
  9453                           	callstack 24
  9454  007064  FFFF               	dw	65535	; assembler added errata NOP
  9455  007066  0E01               	movlw	1
  9456  007068  6E07               	movwf	_isspace$1706^0,c
  9457  00706A  0E20               	movlw	32
  9458  00706C  1801               	xorwf	isspace@c^0,w,c
  9459  00706E  1002               	iorwf	(isspace@c+1)^0,w,c
  9460  007070  B4D8               	btfsc	status,2,c
  9461  007072  EF3D  F038         	goto	u3691
  9462  007076  EF40  F038         	goto	u3690
  9463  00707A                     u3691:
  9464  00707A  FFFF               	dw	65535	; assembler added errata NOP
  9465  00707C  EF5C  F038         	goto	l3585
  9466  007080                     u3690:
  9467  007080  FFFF               	dw	65535	; assembler added errata NOP
  9468  007082  0EF7               	movlw	247
  9469  007084  6E03               	movwf	??_isspace^0,c
  9470  007086  0EFF               	movlw	255
  9471  007088  6E04               	movwf	(??_isspace+1)^0,c
  9472  00708A  C001  F005         	movff	isspace@c,??_isspace+2
  9473  00708E  C002  F006         	movff	isspace@c+1,??_isspace+3
  9474  007092  5003               	movf	??_isspace^0,w,c
  9475  007094  2605               	addwf	(??_isspace+2)^0,f,c
  9476  007096  5004               	movf	(??_isspace+1)^0,w,c
  9477  007098  2206               	addwfc	(??_isspace+3)^0,f,c
  9478  00709A  5006               	movf	(??_isspace+3)^0,w,c
  9479  00709C  E10A               	bnz	u3700
  9480  00709E  0E05               	movlw	5
  9481  0070A0  5C05               	subwf	(??_isspace+2)^0,w,c
  9482  0070A2  A0D8               	btfss	status,0,c
  9483  0070A4  EF56  F038         	goto	u3701
  9484  0070A8  EF59  F038         	goto	u3700
  9485  0070AC                     u3701:
  9486  0070AC  FFFF               	dw	65535	; assembler added errata NOP
  9487  0070AE  EF5C  F038         	goto	l3585
  9488  0070B2                     u3700:
  9489  0070B2  FFFF               	dw	65535	; assembler added errata NOP
  9490  0070B4  0E00               	movlw	0
  9491  0070B6  6E07               	movwf	_isspace$1706^0,c
  9492  0070B8                     l3585:
  9493  0070B8  FFFF               	dw	65535	; assembler added errata NOP
  9494  0070BA  C007  F001         	movff	_isspace$1706,?_isspace
  9495  0070BE  6A02               	clrf	(?_isspace+1)^0,c
  9496  0070C0  0012               	return		;funcret
  9497  0070C2  FFFF               	dw	65535	; errata NOP
  9498  0070C4                     __end_of_isspace:
  9499                           	callstack 0
  9500                           
  9501 ;; *************** function _isdigit *****************
  9502 ;; Defined at:
  9503 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
  9504 ;; Parameters:    Size  Location     Type
  9505 ;;  c               2    0[COMRAM] int 
  9506 ;; Auto vars:     Size  Location     Type
  9507 ;;		None
  9508 ;; Return value:  Size  Location     Type
  9509 ;;                  2    0[COMRAM] int 
  9510 ;; Registers used:
  9511 ;;		wreg, status,2, status,0
  9512 ;; Tracked objects:
  9513 ;;		On entry : 0/0
  9514 ;;		On exit  : 0/0
  9515 ;;		Unchanged: 0/0
  9516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9517 ;;      Params:         2       0       0       0       0       0       0
  9518 ;;      Locals:         0       0       0       0       0       0       0
  9519 ;;      Temps:          4       0       0       0       0       0       0
  9520 ;;      Totals:         6       0       0       0       0       0       0
  9521 ;;Total ram usage:        6 bytes
  9522 ;; Hardware stack levels used:    1
  9523 ;; Hardware stack levels required when called:    1
  9524 ;; This function calls:
  9525 ;;		Nothing
  9526 ;; This function is called by:
  9527 ;;		_vfpfcnvrt
  9528 ;;		_atoi
  9529 ;; This function uses a non-reentrant model
  9530 ;;
  9531                           
  9532                           	psect	text30
  9533  006E72                     __ptext30:
  9534                           	callstack 0
  9535  006E72                     _isdigit:
  9536                           	callstack 25
  9537  006E72  FFFF               	dw	65535	; assembler added errata NOP
  9538  006E74  0ED0               	movlw	208
  9539  006E76  6E03               	movwf	??_isdigit^0,c
  9540  006E78  0EFF               	movlw	255
  9541  006E7A  6E04               	movwf	(??_isdigit+1)^0,c
  9542  006E7C  C001  F005         	movff	isdigit@c,??_isdigit+2
  9543  006E80  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  9544  006E84  5003               	movf	??_isdigit^0,w,c
  9545  006E86  2605               	addwf	(??_isdigit+2)^0,f,c
  9546  006E88  5004               	movf	(??_isdigit+1)^0,w,c
  9547  006E8A  2206               	addwfc	(??_isdigit+3)^0,f,c
  9548  006E8C  5006               	movf	(??_isdigit+3)^0,w,c
  9549  006E8E  E10B               	bnz	u3670
  9550  006E90  0E0A               	movlw	10
  9551  006E92  5C05               	subwf	(??_isdigit+2)^0,w,c
  9552  006E94  A0D8               	btfss	status,0,c
  9553  006E96  EF4F  F037         	goto	u3671
  9554  006E9A  EF53  F037         	goto	u3670
  9555  006E9E                     u3671:
  9556  006E9E  FFFF               	dw	65535	; assembler added errata NOP
  9557  006EA0  0E01               	movlw	1
  9558  006EA2  EF55  F037         	goto	u3680
  9559  006EA6                     u3670:
  9560  006EA6  FFFF               	dw	65535	; assembler added errata NOP
  9561  006EA8  0E00               	movlw	0
  9562  006EAA                     u3680:
  9563  006EAA  FFFF               	dw	65535	; assembler added errata NOP
  9564  006EAC  6E01               	movwf	?_isdigit^0,c
  9565  006EAE  6A02               	clrf	(?_isdigit+1)^0,c
  9566  006EB0  0012               	return		;funcret
  9567  006EB2  FFFF               	dw	65535	; errata NOP
  9568  006EB4                     __end_of_isdigit:
  9569                           	callstack 0
  9570                           
  9571 ;; *************** function ___wmul *****************
  9572 ;; Defined at:
  9573 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  9574 ;; Parameters:    Size  Location     Type
  9575 ;;  multiplier      2    0[COMRAM] unsigned int 
  9576 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9577 ;; Auto vars:     Size  Location     Type
  9578 ;;  product         2    4[COMRAM] unsigned int 
  9579 ;; Return value:  Size  Location     Type
  9580 ;;                  2    0[COMRAM] unsigned int 
  9581 ;; Registers used:
  9582 ;;		wreg, status,2, status,0, prodl, prodh
  9583 ;; Tracked objects:
  9584 ;;		On entry : 0/0
  9585 ;;		On exit  : 0/0
  9586 ;;		Unchanged: 0/0
  9587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9588 ;;      Params:         4       0       0       0       0       0       0
  9589 ;;      Locals:         2       0       0       0       0       0       0
  9590 ;;      Temps:          0       0       0       0       0       0       0
  9591 ;;      Totals:         6       0       0       0       0       0       0
  9592 ;;Total ram usage:        6 bytes
  9593 ;; Hardware stack levels used:    1
  9594 ;; Hardware stack levels required when called:    1
  9595 ;; This function calls:
  9596 ;;		Nothing
  9597 ;; This function is called by:
  9598 ;;		_main
  9599 ;;		_atoi
  9600 ;; This function uses a non-reentrant model
  9601 ;;
  9602                           
  9603                           	psect	text31
  9604  006CF4                     __ptext31:
  9605                           	callstack 0
  9606  006CF4                     ___wmul:
  9607                           	callstack 0
  9608  006CF4  FFFF               	dw	65535	; assembler added errata NOP
  9609  006CF6  5001               	movf	___wmul@multiplier^0,w,c
  9610  006CF8  0203               	mulwf	___wmul@multiplicand^0,c
  9611  006CFA  CFF3 F005          	movff	prodl,___wmul@product
  9612  006CFE  CFF4 F006          	movff	prodh,___wmul@product+1
  9613  006D02  5001               	movf	___wmul@multiplier^0,w,c
  9614  006D04  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9615  006D06  50F3               	movf	243,w,c
  9616  006D08  2606               	addwf	(___wmul@product+1)^0,f,c
  9617  006D0A  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9618  006D0C  0203               	mulwf	___wmul@multiplicand^0,c
  9619  006D0E  50F3               	movf	243,w,c
  9620  006D10  2606               	addwf	(___wmul@product+1)^0,f,c
  9621  006D12  C005  F001         	movff	___wmul@product,?___wmul
  9622  006D16  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9623  006D1A  0012               	return		;funcret
  9624  006D1C  FFFF               	dw	65535	; errata NOP
  9625  006D1E                     __end_of___wmul:
  9626                           	callstack 0
  9627                           
  9628 ;; *************** function _serial_tx_char *****************
  9629 ;; Defined at:
  9630 ;;		line 39 in file "serial_rs232.c"
  9631 ;; Parameters:    Size  Location     Type
  9632 ;;  val             1    wreg     unsigned char 
  9633 ;; Auto vars:     Size  Location     Type
  9634 ;;  val             1    0[COMRAM] unsigned char 
  9635 ;; Return value:  Size  Location     Type
  9636 ;;                  1    wreg      void 
  9637 ;; Registers used:
  9638 ;;		wreg
  9639 ;; Tracked objects:
  9640 ;;		On entry : 0/0
  9641 ;;		On exit  : 0/0
  9642 ;;		Unchanged: 0/0
  9643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9644 ;;      Params:         0       0       0       0       0       0       0
  9645 ;;      Locals:         1       0       0       0       0       0       0
  9646 ;;      Temps:          0       0       0       0       0       0       0
  9647 ;;      Totals:         1       0       0       0       0       0       0
  9648 ;;Total ram usage:        1 bytes
  9649 ;; Hardware stack levels used:    1
  9650 ;; Hardware stack levels required when called:    1
  9651 ;; This function calls:
  9652 ;;		Nothing
  9653 ;; This function is called by:
  9654 ;;		_main
  9655 ;;		_serial_tx_string
  9656 ;; This function uses a non-reentrant model
  9657 ;;
  9658                           
  9659                           	psect	text32
  9660  006C3C                     __ptext32:
  9661                           	callstack 0
  9662  006C3C                     _serial_tx_char:
  9663                           	callstack 0
  9664  006C3C  FFFF               	dw	65535	; assembler added errata NOP
  9665                           
  9666                           ;incstack = 0
  9667                           ;serial_tx_char@val stored from wreg
  9668  006C3E  6E01               	movwf	serial_tx_char@val^0,c
  9669  006C40                     
  9670                           ;serial_rs232.c: 40:     TXREG = val;
  9671  006C40  C001  FFAD         	movff	serial_tx_char@val,4013	;volatile
  9672  006C44                     l24:
  9673  006C44  FFFF               	dw	65535	; assembler added errata NOP
  9674  006C46  A2AC               	btfss	172,1,c	;volatile
  9675  006C48  EF28  F036         	goto	u6051
  9676  006C4C  EF2B  F036         	goto	u6050
  9677  006C50                     u6051:
  9678  006C50  FFFF               	dw	65535	; assembler added errata NOP
  9679  006C52  EF22  F036         	goto	l24
  9680  006C56                     u6050:
  9681  006C56  FFFF               	dw	65535	; assembler added errata NOP
  9682  006C58  0012               	return		;funcret
  9683  006C5A  FFFF               	dw	65535	; errata NOP
  9684  006C5C                     __end_of_serial_tx_char:
  9685                           	callstack 0
  9686                           
  9687 ;; *************** function _reach_goal *****************
  9688 ;; Defined at:
  9689 ;;		line 29 in file "stepper_motor.c"
  9690 ;; Parameters:    Size  Location     Type
  9691 ;;  stepper_moto    2    6[COMRAM] PTR struct .
  9692 ;;		 -> end_effector_stepper(14), joint_stepper(14), 
  9693 ;;  goal_to_reac    2    8[COMRAM] int 
  9694 ;; Auto vars:     Size  Location     Type
  9695 ;;		None
  9696 ;; Return value:  Size  Location     Type
  9697 ;;                  2    6[COMRAM] int 
  9698 ;; Registers used:
  9699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9700 ;; Tracked objects:
  9701 ;;		On entry : 0/0
  9702 ;;		On exit  : 0/0
  9703 ;;		Unchanged: 0/0
  9704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9705 ;;      Params:         4       0       0       0       0       0       0
  9706 ;;      Locals:         0       0       0       0       0       0       0
  9707 ;;      Temps:          3       0       0       0       0       0       0
  9708 ;;      Totals:         7       0       0       0       0       0       0
  9709 ;;Total ram usage:        7 bytes
  9710 ;; Hardware stack levels used:    1
  9711 ;; Hardware stack levels required when called:    2
  9712 ;; This function calls:
  9713 ;;		_turn_on_current_coil
  9714 ;;		_update_current_coil
  9715 ;; This function is called by:
  9716 ;;		_main
  9717 ;; This function uses a non-reentrant model
  9718 ;;
  9719                           
  9720                           	psect	text33
  9721  007274                     __ptext33:
  9722                           	callstack 0
  9723  007274                     _reach_goal:
  9724                           	callstack 0
  9725  007274  FFFF               	dw	65535	; assembler added errata NOP
  9726  007276                     
  9727                           ;stepper_motor.c: 30:     if(stepper_motor -> step_counter >= goal_to_reach){
  9728  007276  EE20 F002          	lfsr	2,2
  9729  00727A  5007               	movf	reach_goal@stepper_motor^0,w,c
  9730  00727C  26D9               	addwf	fsr2l,f,c
  9731  00727E  5008               	movf	(reach_goal@stepper_motor+1)^0,w,c
  9732  007280  22DA               	addwfc	fsr2h,f,c
  9733  007282  5009               	movf	reach_goal@goal_to_reach^0,w,c
  9734  007284  5CDE               	subwf	postinc2,w,c
  9735  007286  50DE               	movf	postinc2,w,c
  9736  007288  0A80               	xorlw	128
  9737  00728A  6E0D               	movwf	(??_reach_goal+2)^0,c
  9738  00728C  500A               	movf	(reach_goal@goal_to_reach+1)^0,w,c
  9739  00728E  0A80               	xorlw	128
  9740  007290  580D               	subwfb	(??_reach_goal+2)^0,w,c
  9741  007292  A0D8               	btfss	status,0,c
  9742  007294  EF4E  F039         	goto	u6211
  9743  007298  EF51  F039         	goto	u6210
  9744  00729C                     u6211:
  9745  00729C  FFFF               	dw	65535	; assembler added errata NOP
  9746  00729E  EF62  F039         	goto	l5131
  9747  0072A2                     u6210:
  9748  0072A2  FFFF               	dw	65535	; assembler added errata NOP
  9749  0072A4                     
  9750                           ;stepper_motor.c: 31:         stepper_motor -> step_counter = 0;
  9751  0072A4  EE20 F002          	lfsr	2,2
  9752  0072A8  5007               	movf	reach_goal@stepper_motor^0,w,c
  9753  0072AA  26D9               	addwf	fsr2l,f,c
  9754  0072AC  5008               	movf	(reach_goal@stepper_motor+1)^0,w,c
  9755  0072AE  22DA               	addwfc	fsr2h,f,c
  9756  0072B0  0E00               	movlw	0
  9757  0072B2  6EDE               	movwf	postinc2,c
  9758  0072B4  0E00               	movlw	0
  9759  0072B6  6EDD               	movwf	postdec2,c
  9760  0072B8                     
  9761                           ;stepper_motor.c: 32:         return 1;
  9762  0072B8  0E00               	movlw	0
  9763  0072BA  6E08               	movwf	(?_reach_goal+1)^0,c
  9764  0072BC  0E01               	movlw	1
  9765  0072BE  6E07               	movwf	?_reach_goal^0,c
  9766  0072C0  EF73  F039         	goto	l318
  9767  0072C4                     l5131:
  9768  0072C4  FFFF               	dw	65535	; assembler added errata NOP
  9769                           
  9770                           ;stepper_motor.c: 34:         turn_on_current_coil(stepper_motor);
  9771  0072C6  C007  F001         	movff	reach_goal@stepper_motor,turn_on_current_coil@stepper_motor
  9772  0072CA  C008  F002         	movff	reach_goal@stepper_motor+1,turn_on_current_coil@stepper_motor+1
  9773  0072CE  ECDA  F036         	call	_turn_on_current_coil	;wreg free
  9774                           
  9775                           ;stepper_motor.c: 35:         update_current_coil(stepper_motor);
  9776  0072D2  C007  F001         	movff	reach_goal@stepper_motor,update_current_coil@stepper_motor
  9777  0072D6  C008  F002         	movff	reach_goal@stepper_motor+1,update_current_coil@stepper_motor+1
  9778  0072DA  EC18  F03B         	call	_update_current_coil	;wreg free
  9779  0072DE                     
  9780                           ;stepper_motor.c: 36:         return 0;
  9781  0072DE  0E00               	movlw	0
  9782  0072E0  6E08               	movwf	(?_reach_goal+1)^0,c
  9783  0072E2  0E00               	movlw	0
  9784  0072E4  6E07               	movwf	?_reach_goal^0,c
  9785  0072E6                     l318:
  9786  0072E6  FFFF               	dw	65535	; assembler added errata NOP
  9787  0072E8  0012               	return		;funcret
  9788  0072EA  FFFF               	dw	65535	; errata NOP
  9789  0072EC                     __end_of_reach_goal:
  9790                           	callstack 0
  9791                           
  9792 ;; *************** function _update_current_coil *****************
  9793 ;; Defined at:
  9794 ;;		line 18 in file "stepper_motor.c"
  9795 ;; Parameters:    Size  Location     Type
  9796 ;;  stepper_moto    2    0[COMRAM] PTR struct .
  9797 ;;		 -> end_effector_stepper(14), joint_stepper(14), 
  9798 ;; Auto vars:     Size  Location     Type
  9799 ;;		None
  9800 ;; Return value:  Size  Location     Type
  9801 ;;                  1    wreg      void 
  9802 ;; Registers used:
  9803 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9804 ;; Tracked objects:
  9805 ;;		On entry : 0/0
  9806 ;;		On exit  : 0/0
  9807 ;;		Unchanged: 0/0
  9808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9809 ;;      Params:         2       0       0       0       0       0       0
  9810 ;;      Locals:         0       0       0       0       0       0       0
  9811 ;;      Temps:          4       0       0       0       0       0       0
  9812 ;;      Totals:         6       0       0       0       0       0       0
  9813 ;;Total ram usage:        6 bytes
  9814 ;; Hardware stack levels used:    1
  9815 ;; Hardware stack levels required when called:    1
  9816 ;; This function calls:
  9817 ;;		Nothing
  9818 ;; This function is called by:
  9819 ;;		_reach_goal
  9820 ;; This function uses a non-reentrant model
  9821 ;;
  9822                           
  9823                           	psect	text34
  9824  007630                     __ptext34:
  9825                           	callstack 0
  9826  007630                     _update_current_coil:
  9827                           	callstack 0
  9828  007630  FFFF               	dw	65535	; assembler added errata NOP
  9829  007632                     
  9830                           ;stepper_motor.c: 19:     stepper_motor -> current_coil = stepper_motor -> current_coil 
      +                          + stepper_motor -> direction;
  9831  007632  EE20 F004          	lfsr	2,4
  9832  007636  5001               	movf	update_current_coil@stepper_motor^0,w,c
  9833  007638  26D9               	addwf	fsr2l,f,c
  9834  00763A  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
  9835  00763C  22DA               	addwfc	fsr2h,f,c
  9836  00763E  CFDE F003          	movff	postinc2,??_update_current_coil
  9837  007642  CFDD F004          	movff	postdec2,??_update_current_coil+1
  9838  007646  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
  9839  00764A  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
  9840  00764E  CFDE F005          	movff	postinc2,??_update_current_coil+2
  9841  007652  CFDD F006          	movff	postdec2,??_update_current_coil+3
  9842  007656  5003               	movf	??_update_current_coil^0,w,c
  9843  007658  2605               	addwf	(??_update_current_coil+2)^0,f,c
  9844  00765A  5004               	movf	(??_update_current_coil+1)^0,w,c
  9845  00765C  2206               	addwfc	(??_update_current_coil+3)^0,f,c
  9846  00765E  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
  9847  007662  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
  9848  007666  C005  FFDE         	movff	??_update_current_coil+2,postinc2
  9849  00766A  C006  FFDD         	movff	??_update_current_coil+3,postdec2
  9850                           
  9851                           ;stepper_motor.c: 20:     stepper_motor -> step_counter = stepper_motor -> step_counter 
      +                          + 1;
  9852  00766E  EE20 F002          	lfsr	2,2
  9853  007672  5001               	movf	update_current_coil@stepper_motor^0,w,c
  9854  007674  26D9               	addwf	fsr2l,f,c
  9855  007676  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
  9856  007678  22DA               	addwfc	fsr2h,f,c
  9857  00767A  CFDE F003          	movff	postinc2,??_update_current_coil
  9858  00767E  CFDD F004          	movff	postdec2,??_update_current_coil+1
  9859  007682  0E01               	movlw	1
  9860  007684  2603               	addwf	??_update_current_coil^0,f,c
  9861  007686  0E00               	movlw	0
  9862  007688  2204               	addwfc	(??_update_current_coil+1)^0,f,c
  9863  00768A  EE20 F002          	lfsr	2,2
  9864  00768E  5001               	movf	update_current_coil@stepper_motor^0,w,c
  9865  007690  26D9               	addwf	fsr2l,f,c
  9866  007692  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
  9867  007694  22DA               	addwfc	fsr2h,f,c
  9868  007696  C003  FFDE         	movff	??_update_current_coil,postinc2
  9869  00769A  C004  FFDD         	movff	??_update_current_coil+1,postdec2
  9870                           
  9871                           ;stepper_motor.c: 21:     if (stepper_motor -> current_coil == -1) {
  9872  00769E  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
  9873  0076A2  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
  9874  0076A6  28DE               	incf	postinc2,w,c
  9875  0076A8  E106               	bnz	u5981
  9876  0076AA  28DE               	incf	postinc2,w,c
  9877  0076AC  A4D8               	btfss	status,2,c
  9878  0076AE  EF5B  F03B         	goto	u5981
  9879  0076B2  EF5E  F03B         	goto	u5980
  9880  0076B6                     u5981:
  9881  0076B6  FFFF               	dw	65535	; assembler added errata NOP
  9882  0076B8  EF69  F03B         	goto	l4897
  9883  0076BC                     u5980:
  9884  0076BC  FFFF               	dw	65535	; assembler added errata NOP
  9885  0076BE                     
  9886                           ;stepper_motor.c: 22:         stepper_motor -> current_coil = 3;
  9887  0076BE  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
  9888  0076C2  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
  9889  0076C6  0E03               	movlw	3
  9890  0076C8  6EDE               	movwf	postinc2,c
  9891  0076CA  0E00               	movlw	0
  9892  0076CC  6EDD               	movwf	postdec2,c
  9893                           
  9894                           ;stepper_motor.c: 23:     } else if(stepper_motor -> current_coil == 4) {
  9895  0076CE  EF82  F03B         	goto	l314
  9896  0076D2                     l4897:
  9897  0076D2  FFFF               	dw	65535	; assembler added errata NOP
  9898  0076D4  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
  9899  0076D8  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
  9900  0076DC  0E04               	movlw	4
  9901  0076DE  18DE               	xorwf	postinc2,w,c
  9902  0076E0  10DE               	iorwf	postinc2,w,c
  9903  0076E2  A4D8               	btfss	status,2,c
  9904  0076E4  EF76  F03B         	goto	u5991
  9905  0076E8  EF79  F03B         	goto	u5990
  9906  0076EC                     u5991:
  9907  0076EC  FFFF               	dw	65535	; assembler added errata NOP
  9908  0076EE  EF82  F03B         	goto	l314
  9909  0076F2                     u5990:
  9910  0076F2  FFFF               	dw	65535	; assembler added errata NOP
  9911  0076F4                     
  9912                           ;stepper_motor.c: 24:         stepper_motor -> current_coil = 0;
  9913  0076F4  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
  9914  0076F8  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
  9915  0076FC  0E00               	movlw	0
  9916  0076FE  6EDE               	movwf	postinc2,c
  9917  007700  0E00               	movlw	0
  9918  007702  6EDD               	movwf	postdec2,c
  9919  007704                     l314:
  9920  007704  FFFF               	dw	65535	; assembler added errata NOP
  9921  007706  0012               	return		;funcret
  9922  007708  FFFF               	dw	65535	; errata NOP
  9923  00770A                     __end_of_update_current_coil:
  9924                           	callstack 0
  9925                           
  9926 ;; *************** function _turn_on_current_coil *****************
  9927 ;; Defined at:
  9928 ;;		line 13 in file "stepper_motor.c"
  9929 ;; Parameters:    Size  Location     Type
  9930 ;;  stepper_moto    2    0[COMRAM] PTR struct .
  9931 ;;		 -> end_effector_stepper(14), joint_stepper(14), 
  9932 ;; Auto vars:     Size  Location     Type
  9933 ;;		None
  9934 ;; Return value:  Size  Location     Type
  9935 ;;                  1    wreg      void 
  9936 ;; Registers used:
  9937 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9938 ;; Tracked objects:
  9939 ;;		On entry : 0/0
  9940 ;;		On exit  : 0/0
  9941 ;;		Unchanged: 0/0
  9942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9943 ;;      Params:         2       0       0       0       0       0       0
  9944 ;;      Locals:         0       0       0       0       0       0       0
  9945 ;;      Temps:          4       0       0       0       0       0       0
  9946 ;;      Totals:         6       0       0       0       0       0       0
  9947 ;;Total ram usage:        6 bytes
  9948 ;; Hardware stack levels used:    1
  9949 ;; Hardware stack levels required when called:    1
  9950 ;; This function calls:
  9951 ;;		Nothing
  9952 ;; This function is called by:
  9953 ;;		_reach_goal
  9954 ;; This function uses a non-reentrant model
  9955 ;;
  9956                           
  9957                           	psect	text35
  9958  006DB4                     __ptext35:
  9959                           	callstack 0
  9960  006DB4                     _turn_on_current_coil:
  9961                           	callstack 0
  9962  006DB4  FFFF               	dw	65535	; assembler added errata NOP
  9963  006DB6                     
  9964                           ;stepper_motor.c: 14:     LATB = stepper_motor -> hex_coil_register_values[stepper_motor
      +                           -> current_coil];
  9965  006DB6  C001  FFD9         	movff	turn_on_current_coil@stepper_motor,fsr2l
  9966  006DBA  C002  FFDA         	movff	turn_on_current_coil@stepper_motor+1,fsr2h
  9967  006DBE  CFDE F003          	movff	postinc2,??_turn_on_current_coil
  9968  006DC2  CFDD F004          	movff	postdec2,??_turn_on_current_coil+1
  9969  006DC6  90D8               	bcf	status,0,c
  9970  006DC8  3603               	rlcf	??_turn_on_current_coil^0,f,c
  9971  006DCA  3604               	rlcf	(??_turn_on_current_coil+1)^0,f,c
  9972  006DCC  C001  F005         	movff	turn_on_current_coil@stepper_motor,??_turn_on_current_coil+2
  9973  006DD0  C002  F006         	movff	turn_on_current_coil@stepper_motor+1,??_turn_on_current_coil+3
  9974  006DD4  5003               	movf	??_turn_on_current_coil^0,w,c
  9975  006DD6  2605               	addwf	(??_turn_on_current_coil+2)^0,f,c
  9976  006DD8  5004               	movf	(??_turn_on_current_coil+1)^0,w,c
  9977  006DDA  2206               	addwfc	(??_turn_on_current_coil+3)^0,f,c
  9978  006DDC  0E06               	movlw	6
  9979  006DDE  2405               	addwf	(??_turn_on_current_coil+2)^0,w,c
  9980  006DE0  6ED9               	movwf	fsr2l,c
  9981  006DE2  0E00               	movlw	0
  9982  006DE4  2006               	addwfc	(??_turn_on_current_coil+3)^0,w,c
  9983  006DE6  6EDA               	movwf	fsr2h,c
  9984  006DE8  50DF               	movf	indf2,w,c
  9985  006DEA  6E8A               	movwf	138,c	;volatile
  9986  006DEC  0012               	return		;funcret
  9987  006DEE  FFFF               	dw	65535	; errata NOP
  9988  006DF0                     __end_of_turn_on_current_coil:
  9989                           	callstack 0
  9990                           
  9991 ;; *************** function _lcd_str *****************
  9992 ;; Defined at:
  9993 ;;		line 62 in file "lcd.c"
  9994 ;; Parameters:    Size  Location     Type
  9995 ;;  str             2    2[COMRAM] PTR const unsigned char 
  9996 ;;		 -> main@greet_str(160), STR_7(22), 
  9997 ;; Auto vars:     Size  Location     Type
  9998 ;;  i               1    6[COMRAM] unsigned char 
  9999 ;; Return value:  Size  Location     Type
 10000 ;;                  1    wreg      void 
 10001 ;; Registers used:
 10002 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10003 ;; Tracked objects:
 10004 ;;		On entry : 0/0
 10005 ;;		On exit  : 0/0
 10006 ;;		Unchanged: 0/0
 10007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10008 ;;      Params:         2       0       0       0       0       0       0
 10009 ;;      Locals:         1       0       0       0       0       0       0
 10010 ;;      Temps:          2       0       0       0       0       0       0
 10011 ;;      Totals:         5       0       0       0       0       0       0
 10012 ;;Total ram usage:        5 bytes
 10013 ;; Hardware stack levels used:    1
 10014 ;; Hardware stack levels required when called:    3
 10015 ;; This function calls:
 10016 ;;		_lcd_dat
 10017 ;; This function is called by:
 10018 ;;		_main
 10019 ;; This function uses a non-reentrant model
 10020 ;;
 10021                           
 10022                           	psect	text36
 10023  00736A                     __ptext36:
 10024                           	callstack 0
 10025  00736A                     _lcd_str:
 10026                           	callstack 0
 10027  00736A  FFFF               	dw	65535	; assembler added errata NOP
 10028  00736C                     
 10029                           ;lcd.c: 62: void lcd_str(const char* str);lcd.c: 63: {;lcd.c: 64:     unsigned char i=0;
 10030  00736C  0E00               	movlw	0
 10031  00736E  6E07               	movwf	lcd_str@i^0,c
 10032                           
 10033                           ;lcd.c: 66:     while(str[i] != 0 )
 10034  007370  EFD5  F039         	goto	l5045
 10035  007374                     l5041:
 10036  007374  FFFF               	dw	65535	; assembler added errata NOP
 10037                           
 10038                           ;lcd.c: 67:     {;lcd.c: 68:       lcd_dat(str[i]);
 10039  007376  5007               	movf	lcd_str@i^0,w,c
 10040  007378  2403               	addwf	lcd_str@str^0,w,c
 10041  00737A  6E05               	movwf	??_lcd_str^0,c
 10042  00737C  0E00               	movlw	0
 10043  00737E  2004               	addwfc	(lcd_str@str+1)^0,w,c
 10044  007380  6E06               	movwf	(??_lcd_str+1)^0,c
 10045  007382  C005  FFF6         	movff	??_lcd_str,tblptrl
 10046  007386  C006  FFF7         	movff	??_lcd_str+1,tblptrh
 10047  00738A  6AF8               	clrf	tblptru,c
 10048  00738C  0E05               	movlw	(high __ramtop+-1)
 10049  00738E  64F7               	cpfsgt	tblptrh,c
 10050  007390  D004               	bra	u6077
 10051  007392  0008               	tblrd		*
 10052  007394  FFFF               	dw	65535	; errata NOP
 10053  007396  50F5               	movf	tablat,w,c
 10054  007398  D005               	bra	u6070
 10055  00739A                     u6077:
 10056  00739A  CFF6 FFE1          	movff	tblptrl,fsr1l
 10057  00739E  CFF7 FFE2          	movff	tblptrh,fsr1h
 10058  0073A2  50E7               	movf	indf1,w,c
 10059  0073A4                     u6070:
 10060  0073A4  EC65  F036         	call	_lcd_dat
 10061  0073A8                     
 10062                           ;lcd.c: 69:       i++;
 10063  0073A8  2A07               	incf	lcd_str@i^0,f,c
 10064  0073AA                     l5045:
 10065  0073AA  FFFF               	dw	65535	; assembler added errata NOP
 10066                           
 10067                           ;lcd.c: 66:     while(str[i] != 0 )
 10068  0073AC  5007               	movf	lcd_str@i^0,w,c
 10069  0073AE  2403               	addwf	lcd_str@str^0,w,c
 10070  0073B0  6E05               	movwf	??_lcd_str^0,c
 10071  0073B2  0E00               	movlw	0
 10072  0073B4  2004               	addwfc	(lcd_str@str+1)^0,w,c
 10073  0073B6  6E06               	movwf	(??_lcd_str+1)^0,c
 10074  0073B8  C005  FFF6         	movff	??_lcd_str,tblptrl
 10075  0073BC  C006  FFF7         	movff	??_lcd_str+1,tblptrh
 10076  0073C0  6AF8               	clrf	tblptru,c
 10077  0073C2  0E05               	movlw	(high __ramtop+-1)
 10078  0073C4  64F7               	cpfsgt	tblptrh,c
 10079  0073C6  D004               	bra	u6087
 10080  0073C8  0008               	tblrd		*
 10081  0073CA  FFFF               	dw	65535	; errata NOP
 10082  0073CC  50F5               	movf	tablat,w,c
 10083  0073CE  D005               	bra	u6080
 10084  0073D0                     u6087:
 10085  0073D0  CFF6 FFE1          	movff	tblptrl,fsr1l
 10086  0073D4  CFF7 FFE2          	movff	tblptrh,fsr1h
 10087  0073D8  50E7               	movf	indf1,w,c
 10088  0073DA                     u6080:
 10089  0073DA  0900               	iorlw	0
 10090  0073DC  A4D8               	btfss	status,2,c
 10091  0073DE  EFF3  F039         	goto	u6091
 10092  0073E2  EFF6  F039         	goto	u6090
 10093  0073E6                     u6091:
 10094  0073E6  FFFF               	dw	65535	; assembler added errata NOP
 10095  0073E8  EFBA  F039         	goto	l5041
 10096  0073EC                     u6090:
 10097  0073EC  FFFF               	dw	65535	; assembler added errata NOP
 10098  0073EE  0012               	return		;funcret
 10099  0073F0  FFFF               	dw	65535	; errata NOP
 10100  0073F2                     __end_of_lcd_str:
 10101                           	callstack 0
 10102                           
 10103 ;; *************** function _lcd_dat *****************
 10104 ;; Defined at:
 10105 ;;		line 21 in file "lcd.c"
 10106 ;; Parameters:    Size  Location     Type
 10107 ;;  val             1    wreg     unsigned char 
 10108 ;; Auto vars:     Size  Location     Type
 10109 ;;  val             1    1[COMRAM] unsigned char 
 10110 ;; Return value:  Size  Location     Type
 10111 ;;                  1    wreg      void 
 10112 ;; Registers used:
 10113 ;;		wreg, status,2, cstack
 10114 ;; Tracked objects:
 10115 ;;		On entry : 0/0
 10116 ;;		On exit  : 0/0
 10117 ;;		Unchanged: 0/0
 10118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10119 ;;      Params:         0       0       0       0       0       0       0
 10120 ;;      Locals:         1       0       0       0       0       0       0
 10121 ;;      Temps:          0       0       0       0       0       0       0
 10122 ;;      Totals:         1       0       0       0       0       0       0
 10123 ;;Total ram usage:        1 bytes
 10124 ;; Hardware stack levels used:    1
 10125 ;; Hardware stack levels required when called:    2
 10126 ;; This function calls:
 10127 ;;		_lcd_wr
 10128 ;; This function is called by:
 10129 ;;		_lcd_str
 10130 ;;		_state_translator_fpga_to_micro
 10131 ;; This function uses a non-reentrant model
 10132 ;;
 10133                           
 10134                           	psect	text37
 10135  006CCA                     __ptext37:
 10136                           	callstack 0
 10137  006CCA                     _lcd_dat:
 10138                           	callstack 0
 10139  006CCA  FFFF               	dw	65535	; assembler added errata NOP
 10140                           
 10141                           ;incstack = 0
 10142                           ;lcd_dat@val stored from wreg
 10143  006CCC  6E02               	movwf	lcd_dat@val^0,c
 10144  006CCE                     
 10145                           ;lcd.c: 21: void lcd_dat(unsigned char val);lcd.c: 22: {;lcd.c: 23:  PORTEbits.RE1=1;
 10146  006CCE  8284               	bsf	132,1,c	;volatile
 10147  006CD0                     
 10148                           ;lcd.c: 24:     lcd_wr(val);
 10149  006CD0  5002               	movf	lcd_dat@val^0,w,c
 10150  006CD2  ECF8  F035         	call	_lcd_wr
 10151  006CD6                     
 10152                           ;lcd.c: 25:     PORTEbits.RE2=1;
 10153  006CD6  8484               	bsf	132,2,c	;volatile
 10154  006CD8                     
 10155                           ;lcd.c: 26:     _delay((unsigned long)((1)*(4000000/4000.0)));
 10156  006CD8  0EC8               	movlw	200
 10157  006CDA                     u6537:
 10158  006CDA  FFFF               	dw	65535	; errata NOP
 10159  006CDC  F000               	nop	
 10160  006CDE  2EE8               	decfsz	wreg,f,c
 10161  006CE0  D7FC               	bra	u6537
 10162  006CE2                     
 10163                           ;lcd.c: 27:     PORTEbits.RE1=0;
 10164  006CE2  9284               	bcf	132,1,c	;volatile
 10165  006CE4                     
 10166                           ;lcd.c: 28:     _delay((unsigned long)((1)*(4000000/4000.0)));
 10167  006CE4  0EC8               	movlw	200
 10168  006CE6                     u6547:
 10169  006CE6  FFFF               	dw	65535	; errata NOP
 10170  006CE8  F000               	nop	
 10171  006CEA  2EE8               	decfsz	wreg,f,c
 10172  006CEC  D7FC               	bra	u6547
 10173  006CEE                     
 10174                           ;lcd.c: 29:  PORTEbits.RE1=1;
 10175  006CEE  8284               	bsf	132,1,c	;volatile
 10176  006CF0  0012               	return		;funcret
 10177  006CF2  FFFF               	dw	65535	; errata NOP
 10178  006CF4                     __end_of_lcd_dat:
 10179                           	callstack 0
 10180                           
 10181 ;; *************** function _lcd_init *****************
 10182 ;; Defined at:
 10183 ;;		line 32 in file "lcd.c"
 10184 ;; Parameters:    Size  Location     Type
 10185 ;;		None
 10186 ;; Auto vars:     Size  Location     Type
 10187 ;;		None
 10188 ;; Return value:  Size  Location     Type
 10189 ;;                  1    wreg      void 
 10190 ;; Registers used:
 10191 ;;		wreg, status,2, cstack
 10192 ;; Tracked objects:
 10193 ;;		On entry : 0/0
 10194 ;;		On exit  : 0/0
 10195 ;;		Unchanged: 0/0
 10196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10197 ;;      Params:         0       0       0       0       0       0       0
 10198 ;;      Locals:         0       0       0       0       0       0       0
 10199 ;;      Temps:          1       0       0       0       0       0       0
 10200 ;;      Totals:         1       0       0       0       0       0       0
 10201 ;;Total ram usage:        1 bytes
 10202 ;; Hardware stack levels used:    1
 10203 ;; Hardware stack levels required when called:    3
 10204 ;; This function calls:
 10205 ;;		_lcd_cmd
 10206 ;; This function is called by:
 10207 ;;		_main
 10208 ;; This function uses a non-reentrant model
 10209 ;;
 10210                           
 10211                           	psect	text38
 10212  0072EC                     __ptext38:
 10213                           	callstack 0
 10214  0072EC                     _lcd_init:
 10215                           	callstack 0
 10216  0072EC  FFFF               	dw	65535	; assembler added errata NOP
 10217  0072EE  6A83               	clrf	3971,c	;# 
 10218  0072F0  0E00               	movlw	0	;# 
 10219  0072F2  6E95               	movwf	3989,c	;# 
 10220  0072F4  6A84               	clrf	3972,c	;# 
 10221  0072F6  0E00               	movlw	0	;# 
 10222  0072F8  6E96               	movwf	3990,c	;# 
 10223                           
 10224                           ;lcd.c: 45:  PORTEbits.RE1=0;
 10225  0072FA  9284               	bcf	132,1,c	;volatile
 10226                           
 10227                           ;lcd.c: 46:  PORTEbits.RE2=0;
 10228  0072FC  9484               	bcf	132,2,c	;volatile
 10229  0072FE                     
 10230                           ;lcd.c: 47:  _delay((unsigned long)((30)*(4000000/4000.0)));
 10231  0072FE  0E1E               	movlw	30
 10232  007300  6E03               	movwf	??_lcd_init^0,c
 10233  007302  0E3C               	movlw	60
 10234  007304                     u6557:
 10235  007304  FFFF               	dw	65535	; errata NOP
 10236  007306  2EE8               	decfsz	wreg,f,c
 10237  007308  D7FD               	bra	u6557
 10238  00730A  2E03               	decfsz	??_lcd_init^0,f,c
 10239  00730C  D7FB               	bra	u6557
 10240  00730E  D000               	nop2	
 10241  007310                     
 10242                           ;lcd.c: 48:  PORTEbits.RE1=1;
 10243  007310  8284               	bsf	132,1,c	;volatile
 10244  007312                     
 10245                           ;lcd.c: 50:  lcd_cmd(0x38);
 10246  007312  0E38               	movlw	56
 10247  007314  EC50  F036         	call	_lcd_cmd
 10248  007318                     
 10249                           ;lcd.c: 51:  _delay((unsigned long)((30)*(4000000/4000.0)));
 10250  007318  0E1E               	movlw	30
 10251  00731A  6E03               	movwf	??_lcd_init^0,c
 10252  00731C  0E3C               	movlw	60
 10253  00731E                     u6567:
 10254  00731E  FFFF               	dw	65535	; errata NOP
 10255  007320  2EE8               	decfsz	wreg,f,c
 10256  007322  D7FD               	bra	u6567
 10257  007324  2E03               	decfsz	??_lcd_init^0,f,c
 10258  007326  D7FB               	bra	u6567
 10259  007328  D000               	nop2	
 10260                           
 10261                           ;lcd.c: 52:  lcd_cmd(0x38);
 10262  00732A  0E38               	movlw	56
 10263  00732C  EC50  F036         	call	_lcd_cmd
 10264  007330                     
 10265                           ;lcd.c: 53:     _delay((unsigned long)((30)*(4000000/4000.0)));
 10266  007330  0E1E               	movlw	30
 10267  007332  6E03               	movwf	??_lcd_init^0,c
 10268  007334  0E3C               	movlw	60
 10269  007336                     u6577:
 10270  007336  FFFF               	dw	65535	; errata NOP
 10271  007338  2EE8               	decfsz	wreg,f,c
 10272  00733A  D7FD               	bra	u6577
 10273  00733C  2E03               	decfsz	??_lcd_init^0,f,c
 10274  00733E  D7FB               	bra	u6577
 10275  007340  D000               	nop2	
 10276  007342                     
 10277                           ;lcd.c: 54:  lcd_cmd(0x38);
 10278  007342  0E38               	movlw	56
 10279  007344  EC50  F036         	call	_lcd_cmd
 10280  007348                     
 10281                           ;lcd.c: 55:  lcd_cmd(0x08);
 10282  007348  0E08               	movlw	8
 10283  00734A  EC50  F036         	call	_lcd_cmd
 10284  00734E                     
 10285                           ;lcd.c: 56:  lcd_cmd(0x0F);
 10286  00734E  0E0F               	movlw	15
 10287  007350  EC50  F036         	call	_lcd_cmd
 10288  007354                     
 10289                           ;lcd.c: 57:  lcd_cmd(0x01);
 10290  007354  0E01               	movlw	1
 10291  007356  EC50  F036         	call	_lcd_cmd
 10292  00735A                     
 10293                           ;lcd.c: 58:  lcd_cmd(0x38);
 10294  00735A  0E38               	movlw	56
 10295  00735C  EC50  F036         	call	_lcd_cmd
 10296  007360                     
 10297                           ;lcd.c: 59:     lcd_cmd(0x80);
 10298  007360  0E80               	movlw	128
 10299  007362  EC50  F036         	call	_lcd_cmd
 10300  007366  0012               	return		;funcret
 10301  007368  FFFF               	dw	65535	; errata NOP
 10302  00736A                     __end_of_lcd_init:
 10303                           	callstack 0
 10304                           
 10305 ;; *************** function _lcd_cmd *****************
 10306 ;; Defined at:
 10307 ;;		line 10 in file "lcd.c"
 10308 ;; Parameters:    Size  Location     Type
 10309 ;;  val             1    wreg     unsigned char 
 10310 ;; Auto vars:     Size  Location     Type
 10311 ;;  val             1    1[COMRAM] unsigned char 
 10312 ;; Return value:  Size  Location     Type
 10313 ;;                  1    wreg      void 
 10314 ;; Registers used:
 10315 ;;		wreg, status,2, cstack
 10316 ;; Tracked objects:
 10317 ;;		On entry : 0/0
 10318 ;;		On exit  : 0/0
 10319 ;;		Unchanged: 0/0
 10320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10321 ;;      Params:         0       0       0       0       0       0       0
 10322 ;;      Locals:         1       0       0       0       0       0       0
 10323 ;;      Temps:          0       0       0       0       0       0       0
 10324 ;;      Totals:         1       0       0       0       0       0       0
 10325 ;;Total ram usage:        1 bytes
 10326 ;; Hardware stack levels used:    1
 10327 ;; Hardware stack levels required when called:    2
 10328 ;; This function calls:
 10329 ;;		_lcd_wr
 10330 ;; This function is called by:
 10331 ;;		_main
 10332 ;;		_lcd_init
 10333 ;; This function uses a non-reentrant model
 10334 ;;
 10335                           
 10336                           	psect	text39
 10337  006CA0                     __ptext39:
 10338                           	callstack 0
 10339  006CA0                     _lcd_cmd:
 10340                           	callstack 0
 10341  006CA0  FFFF               	dw	65535	; assembler added errata NOP
 10342                           
 10343                           ;incstack = 0
 10344                           ;lcd_cmd@val stored from wreg
 10345  006CA2  6E02               	movwf	lcd_cmd@val^0,c
 10346  006CA4                     
 10347                           ;lcd.c: 10: void lcd_cmd(unsigned char val);lcd.c: 11: {;lcd.c: 12:  PORTEbits.RE1=1;
 10348  006CA4  8284               	bsf	132,1,c	;volatile
 10349  006CA6                     
 10350                           ;lcd.c: 13:     lcd_wr(val);
 10351  006CA6  5002               	movf	lcd_cmd@val^0,w,c
 10352  006CA8  ECF8  F035         	call	_lcd_wr
 10353  006CAC                     
 10354                           ;lcd.c: 14:     PORTEbits.RE2=0;
 10355  006CAC  9484               	bcf	132,2,c	;volatile
 10356  006CAE                     
 10357                           ;lcd.c: 15:     _delay((unsigned long)((1)*(4000000/4000.0)));
 10358  006CAE  0EC8               	movlw	200
 10359  006CB0                     u6587:
 10360  006CB0  FFFF               	dw	65535	; errata NOP
 10361  006CB2  F000               	nop	
 10362  006CB4  2EE8               	decfsz	wreg,f,c
 10363  006CB6  D7FC               	bra	u6587
 10364  006CB8                     
 10365                           ;lcd.c: 16:     PORTEbits.RE1=0;
 10366  006CB8  9284               	bcf	132,1,c	;volatile
 10367  006CBA                     
 10368                           ;lcd.c: 17:     _delay((unsigned long)((1)*(4000000/4000.0)));
 10369  006CBA  0EC8               	movlw	200
 10370  006CBC                     u6597:
 10371  006CBC  FFFF               	dw	65535	; errata NOP
 10372  006CBE  F000               	nop	
 10373  006CC0  2EE8               	decfsz	wreg,f,c
 10374  006CC2  D7FC               	bra	u6597
 10375  006CC4                     
 10376                           ;lcd.c: 18:  PORTEbits.RE1=1;
 10377  006CC4  8284               	bsf	132,1,c	;volatile
 10378  006CC6  0012               	return		;funcret
 10379  006CC8  FFFF               	dw	65535	; errata NOP
 10380  006CCA                     __end_of_lcd_cmd:
 10381                           	callstack 0
 10382                           
 10383 ;; *************** function _lcd_wr *****************
 10384 ;; Defined at:
 10385 ;;		line 5 in file "lcd.c"
 10386 ;; Parameters:    Size  Location     Type
 10387 ;;  val             1    wreg     unsigned char 
 10388 ;; Auto vars:     Size  Location     Type
 10389 ;;  val             1    0[COMRAM] unsigned char 
 10390 ;; Return value:  Size  Location     Type
 10391 ;;                  1    wreg      void 
 10392 ;; Registers used:
 10393 ;;		wreg
 10394 ;; Tracked objects:
 10395 ;;		On entry : 0/0
 10396 ;;		On exit  : 0/0
 10397 ;;		Unchanged: 0/0
 10398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10399 ;;      Params:         0       0       0       0       0       0       0
 10400 ;;      Locals:         1       0       0       0       0       0       0
 10401 ;;      Temps:          0       0       0       0       0       0       0
 10402 ;;      Totals:         1       0       0       0       0       0       0
 10403 ;;Total ram usage:        1 bytes
 10404 ;; Hardware stack levels used:    1
 10405 ;; Hardware stack levels required when called:    1
 10406 ;; This function calls:
 10407 ;;		Nothing
 10408 ;; This function is called by:
 10409 ;;		_lcd_cmd
 10410 ;;		_lcd_dat
 10411 ;; This function uses a non-reentrant model
 10412 ;;
 10413                           
 10414                           	psect	text40
 10415  006BF0                     __ptext40:
 10416                           	callstack 0
 10417  006BF0                     _lcd_wr:
 10418                           	callstack 0
 10419  006BF0  FFFF               	dw	65535	; assembler added errata NOP
 10420                           
 10421                           ;incstack = 0
 10422                           ;lcd_wr@val stored from wreg
 10423  006BF2  6E01               	movwf	lcd_wr@val^0,c
 10424  006BF4                     
 10425                           ;lcd.c: 5: void lcd_wr(unsigned char val);lcd.c: 6: {;lcd.c: 7:     PORTD=val;
 10426  006BF4  C001  FF83         	movff	lcd_wr@val,3971	;volatile
 10427  006BF8  0012               	return		;funcret
 10428  006BFA  FFFF               	dw	65535	; errata NOP
 10429  006BFC                     __end_of_lcd_wr:
 10430                           	callstack 0
 10431                           
 10432 ;; *************** function _init_timer_2 *****************
 10433 ;; Defined at:
 10434 ;;		line 27 in file "timer.c"
 10435 ;; Parameters:    Size  Location     Type
 10436 ;;		None
 10437 ;; Auto vars:     Size  Location     Type
 10438 ;;		None
 10439 ;; Return value:  Size  Location     Type
 10440 ;;                  1    wreg      void 
 10441 ;; Registers used:
 10442 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10443 ;; Tracked objects:
 10444 ;;		On entry : 0/0
 10445 ;;		On exit  : 0/0
 10446 ;;		Unchanged: 0/0
 10447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10448 ;;      Params:         0       0       0       0       0       0       0
 10449 ;;      Locals:         4       0       0       0       0       0       0
 10450 ;;      Temps:          0       0       0       0       0       0       0
 10451 ;;      Totals:         4       0       0       0       0       0       0
 10452 ;;Total ram usage:        4 bytes
 10453 ;; Hardware stack levels used:    1
 10454 ;; Hardware stack levels required when called:    2
 10455 ;; This function calls:
 10456 ;;		___fladd
 10457 ;;		___fldiv
 10458 ;;		___flmul
 10459 ;;		___fltol
 10460 ;; This function is called by:
 10461 ;;		_main
 10462 ;; This function uses a non-reentrant model
 10463 ;;
 10464                           
 10465                           	psect	text41
 10466  007564                     __ptext41:
 10467                           	callstack 0
 10468  007564                     _init_timer_2:
 10469                           	callstack 0
 10470  007564  FFFF               	dw	65535	; assembler added errata NOP
 10471  007566                     
 10472                           ;timer.c: 29:     T2CON = 0;
 10473  007566  0E00               	movlw	0
 10474  007568  6ECA               	movwf	202,c	;volatile
 10475                           
 10476                           ;timer.c: 30:     TMR2 = 0;
 10477  00756A  0E00               	movlw	0
 10478  00756C  6ECC               	movwf	204,c	;volatile
 10479  00756E                     
 10480                           ;timer.c: 32:     T2CONbits.TMR2ON = 1;
 10481  00756E  84CA               	bsf	202,2,c	;volatile
 10482  007570                     
 10483                           ;timer.c: 33:     T2CONbits.T2CKPS0 = 1;
 10484  007570  80CA               	bsf	202,0,c	;volatile
 10485  007572                     
 10486                           ;timer.c: 34:     T2CONbits.T2CKPS1 = 1;
 10487  007572  82CA               	bsf	202,1,c	;volatile
 10488  007574                     
 10489                           ;timer.c: 36:     PR2 = (uint8_t) (((pwm_period / (4*t_osc*tmr2_prescaler)) - 1)*4);
 10490  007574  0E00               	movlw	0
 10491  007576  6E37               	movwf	___fladd@a^0,c
 10492  007578  0E00               	movlw	0
 10493  00757A  6E38               	movwf	(___fladd@a+1)^0,c
 10494  00757C  0E80               	movlw	128
 10495  00757E  6E39               	movwf	(___fladd@a+2)^0,c
 10496  007580  0EBF               	movlw	191
 10497  007582  6E3A               	movwf	(___fladd@a+3)^0,c
 10498  007584  0EBD               	movlw	189
 10499  007586  6E05               	movwf	___flmul@a^0,c
 10500  007588  0E37               	movlw	55
 10501  00758A  6E06               	movwf	(___flmul@a+1)^0,c
 10502  00758C  0E86               	movlw	134
 10503  00758E  6E07               	movwf	(___flmul@a+2)^0,c
 10504  007590  0E36               	movlw	54
 10505  007592  6E08               	movwf	(___flmul@a+3)^0,c
 10506  007594  C0D7  F001         	movff	_tmr2_prescaler,___flmul@b
 10507  007598  C0D8  F002         	movff	_tmr2_prescaler+1,___flmul@b+1
 10508  00759C  C0D9  F003         	movff	_tmr2_prescaler+2,___flmul@b+2
 10509  0075A0  C0DA  F004         	movff	_tmr2_prescaler+3,___flmul@b+3
 10510  0075A4  EC77  F00F         	call	___flmul	;wreg free
 10511  0075A8  C001  F01E         	movff	?___flmul,___fldiv@a
 10512  0075AC  C002  F01F         	movff	?___flmul+1,___fldiv@a+1
 10513  0075B0  C003  F020         	movff	?___flmul+2,___fldiv@a+2
 10514  0075B4  C004  F021         	movff	?___flmul+3,___fldiv@a+3
 10515  0075B8  0E0A               	movlw	10
 10516  0075BA  6E1A               	movwf	___fldiv@b^0,c
 10517  0075BC  0ED7               	movlw	215
 10518  0075BE  6E1B               	movwf	(___fldiv@b+1)^0,c
 10519  0075C0  0EA3               	movlw	163
 10520  0075C2  6E1C               	movwf	(___fldiv@b+2)^0,c
 10521  0075C4  0E3C               	movlw	60
 10522  0075C6  6E1D               	movwf	(___fldiv@b+3)^0,c
 10523  0075C8  ECC9  F011         	call	___fldiv	;wreg free
 10524  0075CC  C01A  F033         	movff	?___fldiv,___fladd@b
 10525  0075D0  C01B  F034         	movff	?___fldiv+1,___fladd@b+1
 10526  0075D4  C01C  F035         	movff	?___fldiv+2,___fladd@b+2
 10527  0075D8  C01D  F036         	movff	?___fldiv+3,___fladd@b+3
 10528  0075DC  EC2C  F00A         	call	___fladd	;wreg free
 10529  0075E0  C033  F06F         	movff	?___fladd,_init_timer_2$2006
 10530  0075E4  C034  F070         	movff	?___fladd+1,_init_timer_2$2006+1
 10531  0075E8  C035  F071         	movff	?___fladd+2,_init_timer_2$2006+2
 10532  0075EC  C036  F072         	movff	?___fladd+3,_init_timer_2$2006+3
 10533  0075F0                     
 10534                           ;timer.c: 36:     PR2 = (uint8_t) (((pwm_period / (4*t_osc*tmr2_prescaler)) - 1)*4);
 10535  0075F0  0E00               	movlw	0
 10536  0075F2  6E05               	movwf	___flmul@a^0,c
 10537  0075F4  0E00               	movlw	0
 10538  0075F6  6E06               	movwf	(___flmul@a+1)^0,c
 10539  0075F8  0E80               	movlw	128
 10540  0075FA  6E07               	movwf	(___flmul@a+2)^0,c
 10541  0075FC  0E40               	movlw	64
 10542  0075FE  6E08               	movwf	(___flmul@a+3)^0,c
 10543  007600  C06F  F001         	movff	_init_timer_2$2006,___flmul@b
 10544  007604  C070  F002         	movff	_init_timer_2$2006+1,___flmul@b+1
 10545  007608  C071  F003         	movff	_init_timer_2$2006+2,___flmul@b+2
 10546  00760C  C072  F004         	movff	_init_timer_2$2006+3,___flmul@b+3
 10547  007610  EC77  F00F         	call	___flmul	;wreg free
 10548  007614  C001  F065         	movff	?___flmul,___fltol@f1
 10549  007618  C002  F066         	movff	?___flmul+1,___fltol@f1+1
 10550  00761C  C003  F067         	movff	?___flmul+2,___fltol@f1+2
 10551  007620  C004  F068         	movff	?___flmul+3,___fltol@f1+3
 10552  007624  EC37  F01F         	call	___fltol	;wreg free
 10553  007628  5065               	movf	?___fltol^0,w,c
 10554  00762A  6ECB               	movwf	203,c	;volatile
 10555  00762C  0012               	return		;funcret
 10556  00762E  FFFF               	dw	65535	; errata NOP
 10557  007630                     __end_of_init_timer_2:
 10558                           	callstack 0
 10559                           
 10560 ;; *************** function _init_timer_0 *****************
 10561 ;; Defined at:
 10562 ;;		line 11 in file "timer.c"
 10563 ;; Parameters:    Size  Location     Type
 10564 ;;		None
 10565 ;; Auto vars:     Size  Location     Type
 10566 ;;		None
 10567 ;; Return value:  Size  Location     Type
 10568 ;;                  1    wreg      void 
 10569 ;; Registers used:
 10570 ;;		wreg, status,2
 10571 ;; Tracked objects:
 10572 ;;		On entry : 0/0
 10573 ;;		On exit  : 0/0
 10574 ;;		Unchanged: 0/0
 10575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10576 ;;      Params:         0       0       0       0       0       0       0
 10577 ;;      Locals:         0       0       0       0       0       0       0
 10578 ;;      Temps:          0       0       0       0       0       0       0
 10579 ;;      Totals:         0       0       0       0       0       0       0
 10580 ;;Total ram usage:        0 bytes
 10581 ;; Hardware stack levels used:    1
 10582 ;; Hardware stack levels required when called:    1
 10583 ;; This function calls:
 10584 ;;		Nothing
 10585 ;; This function is called by:
 10586 ;;		_main
 10587 ;; This function uses a non-reentrant model
 10588 ;;
 10589                           
 10590                           	psect	text42
 10591  006C7E                     __ptext42:
 10592                           	callstack 0
 10593  006C7E                     _init_timer_0:
 10594                           	callstack 0
 10595  006C7E  FFFF               	dw	65535	; assembler added errata NOP
 10596  006C80                     
 10597                           ;timer.c: 13:     T0CON = 0;
 10598  006C80  0E00               	movlw	0
 10599  006C82  6ED5               	movwf	213,c	;volatile
 10600                           
 10601                           ;timer.c: 15:     TMR0L = 0x96;
 10602  006C84  0E96               	movlw	150
 10603  006C86  6ED6               	movwf	214,c	;volatile
 10604                           
 10605                           ;timer.c: 16:     TMR0H = 0x98;
 10606  006C88  0E98               	movlw	152
 10607  006C8A  6ED7               	movwf	215,c	;volatile
 10608  006C8C                     
 10609                           ;timer.c: 17:     INTCONbits.TMR0IE = 1;
 10610  006C8C  8AF2               	bsf	242,5,c	;volatile
 10611  006C8E                     
 10612                           ;timer.c: 18:     T0CONbits.T08BIT = 0;
 10613  006C8E  9CD5               	bcf	213,6,c	;volatile
 10614  006C90                     
 10615                           ;timer.c: 19:     T0CONbits.T0CS = 0;
 10616  006C90  9AD5               	bcf	213,5,c	;volatile
 10617  006C92                     
 10618                           ;timer.c: 20:     T0CONbits.PSA = 0;
 10619  006C92  96D5               	bcf	213,3,c	;volatile
 10620  006C94                     
 10621                           ;timer.c: 21:     T0CONbits.T0PS0 = 1;
 10622  006C94  80D5               	bsf	213,0,c	;volatile
 10623  006C96                     
 10624                           ;timer.c: 22:     T0CONbits.T0PS1 = 1;
 10625  006C96  82D5               	bsf	213,1,c	;volatile
 10626  006C98                     
 10627                           ;timer.c: 23:     T0CONbits.T0PS2 = 1;
 10628  006C98  84D5               	bsf	213,2,c	;volatile
 10629  006C9A                     
 10630                           ;timer.c: 24:     T0CONbits.TMR0ON = 1;
 10631  006C9A  8ED5               	bsf	213,7,c	;volatile
 10632  006C9C  0012               	return		;funcret
 10633  006C9E  FFFF               	dw	65535	; errata NOP
 10634  006CA0                     __end_of_init_timer_0:
 10635                           	callstack 0
 10636                           
 10637 ;; *************** function _init_stepper *****************
 10638 ;; Defined at:
 10639 ;;		line 4 in file "stepper_motor.c"
 10640 ;; Parameters:    Size  Location     Type
 10641 ;;  stepper_moto    2    0[COMRAM] PTR struct .
 10642 ;;		 -> end_effector_stepper(14), joint_stepper(14), 
 10643 ;;  current_coil    2    2[COMRAM] int 
 10644 ;;  step_counter    2    4[COMRAM] int 
 10645 ;;  direction       2    6[COMRAM] int 
 10646 ;;  hex_coil_reg    2    8[COMRAM] PTR int 
 10647 ;;		 -> hex_end_effector_values(8), hex_joint_values(8), 
 10648 ;; Auto vars:     Size  Location     Type
 10649 ;;  i               2   14[COMRAM] int 
 10650 ;; Return value:  Size  Location     Type
 10651 ;;                  1    wreg      void 
 10652 ;; Registers used:
 10653 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 10654 ;; Tracked objects:
 10655 ;;		On entry : 0/0
 10656 ;;		On exit  : 0/0
 10657 ;;		Unchanged: 0/0
 10658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10659 ;;      Params:        10       0       0       0       0       0       0
 10660 ;;      Locals:         2       0       0       0       0       0       0
 10661 ;;      Temps:          4       0       0       0       0       0       0
 10662 ;;      Totals:        16       0       0       0       0       0       0
 10663 ;;Total ram usage:       16 bytes
 10664 ;; Hardware stack levels used:    1
 10665 ;; Hardware stack levels required when called:    1
 10666 ;; This function calls:
 10667 ;;		Nothing
 10668 ;; This function is called by:
 10669 ;;		_main
 10670 ;; This function uses a non-reentrant model
 10671 ;;
 10672                           
 10673                           	psect	text43
 10674  0073F2                     __ptext43:
 10675                           	callstack 0
 10676  0073F2                     _init_stepper:
 10677                           	callstack 0
 10678  0073F2  FFFF               	dw	65535	; assembler added errata NOP
 10679  0073F4                     
 10680                           ;stepper_motor.c: 5:     for (int i = 0; i < 4; i++) {
 10681  0073F4  0E00               	movlw	0
 10682  0073F6  6E10               	movwf	(init_stepper@i+1)^0,c
 10683  0073F8  0E00               	movlw	0
 10684  0073FA  6E0F               	movwf	init_stepper@i^0,c
 10685  0073FC                     l5003:
 10686  0073FC  FFFF               	dw	65535	; assembler added errata NOP
 10687                           
 10688                           ;stepper_motor.c: 6:        stepper_motor -> hex_coil_register_values[i] = hex_coil_regi
      +                          ster_values[i];
 10689  0073FE  90D8               	bcf	status,0,c
 10690  007400  340F               	rlcf	init_stepper@i^0,w,c
 10691  007402  6ED9               	movwf	fsr2l,c
 10692  007404  3410               	rlcf	(init_stepper@i+1)^0,w,c
 10693  007406  6EDA               	movwf	fsr2h,c
 10694  007408  5009               	movf	init_stepper@hex_coil_register_values^0,w,c
 10695  00740A  26D9               	addwf	fsr2l,f,c
 10696  00740C  500A               	movf	(init_stepper@hex_coil_register_values+1)^0,w,c
 10697  00740E  22DA               	addwfc	fsr2h,f,c
 10698  007410  C00F  F00B         	movff	init_stepper@i,??_init_stepper
 10699  007414  C010  F00C         	movff	init_stepper@i+1,??_init_stepper+1
 10700  007418  90D8               	bcf	status,0,c
 10701  00741A  360B               	rlcf	??_init_stepper^0,f,c
 10702  00741C  360C               	rlcf	(??_init_stepper+1)^0,f,c
 10703  00741E  C001  F00D         	movff	init_stepper@stepper_motor,??_init_stepper+2
 10704  007422  C002  F00E         	movff	init_stepper@stepper_motor+1,??_init_stepper+3
 10705  007426  500B               	movf	??_init_stepper^0,w,c
 10706  007428  260D               	addwf	(??_init_stepper+2)^0,f,c
 10707  00742A  500C               	movf	(??_init_stepper+1)^0,w,c
 10708  00742C  220E               	addwfc	(??_init_stepper+3)^0,f,c
 10709  00742E  0E06               	movlw	6
 10710  007430  240D               	addwf	(??_init_stepper+2)^0,w,c
 10711  007432  6EE1               	movwf	fsr1l,c
 10712  007434  0E00               	movlw	0
 10713  007436  200E               	addwfc	(??_init_stepper+3)^0,w,c
 10714  007438  6EE2               	movwf	fsr1h,c
 10715  00743A  CFDE FFE6          	movff	postinc2,postinc1
 10716  00743E  CFDD FFE5          	movff	postdec2,postdec1
 10717  007442                     
 10718                           ;stepper_motor.c: 7:     }
 10719  007442  4A0F               	infsnz	init_stepper@i^0,f,c
 10720  007444  2A10               	incf	(init_stepper@i+1)^0,f,c
 10721  007446  BE10               	btfsc	(init_stepper@i+1)^0,7,c
 10722  007448  EF2F  F03A         	goto	u6061
 10723  00744C  5010               	movf	(init_stepper@i+1)^0,w,c
 10724  00744E  E10A               	bnz	u6060
 10725  007450  0E04               	movlw	4
 10726  007452  5C0F               	subwf	init_stepper@i^0,w,c
 10727  007454  A0D8               	btfss	status,0,c
 10728  007456  EF2F  F03A         	goto	u6061
 10729  00745A  EF32  F03A         	goto	u6060
 10730  00745E                     u6061:
 10731  00745E  FFFF               	dw	65535	; assembler added errata NOP
 10732  007460  EFFE  F039         	goto	l5003
 10733  007464                     u6060:
 10734  007464  FFFF               	dw	65535	; assembler added errata NOP
 10735  007466                     
 10736                           ;stepper_motor.c: 8:     stepper_motor -> current_coil = current_coil;
 10737  007466  C001  FFD9         	movff	init_stepper@stepper_motor,fsr2l
 10738  00746A  C002  FFDA         	movff	init_stepper@stepper_motor+1,fsr2h
 10739  00746E  C003  FFDE         	movff	init_stepper@current_coil,postinc2
 10740  007472  C004  FFDD         	movff	init_stepper@current_coil+1,postdec2
 10741  007476                     
 10742                           ;stepper_motor.c: 9:     stepper_motor -> step_counter = step_counter;
 10743  007476  EE20 F002          	lfsr	2,2
 10744  00747A  5001               	movf	init_stepper@stepper_motor^0,w,c
 10745  00747C  26D9               	addwf	fsr2l,f,c
 10746  00747E  5002               	movf	(init_stepper@stepper_motor+1)^0,w,c
 10747  007480  22DA               	addwfc	fsr2h,f,c
 10748  007482  C005  FFDE         	movff	init_stepper@step_counter,postinc2
 10749  007486  C006  FFDD         	movff	init_stepper@step_counter+1,postdec2
 10750  00748A                     
 10751                           ;stepper_motor.c: 10:     stepper_motor -> direction = direction;
 10752  00748A  EE20 F004          	lfsr	2,4
 10753  00748E  5001               	movf	init_stepper@stepper_motor^0,w,c
 10754  007490  26D9               	addwf	fsr2l,f,c
 10755  007492  5002               	movf	(init_stepper@stepper_motor+1)^0,w,c
 10756  007494  22DA               	addwfc	fsr2h,f,c
 10757  007496  C007  FFDE         	movff	init_stepper@direction,postinc2
 10758  00749A  C008  FFDD         	movff	init_stepper@direction+1,postdec2
 10759  00749E  0012               	return		;funcret
 10760  0074A0  FFFF               	dw	65535	; errata NOP
 10761  0074A2                     __end_of_init_stepper:
 10762                           	callstack 0
 10763                           
 10764 ;; *************** function _init_interrupts *****************
 10765 ;; Defined at:
 10766 ;;		line 81 in file "init_PIC.c"
 10767 ;; Parameters:    Size  Location     Type
 10768 ;;		None
 10769 ;; Auto vars:     Size  Location     Type
 10770 ;;		None
 10771 ;; Return value:  Size  Location     Type
 10772 ;;                  1    wreg      void 
 10773 ;; Registers used:
 10774 ;;		None
 10775 ;; Tracked objects:
 10776 ;;		On entry : 0/0
 10777 ;;		On exit  : 0/0
 10778 ;;		Unchanged: 0/0
 10779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10780 ;;      Params:         0       0       0       0       0       0       0
 10781 ;;      Locals:         0       0       0       0       0       0       0
 10782 ;;      Temps:          0       0       0       0       0       0       0
 10783 ;;      Totals:         0       0       0       0       0       0       0
 10784 ;;Total ram usage:        0 bytes
 10785 ;; Hardware stack levels used:    1
 10786 ;; Hardware stack levels required when called:    1
 10787 ;; This function calls:
 10788 ;;		Nothing
 10789 ;; This function is called by:
 10790 ;;		_main
 10791 ;; This function uses a non-reentrant model
 10792 ;;
 10793                           
 10794                           	psect	text44
 10795  006BE4                     __ptext44:
 10796                           	callstack 0
 10797  006BE4                     _init_interrupts:
 10798                           	callstack 0
 10799  006BE4  FFFF               	dw	65535	; assembler added errata NOP
 10800  006BE6                     
 10801                           ;init_PIC.c: 83:     PIR1bits.RCIF = 0;
 10802  006BE6  9A9E               	bcf	158,5,c	;volatile
 10803                           
 10804                           ;init_PIC.c: 84:     PIE1bits.RCIE = 1;
 10805  006BE8  8A9D               	bsf	157,5,c	;volatile
 10806                           
 10807                           ;init_PIC.c: 85:     INTCONbits.PEIE = 1;
 10808  006BEA  8CF2               	bsf	242,6,c	;volatile
 10809  006BEC  0012               	return		;funcret
 10810  006BEE  FFFF               	dw	65535	; errata NOP
 10811  006BF0                     __end_of_init_interrupts:
 10812                           	callstack 0
 10813                           
 10814 ;; *************** function _init_ccp1 *****************
 10815 ;; Defined at:
 10816 ;;		line 41 in file "timer.c"
 10817 ;; Parameters:    Size  Location     Type
 10818 ;;		None
 10819 ;; Auto vars:     Size  Location     Type
 10820 ;;		None
 10821 ;; Return value:  Size  Location     Type
 10822 ;;                  1    wreg      void 
 10823 ;; Registers used:
 10824 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10825 ;; Tracked objects:
 10826 ;;		On entry : 0/0
 10827 ;;		On exit  : 0/0
 10828 ;;		Unchanged: 0/0
 10829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10830 ;;      Params:         0       0       0       0       0       0       0
 10831 ;;      Locals:         0       0       0       0       0       0       0
 10832 ;;      Temps:          0       0       0       0       0       0       0
 10833 ;;      Totals:         0       0       0       0       0       0       0
 10834 ;;Total ram usage:        0 bytes
 10835 ;; Hardware stack levels used:    1
 10836 ;; Hardware stack levels required when called:    3
 10837 ;; This function calls:
 10838 ;;		_update_pwm_duty_ccp1
 10839 ;; This function is called by:
 10840 ;;		_main
 10841 ;; This function uses a non-reentrant model
 10842 ;;
 10843                           
 10844                           	psect	text45
 10845  006C5C                     __ptext45:
 10846                           	callstack 0
 10847  006C5C                     _init_ccp1:
 10848                           	callstack 0
 10849  006C5C  FFFF               	dw	65535	; assembler added errata NOP
 10850  006C5E                     
 10851                           ;timer.c: 42:     CCP1CON = 0x00;
 10852  006C5E  0E00               	movlw	0
 10853  006C60  6EBD               	movwf	189,c	;volatile
 10854  006C62                     
 10855                           ;timer.c: 45:     update_pwm_duty_ccp1(5e-3);
 10856  006C62  0E0A               	movlw	10
 10857  006C64  6E6F               	movwf	update_pwm_duty_ccp1@time_up^0,c
 10858  006C66  0ED7               	movlw	215
 10859  006C68  6E70               	movwf	(update_pwm_duty_ccp1@time_up+1)^0,c
 10860  006C6A  0EA3               	movlw	163
 10861  006C6C  6E71               	movwf	(update_pwm_duty_ccp1@time_up+2)^0,c
 10862  006C6E  0E3B               	movlw	59
 10863  006C70  6E72               	movwf	(update_pwm_duty_ccp1@time_up+3)^0,c
 10864  006C72  EC51  F03A         	call	_update_pwm_duty_ccp1	;wreg free
 10865  006C76                     
 10866                           ;timer.c: 48:     CCP1CONbits.CCP1M3 = 1;
 10867  006C76  86BD               	bsf	189,3,c	;volatile
 10868  006C78                     
 10869                           ;timer.c: 49:     CCP1CONbits.CCP1M2 = 1;
 10870  006C78  84BD               	bsf	189,2,c	;volatile
 10871  006C7A  0012               	return		;funcret
 10872  006C7C  FFFF               	dw	65535	; errata NOP
 10873  006C7E                     __end_of_init_ccp1:
 10874                           	callstack 0
 10875                           
 10876 ;; *************** function _update_pwm_duty_ccp1 *****************
 10877 ;; Defined at:
 10878 ;;		line 53 in file "timer.c"
 10879 ;; Parameters:    Size  Location     Type
 10880 ;;  time_up         4  110[COMRAM] void 
 10881 ;; Auto vars:     Size  Location     Type
 10882 ;;  new_duty        2  116[COMRAM] unsigned short 
 10883 ;;  lsbs_duty       1  118[COMRAM] unsigned char 
 10884 ;; Return value:  Size  Location     Type
 10885 ;;                  1    wreg      void 
 10886 ;; Registers used:
 10887 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10888 ;; Tracked objects:
 10889 ;;		On entry : 0/0
 10890 ;;		On exit  : 0/0
 10891 ;;		Unchanged: 0/0
 10892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10893 ;;      Params:         4       0       0       0       0       0       0
 10894 ;;      Locals:         3       0       0       0       0       0       0
 10895 ;;      Temps:          2       0       0       0       0       0       0
 10896 ;;      Totals:         9       0       0       0       0       0       0
 10897 ;;Total ram usage:        9 bytes
 10898 ;; Hardware stack levels used:    1
 10899 ;; Hardware stack levels required when called:    2
 10900 ;; This function calls:
 10901 ;;		___fldiv
 10902 ;;		___flmul
 10903 ;;		___fltol
 10904 ;; This function is called by:
 10905 ;;		_init_ccp1
 10906 ;; This function uses a non-reentrant model
 10907 ;;
 10908                           
 10909                           	psect	text46
 10910  0074A2                     __ptext46:
 10911                           	callstack 0
 10912  0074A2                     _update_pwm_duty_ccp1:
 10913                           	callstack 0
 10914  0074A2  FFFF               	dw	65535	; assembler added errata NOP
 10915  0074A4                     
 10916                           ;timer.c: 56:     uint16_t new_duty;;timer.c: 57:     uint8_t lsbs_duty;;timer.c: 59:   
      +                            new_duty = (0.001) / (t_osc * tmr2_prescaler);
 10917  0074A4  0EBD               	movlw	189
 10918  0074A6  6E05               	movwf	___flmul@a^0,c
 10919  0074A8  0E37               	movlw	55
 10920  0074AA  6E06               	movwf	(___flmul@a+1)^0,c
 10921  0074AC  0E86               	movlw	134
 10922  0074AE  6E07               	movwf	(___flmul@a+2)^0,c
 10923  0074B0  0E35               	movlw	53
 10924  0074B2  6E08               	movwf	(___flmul@a+3)^0,c
 10925  0074B4  C0D7  F001         	movff	_tmr2_prescaler,___flmul@b
 10926  0074B8  C0D8  F002         	movff	_tmr2_prescaler+1,___flmul@b+1
 10927  0074BC  C0D9  F003         	movff	_tmr2_prescaler+2,___flmul@b+2
 10928  0074C0  C0DA  F004         	movff	_tmr2_prescaler+3,___flmul@b+3
 10929  0074C4  EC77  F00F         	call	___flmul	;wreg free
 10930  0074C8  C001  F01E         	movff	?___flmul,___fldiv@a
 10931  0074CC  C002  F01F         	movff	?___flmul+1,___fldiv@a+1
 10932  0074D0  C003  F020         	movff	?___flmul+2,___fldiv@a+2
 10933  0074D4  C004  F021         	movff	?___flmul+3,___fldiv@a+3
 10934  0074D8  0E6F               	movlw	111
 10935  0074DA  6E1A               	movwf	___fldiv@b^0,c
 10936  0074DC  0E12               	movlw	18
 10937  0074DE  6E1B               	movwf	(___fldiv@b+1)^0,c
 10938  0074E0  0E83               	movlw	131
 10939  0074E2  6E1C               	movwf	(___fldiv@b+2)^0,c
 10940  0074E4  0E3A               	movlw	58
 10941  0074E6  6E1D               	movwf	(___fldiv@b+3)^0,c
 10942  0074E8  ECC9  F011         	call	___fldiv	;wreg free
 10943  0074EC  C01A  F065         	movff	?___fldiv,___fltol@f1
 10944  0074F0  C01B  F066         	movff	?___fldiv+1,___fltol@f1+1
 10945  0074F4  C01C  F067         	movff	?___fldiv+2,___fltol@f1+2
 10946  0074F8  C01D  F068         	movff	?___fldiv+3,___fltol@f1+3
 10947  0074FC  EC37  F01F         	call	___fltol	;wreg free
 10948  007500  C065  F075         	movff	?___fltol,update_pwm_duty_ccp1@new_duty
 10949  007504  C066  F076         	movff	?___fltol+1,update_pwm_duty_ccp1@new_duty+1
 10950  007508                     
 10951                           ;timer.c: 60:     lsbs_duty = (uint8_t) new_duty;
 10952  007508  C075  F077         	movff	update_pwm_duty_ccp1@new_duty,update_pwm_duty_ccp1@lsbs_duty
 10953  00750C                     
 10954                           ;timer.c: 64:     if (lsbs_duty & 0x01) CCP1CON |= (1u << 4);
 10955  00750C  A077               	btfss	update_pwm_duty_ccp1@lsbs_duty^0,0,c
 10956  00750E  EF8B  F03A         	goto	u5961
 10957  007512  EF8E  F03A         	goto	u5960
 10958  007516                     u5961:
 10959  007516  FFFF               	dw	65535	; assembler added errata NOP
 10960  007518  EF92  F03A         	goto	l4879
 10961  00751C                     u5960:
 10962  00751C  FFFF               	dw	65535	; assembler added errata NOP
 10963  00751E  88BD               	bsf	189,4,c	;volatile
 10964  007520  EF94  F03A         	goto	l4881
 10965  007524                     l4879:
 10966  007524  FFFF               	dw	65535	; assembler added errata NOP
 10967  007526  98BD               	bcf	189,4,c	;volatile
 10968  007528                     l4881:
 10969  007528  FFFF               	dw	65535	; assembler added errata NOP
 10970                           
 10971                           ;timer.c: 67:     if (lsbs_duty & 0x02) CCP1CON |= (1u << 5);
 10972  00752A  A277               	btfss	update_pwm_duty_ccp1@lsbs_duty^0,1,c
 10973  00752C  EF9A  F03A         	goto	u5971
 10974  007530  EF9D  F03A         	goto	u5970
 10975  007534                     u5971:
 10976  007534  FFFF               	dw	65535	; assembler added errata NOP
 10977  007536  EFA1  F03A         	goto	l4885
 10978  00753A                     u5970:
 10979  00753A  FFFF               	dw	65535	; assembler added errata NOP
 10980  00753C  8ABD               	bsf	189,5,c	;volatile
 10981  00753E  EFA3  F03A         	goto	l4887
 10982  007542                     l4885:
 10983  007542  FFFF               	dw	65535	; assembler added errata NOP
 10984  007544  9ABD               	bcf	189,5,c	;volatile
 10985  007546                     l4887:
 10986  007546  FFFF               	dw	65535	; assembler added errata NOP
 10987                           
 10988                           ;timer.c: 71:     CCPR1L = (uint8_t) (new_duty >> 2);
 10989  007548  C075  F073         	movff	update_pwm_duty_ccp1@new_duty,??_update_pwm_duty_ccp1
 10990  00754C  C076  F074         	movff	update_pwm_duty_ccp1@new_duty+1,??_update_pwm_duty_ccp1+1
 10991  007550  90D8               	bcf	status,0,c
 10992  007552  3274               	rrcf	(??_update_pwm_duty_ccp1+1)^0,f,c
 10993  007554  3273               	rrcf	??_update_pwm_duty_ccp1^0,f,c
 10994  007556  90D8               	bcf	status,0,c
 10995  007558  3274               	rrcf	(??_update_pwm_duty_ccp1+1)^0,f,c
 10996  00755A  3273               	rrcf	??_update_pwm_duty_ccp1^0,f,c
 10997  00755C  5073               	movf	??_update_pwm_duty_ccp1^0,w,c
 10998  00755E  6EBE               	movwf	190,c	;volatile
 10999  007560  0012               	return		;funcret
 11000  007562  FFFF               	dw	65535	; errata NOP
 11001  007564                     __end_of_update_pwm_duty_ccp1:
 11002                           	callstack 0
 11003                           
 11004 ;; *************** function ___fldiv *****************
 11005 ;; Defined at:
 11006 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
 11007 ;; Parameters:    Size  Location     Type
 11008 ;;  b               4   25[COMRAM] void 
 11009 ;;  a               4   29[COMRAM] void 
 11010 ;; Auto vars:     Size  Location     Type
 11011 ;;  grs             4   44[COMRAM] unsigned long 
 11012 ;;  rem             4   37[COMRAM] unsigned long 
 11013 ;;  new_exp         2   42[COMRAM] short 
 11014 ;;  aexp            1   49[COMRAM] unsigned char 
 11015 ;;  bexp            1   48[COMRAM] unsigned char 
 11016 ;;  sign            1   41[COMRAM] unsigned char 
 11017 ;; Return value:  Size  Location     Type
 11018 ;;                  4   25[COMRAM] unsigned char 
 11019 ;; Registers used:
 11020 ;;		wreg, status,2, status,0
 11021 ;; Tracked objects:
 11022 ;;		On entry : 0/0
 11023 ;;		On exit  : 0/0
 11024 ;;		Unchanged: 0/0
 11025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11026 ;;      Params:         8       0       0       0       0       0       0
 11027 ;;      Locals:        13       0       0       0       0       0       0
 11028 ;;      Temps:          4       0       0       0       0       0       0
 11029 ;;      Totals:        25       0       0       0       0       0       0
 11030 ;;Total ram usage:       25 bytes
 11031 ;; Hardware stack levels used:    1
 11032 ;; Hardware stack levels required when called:    1
 11033 ;; This function calls:
 11034 ;;		Nothing
 11035 ;; This function is called by:
 11036 ;;		_init_timer_2
 11037 ;;		_update_pwm_duty_ccp1
 11038 ;; This function uses a non-reentrant model
 11039 ;;
 11040                           
 11041                           	psect	text47
 11042  002392                     __ptext47:
 11043                           	callstack 0
 11044  002392                     ___fldiv:
 11045                           	callstack 0
 11046  002392  FFFF               	dw	65535	; assembler added errata NOP
 11047  002394  501D               	movf	(___fldiv@b+3)^0,w,c
 11048  002396  0B80               	andlw	128
 11049  002398  6E2A               	movwf	___fldiv@sign^0,c
 11050  00239A  501D               	movf	(___fldiv@b+3)^0,w,c
 11051  00239C  241D               	addwf	(___fldiv@b+3)^0,w,c
 11052  00239E  6E31               	movwf	___fldiv@bexp^0,c
 11053  0023A0  AE1C               	btfss	(___fldiv@b+2)^0,7,c
 11054  0023A2  EFD5  F011         	goto	u5311
 11055  0023A6  EFD8  F011         	goto	u5310
 11056  0023AA                     u5311:
 11057  0023AA  FFFF               	dw	65535	; assembler added errata NOP
 11058  0023AC  EFDA  F011         	goto	l4459
 11059  0023B0                     u5310:
 11060  0023B0  FFFF               	dw	65535	; assembler added errata NOP
 11061  0023B2  8031               	bsf	___fldiv@bexp^0,0,c
 11062  0023B4                     l4459:
 11063  0023B4  FFFF               	dw	65535	; assembler added errata NOP
 11064  0023B6  5031               	movf	___fldiv@bexp^0,w,c
 11065  0023B8  B4D8               	btfsc	status,2,c
 11066  0023BA  EFE1  F011         	goto	u5321
 11067  0023BE  EFE4  F011         	goto	u5320
 11068  0023C2                     u5321:
 11069  0023C2  FFFF               	dw	65535	; assembler added errata NOP
 11070  0023C4  EFFD  F011         	goto	l4469
 11071  0023C8                     u5320:
 11072  0023C8  FFFF               	dw	65535	; assembler added errata NOP
 11073  0023CA  2831               	incf	___fldiv@bexp^0,w,c
 11074  0023CC  A4D8               	btfss	status,2,c
 11075  0023CE  EFEB  F011         	goto	u5331
 11076  0023D2  EFEE  F011         	goto	u5330
 11077  0023D6                     u5331:
 11078  0023D6  FFFF               	dw	65535	; assembler added errata NOP
 11079  0023D8  EFF7  F011         	goto	l4465
 11080  0023DC                     u5330:
 11081  0023DC  FFFF               	dw	65535	; assembler added errata NOP
 11082  0023DE  0E00               	movlw	0
 11083  0023E0  6E1A               	movwf	___fldiv@b^0,c
 11084  0023E2  0E00               	movlw	0
 11085  0023E4  6E1B               	movwf	(___fldiv@b+1)^0,c
 11086  0023E6  0E00               	movlw	0
 11087  0023E8  6E1C               	movwf	(___fldiv@b+2)^0,c
 11088  0023EA  0E00               	movlw	0
 11089  0023EC  6E1D               	movwf	(___fldiv@b+3)^0,c
 11090  0023EE                     l4465:
 11091  0023EE  FFFF               	dw	65535	; assembler added errata NOP
 11092  0023F0  8E1C               	bsf	(___fldiv@b+2)^0,7,c
 11093  0023F2  0E00               	movlw	0
 11094  0023F4  6E1D               	movwf	(___fldiv@b+3)^0,c
 11095  0023F6  EF06  F012         	goto	l4471
 11096  0023FA                     l4469:
 11097  0023FA  FFFF               	dw	65535	; assembler added errata NOP
 11098  0023FC  0E00               	movlw	0
 11099  0023FE  6E1A               	movwf	___fldiv@b^0,c
 11100  002400  0E00               	movlw	0
 11101  002402  6E1B               	movwf	(___fldiv@b+1)^0,c
 11102  002404  0E00               	movlw	0
 11103  002406  6E1C               	movwf	(___fldiv@b+2)^0,c
 11104  002408  0E00               	movlw	0
 11105  00240A  6E1D               	movwf	(___fldiv@b+3)^0,c
 11106  00240C                     l4471:
 11107  00240C  FFFF               	dw	65535	; assembler added errata NOP
 11108  00240E  5021               	movf	(___fldiv@a+3)^0,w,c
 11109  002410  0B80               	andlw	128
 11110  002412  1A2A               	xorwf	___fldiv@sign^0,f,c
 11111  002414  5021               	movf	(___fldiv@a+3)^0,w,c
 11112  002416  2421               	addwf	(___fldiv@a+3)^0,w,c
 11113  002418  6E32               	movwf	___fldiv@aexp^0,c
 11114  00241A  AE20               	btfss	(___fldiv@a+2)^0,7,c
 11115  00241C  EF12  F012         	goto	u5341
 11116  002420  EF15  F012         	goto	u5340
 11117  002424                     u5341:
 11118  002424  FFFF               	dw	65535	; assembler added errata NOP
 11119  002426  EF17  F012         	goto	l4479
 11120  00242A                     u5340:
 11121  00242A  FFFF               	dw	65535	; assembler added errata NOP
 11122  00242C  8032               	bsf	___fldiv@aexp^0,0,c
 11123  00242E                     l4479:
 11124  00242E  FFFF               	dw	65535	; assembler added errata NOP
 11125  002430  5032               	movf	___fldiv@aexp^0,w,c
 11126  002432  B4D8               	btfsc	status,2,c
 11127  002434  EF1E  F012         	goto	u5351
 11128  002438  EF21  F012         	goto	u5350
 11129  00243C                     u5351:
 11130  00243C  FFFF               	dw	65535	; assembler added errata NOP
 11131  00243E  EF3A  F012         	goto	l4489
 11132  002442                     u5350:
 11133  002442  FFFF               	dw	65535	; assembler added errata NOP
 11134  002444  2832               	incf	___fldiv@aexp^0,w,c
 11135  002446  A4D8               	btfss	status,2,c
 11136  002448  EF28  F012         	goto	u5361
 11137  00244C  EF2B  F012         	goto	u5360
 11138  002450                     u5361:
 11139  002450  FFFF               	dw	65535	; assembler added errata NOP
 11140  002452  EF34  F012         	goto	l4485
 11141  002456                     u5360:
 11142  002456  FFFF               	dw	65535	; assembler added errata NOP
 11143  002458  0E00               	movlw	0
 11144  00245A  6E1E               	movwf	___fldiv@a^0,c
 11145  00245C  0E00               	movlw	0
 11146  00245E  6E1F               	movwf	(___fldiv@a+1)^0,c
 11147  002460  0E00               	movlw	0
 11148  002462  6E20               	movwf	(___fldiv@a+2)^0,c
 11149  002464  0E00               	movlw	0
 11150  002466  6E21               	movwf	(___fldiv@a+3)^0,c
 11151  002468                     l4485:
 11152  002468  FFFF               	dw	65535	; assembler added errata NOP
 11153  00246A  8E20               	bsf	(___fldiv@a+2)^0,7,c
 11154  00246C  0E00               	movlw	0
 11155  00246E  6E21               	movwf	(___fldiv@a+3)^0,c
 11156  002470  EF43  F012         	goto	l4491
 11157  002474                     l4489:
 11158  002474  FFFF               	dw	65535	; assembler added errata NOP
 11159  002476  0E00               	movlw	0
 11160  002478  6E1E               	movwf	___fldiv@a^0,c
 11161  00247A  0E00               	movlw	0
 11162  00247C  6E1F               	movwf	(___fldiv@a+1)^0,c
 11163  00247E  0E00               	movlw	0
 11164  002480  6E20               	movwf	(___fldiv@a+2)^0,c
 11165  002482  0E00               	movlw	0
 11166  002484  6E21               	movwf	(___fldiv@a+3)^0,c
 11167  002486                     l4491:
 11168  002486  FFFF               	dw	65535	; assembler added errata NOP
 11169  002488  501E               	movf	___fldiv@a^0,w,c
 11170  00248A  101F               	iorwf	(___fldiv@a+1)^0,w,c
 11171  00248C  1020               	iorwf	(___fldiv@a+2)^0,w,c
 11172  00248E  1021               	iorwf	(___fldiv@a+3)^0,w,c
 11173  002490  A4D8               	btfss	status,2,c
 11174  002492  EF4D  F012         	goto	u5371
 11175  002496  EF50  F012         	goto	u5370
 11176  00249A                     u5371:
 11177  00249A  FFFF               	dw	65535	; assembler added errata NOP
 11178  00249C  EF6A  F012         	goto	l4503
 11179  0024A0                     u5370:
 11180  0024A0  FFFF               	dw	65535	; assembler added errata NOP
 11181  0024A2  0E00               	movlw	0
 11182  0024A4  6E1A               	movwf	___fldiv@b^0,c
 11183  0024A6  0E00               	movlw	0
 11184  0024A8  6E1B               	movwf	(___fldiv@b+1)^0,c
 11185  0024AA  0E00               	movlw	0
 11186  0024AC  6E1C               	movwf	(___fldiv@b+2)^0,c
 11187  0024AE  0E00               	movlw	0
 11188  0024B0  6E1D               	movwf	(___fldiv@b+3)^0,c
 11189  0024B2  0E80               	movlw	128
 11190  0024B4  121C               	iorwf	(___fldiv@b+2)^0,f,c
 11191  0024B6  0E7F               	movlw	127
 11192  0024B8  121D               	iorwf	(___fldiv@b+3)^0,f,c
 11193  0024BA                     l4497:
 11194  0024BA  FFFF               	dw	65535	; assembler added errata NOP
 11195  0024BC  502A               	movf	___fldiv@sign^0,w,c
 11196  0024BE  121D               	iorwf	(___fldiv@b+3)^0,f,c
 11197  0024C0  C01A  F01A         	movff	___fldiv@b,?___fldiv
 11198  0024C4  C01B  F01B         	movff	___fldiv@b+1,?___fldiv+1
 11199  0024C8  C01C  F01C         	movff	___fldiv@b+2,?___fldiv+2
 11200  0024CC  C01D  F01D         	movff	___fldiv@b+3,?___fldiv+3
 11201  0024D0  EFDF  F013         	goto	l907
 11202  0024D4                     l4503:
 11203  0024D4  FFFF               	dw	65535	; assembler added errata NOP
 11204  0024D6  5031               	movf	___fldiv@bexp^0,w,c
 11205  0024D8  A4D8               	btfss	status,2,c
 11206  0024DA  EF71  F012         	goto	u5381
 11207  0024DE  EF74  F012         	goto	u5380
 11208  0024E2                     u5381:
 11209  0024E2  FFFF               	dw	65535	; assembler added errata NOP
 11210  0024E4  EF7F  F012         	goto	l4511
 11211  0024E8                     u5380:
 11212  0024E8  FFFF               	dw	65535	; assembler added errata NOP
 11213  0024EA  0E00               	movlw	0
 11214  0024EC  6E1A               	movwf	?___fldiv^0,c
 11215  0024EE  0E00               	movlw	0
 11216  0024F0  6E1B               	movwf	(?___fldiv+1)^0,c
 11217  0024F2  0E00               	movlw	0
 11218  0024F4  6E1C               	movwf	(?___fldiv+2)^0,c
 11219  0024F6  0E00               	movlw	0
 11220  0024F8  6E1D               	movwf	(?___fldiv+3)^0,c
 11221  0024FA  EFDF  F013         	goto	l907
 11222  0024FE                     l4511:
 11223  0024FE  FFFF               	dw	65535	; assembler added errata NOP
 11224  002500  5032               	movf	___fldiv@aexp^0,w,c
 11225  002502  C031  F022         	movff	___fldiv@bexp,??___fldiv
 11226  002506  6A23               	clrf	(??___fldiv+1)^0,c
 11227  002508  5E22               	subwf	??___fldiv^0,f,c
 11228  00250A  0E00               	movlw	0
 11229  00250C  5A23               	subwfb	(??___fldiv+1)^0,f,c
 11230  00250E  0E7F               	movlw	127
 11231  002510  2422               	addwf	??___fldiv^0,w,c
 11232  002512  6E2B               	movwf	___fldiv@new_exp^0,c
 11233  002514  0E00               	movlw	0
 11234  002516  2023               	addwfc	(??___fldiv+1)^0,w,c
 11235  002518  6E2C               	movwf	(___fldiv@new_exp+1)^0,c
 11236  00251A  C01A  F026         	movff	___fldiv@b,___fldiv@rem
 11237  00251E  C01B  F027         	movff	___fldiv@b+1,___fldiv@rem+1
 11238  002522  C01C  F028         	movff	___fldiv@b+2,___fldiv@rem+2
 11239  002526  C01D  F029         	movff	___fldiv@b+3,___fldiv@rem+3
 11240  00252A  0E00               	movlw	0
 11241  00252C  6E1A               	movwf	___fldiv@b^0,c
 11242  00252E  0E00               	movlw	0
 11243  002530  6E1B               	movwf	(___fldiv@b+1)^0,c
 11244  002532  0E00               	movlw	0
 11245  002534  6E1C               	movwf	(___fldiv@b+2)^0,c
 11246  002536  0E00               	movlw	0
 11247  002538  6E1D               	movwf	(___fldiv@b+3)^0,c
 11248  00253A  0E00               	movlw	0
 11249  00253C  6E2D               	movwf	___fldiv@grs^0,c
 11250  00253E  0E00               	movlw	0
 11251  002540  6E2E               	movwf	(___fldiv@grs+1)^0,c
 11252  002542  0E00               	movlw	0
 11253  002544  6E2F               	movwf	(___fldiv@grs+2)^0,c
 11254  002546  0E00               	movlw	0
 11255  002548  6E30               	movwf	(___fldiv@grs+3)^0,c
 11256  00254A  0E00               	movlw	0
 11257  00254C  6E32               	movwf	___fldiv@aexp^0,c
 11258  00254E  EFEB  F012         	goto	l909
 11259  002552                     l4521:
 11260  002552  FFFF               	dw	65535	; assembler added errata NOP
 11261  002554  5032               	movf	___fldiv@aexp^0,w,c
 11262  002556  B4D8               	btfsc	status,2,c
 11263  002558  EFB0  F012         	goto	u5391
 11264  00255C  EFB3  F012         	goto	u5390
 11265  002560                     u5391:
 11266  002560  FFFF               	dw	65535	; assembler added errata NOP
 11267  002562  EFCE  F012         	goto	l4529
 11268  002566                     u5390:
 11269  002566  FFFF               	dw	65535	; assembler added errata NOP
 11270  002568  90D8               	bcf	status,0,c
 11271  00256A  3626               	rlcf	___fldiv@rem^0,f,c
 11272  00256C  3627               	rlcf	(___fldiv@rem+1)^0,f,c
 11273  00256E  3628               	rlcf	(___fldiv@rem+2)^0,f,c
 11274  002570  3629               	rlcf	(___fldiv@rem+3)^0,f,c
 11275  002572  90D8               	bcf	status,0,c
 11276  002574  361A               	rlcf	___fldiv@b^0,f,c
 11277  002576  361B               	rlcf	(___fldiv@b+1)^0,f,c
 11278  002578  361C               	rlcf	(___fldiv@b+2)^0,f,c
 11279  00257A  361D               	rlcf	(___fldiv@b+3)^0,f,c
 11280  00257C  AE30               	btfss	(___fldiv@grs+3)^0,7,c
 11281  00257E  EFC3  F012         	goto	u5401
 11282  002582  EFC6  F012         	goto	u5400
 11283  002586                     u5401:
 11284  002586  FFFF               	dw	65535	; assembler added errata NOP
 11285  002588  EFC8  F012         	goto	l912
 11286  00258C                     u5400:
 11287  00258C  FFFF               	dw	65535	; assembler added errata NOP
 11288  00258E  801A               	bsf	___fldiv@b^0,0,c
 11289  002590                     l912:
 11290  002590  FFFF               	dw	65535	; assembler added errata NOP
 11291  002592  90D8               	bcf	status,0,c
 11292  002594  362D               	rlcf	___fldiv@grs^0,f,c
 11293  002596  362E               	rlcf	(___fldiv@grs+1)^0,f,c
 11294  002598  362F               	rlcf	(___fldiv@grs+2)^0,f,c
 11295  00259A  3630               	rlcf	(___fldiv@grs+3)^0,f,c
 11296  00259C                     l4529:
 11297  00259C  FFFF               	dw	65535	; assembler added errata NOP
 11298  00259E  501E               	movf	___fldiv@a^0,w,c
 11299  0025A0  5C26               	subwf	___fldiv@rem^0,w,c
 11300  0025A2  501F               	movf	(___fldiv@a+1)^0,w,c
 11301  0025A4  5827               	subwfb	(___fldiv@rem+1)^0,w,c
 11302  0025A6  5020               	movf	(___fldiv@a+2)^0,w,c
 11303  0025A8  5828               	subwfb	(___fldiv@rem+2)^0,w,c
 11304  0025AA  5021               	movf	(___fldiv@a+3)^0,w,c
 11305  0025AC  5829               	subwfb	(___fldiv@rem+3)^0,w,c
 11306  0025AE  A0D8               	btfss	status,0,c
 11307  0025B0  EFDC  F012         	goto	u5411
 11308  0025B4  EFDF  F012         	goto	u5410
 11309  0025B8                     u5411:
 11310  0025B8  FFFF               	dw	65535	; assembler added errata NOP
 11311  0025BA  EFE9  F012         	goto	l4535
 11312  0025BE                     u5410:
 11313  0025BE  FFFF               	dw	65535	; assembler added errata NOP
 11314  0025C0  8C30               	bsf	(___fldiv@grs+3)^0,6,c
 11315  0025C2  501E               	movf	___fldiv@a^0,w,c
 11316  0025C4  5E26               	subwf	___fldiv@rem^0,f,c
 11317  0025C6  501F               	movf	(___fldiv@a+1)^0,w,c
 11318  0025C8  5A27               	subwfb	(___fldiv@rem+1)^0,f,c
 11319  0025CA  5020               	movf	(___fldiv@a+2)^0,w,c
 11320  0025CC  5A28               	subwfb	(___fldiv@rem+2)^0,f,c
 11321  0025CE  5021               	movf	(___fldiv@a+3)^0,w,c
 11322  0025D0  5A29               	subwfb	(___fldiv@rem+3)^0,f,c
 11323  0025D2                     l4535:
 11324  0025D2  FFFF               	dw	65535	; assembler added errata NOP
 11325  0025D4  2A32               	incf	___fldiv@aexp^0,f,c
 11326  0025D6                     l909:
 11327  0025D6  FFFF               	dw	65535	; assembler added errata NOP
 11328  0025D8  0E19               	movlw	25
 11329  0025DA  6432               	cpfsgt	___fldiv@aexp^0,c
 11330  0025DC  EFF2  F012         	goto	u5421
 11331  0025E0  EFF5  F012         	goto	u5420
 11332  0025E4                     u5421:
 11333  0025E4  FFFF               	dw	65535	; assembler added errata NOP
 11334  0025E6  EFA9  F012         	goto	l4521
 11335  0025EA                     u5420:
 11336  0025EA  FFFF               	dw	65535	; assembler added errata NOP
 11337  0025EC  5026               	movf	___fldiv@rem^0,w,c
 11338  0025EE  1027               	iorwf	(___fldiv@rem+1)^0,w,c
 11339  0025F0  1028               	iorwf	(___fldiv@rem+2)^0,w,c
 11340  0025F2  1029               	iorwf	(___fldiv@rem+3)^0,w,c
 11341  0025F4  B4D8               	btfsc	status,2,c
 11342  0025F6  EFFF  F012         	goto	u5431
 11343  0025FA  EF02  F013         	goto	u5430
 11344  0025FE                     u5431:
 11345  0025FE  FFFF               	dw	65535	; assembler added errata NOP
 11346  002600  EF1F  F013         	goto	l4547
 11347  002604                     u5430:
 11348  002604  FFFF               	dw	65535	; assembler added errata NOP
 11349  002606  802D               	bsf	___fldiv@grs^0,0,c
 11350  002608  EF1F  F013         	goto	l4547
 11351  00260C                     l4541:
 11352  00260C  FFFF               	dw	65535	; assembler added errata NOP
 11353  00260E  90D8               	bcf	status,0,c
 11354  002610  361A               	rlcf	___fldiv@b^0,f,c
 11355  002612  361B               	rlcf	(___fldiv@b+1)^0,f,c
 11356  002614  361C               	rlcf	(___fldiv@b+2)^0,f,c
 11357  002616  361D               	rlcf	(___fldiv@b+3)^0,f,c
 11358  002618  AE30               	btfss	(___fldiv@grs+3)^0,7,c
 11359  00261A  EF11  F013         	goto	u5441
 11360  00261E  EF14  F013         	goto	u5440
 11361  002622                     u5441:
 11362  002622  FFFF               	dw	65535	; assembler added errata NOP
 11363  002624  EF16  F013         	goto	l918
 11364  002628                     u5440:
 11365  002628  FFFF               	dw	65535	; assembler added errata NOP
 11366  00262A  801A               	bsf	___fldiv@b^0,0,c
 11367  00262C                     l918:
 11368  00262C  FFFF               	dw	65535	; assembler added errata NOP
 11369  00262E  90D8               	bcf	status,0,c
 11370  002630  362D               	rlcf	___fldiv@grs^0,f,c
 11371  002632  362E               	rlcf	(___fldiv@grs+1)^0,f,c
 11372  002634  362F               	rlcf	(___fldiv@grs+2)^0,f,c
 11373  002636  3630               	rlcf	(___fldiv@grs+3)^0,f,c
 11374  002638  062B               	decf	___fldiv@new_exp^0,f,c
 11375  00263A  A0D8               	btfss	status,0,c
 11376  00263C  062C               	decf	(___fldiv@new_exp+1)^0,f,c
 11377  00263E                     l4547:
 11378  00263E  FFFF               	dw	65535	; assembler added errata NOP
 11379  002640  AE1C               	btfss	(___fldiv@b+2)^0,7,c
 11380  002642  EF25  F013         	goto	u5451
 11381  002646  EF28  F013         	goto	u5450
 11382  00264A                     u5451:
 11383  00264A  FFFF               	dw	65535	; assembler added errata NOP
 11384  00264C  EF06  F013         	goto	l4541
 11385  002650                     u5450:
 11386  002650  FFFF               	dw	65535	; assembler added errata NOP
 11387  002652  0E00               	movlw	0
 11388  002654  6E32               	movwf	___fldiv@aexp^0,c
 11389  002656  AE30               	btfss	(___fldiv@grs+3)^0,7,c
 11390  002658  EF30  F013         	goto	u5461
 11391  00265C  EF33  F013         	goto	u5460
 11392  002660                     u5461:
 11393  002660  FFFF               	dw	65535	; assembler added errata NOP
 11394  002662  EF5E  F013         	goto	l920
 11395  002666                     u5460:
 11396  002666  FFFF               	dw	65535	; assembler added errata NOP
 11397  002668  0EFF               	movlw	255
 11398  00266A  142D               	andwf	___fldiv@grs^0,w,c
 11399  00266C  6E22               	movwf	??___fldiv^0,c
 11400  00266E  0EFF               	movlw	255
 11401  002670  142E               	andwf	(___fldiv@grs+1)^0,w,c
 11402  002672  6E23               	movwf	(??___fldiv+1)^0,c
 11403  002674  0EFF               	movlw	255
 11404  002676  142F               	andwf	(___fldiv@grs+2)^0,w,c
 11405  002678  6E24               	movwf	(??___fldiv+2)^0,c
 11406  00267A  0E7F               	movlw	127
 11407  00267C  1430               	andwf	(___fldiv@grs+3)^0,w,c
 11408  00267E  6E25               	movwf	(??___fldiv+3)^0,c
 11409  002680  5022               	movf	??___fldiv^0,w,c
 11410  002682  1023               	iorwf	(??___fldiv+1)^0,w,c
 11411  002684  1024               	iorwf	(??___fldiv+2)^0,w,c
 11412  002686  1025               	iorwf	(??___fldiv+3)^0,w,c
 11413  002688  B4D8               	btfsc	status,2,c
 11414  00268A  EF49  F013         	goto	u5471
 11415  00268E  EF4C  F013         	goto	u5470
 11416  002692                     u5471:
 11417  002692  FFFF               	dw	65535	; assembler added errata NOP
 11418  002694  EF52  F013         	goto	l921
 11419  002698                     u5470:
 11420  002698  FFFF               	dw	65535	; assembler added errata NOP
 11421  00269A                     l4555:
 11422  00269A  FFFF               	dw	65535	; assembler added errata NOP
 11423  00269C  0E01               	movlw	1
 11424  00269E  6E32               	movwf	___fldiv@aexp^0,c
 11425  0026A0  EF5E  F013         	goto	l920
 11426  0026A4                     l921:
 11427  0026A4  FFFF               	dw	65535	; assembler added errata NOP
 11428  0026A6  A01A               	btfss	___fldiv@b^0,0,c
 11429  0026A8  EF58  F013         	goto	u5481
 11430  0026AC  EF5B  F013         	goto	u5480
 11431  0026B0                     u5481:
 11432  0026B0  FFFF               	dw	65535	; assembler added errata NOP
 11433  0026B2  EF5E  F013         	goto	l920
 11434  0026B6                     u5480:
 11435  0026B6  FFFF               	dw	65535	; assembler added errata NOP
 11436  0026B8  EF4D  F013         	goto	l4555
 11437  0026BC                     l920:
 11438  0026BC  FFFF               	dw	65535	; assembler added errata NOP
 11439  0026BE  5032               	movf	___fldiv@aexp^0,w,c
 11440  0026C0  B4D8               	btfsc	status,2,c
 11441  0026C2  EF65  F013         	goto	u5491
 11442  0026C6  EF68  F013         	goto	u5490
 11443  0026CA                     u5491:
 11444  0026CA  FFFF               	dw	65535	; assembler added errata NOP
 11445  0026CC  EF8F  F013         	goto	l4567
 11446  0026D0                     u5490:
 11447  0026D0  FFFF               	dw	65535	; assembler added errata NOP
 11448  0026D2  0E01               	movlw	1
 11449  0026D4  261A               	addwf	___fldiv@b^0,f,c
 11450  0026D6  0E00               	movlw	0
 11451  0026D8  221B               	addwfc	(___fldiv@b+1)^0,f,c
 11452  0026DA  221C               	addwfc	(___fldiv@b+2)^0,f,c
 11453  0026DC  221D               	addwfc	(___fldiv@b+3)^0,f,c
 11454  0026DE  A01D               	btfss	(___fldiv@b+3)^0,0,c
 11455  0026E0  EF74  F013         	goto	u5501
 11456  0026E4  EF77  F013         	goto	u5500
 11457  0026E8                     u5501:
 11458  0026E8  FFFF               	dw	65535	; assembler added errata NOP
 11459  0026EA  EF8F  F013         	goto	l4567
 11460  0026EE                     u5500:
 11461  0026EE  FFFF               	dw	65535	; assembler added errata NOP
 11462  0026F0  C01A  F022         	movff	___fldiv@b,??___fldiv
 11463  0026F4  C01B  F023         	movff	___fldiv@b+1,??___fldiv+1
 11464  0026F8  C01C  F024         	movff	___fldiv@b+2,??___fldiv+2
 11465  0026FC  C01D  F025         	movff	___fldiv@b+3,??___fldiv+3
 11466  002700  3425               	rlcf	(??___fldiv+3)^0,w,c
 11467  002702  3225               	rrcf	(??___fldiv+3)^0,f,c
 11468  002704  3224               	rrcf	(??___fldiv+2)^0,f,c
 11469  002706  3223               	rrcf	(??___fldiv+1)^0,f,c
 11470  002708  3222               	rrcf	??___fldiv^0,f,c
 11471  00270A  C022  F01A         	movff	??___fldiv,___fldiv@b
 11472  00270E  C023  F01B         	movff	??___fldiv+1,___fldiv@b+1
 11473  002712  C024  F01C         	movff	??___fldiv+2,___fldiv@b+2
 11474  002716  C025  F01D         	movff	??___fldiv+3,___fldiv@b+3
 11475  00271A  4A2B               	infsnz	___fldiv@new_exp^0,f,c
 11476  00271C  2A2C               	incf	(___fldiv@new_exp+1)^0,f,c
 11477  00271E                     l4567:
 11478  00271E  FFFF               	dw	65535	; assembler added errata NOP
 11479  002720  BE2C               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11480  002722  EF9B  F013         	goto	u5511
 11481  002726  502C               	movf	(___fldiv@new_exp+1)^0,w,c
 11482  002728  E109               	bnz	u5510
 11483  00272A  282B               	incf	___fldiv@new_exp^0,w,c
 11484  00272C  A0D8               	btfss	status,0,c
 11485  00272E  EF9B  F013         	goto	u5511
 11486  002732  EF9E  F013         	goto	u5510
 11487  002736                     u5511:
 11488  002736  FFFF               	dw	65535	; assembler added errata NOP
 11489  002738  EFAA  F013         	goto	l4571
 11490  00273C                     u5510:
 11491  00273C  FFFF               	dw	65535	; assembler added errata NOP
 11492  00273E  0E00               	movlw	0
 11493  002740  6E2C               	movwf	(___fldiv@new_exp+1)^0,c
 11494  002742  682B               	setf	___fldiv@new_exp^0,c
 11495  002744  0E00               	movlw	0
 11496  002746  6E1A               	movwf	___fldiv@b^0,c
 11497  002748  0E00               	movlw	0
 11498  00274A  6E1B               	movwf	(___fldiv@b+1)^0,c
 11499  00274C  0E00               	movlw	0
 11500  00274E  6E1C               	movwf	(___fldiv@b+2)^0,c
 11501  002750  0E00               	movlw	0
 11502  002752  6E1D               	movwf	(___fldiv@b+3)^0,c
 11503  002754                     l4571:
 11504  002754  FFFF               	dw	65535	; assembler added errata NOP
 11505  002756  BE2C               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11506  002758  EFB9  F013         	goto	u5520
 11507  00275C  502C               	movf	(___fldiv@new_exp+1)^0,w,c
 11508  00275E  E106               	bnz	u5521
 11509  002760  042B               	decf	___fldiv@new_exp^0,w,c
 11510  002762  B0D8               	btfsc	status,0,c
 11511  002764  EFB6  F013         	goto	u5521
 11512  002768  EFB9  F013         	goto	u5520
 11513  00276C                     u5521:
 11514  00276C  FFFF               	dw	65535	; assembler added errata NOP
 11515  00276E  EFC8  F013         	goto	l4575
 11516  002772                     u5520:
 11517  002772  FFFF               	dw	65535	; assembler added errata NOP
 11518  002774  0E00               	movlw	0
 11519  002776  6E2C               	movwf	(___fldiv@new_exp+1)^0,c
 11520  002778  0E00               	movlw	0
 11521  00277A  6E2B               	movwf	___fldiv@new_exp^0,c
 11522  00277C  0E00               	movlw	0
 11523  00277E  6E1A               	movwf	___fldiv@b^0,c
 11524  002780  0E00               	movlw	0
 11525  002782  6E1B               	movwf	(___fldiv@b+1)^0,c
 11526  002784  0E00               	movlw	0
 11527  002786  6E1C               	movwf	(___fldiv@b+2)^0,c
 11528  002788  0E00               	movlw	0
 11529  00278A  6E1D               	movwf	(___fldiv@b+3)^0,c
 11530  00278C  0E00               	movlw	0
 11531  00278E  6E2A               	movwf	___fldiv@sign^0,c
 11532  002790                     l4575:
 11533  002790  FFFF               	dw	65535	; assembler added errata NOP
 11534  002792  C02B  F031         	movff	___fldiv@new_exp,___fldiv@bexp
 11535  002796  A031               	btfss	___fldiv@bexp^0,0,c
 11536  002798  EFD0  F013         	goto	u5531
 11537  00279C  EFD3  F013         	goto	u5530
 11538  0027A0                     u5531:
 11539  0027A0  FFFF               	dw	65535	; assembler added errata NOP
 11540  0027A2  EFD7  F013         	goto	l4581
 11541  0027A6                     u5530:
 11542  0027A6  FFFF               	dw	65535	; assembler added errata NOP
 11543  0027A8  8E1C               	bsf	(___fldiv@b+2)^0,7,c
 11544  0027AA  EFD9  F013         	goto	l4583
 11545  0027AE                     l4581:
 11546  0027AE  FFFF               	dw	65535	; assembler added errata NOP
 11547  0027B0  9E1C               	bcf	(___fldiv@b+2)^0,7,c
 11548  0027B2                     l4583:
 11549  0027B2  FFFF               	dw	65535	; assembler added errata NOP
 11550  0027B4  90D8               	bcf	status,0,c
 11551  0027B6  3031               	rrcf	___fldiv@bexp^0,w,c
 11552  0027B8  6E1D               	movwf	(___fldiv@b+3)^0,c
 11553  0027BA  EF5D  F012         	goto	l4497
 11554  0027BE                     l907:
 11555  0027BE  FFFF               	dw	65535	; assembler added errata NOP
 11556  0027C0  0012               	return		;funcret
 11557  0027C2  FFFF               	dw	65535	; errata NOP
 11558  0027C4                     __end_of___fldiv:
 11559                           	callstack 0
 11560                           
 11561 ;; *************** function _init_USART *****************
 11562 ;; Defined at:
 11563 ;;		line 13 in file "serial_rs232.c"
 11564 ;; Parameters:    Size  Location     Type
 11565 ;;		None
 11566 ;; Auto vars:     Size  Location     Type
 11567 ;;		None
 11568 ;; Return value:  Size  Location     Type
 11569 ;;                  1    wreg      void 
 11570 ;; Registers used:
 11571 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11572 ;; Tracked objects:
 11573 ;;		On entry : 0/0
 11574 ;;		On exit  : 0/0
 11575 ;;		Unchanged: 0/0
 11576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11577 ;;      Params:         0       0       0       0       0       0       0
 11578 ;;      Locals:         0       0       0       0       0       0       0
 11579 ;;      Temps:          0       0       0       0       0       0       0
 11580 ;;      Totals:         0       0       0       0       0       0       0
 11581 ;;Total ram usage:        0 bytes
 11582 ;; Hardware stack levels used:    1
 11583 ;; Hardware stack levels required when called:    4
 11584 ;; This function calls:
 11585 ;;		___fltol
 11586 ;;		_roundf
 11587 ;; This function is called by:
 11588 ;;		_main
 11589 ;; This function uses a non-reentrant model
 11590 ;;
 11591                           
 11592                           	psect	text48
 11593  006DF0                     __ptext48:
 11594                           	callstack 0
 11595  006DF0                     _init_USART:
 11596                           	callstack 0
 11597  006DF0  FFFF               	dw	65535	; assembler added errata NOP
 11598  006DF2                     
 11599                           ;serial_rs232.c: 24:     SPBRG = roundf(((fosc / desired_baudrate) / 16) - 1);
 11600  006DF2  0E55               	movlw	85
 11601  006DF4  6E4B               	movwf	roundf@x^0,c
 11602  006DF6  0E55               	movlw	85
 11603  006DF8  6E4C               	movwf	(roundf@x+1)^0,c
 11604  006DFA  0EC8               	movlw	200
 11605  006DFC  6E4D               	movwf	(roundf@x+2)^0,c
 11606  006DFE  0E41               	movlw	65
 11607  006E00  6E4E               	movwf	(roundf@x+3)^0,c
 11608  006E02  ECE2  F013         	call	_roundf	;wreg free
 11609  006E06  C04B  F065         	movff	?_roundf,___fltol@f1
 11610  006E0A  C04C  F066         	movff	?_roundf+1,___fltol@f1+1
 11611  006E0E  C04D  F067         	movff	?_roundf+2,___fltol@f1+2
 11612  006E12  C04E  F068         	movff	?_roundf+3,___fltol@f1+3
 11613  006E16  EC37  F01F         	call	___fltol	;wreg free
 11614  006E1A  5065               	movf	?___fltol^0,w,c
 11615  006E1C  6EAF               	movwf	175,c	;volatile
 11616  006E1E                     
 11617                           ;serial_rs232.c: 28:     TXSTAbits.TX9 = 0;
 11618  006E1E  9CAC               	bcf	172,6,c	;volatile
 11619  006E20                     
 11620                           ;serial_rs232.c: 29:     TXSTAbits.TXEN = 1;
 11621  006E20  8AAC               	bsf	172,5,c	;volatile
 11622  006E22                     
 11623                           ;serial_rs232.c: 30:     TXSTAbits.SYNC =0;
 11624  006E22  98AC               	bcf	172,4,c	;volatile
 11625  006E24                     
 11626                           ;serial_rs232.c: 31:     TXSTAbits.BRGH = 1;
 11627  006E24  84AC               	bsf	172,2,c	;volatile
 11628  006E26                     
 11629                           ;serial_rs232.c: 33:     RCSTAbits.SPEN = 1;
 11630  006E26  8EAB               	bsf	171,7,c	;volatile
 11631  006E28                     
 11632                           ;serial_rs232.c: 34:     RCSTAbits.RX9 = 0;
 11633  006E28  9CAB               	bcf	171,6,c	;volatile
 11634  006E2A                     
 11635                           ;serial_rs232.c: 35:     RCSTAbits.CREN = 1;
 11636  006E2A  88AB               	bsf	171,4,c	;volatile
 11637  006E2C  0012               	return		;funcret
 11638  006E2E  FFFF               	dw	65535	; errata NOP
 11639  006E30                     __end_of_init_USART:
 11640                           	callstack 0
 11641                           
 11642 ;; *************** function _roundf *****************
 11643 ;; Defined at:
 11644 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\roundf.c"
 11645 ;; Parameters:    Size  Location     Type
 11646 ;;  x               4   74[COMRAM] float 
 11647 ;; Auto vars:     Size  Location     Type
 11648 ;;  y               4   96[COMRAM] float 
 11649 ;;  u               4   92[COMRAM] struct .
 11650 ;;  e               2   86[COMRAM] int 
 11651 ;; Return value:  Size  Location     Type
 11652 ;;                  4   74[COMRAM] float 
 11653 ;; Registers used:
 11654 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11655 ;; Tracked objects:
 11656 ;;		On entry : 0/0
 11657 ;;		On exit  : 0/0
 11658 ;;		Unchanged: 0/0
 11659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11660 ;;      Params:         4       0       0       0       0       0       0
 11661 ;;      Locals:        18       0       0       0       0       0       0
 11662 ;;      Temps:          4       0       0       0       0       0       0
 11663 ;;      Totals:        26       0       0       0       0       0       0
 11664 ;;Total ram usage:       26 bytes
 11665 ;; Hardware stack levels used:    1
 11666 ;; Hardware stack levels required when called:    3
 11667 ;; This function calls:
 11668 ;;		___fladd
 11669 ;;		___flge
 11670 ;;		___flmul
 11671 ;;		___flneg
 11672 ;;		___flsub
 11673 ;; This function is called by:
 11674 ;;		_init_USART
 11675 ;; This function uses a non-reentrant model
 11676 ;;
 11677                           
 11678                           	psect	text49
 11679  0027C4                     __ptext49:
 11680                           	callstack 0
 11681  0027C4                     _roundf:
 11682                           	callstack 0
 11683  0027C4  FFFF               	dw	65535	; assembler added errata NOP
 11684  0027C6  C080  F05D         	movff	roundf@F525,roundf@u
 11685  0027CA  C081  F05E         	movff	roundf@F525+1,roundf@u+1
 11686  0027CE  C082  F05F         	movff	roundf@F525+2,roundf@u+2
 11687  0027D2  C083  F060         	movff	roundf@F525+3,roundf@u+3
 11688  0027D6  C04B  F05D         	movff	roundf@x,roundf@u
 11689  0027DA  C04C  F05E         	movff	roundf@x+1,roundf@u+1
 11690  0027DE  C04D  F05F         	movff	roundf@x+2,roundf@u+2
 11691  0027E2  C04E  F060         	movff	roundf@x+3,roundf@u+3
 11692  0027E6  C05D  F04F         	movff	roundf@u,??_roundf
 11693  0027EA  C05E  F050         	movff	roundf@u+1,??_roundf+1
 11694  0027EE  C05F  F051         	movff	roundf@u+2,??_roundf+2
 11695  0027F2  C060  F052         	movff	roundf@u+3,??_roundf+3
 11696  0027F6  0E18               	movlw	24
 11697  0027F8  EF04  F014         	goto	u5870
 11698  0027FC                     u5875:
 11699  0027FC  FFFF               	dw	65535	; assembler added errata NOP
 11700  0027FE  90D8               	bcf	status,0,c
 11701  002800  3252               	rrcf	(??_roundf+3)^0,f,c
 11702  002802  3251               	rrcf	(??_roundf+2)^0,f,c
 11703  002804  3250               	rrcf	(??_roundf+1)^0,f,c
 11704  002806  324F               	rrcf	??_roundf^0,f,c
 11705  002808                     u5870:
 11706  002808  FFFF               	dw	65535	; assembler added errata NOP
 11707  00280A  2EE8               	decfsz	wreg,f,c
 11708  00280C  EFFE  F013         	goto	u5875
 11709  002810  504F               	movf	??_roundf^0,w,c
 11710  002812  6E57               	movwf	roundf@e^0,c
 11711  002814  6A58               	clrf	(roundf@e+1)^0,c
 11712  002816  BE58               	btfsc	(roundf@e+1)^0,7,c
 11713  002818  EF17  F014         	goto	u5881
 11714  00281C  5058               	movf	(roundf@e+1)^0,w,c
 11715  00281E  E10A               	bnz	u5880
 11716  002820  0E96               	movlw	150
 11717  002822  5C57               	subwf	roundf@e^0,w,c
 11718  002824  A0D8               	btfss	status,0,c
 11719  002826  EF17  F014         	goto	u5881
 11720  00282A  EF1A  F014         	goto	u5880
 11721  00282E                     u5881:
 11722  00282E  FFFF               	dw	65535	; assembler added errata NOP
 11723  002830  EF25  F014         	goto	l4815
 11724  002834                     u5880:
 11725  002834  FFFF               	dw	65535	; assembler added errata NOP
 11726  002836  C04B  F04B         	movff	roundf@x,?_roundf
 11727  00283A  C04C  F04C         	movff	roundf@x+1,?_roundf+1
 11728  00283E  C04D  F04D         	movff	roundf@x+2,?_roundf+2
 11729  002842  C04E  F04E         	movff	roundf@x+3,?_roundf+3
 11730  002846  EFD2  F015         	goto	l1004
 11731  00284A                     l4815:
 11732  00284A  FFFF               	dw	65535	; assembler added errata NOP
 11733  00284C  C05D  F04F         	movff	roundf@u,??_roundf
 11734  002850  C05E  F050         	movff	roundf@u+1,??_roundf+1
 11735  002854  C05F  F051         	movff	roundf@u+2,??_roundf+2
 11736  002858  C060  F052         	movff	roundf@u+3,??_roundf+3
 11737  00285C  0E20               	movlw	32
 11738  00285E  EF37  F014         	goto	u5890
 11739  002862                     u5895:
 11740  002862  FFFF               	dw	65535	; assembler added errata NOP
 11741  002864  90D8               	bcf	status,0,c
 11742  002866  3252               	rrcf	(??_roundf+3)^0,f,c
 11743  002868  3251               	rrcf	(??_roundf+2)^0,f,c
 11744  00286A  3250               	rrcf	(??_roundf+1)^0,f,c
 11745  00286C  324F               	rrcf	??_roundf^0,f,c
 11746  00286E                     u5890:
 11747  00286E  FFFF               	dw	65535	; assembler added errata NOP
 11748  002870  2EE8               	decfsz	wreg,f,c
 11749  002872  EF31  F014         	goto	u5895
 11750  002876  504F               	movf	??_roundf^0,w,c
 11751  002878  1050               	iorwf	(??_roundf+1)^0,w,c
 11752  00287A  1051               	iorwf	(??_roundf+2)^0,w,c
 11753  00287C  1052               	iorwf	(??_roundf+3)^0,w,c
 11754  00287E  B4D8               	btfsc	status,2,c
 11755  002880  EF44  F014         	goto	u5901
 11756  002884  EF47  F014         	goto	u5900
 11757  002888                     u5901:
 11758  002888  FFFF               	dw	65535	; assembler added errata NOP
 11759  00288A  EF5A  F014         	goto	l4819
 11760  00288E                     u5900:
 11761  00288E  FFFF               	dw	65535	; assembler added errata NOP
 11762  002890  C04B  F001         	movff	roundf@x,___flneg@f1
 11763  002894  C04C  F002         	movff	roundf@x+1,___flneg@f1+1
 11764  002898  C04D  F003         	movff	roundf@x+2,___flneg@f1+2
 11765  00289C  C04E  F004         	movff	roundf@x+3,___flneg@f1+3
 11766  0028A0  EC18  F037         	call	___flneg	;wreg free
 11767  0028A4  C001  F04B         	movff	?___flneg,roundf@x
 11768  0028A8  C002  F04C         	movff	?___flneg+1,roundf@x+1
 11769  0028AC  C003  F04D         	movff	?___flneg+2,roundf@x+2
 11770  0028B0  C004  F04E         	movff	?___flneg+3,roundf@x+3
 11771  0028B4                     l4819:
 11772  0028B4  FFFF               	dw	65535	; assembler added errata NOP
 11773  0028B6  BE58               	btfsc	(roundf@e+1)^0,7,c
 11774  0028B8  EF6A  F014         	goto	u5910
 11775  0028BC  5058               	movf	(roundf@e+1)^0,w,c
 11776  0028BE  E107               	bnz	u5911
 11777  0028C0  0E7E               	movlw	126
 11778  0028C2  5C57               	subwf	roundf@e^0,w,c
 11779  0028C4  B0D8               	btfsc	status,0,c
 11780  0028C6  EF67  F014         	goto	u5911
 11781  0028CA  EF6A  F014         	goto	u5910
 11782  0028CE                     u5911:
 11783  0028CE  FFFF               	dw	65535	; assembler added errata NOP
 11784  0028D0  EF87  F014         	goto	l4825
 11785  0028D4                     u5910:
 11786  0028D4  FFFF               	dw	65535	; assembler added errata NOP
 11787  0028D6  C05D  F001         	movff	roundf@u,___flmul@b
 11788  0028DA  C05E  F002         	movff	roundf@u+1,___flmul@b+1
 11789  0028DE  C05F  F003         	movff	roundf@u+2,___flmul@b+2
 11790  0028E2  C060  F004         	movff	roundf@u+3,___flmul@b+3
 11791  0028E6  0E00               	movlw	0
 11792  0028E8  6E05               	movwf	___flmul@a^0,c
 11793  0028EA  0E00               	movlw	0
 11794  0028EC  6E06               	movwf	(___flmul@a+1)^0,c
 11795  0028EE  0E00               	movlw	0
 11796  0028F0  6E07               	movwf	(___flmul@a+2)^0,c
 11797  0028F2  0E00               	movlw	0
 11798  0028F4  6E08               	movwf	(___flmul@a+3)^0,c
 11799  0028F6  EC77  F00F         	call	___flmul	;wreg free
 11800  0028FA  C001  F04B         	movff	?___flmul,?_roundf
 11801  0028FE  C002  F04C         	movff	?___flmul+1,?_roundf+1
 11802  002902  C003  F04D         	movff	?___flmul+2,?_roundf+2
 11803  002906  C004  F04E         	movff	?___flmul+3,?_roundf+3
 11804  00290A  EFD2  F015         	goto	l1004
 11805  00290E                     l4825:
 11806  00290E  FFFF               	dw	65535	; assembler added errata NOP
 11807  002910  0E00               	movlw	0
 11808  002912  6E37               	movwf	___fladd@a^0,c
 11809  002914  0E00               	movlw	0
 11810  002916  6E38               	movwf	(___fladd@a+1)^0,c
 11811  002918  0E00               	movlw	0
 11812  00291A  6E39               	movwf	(___fladd@a+2)^0,c
 11813  00291C  0E4B               	movlw	75
 11814  00291E  6E3A               	movwf	(___fladd@a+3)^0,c
 11815  002920  C04B  F033         	movff	roundf@x,___fladd@b
 11816  002924  C04C  F034         	movff	roundf@x+1,___fladd@b+1
 11817  002928  C04D  F035         	movff	roundf@x+2,___fladd@b+2
 11818  00292C  C04E  F036         	movff	roundf@x+3,___fladd@b+3
 11819  002930  EC2C  F00A         	call	___fladd	;wreg free
 11820  002934  C033  F059         	movff	?___fladd,_roundf$2007
 11821  002938  C034  F05A         	movff	?___fladd+1,_roundf$2007+1
 11822  00293C  C035  F05B         	movff	?___fladd+2,_roundf$2007+2
 11823  002940  C036  F05C         	movff	?___fladd+3,_roundf$2007+3
 11824  002944  0E00               	movlw	0
 11825  002946  6E37               	movwf	___fladd@a^0,c
 11826  002948  0E00               	movlw	0
 11827  00294A  6E38               	movwf	(___fladd@a+1)^0,c
 11828  00294C  0E00               	movlw	0
 11829  00294E  6E39               	movwf	(___fladd@a+2)^0,c
 11830  002950  0ECB               	movlw	203
 11831  002952  6E3A               	movwf	(___fladd@a+3)^0,c
 11832  002954  C059  F033         	movff	_roundf$2007,___fladd@b
 11833  002958  C05A  F034         	movff	_roundf$2007+1,___fladd@b+1
 11834  00295C  C05B  F035         	movff	_roundf$2007+2,___fladd@b+2
 11835  002960  C05C  F036         	movff	_roundf$2007+3,___fladd@b+3
 11836  002964  EC2C  F00A         	call	___fladd	;wreg free
 11837  002968  C033  F053         	movff	?___fladd,_roundf$2008
 11838  00296C  C034  F054         	movff	?___fladd+1,_roundf$2008+1
 11839  002970  C035  F055         	movff	?___fladd+2,_roundf$2008+2
 11840  002974  C036  F056         	movff	?___fladd+3,_roundf$2008+3
 11841  002978  C053  F043         	movff	_roundf$2008,___flsub@b
 11842  00297C  C054  F044         	movff	_roundf$2008+1,___flsub@b+1
 11843  002980  C055  F045         	movff	_roundf$2008+2,___flsub@b+2
 11844  002984  C056  F046         	movff	_roundf$2008+3,___flsub@b+3
 11845  002988  C04B  F047         	movff	roundf@x,___flsub@a
 11846  00298C  C04C  F048         	movff	roundf@x+1,___flsub@a+1
 11847  002990  C04D  F049         	movff	roundf@x+2,___flsub@a+2
 11848  002994  C04E  F04A         	movff	roundf@x+3,___flsub@a+3
 11849  002998  ECBF  F037         	call	___flsub	;wreg free
 11850  00299C  C043  F061         	movff	?___flsub,roundf@y
 11851  0029A0  C044  F062         	movff	?___flsub+1,roundf@y+1
 11852  0029A4  C045  F063         	movff	?___flsub+2,roundf@y+2
 11853  0029A8  C046  F064         	movff	?___flsub+3,roundf@y+3
 11854  0029AC  0E00               	movlw	0
 11855  0029AE  6E01               	movwf	___flge@ff1^0,c
 11856  0029B0  0E00               	movlw	0
 11857  0029B2  6E02               	movwf	(___flge@ff1+1)^0,c
 11858  0029B4  0E00               	movlw	0
 11859  0029B6  6E03               	movwf	(___flge@ff1+2)^0,c
 11860  0029B8  0E3F               	movlw	63
 11861  0029BA  6E04               	movwf	(___flge@ff1+3)^0,c
 11862  0029BC  C061  F005         	movff	roundf@y,___flge@ff2
 11863  0029C0  C062  F006         	movff	roundf@y+1,___flge@ff2+1
 11864  0029C4  C063  F007         	movff	roundf@y+2,___flge@ff2+2
 11865  0029C8  C064  F008         	movff	roundf@y+3,___flge@ff2+3
 11866  0029CC  ECE3  F03E         	call	___flge	;wreg free
 11867  0029D0  B0D8               	btfsc	status,0,c
 11868  0029D2  EFED  F014         	goto	u5921
 11869  0029D6  EFF0  F014         	goto	u5920
 11870  0029DA                     u5921:
 11871  0029DA  FFFF               	dw	65535	; assembler added errata NOP
 11872  0029DC  EF27  F015         	goto	l4829
 11873  0029E0                     u5920:
 11874  0029E0  FFFF               	dw	65535	; assembler added errata NOP
 11875  0029E2  C04B  F037         	movff	roundf@x,___fladd@a
 11876  0029E6  C04C  F038         	movff	roundf@x+1,___fladd@a+1
 11877  0029EA  C04D  F039         	movff	roundf@x+2,___fladd@a+2
 11878  0029EE  C04E  F03A         	movff	roundf@x+3,___fladd@a+3
 11879  0029F2  C061  F033         	movff	roundf@y,___fladd@b
 11880  0029F6  C062  F034         	movff	roundf@y+1,___fladd@b+1
 11881  0029FA  C063  F035         	movff	roundf@y+2,___fladd@b+2
 11882  0029FE  C064  F036         	movff	roundf@y+3,___fladd@b+3
 11883  002A02  EC2C  F00A         	call	___fladd	;wreg free
 11884  002A06  C033  F059         	movff	?___fladd,_roundf$2007
 11885  002A0A  C034  F05A         	movff	?___fladd+1,_roundf$2007+1
 11886  002A0E  C035  F05B         	movff	?___fladd+2,_roundf$2007+2
 11887  002A12  C036  F05C         	movff	?___fladd+3,_roundf$2007+3
 11888  002A16  C059  F033         	movff	_roundf$2007,___fladd@b
 11889  002A1A  C05A  F034         	movff	_roundf$2007+1,___fladd@b+1
 11890  002A1E  C05B  F035         	movff	_roundf$2007+2,___fladd@b+2
 11891  002A22  C05C  F036         	movff	_roundf$2007+3,___fladd@b+3
 11892  002A26  0E00               	movlw	0
 11893  002A28  6E37               	movwf	___fladd@a^0,c
 11894  002A2A  0E00               	movlw	0
 11895  002A2C  6E38               	movwf	(___fladd@a+1)^0,c
 11896  002A2E  0E80               	movlw	128
 11897  002A30  6E39               	movwf	(___fladd@a+2)^0,c
 11898  002A32  0EBF               	movlw	191
 11899  002A34  6E3A               	movwf	(___fladd@a+3)^0,c
 11900  002A36  EC2C  F00A         	call	___fladd	;wreg free
 11901  002A3A  C033  F061         	movff	?___fladd,roundf@y
 11902  002A3E  C034  F062         	movff	?___fladd+1,roundf@y+1
 11903  002A42  C035  F063         	movff	?___fladd+2,roundf@y+2
 11904  002A46  C036  F064         	movff	?___fladd+3,roundf@y+3
 11905  002A4A  EF94  F015         	goto	l4835
 11906  002A4E                     l4829:
 11907  002A4E  FFFF               	dw	65535	; assembler added errata NOP
 11908  002A50  0E00               	movlw	0
 11909  002A52  6E01               	movwf	___flge@ff1^0,c
 11910  002A54  0E00               	movlw	0
 11911  002A56  6E02               	movwf	(___flge@ff1+1)^0,c
 11912  002A58  0E00               	movlw	0
 11913  002A5A  6E03               	movwf	(___flge@ff1+2)^0,c
 11914  002A5C  0EBF               	movlw	191
 11915  002A5E  6E04               	movwf	(___flge@ff1+3)^0,c
 11916  002A60  C061  F005         	movff	roundf@y,___flge@ff2
 11917  002A64  C062  F006         	movff	roundf@y+1,___flge@ff2+1
 11918  002A68  C063  F007         	movff	roundf@y+2,___flge@ff2+2
 11919  002A6C  C064  F008         	movff	roundf@y+3,___flge@ff2+3
 11920  002A70  ECE3  F03E         	call	___flge	;wreg free
 11921  002A74  A0D8               	btfss	status,0,c
 11922  002A76  EF3F  F015         	goto	u5931
 11923  002A7A  EF42  F015         	goto	u5930
 11924  002A7E                     u5931:
 11925  002A7E  FFFF               	dw	65535	; assembler added errata NOP
 11926  002A80  EF79  F015         	goto	l4833
 11927  002A84                     u5930:
 11928  002A84  FFFF               	dw	65535	; assembler added errata NOP
 11929  002A86  C04B  F037         	movff	roundf@x,___fladd@a
 11930  002A8A  C04C  F038         	movff	roundf@x+1,___fladd@a+1
 11931  002A8E  C04D  F039         	movff	roundf@x+2,___fladd@a+2
 11932  002A92  C04E  F03A         	movff	roundf@x+3,___fladd@a+3
 11933  002A96  C061  F033         	movff	roundf@y,___fladd@b
 11934  002A9A  C062  F034         	movff	roundf@y+1,___fladd@b+1
 11935  002A9E  C063  F035         	movff	roundf@y+2,___fladd@b+2
 11936  002AA2  C064  F036         	movff	roundf@y+3,___fladd@b+3
 11937  002AA6  EC2C  F00A         	call	___fladd	;wreg free
 11938  002AAA  C033  F059         	movff	?___fladd,_roundf$2007
 11939  002AAE  C034  F05A         	movff	?___fladd+1,_roundf$2007+1
 11940  002AB2  C035  F05B         	movff	?___fladd+2,_roundf$2007+2
 11941  002AB6  C036  F05C         	movff	?___fladd+3,_roundf$2007+3
 11942  002ABA  C059  F033         	movff	_roundf$2007,___fladd@b
 11943  002ABE  C05A  F034         	movff	_roundf$2007+1,___fladd@b+1
 11944  002AC2  C05B  F035         	movff	_roundf$2007+2,___fladd@b+2
 11945  002AC6  C05C  F036         	movff	_roundf$2007+3,___fladd@b+3
 11946  002ACA  0E00               	movlw	0
 11947  002ACC  6E37               	movwf	___fladd@a^0,c
 11948  002ACE  0E00               	movlw	0
 11949  002AD0  6E38               	movwf	(___fladd@a+1)^0,c
 11950  002AD2  0E80               	movlw	128
 11951  002AD4  6E39               	movwf	(___fladd@a+2)^0,c
 11952  002AD6  0E3F               	movlw	63
 11953  002AD8  6E3A               	movwf	(___fladd@a+3)^0,c
 11954  002ADA  EC2C  F00A         	call	___fladd	;wreg free
 11955  002ADE  C033  F061         	movff	?___fladd,roundf@y
 11956  002AE2  C034  F062         	movff	?___fladd+1,roundf@y+1
 11957  002AE6  C035  F063         	movff	?___fladd+2,roundf@y+2
 11958  002AEA  C036  F064         	movff	?___fladd+3,roundf@y+3
 11959  002AEE  EF94  F015         	goto	l4835
 11960  002AF2                     l4833:
 11961  002AF2  FFFF               	dw	65535	; assembler added errata NOP
 11962  002AF4  C061  F033         	movff	roundf@y,___fladd@b
 11963  002AF8  C062  F034         	movff	roundf@y+1,___fladd@b+1
 11964  002AFC  C063  F035         	movff	roundf@y+2,___fladd@b+2
 11965  002B00  C064  F036         	movff	roundf@y+3,___fladd@b+3
 11966  002B04  C04B  F037         	movff	roundf@x,___fladd@a
 11967  002B08  C04C  F038         	movff	roundf@x+1,___fladd@a+1
 11968  002B0C  C04D  F039         	movff	roundf@x+2,___fladd@a+2
 11969  002B10  C04E  F03A         	movff	roundf@x+3,___fladd@a+3
 11970  002B14  EC2C  F00A         	call	___fladd	;wreg free
 11971  002B18  C033  F061         	movff	?___fladd,roundf@y
 11972  002B1C  C034  F062         	movff	?___fladd+1,roundf@y+1
 11973  002B20  C035  F063         	movff	?___fladd+2,roundf@y+2
 11974  002B24  C036  F064         	movff	?___fladd+3,roundf@y+3
 11975  002B28                     l4835:
 11976  002B28  FFFF               	dw	65535	; assembler added errata NOP
 11977  002B2A  C05D  F04F         	movff	roundf@u,??_roundf
 11978  002B2E  C05E  F050         	movff	roundf@u+1,??_roundf+1
 11979  002B32  C05F  F051         	movff	roundf@u+2,??_roundf+2
 11980  002B36  C060  F052         	movff	roundf@u+3,??_roundf+3
 11981  002B3A  0E20               	movlw	32
 11982  002B3C  EFA6  F015         	goto	u5940
 11983  002B40                     u5945:
 11984  002B40  FFFF               	dw	65535	; assembler added errata NOP
 11985  002B42  90D8               	bcf	status,0,c
 11986  002B44  3252               	rrcf	(??_roundf+3)^0,f,c
 11987  002B46  3251               	rrcf	(??_roundf+2)^0,f,c
 11988  002B48  3250               	rrcf	(??_roundf+1)^0,f,c
 11989  002B4A  324F               	rrcf	??_roundf^0,f,c
 11990  002B4C                     u5940:
 11991  002B4C  FFFF               	dw	65535	; assembler added errata NOP
 11992  002B4E  2EE8               	decfsz	wreg,f,c
 11993  002B50  EFA0  F015         	goto	u5945
 11994  002B54  504F               	movf	??_roundf^0,w,c
 11995  002B56  1050               	iorwf	(??_roundf+1)^0,w,c
 11996  002B58  1051               	iorwf	(??_roundf+2)^0,w,c
 11997  002B5A  1052               	iorwf	(??_roundf+3)^0,w,c
 11998  002B5C  B4D8               	btfsc	status,2,c
 11999  002B5E  EFB3  F015         	goto	u5951
 12000  002B62  EFB6  F015         	goto	u5950
 12001  002B66                     u5951:
 12002  002B66  FFFF               	dw	65535	; assembler added errata NOP
 12003  002B68  EFC9  F015         	goto	l4839
 12004  002B6C                     u5950:
 12005  002B6C  FFFF               	dw	65535	; assembler added errata NOP
 12006  002B6E  C061  F001         	movff	roundf@y,___flneg@f1
 12007  002B72  C062  F002         	movff	roundf@y+1,___flneg@f1+1
 12008  002B76  C063  F003         	movff	roundf@y+2,___flneg@f1+2
 12009  002B7A  C064  F004         	movff	roundf@y+3,___flneg@f1+3
 12010  002B7E  EC18  F037         	call	___flneg	;wreg free
 12011  002B82  C001  F061         	movff	?___flneg,roundf@y
 12012  002B86  C002  F062         	movff	?___flneg+1,roundf@y+1
 12013  002B8A  C003  F063         	movff	?___flneg+2,roundf@y+2
 12014  002B8E  C004  F064         	movff	?___flneg+3,roundf@y+3
 12015  002B92                     l4839:
 12016  002B92  FFFF               	dw	65535	; assembler added errata NOP
 12017  002B94  C061  F04B         	movff	roundf@y,?_roundf
 12018  002B98  C062  F04C         	movff	roundf@y+1,?_roundf+1
 12019  002B9C  C063  F04D         	movff	roundf@y+2,?_roundf+2
 12020  002BA0  C064  F04E         	movff	roundf@y+3,?_roundf+3
 12021  002BA4                     l1004:
 12022  002BA4  FFFF               	dw	65535	; assembler added errata NOP
 12023  002BA6  0012               	return		;funcret
 12024  002BA8  FFFF               	dw	65535	; errata NOP
 12025  002BAA                     __end_of_roundf:
 12026                           	callstack 0
 12027                           
 12028 ;; *************** function ___flsub *****************
 12029 ;; Defined at:
 12030 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
 12031 ;; Parameters:    Size  Location     Type
 12032 ;;  b               4   66[COMRAM] float 
 12033 ;;  a               4   70[COMRAM] float 
 12034 ;; Auto vars:     Size  Location     Type
 12035 ;;		None
 12036 ;; Return value:  Size  Location     Type
 12037 ;;                  4   66[COMRAM] float 
 12038 ;; Registers used:
 12039 ;;		wreg, status,2, status,0, cstack
 12040 ;; Tracked objects:
 12041 ;;		On entry : 0/0
 12042 ;;		On exit  : 0/0
 12043 ;;		Unchanged: 0/0
 12044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12045 ;;      Params:         8       0       0       0       0       0       0
 12046 ;;      Locals:         0       0       0       0       0       0       0
 12047 ;;      Temps:          0       0       0       0       0       0       0
 12048 ;;      Totals:         8       0       0       0       0       0       0
 12049 ;;Total ram usage:        8 bytes
 12050 ;; Hardware stack levels used:    1
 12051 ;; Hardware stack levels required when called:    2
 12052 ;; This function calls:
 12053 ;;		___fladd
 12054 ;; This function is called by:
 12055 ;;		_roundf
 12056 ;; This function uses a non-reentrant model
 12057 ;;
 12058                           
 12059                           	psect	text50
 12060  006F7E                     __ptext50:
 12061                           	callstack 0
 12062  006F7E                     ___flsub:
 12063                           	callstack 0
 12064  006F7E  FFFF               	dw	65535	; assembler added errata NOP
 12065  006F80  0E00               	movlw	0
 12066  006F82  1A47               	xorwf	___flsub@a^0,f,c
 12067  006F84  0E00               	movlw	0
 12068  006F86  1A48               	xorwf	(___flsub@a+1)^0,f,c
 12069  006F88  0E00               	movlw	0
 12070  006F8A  1A49               	xorwf	(___flsub@a+2)^0,f,c
 12071  006F8C  0E80               	movlw	128
 12072  006F8E  1A4A               	xorwf	(___flsub@a+3)^0,f,c
 12073  006F90  C043  F033         	movff	___flsub@b,___fladd@b
 12074  006F94  C044  F034         	movff	___flsub@b+1,___fladd@b+1
 12075  006F98  C045  F035         	movff	___flsub@b+2,___fladd@b+2
 12076  006F9C  C046  F036         	movff	___flsub@b+3,___fladd@b+3
 12077  006FA0  C047  F037         	movff	___flsub@a,___fladd@a
 12078  006FA4  C048  F038         	movff	___flsub@a+1,___fladd@a+1
 12079  006FA8  C049  F039         	movff	___flsub@a+2,___fladd@a+2
 12080  006FAC  C04A  F03A         	movff	___flsub@a+3,___fladd@a+3
 12081  006FB0  EC2C  F00A         	call	___fladd	;wreg free
 12082  006FB4  C033  F043         	movff	?___fladd,?___flsub
 12083  006FB8  C034  F044         	movff	?___fladd+1,?___flsub+1
 12084  006FBC  C035  F045         	movff	?___fladd+2,?___flsub+2
 12085  006FC0  C036  F046         	movff	?___fladd+3,?___flsub+3
 12086  006FC4  0012               	return		;funcret
 12087  006FC6  FFFF               	dw	65535	; errata NOP
 12088  006FC8                     __end_of___flsub:
 12089                           	callstack 0
 12090                           
 12091 ;; *************** function ___fladd *****************
 12092 ;; Defined at:
 12093 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
 12094 ;; Parameters:    Size  Location     Type
 12095 ;;  b               4   50[COMRAM] float 
 12096 ;;  a               4   54[COMRAM] float 
 12097 ;; Auto vars:     Size  Location     Type
 12098 ;;  grs             1   65[COMRAM] unsigned char 
 12099 ;;  bexp            1   64[COMRAM] unsigned char 
 12100 ;;  aexp            1   63[COMRAM] unsigned char 
 12101 ;;  signs           1   62[COMRAM] unsigned char 
 12102 ;; Return value:  Size  Location     Type
 12103 ;;                  4   50[COMRAM] unsigned char 
 12104 ;; Registers used:
 12105 ;;		wreg, status,2, status,0
 12106 ;; Tracked objects:
 12107 ;;		On entry : 0/0
 12108 ;;		On exit  : 0/0
 12109 ;;		Unchanged: 0/0
 12110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12111 ;;      Params:         8       0       0       0       0       0       0
 12112 ;;      Locals:         4       0       0       0       0       0       0
 12113 ;;      Temps:          4       0       0       0       0       0       0
 12114 ;;      Totals:        16       0       0       0       0       0       0
 12115 ;;Total ram usage:       16 bytes
 12116 ;; Hardware stack levels used:    1
 12117 ;; Hardware stack levels required when called:    1
 12118 ;; This function calls:
 12119 ;;		Nothing
 12120 ;; This function is called by:
 12121 ;;		_init_timer_2
 12122 ;;		___flsub
 12123 ;;		_roundf
 12124 ;; This function uses a non-reentrant model
 12125 ;;
 12126                           
 12127                           	psect	text51
 12128  001458                     __ptext51:
 12129                           	callstack 0
 12130  001458                     ___fladd:
 12131                           	callstack 0
 12132  001458  FFFF               	dw	65535	; assembler added errata NOP
 12133  00145A  5036               	movf	(___fladd@b+3)^0,w,c
 12134  00145C  0B80               	andlw	128
 12135  00145E  6E3F               	movwf	___fladd@signs^0,c
 12136  001460  5036               	movf	(___fladd@b+3)^0,w,c
 12137  001462  2436               	addwf	(___fladd@b+3)^0,w,c
 12138  001464  6E41               	movwf	___fladd@bexp^0,c
 12139  001466  AE35               	btfss	(___fladd@b+2)^0,7,c
 12140  001468  EF38  F00A         	goto	u4431
 12141  00146C  EF3B  F00A         	goto	u4430
 12142  001470                     u4431:
 12143  001470  FFFF               	dw	65535	; assembler added errata NOP
 12144  001472  EF3D  F00A         	goto	l3925
 12145  001476                     u4430:
 12146  001476  FFFF               	dw	65535	; assembler added errata NOP
 12147  001478  8041               	bsf	___fladd@bexp^0,0,c
 12148  00147A                     l3925:
 12149  00147A  FFFF               	dw	65535	; assembler added errata NOP
 12150  00147C  5041               	movf	___fladd@bexp^0,w,c
 12151  00147E  B4D8               	btfsc	status,2,c
 12152  001480  EF44  F00A         	goto	u4441
 12153  001484  EF47  F00A         	goto	u4440
 12154  001488                     u4441:
 12155  001488  FFFF               	dw	65535	; assembler added errata NOP
 12156  00148A  EF60  F00A         	goto	l3935
 12157  00148E                     u4440:
 12158  00148E  FFFF               	dw	65535	; assembler added errata NOP
 12159  001490  2841               	incf	___fladd@bexp^0,w,c
 12160  001492  A4D8               	btfss	status,2,c
 12161  001494  EF4E  F00A         	goto	u4451
 12162  001498  EF51  F00A         	goto	u4450
 12163  00149C                     u4451:
 12164  00149C  FFFF               	dw	65535	; assembler added errata NOP
 12165  00149E  EF5A  F00A         	goto	l3931
 12166  0014A2                     u4450:
 12167  0014A2  FFFF               	dw	65535	; assembler added errata NOP
 12168  0014A4  0E00               	movlw	0
 12169  0014A6  6E33               	movwf	___fladd@b^0,c
 12170  0014A8  0E00               	movlw	0
 12171  0014AA  6E34               	movwf	(___fladd@b+1)^0,c
 12172  0014AC  0E00               	movlw	0
 12173  0014AE  6E35               	movwf	(___fladd@b+2)^0,c
 12174  0014B0  0E00               	movlw	0
 12175  0014B2  6E36               	movwf	(___fladd@b+3)^0,c
 12176  0014B4                     l3931:
 12177  0014B4  FFFF               	dw	65535	; assembler added errata NOP
 12178  0014B6  8E35               	bsf	(___fladd@b+2)^0,7,c
 12179  0014B8  0E00               	movlw	0
 12180  0014BA  6E36               	movwf	(___fladd@b+3)^0,c
 12181  0014BC  EF69  F00A         	goto	l3937
 12182  0014C0                     l3935:
 12183  0014C0  FFFF               	dw	65535	; assembler added errata NOP
 12184  0014C2  0E00               	movlw	0
 12185  0014C4  6E33               	movwf	___fladd@b^0,c
 12186  0014C6  0E00               	movlw	0
 12187  0014C8  6E34               	movwf	(___fladd@b+1)^0,c
 12188  0014CA  0E00               	movlw	0
 12189  0014CC  6E35               	movwf	(___fladd@b+2)^0,c
 12190  0014CE  0E00               	movlw	0
 12191  0014D0  6E36               	movwf	(___fladd@b+3)^0,c
 12192  0014D2                     l3937:
 12193  0014D2  FFFF               	dw	65535	; assembler added errata NOP
 12194  0014D4  503A               	movf	(___fladd@a+3)^0,w,c
 12195  0014D6  0B80               	andlw	128
 12196  0014D8  6E40               	movwf	___fladd@aexp^0,c
 12197  0014DA  503F               	movf	___fladd@signs^0,w,c
 12198  0014DC  1840               	xorwf	___fladd@aexp^0,w,c
 12199  0014DE  B4D8               	btfsc	status,2,c
 12200  0014E0  EF74  F00A         	goto	u4461
 12201  0014E4  EF77  F00A         	goto	u4460
 12202  0014E8                     u4461:
 12203  0014E8  FFFF               	dw	65535	; assembler added errata NOP
 12204  0014EA  EF79  F00A         	goto	l3943
 12205  0014EE                     u4460:
 12206  0014EE  FFFF               	dw	65535	; assembler added errata NOP
 12207  0014F0  8C3F               	bsf	___fladd@signs^0,6,c
 12208  0014F2                     l3943:
 12209  0014F2  FFFF               	dw	65535	; assembler added errata NOP
 12210  0014F4  503A               	movf	(___fladd@a+3)^0,w,c
 12211  0014F6  243A               	addwf	(___fladd@a+3)^0,w,c
 12212  0014F8  6E40               	movwf	___fladd@aexp^0,c
 12213  0014FA  AE39               	btfss	(___fladd@a+2)^0,7,c
 12214  0014FC  EF82  F00A         	goto	u4471
 12215  001500  EF85  F00A         	goto	u4470
 12216  001504                     u4471:
 12217  001504  FFFF               	dw	65535	; assembler added errata NOP
 12218  001506  EF87  F00A         	goto	l3949
 12219  00150A                     u4470:
 12220  00150A  FFFF               	dw	65535	; assembler added errata NOP
 12221  00150C  8040               	bsf	___fladd@aexp^0,0,c
 12222  00150E                     l3949:
 12223  00150E  FFFF               	dw	65535	; assembler added errata NOP
 12224  001510  5040               	movf	___fladd@aexp^0,w,c
 12225  001512  B4D8               	btfsc	status,2,c
 12226  001514  EF8E  F00A         	goto	u4481
 12227  001518  EF91  F00A         	goto	u4480
 12228  00151C                     u4481:
 12229  00151C  FFFF               	dw	65535	; assembler added errata NOP
 12230  00151E  EFAA  F00A         	goto	l3959
 12231  001522                     u4480:
 12232  001522  FFFF               	dw	65535	; assembler added errata NOP
 12233  001524  2840               	incf	___fladd@aexp^0,w,c
 12234  001526  A4D8               	btfss	status,2,c
 12235  001528  EF98  F00A         	goto	u4491
 12236  00152C  EF9B  F00A         	goto	u4490
 12237  001530                     u4491:
 12238  001530  FFFF               	dw	65535	; assembler added errata NOP
 12239  001532  EFA4  F00A         	goto	l3955
 12240  001536                     u4490:
 12241  001536  FFFF               	dw	65535	; assembler added errata NOP
 12242  001538  0E00               	movlw	0
 12243  00153A  6E37               	movwf	___fladd@a^0,c
 12244  00153C  0E00               	movlw	0
 12245  00153E  6E38               	movwf	(___fladd@a+1)^0,c
 12246  001540  0E00               	movlw	0
 12247  001542  6E39               	movwf	(___fladd@a+2)^0,c
 12248  001544  0E00               	movlw	0
 12249  001546  6E3A               	movwf	(___fladd@a+3)^0,c
 12250  001548                     l3955:
 12251  001548  FFFF               	dw	65535	; assembler added errata NOP
 12252  00154A  8E39               	bsf	(___fladd@a+2)^0,7,c
 12253  00154C  0E00               	movlw	0
 12254  00154E  6E3A               	movwf	(___fladd@a+3)^0,c
 12255  001550  EFB3  F00A         	goto	l3961
 12256  001554                     l3959:
 12257  001554  FFFF               	dw	65535	; assembler added errata NOP
 12258  001556  0E00               	movlw	0
 12259  001558  6E37               	movwf	___fladd@a^0,c
 12260  00155A  0E00               	movlw	0
 12261  00155C  6E38               	movwf	(___fladd@a+1)^0,c
 12262  00155E  0E00               	movlw	0
 12263  001560  6E39               	movwf	(___fladd@a+2)^0,c
 12264  001562  0E00               	movlw	0
 12265  001564  6E3A               	movwf	(___fladd@a+3)^0,c
 12266  001566                     l3961:
 12267  001566  FFFF               	dw	65535	; assembler added errata NOP
 12268  001568  5041               	movf	___fladd@bexp^0,w,c
 12269  00156A  5C40               	subwf	___fladd@aexp^0,w,c
 12270  00156C  B0D8               	btfsc	status,0,c
 12271  00156E  EFBB  F00A         	goto	u4501
 12272  001572  EFBE  F00A         	goto	u4500
 12273  001576                     u4501:
 12274  001576  FFFF               	dw	65535	; assembler added errata NOP
 12275  001578  EFE9  F00A         	goto	l3997
 12276  00157C                     u4500:
 12277  00157C  FFFF               	dw	65535	; assembler added errata NOP
 12278  00157E  AC3F               	btfss	___fladd@signs^0,6,c
 12279  001580  EFC4  F00A         	goto	u4511
 12280  001584  EFC7  F00A         	goto	u4510
 12281  001588                     u4511:
 12282  001588  FFFF               	dw	65535	; assembler added errata NOP
 12283  00158A  EFCA  F00A         	goto	l3967
 12284  00158E                     u4510:
 12285  00158E  FFFF               	dw	65535	; assembler added errata NOP
 12286  001590  0E80               	movlw	128
 12287  001592  1A3F               	xorwf	___fladd@signs^0,f,c
 12288  001594                     l3967:
 12289  001594  FFFF               	dw	65535	; assembler added errata NOP
 12290  001596  C041  F042         	movff	___fladd@bexp,___fladd@grs
 12291  00159A  C040  F041         	movff	___fladd@aexp,___fladd@bexp
 12292  00159E  C042  F040         	movff	___fladd@grs,___fladd@aexp
 12293  0015A2  C033  F042         	movff	___fladd@b,___fladd@grs
 12294  0015A6  C037  F033         	movff	___fladd@a,___fladd@b
 12295  0015AA  C042  F037         	movff	___fladd@grs,___fladd@a
 12296  0015AE  C034  F042         	movff	___fladd@b+1,___fladd@grs
 12297  0015B2  C038  F034         	movff	___fladd@a+1,___fladd@b+1
 12298  0015B6  C042  F038         	movff	___fladd@grs,___fladd@a+1
 12299  0015BA  C035  F042         	movff	___fladd@b+2,___fladd@grs
 12300  0015BE  C039  F035         	movff	___fladd@a+2,___fladd@b+2
 12301  0015C2  C042  F039         	movff	___fladd@grs,___fladd@a+2
 12302  0015C6  C036  F042         	movff	___fladd@b+3,___fladd@grs
 12303  0015CA  C03A  F036         	movff	___fladd@a+3,___fladd@b+3
 12304  0015CE  C042  F03A         	movff	___fladd@grs,___fladd@a+3
 12305  0015D2                     l3997:
 12306  0015D2  FFFF               	dw	65535	; assembler added errata NOP
 12307  0015D4  0E00               	movlw	0
 12308  0015D6  6E42               	movwf	___fladd@grs^0,c
 12309  0015D8  5041               	movf	___fladd@bexp^0,w,c
 12310  0015DA  C040  F03B         	movff	___fladd@aexp,??___fladd
 12311  0015DE  6A3C               	clrf	(??___fladd+1)^0,c
 12312  0015E0  5E3B               	subwf	??___fladd^0,f,c
 12313  0015E2  0E00               	movlw	0
 12314  0015E4  5A3C               	subwfb	(??___fladd+1)^0,f,c
 12315  0015E6  BE3C               	btfsc	(??___fladd+1)^0,7,c
 12316  0015E8  EFFF  F00A         	goto	u4521
 12317  0015EC  503C               	movf	(??___fladd+1)^0,w,c
 12318  0015EE  E10A               	bnz	u4520
 12319  0015F0  0E1A               	movlw	26
 12320  0015F2  5C3B               	subwf	??___fladd^0,w,c
 12321  0015F4  A0D8               	btfss	status,0,c
 12322  0015F6  EFFF  F00A         	goto	u4521
 12323  0015FA  EF02  F00B         	goto	u4520
 12324  0015FE                     u4521:
 12325  0015FE  FFFF               	dw	65535	; assembler added errata NOP
 12326  001600  EF45  F00B         	goto	l854
 12327  001604                     u4520:
 12328  001604  FFFF               	dw	65535	; assembler added errata NOP
 12329  001606  5033               	movf	___fladd@b^0,w,c
 12330  001608  1034               	iorwf	(___fladd@b+1)^0,w,c
 12331  00160A  1035               	iorwf	(___fladd@b+2)^0,w,c
 12332  00160C  1036               	iorwf	(___fladd@b+3)^0,w,c
 12333  00160E  A4D8               	btfss	status,2,c
 12334  001610  EF0C  F00B         	goto	u4531
 12335  001614  EF10  F00B         	goto	u4530
 12336  001618                     u4531:
 12337  001618  FFFF               	dw	65535	; assembler added errata NOP
 12338  00161A  0E01               	movlw	1
 12339  00161C  EF12  F00B         	goto	u4540
 12340  001620                     u4530:
 12341  001620  FFFF               	dw	65535	; assembler added errata NOP
 12342  001622  0E00               	movlw	0
 12343  001624                     u4540:
 12344  001624  FFFF               	dw	65535	; assembler added errata NOP
 12345  001626  6E42               	movwf	___fladd@grs^0,c
 12346  001628  0E00               	movlw	0
 12347  00162A  6E33               	movwf	___fladd@b^0,c
 12348  00162C  0E00               	movlw	0
 12349  00162E  6E34               	movwf	(___fladd@b+1)^0,c
 12350  001630  0E00               	movlw	0
 12351  001632  6E35               	movwf	(___fladd@b+2)^0,c
 12352  001634  0E00               	movlw	0
 12353  001636  6E36               	movwf	(___fladd@b+3)^0,c
 12354  001638  C040  F041         	movff	___fladd@aexp,___fladd@bexp
 12355  00163C  EF50  F00B         	goto	l853
 12356  001640                     l855:
 12357  001640  FFFF               	dw	65535	; assembler added errata NOP
 12358  001642  A042               	btfss	___fladd@grs^0,0,c
 12359  001644  EF26  F00B         	goto	u4551
 12360  001648  EF29  F00B         	goto	u4550
 12361  00164C                     u4551:
 12362  00164C  FFFF               	dw	65535	; assembler added errata NOP
 12363  00164E  EF30  F00B         	goto	l4009
 12364  001652                     u4550:
 12365  001652  FFFF               	dw	65535	; assembler added errata NOP
 12366  001654  90D8               	bcf	status,0,c
 12367  001656  3042               	rrcf	___fladd@grs^0,w,c
 12368  001658  0901               	iorlw	1
 12369  00165A  6E42               	movwf	___fladd@grs^0,c
 12370  00165C  EF33  F00B         	goto	l4011
 12371  001660                     l4009:
 12372  001660  FFFF               	dw	65535	; assembler added errata NOP
 12373  001662  90D8               	bcf	status,0,c
 12374  001664  3242               	rrcf	___fladd@grs^0,f,c
 12375  001666                     l4011:
 12376  001666  FFFF               	dw	65535	; assembler added errata NOP
 12377  001668  A033               	btfss	___fladd@b^0,0,c
 12378  00166A  EF39  F00B         	goto	u4561
 12379  00166E  EF3C  F00B         	goto	u4560
 12380  001672                     u4561:
 12381  001672  FFFF               	dw	65535	; assembler added errata NOP
 12382  001674  EF3E  F00B         	goto	l4015
 12383  001678                     u4560:
 12384  001678  FFFF               	dw	65535	; assembler added errata NOP
 12385  00167A  8E42               	bsf	___fladd@grs^0,7,c
 12386  00167C                     l4015:
 12387  00167C  FFFF               	dw	65535	; assembler added errata NOP
 12388  00167E  3436               	rlcf	(___fladd@b+3)^0,w,c
 12389  001680  3236               	rrcf	(___fladd@b+3)^0,f,c
 12390  001682  3235               	rrcf	(___fladd@b+2)^0,f,c
 12391  001684  3234               	rrcf	(___fladd@b+1)^0,f,c
 12392  001686  3233               	rrcf	___fladd@b^0,f,c
 12393  001688  2A41               	incf	___fladd@bexp^0,f,c
 12394  00168A                     l854:
 12395  00168A  FFFF               	dw	65535	; assembler added errata NOP
 12396  00168C  5040               	movf	___fladd@aexp^0,w,c
 12397  00168E  5C41               	subwf	___fladd@bexp^0,w,c
 12398  001690  A0D8               	btfss	status,0,c
 12399  001692  EF4D  F00B         	goto	u4571
 12400  001696  EF50  F00B         	goto	u4570
 12401  00169A                     u4571:
 12402  00169A  FFFF               	dw	65535	; assembler added errata NOP
 12403  00169C  EF20  F00B         	goto	l855
 12404  0016A0                     u4570:
 12405  0016A0                     l853:
 12406  0016A0  FFFF               	dw	65535	; assembler added errata NOP
 12407  0016A2  BC3F               	btfsc	___fladd@signs^0,6,c
 12408  0016A4  EF56  F00B         	goto	u4581
 12409  0016A8  EF59  F00B         	goto	u4580
 12410  0016AC                     u4581:
 12411  0016AC  FFFF               	dw	65535	; assembler added errata NOP
 12412  0016AE  EFA6  F00B         	goto	l4043
 12413  0016B2                     u4580:
 12414  0016B2  FFFF               	dw	65535	; assembler added errata NOP
 12415  0016B4  5041               	movf	___fladd@bexp^0,w,c
 12416  0016B6  A4D8               	btfss	status,2,c
 12417  0016B8  EF60  F00B         	goto	u4591
 12418  0016BC  EF63  F00B         	goto	u4590
 12419  0016C0                     u4591:
 12420  0016C0  FFFF               	dw	65535	; assembler added errata NOP
 12421  0016C2  EF6E  F00B         	goto	l4025
 12422  0016C6                     u4590:
 12423  0016C6  FFFF               	dw	65535	; assembler added errata NOP
 12424  0016C8  0E00               	movlw	0
 12425  0016CA  6E33               	movwf	?___fladd^0,c
 12426  0016CC  0E00               	movlw	0
 12427  0016CE  6E34               	movwf	(?___fladd+1)^0,c
 12428  0016D0  0E00               	movlw	0
 12429  0016D2  6E35               	movwf	(?___fladd+2)^0,c
 12430  0016D4  0E00               	movlw	0
 12431  0016D6  6E36               	movwf	(?___fladd+3)^0,c
 12432  0016D8  EFFD  F00C         	goto	l862
 12433  0016DC                     l4025:
 12434  0016DC  FFFF               	dw	65535	; assembler added errata NOP
 12435  0016DE  5037               	movf	___fladd@a^0,w,c
 12436  0016E0  2633               	addwf	___fladd@b^0,f,c
 12437  0016E2  5038               	movf	(___fladd@a+1)^0,w,c
 12438  0016E4  2234               	addwfc	(___fladd@b+1)^0,f,c
 12439  0016E6  5039               	movf	(___fladd@a+2)^0,w,c
 12440  0016E8  2235               	addwfc	(___fladd@b+2)^0,f,c
 12441  0016EA  503A               	movf	(___fladd@a+3)^0,w,c
 12442  0016EC  2236               	addwfc	(___fladd@b+3)^0,f,c
 12443  0016EE  A036               	btfss	(___fladd@b+3)^0,0,c
 12444  0016F0  EF7C  F00B         	goto	u4601
 12445  0016F4  EF7F  F00B         	goto	u4600
 12446  0016F8                     u4601:
 12447  0016F8  FFFF               	dw	65535	; assembler added errata NOP
 12448  0016FA  EF4A  F00C         	goto	l4079
 12449  0016FE                     u4600:
 12450  0016FE  FFFF               	dw	65535	; assembler added errata NOP
 12451  001700  A042               	btfss	___fladd@grs^0,0,c
 12452  001702  EF85  F00B         	goto	u4611
 12453  001706  EF88  F00B         	goto	u4610
 12454  00170A                     u4611:
 12455  00170A  FFFF               	dw	65535	; assembler added errata NOP
 12456  00170C  EF8F  F00B         	goto	l4033
 12457  001710                     u4610:
 12458  001710  FFFF               	dw	65535	; assembler added errata NOP
 12459  001712  90D8               	bcf	status,0,c
 12460  001714  3042               	rrcf	___fladd@grs^0,w,c
 12461  001716  0901               	iorlw	1
 12462  001718  6E42               	movwf	___fladd@grs^0,c
 12463  00171A  EF92  F00B         	goto	l4035
 12464  00171E                     l4033:
 12465  00171E  FFFF               	dw	65535	; assembler added errata NOP
 12466  001720  90D8               	bcf	status,0,c
 12467  001722  3242               	rrcf	___fladd@grs^0,f,c
 12468  001724                     l4035:
 12469  001724  FFFF               	dw	65535	; assembler added errata NOP
 12470  001726  A033               	btfss	___fladd@b^0,0,c
 12471  001728  EF98  F00B         	goto	u4621
 12472  00172C  EF9B  F00B         	goto	u4620
 12473  001730                     u4621:
 12474  001730  FFFF               	dw	65535	; assembler added errata NOP
 12475  001732  EF9D  F00B         	goto	l4039
 12476  001736                     u4620:
 12477  001736  FFFF               	dw	65535	; assembler added errata NOP
 12478  001738  8E42               	bsf	___fladd@grs^0,7,c
 12479  00173A                     l4039:
 12480  00173A  FFFF               	dw	65535	; assembler added errata NOP
 12481  00173C  3436               	rlcf	(___fladd@b+3)^0,w,c
 12482  00173E  3236               	rrcf	(___fladd@b+3)^0,f,c
 12483  001740  3235               	rrcf	(___fladd@b+2)^0,f,c
 12484  001742  3234               	rrcf	(___fladd@b+1)^0,f,c
 12485  001744  3233               	rrcf	___fladd@b^0,f,c
 12486  001746  2A41               	incf	___fladd@bexp^0,f,c
 12487  001748  EF4A  F00C         	goto	l4079
 12488  00174C                     l4043:
 12489  00174C  FFFF               	dw	65535	; assembler added errata NOP
 12490  00174E  5037               	movf	___fladd@a^0,w,c
 12491  001750  5C33               	subwf	___fladd@b^0,w,c
 12492  001752  5038               	movf	(___fladd@a+1)^0,w,c
 12493  001754  5834               	subwfb	(___fladd@b+1)^0,w,c
 12494  001756  5039               	movf	(___fladd@a+2)^0,w,c
 12495  001758  5835               	subwfb	(___fladd@b+2)^0,w,c
 12496  00175A  5036               	movf	(___fladd@b+3)^0,w,c
 12497  00175C  0A80               	xorlw	128
 12498  00175E  6E3B               	movwf	??___fladd^0,c
 12499  001760  503A               	movf	(___fladd@a+3)^0,w,c
 12500  001762  0A80               	xorlw	128
 12501  001764  583B               	subwfb	??___fladd^0,w,c
 12502  001766  B0D8               	btfsc	status,0,c
 12503  001768  EFB8  F00B         	goto	u4631
 12504  00176C  EFBB  F00B         	goto	u4630
 12505  001770                     u4631:
 12506  001770  FFFF               	dw	65535	; assembler added errata NOP
 12507  001772  EFE9  F00B         	goto	l4053
 12508  001776                     u4630:
 12509  001776  FFFF               	dw	65535	; assembler added errata NOP
 12510  001778  5033               	movf	___fladd@b^0,w,c
 12511  00177A  5C37               	subwf	___fladd@a^0,w,c
 12512  00177C  6E3B               	movwf	??___fladd^0,c
 12513  00177E  5034               	movf	(___fladd@b+1)^0,w,c
 12514  001780  5838               	subwfb	(___fladd@a+1)^0,w,c
 12515  001782  6E3C               	movwf	(??___fladd+1)^0,c
 12516  001784  5035               	movf	(___fladd@b+2)^0,w,c
 12517  001786  5839               	subwfb	(___fladd@a+2)^0,w,c
 12518  001788  6E3D               	movwf	(??___fladd+2)^0,c
 12519  00178A  5036               	movf	(___fladd@b+3)^0,w,c
 12520  00178C  583A               	subwfb	(___fladd@a+3)^0,w,c
 12521  00178E  6E3E               	movwf	(??___fladd+3)^0,c
 12522  001790  0EFF               	movlw	255
 12523  001792  243B               	addwf	??___fladd^0,w,c
 12524  001794  6E33               	movwf	___fladd@b^0,c
 12525  001796  0EFF               	movlw	255
 12526  001798  203C               	addwfc	(??___fladd+1)^0,w,c
 12527  00179A  6E34               	movwf	(___fladd@b+1)^0,c
 12528  00179C  0EFF               	movlw	255
 12529  00179E  203D               	addwfc	(??___fladd+2)^0,w,c
 12530  0017A0  6E35               	movwf	(___fladd@b+2)^0,c
 12531  0017A2  0EFF               	movlw	255
 12532  0017A4  203E               	addwfc	(??___fladd+3)^0,w,c
 12533  0017A6  6E36               	movwf	(___fladd@b+3)^0,c
 12534  0017A8  0E80               	movlw	128
 12535  0017AA  1A3F               	xorwf	___fladd@signs^0,f,c
 12536  0017AC  6C42               	negf	___fladd@grs^0,c
 12537  0017AE  5042               	movf	___fladd@grs^0,w,c
 12538  0017B0  A4D8               	btfss	status,2,c
 12539  0017B2  EFDD  F00B         	goto	u4641
 12540  0017B6  EFE0  F00B         	goto	u4640
 12541  0017BA                     u4641:
 12542  0017BA  FFFF               	dw	65535	; assembler added errata NOP
 12543  0017BC  EFF2  F00B         	goto	l870
 12544  0017C0                     u4640:
 12545  0017C0  FFFF               	dw	65535	; assembler added errata NOP
 12546  0017C2  0E01               	movlw	1
 12547  0017C4  2633               	addwf	___fladd@b^0,f,c
 12548  0017C6  0E00               	movlw	0
 12549  0017C8  2234               	addwfc	(___fladd@b+1)^0,f,c
 12550  0017CA  2235               	addwfc	(___fladd@b+2)^0,f,c
 12551  0017CC  2236               	addwfc	(___fladd@b+3)^0,f,c
 12552  0017CE  EFF2  F00B         	goto	l870
 12553  0017D2                     l4053:
 12554  0017D2  FFFF               	dw	65535	; assembler added errata NOP
 12555  0017D4  5037               	movf	___fladd@a^0,w,c
 12556  0017D6  5E33               	subwf	___fladd@b^0,f,c
 12557  0017D8  5038               	movf	(___fladd@a+1)^0,w,c
 12558  0017DA  5A34               	subwfb	(___fladd@b+1)^0,f,c
 12559  0017DC  5039               	movf	(___fladd@a+2)^0,w,c
 12560  0017DE  5A35               	subwfb	(___fladd@b+2)^0,f,c
 12561  0017E0  503A               	movf	(___fladd@a+3)^0,w,c
 12562  0017E2  5A36               	subwfb	(___fladd@b+3)^0,f,c
 12563  0017E4                     l870:
 12564  0017E4  FFFF               	dw	65535	; assembler added errata NOP
 12565  0017E6  5033               	movf	___fladd@b^0,w,c
 12566  0017E8  1034               	iorwf	(___fladd@b+1)^0,w,c
 12567  0017EA  1035               	iorwf	(___fladd@b+2)^0,w,c
 12568  0017EC  1036               	iorwf	(___fladd@b+3)^0,w,c
 12569  0017EE  A4D8               	btfss	status,2,c
 12570  0017F0  EFFC  F00B         	goto	u4651
 12571  0017F4  EFFF  F00B         	goto	u4650
 12572  0017F8                     u4651:
 12573  0017F8  FFFF               	dw	65535	; assembler added errata NOP
 12574  0017FA  EF41  F00C         	goto	l4077
 12575  0017FE                     u4650:
 12576  0017FE  FFFF               	dw	65535	; assembler added errata NOP
 12577  001800  5042               	movf	___fladd@grs^0,w,c
 12578  001802  A4D8               	btfss	status,2,c
 12579  001804  EF06  F00C         	goto	u4661
 12580  001808  EF09  F00C         	goto	u4660
 12581  00180C                     u4661:
 12582  00180C  FFFF               	dw	65535	; assembler added errata NOP
 12583  00180E  EF41  F00C         	goto	l4077
 12584  001812                     u4660:
 12585  001812  FFFF               	dw	65535	; assembler added errata NOP
 12586  001814  0E00               	movlw	0
 12587  001816  6E33               	movwf	?___fladd^0,c
 12588  001818  0E00               	movlw	0
 12589  00181A  6E34               	movwf	(?___fladd+1)^0,c
 12590  00181C  0E00               	movlw	0
 12591  00181E  6E35               	movwf	(?___fladd+2)^0,c
 12592  001820  0E00               	movlw	0
 12593  001822  6E36               	movwf	(?___fladd+3)^0,c
 12594  001824  EFFD  F00C         	goto	l862
 12595  001828                     l4061:
 12596  001828  FFFF               	dw	65535	; assembler added errata NOP
 12597  00182A  90D8               	bcf	status,0,c
 12598  00182C  3633               	rlcf	___fladd@b^0,f,c
 12599  00182E  3634               	rlcf	(___fladd@b+1)^0,f,c
 12600  001830  3635               	rlcf	(___fladd@b+2)^0,f,c
 12601  001832  3636               	rlcf	(___fladd@b+3)^0,f,c
 12602  001834  AE42               	btfss	___fladd@grs^0,7,c
 12603  001836  EF1F  F00C         	goto	u4671
 12604  00183A  EF22  F00C         	goto	u4670
 12605  00183E                     u4671:
 12606  00183E  FFFF               	dw	65535	; assembler added errata NOP
 12607  001840  EF24  F00C         	goto	l4067
 12608  001844                     u4670:
 12609  001844  FFFF               	dw	65535	; assembler added errata NOP
 12610  001846  8033               	bsf	___fladd@b^0,0,c
 12611  001848                     l4067:
 12612  001848  FFFF               	dw	65535	; assembler added errata NOP
 12613  00184A  A042               	btfss	___fladd@grs^0,0,c
 12614  00184C  EF2A  F00C         	goto	u4681
 12615  001850  EF2D  F00C         	goto	u4680
 12616  001854                     u4681:
 12617  001854  FFFF               	dw	65535	; assembler added errata NOP
 12618  001856  EF32  F00C         	goto	l4071
 12619  00185A                     u4680:
 12620  00185A  FFFF               	dw	65535	; assembler added errata NOP
 12621  00185C  80D8               	bsf	status,0,c
 12622  00185E  3642               	rlcf	___fladd@grs^0,f,c
 12623  001860  EF35  F00C         	goto	l4073
 12624  001864                     l4071:
 12625  001864  FFFF               	dw	65535	; assembler added errata NOP
 12626  001866  90D8               	bcf	status,0,c
 12627  001868  3642               	rlcf	___fladd@grs^0,f,c
 12628  00186A                     l4073:
 12629  00186A  FFFF               	dw	65535	; assembler added errata NOP
 12630  00186C  5041               	movf	___fladd@bexp^0,w,c
 12631  00186E  B4D8               	btfsc	status,2,c
 12632  001870  EF3C  F00C         	goto	u4691
 12633  001874  EF3F  F00C         	goto	u4690
 12634  001878                     u4691:
 12635  001878  FFFF               	dw	65535	; assembler added errata NOP
 12636  00187A  EF41  F00C         	goto	l4077
 12637  00187E                     u4690:
 12638  00187E  FFFF               	dw	65535	; assembler added errata NOP
 12639  001880  0641               	decf	___fladd@bexp^0,f,c
 12640  001882                     l4077:
 12641  001882  FFFF               	dw	65535	; assembler added errata NOP
 12642  001884  AE35               	btfss	(___fladd@b+2)^0,7,c
 12643  001886  EF47  F00C         	goto	u4701
 12644  00188A  EF4A  F00C         	goto	u4700
 12645  00188E                     u4701:
 12646  00188E  FFFF               	dw	65535	; assembler added errata NOP
 12647  001890  EF14  F00C         	goto	l4061
 12648  001894                     u4700:
 12649  001894                     l4079:
 12650  001894  FFFF               	dw	65535	; assembler added errata NOP
 12651  001896  0E00               	movlw	0
 12652  001898  6E40               	movwf	___fladd@aexp^0,c
 12653  00189A  AE42               	btfss	___fladd@grs^0,7,c
 12654  00189C  EF52  F00C         	goto	u4711
 12655  0018A0  EF55  F00C         	goto	u4710
 12656  0018A4                     u4711:
 12657  0018A4  FFFF               	dw	65535	; assembler added errata NOP
 12658  0018A6  EF74  F00C         	goto	l879
 12659  0018AA                     u4710:
 12660  0018AA  FFFF               	dw	65535	; assembler added errata NOP
 12661  0018AC  C042  F03B         	movff	___fladd@grs,??___fladd
 12662  0018B0  0E7F               	movlw	127
 12663  0018B2  163B               	andwf	??___fladd^0,f,c
 12664  0018B4  B4D8               	btfsc	status,2,c
 12665  0018B6  EF5F  F00C         	goto	u4721
 12666  0018BA  EF62  F00C         	goto	u4720
 12667  0018BE                     u4721:
 12668  0018BE  FFFF               	dw	65535	; assembler added errata NOP
 12669  0018C0  EF68  F00C         	goto	l880
 12670  0018C4                     u4720:
 12671  0018C4  FFFF               	dw	65535	; assembler added errata NOP
 12672  0018C6                     l4085:
 12673  0018C6  FFFF               	dw	65535	; assembler added errata NOP
 12674  0018C8  0E01               	movlw	1
 12675  0018CA  6E40               	movwf	___fladd@aexp^0,c
 12676  0018CC  EF74  F00C         	goto	l879
 12677  0018D0                     l880:
 12678  0018D0  FFFF               	dw	65535	; assembler added errata NOP
 12679  0018D2  A033               	btfss	___fladd@b^0,0,c
 12680  0018D4  EF6E  F00C         	goto	u4731
 12681  0018D8  EF71  F00C         	goto	u4730
 12682  0018DC                     u4731:
 12683  0018DC  FFFF               	dw	65535	; assembler added errata NOP
 12684  0018DE  EF74  F00C         	goto	l879
 12685  0018E2                     u4730:
 12686  0018E2  FFFF               	dw	65535	; assembler added errata NOP
 12687  0018E4  EF63  F00C         	goto	l4085
 12688  0018E8                     l879:
 12689  0018E8  FFFF               	dw	65535	; assembler added errata NOP
 12690  0018EA  5040               	movf	___fladd@aexp^0,w,c
 12691  0018EC  B4D8               	btfsc	status,2,c
 12692  0018EE  EF7B  F00C         	goto	u4741
 12693  0018F2  EF7E  F00C         	goto	u4740
 12694  0018F6                     u4741:
 12695  0018F6  FFFF               	dw	65535	; assembler added errata NOP
 12696  0018F8  EFAE  F00C         	goto	l4097
 12697  0018FC                     u4740:
 12698  0018FC  FFFF               	dw	65535	; assembler added errata NOP
 12699  0018FE  0E01               	movlw	1
 12700  001900  2633               	addwf	___fladd@b^0,f,c
 12701  001902  0E00               	movlw	0
 12702  001904  2234               	addwfc	(___fladd@b+1)^0,f,c
 12703  001906  2235               	addwfc	(___fladd@b+2)^0,f,c
 12704  001908  2236               	addwfc	(___fladd@b+3)^0,f,c
 12705  00190A  A036               	btfss	(___fladd@b+3)^0,0,c
 12706  00190C  EF8A  F00C         	goto	u4751
 12707  001910  EF8D  F00C         	goto	u4750
 12708  001914                     u4751:
 12709  001914  FFFF               	dw	65535	; assembler added errata NOP
 12710  001916  EFAE  F00C         	goto	l4097
 12711  00191A                     u4750:
 12712  00191A  FFFF               	dw	65535	; assembler added errata NOP
 12713  00191C  C033  F03B         	movff	___fladd@b,??___fladd
 12714  001920  C034  F03C         	movff	___fladd@b+1,??___fladd+1
 12715  001924  C035  F03D         	movff	___fladd@b+2,??___fladd+2
 12716  001928  C036  F03E         	movff	___fladd@b+3,??___fladd+3
 12717  00192C  343E               	rlcf	(??___fladd+3)^0,w,c
 12718  00192E  323E               	rrcf	(??___fladd+3)^0,f,c
 12719  001930  323D               	rrcf	(??___fladd+2)^0,f,c
 12720  001932  323C               	rrcf	(??___fladd+1)^0,f,c
 12721  001934  323B               	rrcf	??___fladd^0,f,c
 12722  001936  C03B  F033         	movff	??___fladd,___fladd@b
 12723  00193A  C03C  F034         	movff	??___fladd+1,___fladd@b+1
 12724  00193E  C03D  F035         	movff	??___fladd+2,___fladd@b+2
 12725  001942  C03E  F036         	movff	??___fladd+3,___fladd@b+3
 12726  001946  2841               	incf	___fladd@bexp^0,w,c
 12727  001948  B4D8               	btfsc	status,2,c
 12728  00194A  EFA9  F00C         	goto	u4761
 12729  00194E  EFAC  F00C         	goto	u4760
 12730  001952                     u4761:
 12731  001952  FFFF               	dw	65535	; assembler added errata NOP
 12732  001954  EFAE  F00C         	goto	l4097
 12733  001958                     u4760:
 12734  001958  FFFF               	dw	65535	; assembler added errata NOP
 12735  00195A  2A41               	incf	___fladd@bexp^0,f,c
 12736  00195C                     l4097:
 12737  00195C  FFFF               	dw	65535	; assembler added errata NOP
 12738  00195E  2841               	incf	___fladd@bexp^0,w,c
 12739  001960  B4D8               	btfsc	status,2,c
 12740  001962  EFB5  F00C         	goto	u4771
 12741  001966  EFB8  F00C         	goto	u4770
 12742  00196A                     u4771:
 12743  00196A  FFFF               	dw	65535	; assembler added errata NOP
 12744  00196C  EFC2  F00C         	goto	l4101
 12745  001970                     u4770:
 12746  001970  FFFF               	dw	65535	; assembler added errata NOP
 12747  001972  5041               	movf	___fladd@bexp^0,w,c
 12748  001974  A4D8               	btfss	status,2,c
 12749  001976  EFBF  F00C         	goto	u4781
 12750  00197A  EFC2  F00C         	goto	u4780
 12751  00197E                     u4781:
 12752  00197E  FFFF               	dw	65535	; assembler added errata NOP
 12753  001980  EFD7  F00C         	goto	l4105
 12754  001984                     u4780:
 12755  001984                     l4101:
 12756  001984  FFFF               	dw	65535	; assembler added errata NOP
 12757  001986  0E00               	movlw	0
 12758  001988  6E33               	movwf	___fladd@b^0,c
 12759  00198A  0E00               	movlw	0
 12760  00198C  6E34               	movwf	(___fladd@b+1)^0,c
 12761  00198E  0E00               	movlw	0
 12762  001990  6E35               	movwf	(___fladd@b+2)^0,c
 12763  001992  0E00               	movlw	0
 12764  001994  6E36               	movwf	(___fladd@b+3)^0,c
 12765  001996  5041               	movf	___fladd@bexp^0,w,c
 12766  001998  A4D8               	btfss	status,2,c
 12767  00199A  EFD1  F00C         	goto	u4791
 12768  00199E  EFD4  F00C         	goto	u4790
 12769  0019A2                     u4791:
 12770  0019A2  FFFF               	dw	65535	; assembler added errata NOP
 12771  0019A4  EFD7  F00C         	goto	l4105
 12772  0019A8                     u4790:
 12773  0019A8  FFFF               	dw	65535	; assembler added errata NOP
 12774  0019AA  0E00               	movlw	0
 12775  0019AC  6E3F               	movwf	___fladd@signs^0,c
 12776  0019AE                     l4105:
 12777  0019AE  FFFF               	dw	65535	; assembler added errata NOP
 12778  0019B0  A041               	btfss	___fladd@bexp^0,0,c
 12779  0019B2  EFDD  F00C         	goto	u4801
 12780  0019B6  EFE0  F00C         	goto	u4800
 12781  0019BA                     u4801:
 12782  0019BA  FFFF               	dw	65535	; assembler added errata NOP
 12783  0019BC  EFE4  F00C         	goto	l4109
 12784  0019C0                     u4800:
 12785  0019C0  FFFF               	dw	65535	; assembler added errata NOP
 12786  0019C2  8E35               	bsf	(___fladd@b+2)^0,7,c
 12787  0019C4  EFE6  F00C         	goto	l4111
 12788  0019C8                     l4109:
 12789  0019C8  FFFF               	dw	65535	; assembler added errata NOP
 12790  0019CA  9E35               	bcf	(___fladd@b+2)^0,7,c
 12791  0019CC                     l4111:
 12792  0019CC  FFFF               	dw	65535	; assembler added errata NOP
 12793  0019CE  90D8               	bcf	status,0,c
 12794  0019D0  3041               	rrcf	___fladd@bexp^0,w,c
 12795  0019D2  6E36               	movwf	(___fladd@b+3)^0,c
 12796  0019D4  AE3F               	btfss	___fladd@signs^0,7,c
 12797  0019D6  EFEF  F00C         	goto	u4811
 12798  0019DA  EFF2  F00C         	goto	u4810
 12799  0019DE                     u4811:
 12800  0019DE  FFFF               	dw	65535	; assembler added errata NOP
 12801  0019E0  EFF4  F00C         	goto	l4117
 12802  0019E4                     u4810:
 12803  0019E4  FFFF               	dw	65535	; assembler added errata NOP
 12804  0019E6  8E36               	bsf	(___fladd@b+3)^0,7,c
 12805  0019E8                     l4117:
 12806  0019E8  FFFF               	dw	65535	; assembler added errata NOP
 12807  0019EA  C033  F033         	movff	___fladd@b,?___fladd
 12808  0019EE  C034  F034         	movff	___fladd@b+1,?___fladd+1
 12809  0019F2  C035  F035         	movff	___fladd@b+2,?___fladd+2
 12810  0019F6  C036  F036         	movff	___fladd@b+3,?___fladd+3
 12811  0019FA                     l862:
 12812  0019FA  FFFF               	dw	65535	; assembler added errata NOP
 12813  0019FC  0012               	return		;funcret
 12814  0019FE  FFFF               	dw	65535	; errata NOP
 12815  001A00                     __end_of___fladd:
 12816                           	callstack 0
 12817                           
 12818 ;; *************** function ___flneg *****************
 12819 ;; Defined at:
 12820 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
 12821 ;; Parameters:    Size  Location     Type
 12822 ;;  f1              4    0[COMRAM] unsigned char 
 12823 ;; Auto vars:     Size  Location     Type
 12824 ;;		None
 12825 ;; Return value:  Size  Location     Type
 12826 ;;                  4    0[COMRAM] unsigned char 
 12827 ;; Registers used:
 12828 ;;		wreg, status,2, status,0
 12829 ;; Tracked objects:
 12830 ;;		On entry : 0/0
 12831 ;;		On exit  : 0/0
 12832 ;;		Unchanged: 0/0
 12833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12834 ;;      Params:         4       0       0       0       0       0       0
 12835 ;;      Locals:         0       0       0       0       0       0       0
 12836 ;;      Temps:          0       0       0       0       0       0       0
 12837 ;;      Totals:         4       0       0       0       0       0       0
 12838 ;;Total ram usage:        4 bytes
 12839 ;; Hardware stack levels used:    1
 12840 ;; Hardware stack levels required when called:    1
 12841 ;; This function calls:
 12842 ;;		Nothing
 12843 ;; This function is called by:
 12844 ;;		_roundf
 12845 ;; This function uses a non-reentrant model
 12846 ;;
 12847                           
 12848                           	psect	text52
 12849  006E30                     __ptext52:
 12850                           	callstack 0
 12851  006E30                     ___flneg:
 12852                           	callstack 0
 12853  006E30  FFFF               	dw	65535	; assembler added errata NOP
 12854  006E32  5001               	movf	___flneg@f1^0,w,c
 12855  006E34  1002               	iorwf	(___flneg@f1+1)^0,w,c
 12856  006E36  1003               	iorwf	(___flneg@f1+2)^0,w,c
 12857  006E38  1004               	iorwf	(___flneg@f1+3)^0,w,c
 12858  006E3A  B4D8               	btfsc	status,2,c
 12859  006E3C  EF22  F037         	goto	u5781
 12860  006E40  EF25  F037         	goto	u5780
 12861  006E44                     u5781:
 12862  006E44  FFFF               	dw	65535	; assembler added errata NOP
 12863  006E46  EF2E  F037         	goto	l4753
 12864  006E4A                     u5780:
 12865  006E4A  FFFF               	dw	65535	; assembler added errata NOP
 12866  006E4C  0E00               	movlw	0
 12867  006E4E  1A01               	xorwf	___flneg@f1^0,f,c
 12868  006E50  0E00               	movlw	0
 12869  006E52  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 12870  006E54  0E00               	movlw	0
 12871  006E56  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 12872  006E58  0E80               	movlw	128
 12873  006E5A  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 12874  006E5C                     l4753:
 12875  006E5C  FFFF               	dw	65535	; assembler added errata NOP
 12876  006E5E  C001  F001         	movff	___flneg@f1,?___flneg
 12877  006E62  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 12878  006E66  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 12879  006E6A  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 12880  006E6E  0012               	return		;funcret
 12881  006E70  FFFF               	dw	65535	; errata NOP
 12882  006E72                     __end_of___flneg:
 12883                           	callstack 0
 12884                           
 12885 ;; *************** function ___flmul *****************
 12886 ;; Defined at:
 12887 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
 12888 ;; Parameters:    Size  Location     Type
 12889 ;;  b               4    0[COMRAM] unsigned char 
 12890 ;;  a               4    4[COMRAM] unsigned char 
 12891 ;; Auto vars:     Size  Location     Type
 12892 ;;  prod            4   19[COMRAM] struct .
 12893 ;;  grs             4   13[COMRAM] unsigned long 
 12894 ;;  temp            2   23[COMRAM] struct .
 12895 ;;  bexp            1   18[COMRAM] unsigned char 
 12896 ;;  aexp            1   17[COMRAM] unsigned char 
 12897 ;;  sign            1   12[COMRAM] unsigned char 
 12898 ;; Return value:  Size  Location     Type
 12899 ;;                  4    0[COMRAM] unsigned char 
 12900 ;; Registers used:
 12901 ;;		wreg, status,2, status,0, prodl, prodh
 12902 ;; Tracked objects:
 12903 ;;		On entry : 0/0
 12904 ;;		On exit  : 0/0
 12905 ;;		Unchanged: 0/0
 12906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12907 ;;      Params:         8       0       0       0       0       0       0
 12908 ;;      Locals:        13       0       0       0       0       0       0
 12909 ;;      Temps:          4       0       0       0       0       0       0
 12910 ;;      Totals:        25       0       0       0       0       0       0
 12911 ;;Total ram usage:       25 bytes
 12912 ;; Hardware stack levels used:    1
 12913 ;; Hardware stack levels required when called:    1
 12914 ;; This function calls:
 12915 ;;		Nothing
 12916 ;; This function is called by:
 12917 ;;		_init_timer_2
 12918 ;;		_update_pwm_duty_ccp1
 12919 ;;		_roundf
 12920 ;; This function uses a non-reentrant model
 12921 ;;
 12922                           
 12923                           	psect	text53
 12924  001EEE                     __ptext53:
 12925                           	callstack 0
 12926  001EEE                     ___flmul:
 12927                           	callstack 0
 12928  001EEE  FFFF               	dw	65535	; assembler added errata NOP
 12929  001EF0  5004               	movf	(___flmul@b+3)^0,w,c
 12930  001EF2  0B80               	andlw	128
 12931  001EF4  6E0D               	movwf	___flmul@sign^0,c
 12932  001EF6  5004               	movf	(___flmul@b+3)^0,w,c
 12933  001EF8  2404               	addwf	(___flmul@b+3)^0,w,c
 12934  001EFA  6E13               	movwf	___flmul@bexp^0,c
 12935  001EFC  AE03               	btfss	(___flmul@b+2)^0,7,c
 12936  001EFE  EF83  F00F         	goto	u5541
 12937  001F02  EF86  F00F         	goto	u5540
 12938  001F06                     u5541:
 12939  001F06  FFFF               	dw	65535	; assembler added errata NOP
 12940  001F08  EF88  F00F         	goto	l4597
 12941  001F0C                     u5540:
 12942  001F0C  FFFF               	dw	65535	; assembler added errata NOP
 12943  001F0E  8013               	bsf	___flmul@bexp^0,0,c
 12944  001F10                     l4597:
 12945  001F10  FFFF               	dw	65535	; assembler added errata NOP
 12946  001F12  5013               	movf	___flmul@bexp^0,w,c
 12947  001F14  B4D8               	btfsc	status,2,c
 12948  001F16  EF8F  F00F         	goto	u5551
 12949  001F1A  EF92  F00F         	goto	u5550
 12950  001F1E                     u5551:
 12951  001F1E  FFFF               	dw	65535	; assembler added errata NOP
 12952  001F20  EFA9  F00F         	goto	l4605
 12953  001F24                     u5550:
 12954  001F24  FFFF               	dw	65535	; assembler added errata NOP
 12955  001F26  2813               	incf	___flmul@bexp^0,w,c
 12956  001F28  A4D8               	btfss	status,2,c
 12957  001F2A  EF99  F00F         	goto	u5561
 12958  001F2E  EF9C  F00F         	goto	u5560
 12959  001F32                     u5561:
 12960  001F32  FFFF               	dw	65535	; assembler added errata NOP
 12961  001F34  EFA5  F00F         	goto	l4603
 12962  001F38                     u5560:
 12963  001F38  FFFF               	dw	65535	; assembler added errata NOP
 12964  001F3A  0E00               	movlw	0
 12965  001F3C  6E01               	movwf	___flmul@b^0,c
 12966  001F3E  0E00               	movlw	0
 12967  001F40  6E02               	movwf	(___flmul@b+1)^0,c
 12968  001F42  0E00               	movlw	0
 12969  001F44  6E03               	movwf	(___flmul@b+2)^0,c
 12970  001F46  0E00               	movlw	0
 12971  001F48  6E04               	movwf	(___flmul@b+3)^0,c
 12972  001F4A                     l4603:
 12973  001F4A  FFFF               	dw	65535	; assembler added errata NOP
 12974  001F4C  8E03               	bsf	(___flmul@b+2)^0,7,c
 12975  001F4E  EFB2  F00F         	goto	l4607
 12976  001F52                     l4605:
 12977  001F52  FFFF               	dw	65535	; assembler added errata NOP
 12978  001F54  0E00               	movlw	0
 12979  001F56  6E01               	movwf	___flmul@b^0,c
 12980  001F58  0E00               	movlw	0
 12981  001F5A  6E02               	movwf	(___flmul@b+1)^0,c
 12982  001F5C  0E00               	movlw	0
 12983  001F5E  6E03               	movwf	(___flmul@b+2)^0,c
 12984  001F60  0E00               	movlw	0
 12985  001F62  6E04               	movwf	(___flmul@b+3)^0,c
 12986  001F64                     l4607:
 12987  001F64  FFFF               	dw	65535	; assembler added errata NOP
 12988  001F66  5008               	movf	(___flmul@a+3)^0,w,c
 12989  001F68  0B80               	andlw	128
 12990  001F6A  1A0D               	xorwf	___flmul@sign^0,f,c
 12991  001F6C  5008               	movf	(___flmul@a+3)^0,w,c
 12992  001F6E  2408               	addwf	(___flmul@a+3)^0,w,c
 12993  001F70  6E12               	movwf	___flmul@aexp^0,c
 12994  001F72  AE07               	btfss	(___flmul@a+2)^0,7,c
 12995  001F74  EFBE  F00F         	goto	u5571
 12996  001F78  EFC1  F00F         	goto	u5570
 12997  001F7C                     u5571:
 12998  001F7C  FFFF               	dw	65535	; assembler added errata NOP
 12999  001F7E  EFC3  F00F         	goto	l4615
 13000  001F82                     u5570:
 13001  001F82  FFFF               	dw	65535	; assembler added errata NOP
 13002  001F84  8012               	bsf	___flmul@aexp^0,0,c
 13003  001F86                     l4615:
 13004  001F86  FFFF               	dw	65535	; assembler added errata NOP
 13005  001F88  5012               	movf	___flmul@aexp^0,w,c
 13006  001F8A  B4D8               	btfsc	status,2,c
 13007  001F8C  EFCA  F00F         	goto	u5581
 13008  001F90  EFCD  F00F         	goto	u5580
 13009  001F94                     u5581:
 13010  001F94  FFFF               	dw	65535	; assembler added errata NOP
 13011  001F96  EFE4  F00F         	goto	l4623
 13012  001F9A                     u5580:
 13013  001F9A  FFFF               	dw	65535	; assembler added errata NOP
 13014  001F9C  2812               	incf	___flmul@aexp^0,w,c
 13015  001F9E  A4D8               	btfss	status,2,c
 13016  001FA0  EFD4  F00F         	goto	u5591
 13017  001FA4  EFD7  F00F         	goto	u5590
 13018  001FA8                     u5591:
 13019  001FA8  FFFF               	dw	65535	; assembler added errata NOP
 13020  001FAA  EFE0  F00F         	goto	l4621
 13021  001FAE                     u5590:
 13022  001FAE  FFFF               	dw	65535	; assembler added errata NOP
 13023  001FB0  0E00               	movlw	0
 13024  001FB2  6E05               	movwf	___flmul@a^0,c
 13025  001FB4  0E00               	movlw	0
 13026  001FB6  6E06               	movwf	(___flmul@a+1)^0,c
 13027  001FB8  0E00               	movlw	0
 13028  001FBA  6E07               	movwf	(___flmul@a+2)^0,c
 13029  001FBC  0E00               	movlw	0
 13030  001FBE  6E08               	movwf	(___flmul@a+3)^0,c
 13031  001FC0                     l4621:
 13032  001FC0  FFFF               	dw	65535	; assembler added errata NOP
 13033  001FC2  8E07               	bsf	(___flmul@a+2)^0,7,c
 13034  001FC4  EFED  F00F         	goto	l939
 13035  001FC8                     l4623:
 13036  001FC8  FFFF               	dw	65535	; assembler added errata NOP
 13037  001FCA  0E00               	movlw	0
 13038  001FCC  6E05               	movwf	___flmul@a^0,c
 13039  001FCE  0E00               	movlw	0
 13040  001FD0  6E06               	movwf	(___flmul@a+1)^0,c
 13041  001FD2  0E00               	movlw	0
 13042  001FD4  6E07               	movwf	(___flmul@a+2)^0,c
 13043  001FD6  0E00               	movlw	0
 13044  001FD8  6E08               	movwf	(___flmul@a+3)^0,c
 13045  001FDA                     l939:
 13046  001FDA  FFFF               	dw	65535	; assembler added errata NOP
 13047  001FDC  5012               	movf	___flmul@aexp^0,w,c
 13048  001FDE  B4D8               	btfsc	status,2,c
 13049  001FE0  EFF4  F00F         	goto	u5601
 13050  001FE4  EFF7  F00F         	goto	u5600
 13051  001FE8                     u5601:
 13052  001FE8  FFFF               	dw	65535	; assembler added errata NOP
 13053  001FEA  EF01  F010         	goto	l4627
 13054  001FEE                     u5600:
 13055  001FEE  FFFF               	dw	65535	; assembler added errata NOP
 13056  001FF0  5013               	movf	___flmul@bexp^0,w,c
 13057  001FF2  A4D8               	btfss	status,2,c
 13058  001FF4  EFFE  F00F         	goto	u5611
 13059  001FF8  EF01  F010         	goto	u5610
 13060  001FFC                     u5611:
 13061  001FFC  FFFF               	dw	65535	; assembler added errata NOP
 13062  001FFE  EF0C  F010         	goto	l4631
 13063  002002                     u5610:
 13064  002002                     l4627:
 13065  002002  FFFF               	dw	65535	; assembler added errata NOP
 13066  002004  0E00               	movlw	0
 13067  002006  6E01               	movwf	?___flmul^0,c
 13068  002008  0E00               	movlw	0
 13069  00200A  6E02               	movwf	(?___flmul+1)^0,c
 13070  00200C  0E00               	movlw	0
 13071  00200E  6E03               	movwf	(?___flmul+2)^0,c
 13072  002010  0E00               	movlw	0
 13073  002012  6E04               	movwf	(?___flmul+3)^0,c
 13074  002014  EFC6  F011         	goto	l943
 13075  002018                     l4631:
 13076  002018  FFFF               	dw	65535	; assembler added errata NOP
 13077  00201A  5007               	movf	(___flmul@a+2)^0,w,c
 13078  00201C  0201               	mulwf	___flmul@b^0,c
 13079  00201E  CFF3 F018          	movff	prodl,___flmul@temp
 13080  002022  CFF4 F019          	movff	prodh,___flmul@temp+1
 13081  002026  5018               	movf	___flmul@temp^0,w,c
 13082  002028  6E0E               	movwf	___flmul@grs^0,c
 13083  00202A  6A0F               	clrf	(___flmul@grs+1)^0,c
 13084  00202C  6A10               	clrf	(___flmul@grs+2)^0,c
 13085  00202E  6A11               	clrf	(___flmul@grs+3)^0,c
 13086  002030  5019               	movf	(___flmul@temp+1)^0,w,c
 13087  002032  6E14               	movwf	___flmul@prod^0,c
 13088  002034  6A15               	clrf	(___flmul@prod+1)^0,c
 13089  002036  6A16               	clrf	(___flmul@prod+2)^0,c
 13090  002038  6A17               	clrf	(___flmul@prod+3)^0,c
 13091  00203A  5006               	movf	(___flmul@a+1)^0,w,c
 13092  00203C  0202               	mulwf	(___flmul@b+1)^0,c
 13093  00203E  CFF3 F018          	movff	prodl,___flmul@temp
 13094  002042  CFF4 F019          	movff	prodh,___flmul@temp+1
 13095  002046  5018               	movf	___flmul@temp^0,w,c
 13096  002048  260E               	addwf	___flmul@grs^0,f,c
 13097  00204A  0E00               	movlw	0
 13098  00204C  220F               	addwfc	(___flmul@grs+1)^0,f,c
 13099  00204E  2210               	addwfc	(___flmul@grs+2)^0,f,c
 13100  002050  2211               	addwfc	(___flmul@grs+3)^0,f,c
 13101  002052  5019               	movf	(___flmul@temp+1)^0,w,c
 13102  002054  2614               	addwf	___flmul@prod^0,f,c
 13103  002056  0E00               	movlw	0
 13104  002058  2215               	addwfc	(___flmul@prod+1)^0,f,c
 13105  00205A  2216               	addwfc	(___flmul@prod+2)^0,f,c
 13106  00205C  2217               	addwfc	(___flmul@prod+3)^0,f,c
 13107  00205E  5005               	movf	___flmul@a^0,w,c
 13108  002060  0203               	mulwf	(___flmul@b+2)^0,c
 13109  002062  CFF3 F018          	movff	prodl,___flmul@temp
 13110  002066  CFF4 F019          	movff	prodh,___flmul@temp+1
 13111  00206A  5018               	movf	___flmul@temp^0,w,c
 13112  00206C  260E               	addwf	___flmul@grs^0,f,c
 13113  00206E  0E00               	movlw	0
 13114  002070  220F               	addwfc	(___flmul@grs+1)^0,f,c
 13115  002072  2210               	addwfc	(___flmul@grs+2)^0,f,c
 13116  002074  2211               	addwfc	(___flmul@grs+3)^0,f,c
 13117  002076  5019               	movf	(___flmul@temp+1)^0,w,c
 13118  002078  2614               	addwf	___flmul@prod^0,f,c
 13119  00207A  0E00               	movlw	0
 13120  00207C  2215               	addwfc	(___flmul@prod+1)^0,f,c
 13121  00207E  2216               	addwfc	(___flmul@prod+2)^0,f,c
 13122  002080  2217               	addwfc	(___flmul@prod+3)^0,f,c
 13123  002082  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
 13124  002086  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
 13125  00208A  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
 13126  00208E  6A0E               	clrf	___flmul@grs^0,c
 13127  002090  5005               	movf	___flmul@a^0,w,c
 13128  002092  0202               	mulwf	(___flmul@b+1)^0,c
 13129  002094  CFF3 F018          	movff	prodl,___flmul@temp
 13130  002098  CFF4 F019          	movff	prodh,___flmul@temp+1
 13131  00209C  5018               	movf	___flmul@temp^0,w,c
 13132  00209E  260E               	addwf	___flmul@grs^0,f,c
 13133  0020A0  5019               	movf	(___flmul@temp+1)^0,w,c
 13134  0020A2  220F               	addwfc	(___flmul@grs+1)^0,f,c
 13135  0020A4  0E00               	movlw	0
 13136  0020A6  2210               	addwfc	(___flmul@grs+2)^0,f,c
 13137  0020A8  0E00               	movlw	0
 13138  0020AA  2211               	addwfc	(___flmul@grs+3)^0,f,c
 13139  0020AC  5006               	movf	(___flmul@a+1)^0,w,c
 13140  0020AE  0201               	mulwf	___flmul@b^0,c
 13141  0020B0  CFF3 F018          	movff	prodl,___flmul@temp
 13142  0020B4  CFF4 F019          	movff	prodh,___flmul@temp+1
 13143  0020B8  5018               	movf	___flmul@temp^0,w,c
 13144  0020BA  260E               	addwf	___flmul@grs^0,f,c
 13145  0020BC  5019               	movf	(___flmul@temp+1)^0,w,c
 13146  0020BE  220F               	addwfc	(___flmul@grs+1)^0,f,c
 13147  0020C0  0E00               	movlw	0
 13148  0020C2  2210               	addwfc	(___flmul@grs+2)^0,f,c
 13149  0020C4  0E00               	movlw	0
 13150  0020C6  2211               	addwfc	(___flmul@grs+3)^0,f,c
 13151  0020C8  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
 13152  0020CC  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
 13153  0020D0  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
 13154  0020D4  6A0E               	clrf	___flmul@grs^0,c
 13155  0020D6  5005               	movf	___flmul@a^0,w,c
 13156  0020D8  0201               	mulwf	___flmul@b^0,c
 13157  0020DA  CFF3 F018          	movff	prodl,___flmul@temp
 13158  0020DE  CFF4 F019          	movff	prodh,___flmul@temp+1
 13159  0020E2  5018               	movf	___flmul@temp^0,w,c
 13160  0020E4  260E               	addwf	___flmul@grs^0,f,c
 13161  0020E6  5019               	movf	(___flmul@temp+1)^0,w,c
 13162  0020E8  220F               	addwfc	(___flmul@grs+1)^0,f,c
 13163  0020EA  0E00               	movlw	0
 13164  0020EC  2210               	addwfc	(___flmul@grs+2)^0,f,c
 13165  0020EE  0E00               	movlw	0
 13166  0020F0  2211               	addwfc	(___flmul@grs+3)^0,f,c
 13167  0020F2  5007               	movf	(___flmul@a+2)^0,w,c
 13168  0020F4  0202               	mulwf	(___flmul@b+1)^0,c
 13169  0020F6  CFF3 F018          	movff	prodl,___flmul@temp
 13170  0020FA  CFF4 F019          	movff	prodh,___flmul@temp+1
 13171  0020FE  5018               	movf	___flmul@temp^0,w,c
 13172  002100  2614               	addwf	___flmul@prod^0,f,c
 13173  002102  5019               	movf	(___flmul@temp+1)^0,w,c
 13174  002104  2215               	addwfc	(___flmul@prod+1)^0,f,c
 13175  002106  0E00               	movlw	0
 13176  002108  2216               	addwfc	(___flmul@prod+2)^0,f,c
 13177  00210A  0E00               	movlw	0
 13178  00210C  2217               	addwfc	(___flmul@prod+3)^0,f,c
 13179  00210E  5006               	movf	(___flmul@a+1)^0,w,c
 13180  002110  0203               	mulwf	(___flmul@b+2)^0,c
 13181  002112  CFF3 F018          	movff	prodl,___flmul@temp
 13182  002116  CFF4 F019          	movff	prodh,___flmul@temp+1
 13183  00211A  5018               	movf	___flmul@temp^0,w,c
 13184  00211C  2614               	addwf	___flmul@prod^0,f,c
 13185  00211E  5019               	movf	(___flmul@temp+1)^0,w,c
 13186  002120  2215               	addwfc	(___flmul@prod+1)^0,f,c
 13187  002122  0E00               	movlw	0
 13188  002124  2216               	addwfc	(___flmul@prod+2)^0,f,c
 13189  002126  0E00               	movlw	0
 13190  002128  2217               	addwfc	(___flmul@prod+3)^0,f,c
 13191  00212A  5007               	movf	(___flmul@a+2)^0,w,c
 13192  00212C  0203               	mulwf	(___flmul@b+2)^0,c
 13193  00212E  CFF3 F018          	movff	prodl,___flmul@temp
 13194  002132  CFF4 F019          	movff	prodh,___flmul@temp+1
 13195  002136  5018               	movf	___flmul@temp^0,w,c
 13196  002138  6E09               	movwf	??___flmul^0,c
 13197  00213A  5019               	movf	(___flmul@temp+1)^0,w,c
 13198  00213C  6E0A               	movwf	(??___flmul+1)^0,c
 13199  00213E  6A0B               	clrf	(??___flmul+2)^0,c
 13200  002140  6A0C               	clrf	(??___flmul+3)^0,c
 13201  002142  C00B  F00C         	movff	??___flmul+2,??___flmul+3
 13202  002146  C00A  F00B         	movff	??___flmul+1,??___flmul+2
 13203  00214A  C009  F00A         	movff	??___flmul,??___flmul+1
 13204  00214E  6A09               	clrf	??___flmul^0,c
 13205  002150  5009               	movf	??___flmul^0,w,c
 13206  002152  2614               	addwf	___flmul@prod^0,f,c
 13207  002154  500A               	movf	(??___flmul+1)^0,w,c
 13208  002156  2215               	addwfc	(___flmul@prod+1)^0,f,c
 13209  002158  500B               	movf	(??___flmul+2)^0,w,c
 13210  00215A  2216               	addwfc	(___flmul@prod+2)^0,f,c
 13211  00215C  500C               	movf	(??___flmul+3)^0,w,c
 13212  00215E  2217               	addwfc	(___flmul@prod+3)^0,f,c
 13213  002160  C00E  F009         	movff	___flmul@grs,??___flmul
 13214  002164  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
 13215  002168  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
 13216  00216C  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
 13217  002170  0E19               	movlw	25
 13218  002172  EFC1  F010         	goto	u5620
 13219  002176                     u5625:
 13220  002176  FFFF               	dw	65535	; assembler added errata NOP
 13221  002178  90D8               	bcf	status,0,c
 13222  00217A  320C               	rrcf	(??___flmul+3)^0,f,c
 13223  00217C  320B               	rrcf	(??___flmul+2)^0,f,c
 13224  00217E  320A               	rrcf	(??___flmul+1)^0,f,c
 13225  002180  3209               	rrcf	??___flmul^0,f,c
 13226  002182                     u5620:
 13227  002182  FFFF               	dw	65535	; assembler added errata NOP
 13228  002184  2EE8               	decfsz	wreg,f,c
 13229  002186  EFBB  F010         	goto	u5625
 13230  00218A  5009               	movf	??___flmul^0,w,c
 13231  00218C  2614               	addwf	___flmul@prod^0,f,c
 13232  00218E  500A               	movf	(??___flmul+1)^0,w,c
 13233  002190  2215               	addwfc	(___flmul@prod+1)^0,f,c
 13234  002192  500B               	movf	(??___flmul+2)^0,w,c
 13235  002194  2216               	addwfc	(___flmul@prod+2)^0,f,c
 13236  002196  500C               	movf	(??___flmul+3)^0,w,c
 13237  002198  2217               	addwfc	(___flmul@prod+3)^0,f,c
 13238  00219A  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
 13239  00219E  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
 13240  0021A2  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
 13241  0021A6  6A0E               	clrf	___flmul@grs^0,c
 13242  0021A8  5012               	movf	___flmul@aexp^0,w,c
 13243  0021AA  C013  F009         	movff	___flmul@bexp,??___flmul
 13244  0021AE  6A0A               	clrf	(??___flmul+1)^0,c
 13245  0021B0  2609               	addwf	??___flmul^0,f,c
 13246  0021B2  0E00               	movlw	0
 13247  0021B4  220A               	addwfc	(??___flmul+1)^0,f,c
 13248  0021B6  0E82               	movlw	130
 13249  0021B8  2409               	addwf	??___flmul^0,w,c
 13250  0021BA  6E18               	movwf	___flmul@temp^0,c
 13251  0021BC  0EFF               	movlw	255
 13252  0021BE  200A               	addwfc	(??___flmul+1)^0,w,c
 13253  0021C0  6E19               	movwf	(___flmul@temp+1)^0,c
 13254  0021C2  EFFC  F010         	goto	l4679
 13255  0021C6                     l4673:
 13256  0021C6  FFFF               	dw	65535	; assembler added errata NOP
 13257  0021C8  90D8               	bcf	status,0,c
 13258  0021CA  3614               	rlcf	___flmul@prod^0,f,c
 13259  0021CC  3615               	rlcf	(___flmul@prod+1)^0,f,c
 13260  0021CE  3616               	rlcf	(___flmul@prod+2)^0,f,c
 13261  0021D0  3617               	rlcf	(___flmul@prod+3)^0,f,c
 13262  0021D2  AE11               	btfss	(___flmul@grs+3)^0,7,c
 13263  0021D4  EFEE  F010         	goto	u5631
 13264  0021D8  EFF1  F010         	goto	u5630
 13265  0021DC                     u5631:
 13266  0021DC  FFFF               	dw	65535	; assembler added errata NOP
 13267  0021DE  EFF3  F010         	goto	l946
 13268  0021E2                     u5630:
 13269  0021E2  FFFF               	dw	65535	; assembler added errata NOP
 13270  0021E4  8014               	bsf	___flmul@prod^0,0,c
 13271  0021E6                     l946:
 13272  0021E6  FFFF               	dw	65535	; assembler added errata NOP
 13273  0021E8  90D8               	bcf	status,0,c
 13274  0021EA  360E               	rlcf	___flmul@grs^0,f,c
 13275  0021EC  360F               	rlcf	(___flmul@grs+1)^0,f,c
 13276  0021EE  3610               	rlcf	(___flmul@grs+2)^0,f,c
 13277  0021F0  3611               	rlcf	(___flmul@grs+3)^0,f,c
 13278  0021F2  0618               	decf	___flmul@temp^0,f,c
 13279  0021F4  A0D8               	btfss	status,0,c
 13280  0021F6  0619               	decf	(___flmul@temp+1)^0,f,c
 13281  0021F8                     l4679:
 13282  0021F8  FFFF               	dw	65535	; assembler added errata NOP
 13283  0021FA  AE16               	btfss	(___flmul@prod+2)^0,7,c
 13284  0021FC  EF02  F011         	goto	u5641
 13285  002200  EF05  F011         	goto	u5640
 13286  002204                     u5641:
 13287  002204  FFFF               	dw	65535	; assembler added errata NOP
 13288  002206  EFE3  F010         	goto	l4673
 13289  00220A                     u5640:
 13290  00220A  FFFF               	dw	65535	; assembler added errata NOP
 13291  00220C  0E00               	movlw	0
 13292  00220E  6E12               	movwf	___flmul@aexp^0,c
 13293  002210  AE11               	btfss	(___flmul@grs+3)^0,7,c
 13294  002212  EF0D  F011         	goto	u5651
 13295  002216  EF10  F011         	goto	u5650
 13296  00221A                     u5651:
 13297  00221A  FFFF               	dw	65535	; assembler added errata NOP
 13298  00221C  EF3B  F011         	goto	l948
 13299  002220                     u5650:
 13300  002220  FFFF               	dw	65535	; assembler added errata NOP
 13301  002222  0EFF               	movlw	255
 13302  002224  140E               	andwf	___flmul@grs^0,w,c
 13303  002226  6E09               	movwf	??___flmul^0,c
 13304  002228  0EFF               	movlw	255
 13305  00222A  140F               	andwf	(___flmul@grs+1)^0,w,c
 13306  00222C  6E0A               	movwf	(??___flmul+1)^0,c
 13307  00222E  0EFF               	movlw	255
 13308  002230  1410               	andwf	(___flmul@grs+2)^0,w,c
 13309  002232  6E0B               	movwf	(??___flmul+2)^0,c
 13310  002234  0E7F               	movlw	127
 13311  002236  1411               	andwf	(___flmul@grs+3)^0,w,c
 13312  002238  6E0C               	movwf	(??___flmul+3)^0,c
 13313  00223A  5009               	movf	??___flmul^0,w,c
 13314  00223C  100A               	iorwf	(??___flmul+1)^0,w,c
 13315  00223E  100B               	iorwf	(??___flmul+2)^0,w,c
 13316  002240  100C               	iorwf	(??___flmul+3)^0,w,c
 13317  002242  B4D8               	btfsc	status,2,c
 13318  002244  EF26  F011         	goto	u5661
 13319  002248  EF29  F011         	goto	u5660
 13320  00224C                     u5661:
 13321  00224C  FFFF               	dw	65535	; assembler added errata NOP
 13322  00224E  EF2F  F011         	goto	l949
 13323  002252                     u5660:
 13324  002252  FFFF               	dw	65535	; assembler added errata NOP
 13325  002254                     l4687:
 13326  002254  FFFF               	dw	65535	; assembler added errata NOP
 13327  002256  0E01               	movlw	1
 13328  002258  6E12               	movwf	___flmul@aexp^0,c
 13329  00225A  EF3B  F011         	goto	l948
 13330  00225E                     l949:
 13331  00225E  FFFF               	dw	65535	; assembler added errata NOP
 13332  002260  A014               	btfss	___flmul@prod^0,0,c
 13333  002262  EF35  F011         	goto	u5671
 13334  002266  EF38  F011         	goto	u5670
 13335  00226A                     u5671:
 13336  00226A  FFFF               	dw	65535	; assembler added errata NOP
 13337  00226C  EF3B  F011         	goto	l948
 13338  002270                     u5670:
 13339  002270  FFFF               	dw	65535	; assembler added errata NOP
 13340  002272  EF2A  F011         	goto	l4687
 13341  002276                     l948:
 13342  002276  FFFF               	dw	65535	; assembler added errata NOP
 13343  002278  5012               	movf	___flmul@aexp^0,w,c
 13344  00227A  B4D8               	btfsc	status,2,c
 13345  00227C  EF42  F011         	goto	u5681
 13346  002280  EF45  F011         	goto	u5680
 13347  002284                     u5681:
 13348  002284  FFFF               	dw	65535	; assembler added errata NOP
 13349  002286  EF6C  F011         	goto	l4699
 13350  00228A                     u5680:
 13351  00228A  FFFF               	dw	65535	; assembler added errata NOP
 13352  00228C  0E01               	movlw	1
 13353  00228E  2614               	addwf	___flmul@prod^0,f,c
 13354  002290  0E00               	movlw	0
 13355  002292  2215               	addwfc	(___flmul@prod+1)^0,f,c
 13356  002294  2216               	addwfc	(___flmul@prod+2)^0,f,c
 13357  002296  2217               	addwfc	(___flmul@prod+3)^0,f,c
 13358  002298  A017               	btfss	(___flmul@prod+3)^0,0,c
 13359  00229A  EF51  F011         	goto	u5691
 13360  00229E  EF54  F011         	goto	u5690
 13361  0022A2                     u5691:
 13362  0022A2  FFFF               	dw	65535	; assembler added errata NOP
 13363  0022A4  EF6C  F011         	goto	l4699
 13364  0022A8                     u5690:
 13365  0022A8  FFFF               	dw	65535	; assembler added errata NOP
 13366  0022AA  C014  F009         	movff	___flmul@prod,??___flmul
 13367  0022AE  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
 13368  0022B2  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
 13369  0022B6  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
 13370  0022BA  340C               	rlcf	(??___flmul+3)^0,w,c
 13371  0022BC  320C               	rrcf	(??___flmul+3)^0,f,c
 13372  0022BE  320B               	rrcf	(??___flmul+2)^0,f,c
 13373  0022C0  320A               	rrcf	(??___flmul+1)^0,f,c
 13374  0022C2  3209               	rrcf	??___flmul^0,f,c
 13375  0022C4  C009  F014         	movff	??___flmul,___flmul@prod
 13376  0022C8  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
 13377  0022CC  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
 13378  0022D0  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
 13379  0022D4  4A18               	infsnz	___flmul@temp^0,f,c
 13380  0022D6  2A19               	incf	(___flmul@temp+1)^0,f,c
 13381  0022D8                     l4699:
 13382  0022D8  FFFF               	dw	65535	; assembler added errata NOP
 13383  0022DA  BE19               	btfsc	(___flmul@temp+1)^0,7,c
 13384  0022DC  EF78  F011         	goto	u5701
 13385  0022E0  5019               	movf	(___flmul@temp+1)^0,w,c
 13386  0022E2  E109               	bnz	u5700
 13387  0022E4  2818               	incf	___flmul@temp^0,w,c
 13388  0022E6  A0D8               	btfss	status,0,c
 13389  0022E8  EF78  F011         	goto	u5701
 13390  0022EC  EF7B  F011         	goto	u5700
 13391  0022F0                     u5701:
 13392  0022F0  FFFF               	dw	65535	; assembler added errata NOP
 13393  0022F2  EF86  F011         	goto	l4703
 13394  0022F6                     u5700:
 13395  0022F6  FFFF               	dw	65535	; assembler added errata NOP
 13396  0022F8  0E00               	movlw	0
 13397  0022FA  6E14               	movwf	___flmul@prod^0,c
 13398  0022FC  0E00               	movlw	0
 13399  0022FE  6E15               	movwf	(___flmul@prod+1)^0,c
 13400  002300  0E80               	movlw	128
 13401  002302  6E16               	movwf	(___flmul@prod+2)^0,c
 13402  002304  0E7F               	movlw	127
 13403  002306  6E17               	movwf	(___flmul@prod+3)^0,c
 13404  002308  EFBB  F011         	goto	l4715
 13405  00230C                     l4703:
 13406  00230C  FFFF               	dw	65535	; assembler added errata NOP
 13407  00230E  BE19               	btfsc	(___flmul@temp+1)^0,7,c
 13408  002310  EF95  F011         	goto	u5710
 13409  002314  5019               	movf	(___flmul@temp+1)^0,w,c
 13410  002316  E106               	bnz	u5711
 13411  002318  0418               	decf	___flmul@temp^0,w,c
 13412  00231A  B0D8               	btfsc	status,0,c
 13413  00231C  EF92  F011         	goto	u5711
 13414  002320  EF95  F011         	goto	u5710
 13415  002324                     u5711:
 13416  002324  FFFF               	dw	65535	; assembler added errata NOP
 13417  002326  EFA2  F011         	goto	l956
 13418  00232A                     u5710:
 13419  00232A  FFFF               	dw	65535	; assembler added errata NOP
 13420  00232C  0E00               	movlw	0
 13421  00232E  6E14               	movwf	___flmul@prod^0,c
 13422  002330  0E00               	movlw	0
 13423  002332  6E15               	movwf	(___flmul@prod+1)^0,c
 13424  002334  0E00               	movlw	0
 13425  002336  6E16               	movwf	(___flmul@prod+2)^0,c
 13426  002338  0E00               	movlw	0
 13427  00233A  6E17               	movwf	(___flmul@prod+3)^0,c
 13428  00233C  0E00               	movlw	0
 13429  00233E  6E0D               	movwf	___flmul@sign^0,c
 13430  002340  EFBB  F011         	goto	l4715
 13431  002344                     l956:
 13432  002344  FFFF               	dw	65535	; assembler added errata NOP
 13433  002346  C018  F013         	movff	___flmul@temp,___flmul@bexp
 13434  00234A  0EFF               	movlw	255
 13435  00234C  1614               	andwf	___flmul@prod^0,f,c
 13436  00234E  0EFF               	movlw	255
 13437  002350  1615               	andwf	(___flmul@prod+1)^0,f,c
 13438  002352  0E7F               	movlw	127
 13439  002354  1616               	andwf	(___flmul@prod+2)^0,f,c
 13440  002356  0E00               	movlw	0
 13441  002358  1617               	andwf	(___flmul@prod+3)^0,f,c
 13442  00235A  A013               	btfss	___flmul@bexp^0,0,c
 13443  00235C  EFB2  F011         	goto	u5721
 13444  002360  EFB5  F011         	goto	u5720
 13445  002364                     u5721:
 13446  002364  FFFF               	dw	65535	; assembler added errata NOP
 13447  002366  EFB7  F011         	goto	l4713
 13448  00236A                     u5720:
 13449  00236A  FFFF               	dw	65535	; assembler added errata NOP
 13450  00236C  8E16               	bsf	(___flmul@prod+2)^0,7,c
 13451  00236E                     l4713:
 13452  00236E  FFFF               	dw	65535	; assembler added errata NOP
 13453  002370  90D8               	bcf	status,0,c
 13454  002372  3013               	rrcf	___flmul@bexp^0,w,c
 13455  002374  6E17               	movwf	(___flmul@prod+3)^0,c
 13456  002376                     l4715:
 13457  002376  FFFF               	dw	65535	; assembler added errata NOP
 13458  002378  500D               	movf	___flmul@sign^0,w,c
 13459  00237A  1217               	iorwf	(___flmul@prod+3)^0,f,c
 13460  00237C  C014  F001         	movff	___flmul@prod,?___flmul
 13461  002380  C015  F002         	movff	___flmul@prod+1,?___flmul+1
 13462  002384  C016  F003         	movff	___flmul@prod+2,?___flmul+2
 13463  002388  C017  F004         	movff	___flmul@prod+3,?___flmul+3
 13464  00238C                     l943:
 13465  00238C  FFFF               	dw	65535	; assembler added errata NOP
 13466  00238E  0012               	return		;funcret
 13467  002390  FFFF               	dw	65535	; errata NOP
 13468  002392                     __end_of___flmul:
 13469                           	callstack 0
 13470                           
 13471 ;; *************** function ___flge *****************
 13472 ;; Defined at:
 13473 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
 13474 ;; Parameters:    Size  Location     Type
 13475 ;;  ff1             4    0[COMRAM] unsigned char 
 13476 ;;  ff2             4    4[COMRAM] unsigned char 
 13477 ;; Auto vars:     Size  Location     Type
 13478 ;;		None
 13479 ;; Return value:  Size  Location     Type
 13480 ;;		None               void
 13481 ;; Registers used:
 13482 ;;		wreg, status,2, status,0
 13483 ;; Tracked objects:
 13484 ;;		On entry : 0/0
 13485 ;;		On exit  : 0/0
 13486 ;;		Unchanged: 0/0
 13487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13488 ;;      Params:         8       0       0       0       0       0       0
 13489 ;;      Locals:         0       0       0       0       0       0       0
 13490 ;;      Temps:          4       0       0       0       0       0       0
 13491 ;;      Totals:        12       0       0       0       0       0       0
 13492 ;;Total ram usage:       12 bytes
 13493 ;; Hardware stack levels used:    1
 13494 ;; Hardware stack levels required when called:    1
 13495 ;; This function calls:
 13496 ;;		Nothing
 13497 ;; This function is called by:
 13498 ;;		_roundf
 13499 ;; This function uses a non-reentrant model
 13500 ;;
 13501                           
 13502                           	psect	text54
 13503  007DC6                     __ptext54:
 13504                           	callstack 0
 13505  007DC6                     ___flge:
 13506                           	callstack 0
 13507  007DC6  FFFF               	dw	65535	; assembler added errata NOP
 13508  007DC8  0E00               	movlw	0
 13509  007DCA  1401               	andwf	___flge@ff1^0,w,c
 13510  007DCC  6E09               	movwf	??___flge^0,c
 13511  007DCE  0E00               	movlw	0
 13512  007DD0  1402               	andwf	(___flge@ff1+1)^0,w,c
 13513  007DD2  6E0A               	movwf	(??___flge+1)^0,c
 13514  007DD4  0E80               	movlw	128
 13515  007DD6  1403               	andwf	(___flge@ff1+2)^0,w,c
 13516  007DD8  6E0B               	movwf	(??___flge+2)^0,c
 13517  007DDA  0E7F               	movlw	127
 13518  007DDC  1404               	andwf	(___flge@ff1+3)^0,w,c
 13519  007DDE  6E0C               	movwf	(??___flge+3)^0,c
 13520  007DE0  5009               	movf	??___flge^0,w,c
 13521  007DE2  100A               	iorwf	(??___flge+1)^0,w,c
 13522  007DE4  100B               	iorwf	(??___flge+2)^0,w,c
 13523  007DE6  100C               	iorwf	(??___flge+3)^0,w,c
 13524  007DE8  A4D8               	btfss	status,2,c
 13525  007DEA  EFF9  F03E         	goto	u5731
 13526  007DEE  EFFC  F03E         	goto	u5730
 13527  007DF2                     u5731:
 13528  007DF2  FFFF               	dw	65535	; assembler added errata NOP
 13529  007DF4  EF05  F03F         	goto	l4731
 13530  007DF8                     u5730:
 13531  007DF8  FFFF               	dw	65535	; assembler added errata NOP
 13532  007DFA  0E00               	movlw	0
 13533  007DFC  6E01               	movwf	___flge@ff1^0,c
 13534  007DFE  0E00               	movlw	0
 13535  007E00  6E02               	movwf	(___flge@ff1+1)^0,c
 13536  007E02  0E00               	movlw	0
 13537  007E04  6E03               	movwf	(___flge@ff1+2)^0,c
 13538  007E06  0E00               	movlw	0
 13539  007E08  6E04               	movwf	(___flge@ff1+3)^0,c
 13540  007E0A                     l4731:
 13541  007E0A  FFFF               	dw	65535	; assembler added errata NOP
 13542  007E0C  0E00               	movlw	0
 13543  007E0E  1405               	andwf	___flge@ff2^0,w,c
 13544  007E10  6E09               	movwf	??___flge^0,c
 13545  007E12  0E00               	movlw	0
 13546  007E14  1406               	andwf	(___flge@ff2+1)^0,w,c
 13547  007E16  6E0A               	movwf	(??___flge+1)^0,c
 13548  007E18  0E80               	movlw	128
 13549  007E1A  1407               	andwf	(___flge@ff2+2)^0,w,c
 13550  007E1C  6E0B               	movwf	(??___flge+2)^0,c
 13551  007E1E  0E7F               	movlw	127
 13552  007E20  1408               	andwf	(___flge@ff2+3)^0,w,c
 13553  007E22  6E0C               	movwf	(??___flge+3)^0,c
 13554  007E24  5009               	movf	??___flge^0,w,c
 13555  007E26  100A               	iorwf	(??___flge+1)^0,w,c
 13556  007E28  100B               	iorwf	(??___flge+2)^0,w,c
 13557  007E2A  100C               	iorwf	(??___flge+3)^0,w,c
 13558  007E2C  A4D8               	btfss	status,2,c
 13559  007E2E  EF1B  F03F         	goto	u5741
 13560  007E32  EF1E  F03F         	goto	u5740
 13561  007E36                     u5741:
 13562  007E36  FFFF               	dw	65535	; assembler added errata NOP
 13563  007E38  EF27  F03F         	goto	l4735
 13564  007E3C                     u5740:
 13565  007E3C  FFFF               	dw	65535	; assembler added errata NOP
 13566  007E3E  0E00               	movlw	0
 13567  007E40  6E05               	movwf	___flge@ff2^0,c
 13568  007E42  0E00               	movlw	0
 13569  007E44  6E06               	movwf	(___flge@ff2+1)^0,c
 13570  007E46  0E00               	movlw	0
 13571  007E48  6E07               	movwf	(___flge@ff2+2)^0,c
 13572  007E4A  0E00               	movlw	0
 13573  007E4C  6E08               	movwf	(___flge@ff2+3)^0,c
 13574  007E4E                     l4735:
 13575  007E4E  FFFF               	dw	65535	; assembler added errata NOP
 13576  007E50  AE04               	btfss	(___flge@ff1+3)^0,7,c
 13577  007E52  EF2D  F03F         	goto	u5751
 13578  007E56  EF30  F03F         	goto	u5750
 13579  007E5A                     u5751:
 13580  007E5A  FFFF               	dw	65535	; assembler added errata NOP
 13581  007E5C  EF3A  F03F         	goto	l4739
 13582  007E60                     u5750:
 13583  007E60  FFFF               	dw	65535	; assembler added errata NOP
 13584  007E62  6C01               	negf	___flge@ff1^0,c
 13585  007E64  1E02               	comf	(___flge@ff1+1)^0,f,c
 13586  007E66  B0D8               	btfsc	status,0,c
 13587  007E68  2A02               	incf	(___flge@ff1+1)^0,f,c
 13588  007E6A  1E03               	comf	(___flge@ff1+2)^0,f,c
 13589  007E6C  B0D8               	btfsc	status,0,c
 13590  007E6E  2A03               	incf	(___flge@ff1+2)^0,f,c
 13591  007E70  0E80               	movlw	128
 13592  007E72  5604               	subfwb	(___flge@ff1+3)^0,f,c
 13593  007E74                     l4739:
 13594  007E74  FFFF               	dw	65535	; assembler added errata NOP
 13595  007E76  AE08               	btfss	(___flge@ff2+3)^0,7,c
 13596  007E78  EF40  F03F         	goto	u5761
 13597  007E7C  EF43  F03F         	goto	u5760
 13598  007E80                     u5761:
 13599  007E80  FFFF               	dw	65535	; assembler added errata NOP
 13600  007E82  EF4D  F03F         	goto	l590
 13601  007E86                     u5760:
 13602  007E86  FFFF               	dw	65535	; assembler added errata NOP
 13603  007E88  6C05               	negf	___flge@ff2^0,c
 13604  007E8A  1E06               	comf	(___flge@ff2+1)^0,f,c
 13605  007E8C  B0D8               	btfsc	status,0,c
 13606  007E8E  2A06               	incf	(___flge@ff2+1)^0,f,c
 13607  007E90  1E07               	comf	(___flge@ff2+2)^0,f,c
 13608  007E92  B0D8               	btfsc	status,0,c
 13609  007E94  2A07               	incf	(___flge@ff2+2)^0,f,c
 13610  007E96  0E80               	movlw	128
 13611  007E98  5608               	subfwb	(___flge@ff2+3)^0,f,c
 13612  007E9A                     l590:
 13613  007E9A  FFFF               	dw	65535	; assembler added errata NOP
 13614  007E9C  0E00               	movlw	0
 13615  007E9E  1A01               	xorwf	___flge@ff1^0,f,c
 13616  007EA0  0E00               	movlw	0
 13617  007EA2  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 13618  007EA4  0E00               	movlw	0
 13619  007EA6  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 13620  007EA8  0E80               	movlw	128
 13621  007EAA  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 13622  007EAC  0E00               	movlw	0
 13623  007EAE  1A05               	xorwf	___flge@ff2^0,f,c
 13624  007EB0  0E00               	movlw	0
 13625  007EB2  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 13626  007EB4  0E00               	movlw	0
 13627  007EB6  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 13628  007EB8  0E80               	movlw	128
 13629  007EBA  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 13630  007EBC  5005               	movf	___flge@ff2^0,w,c
 13631  007EBE  5C01               	subwf	___flge@ff1^0,w,c
 13632  007EC0  5006               	movf	(___flge@ff2+1)^0,w,c
 13633  007EC2  5802               	subwfb	(___flge@ff1+1)^0,w,c
 13634  007EC4  5007               	movf	(___flge@ff2+2)^0,w,c
 13635  007EC6  5803               	subwfb	(___flge@ff1+2)^0,w,c
 13636  007EC8  5008               	movf	(___flge@ff2+3)^0,w,c
 13637  007ECA  5804               	subwfb	(___flge@ff1+3)^0,w,c
 13638  007ECC  B0D8               	btfsc	status,0,c
 13639  007ECE  EF6B  F03F         	goto	u5771
 13640  007ED2  EF6E  F03F         	goto	u5770
 13641  007ED6                     u5771:
 13642  007ED6  FFFF               	dw	65535	; assembler added errata NOP
 13643  007ED8  EF72  F03F         	goto	l4745
 13644  007EDC                     u5770:
 13645  007EDC  FFFF               	dw	65535	; assembler added errata NOP
 13646  007EDE  90D8               	bcf	status,0,c
 13647  007EE0  EF74  F03F         	goto	l595
 13648  007EE4                     l4745:
 13649  007EE4  FFFF               	dw	65535	; assembler added errata NOP
 13650  007EE6  80D8               	bsf	status,0,c
 13651  007EE8                     l595:
 13652  007EE8  FFFF               	dw	65535	; assembler added errata NOP
 13653  007EEA  0012               	return		;funcret
 13654  007EEC  FFFF               	dw	65535	; errata NOP
 13655  007EEE                     __end_of___flge:
 13656                           	callstack 0
 13657                           
 13658 ;; *************** function ___fltol *****************
 13659 ;; Defined at:
 13660 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
 13661 ;; Parameters:    Size  Location     Type
 13662 ;;  f1              4  100[COMRAM] unsigned char 
 13663 ;; Auto vars:     Size  Location     Type
 13664 ;;  exp1            1  109[COMRAM] unsigned char 
 13665 ;;  sign1           1  108[COMRAM] unsigned char 
 13666 ;; Return value:  Size  Location     Type
 13667 ;;                  4  100[COMRAM] long 
 13668 ;; Registers used:
 13669 ;;		wreg, status,2, status,0
 13670 ;; Tracked objects:
 13671 ;;		On entry : 0/0
 13672 ;;		On exit  : 0/0
 13673 ;;		Unchanged: 0/0
 13674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13675 ;;      Params:         4       0       0       0       0       0       0
 13676 ;;      Locals:         2       0       0       0       0       0       0
 13677 ;;      Temps:          4       0       0       0       0       0       0
 13678 ;;      Totals:        10       0       0       0       0       0       0
 13679 ;;Total ram usage:       10 bytes
 13680 ;; Hardware stack levels used:    1
 13681 ;; Hardware stack levels required when called:    1
 13682 ;; This function calls:
 13683 ;;		Nothing
 13684 ;; This function is called by:
 13685 ;;		_init_USART
 13686 ;;		_init_timer_2
 13687 ;;		_update_pwm_duty_ccp1
 13688 ;; This function uses a non-reentrant model
 13689 ;;
 13690                           
 13691                           	psect	text55
 13692  003E6E                     __ptext55:
 13693                           	callstack 0
 13694  003E6E                     ___fltol:
 13695                           	callstack 0
 13696  003E6E  FFFF               	dw	65535	; assembler added errata NOP
 13697  003E70  3467               	rlcf	(___fltol@f1+2)^0,w,c
 13698  003E72  3468               	rlcf	(___fltol@f1+3)^0,w,c
 13699  003E74  6E6E               	movwf	___fltol@exp1^0,c
 13700  003E76  506E               	movf	___fltol@exp1^0,w,c
 13701  003E78  A4D8               	btfss	status,2,c
 13702  003E7A  EF41  F01F         	goto	u5791
 13703  003E7E  EF44  F01F         	goto	u5790
 13704  003E82                     u5791:
 13705  003E82  FFFF               	dw	65535	; assembler added errata NOP
 13706  003E84  EF50  F01F         	goto	l4763
 13707  003E88                     u5790:
 13708  003E88  FFFF               	dw	65535	; assembler added errata NOP
 13709  003E8A                     l4759:
 13710  003E8A  FFFF               	dw	65535	; assembler added errata NOP
 13711  003E8C  0E00               	movlw	0
 13712  003E8E  6E65               	movwf	?___fltol^0,c
 13713  003E90  0E00               	movlw	0
 13714  003E92  6E66               	movwf	(?___fltol+1)^0,c
 13715  003E94  0E00               	movlw	0
 13716  003E96  6E67               	movwf	(?___fltol+2)^0,c
 13717  003E98  0E00               	movlw	0
 13718  003E9A  6E68               	movwf	(?___fltol+3)^0,c
 13719  003E9C  EFCF  F01F         	goto	l622
 13720  003EA0                     l4763:
 13721  003EA0  FFFF               	dw	65535	; assembler added errata NOP
 13722  003EA2  C065  F069         	movff	___fltol@f1,??___fltol
 13723  003EA6  C066  F06A         	movff	___fltol@f1+1,??___fltol+1
 13724  003EAA  C067  F06B         	movff	___fltol@f1+2,??___fltol+2
 13725  003EAE  C068  F06C         	movff	___fltol@f1+3,??___fltol+3
 13726  003EB2  0E20               	movlw	32
 13727  003EB4  EF62  F01F         	goto	u5800
 13728  003EB8                     u5805:
 13729  003EB8  FFFF               	dw	65535	; assembler added errata NOP
 13730  003EBA  90D8               	bcf	status,0,c
 13731  003EBC  326C               	rrcf	(??___fltol+3)^0,f,c
 13732  003EBE  326B               	rrcf	(??___fltol+2)^0,f,c
 13733  003EC0  326A               	rrcf	(??___fltol+1)^0,f,c
 13734  003EC2  3269               	rrcf	??___fltol^0,f,c
 13735  003EC4                     u5800:
 13736  003EC4  FFFF               	dw	65535	; assembler added errata NOP
 13737  003EC6  2EE8               	decfsz	wreg,f,c
 13738  003EC8  EF5C  F01F         	goto	u5805
 13739  003ECC  5069               	movf	??___fltol^0,w,c
 13740  003ECE  6E6D               	movwf	___fltol@sign1^0,c
 13741  003ED0  8E67               	bsf	(___fltol@f1+2)^0,7,c
 13742  003ED2  0EFF               	movlw	255
 13743  003ED4  1665               	andwf	___fltol@f1^0,f,c
 13744  003ED6  0EFF               	movlw	255
 13745  003ED8  1666               	andwf	(___fltol@f1+1)^0,f,c
 13746  003EDA  0EFF               	movlw	255
 13747  003EDC  1667               	andwf	(___fltol@f1+2)^0,f,c
 13748  003EDE  0E00               	movlw	0
 13749  003EE0  1668               	andwf	(___fltol@f1+3)^0,f,c
 13750  003EE2  0E96               	movlw	150
 13751  003EE4  5E6E               	subwf	___fltol@exp1^0,f,c
 13752  003EE6  BE6E               	btfsc	___fltol@exp1^0,7,c
 13753  003EE8  EF7B  F01F         	goto	u5810
 13754  003EEC  EF78  F01F         	goto	u5811
 13755  003EF0                     u5811:
 13756  003EF0  FFFF               	dw	65535	; assembler added errata NOP
 13757  003EF2  EF95  F01F         	goto	l4783
 13758  003EF6                     u5810:
 13759  003EF6  FFFF               	dw	65535	; assembler added errata NOP
 13760  003EF8  506E               	movf	___fltol@exp1^0,w,c
 13761  003EFA  0A80               	xorlw	128
 13762  003EFC  0F97               	addlw	151
 13763  003EFE  B0D8               	btfsc	status,0,c
 13764  003F00  EF84  F01F         	goto	u5821
 13765  003F04  EF87  F01F         	goto	u5820
 13766  003F08                     u5821:
 13767  003F08  FFFF               	dw	65535	; assembler added errata NOP
 13768  003F0A  EF8A  F01F         	goto	l4779
 13769  003F0E                     u5820:
 13770  003F0E  FFFF               	dw	65535	; assembler added errata NOP
 13771  003F10  EF45  F01F         	goto	l4759
 13772  003F14                     l4779:
 13773  003F14  FFFF               	dw	65535	; assembler added errata NOP
 13774  003F16  90D8               	bcf	status,0,c
 13775  003F18  3268               	rrcf	(___fltol@f1+3)^0,f,c
 13776  003F1A  3267               	rrcf	(___fltol@f1+2)^0,f,c
 13777  003F1C  3266               	rrcf	(___fltol@f1+1)^0,f,c
 13778  003F1E  3265               	rrcf	___fltol@f1^0,f,c
 13779  003F20  3E6E               	incfsz	___fltol@exp1^0,f,c
 13780  003F22  EF8A  F01F         	goto	l4779
 13781  003F26  EFB3  F01F         	goto	l4793
 13782  003F2A                     l4783:
 13783  003F2A  FFFF               	dw	65535	; assembler added errata NOP
 13784  003F2C  0E1F               	movlw	31
 13785  003F2E  646E               	cpfsgt	___fltol@exp1^0,c
 13786  003F30  EF9C  F01F         	goto	u5831
 13787  003F34  EF9F  F01F         	goto	u5830
 13788  003F38                     u5831:
 13789  003F38  FFFF               	dw	65535	; assembler added errata NOP
 13790  003F3A  EFA9  F01F         	goto	l4791
 13791  003F3E                     u5830:
 13792  003F3E  FFFF               	dw	65535	; assembler added errata NOP
 13793  003F40  EF45  F01F         	goto	l4759
 13794  003F44                     l4789:
 13795  003F44  FFFF               	dw	65535	; assembler added errata NOP
 13796  003F46  90D8               	bcf	status,0,c
 13797  003F48  3665               	rlcf	___fltol@f1^0,f,c
 13798  003F4A  3666               	rlcf	(___fltol@f1+1)^0,f,c
 13799  003F4C  3667               	rlcf	(___fltol@f1+2)^0,f,c
 13800  003F4E  3668               	rlcf	(___fltol@f1+3)^0,f,c
 13801  003F50  066E               	decf	___fltol@exp1^0,f,c
 13802  003F52                     l4791:
 13803  003F52  FFFF               	dw	65535	; assembler added errata NOP
 13804  003F54  506E               	movf	___fltol@exp1^0,w,c
 13805  003F56  A4D8               	btfss	status,2,c
 13806  003F58  EFB0  F01F         	goto	u5841
 13807  003F5C  EFB3  F01F         	goto	u5840
 13808  003F60                     u5841:
 13809  003F60  FFFF               	dw	65535	; assembler added errata NOP
 13810  003F62  EFA2  F01F         	goto	l4789
 13811  003F66                     u5840:
 13812  003F66                     l4793:
 13813  003F66  FFFF               	dw	65535	; assembler added errata NOP
 13814  003F68  506D               	movf	___fltol@sign1^0,w,c
 13815  003F6A  B4D8               	btfsc	status,2,c
 13816  003F6C  EFBA  F01F         	goto	u5851
 13817  003F70  EFBD  F01F         	goto	u5850
 13818  003F74                     u5851:
 13819  003F74  FFFF               	dw	65535	; assembler added errata NOP
 13820  003F76  EFC6  F01F         	goto	l4797
 13821  003F7A                     u5850:
 13822  003F7A  FFFF               	dw	65535	; assembler added errata NOP
 13823  003F7C  1E68               	comf	(___fltol@f1+3)^0,f,c
 13824  003F7E  1E67               	comf	(___fltol@f1+2)^0,f,c
 13825  003F80  1E66               	comf	(___fltol@f1+1)^0,f,c
 13826  003F82  6C65               	negf	___fltol@f1^0,c
 13827  003F84  0E00               	movlw	0
 13828  003F86  2266               	addwfc	(___fltol@f1+1)^0,f,c
 13829  003F88  2267               	addwfc	(___fltol@f1+2)^0,f,c
 13830  003F8A  2268               	addwfc	(___fltol@f1+3)^0,f,c
 13831  003F8C                     l4797:
 13832  003F8C  FFFF               	dw	65535	; assembler added errata NOP
 13833  003F8E  C065  F065         	movff	___fltol@f1,?___fltol
 13834  003F92  C066  F066         	movff	___fltol@f1+1,?___fltol+1
 13835  003F96  C067  F067         	movff	___fltol@f1+2,?___fltol+2
 13836  003F9A  C068  F068         	movff	___fltol@f1+3,?___fltol+3
 13837  003F9E                     l622:
 13838  003F9E  FFFF               	dw	65535	; assembler added errata NOP
 13839  003FA0  0012               	return		;funcret
 13840  003FA2  FFFF               	dw	65535	; errata NOP
 13841  003FA4                     __end_of___fltol:
 13842                           	callstack 0
 13843                           
 13844 ;; *************** function _init_PORTS *****************
 13845 ;; Defined at:
 13846 ;;		line 61 in file "init_PIC.c"
 13847 ;; Parameters:    Size  Location     Type
 13848 ;;		None
 13849 ;; Auto vars:     Size  Location     Type
 13850 ;;		None
 13851 ;; Return value:  Size  Location     Type
 13852 ;;                  1    wreg      void 
 13853 ;; Registers used:
 13854 ;;		wreg, status,2
 13855 ;; Tracked objects:
 13856 ;;		On entry : 0/0
 13857 ;;		On exit  : 0/0
 13858 ;;		Unchanged: 0/0
 13859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13860 ;;      Params:         0       0       0       0       0       0       0
 13861 ;;      Locals:         0       0       0       0       0       0       0
 13862 ;;      Temps:          0       0       0       0       0       0       0
 13863 ;;      Totals:         0       0       0       0       0       0       0
 13864 ;;Total ram usage:        0 bytes
 13865 ;; Hardware stack levels used:    1
 13866 ;; Hardware stack levels required when called:    1
 13867 ;; This function calls:
 13868 ;;		Nothing
 13869 ;; This function is called by:
 13870 ;;		_main
 13871 ;; This function uses a non-reentrant model
 13872 ;;
 13873                           
 13874                           	psect	text56
 13875  006D1E                     __ptext56:
 13876                           	callstack 0
 13877  006D1E                     _init_PORTS:
 13878                           	callstack 0
 13879  006D1E  FFFF               	dw	65535	; assembler added errata NOP
 13880  006D20                     
 13881                           ;init_PIC.c: 63:     LATA = 0;
 13882  006D20  0E00               	movlw	0
 13883  006D22  6E89               	movwf	137,c	;volatile
 13884                           
 13885                           ;init_PIC.c: 64:     PORTA = 0;
 13886  006D24  0E00               	movlw	0
 13887  006D26  6E80               	movwf	128,c	;volatile
 13888                           
 13889                           ;init_PIC.c: 65:     TRISA = 0xF0;
 13890  006D28  0EF0               	movlw	240
 13891  006D2A  6E92               	movwf	146,c	;volatile
 13892                           
 13893                           ;init_PIC.c: 67:     LATB = 0;
 13894  006D2C  0E00               	movlw	0
 13895  006D2E  6E8A               	movwf	138,c	;volatile
 13896                           
 13897                           ;init_PIC.c: 68:     PORTB = 0;
 13898  006D30  0E00               	movlw	0
 13899  006D32  6E81               	movwf	129,c	;volatile
 13900                           
 13901                           ;init_PIC.c: 69:     TRISB = 0x00;
 13902  006D34  0E00               	movlw	0
 13903  006D36  6E93               	movwf	147,c	;volatile
 13904                           
 13905                           ;init_PIC.c: 72:     LATC = 0;
 13906  006D38  0E00               	movlw	0
 13907  006D3A  6E8B               	movwf	139,c	;volatile
 13908                           
 13909                           ;init_PIC.c: 73:     PORTC = 0;
 13910  006D3C  0E00               	movlw	0
 13911  006D3E  6E82               	movwf	130,c	;volatile
 13912  006D40                     
 13913                           ;init_PIC.c: 74:     TRISCbits.RC2 = 0;
 13914  006D40  9494               	bcf	148,2,c	;volatile
 13915  006D42                     
 13916                           ;init_PIC.c: 75:     TRISCbits.RC7 = 1;
 13917  006D42  8E94               	bsf	148,7,c	;volatile
 13918  006D44                     
 13919                           ;init_PIC.c: 76:     TRISCbits.RC6 = 0;
 13920  006D44  9C94               	bcf	148,6,c	;volatile
 13921  006D46  0012               	return		;funcret
 13922  006D48  FFFF               	dw	65535	; errata NOP
 13923  006D4A                     __end_of_init_PORTS:
 13924                           	callstack 0
 13925                           
 13926 ;; *************** function _get_reg_value *****************
 13927 ;; Defined at:
 13928 ;;		line 51 in file "serial_rs232.c"
 13929 ;; Parameters:    Size  Location     Type
 13930 ;;		None
 13931 ;; Auto vars:     Size  Location     Type
 13932 ;;  rx_char         1    0[COMRAM] unsigned char 
 13933 ;; Return value:  Size  Location     Type
 13934 ;;                  1    wreg      unsigned char 
 13935 ;; Registers used:
 13936 ;;		wreg, status,2
 13937 ;; Tracked objects:
 13938 ;;		On entry : 0/0
 13939 ;;		On exit  : 0/0
 13940 ;;		Unchanged: 0/0
 13941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13942 ;;      Params:         0       0       0       0       0       0       0
 13943 ;;      Locals:         1       0       0       0       0       0       0
 13944 ;;      Temps:          0       0       0       0       0       0       0
 13945 ;;      Totals:         1       0       0       0       0       0       0
 13946 ;;Total ram usage:        1 bytes
 13947 ;; Hardware stack levels used:    1
 13948 ;; Hardware stack levels required when called:    1
 13949 ;; This function calls:
 13950 ;;		Nothing
 13951 ;; This function is called by:
 13952 ;;		_main
 13953 ;; This function uses a non-reentrant model
 13954 ;;
 13955                           
 13956                           	psect	text57
 13957  006BFC                     __ptext57:
 13958                           	callstack 0
 13959  006BFC                     _get_reg_value:
 13960                           	callstack 0
 13961  006BFC  FFFF               	dw	65535	; assembler added errata NOP
 13962  006BFE                     
 13963                           ;serial_rs232.c: 52:     unsigned char rx_char = RCREG;
 13964  006BFE  CFAE F001          	movff	4014,get_reg_value@rx_char	;volatile
 13965  006C02                     
 13966                           ;serial_rs232.c: 53:     RCREG = 0;
 13967  006C02  0E00               	movlw	0
 13968  006C04  6EAE               	movwf	174,c	;volatile
 13969                           
 13970                           ;serial_rs232.c: 54:     return rx_char;
 13971  006C06  5001               	movf	get_reg_value@rx_char^0,w,c
 13972  006C08  0012               	return		;funcret
 13973  006C0A  FFFF               	dw	65535	; errata NOP
 13974  006C0C                     __end_of_get_reg_value:
 13975                           	callstack 0
 13976                           
 13977 ;; *************** function _change_direction *****************
 13978 ;; Defined at:
 13979 ;;		line 40 in file "stepper_motor.c"
 13980 ;; Parameters:    Size  Location     Type
 13981 ;;  stepper_moto    2    0[COMRAM] PTR struct .
 13982 ;;		 -> joint_stepper(14), 
 13983 ;; Auto vars:     Size  Location     Type
 13984 ;;		None
 13985 ;; Return value:  Size  Location     Type
 13986 ;;                  1    wreg      void 
 13987 ;; Registers used:
 13988 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13989 ;; Tracked objects:
 13990 ;;		On entry : 0/0
 13991 ;;		On exit  : 0/0
 13992 ;;		Unchanged: 0/0
 13993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13994 ;;      Params:         2       0       0       0       0       0       0
 13995 ;;      Locals:         0       0       0       0       0       0       0
 13996 ;;      Temps:          2       0       0       0       0       0       0
 13997 ;;      Totals:         4       0       0       0       0       0       0
 13998 ;;Total ram usage:        4 bytes
 13999 ;; Hardware stack levels used:    1
 14000 ;; Hardware stack levels required when called:    1
 14001 ;; This function calls:
 14002 ;;		Nothing
 14003 ;; This function is called by:
 14004 ;;		_main
 14005 ;; This function uses a non-reentrant model
 14006 ;;
 14007                           
 14008                           	psect	text58
 14009  006D7E                     __ptext58:
 14010                           	callstack 0
 14011  006D7E                     _change_direction:
 14012                           	callstack 0
 14013  006D7E  FFFF               	dw	65535	; assembler added errata NOP
 14014  006D80                     
 14015                           ;stepper_motor.c: 41:     stepper_motor -> direction = stepper_motor -> direction*(-1);
 14016  006D80  EE20 F004          	lfsr	2,4
 14017  006D84  5001               	movf	change_direction@stepper_motor^0,w,c
 14018  006D86  26D9               	addwf	fsr2l,f,c
 14019  006D88  5002               	movf	(change_direction@stepper_motor+1)^0,w,c
 14020  006D8A  22DA               	addwfc	fsr2h,f,c
 14021  006D8C  CFDE F003          	movff	postinc2,??_change_direction
 14022  006D90  CFDD F004          	movff	postdec2,??_change_direction+1
 14023  006D94  1E03               	comf	??_change_direction^0,f,c
 14024  006D96  1E04               	comf	(??_change_direction+1)^0,f,c
 14025  006D98  4A03               	infsnz	??_change_direction^0,f,c
 14026  006D9A  2A04               	incf	(??_change_direction+1)^0,f,c
 14027  006D9C  EE20 F004          	lfsr	2,4
 14028  006DA0  5001               	movf	change_direction@stepper_motor^0,w,c
 14029  006DA2  26D9               	addwf	fsr2l,f,c
 14030  006DA4  5002               	movf	(change_direction@stepper_motor+1)^0,w,c
 14031  006DA6  22DA               	addwfc	fsr2h,f,c
 14032  006DA8  C003  FFDE         	movff	??_change_direction,postinc2
 14033  006DAC  C004  FFDD         	movff	??_change_direction+1,postdec2
 14034  006DB0  0012               	return		;funcret
 14035  006DB2  FFFF               	dw	65535	; errata NOP
 14036  006DB4                     __end_of_change_direction:
 14037                           	callstack 0
 14038                           
 14039 ;; *************** function _rx_char_usart *****************
 14040 ;; Defined at:
 14041 ;;		line 167 in file "main.c"
 14042 ;; Parameters:    Size  Location     Type
 14043 ;;		None
 14044 ;; Auto vars:     Size  Location     Type
 14045 ;;		None
 14046 ;; Return value:  Size  Location     Type
 14047 ;;                  1    wreg      void 
 14048 ;; Registers used:
 14049 ;;		wreg, status,2
 14050 ;; Tracked objects:
 14051 ;;		On entry : 0/0
 14052 ;;		On exit  : 0/0
 14053 ;;		Unchanged: 0/0
 14054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14055 ;;      Params:         0       0       0       0       0       0       0
 14056 ;;      Locals:         0       0       0       0       0       0       0
 14057 ;;      Temps:          0       0       0       0       0       0       0
 14058 ;;      Totals:         0       0       0       0       0       0       0
 14059 ;;Total ram usage:        0 bytes
 14060 ;; Hardware stack levels used:    1
 14061 ;; This function calls:
 14062 ;;		Nothing
 14063 ;; This function is called by:
 14064 ;;		Interrupt level 2
 14065 ;; This function uses a non-reentrant model
 14066 ;;
 14067                           
 14068                           	psect	intcode
 14069  000008                     __pintcode:
 14070                           	callstack 0
 14071  000008                     _rx_char_usart:
 14072                           	callstack 0
 14073  000008  FFFF               	dw	65535	; assembler added errata NOP
 14074                           
 14075                           ;incstack = 0
 14076  00000A  827F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14077  00000C                     
 14078                           ;main.c: 168:     if(PIE1bits.RCIE && PIR1bits.RCIF){
 14079  00000C  AA9D               	btfss	157,5,c	;volatile
 14080  00000E  EF0B  F000         	goto	i2u647_41
 14081  000012  EF0E  F000         	goto	i2u647_40
 14082  000016                     i2u647_41:
 14083  000016  FFFF               	dw	65535	; assembler added errata NOP
 14084  000018  EF1E  F000         	goto	i2l5291
 14085  00001C                     i2u647_40:
 14086  00001C  FFFF               	dw	65535	; assembler added errata NOP
 14087  00001E  AA9E               	btfss	158,5,c	;volatile
 14088  000020  EF14  F000         	goto	i2u648_41
 14089  000024  EF17  F000         	goto	i2u648_40
 14090  000028                     i2u648_41:
 14091  000028  FFFF               	dw	65535	; assembler added errata NOP
 14092  00002A  EF1E  F000         	goto	i2l5291
 14093  00002E                     i2u648_40:
 14094  00002E  FFFF               	dw	65535	; assembler added errata NOP
 14095  000030                     
 14096                           ;main.c: 169:         PIR1bits.RCIF = 0;
 14097  000030  9A9E               	bcf	158,5,c	;volatile
 14098  000032                     
 14099                           ;main.c: 170:         state_changed = 1;
 14100  000032  0E01               	movlw	1
 14101  000034  0101               	movlb	1	; () banked
 14102  000036  6FAA               	movwf	_state_changed& (0+255),b
 14103                           
 14104                           ;main.c: 171:         read_new_char = 1;
 14105  000038  0E01               	movlw	1
 14106  00003A  6FA8               	movwf	_read_new_char& (0+255),b
 14107  00003C                     i2l5291:
 14108  00003C  FFFF               	dw	65535	; assembler added errata NOP
 14109                           
 14110                           ;main.c: 173:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF){
 14111  00003E  AAF2               	btfss	242,5,c	;volatile
 14112  000040  EF24  F000         	goto	i2u649_41
 14113  000044  EF27  F000         	goto	i2u649_40
 14114  000048                     i2u649_41:
 14115  000048  FFFF               	dw	65535	; assembler added errata NOP
 14116  00004A  EF37  F000         	goto	i2l165
 14117  00004E                     i2u649_40:
 14118  00004E  FFFF               	dw	65535	; assembler added errata NOP
 14119  000050  A4F2               	btfss	242,2,c	;volatile
 14120  000052  EF2D  F000         	goto	i2u650_41
 14121  000056  EF30  F000         	goto	i2u650_40
 14122  00005A                     i2u650_41:
 14123  00005A  FFFF               	dw	65535	; assembler added errata NOP
 14124  00005C  EF37  F000         	goto	i2l165
 14125  000060                     i2u650_40:
 14126  000060  FFFF               	dw	65535	; assembler added errata NOP
 14127  000062                     
 14128                           ;main.c: 174:         T0CON = 0;
 14129  000062  0E00               	movlw	0
 14130  000064  6ED5               	movwf	213,c	;volatile
 14131  000066                     
 14132                           ;main.c: 175:         INTCONbits.TMR0IF = 0;
 14133  000066  94F2               	bcf	242,2,c	;volatile
 14134                           
 14135                           ;main.c: 176:         timer_done = 1;
 14136  000068  0E01               	movlw	1
 14137  00006A  0101               	movlb	1	; () banked
 14138  00006C  6FA7               	movwf	_timer_done& (0+255),b
 14139  00006E                     i2l165:
 14140  00006E  FFFF               	dw	65535	; assembler added errata NOP
 14141  000070  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14142  000072  0011               	retfie		f
 14143  000074  FFFF               	dw	65535	; errata NOP
 14144  000076                     __end_of_rx_char_usart:
 14145                           	callstack 0
 14146                           
 14147                           	psect	rparam
 14148  0000                     
 14149                           	psect	temp
 14150  00007F                     btemp:
 14151                           	callstack 0
 14152  00007F                     	ds	1
 14153  0000                     int$flags	set	btemp
 14154  0000                     wtemp8	set	btemp+1
 14155  0000                     ttemp5	set	btemp+1
 14156  0000                     ttemp6	set	btemp+4
 14157  0000                     ttemp7	set	btemp+8
 14158                           
 14159                           	psect	idloc
 14160                           
 14161                           ;Config register IDLOC0 @ 0x200000
 14162                           ;	unspecified, using default values
 14163  200000                     	org	2097152
 14164  200000  FF                 	db	255
 14165                           
 14166                           ;Config register IDLOC1 @ 0x200001
 14167                           ;	unspecified, using default values
 14168  200001                     	org	2097153
 14169  200001  FF                 	db	255
 14170                           
 14171                           ;Config register IDLOC2 @ 0x200002
 14172                           ;	unspecified, using default values
 14173  200002                     	org	2097154
 14174  200002  FF                 	db	255
 14175                           
 14176                           ;Config register IDLOC3 @ 0x200003
 14177                           ;	unspecified, using default values
 14178  200003                     	org	2097155
 14179  200003  FF                 	db	255
 14180                           
 14181                           ;Config register IDLOC4 @ 0x200004
 14182                           ;	unspecified, using default values
 14183  200004                     	org	2097156
 14184  200004  FF                 	db	255
 14185                           
 14186                           ;Config register IDLOC5 @ 0x200005
 14187                           ;	unspecified, using default values
 14188  200005                     	org	2097157
 14189  200005  FF                 	db	255
 14190                           
 14191                           ;Config register IDLOC6 @ 0x200006
 14192                           ;	unspecified, using default values
 14193  200006                     	org	2097158
 14194  200006  FF                 	db	255
 14195                           
 14196                           ;Config register IDLOC7 @ 0x200007
 14197                           ;	unspecified, using default values
 14198  200007                     	org	2097159
 14199  200007  FF                 	db	255
 14200                           
 14201                           	psect	config
 14202                           
 14203                           ; Padding undefined space
 14204  300000                     	org	3145728
 14205  300000  FF                 	db	255
 14206                           
 14207                           ;Config register CONFIG1H @ 0x300001
 14208                           ;	Oscillator Selection bits
 14209                           ;	OSC = RCIO, RC oscillator w/ OSC2 configured as RA6
 14210                           ;	Oscillator System Clock Switch Enable bit
 14211                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
 14212  300001                     	org	3145729
 14213  300001  27                 	db	39
 14214                           
 14215                           ;Config register CONFIG2L @ 0x300002
 14216                           ;	Power-up Timer Enable bit
 14217                           ;	PWRT = OFF, PWRT disabled
 14218                           ;	Brown-out Reset Enable bit
 14219                           ;	BOR = ON, Brown-out Reset enabled
 14220                           ;	Brown-out Reset Voltage bits
 14221                           ;	BORV = 20, VBOR set to 2.0V
 14222  300002                     	org	3145730
 14223  300002  0F                 	db	15
 14224                           
 14225                           ;Config register CONFIG2H @ 0x300003
 14226                           ;	Watchdog Timer Enable bit
 14227                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 14228                           ;	Watchdog Timer Postscale Select bits
 14229                           ;	WDTPS = 128, 1:128
 14230  300003                     	org	3145731
 14231  300003  0E                 	db	14
 14232                           
 14233                           ; Padding undefined space
 14234  300004                     	org	3145732
 14235  300004  FF                 	db	255
 14236                           
 14237                           ;Config register CONFIG3H @ 0x300005
 14238                           ;	CCP2 Mux bit
 14239                           ;	CCP2MUX = ON, CCP2 input/output is multiplexed with RC1
 14240  300005                     	org	3145733
 14241  300005  01                 	db	1
 14242                           
 14243                           ;Config register CONFIG4L @ 0x300006
 14244                           ;	Stack Full/Underflow Reset Enable bit
 14245                           ;	STVR = ON, Stack Full/Underflow will cause RESET
 14246                           ;	Low Voltage ICSP Enable bit
 14247                           ;	LVP = ON, Low Voltage ICSP enabled
 14248                           ;	Background Debugger Enable bit
 14249                           ;	DEBUG = 0x1, unprogrammed default
 14250  300006                     	org	3145734
 14251  300006  85                 	db	133
 14252                           
 14253                           ; Padding undefined space
 14254  300007                     	org	3145735
 14255  300007  FF                 	db	255
 14256                           
 14257                           ;Config register CONFIG5L @ 0x300008
 14258                           ;	Code Protection bit
 14259                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
 14260                           ;	Code Protection bit
 14261                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
 14262                           ;	Code Protection bit
 14263                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
 14264                           ;	Code Protection bit
 14265                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
 14266  300008                     	org	3145736
 14267  300008  0F                 	db	15
 14268                           
 14269                           ;Config register CONFIG5H @ 0x300009
 14270                           ;	Boot Block Code Protection bit
 14271                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
 14272                           ;	Data EEPROM Code Protection bit
 14273                           ;	CPD = OFF, Data EEPROM not code protected
 14274  300009                     	org	3145737
 14275  300009  C0                 	db	192
 14276                           
 14277                           ;Config register CONFIG6L @ 0x30000A
 14278                           ;	Write Protection bit
 14279                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
 14280                           ;	Write Protection bit
 14281                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
 14282                           ;	Write Protection bit
 14283                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
 14284                           ;	Write Protection bit
 14285                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
 14286  30000A                     	org	3145738
 14287  30000A  0F                 	db	15
 14288                           
 14289                           ;Config register CONFIG6H @ 0x30000B
 14290                           ;	Configuration Register Write Protection bit
 14291                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
 14292                           ;	Boot Block Write Protection bit
 14293                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
 14294                           ;	Data EEPROM Write Protection bit
 14295                           ;	WRTD = OFF, Data EEPROM not write protected
 14296  30000B                     	org	3145739
 14297  30000B  E0                 	db	224
 14298                           
 14299                           ;Config register CONFIG7L @ 0x30000C
 14300                           ;	Table Read Protection bit
 14301                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
 14302                           ;	Table Read Protection bit
 14303                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
 14304                           ;	Table Read Protection bit
 14305                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
 14306                           ;	Table Read Protection bit
 14307                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
 14308  30000C                     	org	3145740
 14309  30000C  0F                 	db	15
 14310                           
 14311                           ;Config register CONFIG7H @ 0x30000D
 14312                           ;	Boot Block Table Read Protection bit
 14313                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
 14314  30000D                     	org	3145741
 14315  30000D  40                 	db	64
 14316                           tosu	equ	0xFFF
 14317                           tosh	equ	0xFFE
 14318                           tosl	equ	0xFFD
 14319                           stkptr	equ	0xFFC
 14320                           pclatu	equ	0xFFB
 14321                           pclath	equ	0xFFA
 14322                           pcl	equ	0xFF9
 14323                           tblptru	equ	0xFF8
 14324                           tblptrh	equ	0xFF7
 14325                           tblptrl	equ	0xFF6
 14326                           tablat	equ	0xFF5
 14327                           prodh	equ	0xFF4
 14328                           prodl	equ	0xFF3
 14329                           indf0	equ	0xFEF
 14330                           postinc0	equ	0xFEE
 14331                           postdec0	equ	0xFED
 14332                           preinc0	equ	0xFEC
 14333                           plusw0	equ	0xFEB
 14334                           fsr0h	equ	0xFEA
 14335                           fsr0l	equ	0xFE9
 14336                           wreg	equ	0xFE8
 14337                           indf1	equ	0xFE7
 14338                           postinc1	equ	0xFE6
 14339                           postdec1	equ	0xFE5
 14340                           preinc1	equ	0xFE4
 14341                           plusw1	equ	0xFE3
 14342                           fsr1h	equ	0xFE2
 14343                           fsr1l	equ	0xFE1
 14344                           bsr	equ	0xFE0
 14345                           indf2	equ	0xFDF
 14346                           postinc2	equ	0xFDE
 14347                           postdec2	equ	0xFDD
 14348                           preinc2	equ	0xFDC
 14349                           plusw2	equ	0xFDB
 14350                           fsr2h	equ	0xFDA
 14351                           fsr2l	equ	0xFD9
 14352                           status	equ	0xFD8

Data Sizes:
    Strings     251
    Constant    20
    Data        47
    BSS         92
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    124     126
    BANK0           128     22      91
    BANK1           256    161     229
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    main$2005	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), 
		 -> STR_2(CODE[64]), STR_1(CODE[49]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_105(CODE[3]), STR_101(CODE[3]), STR_96(CODE[3]), STR_92(CODE[3]), 
		 -> STR_87(CODE[4]), STR_83(CODE[4]), STR_78(CODE[3]), STR_73(CODE[3]), 
		 -> STR_68(CODE[4]), STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[4]), 
		 -> STR_48(CODE[3]), STR_43(CODE[3]), STR_38(CODE[4]), STR_33(CODE[3]), 
		 -> STR_29(CODE[3]), STR_24(CODE[3]), STR_20(CODE[3]), STR_15(CODE[4]), 
		 -> STR_11(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_105(CODE[3]), STR_101(CODE[3]), STR_96(CODE[3]), STR_92(CODE[3]), 
		 -> STR_87(CODE[4]), STR_83(CODE[4]), STR_78(CODE[3]), STR_73(CODE[3]), 
		 -> STR_68(CODE[4]), STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[4]), 
		 -> STR_48(CODE[3]), STR_43(CODE[3]), STR_38(CODE[4]), STR_33(CODE[3]), 
		 -> STR_29(CODE[3]), STR_24(CODE[3]), STR_20(CODE[3]), STR_15(CODE[4]), 
		 -> STR_11(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), ?_snprintf(BANK0[2]), STR_6(CODE[7]), 
		 -> STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), 
		 -> STR_1(CODE[49]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), ?_snprintf(BANK0[2]), STR_6(CODE[7]), 
		 -> STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), 
		 -> STR_1(CODE[49]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[39]), 
		 -> STR_3(CODE[9]), STR_2(CODE[64]), STR_1(CODE[49]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[39]), 
		 -> STR_3(CODE[9]), STR_2(CODE[64]), STR_1(CODE[49]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[39]), 
		 -> STR_3(CODE[9]), STR_2(CODE[64]), STR_1(CODE[49]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_snprintf(BANK0[2]), STR_6(CODE[7]), STR_5(CODE[9]), 
		 -> STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), STR_1(CODE[49]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    S1392_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    change_direction@stepper_motor	PTR struct . size(2) Largest target is 14
		 -> joint_stepper(BANK1[14]), 

    reach_goal@stepper_motor	PTR struct . size(2) Largest target is 14
		 -> end_effector_stepper(BANK1[14]), joint_stepper(BANK1[14]), 

    update_current_coil@stepper_motor	PTR struct . size(2) Largest target is 14
		 -> end_effector_stepper(BANK1[14]), joint_stepper(BANK1[14]), 

    turn_on_current_coil@stepper_motor	PTR struct . size(2) Largest target is 14
		 -> end_effector_stepper(BANK1[14]), joint_stepper(BANK1[14]), 

    init_stepper@hex_coil_register_values	PTR int  size(2) Largest target is 8
		 -> hex_end_effector_values(BANK1[8]), hex_joint_values(BANK1[8]), 

    init_stepper@stepper_motor	PTR struct . size(2) Largest target is 14
		 -> end_effector_stepper(BANK1[14]), joint_stepper(BANK1[14]), 

    state_translator_micro_to_fpga@state	PTR int  size(2) Largest target is 2
		 -> state(BANK1[2]), 

    state_translator_fpga_to_micro@state	PTR int  size(2) Largest target is 2
		 -> state(BANK1[2]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), STR_7(CODE[22]), 

    main@greet_str	PTR const unsigned char [80] size(2) Largest target is 64
		 -> ?_snprintf(BANK0[2]), STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[39]), 
		 -> STR_3(CODE[9]), STR_2(CODE[64]), STR_1(CODE[49]), 

    state_msgs	PTR const unsigned char [6] size(2) Largest target is 64
		 -> STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), 
		 -> STR_2(CODE[64]), STR_1(CODE[49]), 


Critical Paths under _main in COMRAM

    _state_translator_fpga_to_micro->_lcd_dat
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _reach_goal->_turn_on_current_coil
    _reach_goal->_update_current_coil
    _lcd_str->_lcd_dat
    _lcd_dat->_lcd_wr
    _lcd_init->_lcd_cmd
    _lcd_cmd->_lcd_wr
    _init_timer_2->___fltol
    _init_ccp1->_update_pwm_duty_ccp1
    _update_pwm_duty_ccp1->___fltol
    ___fldiv->___flmul
    _init_USART->___fltol
    _roundf->___flsub
    ___flsub->___fladd
    ___fladd->___fldiv
    ___fltol->_roundf

Critical Paths under _rx_char_usart in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_snprintf
    _snprintf->_vsnprintf

Critical Paths under _rx_char_usart in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rx_char_usart in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rx_char_usart in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rx_char_usart in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _rx_char_usart in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _rx_char_usart in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               162   162      0   74722
                                            123 COMRAM     1     1      0
                                              0 BANK1    161   161      0
                             ___wmul
                   _change_direction
                      _get_reg_value
                         _init_PORTS
                         _init_USART
                          _init_ccp1
                    _init_interrupts
                       _init_stepper
                       _init_timer_0
                       _init_timer_2
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                         _reach_goal
                     _serial_tx_char
                           _snprintf
     _state_translator_fpga_to_micro
     _state_translator_micro_to_fpga
 ---------------------------------------------------------------------------------
 (1) _state_translator_micro_to_fpga                       5     3      2     464
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _state_translator_fpga_to_micro                       3     1      2     384
                                              2 COMRAM     3     1      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            12     4      8   46465
                                             10 BANK0     12     4      8
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (2) _vsnprintf                                           22    14      8   46091
                                            111 COMRAM    12     4      8
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   45328
                                            103 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   44867
                                             66 COMRAM    37    31      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    7075
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    6115
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    5013
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    5560
                                             27 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6714
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    4829
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4609
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    2016
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1023
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _serial_tx_char                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _reach_goal                                           7     3      4     960
                                              6 COMRAM     7     3      4
               _turn_on_current_coil
                _update_current_coil
 ---------------------------------------------------------------------------------
 (2) _update_current_coil                                  6     4      2     274
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _turn_on_current_coil                                 6     4      2     120
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              5     3      2     286
                                              2 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              1     1      0      44
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0      44
                                              2 COMRAM     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0      44
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_timer_2                                         4     4      0    7709
                                            110 COMRAM     4     4      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _init_timer_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_stepper                                        16     6     10    1406
                                              0 COMRAM    16     6     10
 ---------------------------------------------------------------------------------
 (1) _init_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ccp1                                            0     0      0    4374
               _update_pwm_duty_ccp1
 ---------------------------------------------------------------------------------
 (2) _update_pwm_duty_ccp1                                 9     5      4    4374
                                            110 COMRAM     9     5      4
                            ___fldiv
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1551
                                             25 COMRAM    25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_USART                                           0     0      0   11258
                            ___fltol
                             _roundf
 ---------------------------------------------------------------------------------
 (2) _roundf                                              26    22      4   10801
                                             74 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3801
                                             66 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    3478
                                             50 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2200
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                            100 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_PORTS                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_reg_value                                        1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _change_direction                                     4     2      2     120
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _rx_char_usart                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul
   _change_direction
   _get_reg_value
   _init_PORTS
   _init_USART
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
         ___flmul (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
       ___flmul (ARG)
       _roundf (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
           ___flmul (ARG)
         ___flge
         ___flmul
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
             ___flmul (ARG)
     _roundf
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
         ___flmul (ARG)
       ___flge
       ___flmul
       ___flneg
       ___flsub
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
           ___flmul (ARG)
   _init_ccp1
     _update_pwm_duty_ccp1
       ___fldiv
         ___flmul (ARG)
       ___flmul
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
           ___flmul (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
         ___flmul (ARG)
         _roundf (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
             ___flmul (ARG)
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
               ___flmul (ARG)
   _init_interrupts
   _init_stepper
   _init_timer_0
   _init_timer_2
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
       ___flmul (ARG)
     ___fldiv
       ___flmul (ARG)
     ___flmul
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
         ___flmul (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
       ___flmul (ARG)
       _roundf (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
           ___flmul (ARG)
         ___flge
         ___flmul
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
             ___flmul (ARG)
   _lcd_cmd
     _lcd_wr
   _lcd_init
     _lcd_cmd
       _lcd_wr
   _lcd_str
     _lcd_dat
       _lcd_wr
   _reach_goal
     _turn_on_current_coil
     _update_current_coil
   _serial_tx_char
   _snprintf
     _vsnprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _state_translator_fpga_to_micro
     _lcd_dat
       _lcd_wr
   _state_translator_micro_to_fpga

 _rx_char_usart (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     A1      E5       7       89.5%
BITBANK0            80      0       0       4        0.0%
BANK0               80     16      5B       5       71.1%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7C      7E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1BE      15        0.0%
DATA                 0      0     1BE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Jun 08 18:41:00 2023

                                           ?_get_reg_value 0001  
                                             ___fldiv@aexp 0032  
                                             ___fldiv@bexp 0031  
                                             ___fldiv@sign 002A  
                                                       l21 6E2C  
                                                       l24 6C44  
                                                       l27 6C58  
                                                       l36 6C08  
                                      ___wmul@multiplicand 0003  
                                                      l210 6CF0  
                                                      l204 6BF8  
                                                      l124 1AEC  
                                                      l213 7366  
                                                      l133 1C5A  
                                                      l125 1B86  
                                                      l207 6CC6  
                                                      l128 1BCE  
                                                      l305 749E  
                                                      l322 6DB0  
                                                      l314 7704  
                                                      l234 7AAE  
                                                      l242 7BAC  
                                                      l219 73EE  
                                                      l308 6DEC  
                                                      l325 6D1A  
                                                      l149 1ED2  
                                                      l318 72E6  
                                                      l238 7BAC  
                                                      l192 6D46  
                                                      l248 7BB0  
                                                      l291 6C7A  
                                                      l195 6BEC  
                                                      l452 3D30  
                                                      l285 6C9C  
                                                      l622 3F9E  
                                                      l439 3BA0  
                                                      l288 762C  
                                                      l298 7560  
                                                      l590 7E9A  
                                                      l920 26BC  
                                                      l912 2590  
                                                      l921 26A4  
                                                      l770 7DC2  
                                                      l595 7EE8  
                                                      l907 27BE  
                                                      l763 7DA0  
                                                      l780 79B4  
                                                      l853 16A0  
                                                      l909 25D6  
                                                      l773 7992  
                                                      l870 17E4  
                                                      l862 19FA  
                                                      l854 168A  
                                                      l918 262C  
                                                      l943 238C  
                                                      l599 6E6E  
                                                      l855 1640  
                                                      l880 18D0  
                                                      l946 21E6  
                                                      l939 1FDA  
                                                      l956 2344  
                                                      l948 2276  
                                                      l949 225E  
                                                      l879 18E8  
                                                      l895 6FC4  
                                        ??_init_interrupts 0001  
                                                      _PR2 000FCB  
                                                      _abs 6FC8  
                                                      _pad 77EC  
                                                      wreg 000FE8  
                                           ?_rx_char_usart 0001  
                                             ___flmul@aexp 0012  
                                             ___flmul@bexp 0013  
                                             ___flmul@sign 000D  
                                             ___flmul@temp 0018  
                                             ___flmul@prod 0014  
                                             ___fltol@exp1 006E  
                                                     l1004 2BA4  
                                                     l1110 2ED6  
                                                     l1031 3E42  
                                                     l1026 3E68  
                                                     l1018 6D7A  
                                                     l1115 3474  
                                                     ?_abs 0013  
                                                     l1124 35DE  
                                                     l1117 347E  
                                                     l1133 36E2  
                                                     l1126 364E  
                                                     l1311 39E0  
                                                     l1135 36EC  
                                                     l1231 1452  
                                                     l1072 783E  
                                                     l1144 37C2  
                                                     l1208 018E  
                                                     l1145 3814  
                                                     l1314 39EA  
                                                     l1090 2C62  
                                                     l1154 324A  
                                                     l1075 788A  
                                                     l1171 2F28  
                                                     l1084 7126  
                                                     l1092 2C6C  
                                                     l1164 342C  
                                                     l1156 3254  
                                                     PORTD 000F83  
                                                     l1325 6EB0  
                                                     l1333 70C0  
                                                     l1077 78CA  
                                                     l1149 381E  
                                                     PORTE 000F84  
                                                     l1319 6F7A  
                                                     l1280 7004  
                                                     l1192 3198  
                                                     l4001 1606  
                                                     l1169 2F1E  
                                                     l1354 77E6  
                                                     l1362 7060  
                                                     l1194 3202  
                                                     l1178 2FCC  
                                                     l4011 1666  
                                                     l4003 1628  
                                                     l1371 3FFC  
                                                     l1283 700E  
                                                     l1339 6EF2  
                                                     l1275 7268  
                                                     l1276 7270  
                                                     l4101 1984  
                                                     l4021 16C8  
                                                     l4013 167A  
                                                     l4005 1638  
                                                     l1365 6BE0  
                                                     l1390 71FE  
                                                     l4111 19CC  
                                                     l4103 19AA  
                                                     l4031 1712  
                                                     l4015 167C  
                                                     l4007 1654  
                                                     l1375 7CB6  
                                                     l4113 19D4  
                                                     l4105 19AE  
                                                     l4041 1746  
                                                     l4033 171E  
                                                     l4025 16DC  
                                                     l4017 1688  
                                                     l4009 1660  
                                                     l3401 6EF6  
                                                     l1385 71F4  
                                                     l4201 0426  
                                                     l4121 007C  
                                                     l4115 19E6  
                                                     l4107 19C2  
                                                     l4051 17C2  
                                                     l4035 1724  
                                                     l4027 16EE  
                                                     l4019 16B4  
                                                     l4043 174C  
                                                     l5011 7476  
                                                     l5003 73FC  
                                                     l3411 39F2  
                                                     l4211 04E8  
                                                     l4203 0458  
                                                     l4131 00D6  
                                                     l4123 00A6  
                                                     l1396 6F34  
                                                     l4117 19E8  
                                                     l4109 19C8  
                                                     l4061 1828  
                                                     l4045 1778  
                                                     l4053 17D2  
                                                     l4037 1738  
                                                     l4029 1700  
                                                     l5013 748A  
                                                     l5005 7442  
                                                     l5021 7312  
                                                     l3405 6CF6  
                                                     l3421 3A40  
                                                     l3413 39F6  
                                                     l3501 7D1E  
                                                     l4301 0B5E  
                                                     l4221 05E0  
                                                     l4213 0532  
                                                     l4133 00DA  
                                                     l4125 00B4  
                                                     l4071 1864  
                                                     l4063 1834  
                                                     l4055 1800  
                                                     l4047 17AC  
                                                     l4039 173A  
                                                     l5007 7446  
                                                     l5111 6C92  
                                                     l5103 6C80  
                                                     l5031 734E  
                                                     l5023 7318  
                                                     l5015 72EE  
                                                     l3407 6D12  
                                                     l3431 3A9C  
                                                     l3423 3A60  
                                                     l3415 3A08  
                                                     l3511 7D9A  
                                                     l3503 7D32  
                                                     l4311 0C02  
                                                     l4303 0B94  
                                                     l4231 0684  
                                                     l4207 0474  
                                                     l4151 010E  
                                                     l4143 00FE  
                                                     l4135 00EE  
                                                     l4127 00C6  
                                                     l4081 189A  
                                                     l4073 186A  
                                                     l4065 1846  
                                                     l4057 1814  
                                                     l4049 17AE  
                                                     l5009 7466  
                                                     l5113 6C94  
                                                     l5105 6C8C  
                                                     l5033 7354  
                                                     l5025 7330  
                                                     l5017 72FE  
                                                     l5041 7374  
                                                     l5121 7276  
                                                     l3441 3B2C  
                                                     l3433 3AB2  
                                                     l3425 3A64  
                                                     l3417 3A28  
                                                     l3505 7D64  
                                                     l3521 7924  
                                                     l3513 78D0  
                                                     l4401 126C  
                                                     l4321 0C98  
                                                     l4313 0C3A  
                                                     l4241 0746  
                                                     l4217 056C  
                                                     l4209 04B0  
                                                     l4161 01A2  
                                                     l4129 00CA  
                                                     l5201 1B60  
                                                     l4091 190A  
                                                     l4083 18AC  
                                                     l4075 1880  
                                                     l4067 1848  
                                                     l5115 6C96  
                                                     l5107 6C8E  
                                                     l5035 735A  
                                                     l5027 7342  
                                                     l5019 7310  
                                                     l5043 73A8  
                                                     l5123 72A4  
                                                     l5131 72C4  
                                                     l3371 7722  
                                                     l3531 7800  
                                                     l3451 3B7E  
                                                     l3443 3B2E  
                                                     l3435 3AC6  
                                                     l3427 3A72  
                                                     l3419 3A2C  
                                                     l3611 2C34  
                                                     l3603 2BAC  
                                                     l3507 7D84  
                                                     l3523 7958  
                                                     l3515 78F2  
                                                     l4411 12F6  
                                                     l4403 127A  
                                                     l4331 0D80  
                                                     l4323 0CE2  
                                                     l4251 081A  
                                                     l4227 0630  
                                                     l4219 05A8  
                                                     l4171 0248  
                                                     l4163 01CE  
                                                     l4155 011C  
                                                     l4147 0106  
                                                     l4139 00F6  
                                                     l5051 79D8  
                                                     l5211 1BB4  
                                                     l5203 1B66  
                                                     l4093 191C  
                                                     l4085 18C6  
                                                     l4069 185C  
                                                     l4077 1882  
                                                     l5117 6C98  
                                                     l5109 6C90  
                                                     l5037 7360  
                                                     l5029 7348  
                                                     l5045 73AA  
                                                     l5133 72DE  
                                                     l5125 72B8  
                                                     l3373 7736  
                                                     l3541 7862  
                                                     l3533 7814  
                                                     l3445 3B42  
                                                     l3437 3ADA  
                                                     l3429 3A94  
                                                     l3461 3BDC  
                                                     l3621 2C9C  
                                                     l3613 2C36  
                                                     l3605 2BCC  
                                                     l3701 35F2  
                                                     l3509 7D86  
                                                     l3525 7978  
                                                     l3517 78FA  
                                                     l4413 132E  
                                                     l4309 0BC6  
                                                     l4237 06D2  
                                                     l4229 065C  
                                                     l4181 02E8  
                                                     l4173 0258  
                                                     l4165 0204  
                                                     l4157 0176  
                                                     l5061 7A44  
                                                     l5053 79EC  
                                                     l5221 1C0C  
                                                     l5213 1BC4  
                                                     l5205 1B80  
                                                     l4095 195A  
                                                     l4079 1894  
                                                     l4511 24FE  
                                                     l4503 24D4  
                                                     l5119 6C9A  
                                                     l5039 736C  
                                                     l3375 7742  
                                                     l3383 7016  
                                                     l3391 3FA6  
                                                     l3543 7866  
                                                     l3535 7828  
                                                     l3439 3B0C  
                                                     l3447 3B48  
                                                     l3471 3C40  
                                                     l3463 3BE0  
                                                     l3455 3BA6  
                                                     l3551 6FCA  
                                                     l3631 2D40  
                                                     l3623 2CA4  
                                                     l3615 2C56  
                                                     l3607 2BFE  
                                                     l3703 3608  
                                                     l3527 798C  
                                                     l3519 7910  
                                                     l4415 1358  
                                                     l4423 13A8  
                                                     l4351 0EE8  
                                                     l4343 0E5C  
                                                     l4335 0DA0  
                                                     l4327 0D1E  
                                                     l4319 0C6C  
                                                     l4271 095A  
                                                     l4263 08E0  
                                                     l4255 0854  
                                                     l4247 0798  
                                                     l4239 070E  
                                                     l4191 0386  
                                                     l4183 02F2  
                                                     l4167 0218  
                                                     l4159 01A0  
                                                     l5071 6D4C  
                                                     l5063 7A5C  
                                                     l5055 7A04  
                                                     l5047 79BC  
                                                     l5223 1C26  
                                                     l5231 1C78  
                                                     l5215 1BD4  
                                                     l5207 1B8A  
                                                     l5151 1A00  
                                                     l5137 6D80  
                                                     l4601 1F3A  
                                                     l4089 18FE  
                                                     l4097 195C  
                                                     l4521 2552  
                                                     l4513 251A  
                                                     l4505 24EA  
                                                     l3377 7766  
                                                     l3369 770C  
                                                     l3385 7022  
                                                     l3393 3FB2  
                                                     l3545 789C  
                                                     l3537 7834  
                                                     l3529 77EE  
                                                     l3449 3B5E  
                                                     l3481 3CD2  
                                                     l3473 3C56  
                                                     l3465 3BF4  
                                                     l3457 3BAA  
                                                     l3553 6FE8  
                                                     l3641 2DF2  
                                                     l3633 2D46  
                                                     l3625 2CAE  
                                                     l3617 2C76  
                                                     l3609 2C1E  
                                                     l3705 360E  
                                                     l3721 368C  
                                                     l3713 3654  
                                                     l3801 2F4C  
                                                     l4441 1440  
                                                     l4425 13D4  
                                                     l4433 1404  
                                                     l4417 1368  
                                                     l4409 12BA  
                                                     l4361 0F9E  
                                                     l4353 0F14  
                                                     l4345 0E98  
                                                     l4337 0DDC  
                                                     l4329 0D4A  
                                                     l4281 0A22  
                                                     l4273 0996  
                                                     l4265 090C  
                                                     l4257 0890  
                                                     l4249 07D4  
                                                     l4193 0396  
                                                     l4185 0300  
                                                     l4177 02A8  
                                                     l4169 0226  
                                                     l5073 6D56  
                                                     l5065 7A70  
                                                     l5057 7A18  
                                                     l5049 79C2  
                                                     l5081 7ADC  
                                                     l5241 1CEE  
                                                     l5233 1C92  
                                                     l5225 1C3A  
                                                     l5217 1BEC  
                                                     l5209 1BA0  
                                                     l5161 1A16  
                                                     l5153 1A06  
                                                     l4611 1F72  
                                                     l4603 1F4A  
                                                     l4099 1972  
                                                     l4531 25C0  
                                                     l4523 2568  
                                                     l4515 252A  
                                                     l4507 24EA  
                                                     l4451 6BF4  
                                                     l3379 779E  
                                                     l3387 7036  
                                                     l3395 3FB8  
                                                     l3547 78B0  
                                                     l3539 784C  
                                                     l3475 3C6A  
                                                     l3483 3CD8  
                                                     l3467 3C14  
                                                     l3459 3BBC  
                                                     l3651 2E66  
                                                     l3643 2E10  
                                                     l3635 2D4C  
                                                     l3627 2CB6  
                                                     l3619 2C8C  
                                                     l3707 361E  
                                                     l3731 3714  
                                                     l3723 36A2  
                                                     l3715 3666  
                                                     l3491 7CBE  
                                                     l3555 6EB4  
                                                     l3563 7196  
                                                     l3811 2F8E  
                                                     l3803 2F6E  
                                                     l4427 13E2  
                                                     l4371 1062  
                                                     l4339 0E22  
                                                     l4291 0AC8  
                                                     l4283 0A5A  
                                                     l4187 032A  
                                                     l4179 02BC  
                                                     l5067 7A88  
                                                     l5059 7A30  
                                                     l5091 7B50  
                                                     l5083 7AFC  
                                                     l5251 1D7E  
                                                     l5243 1D08  
                                                     l5235 1CA2  
                                                     l5227 1C46  
                                                     l5219 1BF8  
                                                     l5171 1A7E  
                                                     l5163 1A42  
                                                     l5155 1A0A  
                                                     l4701 22F8  
                                                     l4621 1FC0  
                                                     l4613 1F84  
                                                     l4605 1F52  
                                                     l4541 260C  
                                                     l4533 25C2  
                                                     l4525 257C  
                                                     l4517 253A  
                                                     l4461 23CA  
                                                     l4453 2394  
                                                     l3573 6E72  
                                                     l3581 7082  
                                                     l5341 38FE  
                                                     l3389 703A  
                                                     l3397 3FF0  
                                                     l3485 3CEE  
                                                     l3477 3C9E  
                                                     l3469 3C38  
                                                     l3653 2E6E  
                                                     l3661 2EAC  
                                                     l3645 2E2E  
                                                     l3629 2CBE  
                                                     l3637 2DB0  
                                                     l3709 3624  
                                                     l3741 3796  
                                                     l3733 372A  
                                                     l3725 36AA  
                                                     l3717 366E  
                                                     l3901 7BE4  
                                                     l3493 7CCA  
                                                     l3821 301E  
                                                     l3813 2FAE  
                                                     l3805 2F76  
                                                     l4429 13F6  
                                                     l4373 108C  
                                                     l4381 1110  
                                                     l4293 0B00  
                                                     l4285 0A7E  
                                                     l4197 03E6  
                                                     l4189 0364  
                                                     l5069 7A9C  
                                                     l5093 7B58  
                                                     l5085 7B04  
                                                     l5077 7AB6  
                                                     l5261 1DFC  
                                                     l5245 1D1E  
                                                     l5237 1CBA  
                                                     l5253 1D9C  
                                                     l5229 1C6E  
                                                     l5181 1AB4  
                                                     l5173 1A84  
                                                     l5165 1A6E  
                                                     l5157 1A0E  
                                                     l5149 1A00  
                                                     ?_pad 0011  
                                                     l4711 236C  
                                                     l4703 230C  
                                                     l4631 2018  
                                                     l4623 1FC8  
                                                     l4615 1F86  
                                                     l4607 1F64  
                                                     l4551 2656  
                                                     l4543 2618  
                                                     l4535 25D2  
                                                     l4527 258E  
                                                     l4519 254A  
                                                     l4471 240C  
                                                     l4463 23DE  
                                                     l4455 23A0  
                                                     l3583 70B4  
                                                     l3591 70DE  
                                                     l3487 3D0E  
                                                     l3479 3CBE  
                                                     l3655 2E84  
                                                     l3639 2DD0  
                                                     l3647 2E3E  
                                                     l3671 3468  
                                                     l3751 37EE  
                                                     l3743 379A  
                                                     l3735 372E  
                                                     l3727 36BC  
                                                     l3719 3684  
                                                     l3911 7C46  
                                                     l3495 7CEC  
                                                     l3559 6F38  
                                                     l3567 71D2  
                                                     l3831 309A  
                                                     l3815 2FBE  
                                                     l3807 2F7E  
                                                     l4383 114C  
                                                     l4375 109C  
                                                     l4367 0FEE  
                                                     l4359 0F62  
                                                     l4279 09E6  
                                                     l4199 03FA  
                                                     l4439 1418  
                                                     l5095 7B7A  
                                                     l5087 7B26  
                                                     l5079 7AD4  
                                                     l5263 1E02  
                                                     l5255 1DB6  
                                                     l5247 1D48  
                                                     l5239 1CE4  
                                                     l5191 1B06  
                                                     l5183 1AC8  
                                                     l5175 1A90  
                                                     l5167 1A72  
                                                     l5159 1A12  
                                                     l4713 236E  
                                                     l4705 232C  
                                                     l4641 206A  
                                                     l4633 2026  
                                                     l4625 1FF0  
                                                     l4617 1F9C  
                                                     l4609 1F6C  
                                                     l3921 1466  
                                                     l4721 6F80  
                                                     l4561 26DE  
                                                     l4553 2668  
                                                     l4545 262A  
                                                     l4537 25EC  
                                                     l4529 259C  
                                                     l4481 2444  
                                                     l4473 2414  
                                                     l4465 23EE  
                                                     l4457 23B2  
                                                     l3585 70B8  
                                                     l3577 7064  
                                                     l3593 70EA  
                                                     l3657 2E90  
                                                     l3649 2E56  
                                                     l3681 34C8  
                                                     l3673 34A8  
                                                     l3665 3432  
                                                     l3753 37F2  
                                                     l3745 379E  
                                                     l3737 3750  
                                                     l3913 7C5C  
                                                     l3905 7BF0  
                                                     l3497 7CF4  
                                                     l3761 323E  
                                                     l3569 71E8  
                                                     l3841 314C  
                                                     l3833 30A0  
                                                     l3825 305E  
                                                     l3809 2F86  
                                                     l4385 1184  
                                                     l4377 10D2  
                                                     l4369 102A  
                                                     l4289 0A8C  
                                                     l4801 7206  
                                                     l5097 7B82  
                                                     l5089 7B2E  
                                                     l5273 1E84  
                                                     l5265 1E26  
                                                     l5257 1DC6  
                                                     l5249 1D52  
                                                     l5185 1AD0  
                                                     l5193 1B0C  
                                                     l5177 1A92  
                                                     l5169 1A78  
                                                     l4731 7E0A  
                                                     l4707 234A  
                                                     l4715 2376  
                                                     l4651 20AC  
                                                     l4643 2076  
                                                     l4635 2030  
                                                     l4627 2002  
                                                     l4619 1FB0  
                                                     l3931 14B4  
                                                     l3923 1478  
                                                     l4723 6F90  
                                                     l4811 27E6  
                                                     l4571 2754  
                                                     l4563 26F0  
                                                     l4555 269A  
                                                     l4539 2606  
                                                     l4547 263E  
                                                     l4491 2486  
                                                     l4483 2458  
                                                     l4475 241A  
                                                     l4467 23F2  
                                                     l4459 23B4  
                                                     l3579 706A  
                                                     l3595 70F8  
                                                     l3659 2E9A  
                                                     l3683 34D0  
                                                     l3691 3550  
                                                     l3675 34B0  
                                                     l3667 3446  
                                                     l3739 375E  
                                                     l3915 7C8C  
                                                     l3907 7C00  
                                                     l3499 7D0A  
                                                     l3771 330C  
                                                     l3763 327E  
                                                     l3755 3208  
                                                     l3851 31C2  
                                                     l3843 316A  
                                                     l3835 30A6  
                                                     l3827 3074  
                                                     l3819 3008  
                                                     l4387 11AE  
                                                     l4395 11FE  
                                                     l4299 0B32  
                                                     l5339 0146  
                                                     l4803 720E  
                                                     l5099 7BA4  
                                                     l5275 1E9E  
                                                     l5267 1E36  
                                                     l5259 1DF0  
                                                     l5195 1B48  
                                                     l5187 1AE6  
                                                     l5179 1A9C  
                                                     l4741 7E88  
                                                     l4733 7E3E  
                                                     l4717 237C  
                                                     l4709 235A  
                                                     l4661 210E  
                                                     l4653 20B8  
                                                     l4645 2082  
                                                     l4637 2046  
                                                     l3941 14F0  
                                                     l3933 14B8  
                                                     l3925 147A  
                                                     l4821 28D6  
                                                     l4813 2836  
                                                     l4581 27AE  
                                                     l4573 2774  
                                                     l4565 271A  
                                                     l4549 2652  
                                                     l4493 24A2  
                                                     l4485 2468  
                                                     l4477 242C  
                                                     l4469 23FA  
                                                     l3861 383E  
                                                     l3597 70FE  
                                                     l3589 70C6  
                                                     l3693 3570  
                                                     l3685 34E2  
                                                     l3677 34B4  
                                                     l3669 3448  
                                                     l3749 37D8  
                                                     l3909 7C24  
                                                     l3781 33B6  
                                                     l3773 3312  
                                                     l3765 3286  
                                                     l3757 321C  
                                                     l3853 31D8  
                                                     l3845 3188  
                                                     l3829 3088  
                                                     l3837 3108  
                                                     l4397 122A  
                                                     l4389 11BE  
                                                     l4805 721C  
                                                     l5277 1EB2  
                                                     l5269 1E66  
                                                     l5197 1B4E  
                                                     l5189 1AF6  
                                                     l4743 7EDE  
                                                     l4735 7E4E  
                                                     l4727 7DC8  
                                                     l4671 21A8  
                                                     l4663 211A  
                                                     l4655 20C8  
                                                     l4647 2090  
                                                     l4639 2052  
                                                     l4591 1EF0  
                                                     l4751 6E4C  
                                                     l3951 1524  
                                                     l3943 14F2  
                                                     l3927 1490  
                                                     l3935 14C0  
                                                     l3919 145A  
                                                     l4831 2A86  
                                                     l4815 284A  
                                                     l4583 27B2  
                                                     l4575 2790  
                                                     l4559 26D2  
                                                     l4567 271E  
                                                     l4495 24B2  
                                                     l4487 246C  
                                                     l4479 242E  
                                                     l3863 3844  
                                                     l3599 7102  
                                                     l3695 3592  
                                                     l3687 34E8  
                                                     l3679 34C0  
                                                     l3783 33D4  
                                                     l3775 3318  
                                                     l3767 328E  
                                                     l3759 321E  
                                                     l3847 31AC  
                                                     l3839 312A  
                                                     l3791 2EDC  
                                                     l4399 1252  
                                                     l4807 7244  
                                                     l4911 3D5E  
                                                     l4903 3D36  
                                                     l5279 1EBE  
                                                     l5199 1B54  
                                                     l4745 7EE4  
                                                     l4737 7E62  
                                                     l4729 7DFA  
                                                     l4681 220C  
                                                     l4673 21C6  
                                                     l4665 2136  
                                                     l4657 20E2  
                                                     l4649 209C  
                                                     l4593 1EFC  
                                                     l4753 6E5C  
                                                     l3961 1566  
                                                     l3953 1538  
                                                     l3945 14FA  
                                                     l3937 14D2  
                                                     l3929 14A4  
                                                     l4833 2AF2  
                                                     l4825 290E  
                                                     l4817 2890  
                                                     l4809 27C6  
                                                     l4577 2796  
                                                     l4569 273E  
                                                     l4497 24BA  
                                                     l4489 2474  
                                                     l3881 3916  
                                                     l3873 38AE  
                                                     l3865 3866  
                                                     l3857 3824  
                                                     l3697 35B0  
                                                     l3689 34EE  
                                                     l3785 33F2  
                                                     l3769 3296  
                                                     l3777 337C  
                                                     l3849 31B2  
                                                     l3793 2EF0  
                                                     l4921 3DD6  
                                                     l4913 3D82  
                                                     l4905 3D4C  
                                                     l4771 3EE6  
                                                     l4763 3EA0  
                                                     l4739 7E74  
                                                     l4691 228C  
                                                     l4683 2210  
                                                     l4675 21D2  
                                                     l4667 2160  
                                                     l4659 20F2  
                                                     l4595 1F0E  
                                                     l3971 159E  
                                                     l3963 157E  
                                                     l3955 1548  
                                                     l3947 150C  
                                                     l3939 14DA  
                                                     l4835 2B28  
                                                     l4827 29E2  
                                                     l4819 28B4  
                                                     l4579 27A8  
                                                     l4499 24C0  
                                                     l4851 6CB8  
                                                     l4843 6CA4  
                                                     l3891 39AE  
                                                     l3875 38C8  
                                                     l3867 38A2  
                                                     l3859 3838  
                                                     l3699 35CE  
                                                     l3779 3394  
                                                     l3787 3402  
                                                     l3795 2EF2  
                                                     l4923 3DEC  
                                                     l4931 3E5E  
                                                     l4915 3D90  
                                                     l4907 3D56  
                                                     l4781 3F20  
                                                     l4773 3EF8  
                                                     l4765 3ED0  
                                                     l4757 3E70  
                                                     l4693 2298  
                                                     l4685 2222  
                                                     l4677 21E4  
                                                     l4669 219A  
                                                     l4597 1F10  
                                                     l4749 6E32  
                                                     l3981 15B2  
                                                     l3973 15A2  
                                                     l3965 1590  
                                                     l3957 154C  
                                                     l3949 150E  
                                                     l4837 2B6E  
                                                     l4829 2A4E  
                                                     l4941 6E22  
                                                     l4853 6CBA  
                                                     l4845 6CA6  
                                                     l4861 6CD6  
                                                     l3893 39C4  
                                                     l3885 3950  
                                                     l3877 38D2  
                                                     l3869 38A6  
                                                     l3797 2F12  
                                                     l4925 3E00  
                                                     l4917 3D9C  
                                                     TRISD 000F95  
                                                     l4791 3F52  
                                                     l4783 3F2A  
                                                     l4767 3ED2  
                                                     l4759 3E8A  
                                                     l4695 22AA  
                                                     l4687 2254  
                                                     l4679 21F8  
                                                     l4599 1F26  
                                                     l3991 15C6  
                                                     l3983 15B6  
                                                     l3975 15A6  
                                                     l3967 1594  
                                                     l3959 1554  
                                                     l4839 2B92  
                                                     l4943 6E24  
                                                     l4935 6DF2  
                                                     l4871 74A4  
                                                     l4855 6CC4  
                                                     l4847 6CAC  
                                                     l4863 6CD8  
                                                     l3879 38DC  
                                                     l3799 2F44  
                                                     l4927 3E32  
                                                     l4919 3DB0  
                                                     TRISE 000F96  
                                                     l4961 6D20  
                                                     l4793 3F66  
                                                     l4769 3EE2  
                                                     l4697 22D4  
                                                     l3993 15CA  
                                                     l3985 15BA  
                                                     l3977 15AA  
                                                     l3969 159A  
                                                     l4945 6E26  
                                                     l4937 6E1E  
                                                     l4881 7528  
                                                     l4873 7508  
                                                     l4849 6CAE  
                                                     l4865 6CE2  
                                                     l4857 6CCE  
                                                     l4953 6C40  
                                                     l3889 3998  
                                                     l4929 3E4C  
                                                     l4955 6BFE  
                                                     l4963 6D40  
                                                     l4795 3F7C  
                                                     l4779 3F14  
                                                     l4699 22D8  
                                                     l3995 15CE  
                                                     l3987 15BE  
                                                     l3979 15AE  
                                                     l4947 6E28  
                                                     l4939 6E20  
                                                     l4883 753C  
                                                     l4875 750C  
                                                     l4971 7566  
                                                     l4867 6CE4  
                                                     l4859 6CD0  
                                                     l3899 7BB6  
                                                     l4957 6C02  
                                                     l4965 6D42  
                                                     l4797 3F8C  
                                                     l4789 3F44  
                                                     l3989 15C2  
                                                     l3997 15D2  
                                                     l4949 6E2A  
                                                     l4885 7542  
                                                     l4877 751E  
                                                     l4981 75F0  
                                                     l4973 756E  
                                                     l4869 6CEE  
                                                     l4893 7632  
                                                     l4967 6D44  
                                                     l3999 15D8  
                                                     l4887 7546  
                                                     l4879 7524  
                                                     l4991 6C78  
                                                     l4975 7570  
                                                     l4895 76BE  
                                                     l4985 6C5E  
                                                     l4977 7572  
                                                     l4889 6DB6  
                                                     l4897 76D2  
                                                     l4987 6C62  
                                                     l4995 6BE6  
                                                     l4979 7574  
                                                     l4899 76F4  
                                                     l4989 6C76  
                                                     l4997 73F4  
                                                     STR_1 7F43  
                                                     STR_2 7F03  
                                                     STR_3 7FBA  
                                                     STR_4 7F74  
                                                     STR_5 7FB1  
                                                     STR_6 7FC3  
                                                     STR_7 7F9B  
                                                     STR_8 7FFB  
                                                     STR_9 7FCE  
                                            _state_changed 01AA  
                                                     _LATA 000F89  
                                                     _LATB 000F8A  
                                                     _LATC 000F8B  
                                                     u4000 36DC  
                                                     u4001 36D6  
                                                     u4010 370E  
                                                     u4011 3708  
                                                     u3300 705E  
                                                     u4020 3750  
                                                     u4100 33B4  
                                                     u3301 7058  
                                                     u4021 374A  
                                                     u4101 33AE  
                                                     u3310 3FDC  
                                                     u4030 3782  
                                                     u4110 33D2  
                                                     u4111 33CC  
                                                     u3320 3FEE  
                                                     u3400 3B0A  
                                                     u4040 37C0  
                                                     u4120 33F0  
                                                     u4200 301C  
                                                     u5000 065A  
                                                     u3321 3FE8  
                                                     u3401 3B04  
                                                     u4041 37BA  
                                                     u4121 33EA  
                                                     u4201 3016  
                                                     u5001 0654  
                                                     u3410 3B5C  
                                                     u4050 37D2  
                                                     u4130 3402  
                                                     u3330 6F2A  
                                                     u4210 3054  
                                                     u5010 0684  
                                                     u3411 3B56  
                                                     u4051 37CC  
                                                     u4131 33FC  
                                                     u3331 6F22  
                                                     u4211 304C  
                                                     u5011 067E  
                                                     u3260 7720  
                                                     u3420 3BBA  
                                                     u4060 3814  
                                                     u3500 7D1C  
                                                     u3340 6F2E  
                                                     u4300 31AA  
                                                     u4220 3058  
                                                     u4140 2EEE  
                                                     u5100 0AC6  
                                                     u5020 070C  
                                                     u3261 771A  
                                                     u3317 3FD2  
                                                     u3421 3BB4  
                                                     u4061 380E  
                                                     u4037 3778  
                                                     u3501 7D16  
                                                     u4301 31A4  
                                                     u4141 2EE8  
                                                     u5101 0AC0  
                                                     u5021 0706  
                                                     u4310 3864  
                                                     u3270 7736  
                                                     u3350 3A06  
                                                     u3430 3BF2  
                                                     u3510 7D62  
                                                     u4070 321A  
                                                     u4230 3072  
                                                     u4150 2F10  
                                                     u5110 0B2E  
                                                     u5030 0746  
                                                     u4311 385E  
                                                     u3271 7730  
                                                     u3351 3A00  
                                                     u3431 3BEC  
                                                     u3511 7D5C  
                                                     u4071 3214  
                                                     u4231 306C  
                                                     u4151 2F0A  
                                                     u5031 0740  
                                                     u4320 38A0  
                                                     u3280 7764  
                                                     u3360 3A3E  
                                                     u3440 3C36  
                                                     u4400 7C44  
                                                     u3520 78F0  
                                                     u4080 323C  
                                                     u3600 6EE8  
                                                     u4240 30E0  
                                                     u4160 2F42  
                                                     u5200 0F12  
                                                     u5120 0B5C  
                                                     u5040 07D2  
                                                     u6000 3D4A  
                                                     u4321 389A  
                                                     u3281 775E  
                                                     u3361 3A38  
                                                     u3441 3C30  
                                                     u4401 7C3E  
                                                     u3521 78EA  
                                                     u4081 3236  
                                                     u3601 6EE0  
                                                     u4161 2F3C  
                                                     u5201 0F0C  
                                                     u5121 0B56  
                                                     u5041 07CC  
                                                     u6001 3D44  
                                                     u4330 38C2  
                                                     u3290 779E  
                                                     u3450 3C68  
                                                     u4410 7C5A  
                                                     u3530 7922  
                                                     u4090 3392  
                                                     u3610 6EEC  
                                                     u4250 3128  
                                                     u4170 2FAC  
                                                     u5210 0F9C  
                                                     u5130 0BC2  
                                                     u5050 088E  
                                                     u6010 3D80  
                                                     u4331 38BC  
                                                     u3291 7798  
                                                     u3371 3A6C  
                                                     u3451 3C62  
                                                     u4411 7C54  
                                                     u3531 791C  
                                                     u4091 338C  
                                                     u4251 3122  
                                                     u4171 2FA6  
                                                     u5211 0F96  
                                                     u5051 0888  
                                                     u6011 3D7A  
                                                     u4500 157C  
                                                     u3700 70B2  
                                                     u4340 398E  
                                                     u3380 3A92  
                                                     u3460 3C9C  
                                                     u4420 7C8C  
                                                     u3540 7956  
                                                     u3620 6F70  
                                                     u4260 314A  
                                                     u4180 2FFE  
                                                     u5300 13D2  
                                                     u5220 1028  
                                                     u5140 0C00  
                                                     u5060 090A  
                                                     u6020 3DEA  
                                                     u6100 79D6  
                                                     u4501 1576  
                                                     u3701 70AC  
                                                     u4341 3986  
                                                     u3381 3A8C  
                                                     u3461 3C96  
                                                     u4421 7C86  
                                                     u3541 7950  
                                                     u3621 6F68  
                                                     u4261 3144  
                                                     u4245 30CC  
                                                     u4181 2FF6  
                                                     u5301 13CC  
                                                     u5221 1022  
                                                     u5141 0BFA  
                                                     u5117 0B1E  
                                                     u5061 0904  
                                                     u6021 3DE4  
                                                     u6101 79D0  
                                                     u4510 158E  
                                                     u4430 1476  
                                                     u5310 23B0  
                                                     u4350 3992  
                                                     u3550 77FE  
                                                     u3710 70DC  
                                                     u3390 3AC4  
                                                     u3470 3CEC  
                                                     u3630 6F74  
                                                     u4270 3168  
                                                     u4190 3002  
                                                     u5230 1062  
                                                     u5150 0C68  
                                                     u5070 0994  
                                                     u6030 3DFE  
                                                     u6110 7A02  
                                                     u4511 1588  
                                                     u4431 1470  
                                                     u5311 23AA  
                                                     u3551 77F8  
                                                     u3711 70D6  
                                                     u3391 3ABE  
                                                     u3471 3CE6  
                                                     u4271 3162  
                                                     u5231 105C  
                                                     u5071 098E  
                                                     u6031 3DF8  
                                                     u6111 79FC  
                                                     u4600 16FE  
                                                     u4520 1604  
                                                     u4440 148E  
                                                     u5400 258C  
                                                     u5320 23C8  
                                                     u4360 39AC  
                                                     u3560 7826  
                                                     u3800 2DF0  
                                                     u3720 2BDE  
                                                     u3640 71C8  
                                                     u4280 3186  
                                                     u5240 114A  
                                                     u5160 0C96  
                                                     u5080 0A20  
                                                     u6040 3E30  
                                                     u6120 7A2E  
                                                     u6200 7BA2  
                                                     u4601 16F8  
                                                     u4521 15FE  
                                                     u4441 1488  
                                                     u5401 2586  
                                                     u5321 23C2  
                                                     u4361 39A6  
                                                     u3561 7820  
                                                     u3801 2DEA  
                                                     u3721 2BD6  
                                                     u3481 7CC4  
                                                     u3641 71C0  
                                                     u4281 3180  
                                                     u5241 1144  
                                                     u5161 0C90  
                                                     u5137 0BB2  
                                                     u5081 0A1A  
                                                     u6041 3E2A  
                                                     u6121 7A28  
                                                     u6201 7B9C  
                                                     u4610 1710  
                                                     u4530 1620  
                                                     u4450 14A2  
                                                     u5410 25BE  
                                                     u5330 23DC  
                                                     u6210 72A2  
                                                     u6050 6C56  
                                                     u4370 39C2  
                                                     u3570 7888  
                                                     u3810 2E0E  
                                                     u3730 2BE2  
                                                     u3490 7CEA  
                                                     u3650 71CC  
                                                     u4290 3198  
                                                     u5250 1184  
                                                     u5170 0D48  
                                                     u5090 0A7E  
                                                     u6130 7A5A  
                                                     u4611 170A  
                                                     u4531 1618  
                                                     u4451 149C  
                                                     u5411 25B8  
                                                     u5331 23D6  
                                                     u6211 729C  
                                                     u6051 6C50  
                                                     u4371 39BC  
                                                     u3571 7882  
                                                     u3811 2E08  
                                                     u3491 7CE4  
                                                     u4291 3192  
                                                     u5251 117E  
                                                     u5171 0D42  
                                                     u6131 7A54  
                                                     u4700 1894  
                                                     u4620 1736  
                                                     u4540 1624  
                                                     u4460 14EE  
                                                     u5500 26EE  
                                                     u5420 25EA  
                                                     u5340 242A  
                                                     u6060 7464  
                                                     u3580 789A  
                                                     u3820 2E2C  
                                                     u3740 2BFC  
                                                     u3900 356E  
                                                     u4380 7BE2  
                                                     u3660 71E6  
                                                     u5260 1228  
                                                     u5180 0DDA  
                                                     u6140 7A86  
                                                     u6300 1C24  
                                                     u4701 188E  
                                                     u4621 1730  
                                                     u4461 14E8  
                                                     u5501 26E8  
                                                     u5421 25E4  
                                                     u5341 2424  
                                                     u6061 745E  
                                                     u3581 7894  
                                                     u3821 2E26  
                                                     u3741 2BF6  
                                                     u3901 3568  
                                                     u4381 7BDC  
                                                     u3661 71E0  
                                                     u5261 1222  
                                                     u5181 0DD4  
                                                     u5157 0C58  
                                                     u6141 7A80  
                                                     u6301 1C1E  
                                                     u4710 18AA  
                                                     u4630 1776  
                                                     u4550 1652  
                                                     u4470 150A  
                                                     u5510 273C  
                                                     u5430 2604  
                                                     u5350 2442  
                                                     u6070 73A4  
                                                     u3670 6EA6  
                                                     u3590 6FE6  
                                                     u3830 2E3E  
                                                     u3750 2C32  
                                                     u3910 3590  
                                                     u4390 7C22  
                                                     u5270 1252  
                                                     u5190 0E96  
                                                     u6150 7AD2  
                                                     u6310 1C38  
                                                     u6230 1AB2  
                                                     u4711 18A4  
                                                     u4631 1770  
                                                     u4551 164C  
                                                     u4471 1504  
                                                     u5511 2736  
                                                     u5431 25FE  
                                                     u5351 243C  
                                                     u3671 6E9E  
                                                     u3591 6FE0  
                                                     u3831 2E38  
                                                     u3751 2C2C  
                                                     u3911 358A  
                                                     u4391 7C1C  
                                                     u5271 124C  
                                                     u5191 0E90  
                                                     u6151 7ACC  
                                                     u6311 1C32  
                                                     u6231 1AAC  
                                                     u5600 1FEE  
                                                     u4800 19C0  
                                                     u4720 18C4  
                                                     u4640 17C0  
                                                     u4560 1678  
                                                     u4480 1522  
                                                     u5520 2772  
                                                     u5440 2628  
                                                     u5360 2456  
                                                     u6080 73DA  
                                                     u3680 6EAA  
                                                     u3840 2E54  
                                                     u3760 2C54  
                                                     u3920 35AE  
                                                     u5280 12F4  
                                                     u6160 7AFA  
                                                     u6400 1DB4  
                                                     u6320 1C6C  
                                                     u6240 1AC6  
                                                     u5601 1FE8  
                                                     u4801 19BA  
                                                     u4721 18BE  
                                                     u4641 17BA  
                                                     u4561 1672  
                                                     u4481 151C  
                                                     u5521 276C  
                                                     u5441 2622  
                                                     u5361 2450  
                                                     u3841 2E4E  
                                                     u3761 2C4E  
                                                     u3921 35A8  
                                                     u5281 12EE  
                                                     u5097 0A72  
                                                     u6161 7AF4  
                                                     u6401 1DAE  
                                                     u6321 1C66  
                                                     u6241 1AC0  
                                                     u5610 2002  
                                                     u4810 19E4  
                                                     u4730 18E2  
                                                     u4650 17FE  
                                                     u4570 16A0  
                                                     u4490 1536  
                                                     u5530 27A6  
                                                     u5450 2650  
                                                     u5370 24A0  
                                                     u6090 73EC  
                                                     u3690 7080  
                                                     u3850 2E66  
                                                     u3770 2C8A  
                                                     u3930 35CC  
                                                     u5290 132E  
                                                     u6170 7B24  
                                                     u6410 1DEE  
                                                     u6330 1C90  
                                                     u6250 1AE4  
                                                     u5611 1FFC  
                                                     u4811 19DE  
                                                     u4731 18DC  
                                                     u4651 17F8  
                                                     u4571 169A  
                                                     u4491 1530  
                                                     u5531 27A0  
                                                     u5451 264A  
                                                     u5371 249A  
                                                     u6091 73E6  
                                                     u3691 707A  
                                                     u3851 2E60  
                                                     u3771 2C84  
                                                     u3931 35C6  
                                                     u5291 1328  
                                                     u6171 7B1E  
                                                     u6411 1DE8  
                                                     u6331 1C8A  
                                                     u6251 1ADE  
                                                     u5700 22F6  
                                                     u5620 2182  
                                                     u5540 1F0C  
                                                     u4740 18FC  
                                                     u4660 1812  
                                                     u4580 16B2  
                                                     u5460 2666  
                                                     u5380 24E8  
                                                     u3860 2E82  
                                                     u3780 2C9C  
                                                     u3940 35DE  
                                                     u4900 02E6  
                                                     u4820 00A4  
                                                     u6180 7B4E  
                                                     u6420 1E24  
                                                     u6340 1CB8  
                                                     u6260 1B7E  
                                                     u5701 22F0  
                                                     u5541 1F06  
                                                     u4741 18F6  
                                                     u4661 180C  
                                                     u4581 16AC  
                                                     u5461 2660  
                                                     u5381 24E2  
                                                     u6077 739A  
                                                     u3861 2E7C  
                                                     u3781 2C96  
                                                     u3941 35D8  
                                                     u4901 02E0  
                                                     u4821 009E  
                                                     u6181 7B48  
                                                     u6421 1E1E  
                                                     u6341 1CB2  
                                                     u6261 1B78  
                                                     u5710 232A  
                                                     u5630 21E2  
                                                     u5550 1F24  
                                                     u4750 191A  
                                                     u4670 1844  
                                                     u4590 16C6  
                                                     u5470 2698  
                                                     u5390 2566  
                                                     u3790 2DCE  
                                                     u3950 35F0  
                                                     u3870 3444  
                                                     u4910 0328  
                                                     u4830 018C  
                                                     u6190 7B78  
                                                     u6430 1E7E  
                                                     u6350 1CE2  
                                                     u6270 1B9E  
                                                     u5711 2324  
                                                     u5631 21DC  
                                                     u5551 1F1E  
                                                     u4751 1914  
                                                     u4671 183E  
                                                     u4591 16C0  
                                                     u5471 2692  
                                                     u5391 2560  
                                                     u6087 73D0  
                                                     u3791 2DC8  
                                                     u3951 35EA  
                                                     u3871 343E  
                                                     u4911 0322  
                                                     u4831 0186  
                                                     u6191 7B72  
                                                     u6431 1E78  
                                                     u6351 1CDC  
                                                     u6271 1B98  
                                                     u5800 3EC4  
                                                     u5720 236A  
                                                     u5640 220A  
                                                     u5560 1F38  
                                                     u4760 1958  
                                                     u4680 185A  
                                                     u5480 26B6  
                                                     u3960 3606  
                                                     u3880 3466  
                                                     u4920 03DC  
                                                     u4840 019E  
                                                     u6440 1E9C  
                                                     u6360 1D06  
                                                     u6280 1BB2  
                                                     u5721 2364  
                                                     u5641 2204  
                                                     u5625 2176  
                                                     u5561 1F32  
                                                     u4761 1952  
                                                     u4681 1854  
                                                     u5481 26B0  
                                                     u3961 3600  
                                                     u3881 3460  
                                                     u4921 03D4  
                                                     u4841 0198  
                                                     u6441 1E96  
                                                     u6361 1D00  
                                                     u6281 1BAC  
                                                     u5810 3EF6  
                                                     u5730 7DF8  
                                                     u5650 2220  
                                                     u5570 1F82  
                                                     u4770 1970  
                                                     u4690 187E  
                                                     u5490 26D0  
                                                     u3890 3528  
                                                     u4930 03E0  
                                                     u4850 01CC  
                                                     u6450 1EB0  
                                                     u6370 1D1C  
                                                     u6290 1BEA  
                                                     u5811 3EF0  
                                                     u5731 7DF2  
                                                     u5651 221A  
                                                     u5571 1F7C  
                                                     u4771 196A  
                                                     u4691 1878  
                                                     u5491 26CA  
                                                     u3971 365E  
                                                     u4851 01C6  
                                                     u6451 1EAA  
                                                     u6371 1D16  
                                                     u6291 1BE4  
                                                     u5820 3F0E  
                                                     u5740 7E3C  
                                                     u5660 2252  
                                                     u5580 1F9A  
                                                     u4780 1984  
                                                     u5900 288E  
                                                     u3980 3682  
                                                     u4940 03FA  
                                                     u4860 0216  
                                                     u6460 1EE4  
                                                     u6380 1D46  
                                                     u5821 3F08  
                                                     u5805 3EB8  
                                                     u5741 7E36  
                                                     u5661 224C  
                                                     u5581 1F94  
                                                     u4781 197E  
                                                     u5901 2888  
                                                     u3981 367C  
                                                     u4941 03F4  
                                                     u4861 0210  
                                                     u6461 1EDE  
                                                     u6381 1D40  
                                                     u6517 1C98  
                                                     u5830 3F3E  
                                                     u5750 7E60  
                                                     u5670 2270  
                                                     u5590 1FAE  
                                                     u4790 19A8  
                                                     u5910 28D4  
                                                     u3990 36BA  
                                                     u4950 0424  
                                                     u4870 029E  
                                                     u6390 1D7C  
                                                     u5831 3F38  
                                                     u5751 7E5A  
                                                     u5671 226A  
                                                     u5591 1FA8  
                                                     u4791 19A2  
                                                     u5911 28CE  
                                                     u3895 3514  
                                                     u3991 36B4  
                                                     u4951 041E  
                                                     u4871 0296  
                                                     u6527 1DBC  
                                                     u6391 1D76  
                                                     u5840 3F66  
                                                     u5760 7E86  
                                                     u5680 228A  
                                                     u5920 29E0  
                                                     u4960 04AE  
                                                     u4880 02A2  
                                                     u5841 3F60  
                                                     u5761 7E80  
                                                     u5681 2284  
                                                     u5921 29DA  
                                                     u6537 6CDA  
                                                     u4961 04A8  
                                                     u5850 3F7A  
                                                     u5770 7EDC  
                                                     u5690 22A8  
                                                     u5930 2A84  
                                                     u4970 04E8  
                                                     u4890 02BC  
                                                     u5851 3F74  
                                                     u5771 7ED6  
                                                     u5691 22A2  
                                                     u5931 2A7E  
                                                     u6547 6CE6  
                                                     u4971 04E2  
                                                     u4891 02B6  
                                                     u5780 6E4A  
                                                     u5940 2B4C  
                                                     u4980 05A6  
                                                     u5860 7266  
                                                     u5781 6E44  
                                                     u6557 7304  
                                                     u4981 05A0  
                                                     u5861 7260  
                                                     u5790 3E88  
                                                     u5950 2B6C  
                                                     u5870 2808  
                                                     u4990 05E0  
                                                     u5791 3E82  
                                                     u5951 2B66  
                                                     u6567 731E  
                                                     u4991 05DA  
                                                     u5880 2834  
                                                     u5960 751C  
                                                     u5945 2B40  
                                                     u5881 282E  
                                                     u5961 7516  
                                                     u6577 7336  
                                                     u5890 286E  
                                                     u5970 753A  
                                                     u5875 27FC  
                                                     u5971 7534  
                                                     u6587 6CB0  
                                                     u5980 76BC  
                                                     u6597 6CBC  
                                                     u5981 76B6  
                                                     u5990 76F2  
                                                     u5895 2862  
                                                     u5991 76EC  
                                                     _TMR2 000FCC  
                                                     abs@a 0013  
                                                     _dbuf 0092  
                                                     _atoi 3822  
                                                     _ctoa 70C4  
                                                     _main 1A00  
                                                     _dtoa 2BAA  
                                                     _fosc 7EFF  
                                                     _prec 0088  
                                                     _otoa 3430  
                                                     _nout 0084  
                                                     pad@i 0018  
                                                     pad@p 0015  
                                                     fsr1h 000FE2  
                                                     fsr2h 000FDA  
                                                     indf1 000FE7  
                                                     indf2 000FDF  
                                                     fsr1l 000FE1  
                                                     pad@w 001A  
                                                     fsr2l 000FD9  
                                                     _tosc 00D3  
                                                     _stoa 3652  
                                                     btemp 007F  
                                                     _utoa 3206  
                                                     _xtoa 2EDA  
                              update_pwm_duty_ccp1@time_up 006F  
                                              main@rx_char 01A0  
                                                     prodh 000FF4  
                                                     prodl 000FF3  
                                                     start 0076  
                                          ___fldiv@new_exp 002B  
         state_translator_fpga_to_micro@state_machine_code 0005  
                                             ___param_bank 000000  
                                                    ??_abs 0015  
                                     _update_pwm_duty_ccp1 74A2  
                                                    ??_pad 0017  
                                            ___fltol@sign1 006D  
                                          __end_of___aodiv 3BA4  
                                                    ?_atoi 0008  
                                                    ?_ctoa 001C  
                                          __end_of___fladd 1A00  
                                                    ?_main 0001  
                                                    ?_dtoa 001C  
                                          __end_of___aomod 3D34  
                                          __end_of___fldiv 27C4  
                                          __end_of___flneg 6E72  
                                                    STR_11 7FCE  
                                                    STR_20 7FCF  
                                                    STR_13 7FD2  
                                                    STR_15 7FD2  
                                                    STR_31 7FEC  
                                                    STR_24 7FD3  
                                                    STR_33 7FEC  
                                                    STR_43 7FDB  
                                                    STR_27 7FE9  
                                                    STR_51 7FD6  
                                                    STR_36 7FDA  
                                                    STR_29 7FE9  
                                                    STR_53 7FD6  
                                                    STR_61 7FEF  
                                                    STR_38 7FDA  
                                                    STR_46 7FF2  
                                                    STR_63 7FEF  
                                                    STR_48 7FF2  
                                                    STR_73 7FDF  
                                                    STR_81 7FE2  
                                                    STR_58 7FD7  
                                                    STR_66 7FDE  
                                                    STR_83 7FE2  
                                                    STR_68 7FDE  
                                                    STR_92 7FE3  
                                                    STR_76 7FF5  
                                                    STR_85 7FCA  
                                                    STR_78 7FF5  
                                                    STR_87 7FCA  
                                                    STR_96 7FCB  
                                          __end_of___flmul 2392  
                                                    ?_otoa 001C  
                                                    STR_99 7FF8  
                                          __end_of___flsub 6FC8  
                                          __end_of___fltol 3FA4  
                                                    ?_stoa 000A  
                                                    ?_utoa 001C  
                                                    _T0CON 000FD5  
                                          __end_of___lodiv 7DC6  
                                                    ?_xtoa 001C  
                                                    _T2CON 000FCA  
                                          __end_of___lomod 79B8  
                                                    i2l165 006E  
                              __end_of_update_current_coil 770A  
                                                    _RCREG 000FAE  
                                             vfpfcnvrt@fmt 0045  
                                                    _TMR0H 000FD7  
                                             vfpfcnvrt@llu 0060  
                                                    _TMR0L 000FD6  
                                                    _SPBRG 000FAF  
                                                    _PORTA 000F80  
                                                    _PORTB 000F81  
                                                    _PORTC 000F82  
                                                    _PORTD 000F83  
                                                    _TRISA 000F92  
                                                    _TRISB 000F93  
                                                    _TXREG 000FAD  
                                          __end_of_lcd_dat 6CF4  
                                          __end_of_lcd_cmd 6CCA  
                                          __end_of_lcd_str 73F2  
                                                    _f_osc 7EFB  
                                                    _flags 007D  
                                                    _errno 008A  
                                                    _fputc 770A  
                                          __end_of_isalpha 6F7E  
                                                    _fputs 7014  
                                          __end_of_isdigit 6EB4  
                                                    _t_osc 7EF7  
                                                    atoi@n 0015  
                                                    pad@fp 0011  
                                                    atoi@s 0008  
                                                    _width 0086  
                                                    ctoa@c 001E  
                                                    _state 01C7  
                                                    _putch 6BDE  
                                                    _toint 7EEF  
                                                    ctoa@w 001F  
                                                    dtoa@d 001E  
                                                    dtoa@i 003E  
                                                    dtoa@n 0036  
                                                    dtoa@p 0030  
                                                    dtoa@s 0034  
                                                    dtoa@w 0032  
                                          __end_of_islower 6F38  
                                          __end_of_isspace 70C4  
                                          __end_of_isupper 6EF6  
                                                    tablat 000FF5  
                                                    otoa@d 001E  
                                                    otoa@i 003C  
                                                    otoa@n 0034  
                                                    otoa@p 002E  
                                                    otoa@t 0030  
                                                    otoa@w 0032  
                                                    plusw1 000FE3  
                                                    plusw2 000FDB  
                                                    stoa@i 0016  
                                                    stoa@l 001E  
                                                    stoa@p 001C  
                                                    stoa@s 000C  
                                                    stoa@w 0018  
                                                    ttemp5 0080  
                                                    ttemp6 0083  
                                                    ttemp7 0087  
                                                    utoa@d 001E  
                                                    utoa@i 003A  
                                                    utoa@n 0032  
                                                    utoa@p 002E  
                                                    utoa@w 0030  
                                                    status 000FD8  
                                                    wtemp8 0080  
                                                    xtoa@c 0041  
                                                    xtoa@d 001E  
                                                    xtoa@i 003F  
                                                    xtoa@n 0037  
                                                    xtoa@p 0033  
                                                    xtoa@w 0035  
                                                    xtoa@x 0026  
                                          __end_of_strncmp 7CBC  
                                          __end_of_toupper 7204  
                                         ___lodiv@dividend 0001  
                                       _end_effector_ready 01A1  
                                          ??_get_reg_value 0001  
                                             _toupper$1766 000D  
                                     get_reg_value@rx_char 0001  
                                          __initialization 712A  
                                             __end_of_atoi 39F0  
                                             __end_of_ctoa 712A  
                                             __end_of_main 1EEE  
                                             __end_of_dtoa 2EDA  
                                             __end_of_fosc 7F03  
                                             __end_of_otoa 3652  
                                             __end_of_stoa 3822  
                                             __end_of_utoa 3430  
                                    ?_update_pwm_duty_ccp1 006F  
                                             __end_of_xtoa 3206  
                                                   ??_atoi 000A  
                                                   ??_ctoa 001F  
                                                   ??_main 007C  
                                                   ??_dtoa 0026  
                                                   ??_otoa 0026  
                                                   ??_stoa 000E  
                                                   ??_utoa 0026  
                                                   ??_xtoa 0027  
                                            __activetblptr 000002  
                                          ??_rx_char_usart 0001  
                                         ___lodiv@quotient 0011  
                                         _change_direction 6D7E  
                                                   ?_fputc 0001  
                                                   STR_101 7FF8  
                                                   ?_fputs 000A  
                                                   STR_103 7FE6  
                                                   STR_105 7FE6  
                             __end_of_turn_on_current_coil 6DF0  
                                                   _CCPR1L 000FBE  
                                                   ?_putch 0001  
                                                   i2l5291 003C  
                                                   i2l5283 000C  
                                                   i2l5293 0050  
                                                   i2l5285 001E  
                                                   i2l5295 0062  
                                                   i2l5287 0030  
                                                   i2l5297 0066  
                                                   i2l5289 0032  
                                            main@greet_str 0100  
                                            vfpfcnvrt@done 004F  
                                            ?_init_timer_0 0001  
                                            ?_init_timer_2 0001  
                   __end_of_state_translator_fpga_to_micro 7AB4  
                  __size_of_state_translator_fpga_to_micro 00FC  
                           _state_translator_fpga_to_micro 79B8  
                                            ?_init_stepper 0001  
                                             vfprintf@cfmt 006E  
                                         __end_of_lcd_init 736A  
                                                   ___flge 7DC6  
                                        _init_timer_2$2006 006F  
                                                ??___aodiv 0011  
                                                ??___fladd 003B  
                                                ??___aomod 0011  
                                                   ___wmul 6CF4  
                                                ??___fldiv 0022  
                                                ??___flneg 0005  
                                                ??___flmul 0009  
                                                ??___flsub 004B  
                                                ??___fltol 0069  
                                                ??___lodiv 0011  
                                                ??___lomod 0011  
                                                   _lcd_wr 6BF0  
                                                   clear_0 7170  
                                                   clear_1 717C  
                                                   pad@buf 0013  
                                                   ctoa@fp 001C  
                                                   _roundf 27C4  
                                                ??_lcd_dat 0002  
                                                ??_lcd_cmd 0002  
                                                   dtoa@fp 001C  
                                                   _strlen 3FA4  
                                                ??_lcd_str 0005  
                                                   fputc@c 0001  
                                                   fputs@c 000E  
                                                   fputs@i 000F  
                                                   fputs@s 000A  
                                                ??_isalpha 0003  
                                                ??_isdigit 0003  
                                                ??_islower 0003  
                                             __mediumconst 7EEE  
                                                ??_isspace 0003  
                                                   otoa@fp 001C  
                                                   tblptrh 000FF7  
                                                ??_isupper 0003  
                                                   tblptrl 000FF6  
                                                   tblptru 000FF8  
                                  reach_goal@goal_to_reach 0009  
                                                   stoa@cp 001A  
                                                   stoa@fp 000A  
                                                   putch@c 0001  
                                         __end_of_vfprintf 7274  
                                                   utoa@fp 001C  
                                         __end_of_snprintf 6D7E  
                                                   xtoa@fp 001C  
                                                ??_strncmp 0007  
                                                ??_toupper 0009  
                                               ___flge@ff1 0001  
                                               ___flge@ff2 0005  
                         update_current_coil@stepper_motor 0001  
                                               __accesstop 0080  
                                  __end_of__initialization 7186  
                                               ___flneg@f1 0001  
                                        serial_tx_char@val 0001  
                                           ??_init_timer_0 0001  
                                           ??_init_timer_2 006F  
                                            ___rparam_used 000001  
                                               ___fltol@f1 0065  
                                           ??_init_stepper 000B  
                                           _tmr2_prescaler 00D7  
                                          _init_interrupts 6BE4  
                                   ??_update_pwm_duty_ccp1 0073  
                                           __pcstackCOMRAM 0001  
                                             __pidataBANK0 6C0D  
                                             __pidataBANK1 6C20  
                                            __end_of_f_osc 7EFF  
                                            __end_of_fputc 77EC  
                                            __end_of_fputs 7064  
                                            __end_of_t_osc 7EFB  
                                            __end_of_putch 6BE4  
                                            __end_of_toint 7EF3  
                                  __size_of_serial_tx_char 0020  
                      state_translator_fpga_to_micro@state 0003  
                                                  ??_fputc 0005  
                                                  ??_fputs 000E  
                                                  ??_putch 0001  
                                         _mix_current_step 0090  
                                               __pbssBANK0 0080  
                                               __pbssBANK1 01A1  
                                       __size_of_init_ccp1 0022  
                                                  ?___flge 0001  
                                                  ?___wmul 0001  
                                                  ?_lcd_wr 0001  
                                                  _CCP1CON 000FBD  
                                     _turn_on_current_coil 6DB4  
                                  _hex_end_effector_values 01D5  
                                            _read_new_char 01A8  
                                                  ?_roundf 004B  
                                                  ?_strlen 0001  
                                  reach_goal@stepper_motor 0007  
                                       __size_of_vfpfcnvrt 13DE  
                        turn_on_current_coil@stepper_motor 0001  
                                         _desired_baudrate 7EF3  
                                                ?_lcd_init 0001  
                                         ___lomod@dividend 0001  
                                  __end_of_init_interrupts 6BF0  
                            change_direction@stepper_motor 0001  
                                                  __Hparam 0000  
                                                  __Lparam 0000  
                                       __size_of_vsnprintf 013A  
                                               _init_PORTS 6D1E  
                                               _init_USART 6DF0  
                                          __size_of___flge 0128  
                                                  ___aodiv 39F0  
                                                  ___fladd 1458  
                                                  ___aomod 3BA4  
                                                  ___fldiv 2392  
                                                  ___flneg 6E30  
                                                  ___flmul 1EEE  
                                 __end_of_change_direction 6DB4  
                                                  ___flsub 6F7E  
                                                  ___fltol 3E6E  
                                          __size_of___wmul 002A  
                                                  ___lodiv 7CBC  
                                    ?_turn_on_current_coil 0001  
                                                  ___lomod 78CE  
                                                ?_vfprintf 0068  
                                                ?_snprintf 00BC  
                                          __size_of_lcd_wr 000C  
                                                  __pcinit 712A  
                     init_stepper@hex_coil_register_values 0009  
                                                  __ramtop 0600  
                                               _reach_goal 7274  
                                                  __ptext0 1A00  
                                                  __ptext1 7AB4  
                                                  __ptext2 79B8  
                                                  __ptext3 6D4A  
                                                  __ptext4 3D34  
                                                  __ptext5 7204  
                                                  __ptext6 007A  
                                                  __ptext7 2EDA  
                                                  __ptext8 7194  
                                                  __ptext9 6EF6  
                                                  _lcd_dat 6CCA  
                                                  _lcd_cmd 6CA0  
                                                  _lcd_str 736A  
                                                _T0CONbits 000FD5  
                                          __size_of_roundf 03E6  
                                          __size_of_strlen 005C  
                                        __end_of_init_ccp1 6C7E  
                                                _T2CONbits 000FCA  
                                             __size_of_abs 004C  
                                             __size_of_pad 00E2  
                                                  _isalpha 6F38  
                                                  _isdigit 6E72  
                                     __end_of_init_timer_0 6CA0  
                                     __end_of_init_timer_2 7630  
                                                  _islower 6EF6  
                                                  _isspace 7064  
                                                  _isupper 6EB4  
                                     __end_of_init_stepper 74A2  
                                                  atoi@neg 000E  
                                            _joint_stepper 01B9  
                                               ??_lcd_init 0003  
                                                  _strncmp 7BB4  
                                                  _toupper 7194  
                             __size_of_update_current_coil 00DA  
                                     end_of_initialization 7186  
                                                  fputc@fp 0003  
                                            __Lmediumconst 7EEE  
                                                  fputs@fp 000C  
                      state_translator_micro_to_fpga@state 0001  
                                        __end_of_vfpfcnvrt 1458  
                                    __end_of_get_reg_value 6C0C  
                                                _RCSTAbits 000FAB  
                                                  postdec1 000FE5  
                                                  postdec2 000FDD  
                                                  postinc0 000FEE  
                                                  postinc1 000FE6  
                                                  postinc2 000FDE  
                                                  roundf@e 0057  
                                                  roundf@u 005D  
                                                  roundf@x 004B  
                                                  roundf@y 0061  
                                               ??_vfprintf 006E  
                                               ??_snprintf 007C  
                                                  strlen@a 0003  
                                                  strlen@s 0001  
                                               _timer_done 01A7  
                                                _PORTEbits 000F84  
                         ??_state_translator_fpga_to_micro 0005  
                          ?_state_translator_fpga_to_micro 0003  
                                              ___fladd@grs 0042  
                                           _serial_tx_char 6C3C  
                                    __end_of_rx_char_usart 0076  
                                                _TRISCbits 000F94  
                                               lcd_dat@val 0002  
                                        __end_of_vsnprintf 3E6E  
                                               lcd_cmd@val 0002  
                                              ___fldiv@grs 002D  
                                              ___fldiv@rem 0026  
                                               _pwm_period 00CF  
                                               _state_msgs 01C9  
                                            _mix_direction 008E  
                                     _end_effector_stepper 01AB  
                                              ___flmul@grs 000E  
                                         ?_init_interrupts 0001  
                                              _CCP1CONbits 000FBD  
                                                _TXSTAbits 000FAC  
                                               lcd_str@str 0003  
                                              ?_init_PORTS 0001  
                                              ?_init_USART 0001  
                                   ??_turn_on_current_coil 0003  
                                           __end_of___flge 7EEE  
                   __end_of_state_translator_micro_to_fpga 7BB4  
                  __size_of_state_translator_micro_to_fpga 0100  
                           _state_translator_micro_to_fpga 7AB4  
                                              vfpfcnvrt@ap 0047  
                                              vfpfcnvrt@cp 004D  
                                              vfpfcnvrt@fp 0043  
                                              vfpfcnvrt@ll 0055  
                                           __end_of___wmul 6D1E  
                                              vfpfcnvrt@vp 005D  
                                           __end_of_lcd_wr 6BFC  
                                              ?_reach_goal 0007  
         state_translator_micro_to_fpga@state_machine_code 0005  
                                   __end_of_serial_tx_char 6C5C  
                                           __end_of_roundf 2BAA  
                                           __end_of_strlen 4000  
                                      start_initialization 712A  
                                          ___lodiv@divisor 0009  
                                          ___lodiv@counter 0019  
                                              __end_of_abs 7014  
                                              __end_of_pad 78CE  
                                         _hex_joint_values 01DD  
                                 init_stepper@current_coil 0003  
                                init_stepper@stepper_motor 0001  
                                              vfprintf@fmt 006A  
                                                 ??___flge 0009  
                                 __end_of_desired_baudrate 7EF7  
                                                 ??___wmul 0005  
                            __size_of_update_pwm_duty_ccp1 00C2  
                                                 ??_lcd_wr 0001  
                                              __pdataBANK0 00C8  
                                              __pdataBANK1 01C9  
                                    __size_of_init_timer_0 0022  
                                    __size_of_init_timer_2 00CC  
                                    __size_of_init_stepper 00B0  
                                                 ??_roundf 004F  
                                                 ??_strlen 0003  
                                          ?_serial_tx_char 0001  
                                                ___fladd@a 0037  
                                                ___fladd@b 0033  
                                             vsnprintf@cnt 00B4  
                                             vsnprintf@fmt 0074  
                                                ___fldiv@a 001E  
                                                ___fldiv@b 001A  
                                                ___flmul@a 0005  
                                                ___flmul@b 0001  
                                              __pbssCOMRAM 007D  
                                                ___flsub@a 0047  
                                                ___flsub@b 0043  
                                            __pcstackBANK0 00B2  
                                            __pcstackBANK1 0100  
                                         ___aodiv@dividend 0001  
                                              snprintf@fmt 00C0  
                                      __size_of_init_PORTS 002C  
                                      __size_of_init_USART 0040  
                                        __size_of_lcd_init 007E  
                                      __size_of_reach_goal 0078  
                                                _atoi$1680 0012  
                                                _atoi$1678 0010  
                                                _atoi$1679 0014  
                                             _init_timer_0 6C7E  
                                             _init_timer_2 7564  
                                                _dtoa$1502 002E  
                                             _init_stepper 73F2  
                                    init_stepper@direction 0007  
                                                __pintcode 0008  
                                            __pmediumconst 7EEE  
                                                 ?___aodiv 0001  
                                                 ?___fladd 0033  
                                                 ?___aomod 0001  
                                                 ?___fldiv 001A  
                                         ___aodiv@quotient 0013  
                                                 ?___flneg 0001  
                                                 ?___flmul 0001  
                                                 ?___flsub 0043  
                                                 ?___fltol 0065  
                                                 ?___lodiv 0001  
                                                 ?___lomod 0001  
                                      _update_current_coil 7630  
                                        ?_change_direction 0001  
                                       ??_change_direction 0003  
                                                 ?_lcd_dat 0001  
                                                 ?_lcd_cmd 0001  
                                        __size_of_vfprintf 0070  
                                                 ?_lcd_str 0003  
                                        __size_of_snprintf 0034  
                                          ___lomod@divisor 0009  
                             update_pwm_duty_ccp1@new_duty 0075  
                                          ___lomod@counter 0011  
                                                 ?_isalpha 0001  
                                                 ?_isdigit 0001  
                                         _mix_step_counter 008C  
                                                 ?_islower 0001  
                                                 ?_isspace 0001  
                                                 ?_isupper 0001  
                                                _init_ccp1 6C5C  
                                           __size_of_fputc 00E2  
                                           __size_of_fputs 0050  
                                     ?_update_current_coil 0001  
                                                 ?_strncmp 0001  
                                                 ?_toupper 0007  
                                           __size_of_putch 0006  
                                           ___wmul@product 0005  
                                                 _LATAbits 000F89  
                                                 _PIE1bits 000F9D  
                                                 _PIR1bits 000F9E  
                                                 i2u650_40 0060  
                                                 i2u650_41 005A  
                                                 i2u647_40 001C  
                                                 i2u647_41 0016  
                                                 i2u648_40 002E  
                                                 i2u648_41 0028  
                                                 i2u649_40 004E  
                                                 i2u649_41 0048  
                                                _vfpfcnvrt 007A  
                                                _xtoa$1538 002F  
                                                _xtoa$1539 0031  
                                        ___wmul@multiplier 0001  
                                                lcd_wr@val 0001  
                                             _isspace$1706 0007  
                                               ?_init_ccp1 0001  
                                    ??_update_current_coil 0003  
                                               vfpfcnvrt@c 005F  
                                                copy_data0 713E  
                                                copy_data1 715E  
                                                _vsnprintf 3D34  
                                               roundf@F525 0080  
                                                 __Hrparam 0000  
                                             ??_init_PORTS 0001  
                                             ??_init_USART 006F  
                                               vfprintf@ap 006C  
                                                 __Lrparam 0000  
                                               vfprintf@fp 0068  
                                         __size_of___aodiv 01B4  
                                         __size_of___fladd 05A8  
                                         __size_of___aomod 0190  
                                         __size_of___fldiv 0432  
                                         __size_of___flneg 0042  
                                              vsnprintf@ap 0076  
                                         __size_of___flmul 04A4  
                                         __size_of___flsub 004A  
                                         __size_of___fltol 0136  
                                         __size_of___lodiv 010A  
                                         __size_of___lomod 00EA  
                                               ?_vfpfcnvrt 0043  
                                             ??_reach_goal 000B  
                                               snprintf@ap 00C6  
                                          ___aodiv@divisor 0009  
                                          ___aodiv@counter 0011  
                                         __size_of_lcd_dat 002A  
                                         __size_of_lcd_cmd 002A  
                                         __size_of_lcd_str 0088  
                                         __size_of_isalpha 0046  
                                         __size_of_isdigit 0042  
                                         __size_of_islower 0042  
                                         __size_of_isspace 0060  
                                                 __ptext10 6EB4  
                                                 __ptext11 6F38  
                                                 __ptext20 3BA4  
                                                 __ptext12 3206  
                                                 __ptext21 39F0  
                                                 __ptext13 78CE  
                                                 __ptext30 6E72  
                                                 __ptext22 70C4  
                                                 __ptext14 7CBC  
                                                 __ptext31 6CF4  
                                                 __ptext23 77EC  
                                                 __ptext15 7BB4  
                                                 __ptext40 6BF0  
                                                 __ptext32 6C3C  
                                                 __ptext24 3FA4  
                                                 __ptext16 3652  
                                                 __ptext41 7564  
                                                 __ptext33 7274  
                                                 __ptext25 7014  
                                                 __ptext17 3430  
                                                 __ptext50 6F7E  
                                                 __ptext42 6C7E  
                                                 __ptext34 7630  
                                                 __ptext26 770A  
                                                 __ptext18 2BAA  
                                                 __ptext51 1458  
                                                 __ptext43 73F2  
                                                 __ptext35 6DB4  
                                                 __ptext27 6BDE  
                                                 __ptext19 6FC8  
                                                 __ptext52 6E30  
                                                 __ptext44 6BE4  
                                                 __ptext36 736A  
                                                 __ptext28 3822  
                                                 __ptext53 1EEE  
                                                 __ptext45 6C5C  
                                                 __ptext37 6CCA  
                                                 __ptext29 7064  
                                                 __ptext54 7DC6  
                                                 __ptext46 74A2  
                                                 __ptext38 72EC  
                                                 __ptext55 3E6E  
                                                 __ptext47 2392  
                                                 __ptext39 6CA0  
                                                 __ptext56 6D1E  
                                                 __ptext48 6DF0  
                                                 __ptext57 6BFC  
                                                 __ptext49 27C4  
                                                 __ptext58 6D7E  
                                         __size_of_isupper 0042  
                         ??_state_translator_micro_to_fpga 0003  
                          ?_state_translator_micro_to_fpga 0001  
                                   __size_of_get_reg_value 0010  
                                       __end_of_init_PORTS 6D4A  
                                                 _lcd_init 72EC  
                                       __end_of_init_USART 6E30  
                                         __size_of_strncmp 0108  
                                         __size_of_toupper 0070  
                                               ?_vsnprintf 0070  
                                            __size_of_atoi 01CE  
                                            __size_of_ctoa 0066  
                                            __size_of_main 04EE  
                                            __size_of_dtoa 0330  
                                            __size_of_otoa 0222  
                                            __size_of_stoa 01D0  
                                            __size_of_utoa 022A  
                                            __size_of_xtoa 032C  
                                              _joint_ready 01A3  
                                       __end_of_reach_goal 72EC  
                                                 _msg_sent 01A9  
                                                stoa@F1152 00C8  
                                   __size_of_rx_char_usart 006E  
                                 __size_of_init_interrupts 000C  
                                                 int$flags 007F  
                                         ??_serial_tx_char 0001  
                                                 _vfprintf 7204  
                            __size_of_turn_on_current_coil 003C  
                                                 _snprintf 6D4A  
                                                 lcd_str@i 0007  
                                              _mix_counter 01A5  
                                         ___aomod@dividend 0001  
                                           _vfpfcnvrt$1553 0051  
                                           _vfpfcnvrt$1554 0053  
                                               _INTCONbits 000FF2  
                                                 isalpha@c 0001  
                                                 isdigit@c 0001  
                                              ??_init_ccp1 0078  
                             __end_of_update_pwm_duty_ccp1 7564  
                                               vsnprintf@f 00B6  
                                               vsnprintf@n 0072  
                                               vsnprintf@s 0070  
                                                snprintf@n 00BE  
                                                snprintf@s 00BC  
                                                 intlevel2 0006  
                                                 islower@c 0001  
                                                 isspace@c 0001  
                                                 isupper@c 0001  
                                                strncmp@_l 0001  
                                                strncmp@_r 0003  
                                            _get_reg_value 6BFC  
                                            init_stepper@i 000F  
                                          ___aomod@divisor 0009  
                                              ??_vfpfcnvrt 0049  
                                                 stoa@nuls 000F  
                                          ___aomod@counter 0011  
                                           _vsnprintf$1416 00B2  
                                                 strncmp@l 0008  
                                                 strncmp@n 0005  
                                                 strncmp@r 000A  
                                                 toupper@c 0007  
                                 init_stepper@step_counter 0005  
                                            _rx_char_usart 0008  
                                __size_of_change_direction 0036  
                                            ___fladd@signs 003F  
                            update_pwm_duty_ccp1@lsbs_duty 0077  
                                             ___aodiv@sign 0012  
                                              ??_vsnprintf 0078  
                                             ___fladd@aexp 0040  
                                             ___fladd@bexp 0041  
                                             ___aomod@sign 0012  
                                              _roundf$2007 0059  
                                              _roundf$2008 0053  
