

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Jun 21 00:49:19 2023

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    53                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    55  0000                     
    56                           ; Version 2.20
    57                           ; Generated 12/02/2020 GMT
    58                           ; 
    59                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F452 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     
    91                           	psect	idataBANK0
    92  002886                     __pidataBANK0:
    93                           	callstack 0
    94                           
    95                           ;initializer for _tosc
    96  002886  37BD               	dw	14269
    97  002888  3486               	dw	13446
    98                           
    99                           ;initializer for _state_before_error
   100  00288A  0008               	dw	8
   101                           
   102                           ;initializer for _hex_end_effector_values
   103  00288C  10                 	db	16
   104  00288D  20                 	db	32
   105  00288E  40                 	db	64
   106  00288F  80                 	db	128
   107                           
   108                           ;initializer for _hex_joint_values
   109  002890  01                 	db	1
   110  002891  02                 	db	2
   111  002892  04                 	db	4
   112  002893  08                 	db	8
   113                           
   114                           	psect	mediumconst
   115  007B28                     __pmediumconst:
   116                           	callstack 0
   117  007B28  00                 	db	0
   118  007B29  0000               	dw	0
   119  007B2B  4B00               	dw	19200
   120  007B2D                     __end_of_toint:
   121                           	callstack 0
   122  007B2D                     lcd_update@F2151:
   123                           	callstack 0
   124  007B2D  80                 	db	128
   125  007B2E  C0                 	db	192
   126  007B2F  94                 	db	148
   127  007B30  D4                 	db	212
   128  007B31                     __end_oflcd_update@F2151:
   129                           	callstack 0
   130  007B31  0000               	dw	0
   131  007B33  4616               	dw	17942
   132  007B35                     __end_of_desired_baudrate:
   133                           	callstack 0
   134  007B35                     _const_msgs:
   135                           	callstack 0
   136  007B35  49                 	db	73
   137  007B36  44                 	db	68
   138  007B37  4C                 	db	76
   139  007B38  45                 	db	69
   140  007B39  3A                 	db	58
   141  007B3A  20                 	db	32
   142  007B3B  77                 	db	119
   143  007B3C  61                 	db	97
   144  007B3D  69                 	db	105
   145  007B3E  74                 	db	116
   146  007B3F  69                 	db	105
   147  007B40  6E                 	db	110
   148  007B41  67                 	db	103
   149  007B42  20                 	db	32
   150  007B43  66                 	db	102
   151  007B44  6F                 	db	111
   152  007B45  72                 	db	114
   153  007B46  00                 	db	0
   154  007B47  00                 	db	0
   155  007B48  00                 	db	0
   156  007B49  76                 	db	118
   157  007B4A  69                 	db	105
   158  007B4B  61                 	db	97
   159  007B4C  6C                 	db	108
   160  007B4D  20                 	db	32
   161  007B4E  74                 	db	116
   162  007B4F  6F                 	db	111
   163  007B50  20                 	db	32
   164  007B51  62                 	db	98
   165  007B52  65                 	db	101
   166  007B53  20                 	db	32
   167  007B54  70                 	db	112
   168  007B55  6C                 	db	108
   169  007B56  61                 	db	97
   170  007B57  63                 	db	99
   171  007B58  65                 	db	101
   172  007B59  64                 	db	100
   173  007B5A  00                 	db	0
   174  007B5B  00                 	db	0
   175  007B5C  00                 	db	0
   176  007B5D  69                 	db	105
   177  007B5E  6E                 	db	110
   178  007B5F  20                 	db	32
   179  007B60  69                 	db	105
   180  007B61  6E                 	db	110
   181  007B62  69                 	db	105
   182  007B63  74                 	db	116
   183  007B64  20                 	db	32
   184  007B65  70                 	db	112
   185  007B66  6F                 	db	111
   186  007B67  73                 	db	115
   187  007B68  00                 	db	0
   188  007B69  00                 	db	0
   189  007B6A  00                 	db	0
   190  007B6B  00                 	db	0
   191  007B6C  00                 	db	0
   192  007B6D  00                 	db	0
   193  007B6E  00                 	db	0
   194  007B6F  00                 	db	0
   195  007B70  00                 	db	0
   196  007B71  00                 	db	0
   197  007B72  00                 	db	0
   198  007B73  00                 	db	0
   199  007B74  00                 	db	0
   200  007B75  00                 	db	0
   201  007B76  00                 	db	0
   202  007B77  00                 	db	0
   203  007B78  00                 	db	0
   204  007B79  00                 	db	0
   205  007B7A  00                 	db	0
   206  007B7B  00                 	db	0
   207  007B7C  00                 	db	0
   208  007B7D  00                 	db	0
   209  007B7E  00                 	db	0
   210  007B7F  00                 	db	0
   211  007B80  00                 	db	0
   212  007B81  00                 	db	0
   213  007B82  00                 	db	0
   214  007B83  00                 	db	0
   215  007B84  00                 	db	0
   216  007B85  49                 	db	73
   217  007B86  4E                 	db	78
   218  007B87  49                 	db	73
   219  007B88  54                 	db	84
   220  007B89  5F                 	db	95
   221  007B8A  50                 	db	80
   222  007B8B  4F                 	db	79
   223  007B8C  53                 	db	83
   224  007B8D  3A                 	db	58
   225  007B8E  20                 	db	32
   226  007B8F  74                 	db	116
   227  007B90  68                 	db	104
   228  007B91  65                 	db	101
   229  007B92  20                 	db	32
   230  007B93  76                 	db	118
   231  007B94  69                 	db	105
   232  007B95  61                 	db	97
   233  007B96  6C                 	db	108
   234  007B97  00                 	db	0
   235  007B98  00                 	db	0
   236  007B99  69                 	db	105
   237  007B9A  73                 	db	115
   238  007B9B  20                 	db	32
   239  007B9C  61                 	db	97
   240  007B9D  74                 	db	116
   241  007B9E  20                 	db	32
   242  007B9F  74                 	db	116
   243  007BA0  68                 	db	104
   244  007BA1  65                 	db	101
   245  007BA2  20                 	db	32
   246  007BA3  69                 	db	105
   247  007BA4  6E                 	db	110
   248  007BA5  69                 	db	105
   249  007BA6  74                 	db	116
   250  007BA7  20                 	db	32
   251  007BA8  70                 	db	112
   252  007BA9  6F                 	db	111
   253  007BAA  73                 	db	115
   254  007BAB  00                 	db	0
   255  007BAC  00                 	db	0
   256  007BAD  70                 	db	112
   257  007BAE  72                 	db	114
   258  007BAF  6F                 	db	111
   259  007BB0  63                 	db	99
   260  007BB1  65                 	db	101
   261  007BB2  73                 	db	115
   262  007BB3  73                 	db	115
   263  007BB4  20                 	db	32
   264  007BB5  69                 	db	105
   265  007BB6  73                 	db	115
   266  007BB7  20                 	db	32
   267  007BB8  73                 	db	115
   268  007BB9  74                 	db	116
   269  007BBA  61                 	db	97
   270  007BBB  72                 	db	114
   271  007BBC  74                 	db	116
   272  007BBD  69                 	db	105
   273  007BBE  6E                 	db	110
   274  007BBF  67                 	db	103
   275  007BC0  00                 	db	0
   276  007BC1  00                 	db	0
   277  007BC2  00                 	db	0
   278  007BC3  00                 	db	0
   279  007BC4  00                 	db	0
   280  007BC5  00                 	db	0
   281  007BC6  00                 	db	0
   282  007BC7  00                 	db	0
   283  007BC8  00                 	db	0
   284  007BC9  00                 	db	0
   285  007BCA  00                 	db	0
   286  007BCB  00                 	db	0
   287  007BCC  00                 	db	0
   288  007BCD  00                 	db	0
   289  007BCE  00                 	db	0
   290  007BCF  00                 	db	0
   291  007BD0  00                 	db	0
   292  007BD1  00                 	db	0
   293  007BD2  00                 	db	0
   294  007BD3  00                 	db	0
   295  007BD4  00                 	db	0
   296  007BD5  4D                 	db	77
   297  007BD6  4F                 	db	79
   298  007BD7  56                 	db	86
   299  007BD8  45                 	db	69
   300  007BD9  4D                 	db	77
   301  007BDA  45                 	db	69
   302  007BDB  4E                 	db	78
   303  007BDC  54                 	db	84
   304  007BDD  00                 	db	0
   305  007BDE  00                 	db	0
   306  007BDF  00                 	db	0
   307  007BE0  00                 	db	0
   308  007BE1  00                 	db	0
   309  007BE2  00                 	db	0
   310  007BE3  00                 	db	0
   311  007BE4  00                 	db	0
   312  007BE5  00                 	db	0
   313  007BE6  00                 	db	0
   314  007BE7  00                 	db	0
   315  007BE8  00                 	db	0
   316  007BE9  00                 	db	0
   317  007BEA  00                 	db	0
   318  007BEB  00                 	db	0
   319  007BEC  00                 	db	0
   320  007BED  00                 	db	0
   321  007BEE  00                 	db	0
   322  007BEF  00                 	db	0
   323  007BF0  00                 	db	0
   324  007BF1  00                 	db	0
   325  007BF2  00                 	db	0
   326  007BF3  00                 	db	0
   327  007BF4  00                 	db	0
   328  007BF5  00                 	db	0
   329  007BF6  00                 	db	0
   330  007BF7  00                 	db	0
   331  007BF8  00                 	db	0
   332  007BF9  00                 	db	0
   333  007BFA  00                 	db	0
   334  007BFB  00                 	db	0
   335  007BFC  00                 	db	0
   336  007BFD  00                 	db	0
   337  007BFE  00                 	db	0
   338  007BFF  00                 	db	0
   339  007C00  00                 	db	0
   340  007C01  00                 	db	0
   341  007C02  00                 	db	0
   342  007C03  00                 	db	0
   343  007C04  00                 	db	0
   344  007C05  00                 	db	0
   345  007C06  00                 	db	0
   346  007C07  00                 	db	0
   347  007C08  00                 	db	0
   348  007C09  00                 	db	0
   349  007C0A  00                 	db	0
   350  007C0B  00                 	db	0
   351  007C0C  00                 	db	0
   352  007C0D  00                 	db	0
   353  007C0E  00                 	db	0
   354  007C0F  00                 	db	0
   355  007C10  00                 	db	0
   356  007C11  00                 	db	0
   357  007C12  00                 	db	0
   358  007C13  00                 	db	0
   359  007C14  00                 	db	0
   360  007C15  00                 	db	0
   361  007C16  00                 	db	0
   362  007C17  00                 	db	0
   363  007C18  00                 	db	0
   364  007C19  00                 	db	0
   365  007C1A  00                 	db	0
   366  007C1B  00                 	db	0
   367  007C1C  00                 	db	0
   368  007C1D  00                 	db	0
   369  007C1E  00                 	db	0
   370  007C1F  00                 	db	0
   371  007C20  00                 	db	0
   372  007C21  00                 	db	0
   373  007C22  00                 	db	0
   374  007C23  00                 	db	0
   375  007C24  00                 	db	0
   376  007C25  4F                 	db	79
   377  007C26  56                 	db	86
   378  007C27  45                 	db	69
   379  007C28  4E                 	db	78
   380  007C29  3A                 	db	58
   381  007C2A  00                 	db	0
   382  007C2B  00                 	db	0
   383  007C2C  00                 	db	0
   384  007C2D  00                 	db	0
   385  007C2E  00                 	db	0
   386  007C2F  00                 	db	0
   387  007C30  00                 	db	0
   388  007C31  00                 	db	0
   389  007C32  00                 	db	0
   390  007C33  00                 	db	0
   391  007C34  00                 	db	0
   392  007C35  00                 	db	0
   393  007C36  00                 	db	0
   394  007C37  00                 	db	0
   395  007C38  00                 	db	0
   396  007C39  76                 	db	118
   397  007C3A  69                 	db	105
   398  007C3B  61                 	db	97
   399  007C3C  6C                 	db	108
   400  007C3D  20                 	db	32
   401  007C3E  68                 	db	104
   402  007C3F  61                 	db	97
   403  007C40  73                 	db	115
   404  007C41  20                 	db	32
   405  007C42  72                 	db	114
   406  007C43  65                 	db	101
   407  007C44  61                 	db	97
   408  007C45  63                 	db	99
   409  007C46  68                 	db	104
   410  007C47  65                 	db	101
   411  007C48  64                 	db	100
   412  007C49  00                 	db	0
   413  007C4A  00                 	db	0
   414  007C4B  00                 	db	0
   415  007C4C  00                 	db	0
   416  007C4D  74                 	db	116
   417  007C4E  68                 	db	104
   418  007C4F  65                 	db	101
   419  007C50  20                 	db	32
   420  007C51  6F                 	db	111
   421  007C52  76                 	db	118
   422  007C53  65                 	db	101
   423  007C54  6E                 	db	110
   424  007C55  00                 	db	0
   425  007C56  00                 	db	0
   426  007C57  00                 	db	0
   427  007C58  00                 	db	0
   428  007C59  00                 	db	0
   429  007C5A  00                 	db	0
   430  007C5B  00                 	db	0
   431  007C5C  00                 	db	0
   432  007C5D  00                 	db	0
   433  007C5E  00                 	db	0
   434  007C5F  00                 	db	0
   435  007C60  00                 	db	0
   436  007C61  00                 	db	0
   437  007C62  00                 	db	0
   438  007C63  00                 	db	0
   439  007C64  00                 	db	0
   440  007C65  00                 	db	0
   441  007C66  00                 	db	0
   442  007C67  00                 	db	0
   443  007C68  00                 	db	0
   444  007C69  00                 	db	0
   445  007C6A  00                 	db	0
   446  007C6B  00                 	db	0
   447  007C6C  00                 	db	0
   448  007C6D  00                 	db	0
   449  007C6E  00                 	db	0
   450  007C6F  00                 	db	0
   451  007C70  00                 	db	0
   452  007C71  00                 	db	0
   453  007C72  00                 	db	0
   454  007C73  00                 	db	0
   455  007C74  00                 	db	0
   456  007C75  4F                 	db	79
   457  007C76  56                 	db	86
   458  007C77  45                 	db	69
   459  007C78  4E                 	db	78
   460  007C79  3A                 	db	58
   461  007C7A  20                 	db	32
   462  007C7B  72                 	db	114
   463  007C7C  65                 	db	101
   464  007C7D  61                 	db	97
   465  007C7E  63                 	db	99
   466  007C7F  68                 	db	104
   467  007C80  69                 	db	105
   468  007C81  6E                 	db	110
   469  007C82  67                 	db	103
   470  007C83  20                 	db	32
   471  007C84  74                 	db	116
   472  007C85  68                 	db	104
   473  007C86  65                 	db	101
   474  007C87  00                 	db	0
   475  007C88  00                 	db	0
   476  007C89  63                 	db	99
   477  007C8A  6F                 	db	111
   478  007C8B  72                 	db	114
   479  007C8C  72                 	db	114
   480  007C8D  65                 	db	101
   481  007C8E  63                 	db	99
   482  007C8F  74                 	db	116
   483  007C90  20                 	db	32
   484  007C91  74                 	db	116
   485  007C92  65                 	db	101
   486  007C93  6D                 	db	109
   487  007C94  70                 	db	112
   488  007C95  65                 	db	101
   489  007C96  72                 	db	114
   490  007C97  61                 	db	97
   491  007C98  74                 	db	116
   492  007C99  75                 	db	117
   493  007C9A  72                 	db	114
   494  007C9B  65                 	db	101
   495  007C9C  00                 	db	0
   496  007C9D  00                 	db	0
   497  007C9E  00                 	db	0
   498  007C9F  00                 	db	0
   499  007CA0  00                 	db	0
   500  007CA1  00                 	db	0
   501  007CA2  00                 	db	0
   502  007CA3  00                 	db	0
   503  007CA4  00                 	db	0
   504  007CA5  00                 	db	0
   505  007CA6  00                 	db	0
   506  007CA7  00                 	db	0
   507  007CA8  00                 	db	0
   508  007CA9  00                 	db	0
   509  007CAA  00                 	db	0
   510  007CAB  00                 	db	0
   511  007CAC  00                 	db	0
   512  007CAD  00                 	db	0
   513  007CAE  00                 	db	0
   514  007CAF  00                 	db	0
   515  007CB0  00                 	db	0
   516  007CB1  00                 	db	0
   517  007CB2  00                 	db	0
   518  007CB3  00                 	db	0
   519  007CB4  00                 	db	0
   520  007CB5  00                 	db	0
   521  007CB6  00                 	db	0
   522  007CB7  00                 	db	0
   523  007CB8  00                 	db	0
   524  007CB9  00                 	db	0
   525  007CBA  00                 	db	0
   526  007CBB  00                 	db	0
   527  007CBC  00                 	db	0
   528  007CBD  00                 	db	0
   529  007CBE  00                 	db	0
   530  007CBF  00                 	db	0
   531  007CC0  00                 	db	0
   532  007CC1  00                 	db	0
   533  007CC2  00                 	db	0
   534  007CC3  00                 	db	0
   535  007CC4  00                 	db	0
   536  007CC5  47                 	db	71
   537  007CC6  52                 	db	82
   538  007CC7  41                 	db	65
   539  007CC8  53                 	db	83
   540  007CC9  50                 	db	80
   541  007CCA  49                 	db	73
   542  007CCB  4E                 	db	78
   543  007CCC  47                 	db	71
   544  007CCD  3A                 	db	58
   545  007CCE  20                 	db	32
   546  007CCF  74                 	db	116
   547  007CD0  68                 	db	104
   548  007CD1  65                 	db	101
   549  007CD2  20                 	db	32
   550  007CD3  76                 	db	118
   551  007CD4  69                 	db	105
   552  007CD5  61                 	db	97
   553  007CD6  6C                 	db	108
   554  007CD7  00                 	db	0
   555  007CD8  00                 	db	0
   556  007CD9  68                 	db	104
   557  007CDA  61                 	db	97
   558  007CDB  73                 	db	115
   559  007CDC  20                 	db	32
   560  007CDD  72                 	db	114
   561  007CDE  65                 	db	101
   562  007CDF  61                 	db	97
   563  007CE0  63                 	db	99
   564  007CE1  68                 	db	104
   565  007CE2  65                 	db	101
   566  007CE3  64                 	db	100
   567  007CE4  20                 	db	32
   568  007CE5  74                 	db	116
   569  007CE6  68                 	db	104
   570  007CE7  65                 	db	101
   571  007CE8  00                 	db	0
   572  007CE9  00                 	db	0
   573  007CEA  00                 	db	0
   574  007CEB  00                 	db	0
   575  007CEC  00                 	db	0
   576  007CED  6D                 	db	109
   577  007CEE  69                 	db	105
   578  007CEF  78                 	db	120
   579  007CF0  69                 	db	105
   580  007CF1  6E                 	db	110
   581  007CF2  67                 	db	103
   582  007CF3  20                 	db	32
   583  007CF4  73                 	db	115
   584  007CF5  74                 	db	116
   585  007CF6  61                 	db	97
   586  007CF7  74                 	db	116
   587  007CF8  69                 	db	105
   588  007CF9  6F                 	db	111
   589  007CFA  6E                 	db	110
   590  007CFB  00                 	db	0
   591  007CFC  00                 	db	0
   592  007CFD  00                 	db	0
   593  007CFE  00                 	db	0
   594  007CFF  00                 	db	0
   595  007D00  00                 	db	0
   596  007D01  00                 	db	0
   597  007D02  00                 	db	0
   598  007D03  00                 	db	0
   599  007D04  00                 	db	0
   600  007D05  00                 	db	0
   601  007D06  00                 	db	0
   602  007D07  00                 	db	0
   603  007D08  00                 	db	0
   604  007D09  00                 	db	0
   605  007D0A  00                 	db	0
   606  007D0B  00                 	db	0
   607  007D0C  00                 	db	0
   608  007D0D  00                 	db	0
   609  007D0E  00                 	db	0
   610  007D0F  00                 	db	0
   611  007D10  00                 	db	0
   612  007D11  00                 	db	0
   613  007D12  00                 	db	0
   614  007D13  00                 	db	0
   615  007D14  00                 	db	0
   616  007D15  47                 	db	71
   617  007D16  52                 	db	82
   618  007D17  41                 	db	65
   619  007D18  53                 	db	83
   620  007D19  50                 	db	80
   621  007D1A  49                 	db	73
   622  007D1B  4E                 	db	78
   623  007D1C  47                 	db	71
   624  007D1D  3A                 	db	58
   625  007D1E  00                 	db	0
   626  007D1F  00                 	db	0
   627  007D20  00                 	db	0
   628  007D21  00                 	db	0
   629  007D22  00                 	db	0
   630  007D23  00                 	db	0
   631  007D24  00                 	db	0
   632  007D25  00                 	db	0
   633  007D26  00                 	db	0
   634  007D27  00                 	db	0
   635  007D28  00                 	db	0
   636  007D29  67                 	db	103
   637  007D2A  72                 	db	114
   638  007D2B  61                 	db	97
   639  007D2C  73                 	db	115
   640  007D2D  70                 	db	112
   641  007D2E  69                 	db	105
   642  007D2F  6E                 	db	110
   643  007D30  67                 	db	103
   644  007D31  20                 	db	32
   645  007D32  68                 	db	104
   646  007D33  61                 	db	97
   647  007D34  73                 	db	115
   648  007D35  00                 	db	0
   649  007D36  00                 	db	0
   650  007D37  00                 	db	0
   651  007D38  00                 	db	0
   652  007D39  00                 	db	0
   653  007D3A  00                 	db	0
   654  007D3B  00                 	db	0
   655  007D3C  00                 	db	0
   656  007D3D  73                 	db	115
   657  007D3E  74                 	db	116
   658  007D3F  61                 	db	97
   659  007D40  72                 	db	114
   660  007D41  74                 	db	116
   661  007D42  65                 	db	101
   662  007D43  64                 	db	100
   663  007D44  00                 	db	0
   664  007D45  00                 	db	0
   665  007D46  00                 	db	0
   666  007D47  00                 	db	0
   667  007D48  00                 	db	0
   668  007D49  00                 	db	0
   669  007D4A  00                 	db	0
   670  007D4B  00                 	db	0
   671  007D4C  00                 	db	0
   672  007D4D  00                 	db	0
   673  007D4E  00                 	db	0
   674  007D4F  00                 	db	0
   675  007D50  00                 	db	0
   676  007D51  00                 	db	0
   677  007D52  00                 	db	0
   678  007D53  00                 	db	0
   679  007D54  00                 	db	0
   680  007D55  00                 	db	0
   681  007D56  00                 	db	0
   682  007D57  00                 	db	0
   683  007D58  00                 	db	0
   684  007D59  00                 	db	0
   685  007D5A  00                 	db	0
   686  007D5B  00                 	db	0
   687  007D5C  00                 	db	0
   688  007D5D  00                 	db	0
   689  007D5E  00                 	db	0
   690  007D5F  00                 	db	0
   691  007D60  00                 	db	0
   692  007D61  00                 	db	0
   693  007D62  00                 	db	0
   694  007D63  00                 	db	0
   695  007D64  00                 	db	0
   696  007D65  4D                 	db	77
   697  007D66  49                 	db	73
   698  007D67  58                 	db	88
   699  007D68  49                 	db	73
   700  007D69  4E                 	db	78
   701  007D6A  47                 	db	71
   702  007D6B  3A                 	db	58
   703  007D6C  20                 	db	32
   704  007D6D  74                 	db	116
   705  007D6E  68                 	db	104
   706  007D6F  65                 	db	101
   707  007D70  20                 	db	32
   708  007D71  76                 	db	118
   709  007D72  69                 	db	105
   710  007D73  61                 	db	97
   711  007D74  6C                 	db	108
   712  007D75  00                 	db	0
   713  007D76  00                 	db	0
   714  007D77  00                 	db	0
   715  007D78  00                 	db	0
   716  007D79  77                 	db	119
   717  007D7A  69                 	db	105
   718  007D7B  6C                 	db	108
   719  007D7C  6C                 	db	108
   720  007D7D  20                 	db	32
   721  007D7E  6E                 	db	110
   722  007D7F  6F                 	db	111
   723  007D80  77                 	db	119
   724  007D81  20                 	db	32
   725  007D82  62                 	db	98
   726  007D83  65                 	db	101
   727  007D84  00                 	db	0
   728  007D85  00                 	db	0
   729  007D86  00                 	db	0
   730  007D87  00                 	db	0
   731  007D88  00                 	db	0
   732  007D89  00                 	db	0
   733  007D8A  00                 	db	0
   734  007D8B  00                 	db	0
   735  007D8C  00                 	db	0
   736  007D8D  74                 	db	116
   737  007D8E  69                 	db	105
   738  007D8F  6C                 	db	108
   739  007D90  74                 	db	116
   740  007D91  65                 	db	101
   741  007D92  64                 	db	100
   742  007D93  20                 	db	32
   743  007D94  31                 	db	49
   744  007D95  30                 	db	48
   745  007D96  20                 	db	32
   746  007D97  74                 	db	116
   747  007D98  69                 	db	105
   748  007D99  6D                 	db	109
   749  007D9A  65                 	db	101
   750  007D9B  73                 	db	115
   751  007D9C  00                 	db	0
   752  007D9D  00                 	db	0
   753  007D9E  00                 	db	0
   754  007D9F  00                 	db	0
   755  007DA0  00                 	db	0
   756  007DA1  00                 	db	0
   757  007DA2  00                 	db	0
   758  007DA3  00                 	db	0
   759  007DA4  00                 	db	0
   760  007DA5  00                 	db	0
   761  007DA6  00                 	db	0
   762  007DA7  00                 	db	0
   763  007DA8  00                 	db	0
   764  007DA9  00                 	db	0
   765  007DAA  00                 	db	0
   766  007DAB  00                 	db	0
   767  007DAC  00                 	db	0
   768  007DAD  00                 	db	0
   769  007DAE  00                 	db	0
   770  007DAF  00                 	db	0
   771  007DB0  00                 	db	0
   772  007DB1  00                 	db	0
   773  007DB2  00                 	db	0
   774  007DB3  00                 	db	0
   775  007DB4  00                 	db	0
   776  007DB5  44                 	db	68
   777  007DB6  49                 	db	73
   778  007DB7  4C                 	db	76
   779  007DB8  55                 	db	85
   780  007DB9  54                 	db	84
   781  007DBA  49                 	db	73
   782  007DBB  4E                 	db	78
   783  007DBC  47                 	db	71
   784  007DBD  3A                 	db	58
   785  007DBE  20                 	db	32
   786  007DBF  74                 	db	116
   787  007DC0  68                 	db	104
   788  007DC1  65                 	db	101
   789  007DC2  00                 	db	0
   790  007DC3  00                 	db	0
   791  007DC4  00                 	db	0
   792  007DC5  00                 	db	0
   793  007DC6  00                 	db	0
   794  007DC7  00                 	db	0
   795  007DC8  00                 	db	0
   796  007DC9  76                 	db	118
   797  007DCA  61                 	db	97
   798  007DCB  63                 	db	99
   799  007DCC  63                 	db	99
   800  007DCD  69                 	db	105
   801  007DCE  6E                 	db	110
   802  007DCF  65                 	db	101
   803  007DD0  20                 	db	32
   804  007DD1  77                 	db	119
   805  007DD2  69                 	db	105
   806  007DD3  6C                 	db	108
   807  007DD4  6C                 	db	108
   808  007DD5  20                 	db	32
   809  007DD6  6E                 	db	110
   810  007DD7  6F                 	db	111
   811  007DD8  77                 	db	119
   812  007DD9  00                 	db	0
   813  007DDA  00                 	db	0
   814  007DDB  00                 	db	0
   815  007DDC  00                 	db	0
   816  007DDD  62                 	db	98
   817  007DDE  65                 	db	101
   818  007DDF  20                 	db	32
   819  007DE0  64                 	db	100
   820  007DE1  69                 	db	105
   821  007DE2  6C                 	db	108
   822  007DE3  75                 	db	117
   823  007DE4  74                 	db	116
   824  007DE5  65                 	db	101
   825  007DE6  64                 	db	100
   826  007DE7  00                 	db	0
   827  007DE8  00                 	db	0
   828  007DE9  00                 	db	0
   829  007DEA  00                 	db	0
   830  007DEB  00                 	db	0
   831  007DEC  00                 	db	0
   832  007DED  00                 	db	0
   833  007DEE  00                 	db	0
   834  007DEF  00                 	db	0
   835  007DF0  00                 	db	0
   836  007DF1  00                 	db	0
   837  007DF2  00                 	db	0
   838  007DF3  00                 	db	0
   839  007DF4  00                 	db	0
   840  007DF5  00                 	db	0
   841  007DF6  00                 	db	0
   842  007DF7  00                 	db	0
   843  007DF8  00                 	db	0
   844  007DF9  00                 	db	0
   845  007DFA  00                 	db	0
   846  007DFB  00                 	db	0
   847  007DFC  00                 	db	0
   848  007DFD  00                 	db	0
   849  007DFE  00                 	db	0
   850  007DFF  00                 	db	0
   851  007E00  00                 	db	0
   852  007E01  00                 	db	0
   853  007E02  00                 	db	0
   854  007E03  00                 	db	0
   855  007E04  00                 	db	0
   856  007E05  52                 	db	82
   857  007E06  45                 	db	69
   858  007E07  4C                 	db	76
   859  007E08  45                 	db	69
   860  007E09  41                 	db	65
   861  007E0A  53                 	db	83
   862  007E0B  49                 	db	73
   863  007E0C  4E                 	db	78
   864  007E0D  47                 	db	71
   865  007E0E  3A                 	db	58
   866  007E0F  00                 	db	0
   867  007E10  00                 	db	0
   868  007E11  00                 	db	0
   869  007E12  00                 	db	0
   870  007E13  00                 	db	0
   871  007E14  00                 	db	0
   872  007E15  00                 	db	0
   873  007E16  00                 	db	0
   874  007E17  00                 	db	0
   875  007E18  00                 	db	0
   876  007E19  72                 	db	114
   877  007E1A  65                 	db	101
   878  007E1B  6C                 	db	108
   879  007E1C  65                 	db	101
   880  007E1D  61                 	db	97
   881  007E1E  73                 	db	115
   882  007E1F  69                 	db	105
   883  007E20  6E                 	db	110
   884  007E21  67                 	db	103
   885  007E22  20                 	db	32
   886  007E23  68                 	db	104
   887  007E24  61                 	db	97
   888  007E25  73                 	db	115
   889  007E26  00                 	db	0
   890  007E27  00                 	db	0
   891  007E28  00                 	db	0
   892  007E29  00                 	db	0
   893  007E2A  00                 	db	0
   894  007E2B  00                 	db	0
   895  007E2C  00                 	db	0
   896  007E2D  73                 	db	115
   897  007E2E  74                 	db	116
   898  007E2F  61                 	db	97
   899  007E30  72                 	db	114
   900  007E31  74                 	db	116
   901  007E32  65                 	db	101
   902  007E33  64                 	db	100
   903  007E34  00                 	db	0
   904  007E35  00                 	db	0
   905  007E36  00                 	db	0
   906  007E37  00                 	db	0
   907  007E38  00                 	db	0
   908  007E39  00                 	db	0
   909  007E3A  00                 	db	0
   910  007E3B  00                 	db	0
   911  007E3C  00                 	db	0
   912  007E3D  00                 	db	0
   913  007E3E  00                 	db	0
   914  007E3F  00                 	db	0
   915  007E40  00                 	db	0
   916  007E41  00                 	db	0
   917  007E42  00                 	db	0
   918  007E43  00                 	db	0
   919  007E44  00                 	db	0
   920  007E45  00                 	db	0
   921  007E46  00                 	db	0
   922  007E47  00                 	db	0
   923  007E48  00                 	db	0
   924  007E49  00                 	db	0
   925  007E4A  00                 	db	0
   926  007E4B  00                 	db	0
   927  007E4C  00                 	db	0
   928  007E4D  00                 	db	0
   929  007E4E  00                 	db	0
   930  007E4F  00                 	db	0
   931  007E50  00                 	db	0
   932  007E51  00                 	db	0
   933  007E52  00                 	db	0
   934  007E53  00                 	db	0
   935  007E54  00                 	db	0
   936  007E55  50                 	db	80
   937  007E56  49                 	db	73
   938  007E57  43                 	db	67
   939  007E58  4B                 	db	75
   940  007E59  5F                 	db	95
   941  007E5A  55                 	db	85
   942  007E5B  50                 	db	80
   943  007E5C  3A                 	db	58
   944  007E5D  20                 	db	32
   945  007E5E  74                 	db	116
   946  007E5F  68                 	db	104
   947  007E60  65                 	db	101
   948  007E61  20                 	db	32
   949  007E62  76                 	db	118
   950  007E63  69                 	db	105
   951  007E64  61                 	db	97
   952  007E65  6C                 	db	108
   953  007E66  00                 	db	0
   954  007E67  00                 	db	0
   955  007E68  00                 	db	0
   956  007E69  68                 	db	104
   957  007E6A  61                 	db	97
   958  007E6B  73                 	db	115
   959  007E6C  20                 	db	32
   960  007E6D  72                 	db	114
   961  007E6E  65                 	db	101
   962  007E6F  61                 	db	97
   963  007E70  63                 	db	99
   964  007E71  68                 	db	104
   965  007E72  65                 	db	101
   966  007E73  64                 	db	100
   967  007E74  20                 	db	32
   968  007E75  74                 	db	116
   969  007E76  68                 	db	104
   970  007E77  65                 	db	101
   971  007E78  00                 	db	0
   972  007E79  00                 	db	0
   973  007E7A  00                 	db	0
   974  007E7B  00                 	db	0
   975  007E7C  00                 	db	0
   976  007E7D  70                 	db	112
   977  007E7E  69                 	db	105
   978  007E7F  63                 	db	99
   979  007E80  6B                 	db	107
   980  007E81  20                 	db	32
   981  007E82  75                 	db	117
   982  007E83  70                 	db	112
   983  007E84  20                 	db	32
   984  007E85  73                 	db	115
   985  007E86  74                 	db	116
   986  007E87  61                 	db	97
   987  007E88  74                 	db	116
   988  007E89  69                 	db	105
   989  007E8A  6F                 	db	111
   990  007E8B  6E                 	db	110
   991  007E8C  00                 	db	0
   992  007E8D  00                 	db	0
   993  007E8E  00                 	db	0
   994  007E8F  00                 	db	0
   995  007E90  00                 	db	0
   996  007E91  00                 	db	0
   997  007E92  00                 	db	0
   998  007E93  00                 	db	0
   999  007E94  00                 	db	0
  1000  007E95  00                 	db	0
  1001  007E96  00                 	db	0
  1002  007E97  00                 	db	0
  1003  007E98  00                 	db	0
  1004  007E99  00                 	db	0
  1005  007E9A  00                 	db	0
  1006  007E9B  00                 	db	0
  1007  007E9C  00                 	db	0
  1008  007E9D  00                 	db	0
  1009  007E9E  00                 	db	0
  1010  007E9F  00                 	db	0
  1011  007EA0  00                 	db	0
  1012  007EA1  00                 	db	0
  1013  007EA2  00                 	db	0
  1014  007EA3  00                 	db	0
  1015  007EA4  00                 	db	0
  1016  007EA5  50                 	db	80
  1017  007EA6  49                 	db	73
  1018  007EA7  43                 	db	67
  1019  007EA8  4B                 	db	75
  1020  007EA9  5F                 	db	95
  1021  007EAA  55                 	db	85
  1022  007EAB  50                 	db	80
  1023  007EAC  3A                 	db	58
  1024  007EAD  20                 	db	32
  1025  007EAE  70                 	db	112
  1026  007EAF  6C                 	db	108
  1027  007EB0  65                 	db	101
  1028  007EB1  61                 	db	97
  1029  007EB2  73                 	db	115
  1030  007EB3  65                 	db	101
  1031  007EB4  00                 	db	0
  1032  007EB5  00                 	db	0
  1033  007EB6  00                 	db	0
  1034  007EB7  00                 	db	0
  1035  007EB8  00                 	db	0
  1036  007EB9  70                 	db	112
  1037  007EBA  69                 	db	105
  1038  007EBB  63                 	db	99
  1039  007EBC  6B                 	db	107
  1040  007EBD  20                 	db	32
  1041  007EBE  75                 	db	117
  1042  007EBF  70                 	db	112
  1043  007EC0  20                 	db	32
  1044  007EC1  74                 	db	116
  1045  007EC2  68                 	db	104
  1046  007EC3  65                 	db	101
  1047  007EC4  00                 	db	0
  1048  007EC5  00                 	db	0
  1049  007EC6  00                 	db	0
  1050  007EC7  00                 	db	0
  1051  007EC8  00                 	db	0
  1052  007EC9  00                 	db	0
  1053  007ECA  00                 	db	0
  1054  007ECB  00                 	db	0
  1055  007ECC  00                 	db	0
  1056  007ECD  76                 	db	118
  1057  007ECE  69                 	db	105
  1058  007ECF  61                 	db	97
  1059  007ED0  6C                 	db	108
  1060  007ED1  20                 	db	32
  1061  007ED2  62                 	db	98
  1062  007ED3  65                 	db	101
  1063  007ED4  66                 	db	102
  1064  007ED5  6F                 	db	111
  1065  007ED6  72                 	db	114
  1066  007ED7  65                 	db	101
  1067  007ED8  00                 	db	0
  1068  007ED9  00                 	db	0
  1069  007EDA  00                 	db	0
  1070  007EDB  00                 	db	0
  1071  007EDC  00                 	db	0
  1072  007EDD  00                 	db	0
  1073  007EDE  00                 	db	0
  1074  007EDF  00                 	db	0
  1075  007EE0  00                 	db	0
  1076  007EE1  74                 	db	116
  1077  007EE2  69                 	db	105
  1078  007EE3  6D                 	db	109
  1079  007EE4  65                 	db	101
  1080  007EE5  6F                 	db	111
  1081  007EE6  75                 	db	117
  1082  007EE7  74                 	db	116
  1083  007EE8  00                 	db	0
  1084  007EE9  00                 	db	0
  1085  007EEA  00                 	db	0
  1086  007EEB  00                 	db	0
  1087  007EEC  00                 	db	0
  1088  007EED  00                 	db	0
  1089  007EEE  00                 	db	0
  1090  007EEF  00                 	db	0
  1091  007EF0  00                 	db	0
  1092  007EF1  00                 	db	0
  1093  007EF2  00                 	db	0
  1094  007EF3  00                 	db	0
  1095  007EF4  00                 	db	0
  1096  007EF5  50                 	db	80
  1097  007EF6  49                 	db	73
  1098  007EF7  43                 	db	67
  1099  007EF8  4B                 	db	75
  1100  007EF9  5F                 	db	95
  1101  007EFA  55                 	db	85
  1102  007EFB  50                 	db	80
  1103  007EFC  3A                 	db	58
  1104  007EFD  20                 	db	32
  1105  007EFE  74                 	db	116
  1106  007EFF  68                 	db	104
  1107  007F00  65                 	db	101
  1108  007F01  20                 	db	32
  1109  007F02  76                 	db	118
  1110  007F03  69                 	db	105
  1111  007F04  61                 	db	97
  1112  007F05  6C                 	db	108
  1113  007F06  00                 	db	0
  1114  007F07  00                 	db	0
  1115  007F08  00                 	db	0
  1116  007F09  68                 	db	104
  1117  007F0A  61                 	db	97
  1118  007F0B  73                 	db	115
  1119  007F0C  20                 	db	32
  1120  007F0D  62                 	db	98
  1121  007F0E  65                 	db	101
  1122  007F0F  65                 	db	101
  1123  007F10  6E                 	db	110
  1124  007F11  20                 	db	32
  1125  007F12  70                 	db	112
  1126  007F13  69                 	db	105
  1127  007F14  63                 	db	99
  1128  007F15  6B                 	db	107
  1129  007F16  65                 	db	101
  1130  007F17  64                 	db	100
  1131  007F18  00                 	db	0
  1132  007F19  00                 	db	0
  1133  007F1A  00                 	db	0
  1134  007F1B  00                 	db	0
  1135  007F1C  00                 	db	0
  1136  007F1D  67                 	db	103
  1137  007F1E  6F                 	db	111
  1138  007F1F  69                 	db	105
  1139  007F20  6E                 	db	110
  1140  007F21  67                 	db	103
  1141  007F22  20                 	db	32
  1142  007F23  62                 	db	98
  1143  007F24  61                 	db	97
  1144  007F25  63                 	db	99
  1145  007F26  6B                 	db	107
  1146  007F27  20                 	db	32
  1147  007F28  74                 	db	116
  1148  007F29  6F                 	db	111
  1149  007F2A  00                 	db	0
  1150  007F2B  00                 	db	0
  1151  007F2C  00                 	db	0
  1152  007F2D  00                 	db	0
  1153  007F2E  00                 	db	0
  1154  007F2F  00                 	db	0
  1155  007F30  00                 	db	0
  1156  007F31  69                 	db	105
  1157  007F32  64                 	db	100
  1158  007F33  6C                 	db	108
  1159  007F34  65                 	db	101
  1160  007F35  00                 	db	0
  1161  007F36  00                 	db	0
  1162  007F37  00                 	db	0
  1163  007F38  00                 	db	0
  1164  007F39  00                 	db	0
  1165  007F3A  00                 	db	0
  1166  007F3B  00                 	db	0
  1167  007F3C  00                 	db	0
  1168  007F3D  00                 	db	0
  1169  007F3E  00                 	db	0
  1170  007F3F  00                 	db	0
  1171  007F40  00                 	db	0
  1172  007F41  00                 	db	0
  1173  007F42  00                 	db	0
  1174  007F43  00                 	db	0
  1175  007F44  00                 	db	0
  1176  007F45  54                 	db	84
  1177  007F46  52                 	db	82
  1178  007F47  41                 	db	65
  1179  007F48  53                 	db	83
  1180  007F49  48                 	db	72
  1181  007F4A  3A                 	db	58
  1182  007F4B  20                 	db	32
  1183  007F4C  74                 	db	116
  1184  007F4D  69                 	db	105
  1185  007F4E  6D                 	db	109
  1186  007F4F  65                 	db	101
  1187  007F50  6F                 	db	111
  1188  007F51  75                 	db	117
  1189  007F52  74                 	db	116
  1190  007F53  00                 	db	0
  1191  007F54  00                 	db	0
  1192  007F55  00                 	db	0
  1193  007F56  00                 	db	0
  1194  007F57  00                 	db	0
  1195  007F58  00                 	db	0
  1196  007F59  65                 	db	101
  1197  007F5A  78                 	db	120
  1198  007F5B  63                 	db	99
  1199  007F5C  65                 	db	101
  1200  007F5D  65                 	db	101
  1201  007F5E  64                 	db	100
  1202  007F5F  65                 	db	101
  1203  007F60  64                 	db	100
  1204  007F61  20                 	db	32
  1205  007F62  74                 	db	116
  1206  007F63  68                 	db	104
  1207  007F64  65                 	db	101
  1208  007F65  00                 	db	0
  1209  007F66  00                 	db	0
  1210  007F67  00                 	db	0
  1211  007F68  00                 	db	0
  1212  007F69  00                 	db	0
  1213  007F6A  00                 	db	0
  1214  007F6B  00                 	db	0
  1215  007F6C  00                 	db	0
  1216  007F6D  76                 	db	118
  1217  007F6E  69                 	db	105
  1218  007F6F  61                 	db	97
  1219  007F70  6C                 	db	108
  1220  007F71  20                 	db	32
  1221  007F72  77                 	db	119
  1222  007F73  69                 	db	105
  1223  007F74  6C                 	db	108
  1224  007F75  6C                 	db	108
  1225  007F76  20                 	db	32
  1226  007F77  62                 	db	98
  1227  007F78  65                 	db	101
  1228  007F79  00                 	db	0
  1229  007F7A  00                 	db	0
  1230  007F7B  00                 	db	0
  1231  007F7C  00                 	db	0
  1232  007F7D  00                 	db	0
  1233  007F7E  00                 	db	0
  1234  007F7F  00                 	db	0
  1235  007F80  00                 	db	0
  1236  007F81  74                 	db	116
  1237  007F82  72                 	db	114
  1238  007F83  61                 	db	97
  1239  007F84  73                 	db	115
  1240  007F85  68                 	db	104
  1241  007F86  65                 	db	101
  1242  007F87  64                 	db	100
  1243  007F88  00                 	db	0
  1244  007F89  00                 	db	0
  1245  007F8A  00                 	db	0
  1246  007F8B  00                 	db	0
  1247  007F8C  00                 	db	0
  1248  007F8D  00                 	db	0
  1249  007F8E  00                 	db	0
  1250  007F8F  00                 	db	0
  1251  007F90  00                 	db	0
  1252  007F91  00                 	db	0
  1253  007F92  00                 	db	0
  1254  007F93  00                 	db	0
  1255  007F94  00                 	db	0
  1256  007F95  45                 	db	69
  1257  007F96  52                 	db	82
  1258  007F97  52                 	db	82
  1259  007F98  4F                 	db	79
  1260  007F99  52                 	db	82
  1261  007F9A  00                 	db	0
  1262  007F9B  00                 	db	0
  1263  007F9C  00                 	db	0
  1264  007F9D  00                 	db	0
  1265  007F9E  00                 	db	0
  1266  007F9F  00                 	db	0
  1267  007FA0  00                 	db	0
  1268  007FA1  00                 	db	0
  1269  007FA2  00                 	db	0
  1270  007FA3  00                 	db	0
  1271  007FA4  00                 	db	0
  1272  007FA5  00                 	db	0
  1273  007FA6  00                 	db	0
  1274  007FA7  00                 	db	0
  1275  007FA8  00                 	db	0
  1276  007FA9  00                 	db	0
  1277  007FAA  00                 	db	0
  1278  007FAB  00                 	db	0
  1279  007FAC  00                 	db	0
  1280  007FAD  00                 	db	0
  1281  007FAE  00                 	db	0
  1282  007FAF  00                 	db	0
  1283  007FB0  00                 	db	0
  1284  007FB1  00                 	db	0
  1285  007FB2  00                 	db	0
  1286  007FB3  00                 	db	0
  1287  007FB4  00                 	db	0
  1288  007FB5  00                 	db	0
  1289  007FB6  00                 	db	0
  1290  007FB7  00                 	db	0
  1291  007FB8  00                 	db	0
  1292  007FB9  00                 	db	0
  1293  007FBA  00                 	db	0
  1294  007FBB  00                 	db	0
  1295  007FBC  00                 	db	0
  1296  007FBD  00                 	db	0
  1297  007FBE  00                 	db	0
  1298  007FBF  00                 	db	0
  1299  007FC0  00                 	db	0
  1300  007FC1  00                 	db	0
  1301  007FC2  00                 	db	0
  1302  007FC3  00                 	db	0
  1303  007FC4  00                 	db	0
  1304  007FC5  00                 	db	0
  1305  007FC6  00                 	db	0
  1306  007FC7  00                 	db	0
  1307  007FC8  00                 	db	0
  1308  007FC9  00                 	db	0
  1309  007FCA  00                 	db	0
  1310  007FCB  00                 	db	0
  1311  007FCC  00                 	db	0
  1312  007FCD  00                 	db	0
  1313  007FCE  00                 	db	0
  1314  007FCF  00                 	db	0
  1315  007FD0  00                 	db	0
  1316  007FD1  00                 	db	0
  1317  007FD2  00                 	db	0
  1318  007FD3  00                 	db	0
  1319  007FD4  00                 	db	0
  1320  007FD5  00                 	db	0
  1321  007FD6  00                 	db	0
  1322  007FD7  00                 	db	0
  1323  007FD8  00                 	db	0
  1324  007FD9  00                 	db	0
  1325  007FDA  00                 	db	0
  1326  007FDB  00                 	db	0
  1327  007FDC  00                 	db	0
  1328  007FDD  00                 	db	0
  1329  007FDE  00                 	db	0
  1330  007FDF  00                 	db	0
  1331  007FE0  00                 	db	0
  1332  007FE1  00                 	db	0
  1333  007FE2  00                 	db	0
  1334  007FE3  00                 	db	0
  1335  007FE4  00                 	db	0
  1336  007FE5                     __end_of_const_msgs:
  1337                           	callstack 0
  1338  007FE5  2400               	dw	9216
  1339  007FE7  4A74               	dw	19060
  1340  007FE9                     __end_of_fosc:
  1341                           	callstack 0
  1342  0000                     _ADCON1	set	4033
  1343  0000                     _ADRESL	set	4035
  1344  0000                     _ADRESH	set	4036
  1345  0000                     _ADCON0bits	set	4034
  1346  0000                     _ADCON0	set	4034
  1347  0000                     _TMR0H	set	4055
  1348  0000                     _TMR0L	set	4054
  1349  0000                     _PORTEbits	set	3972
  1350  0000                     _PORTD	set	3971
  1351  0000                     _TRISCbits	set	3988
  1352  0000                     _TRISC	set	3988
  1353  0000                     _PORTC	set	3970
  1354  0000                     _TRISB	set	3987
  1355  0000                     _PORTB	set	3969
  1356  0000                     _TRISA	set	3986
  1357  0000                     _PORTA	set	3968
  1358  0000                     _LATA	set	3977
  1359  0000                     _T0CON	set	4053
  1360  0000                     _PIR1bits	set	3998
  1361  0000                     _PIE1bits	set	3997
  1362  0000                     _T0CONbits	set	4053
  1363  0000                     _LATAbits	set	3977
  1364  0000                     _LATCbits	set	3979
  1365  0000                     _INTCONbits	set	4082
  1366  0000                     _RCREG	set	4014
  1367  0000                     _TXREG	set	4013
  1368  0000                     _RCSTAbits	set	4011
  1369  0000                     _TXSTAbits	set	4012
  1370  0000                     _SPBRG	set	4015
  1371  0000                     _LATC	set	3979
  1372  0000                     _LATB	set	3978
  1373  007FE9                     STR_1:
  1374  007FE9  44                 	db	68	;'D'
  1375  007FEA  65                 	db	101	;'e'
  1376  007FEB  76                 	db	118	;'v'
  1377  007FEC  69                 	db	105	;'i'
  1378  007FED  63                 	db	99	;'c'
  1379  007FEE  65                 	db	101	;'e'
  1380  007FEF  20                 	db	32
  1381  007FF0  68                 	db	104	;'h'
  1382  007FF1  61                 	db	97	;'a'
  1383  007FF2  73                 	db	115	;'s'
  1384  007FF3  20                 	db	32
  1385  007FF4  62                 	db	98	;'b'
  1386  007FF5  65                 	db	101	;'e'
  1387  007FF6  65                 	db	101	;'e'
  1388  007FF7  6E                 	db	110	;'n'
  1389  007FF8  20                 	db	32
  1390  007FF9  72                 	db	114	;'r'
  1391  007FFA  65                 	db	101	;'e'
  1392  007FFB  73                 	db	115	;'s'
  1393  007FFC  65                 	db	101	;'e'
  1394  007FFD  74                 	db	116	;'t'
  1395  007FFE  00                 	db	0
  1396  007FFF  00                 	db	0	; dummy byte at the end
  1397  0000                     
  1398                           ; #config settings
  1399                           
  1400                           	psect	cinit
  1401  00262A                     __pcinit:
  1402                           	callstack 0
  1403  00262A                     start_initialization:
  1404                           	callstack 0
  1405  00262A                     __initialization:
  1406                           	callstack 0
  1407                           
  1408                           ; Initialize objects allocated to BANK0 (14 bytes)
  1409                           ; load TBLPTR registers with __pidataBANK0
  1410  00262A  0E86               	movlw	low __pidataBANK0
  1411  00262C  6EF6               	movwf	tblptrl,c
  1412  00262E  0E28               	movlw	high __pidataBANK0
  1413  002630  6EF7               	movwf	tblptrh,c
  1414  002632  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1415  002634  6EF8               	movwf	tblptru,c
  1416  002636  EE00  F0BA         	lfsr	0,__pdataBANK0
  1417  00263A  EE10 F00E          	lfsr	1,14
  1418  00263E                     copy_data0:
  1419  00263E  0009               	tblrd		*+
  1420  002640  CFF5 FFEE          	movff	tablat,postinc0
  1421  002644  50E5               	movf	postdec1,w,c
  1422  002646  50E1               	movf	fsr1l,w,c
  1423  002648  E1FA               	bnz	copy_data0
  1424                           
  1425                           ; Clear objects allocated to BANK0 (58 bytes)
  1426  00264A  EE00  F080         	lfsr	0,__pbssBANK0
  1427  00264E  0E3A               	movlw	58
  1428  002650                     clear_0:
  1429  002650  6AEE               	clrf	postinc0,c
  1430  002652  06E8               	decf	wreg,f,c
  1431  002654  E1FD               	bnz	clear_0
  1432                           
  1433                           ; Clear objects allocated to COMRAM (16 bytes)
  1434  002656  EE00  F06F         	lfsr	0,__pbssCOMRAM
  1435  00265A  0E10               	movlw	16
  1436  00265C                     clear_1:
  1437  00265C  6AEE               	clrf	postinc0,c
  1438  00265E  06E8               	decf	wreg,f,c
  1439  002660  E1FD               	bnz	clear_1
  1440  002662                     end_of_initialization:
  1441                           	callstack 0
  1442  002662                     __end_of__initialization:
  1443                           	callstack 0
  1444  002662  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1445  002664  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1446  002666  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1447  002668  6EF8               	movwf	tblptru,c
  1448  00266A  0100               	movlb	0
  1449  00266C  EF3C  F000         	goto	_main	;jump to C main() function
  1450                           
  1451                           	psect	bssCOMRAM
  1452  00006F                     __pbssCOMRAM:
  1453                           	callstack 0
  1454  00006F                     _end_effector_homed:
  1455                           	callstack 0
  1456  00006F                     	ds	2
  1457  000071                     _grasping_joint_position_reached:
  1458                           	callstack 0
  1459  000071                     	ds	2
  1460  000073                     _trash_counter:
  1461                           	callstack 0
  1462  000073                     	ds	2
  1463  000075                     _dilution_done:
  1464                           	callstack 0
  1465  000075                     	ds	2
  1466  000077                     _mix_counter:
  1467                           	callstack 0
  1468  000077                     	ds	2
  1469  000079                     _timer_done:
  1470                           	callstack 0
  1471  000079                     	ds	1
  1472  00007A                     _read_new_char:
  1473                           	callstack 0
  1474  00007A                     	ds	1
  1475  00007B                     _idle_msg_sent:
  1476                           	callstack 0
  1477  00007B                     	ds	1
  1478  00007C                     _state_changed:
  1479                           	callstack 0
  1480  00007C                     	ds	1
  1481  00007D                     _state:
  1482                           	callstack 0
  1483  00007D                     	ds	2
  1484                           
  1485                           	psect	bssBANK0
  1486  000080                     __pbssBANK0:
  1487                           	callstack 0
  1488  000080                     roundf@F525:
  1489                           	callstack 0
  1490  000080                     	ds	4
  1491  000084                     _temperature_scaled:
  1492                           	callstack 0
  1493  000084                     	ds	2
  1494  000086                     _temperature_int:
  1495                           	callstack 0
  1496  000086                     	ds	2
  1497  000088                     _joint_dilutor_homed:
  1498                           	callstack 0
  1499  000088                     	ds	2
  1500  00008A                     _joint_homed:
  1501                           	callstack 0
  1502  00008A                     	ds	2
  1503  00008C                     _diluting_position_reached:
  1504                           	callstack 0
  1505  00008C                     	ds	2
  1506  00008E                     _grasping_ee_position_reached:
  1507                           	callstack 0
  1508  00008E                     	ds	2
  1509  000090                     _mix_step_counter:
  1510                           	callstack 0
  1511  000090                     	ds	2
  1512  000092                     _mix_direction:
  1513                           	callstack 0
  1514  000092                     	ds	2
  1515  000094                     _mix_current_step:
  1516                           	callstack 0
  1517  000094                     	ds	2
  1518  000096                     _joint_dilutor_stepper:
  1519                           	callstack 0
  1520  000096                     	ds	12
  1521  0000A2                     _end_effector_stepper:
  1522                           	callstack 0
  1523  0000A2                     	ds	12
  1524  0000AE                     _joint_stepper:
  1525                           	callstack 0
  1526  0000AE                     	ds	12
  1527                           
  1528                           	psect	dataBANK0
  1529  0000BA                     __pdataBANK0:
  1530                           	callstack 0
  1531  0000BA                     	ds	4
  1532  0000BE                     _state_before_error:
  1533                           	callstack 0
  1534  0000BE                     	ds	2
  1535  0000C0                     _hex_end_effector_values:
  1536                           	callstack 0
  1537  0000C0                     	ds	4
  1538  0000C4                     _hex_joint_values:
  1539                           	callstack 0
  1540  0000C4                     	ds	4
  1541                           
  1542                           	psect	cstackCOMRAM
  1543  000001                     __pcstackCOMRAM:
  1544                           	callstack 0
  1545  000001                     ?_abs:
  1546                           	callstack 0
  1547  000001                     ?___wmul:
  1548                           	callstack 0
  1549  000001                     ?___fladd:
  1550                           	callstack 0
  1551  000001                     ?___flneg:
  1552                           	callstack 0
  1553  000001                     serial_tx_char@val:
  1554                           	callstack 0
  1555  000001                     get_reg_value@rx_char:
  1556                           	callstack 0
  1557  000001                     lcd_wr@val:
  1558                           	callstack 0
  1559  000001                     state_translator_micro_to_fpga@state:
  1560                           	callstack 0
  1561  000001                     init_stepper@stepper_motor:
  1562                           	callstack 0
  1563  000001                     turn_on_current_coil@stepper_motor:
  1564                           	callstack 0
  1565  000001                     update_current_coil@stepper_motor:
  1566                           	callstack 0
  1567  000001                     change_direction@stepper_motor:
  1568                           	callstack 0
  1569  000001                     ___wmul@multiplier:
  1570                           	callstack 0
  1571  000001                     abs@a:
  1572                           	callstack 0
  1573  000001                     ___flneg@f1:
  1574                           	callstack 0
  1575  000001                     ___fladd@b:
  1576                           	callstack 0
  1577                           
  1578                           ; 4 bytes @ 0x0
  1579  000001                     	ds	1
  1580  000002                     lcd_cmd@val:
  1581                           	callstack 0
  1582  000002                     lcd_dat@val:
  1583                           	callstack 0
  1584                           
  1585                           ; 1 bytes @ 0x1
  1586  000002                     	ds	1
  1587  000003                     ??_lcd_init:
  1588  000003                     ??_change_direction:
  1589  000003                     ??_abs:
  1590  000003                     ??_turn_on_current_coil:
  1591  000003                     ??_update_current_coil:
  1592  000003                     state_translator_fpga_to_micro@state:
  1593                           	callstack 0
  1594  000003                     init_stepper@current_coil:
  1595                           	callstack 0
  1596  000003                     ___wmul@multiplicand:
  1597                           	callstack 0
  1598                           
  1599                           ; 2 bytes @ 0x2
  1600  000003                     	ds	2
  1601  000005                     ?___awdiv:
  1602                           	callstack 0
  1603  000005                     state_translator_fpga_to_micro@state_machine_code:
  1604                           	callstack 0
  1605  000005                     state_translator_micro_to_fpga@state_machine_code:
  1606                           	callstack 0
  1607  000005                     init_stepper@step_counter:
  1608                           	callstack 0
  1609  000005                     ___wmul@product:
  1610                           	callstack 0
  1611  000005                     ___awdiv@dividend:
  1612                           	callstack 0
  1613  000005                     ___fladd@a:
  1614                           	callstack 0
  1615                           
  1616                           ; 4 bytes @ 0x4
  1617  000005                     	ds	2
  1618  000007                     lcd_str@str:
  1619                           	callstack 0
  1620  000007                     init_stepper@direction:
  1621                           	callstack 0
  1622  000007                     ___awdiv@divisor:
  1623                           	callstack 0
  1624                           
  1625                           ; 2 bytes @ 0x6
  1626  000007                     	ds	2
  1627  000009                     ??_lcd_str:
  1628  000009                     ??___fladd:
  1629  000009                     ?_reach_goal:
  1630                           	callstack 0
  1631  000009                     ___awdiv@counter:
  1632                           	callstack 0
  1633  000009                     init_stepper@hex_coil_register_values:
  1634                           	callstack 0
  1635  000009                     reach_goal@stepper_motor:
  1636                           	callstack 0
  1637                           
  1638                           ; 2 bytes @ 0x8
  1639  000009                     	ds	1
  1640  00000A                     ___awdiv@sign:
  1641                           	callstack 0
  1642                           
  1643                           ; 1 bytes @ 0x9
  1644  00000A                     	ds	1
  1645  00000B                     lcd_str@i:
  1646                           	callstack 0
  1647  00000B                     init_stepper@register_name:
  1648                           	callstack 0
  1649  00000B                     reach_goal@goal_to_reach:
  1650                           	callstack 0
  1651  00000B                     ___awdiv@quotient:
  1652                           	callstack 0
  1653                           
  1654                           ; 2 bytes @ 0xA
  1655  00000B                     	ds	1
  1656  00000C                     lcd_update@state:
  1657                           	callstack 0
  1658                           
  1659                           ; 2 bytes @ 0xB
  1660  00000C                     	ds	1
  1661  00000D                     ??_init_stepper:
  1662  00000D                     ??_reach_goal:
  1663  00000D                     ?___xxtofl:
  1664                           	callstack 0
  1665  00000D                     ___fladd@signs:
  1666                           	callstack 0
  1667  00000D                     ___xxtofl@val:
  1668                           	callstack 0
  1669                           
  1670                           ; 4 bytes @ 0xC
  1671  00000D                     	ds	1
  1672  00000E                     ??_lcd_update:
  1673  00000E                     ___fladd@aexp:
  1674                           	callstack 0
  1675                           
  1676                           ; 1 bytes @ 0xD
  1677  00000E                     	ds	1
  1678  00000F                     ___fladd@bexp:
  1679                           	callstack 0
  1680  00000F                     init_stepper@i:
  1681                           	callstack 0
  1682                           
  1683                           ; 2 bytes @ 0xE
  1684  00000F                     	ds	1
  1685  000010                     ___fladd@grs:
  1686                           	callstack 0
  1687  000010                     lcd_update@line_select:
  1688                           	callstack 0
  1689                           
  1690                           ; 4 bytes @ 0xF
  1691  000010                     	ds	1
  1692  000011                     ??___xxtofl:
  1693  000011                     ?___flsub:
  1694                           	callstack 0
  1695  000011                     ___flsub@b:
  1696                           	callstack 0
  1697                           
  1698                           ; 4 bytes @ 0x10
  1699  000011                     	ds	3
  1700  000014                     lcd_update@i:
  1701                           	callstack 0
  1702                           
  1703                           ; 2 bytes @ 0x13
  1704  000014                     	ds	1
  1705  000015                     ___xxtofl@sign:
  1706                           	callstack 0
  1707  000015                     ___flsub@a:
  1708                           	callstack 0
  1709                           
  1710                           ; 4 bytes @ 0x14
  1711  000015                     	ds	1
  1712  000016                     ___xxtofl@exp:
  1713                           	callstack 0
  1714                           
  1715                           ; 1 bytes @ 0x15
  1716  000016                     	ds	1
  1717  000017                     ___xxtofl@arg:
  1718                           	callstack 0
  1719                           
  1720                           ; 4 bytes @ 0x16
  1721  000017                     	ds	2
  1722  000019                     
  1723                           ; 1 bytes @ 0x18
  1724  000019                     	ds	2
  1725  00001B                     ?___flmul:
  1726                           	callstack 0
  1727  00001B                     ___flmul@b:
  1728                           	callstack 0
  1729                           
  1730                           ; 4 bytes @ 0x1A
  1731  00001B                     	ds	4
  1732  00001F                     ___flmul@a:
  1733                           	callstack 0
  1734                           
  1735                           ; 4 bytes @ 0x1E
  1736  00001F                     	ds	4
  1737  000023                     ??___flmul:
  1738                           
  1739                           ; 1 bytes @ 0x22
  1740  000023                     	ds	4
  1741  000027                     ___flmul@sign:
  1742                           	callstack 0
  1743                           
  1744                           ; 1 bytes @ 0x26
  1745  000027                     	ds	1
  1746  000028                     ___flmul@grs:
  1747                           	callstack 0
  1748                           
  1749                           ; 4 bytes @ 0x27
  1750  000028                     	ds	4
  1751  00002C                     ___flmul@aexp:
  1752                           	callstack 0
  1753                           
  1754                           ; 1 bytes @ 0x2B
  1755  00002C                     	ds	1
  1756  00002D                     ___flmul@bexp:
  1757                           	callstack 0
  1758                           
  1759                           ; 1 bytes @ 0x2C
  1760  00002D                     	ds	1
  1761  00002E                     ___flmul@prod:
  1762                           	callstack 0
  1763                           
  1764                           ; 4 bytes @ 0x2D
  1765  00002E                     	ds	4
  1766  000032                     ___flmul@temp:
  1767                           	callstack 0
  1768                           
  1769                           ; 2 bytes @ 0x31
  1770  000032                     	ds	2
  1771  000034                     ?___fltol:
  1772                           	callstack 0
  1773  000034                     ___fltol@f1:
  1774                           	callstack 0
  1775                           
  1776                           ; 4 bytes @ 0x33
  1777  000034                     	ds	4
  1778  000038                     ??___fltol:
  1779                           
  1780                           ; 1 bytes @ 0x37
  1781  000038                     	ds	4
  1782  00003C                     ___fltol@sign1:
  1783                           	callstack 0
  1784                           
  1785                           ; 1 bytes @ 0x3B
  1786  00003C                     	ds	1
  1787  00003D                     ___fltol@exp1:
  1788                           	callstack 0
  1789                           
  1790                           ; 1 bytes @ 0x3C
  1791  00003D                     	ds	1
  1792  00003E                     ?_get_liters:
  1793                           	callstack 0
  1794  00003E                     ?_get_temperature:
  1795                           	callstack 0
  1796                           
  1797                           ; 2 bytes @ 0x3D
  1798  00003E                     	ds	2
  1799  000040                     ___flge@ff1:
  1800                           	callstack 0
  1801                           
  1802                           ; 4 bytes @ 0x3F
  1803  000040                     	ds	4
  1804  000044                     ___flge@ff2:
  1805                           	callstack 0
  1806                           
  1807                           ; 4 bytes @ 0x43
  1808  000044                     	ds	4
  1809  000048                     ??___flge:
  1810                           
  1811                           ; 1 bytes @ 0x47
  1812  000048                     	ds	4
  1813  00004C                     ?_check_temperature:
  1814                           	callstack 0
  1815  00004C                     ?_roundf:
  1816                           	callstack 0
  1817  00004C                     check_temperature@temp_to_be_checked:
  1818                           	callstack 0
  1819  00004C                     roundf@x:
  1820                           	callstack 0
  1821                           
  1822                           ; 4 bytes @ 0x4B
  1823  00004C                     	ds	2
  1824  00004E                     check_temperature@grad:
  1825                           	callstack 0
  1826                           
  1827                           ; 4 bytes @ 0x4D
  1828  00004E                     	ds	2
  1829  000050                     ??_roundf:
  1830                           
  1831                           ; 1 bytes @ 0x4F
  1832  000050                     	ds	4
  1833  000054                     _roundf$1679:
  1834                           	callstack 0
  1835                           
  1836                           ; 4 bytes @ 0x53
  1837  000054                     	ds	4
  1838  000058                     roundf@e:
  1839                           	callstack 0
  1840                           
  1841                           ; 2 bytes @ 0x57
  1842  000058                     	ds	2
  1843  00005A                     _roundf$1678:
  1844                           	callstack 0
  1845                           
  1846                           ; 4 bytes @ 0x59
  1847  00005A                     	ds	4
  1848  00005E                     roundf@u:
  1849                           	callstack 0
  1850                           
  1851                           ; 4 bytes @ 0x5D
  1852  00005E                     	ds	4
  1853  000062                     roundf@y:
  1854                           	callstack 0
  1855                           
  1856                           ; 4 bytes @ 0x61
  1857  000062                     	ds	4
  1858  000066                     ??_main:
  1859                           
  1860                           ; 1 bytes @ 0x65
  1861  000066                     	ds	2
  1862  000068                     main@current_temp:
  1863                           	callstack 0
  1864                           
  1865                           ; 2 bytes @ 0x67
  1866  000068                     	ds	2
  1867  00006A                     main@rx_char:
  1868                           	callstack 0
  1869                           
  1870                           ; 1 bytes @ 0x69
  1871  00006A                     	ds	1
  1872  00006B                     _main$1677:
  1873                           	callstack 0
  1874                           
  1875                           ; 4 bytes @ 0x6A
  1876  00006B                     	ds	4
  1877                           
  1878 ;;
  1879 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1880 ;;
  1881 ;; *************** function _main *****************
  1882 ;; Defined at:
  1883 ;;		line 56 in file "main.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;		None
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;  current_temp    2  103[COMRAM] int 
  1888 ;;  greet_str     240    0        PTR const unsigned char 
  1889 ;;  rx_char         1  105[COMRAM] unsigned char 
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  1    wreg      void 
  1892 ;; Registers used:
  1893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1899 ;;      Params:         0       0       0       0       0       0       0
  1900 ;;      Locals:         7       0       0       0       0       0       0
  1901 ;;      Temps:          2       0       0       0       0       0       0
  1902 ;;      Totals:         9       0       0       0       0       0       0
  1903 ;;Total ram usage:        9 bytes
  1904 ;; Hardware stack levels required when called:    5
  1905 ;; This function calls:
  1906 ;;		___flge
  1907 ;;		___wmul
  1908 ;;		___xxtofl
  1909 ;;		_change_direction
  1910 ;;		_check_temperature
  1911 ;;		_configure_ad_conversion_oven
  1912 ;;		_configure_ad_conversion_tank
  1913 ;;		_get_liters
  1914 ;;		_get_reg_value
  1915 ;;		_get_temperature
  1916 ;;		_init_PORTS
  1917 ;;		_init_USART
  1918 ;;		_init_interrupts
  1919 ;;		_init_stepper
  1920 ;;		_init_timer_0
  1921 ;;		_lcd_cmd
  1922 ;;		_lcd_init
  1923 ;;		_lcd_str
  1924 ;;		_lcd_update
  1925 ;;		_reach_goal
  1926 ;;		_serial_tx_char
  1927 ;;		_state_translator_fpga_to_micro
  1928 ;;		_state_translator_micro_to_fpga
  1929 ;;		_wait_for_zero
  1930 ;; This function is called by:
  1931 ;;		Startup code after reset
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           	psect	text0
  1936  000078                     __ptext0:
  1937                           	callstack 0
  1938  000078                     _main:
  1939                           	callstack 26
  1940  000078  FFFF               	dw	65535	; assembler added errata NOP
  1941                           
  1942                           ;main.c: 58:     init_PORTS();
  1943  00007A  EC94  F013         	call	_init_PORTS	;wreg free
  1944  00007E                     
  1945                           ;main.c: 59:     init_USART();
  1946  00007E  EC59  F013         	call	_init_USART	;wreg free
  1947  000082                     
  1948                           ;main.c: 60:     init_interrupts();
  1949  000082  EC50  F014         	call	_init_interrupts	;wreg free
  1950  000086                     
  1951                           ;main.c: 62:     init_stepper(&joint_stepper, 0, 0, 1, hex_joint_values, &LATB);
  1952  000086  0EAE               	movlw	low _joint_stepper
  1953  000088  6E01               	movwf	init_stepper@stepper_motor^0,c
  1954  00008A  0E00               	movlw	high _joint_stepper
  1955  00008C  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  1956  00008E  0E00               	movlw	0
  1957  000090  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  1958  000092  0E00               	movlw	0
  1959  000094  6E03               	movwf	init_stepper@current_coil^0,c
  1960  000096  0E00               	movlw	0
  1961  000098  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  1962  00009A  0E00               	movlw	0
  1963  00009C  6E05               	movwf	init_stepper@step_counter^0,c
  1964  00009E  0E00               	movlw	0
  1965  0000A0  6E08               	movwf	(init_stepper@direction+1)^0,c
  1966  0000A2  0E01               	movlw	1
  1967  0000A4  6E07               	movwf	init_stepper@direction^0,c
  1968  0000A6  0EC4               	movlw	low _hex_joint_values
  1969  0000A8  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  1970  0000AA  0E00               	movlw	high _hex_joint_values
  1971  0000AC  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  1972  0000AE  0E8A               	movlw	138
  1973  0000B0  6E0B               	movwf	init_stepper@register_name^0,c
  1974  0000B2  0E0F               	movlw	15
  1975  0000B4  6E0C               	movwf	(init_stepper@register_name+1)^0,c
  1976  0000B6  ECEF  F010         	call	_init_stepper	;wreg free
  1977  0000BA                     
  1978                           ;main.c: 63:     init_stepper(&end_effector_stepper, 0, 0, 1, hex_end_effector_values, &
      +                          LATB);
  1979  0000BA  0EA2               	movlw	low _end_effector_stepper
  1980  0000BC  6E01               	movwf	init_stepper@stepper_motor^0,c
  1981  0000BE  0E00               	movlw	high _end_effector_stepper
  1982  0000C0  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  1983  0000C2  0E00               	movlw	0
  1984  0000C4  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  1985  0000C6  0E00               	movlw	0
  1986  0000C8  6E03               	movwf	init_stepper@current_coil^0,c
  1987  0000CA  0E00               	movlw	0
  1988  0000CC  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  1989  0000CE  0E00               	movlw	0
  1990  0000D0  6E05               	movwf	init_stepper@step_counter^0,c
  1991  0000D2  0E00               	movlw	0
  1992  0000D4  6E08               	movwf	(init_stepper@direction+1)^0,c
  1993  0000D6  0E01               	movlw	1
  1994  0000D8  6E07               	movwf	init_stepper@direction^0,c
  1995  0000DA  0EC0               	movlw	low _hex_end_effector_values
  1996  0000DC  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  1997  0000DE  0E00               	movlw	high _hex_end_effector_values
  1998  0000E0  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  1999  0000E2  0E8A               	movlw	138
  2000  0000E4  6E0B               	movwf	init_stepper@register_name^0,c
  2001  0000E6  0E0F               	movlw	15
  2002  0000E8  6E0C               	movwf	(init_stepper@register_name+1)^0,c
  2003  0000EA  ECEF  F010         	call	_init_stepper	;wreg free
  2004  0000EE                     
  2005                           ;main.c: 64:     init_stepper(&joint_dilutor_stepper, 0, 0, 1, hex_joint_values, &LATC);
  2006  0000EE  0E96               	movlw	low _joint_dilutor_stepper
  2007  0000F0  6E01               	movwf	init_stepper@stepper_motor^0,c
  2008  0000F2  0E00               	movlw	high _joint_dilutor_stepper
  2009  0000F4  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  2010  0000F6  0E00               	movlw	0
  2011  0000F8  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  2012  0000FA  0E00               	movlw	0
  2013  0000FC  6E03               	movwf	init_stepper@current_coil^0,c
  2014  0000FE  0E00               	movlw	0
  2015  000100  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  2016  000102  0E00               	movlw	0
  2017  000104  6E05               	movwf	init_stepper@step_counter^0,c
  2018  000106  0E00               	movlw	0
  2019  000108  6E08               	movwf	(init_stepper@direction+1)^0,c
  2020  00010A  0E01               	movlw	1
  2021  00010C  6E07               	movwf	init_stepper@direction^0,c
  2022  00010E  0EC4               	movlw	low _hex_joint_values
  2023  000110  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  2024  000112  0E00               	movlw	high _hex_joint_values
  2025  000114  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  2026  000116  0E8B               	movlw	139
  2027  000118  6E0B               	movwf	init_stepper@register_name^0,c
  2028  00011A  0E0F               	movlw	15
  2029  00011C  6E0C               	movwf	(init_stepper@register_name+1)^0,c
  2030  00011E  ECEF  F010         	call	_init_stepper	;wreg free
  2031  000122                     
  2032                           ;main.c: 66:     lcd_init();
  2033  000122  EC88  F011         	call	_lcd_init	;wreg free
  2034  000126                     
  2035                           ;main.c: 67:     lcd_cmd(0x0C);
  2036  000126  0E0C               	movlw	12
  2037  000128  ECD4  F013         	call	_lcd_cmd
  2038  00012C                     
  2039                           ;main.c: 69:     lcd_cmd(0x01);
  2040  00012C  0E01               	movlw	1
  2041  00012E  ECD4  F013         	call	_lcd_cmd
  2042  000132                     
  2043                           ;main.c: 70:     lcd_cmd(0x80);
  2044  000132  0E80               	movlw	128
  2045  000134  ECD4  F013         	call	_lcd_cmd
  2046  000138                     
  2047                           ;main.c: 71:     lcd_str("Device has been reset");
  2048  000138  0EE9               	movlw	low STR_1
  2049  00013A  6E07               	movwf	lcd_str@str^0,c
  2050  00013C  0E7F               	movlw	high STR_1
  2051  00013E  6E08               	movwf	(lcd_str@str+1)^0,c
  2052  000140  EC71  F012         	call	_lcd_str	;wreg free
  2053  000144                     
  2054                           ;main.c: 73:     (INTCONbits.GIE = 1);
  2055  000144  8EF2               	bsf	242,7,c	;volatile
  2056  000146                     
  2057                           ;main.c: 75:     mix_counter = 0;
  2058  000146  0E00               	movlw	0
  2059  000148  6E78               	movwf	(_mix_counter+1)^0,c
  2060  00014A  0E00               	movlw	0
  2061  00014C  6E77               	movwf	_mix_counter^0,c
  2062  00014E                     l3082:
  2063  00014E  FFFF               	dw	65535	; assembler added errata NOP
  2064                           
  2065                           ;main.c: 78:         if (state_changed){
  2066  000150  507C               	movf	_state_changed^0,w,c
  2067  000152  B4D8               	btfsc	status,2,c
  2068  000154  EFAE  F000         	goto	u2951
  2069  000158  EFB1  F000         	goto	u2950
  2070  00015C                     u2951:
  2071  00015C  FFFF               	dw	65535	; assembler added errata NOP
  2072  00015E  EFEB  F000         	goto	l3104
  2073  000162                     u2950:
  2074  000162  FFFF               	dw	65535	; assembler added errata NOP
  2075  000164                     
  2076                           ;main.c: 79:             const char* greet_str[80];;main.c: 80:             if (read_new
      +                          _char){
  2077  000164  507A               	movf	_read_new_char^0,w,c
  2078  000166  B4D8               	btfsc	status,2,c
  2079  000168  EFB8  F000         	goto	u2961
  2080  00016C  EFBB  F000         	goto	u2960
  2081  000170                     u2961:
  2082  000170  FFFF               	dw	65535	; assembler added errata NOP
  2083  000172  EFD7  F000         	goto	l3096
  2084  000176                     u2960:
  2085  000176  FFFF               	dw	65535	; assembler added errata NOP
  2086  000178                     
  2087                           ;main.c: 81:                 rx_char = get_reg_value();
  2088  000178  EC3B  F014         	call	_get_reg_value	;wreg free
  2089  00017C  6E6A               	movwf	main@rx_char^0,c
  2090  00017E                     
  2091                           ;main.c: 82:                 state_translator_fpga_to_micro(rx_char, &state);
  2092  00017E  0E7D               	movlw	low _state
  2093  000180  6E03               	movwf	state_translator_fpga_to_micro@state^0,c
  2094  000182  0E00               	movlw	high _state
  2095  000184  6E04               	movwf	(state_translator_fpga_to_micro@state+1)^0,c
  2096  000186  506A               	movf	main@rx_char^0,w,c
  2097  000188  EC5B  F00D         	call	_state_translator_fpga_to_micro
  2098  00018C                     
  2099                           ;main.c: 83:                 read_new_char = 0;
  2100  00018C  0E00               	movlw	0
  2101  00018E  6E7A               	movwf	_read_new_char^0,c
  2102  000190                     
  2103                           ;main.c: 84:                 if (state == 14){
  2104  000190  0E0E               	movlw	14
  2105  000192  187D               	xorwf	_state^0,w,c
  2106  000194  107E               	iorwf	(_state+1)^0,w,c
  2107  000196  A4D8               	btfss	status,2,c
  2108  000198  EFD0  F000         	goto	u2971
  2109  00019C  EFD3  F000         	goto	u2970
  2110  0001A0                     u2971:
  2111  0001A0  FFFF               	dw	65535	; assembler added errata NOP
  2112  0001A2  EFE0  F000         	goto	l3098
  2113  0001A6                     u2970:
  2114  0001A6  FFFF               	dw	65535	; assembler added errata NOP
  2115  0001A8                     
  2116                           ;main.c: 85:                     LATCbits.LATC4 = 1;
  2117  0001A8  888B               	bsf	139,4,c	;volatile
  2118  0001AA  EFE0  F000         	goto	l3098
  2119  0001AE                     l3096:
  2120  0001AE  FFFF               	dw	65535	; assembler added errata NOP
  2121                           
  2122                           ;main.c: 88:                 serial_tx_char(state_translator_micro_to_fpga(&state));
  2123  0001B0  0E7D               	movlw	low _state
  2124  0001B2  6E01               	movwf	state_translator_micro_to_fpga@state^0,c
  2125  0001B4  0E00               	movlw	high _state
  2126  0001B6  6E02               	movwf	(state_translator_micro_to_fpga@state+1)^0,c
  2127  0001B8  EC43  F011         	call	_state_translator_micro_to_fpga	;wreg free
  2128  0001BC  EC0D  F014         	call	_serial_tx_char
  2129  0001C0                     l3098:
  2130  0001C0  FFFF               	dw	65535	; assembler added errata NOP
  2131                           
  2132                           ;main.c: 90:             lcd_update(state);
  2133  0001C2  C07D  F00C         	movff	_state,lcd_update@state
  2134  0001C6  C07E  F00D         	movff	_state+1,lcd_update@state+1
  2135  0001CA  EC91  F010         	call	_lcd_update	;wreg free
  2136  0001CE                     
  2137                           ;main.c: 92:             state_changed = 0;
  2138  0001CE  0E00               	movlw	0
  2139  0001D0  6E7C               	movwf	_state_changed^0,c
  2140  0001D2                     
  2141                           ;main.c: 93:             idle_msg_sent = 0;
  2142  0001D2  0E00               	movlw	0
  2143  0001D4  6E7B               	movwf	_idle_msg_sent^0,c
  2144  0001D6                     l3104:
  2145  0001D6  FFFF               	dw	65535	; assembler added errata NOP
  2146                           
  2147                           ;main.c: 96:         if (state == 2){
  2148  0001D8  0E02               	movlw	2
  2149  0001DA  187D               	xorwf	_state^0,w,c
  2150  0001DC  107E               	iorwf	(_state+1)^0,w,c
  2151  0001DE  A4D8               	btfss	status,2,c
  2152  0001E0  EFF4  F000         	goto	u2981
  2153  0001E4  EFF7  F000         	goto	u2980
  2154  0001E8                     u2981:
  2155  0001E8  FFFF               	dw	65535	; assembler added errata NOP
  2156  0001EA  EFFB  F000         	goto	l154
  2157  0001EE                     u2980:
  2158  0001EE  FFFF               	dw	65535	; assembler added errata NOP
  2159  0001F0                     
  2160                           ;main.c: 97:             LATAbits.LATA1 = 1;
  2161  0001F0  8289               	bsf	137,1,c	;volatile
  2162                           
  2163                           ;main.c: 98:         } else {
  2164  0001F2  EFA7  F000         	goto	l3082
  2165  0001F6                     l154:
  2166  0001F6  FFFF               	dw	65535	; assembler added errata NOP
  2167                           
  2168                           ;main.c: 99:             LATAbits.LATA1 = 0;
  2169  0001F8  9289               	bcf	137,1,c	;volatile
  2170  0001FA                     
  2171                           ;main.c: 100:             if (state == 0) {
  2172  0001FA  507D               	movf	_state^0,w,c
  2173  0001FC  107E               	iorwf	(_state+1)^0,w,c
  2174  0001FE  A4D8               	btfss	status,2,c
  2175  000200  EF04  F001         	goto	u2991
  2176  000204  EF07  F001         	goto	u2990
  2177  000208                     u2991:
  2178  000208  FFFF               	dw	65535	; assembler added errata NOP
  2179  00020A  EF4D  F001         	goto	l3120
  2180  00020E                     u2990:
  2181  00020E  FFFF               	dw	65535	; assembler added errata NOP
  2182  000210                     
  2183                           ;main.c: 102:                 configure_ad_conversion_tank();
  2184  000210  EC1D  F014         	call	_configure_ad_conversion_tank	;wreg free
  2185  000214                     
  2186                           ;main.c: 103:                 if (get_liters() < 0.1){
  2187  000214  EC3B  F012         	call	_get_liters	;wreg free
  2188  000218  C03E  F06B         	movff	?_get_liters,_main$1677
  2189  00021C  C03F  F06C         	movff	?_get_liters+1,_main$1677+1
  2190  000220  0E00               	movlw	0
  2191  000222  BE6C               	btfsc	(_main$1677+1)^0,7,c
  2192  000224  0EFF               	movlw	-1
  2193  000226  6E6D               	movwf	(_main$1677+2)^0,c
  2194  000228  6E6E               	movwf	(_main$1677+3)^0,c
  2195  00022A                     
  2196                           ;main.c: 103:                 if (get_liters() < 0.1){
  2197  00022A  C06B  F00D         	movff	_main$1677,___xxtofl@val
  2198  00022E  C06C  F00E         	movff	_main$1677+1,___xxtofl@val+1
  2199  000232  C06D  F00F         	movff	_main$1677+2,___xxtofl@val+2
  2200  000236  C06E  F010         	movff	_main$1677+3,___xxtofl@val+3
  2201  00023A  0E01               	movlw	1
  2202  00023C  EC5F  F00C         	call	___xxtofl
  2203  000240  C00D  F040         	movff	?___xxtofl,___flge@ff1
  2204  000244  C00E  F041         	movff	?___xxtofl+1,___flge@ff1+1
  2205  000248  C00F  F042         	movff	?___xxtofl+2,___flge@ff1+2
  2206  00024C  C010  F043         	movff	?___xxtofl+3,___flge@ff1+3
  2207  000250  0ECD               	movlw	205
  2208  000252  6E44               	movwf	___flge@ff2^0,c
  2209  000254  0ECC               	movlw	204
  2210  000256  6E45               	movwf	(___flge@ff2+1)^0,c
  2211  000258  0ECC               	movlw	204
  2212  00025A  6E46               	movwf	(___flge@ff2+2)^0,c
  2213  00025C  0E3D               	movlw	61
  2214  00025E  6E47               	movwf	(___flge@ff2+3)^0,c
  2215  000260  ECAD  F00E         	call	___flge	;wreg free
  2216  000264  B0D8               	btfsc	status,0,c
  2217  000266  EF37  F001         	goto	u3001
  2218  00026A  EF3A  F001         	goto	u3000
  2219  00026E                     u3001:
  2220  00026E  FFFF               	dw	65535	; assembler added errata NOP
  2221  000270  EFE7  F004         	goto	l3286
  2222  000274                     u3000:
  2223  000274  FFFF               	dw	65535	; assembler added errata NOP
  2224  000276                     
  2225                           ;main.c: 104:                     LATCbits.LATC5 = 1;
  2226  000276  8A8B               	bsf	139,5,c	;volatile
  2227                           
  2228                           ;main.c: 105:                     LATCbits.LATC4 = 1;
  2229  000278  888B               	bsf	139,4,c	;volatile
  2230  00027A                     
  2231                           ;main.c: 106:                     state = 14;
  2232  00027A  0E00               	movlw	0
  2233  00027C  6E7E               	movwf	(_state+1)^0,c
  2234  00027E  0E0E               	movlw	14
  2235  000280  6E7D               	movwf	_state^0,c
  2236                           
  2237                           ;main.c: 107:                     state_changed = 1;
  2238  000282  0E01               	movlw	1
  2239  000284  6E7C               	movwf	_state_changed^0,c
  2240                           
  2241                           ;main.c: 108:                     state_before_error = 0;
  2242  000286  0E00               	movlw	0
  2243  000288  0100               	movlb	0	; () banked
  2244  00028A  6FBF               	movwf	(_state_before_error+1)& (0+255),b
  2245  00028C  0E00               	movlw	0
  2246  00028E  6FBE               	movwf	_state_before_error& (0+255),b
  2247  000290  EFE7  F004         	goto	l3286
  2248  000294                     l157:
  2249  000294  FFFF               	dw	65535	; assembler added errata NOP
  2250                           
  2251                           ;main.c: 110:             } else if (state == 1){
  2252  000296  EFE7  F004         	goto	l3286
  2253  00029A                     l3120:
  2254  00029A  FFFF               	dw	65535	; assembler added errata NOP
  2255  00029C  047D               	decf	_state^0,w,c
  2256  00029E  107E               	iorwf	(_state+1)^0,w,c
  2257  0002A0  A4D8               	btfss	status,2,c
  2258  0002A2  EF55  F001         	goto	u3011
  2259  0002A6  EF58  F001         	goto	u3010
  2260  0002AA                     u3011:
  2261  0002AA  FFFF               	dw	65535	; assembler added errata NOP
  2262  0002AC  EF62  F001         	goto	l3124
  2263  0002B0                     u3010:
  2264  0002B0  FFFF               	dw	65535	; assembler added errata NOP
  2265  0002B2                     l3122:
  2266  0002B2  FFFF               	dw	65535	; assembler added errata NOP
  2267                           
  2268                           ;main.c: 111:                 state = 2;
  2269  0002B4  0E00               	movlw	0
  2270  0002B6  6E7E               	movwf	(_state+1)^0,c
  2271  0002B8  0E02               	movlw	2
  2272  0002BA  6E7D               	movwf	_state^0,c
  2273                           
  2274                           ;main.c: 112:                 state_changed = 1;
  2275  0002BC  0E01               	movlw	1
  2276  0002BE  6E7C               	movwf	_state_changed^0,c
  2277                           
  2278                           ;main.c: 113:             } else if (state == 3){
  2279  0002C0  EFE7  F004         	goto	l3286
  2280  0002C4                     l3124:
  2281  0002C4  FFFF               	dw	65535	; assembler added errata NOP
  2282  0002C6  0E03               	movlw	3
  2283  0002C8  187D               	xorwf	_state^0,w,c
  2284  0002CA  107E               	iorwf	(_state+1)^0,w,c
  2285  0002CC  A4D8               	btfss	status,2,c
  2286  0002CE  EF6B  F001         	goto	u3021
  2287  0002D2  EF6E  F001         	goto	u3020
  2288  0002D6                     u3021:
  2289  0002D6  FFFF               	dw	65535	; assembler added errata NOP
  2290  0002D8  EF77  F001         	goto	l3128
  2291  0002DC                     u3020:
  2292  0002DC  FFFF               	dw	65535	; assembler added errata NOP
  2293  0002DE                     
  2294                           ;main.c: 114:                 state = 4;
  2295  0002DE  0E00               	movlw	0
  2296  0002E0  6E7E               	movwf	(_state+1)^0,c
  2297  0002E2  0E04               	movlw	4
  2298  0002E4  6E7D               	movwf	_state^0,c
  2299                           
  2300                           ;main.c: 115:                 state_changed = 1;
  2301  0002E6  0E01               	movlw	1
  2302  0002E8  6E7C               	movwf	_state_changed^0,c
  2303                           
  2304                           ;main.c: 116:             } else if (state == 4){
  2305  0002EA  EFE7  F004         	goto	l3286
  2306  0002EE                     l3128:
  2307  0002EE  FFFF               	dw	65535	; assembler added errata NOP
  2308  0002F0  0E04               	movlw	4
  2309  0002F2  187D               	xorwf	_state^0,w,c
  2310  0002F4  107E               	iorwf	(_state+1)^0,w,c
  2311  0002F6  A4D8               	btfss	status,2,c
  2312  0002F8  EF80  F001         	goto	u3031
  2313  0002FC  EF83  F001         	goto	u3030
  2314  000300                     u3031:
  2315  000300  FFFF               	dw	65535	; assembler added errata NOP
  2316  000302  EFCD  F001         	goto	l3146
  2317  000306                     u3030:
  2318  000306  FFFF               	dw	65535	; assembler added errata NOP
  2319  000308                     
  2320                           ;main.c: 117:                 if (timer_done){
  2321  000308  5079               	movf	_timer_done^0,w,c
  2322  00030A  B4D8               	btfsc	status,2,c
  2323  00030C  EF8A  F001         	goto	u3041
  2324  000310  EF8D  F001         	goto	u3040
  2325  000314                     u3041:
  2326  000314  FFFF               	dw	65535	; assembler added errata NOP
  2327  000316  EFB4  F001         	goto	l164
  2328  00031A                     u3040:
  2329  00031A  FFFF               	dw	65535	; assembler added errata NOP
  2330  00031C                     
  2331                           ;main.c: 118:                     if(check_temperature(get_temperature())){
  2332  00031C  EC03  F012         	call	_get_temperature	;wreg free
  2333  000320  C03E  F04C         	movff	?_get_temperature,check_temperature@temp_to_be_checked
  2334  000324  C03F  F04D         	movff	?_get_temperature+1,check_temperature@temp_to_be_checked+1
  2335  000328  EC26  F010         	call	_check_temperature	;wreg free
  2336  00032C  504C               	movf	?_check_temperature^0,w,c
  2337  00032E  104D               	iorwf	(?_check_temperature+1)^0,w,c
  2338  000330  B4D8               	btfsc	status,2,c
  2339  000332  EF9D  F001         	goto	u3051
  2340  000336  EFA0  F001         	goto	u3050
  2341  00033A                     u3051:
  2342  00033A  FFFF               	dw	65535	; assembler added errata NOP
  2343  00033C  EFA7  F001         	goto	l3136
  2344  000340                     u3050:
  2345  000340  FFFF               	dw	65535	; assembler added errata NOP
  2346  000342                     
  2347                           ;main.c: 119:                         state = 2;
  2348  000342  0E00               	movlw	0
  2349  000344  6E7E               	movwf	(_state+1)^0,c
  2350  000346  0E02               	movlw	2
  2351  000348  6E7D               	movwf	_state^0,c
  2352                           
  2353                           ;main.c: 120:                     } else{
  2354  00034A  EFAD  F001         	goto	l166
  2355  00034E                     l3136:
  2356  00034E  FFFF               	dw	65535	; assembler added errata NOP
  2357                           
  2358                           ;main.c: 121:                         state = 14;
  2359  000350  0E00               	movlw	0
  2360  000352  6E7E               	movwf	(_state+1)^0,c
  2361  000354  0E0E               	movlw	14
  2362  000356  6E7D               	movwf	_state^0,c
  2363  000358                     
  2364                           ;main.c: 122:                         LATCbits.LATC4 = 1;
  2365  000358  888B               	bsf	139,4,c	;volatile
  2366  00035A                     l166:
  2367  00035A  FFFF               	dw	65535	; assembler added errata NOP
  2368                           
  2369                           ;main.c: 124:                     state_changed = 1;
  2370  00035C  0E01               	movlw	1
  2371  00035E  6E7C               	movwf	_state_changed^0,c
  2372                           
  2373                           ;main.c: 125:                     timer_done = 0;
  2374  000360  0E00               	movlw	0
  2375  000362  6E79               	movwf	_timer_done^0,c
  2376                           
  2377                           ;main.c: 126:                 } else {
  2378  000364  EFE7  F004         	goto	l3286
  2379  000368                     l164:
  2380  000368  FFFF               	dw	65535	; assembler added errata NOP
  2381                           
  2382                           ;main.c: 127:                     if (T0CONbits.TMR0ON == 0){
  2383  00036A  BED5               	btfsc	213,7,c	;volatile
  2384  00036C  EFBA  F001         	goto	u3061
  2385  000370  EFBD  F001         	goto	u3060
  2386  000374                     u3061:
  2387  000374  FFFF               	dw	65535	; assembler added errata NOP
  2388  000376  EFC4  F001         	goto	l168
  2389  00037A                     u3060:
  2390  00037A  FFFF               	dw	65535	; assembler added errata NOP
  2391  00037C                     
  2392                           ;main.c: 128:                         configure_ad_conversion_oven();
  2393  00037C  EC2C  F014         	call	_configure_ad_conversion_oven	;wreg free
  2394  000380                     
  2395                           ;main.c: 129:                         wait_for_zero();
  2396  000380  ECE9  F013         	call	_wait_for_zero	;wreg free
  2397  000384                     
  2398                           ;main.c: 130:                         init_timer_0();
  2399  000384  ECFC  F013         	call	_init_timer_0	;wreg free
  2400  000388                     l168:
  2401  000388  FFFF               	dw	65535	; assembler added errata NOP
  2402                           
  2403                           ;main.c: 132:                     int current_temp = get_temperature();
  2404  00038A  EC03  F012         	call	_get_temperature	;wreg free
  2405  00038E  C03E  F068         	movff	?_get_temperature,main@current_temp
  2406  000392  C03F  F069         	movff	?_get_temperature+1,main@current_temp+1
  2407  000396  EFE7  F004         	goto	l3286
  2408  00039A                     l3146:
  2409  00039A  FFFF               	dw	65535	; assembler added errata NOP
  2410  00039C  0E05               	movlw	5
  2411  00039E  187D               	xorwf	_state^0,w,c
  2412  0003A0  107E               	iorwf	(_state+1)^0,w,c
  2413  0003A2  A4D8               	btfss	status,2,c
  2414  0003A4  EFD6  F001         	goto	u3071
  2415  0003A8  EFD9  F001         	goto	u3070
  2416  0003AC                     u3071:
  2417  0003AC  FFFF               	dw	65535	; assembler added errata NOP
  2418  0003AE  EF41  F002         	goto	l3162
  2419  0003B2                     u3070:
  2420  0003B2  FFFF               	dw	65535	; assembler added errata NOP
  2421  0003B4                     
  2422                           ;main.c: 136:                 init_stepper(&joint_stepper, 0, 0, 1, hex_joint_values, &L
      +                          ATB);
  2423  0003B4  0EAE               	movlw	low _joint_stepper
  2424  0003B6  6E01               	movwf	init_stepper@stepper_motor^0,c
  2425  0003B8  0E00               	movlw	high _joint_stepper
  2426  0003BA  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  2427  0003BC  0E00               	movlw	0
  2428  0003BE  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  2429  0003C0  0E00               	movlw	0
  2430  0003C2  6E03               	movwf	init_stepper@current_coil^0,c
  2431  0003C4  0E00               	movlw	0
  2432  0003C6  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  2433  0003C8  0E00               	movlw	0
  2434  0003CA  6E05               	movwf	init_stepper@step_counter^0,c
  2435  0003CC  0E00               	movlw	0
  2436  0003CE  6E08               	movwf	(init_stepper@direction+1)^0,c
  2437  0003D0  0E01               	movlw	1
  2438  0003D2  6E07               	movwf	init_stepper@direction^0,c
  2439  0003D4  0EC4               	movlw	low _hex_joint_values
  2440  0003D6  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  2441  0003D8  0E00               	movlw	high _hex_joint_values
  2442  0003DA  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  2443  0003DC  0E8A               	movlw	138
  2444  0003DE  6E0B               	movwf	init_stepper@register_name^0,c
  2445  0003E0  0E0F               	movlw	15
  2446  0003E2  6E0C               	movwf	(init_stepper@register_name+1)^0,c
  2447  0003E4  ECEF  F010         	call	_init_stepper	;wreg free
  2448                           
  2449                           ;main.c: 137:                 init_stepper(&end_effector_stepper, 0, 0, 1, hex_end_effec
      +                          tor_values, &LATB);
  2450  0003E8  0EA2               	movlw	low _end_effector_stepper
  2451  0003EA  6E01               	movwf	init_stepper@stepper_motor^0,c
  2452  0003EC  0E00               	movlw	high _end_effector_stepper
  2453  0003EE  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  2454  0003F0  0E00               	movlw	0
  2455  0003F2  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  2456  0003F4  0E00               	movlw	0
  2457  0003F6  6E03               	movwf	init_stepper@current_coil^0,c
  2458  0003F8  0E00               	movlw	0
  2459  0003FA  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  2460  0003FC  0E00               	movlw	0
  2461  0003FE  6E05               	movwf	init_stepper@step_counter^0,c
  2462  000400  0E00               	movlw	0
  2463  000402  6E08               	movwf	(init_stepper@direction+1)^0,c
  2464  000404  0E01               	movlw	1
  2465  000406  6E07               	movwf	init_stepper@direction^0,c
  2466  000408  0EC0               	movlw	low _hex_end_effector_values
  2467  00040A  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  2468  00040C  0E00               	movlw	high _hex_end_effector_values
  2469  00040E  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  2470  000410  0E8A               	movlw	138
  2471  000412  6E0B               	movwf	init_stepper@register_name^0,c
  2472  000414  0E0F               	movlw	15
  2473  000416  6E0C               	movwf	(init_stepper@register_name+1)^0,c
  2474  000418  ECEF  F010         	call	_init_stepper	;wreg free
  2475                           
  2476                           ;main.c: 138:                 init_stepper(&joint_dilutor_stepper, 0, 0, 1, hex_joint_va
      +                          lues, &LATC);
  2477  00041C  0E96               	movlw	low _joint_dilutor_stepper
  2478  00041E  6E01               	movwf	init_stepper@stepper_motor^0,c
  2479  000420  0E00               	movlw	high _joint_dilutor_stepper
  2480  000422  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  2481  000424  0E00               	movlw	0
  2482  000426  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  2483  000428  0E00               	movlw	0
  2484  00042A  6E03               	movwf	init_stepper@current_coil^0,c
  2485  00042C  0E00               	movlw	0
  2486  00042E  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  2487  000430  0E00               	movlw	0
  2488  000432  6E05               	movwf	init_stepper@step_counter^0,c
  2489  000434  0E00               	movlw	0
  2490  000436  6E08               	movwf	(init_stepper@direction+1)^0,c
  2491  000438  0E01               	movlw	1
  2492  00043A  6E07               	movwf	init_stepper@direction^0,c
  2493  00043C  0EC4               	movlw	low _hex_joint_values
  2494  00043E  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  2495  000440  0E00               	movlw	high _hex_joint_values
  2496  000442  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  2497  000444  0E8B               	movlw	139
  2498  000446  6E0B               	movwf	init_stepper@register_name^0,c
  2499  000448  0E0F               	movlw	15
  2500  00044A  6E0C               	movwf	(init_stepper@register_name+1)^0,c
  2501  00044C  ECEF  F010         	call	_init_stepper	;wreg free
  2502  000450                     
  2503                           ;main.c: 139:                 grasping_joint_position_reached = 0;
  2504  000450  0E00               	movlw	0
  2505  000452  6E72               	movwf	(_grasping_joint_position_reached+1)^0,c
  2506  000454  0E00               	movlw	0
  2507  000456  6E71               	movwf	_grasping_joint_position_reached^0,c
  2508  000458                     
  2509                           ;main.c: 140:                 grasping_ee_position_reached = 0;
  2510  000458  0E00               	movlw	0
  2511  00045A  0100               	movlb	0	; () banked
  2512  00045C  6F8F               	movwf	(_grasping_ee_position_reached+1)& (0+255),b
  2513  00045E  0E00               	movlw	0
  2514  000460  6F8E               	movwf	_grasping_ee_position_reached& (0+255),b
  2515  000462                     
  2516                           ; BSR set to: 0
  2517                           ;main.c: 141:                 end_effector_homed = 0;
  2518  000462  0E00               	movlw	0
  2519  000464  6E70               	movwf	(_end_effector_homed+1)^0,c
  2520  000466  0E00               	movlw	0
  2521  000468  6E6F               	movwf	_end_effector_homed^0,c
  2522  00046A                     
  2523                           ; BSR set to: 0
  2524                           ;main.c: 142:                 joint_homed = 0;
  2525  00046A  0E00               	movlw	0
  2526  00046C  6F8B               	movwf	(_joint_homed+1)& (0+255),b
  2527  00046E  0E00               	movlw	0
  2528  000470  6F8A               	movwf	_joint_homed& (0+255),b
  2529  000472                     
  2530                           ; BSR set to: 0
  2531                           ;main.c: 143:                 state = 6;
  2532  000472  0E00               	movlw	0
  2533  000474  6E7E               	movwf	(_state+1)^0,c
  2534  000476  0E06               	movlw	6
  2535  000478  6E7D               	movwf	_state^0,c
  2536  00047A                     
  2537                           ; BSR set to: 0
  2538                           ;main.c: 144:                 state_changed = 1;
  2539  00047A  0E01               	movlw	1
  2540  00047C  6E7C               	movwf	_state_changed^0,c
  2541                           
  2542                           ;main.c: 145:             }else if (state == 6){
  2543  00047E  EFE7  F004         	goto	l3286
  2544  000482                     l3162:
  2545  000482  FFFF               	dw	65535	; assembler added errata NOP
  2546  000484  0E06               	movlw	6
  2547  000486  187D               	xorwf	_state^0,w,c
  2548  000488  107E               	iorwf	(_state+1)^0,w,c
  2549  00048A  A4D8               	btfss	status,2,c
  2550  00048C  EF4A  F002         	goto	u3081
  2551  000490  EF4D  F002         	goto	u3080
  2552  000494                     u3081:
  2553  000494  FFFF               	dw	65535	; assembler added errata NOP
  2554  000496  EFB4  F002         	goto	l3180
  2555  00049A                     u3080:
  2556  00049A  FFFF               	dw	65535	; assembler added errata NOP
  2557  00049C                     
  2558                           ;main.c: 146:                 _delay((unsigned long)((20)*(4000000/4000.0)));
  2559  00049C  0E14               	movlw	20
  2560  00049E  6E66               	movwf	??_main^0,c
  2561  0004A0  0E7D               	movlw	125
  2562  0004A2                     u3437:
  2563  0004A2  FFFF               	dw	65535	; errata NOP
  2564  0004A4  2EE8               	decfsz	wreg,f,c
  2565  0004A6  D7FD               	bra	u3437
  2566  0004A8  2E66               	decfsz	??_main^0,f,c
  2567  0004AA  D7FB               	bra	u3437
  2568  0004AC  D000               	nop2	
  2569  0004AE                     
  2570                           ;main.c: 147:                 if (!grasping_joint_position_reached){
  2571  0004AE  5071               	movf	_grasping_joint_position_reached^0,w,c
  2572  0004B0  1072               	iorwf	(_grasping_joint_position_reached+1)^0,w,c
  2573  0004B2  A4D8               	btfss	status,2,c
  2574  0004B4  EF5E  F002         	goto	u3091
  2575  0004B8  EF61  F002         	goto	u3090
  2576  0004BC                     u3091:
  2577  0004BC  FFFF               	dw	65535	; assembler added errata NOP
  2578  0004BE  EF70  F002         	goto	l3170
  2579  0004C2                     u3090:
  2580  0004C2  FFFF               	dw	65535	; assembler added errata NOP
  2581  0004C4                     
  2582                           ;main.c: 148:                     grasping_joint_position_reached = reach_goal(&joint_st
      +                          epper, 50);
  2583  0004C4  0EAE               	movlw	low _joint_stepper
  2584  0004C6  6E09               	movwf	reach_goal@stepper_motor^0,c
  2585  0004C8  0E00               	movlw	high _joint_stepper
  2586  0004CA  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  2587  0004CC  0E00               	movlw	0
  2588  0004CE  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2589  0004D0  0E32               	movlw	50
  2590  0004D2  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  2591  0004D4  ECC7  F011         	call	_reach_goal	;wreg free
  2592  0004D8  C009  F071         	movff	?_reach_goal,_grasping_joint_position_reached
  2593  0004DC  C00A  F072         	movff	?_reach_goal+1,_grasping_joint_position_reached+1
  2594  0004E0                     l3170:
  2595  0004E0  FFFF               	dw	65535	; assembler added errata NOP
  2596                           
  2597                           ;main.c: 151:                 if (grasping_joint_position_reached && !grasping_ee_positi
      +                          on_reached){
  2598  0004E2  5071               	movf	_grasping_joint_position_reached^0,w,c
  2599  0004E4  1072               	iorwf	(_grasping_joint_position_reached+1)^0,w,c
  2600  0004E6  B4D8               	btfsc	status,2,c
  2601  0004E8  EF78  F002         	goto	u3101
  2602  0004EC  EF7B  F002         	goto	u3100
  2603  0004F0                     u3101:
  2604  0004F0  FFFF               	dw	65535	; assembler added errata NOP
  2605  0004F2  EF96  F002         	goto	l3176
  2606  0004F6                     u3100:
  2607  0004F6  FFFF               	dw	65535	; assembler added errata NOP
  2608  0004F8  0100               	movlb	0	; () banked
  2609  0004FA  518E               	movf	_grasping_ee_position_reached& (0+255),w,b
  2610  0004FC  118F               	iorwf	(_grasping_ee_position_reached+1)& (0+255),w,b
  2611  0004FE  A4D8               	btfss	status,2,c
  2612  000500  EF84  F002         	goto	u3111
  2613  000504  EF87  F002         	goto	u3110
  2614  000508                     u3111:
  2615  000508  FFFF               	dw	65535	; assembler added errata NOP
  2616  00050A  EF96  F002         	goto	l3176
  2617  00050E                     u3110:
  2618  00050E  FFFF               	dw	65535	; assembler added errata NOP
  2619  000510                     
  2620                           ; BSR set to: 0
  2621                           ;main.c: 152:                     grasping_ee_position_reached = reach_goal(&end_effecto
      +                          r_stepper, 100);
  2622  000510  0EA2               	movlw	low _end_effector_stepper
  2623  000512  6E09               	movwf	reach_goal@stepper_motor^0,c
  2624  000514  0E00               	movlw	high _end_effector_stepper
  2625  000516  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  2626  000518  0E00               	movlw	0
  2627  00051A  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2628  00051C  0E64               	movlw	100
  2629  00051E  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  2630  000520  ECC7  F011         	call	_reach_goal	;wreg free
  2631  000524  C009  F08E         	movff	?_reach_goal,_grasping_ee_position_reached
  2632  000528  C00A  F08F         	movff	?_reach_goal+1,_grasping_ee_position_reached+1
  2633  00052C                     l3176:
  2634  00052C  FFFF               	dw	65535	; assembler added errata NOP
  2635                           
  2636                           ;main.c: 154:                 if (grasping_joint_position_reached * grasping_ee_position
      +                          _reached){
  2637  00052E  C071  F001         	movff	_grasping_joint_position_reached,___wmul@multiplier
  2638  000532  C072  F002         	movff	_grasping_joint_position_reached+1,___wmul@multiplier+1
  2639  000536  C08E  F003         	movff	_grasping_ee_position_reached,___wmul@multiplicand
  2640  00053A  C08F  F004         	movff	_grasping_ee_position_reached+1,___wmul@multiplicand+1
  2641  00053E  ECBF  F013         	call	___wmul	;wreg free
  2642  000542  5001               	movf	?___wmul^0,w,c
  2643  000544  1002               	iorwf	(?___wmul+1)^0,w,c
  2644  000546  B4D8               	btfsc	status,2,c
  2645  000548  EFA8  F002         	goto	u3121
  2646  00054C  EFAB  F002         	goto	u3120
  2647  000550                     u3121:
  2648  000550  FFFF               	dw	65535	; assembler added errata NOP
  2649  000552  EFE7  F004         	goto	l3286
  2650  000556                     u3120:
  2651  000556  FFFF               	dw	65535	; assembler added errata NOP
  2652  000558                     
  2653                           ;main.c: 155:                     state = 7;
  2654  000558  0E00               	movlw	0
  2655  00055A  6E7E               	movwf	(_state+1)^0,c
  2656  00055C  0E07               	movlw	7
  2657  00055E  6E7D               	movwf	_state^0,c
  2658                           
  2659                           ;main.c: 156:                     state_changed = 1;
  2660  000560  0E01               	movlw	1
  2661  000562  6E7C               	movwf	_state_changed^0,c
  2662  000564  EFE7  F004         	goto	l3286
  2663  000568                     l3180:
  2664  000568  FFFF               	dw	65535	; assembler added errata NOP
  2665  00056A  0E07               	movlw	7
  2666  00056C  187D               	xorwf	_state^0,w,c
  2667  00056E  107E               	iorwf	(_state+1)^0,w,c
  2668  000570  A4D8               	btfss	status,2,c
  2669  000572  EFBD  F002         	goto	u3131
  2670  000576  EFC0  F002         	goto	u3130
  2671  00057A                     u3131:
  2672  00057A  FFFF               	dw	65535	; assembler added errata NOP
  2673  00057C  EF2F  F003         	goto	l3204
  2674  000580                     u3130:
  2675  000580  FFFF               	dw	65535	; assembler added errata NOP
  2676  000582                     
  2677                           ;main.c: 159:                 _delay((unsigned long)((5)*(4000000/4000.0)));
  2678  000582  0E05               	movlw	5
  2679  000584  6E66               	movwf	??_main^0,c
  2680  000586  0EDF               	movlw	223
  2681  000588                     u3447:
  2682  000588  FFFF               	dw	65535	; errata NOP
  2683  00058A  2EE8               	decfsz	wreg,f,c
  2684  00058C  D7FD               	bra	u3447
  2685  00058E  2E66               	decfsz	??_main^0,f,c
  2686  000590  D7FB               	bra	u3447
  2687  000592                     
  2688                           ;main.c: 160:                 if (reach_goal(&joint_stepper, 100)) {
  2689  000592  0EAE               	movlw	low _joint_stepper
  2690  000594  6E09               	movwf	reach_goal@stepper_motor^0,c
  2691  000596  0E00               	movlw	high _joint_stepper
  2692  000598  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  2693  00059A  0E00               	movlw	0
  2694  00059C  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2695  00059E  0E64               	movlw	100
  2696  0005A0  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  2697  0005A2  ECC7  F011         	call	_reach_goal	;wreg free
  2698  0005A6  5009               	movf	?_reach_goal^0,w,c
  2699  0005A8  100A               	iorwf	(?_reach_goal+1)^0,w,c
  2700  0005AA  B4D8               	btfsc	status,2,c
  2701  0005AC  EFDA  F002         	goto	u3141
  2702  0005B0  EFDD  F002         	goto	u3140
  2703  0005B4                     u3141:
  2704  0005B4  FFFF               	dw	65535	; assembler added errata NOP
  2705  0005B6  EFE6  F002         	goto	l3190
  2706  0005BA                     u3140:
  2707  0005BA  FFFF               	dw	65535	; assembler added errata NOP
  2708  0005BC                     
  2709                           ;main.c: 161:                     change_direction(&joint_stepper);
  2710  0005BC  0EAE               	movlw	low _joint_stepper
  2711  0005BE  6E01               	movwf	change_direction@stepper_motor^0,c
  2712  0005C0  0E00               	movlw	high _joint_stepper
  2713  0005C2  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2714  0005C4  EC79  F013         	call	_change_direction	;wreg free
  2715  0005C8                     
  2716                           ;main.c: 162:                     mix_counter++;
  2717  0005C8  4A77               	infsnz	_mix_counter^0,f,c
  2718  0005CA  2A78               	incf	(_mix_counter+1)^0,f,c
  2719  0005CC                     l3190:
  2720  0005CC  FFFF               	dw	65535	; assembler added errata NOP
  2721                           
  2722                           ;main.c: 165:                 if (mix_counter == 20 && !dilution_done){
  2723  0005CE  0E14               	movlw	20
  2724  0005D0  1877               	xorwf	_mix_counter^0,w,c
  2725  0005D2  1078               	iorwf	(_mix_counter+1)^0,w,c
  2726  0005D4  A4D8               	btfss	status,2,c
  2727  0005D6  EFEF  F002         	goto	u3151
  2728  0005DA  EFF2  F002         	goto	u3150
  2729  0005DE                     u3151:
  2730  0005DE  FFFF               	dw	65535	; assembler added errata NOP
  2731  0005E0  EF06  F003         	goto	l3196
  2732  0005E4                     u3150:
  2733  0005E4  FFFF               	dw	65535	; assembler added errata NOP
  2734  0005E6  5075               	movf	_dilution_done^0,w,c
  2735  0005E8  1076               	iorwf	(_dilution_done+1)^0,w,c
  2736  0005EA  A4D8               	btfss	status,2,c
  2737  0005EC  EFFA  F002         	goto	u3161
  2738  0005F0  EFFD  F002         	goto	u3160
  2739  0005F4                     u3161:
  2740  0005F4  FFFF               	dw	65535	; assembler added errata NOP
  2741  0005F6  EF06  F003         	goto	l3196
  2742  0005FA                     u3160:
  2743  0005FA  FFFF               	dw	65535	; assembler added errata NOP
  2744  0005FC                     
  2745                           ;main.c: 166:                     state = 8;
  2746  0005FC  0E00               	movlw	0
  2747  0005FE  6E7E               	movwf	(_state+1)^0,c
  2748  000600  0E08               	movlw	8
  2749  000602  6E7D               	movwf	_state^0,c
  2750                           
  2751                           ;main.c: 167:                     state_changed = 1;
  2752  000604  0E01               	movlw	1
  2753  000606  6E7C               	movwf	_state_changed^0,c
  2754                           
  2755                           ;main.c: 168:                 } else if (mix_counter == 40) {
  2756  000608  EFE7  F004         	goto	l3286
  2757  00060C                     l3196:
  2758  00060C  FFFF               	dw	65535	; assembler added errata NOP
  2759  00060E  0E28               	movlw	40
  2760  000610  1877               	xorwf	_mix_counter^0,w,c
  2761  000612  1078               	iorwf	(_mix_counter+1)^0,w,c
  2762  000614  A4D8               	btfss	status,2,c
  2763  000616  EF0F  F003         	goto	u3171
  2764  00061A  EF12  F003         	goto	u3170
  2765  00061E                     u3171:
  2766  00061E  FFFF               	dw	65535	; assembler added errata NOP
  2767  000620  EF4A  F001         	goto	l157
  2768  000624                     u3170:
  2769  000624  FFFF               	dw	65535	; assembler added errata NOP
  2770  000626                     
  2771                           ;main.c: 169:                     dilution_done = 0;
  2772  000626  0E00               	movlw	0
  2773  000628  6E76               	movwf	(_dilution_done+1)^0,c
  2774  00062A  0E00               	movlw	0
  2775  00062C  6E75               	movwf	_dilution_done^0,c
  2776                           
  2777                           ;main.c: 170:                     state = 9;
  2778  00062E  0E00               	movlw	0
  2779  000630  6E7E               	movwf	(_state+1)^0,c
  2780  000632  0E09               	movlw	9
  2781  000634  6E7D               	movwf	_state^0,c
  2782                           
  2783                           ;main.c: 171:                     state_changed = 1;
  2784  000636  0E01               	movlw	1
  2785  000638  6E7C               	movwf	_state_changed^0,c
  2786                           
  2787                           ;main.c: 172:                     mix_counter = 0;
  2788  00063A  0E00               	movlw	0
  2789  00063C  6E78               	movwf	(_mix_counter+1)^0,c
  2790  00063E  0E00               	movlw	0
  2791  000640  6E77               	movwf	_mix_counter^0,c
  2792  000642                     
  2793                           ;main.c: 174:                     change_direction(&joint_stepper);
  2794  000642  0EAE               	movlw	low _joint_stepper
  2795  000644  6E01               	movwf	change_direction@stepper_motor^0,c
  2796  000646  0E00               	movlw	high _joint_stepper
  2797  000648  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2798  00064A  EC79  F013         	call	_change_direction	;wreg free
  2799  00064E                     
  2800                           ;main.c: 175:                     change_direction(&end_effector_stepper);
  2801  00064E  0EA2               	movlw	low _end_effector_stepper
  2802  000650  6E01               	movwf	change_direction@stepper_motor^0,c
  2803  000652  0E00               	movlw	high _end_effector_stepper
  2804  000654  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2805  000656  EC79  F013         	call	_change_direction	;wreg free
  2806  00065A  EFE7  F004         	goto	l3286
  2807  00065E                     l3204:
  2808  00065E  FFFF               	dw	65535	; assembler added errata NOP
  2809  000660  0E08               	movlw	8
  2810  000662  187D               	xorwf	_state^0,w,c
  2811  000664  107E               	iorwf	(_state+1)^0,w,c
  2812  000666  A4D8               	btfss	status,2,c
  2813  000668  EF38  F003         	goto	u3181
  2814  00066C  EF3B  F003         	goto	u3180
  2815  000670                     u3181:
  2816  000670  FFFF               	dw	65535	; assembler added errata NOP
  2817  000672  EFD9  F003         	goto	l3234
  2818  000676                     u3180:
  2819  000676  FFFF               	dw	65535	; assembler added errata NOP
  2820  000678                     
  2821                           ;main.c: 178:                 _delay((unsigned long)((5)*(4000000/4000.0)));
  2822  000678  0E05               	movlw	5
  2823  00067A  6E66               	movwf	??_main^0,c
  2824  00067C  0EDF               	movlw	223
  2825  00067E                     u3457:
  2826  00067E  FFFF               	dw	65535	; errata NOP
  2827  000680  2EE8               	decfsz	wreg,f,c
  2828  000682  D7FD               	bra	u3457
  2829  000684  2E66               	decfsz	??_main^0,f,c
  2830  000686  D7FB               	bra	u3457
  2831  000688                     
  2832                           ;main.c: 179:                 if (!diluting_position_reached){
  2833  000688  0100               	movlb	0	; () banked
  2834  00068A  518C               	movf	_diluting_position_reached& (0+255),w,b
  2835  00068C  118D               	iorwf	(_diluting_position_reached+1)& (0+255),w,b
  2836  00068E  A4D8               	btfss	status,2,c
  2837  000690  EF4C  F003         	goto	u3191
  2838  000694  EF4F  F003         	goto	u3190
  2839  000698                     u3191:
  2840  000698  FFFF               	dw	65535	; assembler added errata NOP
  2841  00069A  EF60  F003         	goto	l3212
  2842  00069E                     u3190:
  2843  00069E  FFFF               	dw	65535	; assembler added errata NOP
  2844  0006A0                     
  2845                           ; BSR set to: 0
  2846                           ;main.c: 180:                     diluting_position_reached = reach_goal(&joint_dilutor_
      +                          stepper, 200);
  2847  0006A0  0E96               	movlw	low _joint_dilutor_stepper
  2848  0006A2  6E09               	movwf	reach_goal@stepper_motor^0,c
  2849  0006A4  0E00               	movlw	high _joint_dilutor_stepper
  2850  0006A6  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  2851  0006A8  0E00               	movlw	0
  2852  0006AA  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2853  0006AC  0EC8               	movlw	200
  2854  0006AE  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  2855  0006B0  ECC7  F011         	call	_reach_goal	;wreg free
  2856  0006B4  C009  F08C         	movff	?_reach_goal,_diluting_position_reached
  2857  0006B8  C00A  F08D         	movff	?_reach_goal+1,_diluting_position_reached+1
  2858                           
  2859                           ;main.c: 181:                 } else if (!dilution_done && diluting_position_reached){
  2860  0006BC  EFE7  F004         	goto	l3286
  2861  0006C0                     l3212:
  2862  0006C0  FFFF               	dw	65535	; assembler added errata NOP
  2863                           
  2864                           ; BSR set to: 0
  2865  0006C2  5075               	movf	_dilution_done^0,w,c
  2866  0006C4  1076               	iorwf	(_dilution_done+1)^0,w,c
  2867  0006C6  A4D8               	btfss	status,2,c
  2868  0006C8  EF68  F003         	goto	u3201
  2869  0006CC  EF6B  F003         	goto	u3200
  2870  0006D0                     u3201:
  2871  0006D0  FFFF               	dw	65535	; assembler added errata NOP
  2872  0006D2  EF8F  F003         	goto	l3222
  2873  0006D6                     u3200:
  2874  0006D6  FFFF               	dw	65535	; assembler added errata NOP
  2875  0006D8                     
  2876                           ; BSR set to: 0
  2877  0006D8  518C               	movf	_diluting_position_reached& (0+255),w,b
  2878  0006DA  118D               	iorwf	(_diluting_position_reached+1)& (0+255),w,b
  2879  0006DC  B4D8               	btfsc	status,2,c
  2880  0006DE  EF73  F003         	goto	u3211
  2881  0006E2  EF76  F003         	goto	u3210
  2882  0006E6                     u3211:
  2883  0006E6  FFFF               	dw	65535	; assembler added errata NOP
  2884  0006E8  EF8F  F003         	goto	l3222
  2885  0006EC                     u3210:
  2886  0006EC  FFFF               	dw	65535	; assembler added errata NOP
  2887  0006EE                     
  2888                           ; BSR set to: 0
  2889                           ;main.c: 184:                     _delay((unsigned long)((2000)*(4000000/4000.0)));
  2890  0006EE  0E08               	movlw	8
  2891  0006F0  6E67               	movwf	(??_main+1)^0,c
  2892  0006F2  0E9E               	movlw	158
  2893  0006F4  6E66               	movwf	??_main^0,c
  2894  0006F6  0E4C               	movlw	76
  2895  0006F8                     u3467:
  2896  0006F8  FFFF               	dw	65535	; errata NOP
  2897  0006FA  2EE8               	decfsz	wreg,f,c
  2898  0006FC  D7FD               	bra	u3467
  2899  0006FE  2E66               	decfsz	??_main^0,f,c
  2900  000700  D7FB               	bra	u3467
  2901  000702  2E67               	decfsz	(??_main+1)^0,f,c
  2902  000704  D7F9               	bra	u3467
  2903  000706                     
  2904                           ;main.c: 185:                     dilution_done = 1;
  2905  000706  0E00               	movlw	0
  2906  000708  6E76               	movwf	(_dilution_done+1)^0,c
  2907  00070A  0E01               	movlw	1
  2908  00070C  6E75               	movwf	_dilution_done^0,c
  2909  00070E                     
  2910                           ;main.c: 186:                     change_direction(&joint_dilutor_stepper);
  2911  00070E  0E96               	movlw	low _joint_dilutor_stepper
  2912  000710  6E01               	movwf	change_direction@stepper_motor^0,c
  2913  000712  0E00               	movlw	high _joint_dilutor_stepper
  2914  000714  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2915  000716  EC79  F013         	call	_change_direction	;wreg free
  2916                           
  2917                           ;main.c: 187:                 } else if (dilution_done && !joint_dilutor_homed){
  2918  00071A  EFE7  F004         	goto	l3286
  2919  00071E                     l3222:
  2920  00071E  FFFF               	dw	65535	; assembler added errata NOP
  2921                           
  2922                           ; BSR set to: 0
  2923  000720  5075               	movf	_dilution_done^0,w,c
  2924  000722  1076               	iorwf	(_dilution_done+1)^0,w,c
  2925  000724  B4D8               	btfsc	status,2,c
  2926  000726  EF97  F003         	goto	u3221
  2927  00072A  EF9A  F003         	goto	u3220
  2928  00072E                     u3221:
  2929  00072E  FFFF               	dw	65535	; assembler added errata NOP
  2930  000730  EFB6  F003         	goto	l3228
  2931  000734                     u3220:
  2932  000734  FFFF               	dw	65535	; assembler added errata NOP
  2933  000736                     
  2934                           ; BSR set to: 0
  2935  000736  5188               	movf	_joint_dilutor_homed& (0+255),w,b
  2936  000738  1189               	iorwf	(_joint_dilutor_homed+1)& (0+255),w,b
  2937  00073A  A4D8               	btfss	status,2,c
  2938  00073C  EFA2  F003         	goto	u3231
  2939  000740  EFA5  F003         	goto	u3230
  2940  000744                     u3231:
  2941  000744  FFFF               	dw	65535	; assembler added errata NOP
  2942  000746  EFB6  F003         	goto	l3228
  2943  00074A                     u3230:
  2944  00074A  FFFF               	dw	65535	; assembler added errata NOP
  2945  00074C                     
  2946                           ; BSR set to: 0
  2947                           ;main.c: 188:                     joint_dilutor_homed = reach_goal(&joint_dilutor_steppe
      +                          r, 200);
  2948  00074C  0E96               	movlw	low _joint_dilutor_stepper
  2949  00074E  6E09               	movwf	reach_goal@stepper_motor^0,c
  2950  000750  0E00               	movlw	high _joint_dilutor_stepper
  2951  000752  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  2952  000754  0E00               	movlw	0
  2953  000756  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2954  000758  0EC8               	movlw	200
  2955  00075A  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  2956  00075C  ECC7  F011         	call	_reach_goal	;wreg free
  2957  000760  C009  F088         	movff	?_reach_goal,_joint_dilutor_homed
  2958  000764  C00A  F089         	movff	?_reach_goal+1,_joint_dilutor_homed+1
  2959                           
  2960                           ;main.c: 189:                 } else if (dilution_done && joint_dilutor_homed){
  2961  000768  EFE7  F004         	goto	l3286
  2962  00076C                     l3228:
  2963  00076C  FFFF               	dw	65535	; assembler added errata NOP
  2964                           
  2965                           ; BSR set to: 0
  2966  00076E  5075               	movf	_dilution_done^0,w,c
  2967  000770  1076               	iorwf	(_dilution_done+1)^0,w,c
  2968  000772  B4D8               	btfsc	status,2,c
  2969  000774  EFBE  F003         	goto	u3241
  2970  000778  EFC1  F003         	goto	u3240
  2971  00077C                     u3241:
  2972  00077C  FFFF               	dw	65535	; assembler added errata NOP
  2973  00077E  EF4A  F001         	goto	l157
  2974  000782                     u3240:
  2975  000782  FFFF               	dw	65535	; assembler added errata NOP
  2976  000784                     
  2977                           ; BSR set to: 0
  2978  000784  5188               	movf	_joint_dilutor_homed& (0+255),w,b
  2979  000786  1189               	iorwf	(_joint_dilutor_homed+1)& (0+255),w,b
  2980  000788  B4D8               	btfsc	status,2,c
  2981  00078A  EFC9  F003         	goto	u3251
  2982  00078E  EFCC  F003         	goto	u3250
  2983  000792                     u3251:
  2984  000792  FFFF               	dw	65535	; assembler added errata NOP
  2985  000794  EF4A  F001         	goto	l157
  2986  000798                     u3250:
  2987  000798  FFFF               	dw	65535	; assembler added errata NOP
  2988  00079A                     
  2989                           ; BSR set to: 0
  2990                           ;main.c: 190:                     state = 7;
  2991  00079A  0E00               	movlw	0
  2992  00079C  6E7E               	movwf	(_state+1)^0,c
  2993  00079E  0E07               	movlw	7
  2994  0007A0  6E7D               	movwf	_state^0,c
  2995                           
  2996                           ;main.c: 191:                     state_changed = 1;
  2997  0007A2  0E01               	movlw	1
  2998  0007A4  6E7C               	movwf	_state_changed^0,c
  2999                           
  3000                           ;main.c: 192:                     diluting_position_reached = 0;
  3001  0007A6  0E00               	movlw	0
  3002  0007A8  6F8D               	movwf	(_diluting_position_reached+1)& (0+255),b
  3003  0007AA  0E00               	movlw	0
  3004  0007AC  6F8C               	movwf	_diluting_position_reached& (0+255),b
  3005  0007AE  EFE7  F004         	goto	l3286
  3006  0007B2                     l3234:
  3007  0007B2  FFFF               	dw	65535	; assembler added errata NOP
  3008  0007B4  0E09               	movlw	9
  3009  0007B6  187D               	xorwf	_state^0,w,c
  3010  0007B8  107E               	iorwf	(_state+1)^0,w,c
  3011  0007BA  A4D8               	btfss	status,2,c
  3012  0007BC  EFE2  F003         	goto	u3261
  3013  0007C0  EFE5  F003         	goto	u3260
  3014  0007C4                     u3261:
  3015  0007C4  FFFF               	dw	65535	; assembler added errata NOP
  3016  0007C6  EF46  F004         	goto	l3252
  3017  0007CA                     u3260:
  3018  0007CA  FFFF               	dw	65535	; assembler added errata NOP
  3019  0007CC                     
  3020                           ;main.c: 196:                 _delay((unsigned long)((20)*(4000000/4000.0)));
  3021  0007CC  0E14               	movlw	20
  3022  0007CE  6E66               	movwf	??_main^0,c
  3023  0007D0  0E7D               	movlw	125
  3024  0007D2                     u3477:
  3025  0007D2  FFFF               	dw	65535	; errata NOP
  3026  0007D4  2EE8               	decfsz	wreg,f,c
  3027  0007D6  D7FD               	bra	u3477
  3028  0007D8  2E66               	decfsz	??_main^0,f,c
  3029  0007DA  D7FB               	bra	u3477
  3030  0007DC  D000               	nop2	
  3031  0007DE                     
  3032                           ;main.c: 198:                 if (!end_effector_homed){
  3033  0007DE  506F               	movf	_end_effector_homed^0,w,c
  3034  0007E0  1070               	iorwf	(_end_effector_homed+1)^0,w,c
  3035  0007E2  A4D8               	btfss	status,2,c
  3036  0007E4  EFF6  F003         	goto	u3271
  3037  0007E8  EFF9  F003         	goto	u3270
  3038  0007EC                     u3271:
  3039  0007EC  FFFF               	dw	65535	; assembler added errata NOP
  3040  0007EE  EF08  F004         	goto	l3242
  3041  0007F2                     u3270:
  3042  0007F2  FFFF               	dw	65535	; assembler added errata NOP
  3043  0007F4                     
  3044                           ;main.c: 199:                     end_effector_homed = reach_goal(&end_effector_stepper,
      +                           100);
  3045  0007F4  0EA2               	movlw	low _end_effector_stepper
  3046  0007F6  6E09               	movwf	reach_goal@stepper_motor^0,c
  3047  0007F8  0E00               	movlw	high _end_effector_stepper
  3048  0007FA  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  3049  0007FC  0E00               	movlw	0
  3050  0007FE  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  3051  000800  0E64               	movlw	100
  3052  000802  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  3053  000804  ECC7  F011         	call	_reach_goal	;wreg free
  3054  000808  C009  F06F         	movff	?_reach_goal,_end_effector_homed
  3055  00080C  C00A  F070         	movff	?_reach_goal+1,_end_effector_homed+1
  3056  000810                     l3242:
  3057  000810  FFFF               	dw	65535	; assembler added errata NOP
  3058                           
  3059                           ;main.c: 202:                 if (end_effector_homed && !joint_homed){
  3060  000812  506F               	movf	_end_effector_homed^0,w,c
  3061  000814  1070               	iorwf	(_end_effector_homed+1)^0,w,c
  3062  000816  B4D8               	btfsc	status,2,c
  3063  000818  EF10  F004         	goto	u3281
  3064  00081C  EF13  F004         	goto	u3280
  3065  000820                     u3281:
  3066  000820  FFFF               	dw	65535	; assembler added errata NOP
  3067  000822  EF2E  F004         	goto	l3248
  3068  000826                     u3280:
  3069  000826  FFFF               	dw	65535	; assembler added errata NOP
  3070  000828  0100               	movlb	0	; () banked
  3071  00082A  518A               	movf	_joint_homed& (0+255),w,b
  3072  00082C  118B               	iorwf	(_joint_homed+1)& (0+255),w,b
  3073  00082E  A4D8               	btfss	status,2,c
  3074  000830  EF1C  F004         	goto	u3291
  3075  000834  EF1F  F004         	goto	u3290
  3076  000838                     u3291:
  3077  000838  FFFF               	dw	65535	; assembler added errata NOP
  3078  00083A  EF2E  F004         	goto	l3248
  3079  00083E                     u3290:
  3080  00083E  FFFF               	dw	65535	; assembler added errata NOP
  3081  000840                     
  3082                           ; BSR set to: 0
  3083                           ;main.c: 203:                     joint_homed = reach_goal(&joint_stepper, 50);
  3084  000840  0EAE               	movlw	low _joint_stepper
  3085  000842  6E09               	movwf	reach_goal@stepper_motor^0,c
  3086  000844  0E00               	movlw	high _joint_stepper
  3087  000846  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  3088  000848  0E00               	movlw	0
  3089  00084A  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  3090  00084C  0E32               	movlw	50
  3091  00084E  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  3092  000850  ECC7  F011         	call	_reach_goal	;wreg free
  3093  000854  C009  F08A         	movff	?_reach_goal,_joint_homed
  3094  000858  C00A  F08B         	movff	?_reach_goal+1,_joint_homed+1
  3095  00085C                     l3248:
  3096  00085C  FFFF               	dw	65535	; assembler added errata NOP
  3097                           
  3098                           ;main.c: 206:                 if (end_effector_homed * joint_homed){
  3099  00085E  C06F  F001         	movff	_end_effector_homed,___wmul@multiplier
  3100  000862  C070  F002         	movff	_end_effector_homed+1,___wmul@multiplier+1
  3101  000866  C08A  F003         	movff	_joint_homed,___wmul@multiplicand
  3102  00086A  C08B  F004         	movff	_joint_homed+1,___wmul@multiplicand+1
  3103  00086E  ECBF  F013         	call	___wmul	;wreg free
  3104  000872  5001               	movf	?___wmul^0,w,c
  3105  000874  1002               	iorwf	(?___wmul+1)^0,w,c
  3106  000876  B4D8               	btfsc	status,2,c
  3107  000878  EF40  F004         	goto	u3301
  3108  00087C  EF43  F004         	goto	u3300
  3109  000880                     u3301:
  3110  000880  FFFF               	dw	65535	; assembler added errata NOP
  3111  000882  EFE7  F004         	goto	l3286
  3112  000886                     u3300:
  3113  000886  FFFF               	dw	65535	; assembler added errata NOP
  3114  000888  EF59  F001         	goto	l3122
  3115  00088C                     l3252:
  3116  00088C  FFFF               	dw	65535	; assembler added errata NOP
  3117  00088E  0E0A               	movlw	10
  3118  000890  187D               	xorwf	_state^0,w,c
  3119  000892  107E               	iorwf	(_state+1)^0,w,c
  3120  000894  A4D8               	btfss	status,2,c
  3121  000896  EF4F  F004         	goto	u3311
  3122  00089A  EF52  F004         	goto	u3310
  3123  00089E                     u3311:
  3124  00089E  FFFF               	dw	65535	; assembler added errata NOP
  3125  0008A0  EF5B  F004         	goto	l3256
  3126  0008A4                     u3310:
  3127  0008A4  FFFF               	dw	65535	; assembler added errata NOP
  3128  0008A6                     
  3129                           ;main.c: 211:                 state = 11;
  3130  0008A6  0E00               	movlw	0
  3131  0008A8  6E7E               	movwf	(_state+1)^0,c
  3132  0008AA  0E0B               	movlw	11
  3133  0008AC  6E7D               	movwf	_state^0,c
  3134                           
  3135                           ;main.c: 212:                 state_changed = 1;
  3136  0008AE  0E01               	movlw	1
  3137  0008B0  6E7C               	movwf	_state_changed^0,c
  3138                           
  3139                           ;main.c: 213:             }else if (state == 11){
  3140  0008B2  EFE7  F004         	goto	l3286
  3141  0008B6                     l3256:
  3142  0008B6  FFFF               	dw	65535	; assembler added errata NOP
  3143  0008B8  0E0B               	movlw	11
  3144  0008BA  187D               	xorwf	_state^0,w,c
  3145  0008BC  107E               	iorwf	(_state+1)^0,w,c
  3146  0008BE  A4D8               	btfss	status,2,c
  3147  0008C0  EF64  F004         	goto	u3321
  3148  0008C4  EF67  F004         	goto	u3320
  3149  0008C8                     u3321:
  3150  0008C8  FFFF               	dw	65535	; assembler added errata NOP
  3151  0008CA  EF8E  F004         	goto	l3264
  3152  0008CE                     u3320:
  3153  0008CE  FFFF               	dw	65535	; assembler added errata NOP
  3154  0008D0                     
  3155                           ;main.c: 214:                 if (timer_done){
  3156  0008D0  5079               	movf	_timer_done^0,w,c
  3157  0008D2  B4D8               	btfsc	status,2,c
  3158  0008D4  EF6E  F004         	goto	u3331
  3159  0008D8  EF71  F004         	goto	u3330
  3160  0008DC                     u3331:
  3161  0008DC  FFFF               	dw	65535	; assembler added errata NOP
  3162  0008DE  EF80  F004         	goto	l200
  3163  0008E2                     u3330:
  3164  0008E2  FFFF               	dw	65535	; assembler added errata NOP
  3165  0008E4                     
  3166                           ;main.c: 215:                     state_changed = 1;
  3167  0008E4  0E01               	movlw	1
  3168  0008E6  6E7C               	movwf	_state_changed^0,c
  3169                           
  3170                           ;main.c: 216:                     state = 13;
  3171  0008E8  0E00               	movlw	0
  3172  0008EA  6E7E               	movwf	(_state+1)^0,c
  3173  0008EC  0E0D               	movlw	13
  3174  0008EE  6E7D               	movwf	_state^0,c
  3175                           
  3176                           ;main.c: 217:                     trash_counter = 0;
  3177  0008F0  0E00               	movlw	0
  3178  0008F2  6E74               	movwf	(_trash_counter+1)^0,c
  3179  0008F4  0E00               	movlw	0
  3180  0008F6  6E73               	movwf	_trash_counter^0,c
  3181                           
  3182                           ;main.c: 218:                     timer_done = 0;
  3183  0008F8  0E00               	movlw	0
  3184  0008FA  6E79               	movwf	_timer_done^0,c
  3185                           
  3186                           ;main.c: 219:                 } else {
  3187  0008FC  EFE7  F004         	goto	l3286
  3188  000900                     l200:
  3189  000900  FFFF               	dw	65535	; assembler added errata NOP
  3190                           
  3191                           ;main.c: 220:                     if (T0CONbits.TMR0ON == 0){
  3192  000902  BED5               	btfsc	213,7,c	;volatile
  3193  000904  EF86  F004         	goto	u3341
  3194  000908  EF89  F004         	goto	u3340
  3195  00090C                     u3341:
  3196  00090C  FFFF               	dw	65535	; assembler added errata NOP
  3197  00090E  EF4A  F001         	goto	l157
  3198  000912                     u3340:
  3199  000912  FFFF               	dw	65535	; assembler added errata NOP
  3200  000914                     
  3201                           ;main.c: 221:                         init_timer_0();
  3202  000914  ECFC  F013         	call	_init_timer_0	;wreg free
  3203  000918  EFE7  F004         	goto	l3286
  3204  00091C                     l3264:
  3205  00091C  FFFF               	dw	65535	; assembler added errata NOP
  3206  00091E  0E0C               	movlw	12
  3207  000920  187D               	xorwf	_state^0,w,c
  3208  000922  107E               	iorwf	(_state+1)^0,w,c
  3209  000924  A4D8               	btfss	status,2,c
  3210  000926  EF97  F004         	goto	u3351
  3211  00092A  EF9A  F004         	goto	u3350
  3212  00092E                     u3351:
  3213  00092E  FFFF               	dw	65535	; assembler added errata NOP
  3214  000930  EFA4  F004         	goto	l3270
  3215  000934                     u3350:
  3216  000934  FFFF               	dw	65535	; assembler added errata NOP
  3217  000936                     
  3218                           ;main.c: 226:                 state = 0;
  3219  000936  0E00               	movlw	0
  3220  000938  6E7E               	movwf	(_state+1)^0,c
  3221  00093A  0E00               	movlw	0
  3222  00093C  6E7D               	movwf	_state^0,c
  3223                           
  3224                           ;main.c: 228:                 state_changed = 1;
  3225  00093E  0E01               	movlw	1
  3226  000940  6E7C               	movwf	_state_changed^0,c
  3227  000942                     
  3228                           ;main.c: 229:                 T0CONbits.TMR0ON = 0;
  3229  000942  9ED5               	bcf	213,7,c	;volatile
  3230                           
  3231                           ;main.c: 230:             } else if (state == 13){
  3232  000944  EFE7  F004         	goto	l3286
  3233  000948                     l3270:
  3234  000948  FFFF               	dw	65535	; assembler added errata NOP
  3235  00094A  0E0D               	movlw	13
  3236  00094C  187D               	xorwf	_state^0,w,c
  3237  00094E  107E               	iorwf	(_state+1)^0,w,c
  3238  000950  A4D8               	btfss	status,2,c
  3239  000952  EFAD  F004         	goto	u3361
  3240  000956  EFB0  F004         	goto	u3360
  3241  00095A                     u3361:
  3242  00095A  FFFF               	dw	65535	; assembler added errata NOP
  3243  00095C  EFE7  F004         	goto	l3286
  3244  000960                     u3360:
  3245  000960  FFFF               	dw	65535	; assembler added errata NOP
  3246  000962                     
  3247                           ;main.c: 231:                 LATAbits.LATA1 = 1;
  3248  000962  8289               	bsf	137,1,c	;volatile
  3249  000964                     
  3250                           ;main.c: 232:                 if ( trash_counter < 100){
  3251  000964  BE74               	btfsc	(_trash_counter+1)^0,7,c
  3252  000966  EFC1  F004         	goto	u3370
  3253  00096A  5074               	movf	(_trash_counter+1)^0,w,c
  3254  00096C  E107               	bnz	u3371
  3255  00096E  0E64               	movlw	100
  3256  000970  5C73               	subwf	_trash_counter^0,w,c
  3257  000972  B0D8               	btfsc	status,0,c
  3258  000974  EFBE  F004         	goto	u3371
  3259  000978  EFC1  F004         	goto	u3370
  3260  00097C                     u3371:
  3261  00097C  FFFF               	dw	65535	; assembler added errata NOP
  3262  00097E  EFCF  F004         	goto	l3280
  3263  000982                     u3370:
  3264  000982  FFFF               	dw	65535	; assembler added errata NOP
  3265  000984                     
  3266                           ;main.c: 233:                     _delay((unsigned long)((10)*(4000000/4000.0)));
  3267  000984  0E0A               	movlw	10
  3268  000986  6E66               	movwf	??_main^0,c
  3269  000988  0EBE               	movlw	190
  3270  00098A                     u3487:
  3271  00098A  FFFF               	dw	65535	; errata NOP
  3272  00098C  2EE8               	decfsz	wreg,f,c
  3273  00098E  D7FD               	bra	u3487
  3274  000990  2E66               	decfsz	??_main^0,f,c
  3275  000992  D7FB               	bra	u3487
  3276  000994  D000               	nop2	
  3277  000996                     
  3278                           ;main.c: 234:                     trash_counter++;
  3279  000996  4A73               	infsnz	_trash_counter^0,f,c
  3280  000998  2A74               	incf	(_trash_counter+1)^0,f,c
  3281                           
  3282                           ;main.c: 235:                 } else if (trash_counter >= 100){
  3283  00099A  EFE7  F004         	goto	l3286
  3284  00099E                     l3280:
  3285  00099E  FFFF               	dw	65535	; assembler added errata NOP
  3286  0009A0  BE74               	btfsc	(_trash_counter+1)^0,7,c
  3287  0009A2  EFDC  F004         	goto	u3381
  3288  0009A6  5074               	movf	(_trash_counter+1)^0,w,c
  3289  0009A8  E10A               	bnz	u3380
  3290  0009AA  0E64               	movlw	100
  3291  0009AC  5C73               	subwf	_trash_counter^0,w,c
  3292  0009AE  A0D8               	btfss	status,0,c
  3293  0009B0  EFDC  F004         	goto	u3381
  3294  0009B4  EFDF  F004         	goto	u3380
  3295  0009B8                     u3381:
  3296  0009B8  FFFF               	dw	65535	; assembler added errata NOP
  3297  0009BA  EF4A  F001         	goto	l157
  3298  0009BE                     u3380:
  3299  0009BE  FFFF               	dw	65535	; assembler added errata NOP
  3300  0009C0                     
  3301                           ;main.c: 236:                     state = 0;
  3302  0009C0  0E00               	movlw	0
  3303  0009C2  6E7E               	movwf	(_state+1)^0,c
  3304  0009C4  0E00               	movlw	0
  3305  0009C6  6E7D               	movwf	_state^0,c
  3306                           
  3307                           ;main.c: 237:                     state_changed = 1;
  3308  0009C8  0E01               	movlw	1
  3309  0009CA  6E7C               	movwf	_state_changed^0,c
  3310  0009CC                     
  3311                           ;main.c: 238:                     T0CONbits.TMR0ON = 0;
  3312  0009CC  9ED5               	bcf	213,7,c	;volatile
  3313  0009CE                     l3286:
  3314  0009CE  FFFF               	dw	65535	; assembler added errata NOP
  3315  0009D0  0E0E               	movlw	14
  3316  0009D2  187D               	xorwf	_state^0,w,c
  3317  0009D4  107E               	iorwf	(_state+1)^0,w,c
  3318  0009D6  A4D8               	btfss	status,2,c
  3319  0009D8  EFF0  F004         	goto	u3391
  3320  0009DC  EFF3  F004         	goto	u3390
  3321  0009E0                     u3391:
  3322  0009E0  FFFF               	dw	65535	; assembler added errata NOP
  3323  0009E2  EFA7  F000         	goto	l3082
  3324  0009E6                     u3390:
  3325  0009E6  FFFF               	dw	65535	; assembler added errata NOP
  3326  0009E8                     
  3327                           ;main.c: 242:                 if (LATCbits.LATC4 == 1 && LATCbits.LATC5 == 1 && get_lite
      +                          rs() > 0.1){
  3328  0009E8  A88B               	btfss	139,4,c	;volatile
  3329  0009EA  EFF9  F004         	goto	u3401
  3330  0009EE  EFFC  F004         	goto	u3400
  3331  0009F2                     u3401:
  3332  0009F2  FFFF               	dw	65535	; assembler added errata NOP
  3333  0009F4  EF41  F005         	goto	l155
  3334  0009F8                     u3400:
  3335  0009F8  FFFF               	dw	65535	; assembler added errata NOP
  3336  0009FA  AA8B               	btfss	139,5,c	;volatile
  3337  0009FC  EF02  F005         	goto	u3411
  3338  000A00  EF05  F005         	goto	u3410
  3339  000A04                     u3411:
  3340  000A04  FFFF               	dw	65535	; assembler added errata NOP
  3341  000A06  EF41  F005         	goto	l155
  3342  000A0A                     u3410:
  3343  000A0A  FFFF               	dw	65535	; assembler added errata NOP
  3344  000A0C  EC3B  F012         	call	_get_liters	;wreg free
  3345  000A10  C03E  F06B         	movff	?_get_liters,_main$1677
  3346  000A14  C03F  F06C         	movff	?_get_liters+1,_main$1677+1
  3347  000A18  0E00               	movlw	0
  3348  000A1A  BE6C               	btfsc	(_main$1677+1)^0,7,c
  3349  000A1C  0EFF               	movlw	-1
  3350  000A1E  6E6D               	movwf	(_main$1677+2)^0,c
  3351  000A20  6E6E               	movwf	(_main$1677+3)^0,c
  3352  000A22  0ECD               	movlw	205
  3353  000A24  6E40               	movwf	___flge@ff1^0,c
  3354  000A26  0ECC               	movlw	204
  3355  000A28  6E41               	movwf	(___flge@ff1+1)^0,c
  3356  000A2A  0ECC               	movlw	204
  3357  000A2C  6E42               	movwf	(___flge@ff1+2)^0,c
  3358  000A2E  0E3D               	movlw	61
  3359  000A30  6E43               	movwf	(___flge@ff1+3)^0,c
  3360  000A32  C06B  F00D         	movff	_main$1677,___xxtofl@val
  3361  000A36  C06C  F00E         	movff	_main$1677+1,___xxtofl@val+1
  3362  000A3A  C06D  F00F         	movff	_main$1677+2,___xxtofl@val+2
  3363  000A3E  C06E  F010         	movff	_main$1677+3,___xxtofl@val+3
  3364  000A42  0E01               	movlw	1
  3365  000A44  EC5F  F00C         	call	___xxtofl
  3366  000A48  C00D  F044         	movff	?___xxtofl,___flge@ff2
  3367  000A4C  C00E  F045         	movff	?___xxtofl+1,___flge@ff2+1
  3368  000A50  C00F  F046         	movff	?___xxtofl+2,___flge@ff2+2
  3369  000A54  C010  F047         	movff	?___xxtofl+3,___flge@ff2+3
  3370  000A58  ECAD  F00E         	call	___flge	;wreg free
  3371  000A5C  B0D8               	btfsc	status,0,c
  3372  000A5E  EF33  F005         	goto	u3421
  3373  000A62  EF36  F005         	goto	u3420
  3374  000A66                     u3421:
  3375  000A66  FFFF               	dw	65535	; assembler added errata NOP
  3376  000A68  EF41  F005         	goto	l155
  3377  000A6C                     u3420:
  3378  000A6C  FFFF               	dw	65535	; assembler added errata NOP
  3379  000A6E                     
  3380                           ;main.c: 243:                     LATCbits.LATC4 = 0;
  3381  000A6E  988B               	bcf	139,4,c	;volatile
  3382                           
  3383                           ;main.c: 244:                     LATCbits.LATC5 = 0;
  3384  000A70  9A8B               	bcf	139,5,c	;volatile
  3385                           
  3386                           ;main.c: 245:                     state = state_before_error;
  3387  000A72  C0BE  F07D         	movff	_state_before_error,_state
  3388  000A76  C0BF  F07E         	movff	_state_before_error+1,_state+1
  3389  000A7A                     
  3390                           ;main.c: 246:                     state_changed = 1;
  3391  000A7A  0E01               	movlw	1
  3392  000A7C  6E7C               	movwf	_state_changed^0,c
  3393  000A7E  EFA7  F000         	goto	l3082
  3394  000A82                     l155:
  3395  000A82  FFFF               	dw	65535	; assembler added errata NOP
  3396  000A84  EFA7  F000         	goto	l3082
  3397  000A88  EF3A  F000         	goto	start
  3398  000A8C                     __end_of_main:
  3399                           	callstack 0
  3400                           
  3401 ;; *************** function _wait_for_zero *****************
  3402 ;; Defined at:
  3403 ;;		line 42 in file "oven.c"
  3404 ;; Parameters:    Size  Location     Type
  3405 ;;		None
  3406 ;; Auto vars:     Size  Location     Type
  3407 ;;		None
  3408 ;; Return value:  Size  Location     Type
  3409 ;;                  1    wreg      void 
  3410 ;; Registers used:
  3411 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3417 ;;      Params:         0       0       0       0       0       0       0
  3418 ;;      Locals:         0       0       0       0       0       0       0
  3419 ;;      Temps:          0       0       0       0       0       0       0
  3420 ;;      Totals:         0       0       0       0       0       0       0
  3421 ;;Total ram usage:        0 bytes
  3422 ;; Hardware stack levels used:    1
  3423 ;; Hardware stack levels required when called:    3
  3424 ;; This function calls:
  3425 ;;		_get_temperature
  3426 ;; This function is called by:
  3427 ;;		_main
  3428 ;; This function uses a non-reentrant model
  3429 ;;
  3430                           
  3431                           	psect	text1
  3432  0027D2                     __ptext1:
  3433                           	callstack 0
  3434  0027D2                     _wait_for_zero:
  3435                           	callstack 0
  3436  0027D2  FFFF               	dw	65535	; assembler added errata NOP
  3437  0027D4                     l391:
  3438  0027D4  FFFF               	dw	65535	; assembler added errata NOP
  3439  0027D6                     
  3440                           ;oven.c: 44:         if (get_temperature() == -55){
  3441  0027D6  EC03  F012         	call	_get_temperature	;wreg free
  3442  0027DA  0EC9               	movlw	201
  3443  0027DC  183E               	xorwf	?_get_temperature^0,w,c
  3444  0027DE  E106               	bnz	u2921
  3445  0027E0  283F               	incf	(?_get_temperature+1)^0,w,c
  3446  0027E2  A4D8               	btfss	status,2,c
  3447  0027E4  EFF6  F013         	goto	u2921
  3448  0027E8  EFF9  F013         	goto	u2920
  3449  0027EC                     u2921:
  3450  0027EC  FFFF               	dw	65535	; assembler added errata NOP
  3451  0027EE  EFEA  F013         	goto	l391
  3452  0027F2                     u2920:
  3453  0027F2  FFFF               	dw	65535	; assembler added errata NOP
  3454  0027F4  0012               	return		;funcret
  3455  0027F6  FFFF               	dw	65535	; errata NOP
  3456  0027F8                     __end_of_wait_for_zero:
  3457                           	callstack 0
  3458                           
  3459 ;; *************** function _get_temperature *****************
  3460 ;; Defined at:
  3461 ;;		line 30 in file "oven.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;		None
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;		None
  3466 ;; Return value:  Size  Location     Type
  3467 ;;                  2   61[COMRAM] int 
  3468 ;; Registers used:
  3469 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3475 ;;      Params:         2       0       0       0       0       0       0
  3476 ;;      Locals:         0       0       0       0       0       0       0
  3477 ;;      Temps:          0       0       0       0       0       0       0
  3478 ;;      Totals:         2       0       0       0       0       0       0
  3479 ;;Total ram usage:        2 bytes
  3480 ;; Hardware stack levels used:    1
  3481 ;; Hardware stack levels required when called:    2
  3482 ;; This function calls:
  3483 ;;		___flmul
  3484 ;;		___fltol
  3485 ;;		___xxtofl
  3486 ;; This function is called by:
  3487 ;;		_main
  3488 ;;		_wait_for_zero
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492                           	psect	text2
  3493  002406                     __ptext2:
  3494                           	callstack 0
  3495  002406                     _get_temperature:
  3496                           	callstack 0
  3497  002406  FFFF               	dw	65535	; assembler added errata NOP
  3498  002408                     
  3499                           ;oven.c: 31:     ADCON0bits.GO = 1;
  3500  002408  84C2               	bsf	194,2,c	;volatile
  3501  00240A                     l379:
  3502  00240A  FFFF               	dw	65535	; assembler added errata NOP
  3503  00240C  B4C2               	btfsc	194,2,c	;volatile
  3504  00240E  EF0B  F012         	goto	u2651
  3505  002412  EF0E  F012         	goto	u2650
  3506  002416                     u2651:
  3507  002416  FFFF               	dw	65535	; assembler added errata NOP
  3508  002418  EF05  F012         	goto	l379
  3509  00241C                     u2650:
  3510  00241C  FFFF               	dw	65535	; assembler added errata NOP
  3511  00241E                     
  3512                           ;oven.c: 33:     return (int) (ADRESH * 0.25) + -55;
  3513  00241E  0E00               	movlw	0
  3514  002420  6E1F               	movwf	___flmul@a^0,c
  3515  002422  0E00               	movlw	0
  3516  002424  6E20               	movwf	(___flmul@a+1)^0,c
  3517  002426  0E80               	movlw	128
  3518  002428  6E21               	movwf	(___flmul@a+2)^0,c
  3519  00242A  0E3E               	movlw	62
  3520  00242C  6E22               	movwf	(___flmul@a+3)^0,c
  3521  00242E  50C4               	movf	196,w,c	;volatile
  3522  002430  6E0D               	movwf	___xxtofl@val^0,c
  3523  002432  6A0E               	clrf	(___xxtofl@val+1)^0,c
  3524  002434  6A0F               	clrf	(___xxtofl@val+2)^0,c
  3525  002436  6A10               	clrf	(___xxtofl@val+3)^0,c
  3526  002438  0E01               	movlw	1
  3527  00243A  EC5F  F00C         	call	___xxtofl
  3528  00243E  C00D  F01B         	movff	?___xxtofl,___flmul@b
  3529  002442  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  3530  002446  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  3531  00244A  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  3532  00244E  EC1A  F008         	call	___flmul	;wreg free
  3533  002452  C01B  F034         	movff	?___flmul,___fltol@f1
  3534  002456  C01C  F035         	movff	?___flmul+1,___fltol@f1+1
  3535  00245A  C01D  F036         	movff	?___flmul+2,___fltol@f1+2
  3536  00245E  C01E  F037         	movff	?___flmul+3,___fltol@f1+3
  3537  002462  EC12  F00E         	call	___fltol	;wreg free
  3538  002466  0EC9               	movlw	201
  3539  002468  2434               	addwf	?___fltol^0,w,c
  3540  00246A  6E3E               	movwf	?_get_temperature^0,c
  3541  00246C  0EFF               	movlw	255
  3542  00246E  2035               	addwfc	(?___fltol+1)^0,w,c
  3543  002470  6E3F               	movwf	(?_get_temperature+1)^0,c
  3544  002472  0012               	return		;funcret
  3545  002474  FFFF               	dw	65535	; errata NOP
  3546  002476                     __end_of_get_temperature:
  3547                           	callstack 0
  3548                           
  3549 ;; *************** function _state_translator_micro_to_fpga *****************
  3550 ;; Defined at:
  3551 ;;		line 26 in file "utils.c"
  3552 ;; Parameters:    Size  Location     Type
  3553 ;;  state           2    0[COMRAM] PTR int 
  3554 ;;		 -> state(2), 
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;  state_machin    1    4[COMRAM] unsigned char 
  3557 ;; Return value:  Size  Location     Type
  3558 ;;                  1    wreg      unsigned char 
  3559 ;; Registers used:
  3560 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3561 ;; Tracked objects:
  3562 ;;		On entry : 0/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3566 ;;      Params:         2       0       0       0       0       0       0
  3567 ;;      Locals:         1       0       0       0       0       0       0
  3568 ;;      Temps:          2       0       0       0       0       0       0
  3569 ;;      Totals:         5       0       0       0       0       0       0
  3570 ;;Total ram usage:        5 bytes
  3571 ;; Hardware stack levels used:    1
  3572 ;; Hardware stack levels required when called:    1
  3573 ;; This function calls:
  3574 ;;		Nothing
  3575 ;; This function is called by:
  3576 ;;		_main
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           
  3580                           	psect	text3
  3581  002286                     __ptext3:
  3582                           	callstack 0
  3583  002286                     _state_translator_micro_to_fpga:
  3584                           	callstack 0
  3585  002286  FFFF               	dw	65535	; assembler added errata NOP
  3586  002288                     
  3587                           ;utils.c: 27:     unsigned char state_machine_code;;utils.c: 28:     if (*state == 2){
  3588  002288  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  3589  00228C  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  3590  002290  0E02               	movlw	2
  3591  002292  18DE               	xorwf	postinc2,w,c
  3592  002294  10DE               	iorwf	postinc2,w,c
  3593  002296  A4D8               	btfss	status,2,c
  3594  002298  EF50  F011         	goto	u2851
  3595  00229C  EF53  F011         	goto	u2850
  3596  0022A0                     u2851:
  3597  0022A0  FFFF               	dw	65535	; assembler added errata NOP
  3598  0022A2  EF58  F011         	goto	l2932
  3599  0022A6                     u2850:
  3600  0022A6  FFFF               	dw	65535	; assembler added errata NOP
  3601  0022A8                     
  3602                           ;utils.c: 29:         state_machine_code = 0x10;
  3603  0022A8  0E10               	movlw	16
  3604  0022AA  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  3605                           
  3606                           ;utils.c: 30:     } else if (*state == 0) {
  3607  0022AC  EF84  F011         	goto	l314
  3608  0022B0                     l2932:
  3609  0022B0  FFFF               	dw	65535	; assembler added errata NOP
  3610  0022B2  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  3611  0022B6  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  3612  0022BA  50DE               	movf	postinc2,w,c
  3613  0022BC  10DE               	iorwf	postinc2,w,c
  3614  0022BE  A4D8               	btfss	status,2,c
  3615  0022C0  EF64  F011         	goto	u2861
  3616  0022C4  EF67  F011         	goto	u2860
  3617  0022C8                     u2861:
  3618  0022C8  FFFF               	dw	65535	; assembler added errata NOP
  3619  0022CA  EF6C  F011         	goto	l2936
  3620  0022CE                     u2860:
  3621  0022CE  FFFF               	dw	65535	; assembler added errata NOP
  3622  0022D0                     
  3623                           ;utils.c: 31:         state_machine_code = 0x00;
  3624  0022D0  0E00               	movlw	0
  3625  0022D2  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  3626                           
  3627                           ;utils.c: 32:     } else if (*state == 14) {
  3628  0022D4  EF84  F011         	goto	l314
  3629  0022D8                     l2936:
  3630  0022D8  FFFF               	dw	65535	; assembler added errata NOP
  3631  0022DA  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  3632  0022DE  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  3633  0022E2  0E0E               	movlw	14
  3634  0022E4  18DE               	xorwf	postinc2,w,c
  3635  0022E6  10DE               	iorwf	postinc2,w,c
  3636  0022E8  A4D8               	btfss	status,2,c
  3637  0022EA  EF79  F011         	goto	u2871
  3638  0022EE  EF7C  F011         	goto	u2870
  3639  0022F2                     u2871:
  3640  0022F2  FFFF               	dw	65535	; assembler added errata NOP
  3641  0022F4  EF81  F011         	goto	l2940
  3642  0022F8                     u2870:
  3643  0022F8  FFFF               	dw	65535	; assembler added errata NOP
  3644  0022FA                     
  3645                           ;utils.c: 33:         state_machine_code = 0x40;
  3646  0022FA  0E40               	movlw	64
  3647  0022FC  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  3648                           
  3649                           ;utils.c: 34:     } else {
  3650  0022FE  EF84  F011         	goto	l314
  3651  002302                     l2940:
  3652  002302  FFFF               	dw	65535	; assembler added errata NOP
  3653                           
  3654                           ;utils.c: 35:         state_machine_code = 0x80;
  3655  002304  0E80               	movlw	128
  3656  002306  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  3657  002308                     l314:
  3658  002308  FFFF               	dw	65535	; assembler added errata NOP
  3659                           
  3660                           ;utils.c: 37:     return state_machine_code;
  3661  00230A  5005               	movf	state_translator_micro_to_fpga@state_machine_code^0,w,c
  3662  00230C  0012               	return		;funcret
  3663  00230E  FFFF               	dw	65535	; errata NOP
  3664  002310                     __end_of_state_translator_micro_to_fpga:
  3665                           	callstack 0
  3666                           
  3667 ;; *************** function _state_translator_fpga_to_micro *****************
  3668 ;; Defined at:
  3669 ;;		line 2 in file "utils.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;  state_machin    1    wreg     unsigned char 
  3672 ;;  state           2    2[COMRAM] PTR int 
  3673 ;;		 -> state(2), 
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;  state_machin    1    4[COMRAM] unsigned char 
  3676 ;; Return value:  Size  Location     Type
  3677 ;;                  1    wreg      void 
  3678 ;; Registers used:
  3679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3685 ;;      Params:         2       0       0       0       0       0       0
  3686 ;;      Locals:         1       0       0       0       0       0       0
  3687 ;;      Temps:          0       0       0       0       0       0       0
  3688 ;;      Totals:         3       0       0       0       0       0       0
  3689 ;;Total ram usage:        3 bytes
  3690 ;; Hardware stack levels used:    1
  3691 ;; Hardware stack levels required when called:    3
  3692 ;; This function calls:
  3693 ;;		_lcd_dat
  3694 ;; This function is called by:
  3695 ;;		_main
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           	psect	text4
  3700  001AB6                     __ptext4:
  3701                           	callstack 0
  3702  001AB6                     _state_translator_fpga_to_micro:
  3703                           	callstack 0
  3704  001AB6  FFFF               	dw	65535	; assembler added errata NOP
  3705                           
  3706                           ;incstack = 0
  3707                           ;state_translator_fpga_to_micro@state_machine_code stored from wreg
  3708  001AB8  6E05               	movwf	state_translator_fpga_to_micro@state_machine_code^0,c
  3709  001ABA                     
  3710                           ;utils.c: 3:     lcd_dat(state_machine_code);
  3711  001ABA  5005               	movf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3712  001ABC  ECAA  F013         	call	_lcd_dat
  3713  001AC0                     
  3714                           ;utils.c: 4:     if (state_machine_code == 0x01){
  3715  001AC0  0405               	decf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3716  001AC2  A4D8               	btfss	status,2,c
  3717  001AC4  EF66  F00D         	goto	u2771
  3718  001AC8  EF69  F00D         	goto	u2770
  3719  001ACC                     u2771:
  3720  001ACC  FFFF               	dw	65535	; assembler added errata NOP
  3721  001ACE  EF74  F00D         	goto	l2896
  3722  001AD2                     u2770:
  3723  001AD2  FFFF               	dw	65535	; assembler added errata NOP
  3724  001AD4                     
  3725                           ;utils.c: 5:         *state = 1;
  3726  001AD4  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3727  001AD8  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3728  001ADC  0E01               	movlw	1
  3729  001ADE  6EDE               	movwf	postinc2,c
  3730  001AE0  0E00               	movlw	0
  3731  001AE2  6EDD               	movwf	postdec2,c
  3732                           
  3733                           ;utils.c: 6:     } else if (state_machine_code == 0x02){
  3734  001AE4  EF0F  F00E         	goto	l310
  3735  001AE8                     l2896:
  3736  001AE8  FFFF               	dw	65535	; assembler added errata NOP
  3737  001AEA  0E02               	movlw	2
  3738  001AEC  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3739  001AEE  A4D8               	btfss	status,2,c
  3740  001AF0  EF7C  F00D         	goto	u2781
  3741  001AF4  EF7F  F00D         	goto	u2780
  3742  001AF8                     u2781:
  3743  001AF8  FFFF               	dw	65535	; assembler added errata NOP
  3744  001AFA  EF8A  F00D         	goto	l2900
  3745  001AFE                     u2780:
  3746  001AFE  FFFF               	dw	65535	; assembler added errata NOP
  3747  001B00                     
  3748                           ;utils.c: 7:         *state = 3;
  3749  001B00  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3750  001B04  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3751  001B08  0E03               	movlw	3
  3752  001B0A  6EDE               	movwf	postinc2,c
  3753  001B0C  0E00               	movlw	0
  3754  001B0E  6EDD               	movwf	postdec2,c
  3755                           
  3756                           ;utils.c: 8:     } else if (state_machine_code == 0x04){
  3757  001B10  EF0F  F00E         	goto	l310
  3758  001B14                     l2900:
  3759  001B14  FFFF               	dw	65535	; assembler added errata NOP
  3760  001B16  0E04               	movlw	4
  3761  001B18  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3762  001B1A  A4D8               	btfss	status,2,c
  3763  001B1C  EF92  F00D         	goto	u2791
  3764  001B20  EF95  F00D         	goto	u2790
  3765  001B24                     u2791:
  3766  001B24  FFFF               	dw	65535	; assembler added errata NOP
  3767  001B26  EFA0  F00D         	goto	l2904
  3768  001B2A                     u2790:
  3769  001B2A  FFFF               	dw	65535	; assembler added errata NOP
  3770  001B2C                     
  3771                           ;utils.c: 9:         *state = 5;
  3772  001B2C  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3773  001B30  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3774  001B34  0E05               	movlw	5
  3775  001B36  6EDE               	movwf	postinc2,c
  3776  001B38  0E00               	movlw	0
  3777  001B3A  6EDD               	movwf	postdec2,c
  3778                           
  3779                           ;utils.c: 10:     } else if (state_machine_code == 0x08){
  3780  001B3C  EF0F  F00E         	goto	l310
  3781  001B40                     l2904:
  3782  001B40  FFFF               	dw	65535	; assembler added errata NOP
  3783  001B42  0E08               	movlw	8
  3784  001B44  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3785  001B46  A4D8               	btfss	status,2,c
  3786  001B48  EFA8  F00D         	goto	u2801
  3787  001B4C  EFAB  F00D         	goto	u2800
  3788  001B50                     u2801:
  3789  001B50  FFFF               	dw	65535	; assembler added errata NOP
  3790  001B52  EFB6  F00D         	goto	l2908
  3791  001B56                     u2800:
  3792  001B56  FFFF               	dw	65535	; assembler added errata NOP
  3793  001B58                     
  3794                           ;utils.c: 11:         *state = 10;
  3795  001B58  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3796  001B5C  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3797  001B60  0E0A               	movlw	10
  3798  001B62  6EDE               	movwf	postinc2,c
  3799  001B64  0E00               	movlw	0
  3800  001B66  6EDD               	movwf	postdec2,c
  3801                           
  3802                           ;utils.c: 12:     } else if (state_machine_code == 0x10){
  3803  001B68  EF0F  F00E         	goto	l310
  3804  001B6C                     l2908:
  3805  001B6C  FFFF               	dw	65535	; assembler added errata NOP
  3806  001B6E  0E10               	movlw	16
  3807  001B70  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3808  001B72  A4D8               	btfss	status,2,c
  3809  001B74  EFBE  F00D         	goto	u2811
  3810  001B78  EFC1  F00D         	goto	u2810
  3811  001B7C                     u2811:
  3812  001B7C  FFFF               	dw	65535	; assembler added errata NOP
  3813  001B7E  EFCC  F00D         	goto	l2912
  3814  001B82                     u2810:
  3815  001B82  FFFF               	dw	65535	; assembler added errata NOP
  3816  001B84                     
  3817                           ;utils.c: 13:         *state = 2;
  3818  001B84  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3819  001B88  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3820  001B8C  0E02               	movlw	2
  3821  001B8E  6EDE               	movwf	postinc2,c
  3822  001B90  0E00               	movlw	0
  3823  001B92  6EDD               	movwf	postdec2,c
  3824                           
  3825                           ;utils.c: 14:     } else if (state_machine_code == 0x40){
  3826  001B94  EF0F  F00E         	goto	l310
  3827  001B98                     l2912:
  3828  001B98  FFFF               	dw	65535	; assembler added errata NOP
  3829  001B9A  0E40               	movlw	64
  3830  001B9C  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3831  001B9E  A4D8               	btfss	status,2,c
  3832  001BA0  EFD4  F00D         	goto	u2821
  3833  001BA4  EFD7  F00D         	goto	u2820
  3834  001BA8                     u2821:
  3835  001BA8  FFFF               	dw	65535	; assembler added errata NOP
  3836  001BAA  EFE2  F00D         	goto	l2916
  3837  001BAE                     u2820:
  3838  001BAE  FFFF               	dw	65535	; assembler added errata NOP
  3839  001BB0                     
  3840                           ;utils.c: 15:         *state = 14;
  3841  001BB0  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3842  001BB4  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3843  001BB8  0E0E               	movlw	14
  3844  001BBA  6EDE               	movwf	postinc2,c
  3845  001BBC  0E00               	movlw	0
  3846  001BBE  6EDD               	movwf	postdec2,c
  3847                           
  3848                           ;utils.c: 16:     } else if (state_machine_code == 0x80){
  3849  001BC0  EF0F  F00E         	goto	l310
  3850  001BC4                     l2916:
  3851  001BC4  FFFF               	dw	65535	; assembler added errata NOP
  3852  001BC6  0E80               	movlw	128
  3853  001BC8  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3854  001BCA  A4D8               	btfss	status,2,c
  3855  001BCC  EFEA  F00D         	goto	u2831
  3856  001BD0  EFED  F00D         	goto	u2830
  3857  001BD4                     u2831:
  3858  001BD4  FFFF               	dw	65535	; assembler added errata NOP
  3859  001BD6  EFF0  F00D         	goto	l2920
  3860  001BDA                     u2830:
  3861  001BDA  FFFF               	dw	65535	; assembler added errata NOP
  3862  001BDC  EF0F  F00E         	goto	l310
  3863  001BE0                     l2920:
  3864  001BE0  FFFF               	dw	65535	; assembler added errata NOP
  3865  001BE2  0EA0               	movlw	160
  3866  001BE4  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3867  001BE6  A4D8               	btfss	status,2,c
  3868  001BE8  EFF8  F00D         	goto	u2841
  3869  001BEC  EFFB  F00D         	goto	u2840
  3870  001BF0                     u2841:
  3871  001BF0  FFFF               	dw	65535	; assembler added errata NOP
  3872  001BF2  EF06  F00E         	goto	l2924
  3873  001BF6                     u2840:
  3874  001BF6  FFFF               	dw	65535	; assembler added errata NOP
  3875  001BF8                     
  3876                           ;utils.c: 19:         *state = 12;
  3877  001BF8  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3878  001BFC  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3879  001C00  0E0C               	movlw	12
  3880  001C02  6EDE               	movwf	postinc2,c
  3881  001C04  0E00               	movlw	0
  3882  001C06  6EDD               	movwf	postdec2,c
  3883                           
  3884                           ;utils.c: 20:     } else {
  3885  001C08  EF0F  F00E         	goto	l310
  3886  001C0C                     l2924:
  3887  001C0C  FFFF               	dw	65535	; assembler added errata NOP
  3888                           
  3889                           ;utils.c: 21:         *state = 0;
  3890  001C0E  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3891  001C12  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3892  001C16  0E00               	movlw	0
  3893  001C18  6EDE               	movwf	postinc2,c
  3894  001C1A  0E00               	movlw	0
  3895  001C1C  6EDD               	movwf	postdec2,c
  3896  001C1E                     l310:
  3897  001C1E  FFFF               	dw	65535	; assembler added errata NOP
  3898  001C20  0012               	return		;funcret
  3899  001C22  FFFF               	dw	65535	; errata NOP
  3900  001C24                     __end_of_state_translator_fpga_to_micro:
  3901                           	callstack 0
  3902                           
  3903 ;; *************** function _serial_tx_char *****************
  3904 ;; Defined at:
  3905 ;;		line 39 in file "serial_rs232.c"
  3906 ;; Parameters:    Size  Location     Type
  3907 ;;  val             1    wreg     unsigned char 
  3908 ;; Auto vars:     Size  Location     Type
  3909 ;;  val             1    0[COMRAM] unsigned char 
  3910 ;; Return value:  Size  Location     Type
  3911 ;;                  1    wreg      void 
  3912 ;; Registers used:
  3913 ;;		wreg
  3914 ;; Tracked objects:
  3915 ;;		On entry : 0/0
  3916 ;;		On exit  : 0/0
  3917 ;;		Unchanged: 0/0
  3918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3919 ;;      Params:         0       0       0       0       0       0       0
  3920 ;;      Locals:         1       0       0       0       0       0       0
  3921 ;;      Temps:          0       0       0       0       0       0       0
  3922 ;;      Totals:         1       0       0       0       0       0       0
  3923 ;;Total ram usage:        1 bytes
  3924 ;; Hardware stack levels used:    1
  3925 ;; Hardware stack levels required when called:    1
  3926 ;; This function calls:
  3927 ;;		Nothing
  3928 ;; This function is called by:
  3929 ;;		_main
  3930 ;;		_serial_tx_string
  3931 ;; This function uses a non-reentrant model
  3932 ;;
  3933                           
  3934                           	psect	text5
  3935  00281A                     __ptext5:
  3936                           	callstack 0
  3937  00281A                     _serial_tx_char:
  3938                           	callstack 0
  3939  00281A  FFFF               	dw	65535	; assembler added errata NOP
  3940                           
  3941                           ;incstack = 0
  3942                           ;serial_tx_char@val stored from wreg
  3943  00281C  6E01               	movwf	serial_tx_char@val^0,c
  3944  00281E                     
  3945                           ;serial_rs232.c: 40:     TXREG = val;
  3946  00281E  C001  FFAD         	movff	serial_tx_char@val,4013	;volatile
  3947  002822                     l24:
  3948  002822  FFFF               	dw	65535	; assembler added errata NOP
  3949  002824  A2AC               	btfss	172,1,c	;volatile
  3950  002826  EF17  F014         	goto	u2751
  3951  00282A  EF1A  F014         	goto	u2750
  3952  00282E                     u2751:
  3953  00282E  FFFF               	dw	65535	; assembler added errata NOP
  3954  002830  EF11  F014         	goto	l24
  3955  002834                     u2750:
  3956  002834  FFFF               	dw	65535	; assembler added errata NOP
  3957  002836  0012               	return		;funcret
  3958  002838  FFFF               	dw	65535	; errata NOP
  3959  00283A                     __end_of_serial_tx_char:
  3960                           	callstack 0
  3961                           
  3962 ;; *************** function _reach_goal *****************
  3963 ;; Defined at:
  3964 ;;		line 30 in file "stepper_motor.c"
  3965 ;; Parameters:    Size  Location     Type
  3966 ;;  stepper_moto    2    8[COMRAM] PTR struct .
  3967 ;;		 -> joint_dilutor_stepper(12), end_effector_stepper(12), joint_stepper(12), 
  3968 ;;  goal_to_reac    2   10[COMRAM] int 
  3969 ;; Auto vars:     Size  Location     Type
  3970 ;;		None
  3971 ;; Return value:  Size  Location     Type
  3972 ;;                  2    8[COMRAM] int 
  3973 ;; Registers used:
  3974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3975 ;; Tracked objects:
  3976 ;;		On entry : 0/0
  3977 ;;		On exit  : 0/0
  3978 ;;		Unchanged: 0/0
  3979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3980 ;;      Params:         4       0       0       0       0       0       0
  3981 ;;      Locals:         0       0       0       0       0       0       0
  3982 ;;      Temps:          3       0       0       0       0       0       0
  3983 ;;      Totals:         7       0       0       0       0       0       0
  3984 ;;Total ram usage:        7 bytes
  3985 ;; Hardware stack levels used:    1
  3986 ;; Hardware stack levels required when called:    2
  3987 ;; This function calls:
  3988 ;;		_turn_on_current_coil
  3989 ;;		_update_current_coil
  3990 ;; This function is called by:
  3991 ;;		_main
  3992 ;; This function uses a non-reentrant model
  3993 ;;
  3994                           
  3995                           	psect	text6
  3996  00238E                     __ptext6:
  3997                           	callstack 0
  3998  00238E                     _reach_goal:
  3999                           	callstack 0
  4000  00238E  FFFF               	dw	65535	; assembler added errata NOP
  4001  002390                     
  4002                           ;stepper_motor.c: 31:     if(stepper_motor -> step_counter >= goal_to_reach){
  4003  002390  EE20 F002          	lfsr	2,2
  4004  002394  5009               	movf	reach_goal@stepper_motor^0,w,c
  4005  002396  26D9               	addwf	fsr2l,f,c
  4006  002398  500A               	movf	(reach_goal@stepper_motor+1)^0,w,c
  4007  00239A  22DA               	addwfc	fsr2h,f,c
  4008  00239C  500B               	movf	reach_goal@goal_to_reach^0,w,c
  4009  00239E  5CDE               	subwf	postinc2,w,c
  4010  0023A0  50DE               	movf	postinc2,w,c
  4011  0023A2  0A80               	xorlw	128
  4012  0023A4  6E0F               	movwf	(??_reach_goal+2)^0,c
  4013  0023A6  500C               	movf	(reach_goal@goal_to_reach+1)^0,w,c
  4014  0023A8  0A80               	xorlw	128
  4015  0023AA  580F               	subwfb	(??_reach_goal+2)^0,w,c
  4016  0023AC  A0D8               	btfss	status,0,c
  4017  0023AE  EFDB  F011         	goto	u2931
  4018  0023B2  EFDE  F011         	goto	u2930
  4019  0023B6                     u2931:
  4020  0023B6  FFFF               	dw	65535	; assembler added errata NOP
  4021  0023B8  EFEF  F011         	goto	l3034
  4022  0023BC                     u2930:
  4023  0023BC  FFFF               	dw	65535	; assembler added errata NOP
  4024  0023BE                     
  4025                           ;stepper_motor.c: 32:         stepper_motor -> step_counter = 0;
  4026  0023BE  EE20 F002          	lfsr	2,2
  4027  0023C2  5009               	movf	reach_goal@stepper_motor^0,w,c
  4028  0023C4  26D9               	addwf	fsr2l,f,c
  4029  0023C6  500A               	movf	(reach_goal@stepper_motor+1)^0,w,c
  4030  0023C8  22DA               	addwfc	fsr2h,f,c
  4031  0023CA  0E00               	movlw	0
  4032  0023CC  6EDE               	movwf	postinc2,c
  4033  0023CE  0E00               	movlw	0
  4034  0023D0  6EDD               	movwf	postdec2,c
  4035  0023D2                     
  4036                           ;stepper_motor.c: 33:         return 1;
  4037  0023D2  0E00               	movlw	0
  4038  0023D4  6E0A               	movwf	(?_reach_goal+1)^0,c
  4039  0023D6  0E01               	movlw	1
  4040  0023D8  6E09               	movwf	?_reach_goal^0,c
  4041  0023DA  EF00  F012         	goto	l350
  4042  0023DE                     l3034:
  4043  0023DE  FFFF               	dw	65535	; assembler added errata NOP
  4044                           
  4045                           ;stepper_motor.c: 35:         turn_on_current_coil(stepper_motor);
  4046  0023E0  C009  F001         	movff	reach_goal@stepper_motor,turn_on_current_coil@stepper_motor
  4047  0023E4  C00A  F002         	movff	reach_goal@stepper_motor+1,turn_on_current_coil@stepper_motor+1
  4048  0023E8  ECA1  F012         	call	_turn_on_current_coil	;wreg free
  4049  0023EC                     
  4050                           ;stepper_motor.c: 36:         update_current_coil(stepper_motor);
  4051  0023EC  C009  F001         	movff	reach_goal@stepper_motor,update_current_coil@stepper_motor
  4052  0023F0  C00A  F002         	movff	reach_goal@stepper_motor+1,update_current_coil@stepper_motor+1
  4053  0023F4  ECB9  F00F         	call	_update_current_coil	;wreg free
  4054  0023F8                     
  4055                           ;stepper_motor.c: 37:         return 0;
  4056  0023F8  0E00               	movlw	0
  4057  0023FA  6E0A               	movwf	(?_reach_goal+1)^0,c
  4058  0023FC  0E00               	movlw	0
  4059  0023FE  6E09               	movwf	?_reach_goal^0,c
  4060  002400                     l350:
  4061  002400  FFFF               	dw	65535	; assembler added errata NOP
  4062  002402  0012               	return		;funcret
  4063  002404  FFFF               	dw	65535	; errata NOP
  4064  002406                     __end_of_reach_goal:
  4065                           	callstack 0
  4066                           
  4067 ;; *************** function _update_current_coil *****************
  4068 ;; Defined at:
  4069 ;;		line 19 in file "stepper_motor.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;  stepper_moto    2    0[COMRAM] PTR struct .
  4072 ;;		 -> joint_dilutor_stepper(12), end_effector_stepper(12), joint_stepper(12), 
  4073 ;; Auto vars:     Size  Location     Type
  4074 ;;		None
  4075 ;; Return value:  Size  Location     Type
  4076 ;;                  1    wreg      void 
  4077 ;; Registers used:
  4078 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4079 ;; Tracked objects:
  4080 ;;		On entry : 0/0
  4081 ;;		On exit  : 0/0
  4082 ;;		Unchanged: 0/0
  4083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4084 ;;      Params:         2       0       0       0       0       0       0
  4085 ;;      Locals:         0       0       0       0       0       0       0
  4086 ;;      Temps:          4       0       0       0       0       0       0
  4087 ;;      Totals:         6       0       0       0       0       0       0
  4088 ;;Total ram usage:        6 bytes
  4089 ;; Hardware stack levels used:    1
  4090 ;; Hardware stack levels required when called:    1
  4091 ;; This function calls:
  4092 ;;		Nothing
  4093 ;; This function is called by:
  4094 ;;		_reach_goal
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098                           	psect	text7
  4099  001F72                     __ptext7:
  4100                           	callstack 0
  4101  001F72                     _update_current_coil:
  4102                           	callstack 0
  4103  001F72  FFFF               	dw	65535	; assembler added errata NOP
  4104  001F74                     
  4105                           ;stepper_motor.c: 20:     stepper_motor -> current_coil = stepper_motor -> current_coil 
      +                          + stepper_motor -> direction;
  4106  001F74  EE20 F004          	lfsr	2,4
  4107  001F78  5001               	movf	update_current_coil@stepper_motor^0,w,c
  4108  001F7A  26D9               	addwf	fsr2l,f,c
  4109  001F7C  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
  4110  001F7E  22DA               	addwfc	fsr2h,f,c
  4111  001F80  CFDE F003          	movff	postinc2,??_update_current_coil
  4112  001F84  CFDD F004          	movff	postdec2,??_update_current_coil+1
  4113  001F88  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
  4114  001F8C  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
  4115  001F90  CFDE F005          	movff	postinc2,??_update_current_coil+2
  4116  001F94  CFDD F006          	movff	postdec2,??_update_current_coil+3
  4117  001F98  5003               	movf	??_update_current_coil^0,w,c
  4118  001F9A  2605               	addwf	(??_update_current_coil+2)^0,f,c
  4119  001F9C  5004               	movf	(??_update_current_coil+1)^0,w,c
  4120  001F9E  2206               	addwfc	(??_update_current_coil+3)^0,f,c
  4121  001FA0  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
  4122  001FA4  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
  4123  001FA8  C005  FFDE         	movff	??_update_current_coil+2,postinc2
  4124  001FAC  C006  FFDD         	movff	??_update_current_coil+3,postdec2
  4125                           
  4126                           ;stepper_motor.c: 21:     stepper_motor -> step_counter = stepper_motor -> step_counter 
      +                          + 1;
  4127  001FB0  EE20 F002          	lfsr	2,2
  4128  001FB4  5001               	movf	update_current_coil@stepper_motor^0,w,c
  4129  001FB6  26D9               	addwf	fsr2l,f,c
  4130  001FB8  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
  4131  001FBA  22DA               	addwfc	fsr2h,f,c
  4132  001FBC  CFDE F003          	movff	postinc2,??_update_current_coil
  4133  001FC0  CFDD F004          	movff	postdec2,??_update_current_coil+1
  4134  001FC4  0E01               	movlw	1
  4135  001FC6  2603               	addwf	??_update_current_coil^0,f,c
  4136  001FC8  0E00               	movlw	0
  4137  001FCA  2204               	addwfc	(??_update_current_coil+1)^0,f,c
  4138  001FCC  EE20 F002          	lfsr	2,2
  4139  001FD0  5001               	movf	update_current_coil@stepper_motor^0,w,c
  4140  001FD2  26D9               	addwf	fsr2l,f,c
  4141  001FD4  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
  4142  001FD6  22DA               	addwfc	fsr2h,f,c
  4143  001FD8  C003  FFDE         	movff	??_update_current_coil,postinc2
  4144  001FDC  C004  FFDD         	movff	??_update_current_coil+1,postdec2
  4145                           
  4146                           ;stepper_motor.c: 22:     if (stepper_motor -> current_coil == -1) {
  4147  001FE0  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
  4148  001FE4  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
  4149  001FE8  28DE               	incf	postinc2,w,c
  4150  001FEA  E106               	bnz	u2661
  4151  001FEC  28DE               	incf	postinc2,w,c
  4152  001FEE  A4D8               	btfss	status,2,c
  4153  001FF0  EFFC  F00F         	goto	u2661
  4154  001FF4  EFFF  F00F         	goto	u2660
  4155  001FF8                     u2661:
  4156  001FF8  FFFF               	dw	65535	; assembler added errata NOP
  4157  001FFA  EF0A  F010         	goto	l2752
  4158  001FFE                     u2660:
  4159  001FFE  FFFF               	dw	65535	; assembler added errata NOP
  4160  002000                     
  4161                           ;stepper_motor.c: 23:         stepper_motor -> current_coil = 3;
  4162  002000  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
  4163  002004  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
  4164  002008  0E03               	movlw	3
  4165  00200A  6EDE               	movwf	postinc2,c
  4166  00200C  0E00               	movlw	0
  4167  00200E  6EDD               	movwf	postdec2,c
  4168                           
  4169                           ;stepper_motor.c: 24:     } else if(stepper_motor -> current_coil == 4) {
  4170  002010  EF23  F010         	goto	l346
  4171  002014                     l2752:
  4172  002014  FFFF               	dw	65535	; assembler added errata NOP
  4173  002016  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
  4174  00201A  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
  4175  00201E  0E04               	movlw	4
  4176  002020  18DE               	xorwf	postinc2,w,c
  4177  002022  10DE               	iorwf	postinc2,w,c
  4178  002024  A4D8               	btfss	status,2,c
  4179  002026  EF17  F010         	goto	u2671
  4180  00202A  EF1A  F010         	goto	u2670
  4181  00202E                     u2671:
  4182  00202E  FFFF               	dw	65535	; assembler added errata NOP
  4183  002030  EF23  F010         	goto	l346
  4184  002034                     u2670:
  4185  002034  FFFF               	dw	65535	; assembler added errata NOP
  4186  002036                     
  4187                           ;stepper_motor.c: 25:         stepper_motor -> current_coil = 0;
  4188  002036  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
  4189  00203A  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
  4190  00203E  0E00               	movlw	0
  4191  002040  6EDE               	movwf	postinc2,c
  4192  002042  0E00               	movlw	0
  4193  002044  6EDD               	movwf	postdec2,c
  4194  002046                     l346:
  4195  002046  FFFF               	dw	65535	; assembler added errata NOP
  4196  002048  0012               	return		;funcret
  4197  00204A  FFFF               	dw	65535	; errata NOP
  4198  00204C                     __end_of_update_current_coil:
  4199                           	callstack 0
  4200                           
  4201 ;; *************** function _turn_on_current_coil *****************
  4202 ;; Defined at:
  4203 ;;		line 14 in file "stepper_motor.c"
  4204 ;; Parameters:    Size  Location     Type
  4205 ;;  stepper_moto    2    0[COMRAM] PTR struct .
  4206 ;;		 -> joint_dilutor_stepper(12), end_effector_stepper(12), joint_stepper(12), 
  4207 ;; Auto vars:     Size  Location     Type
  4208 ;;		None
  4209 ;; Return value:  Size  Location     Type
  4210 ;;                  1    wreg      void 
  4211 ;; Registers used:
  4212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4213 ;; Tracked objects:
  4214 ;;		On entry : 0/0
  4215 ;;		On exit  : 0/0
  4216 ;;		Unchanged: 0/0
  4217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4218 ;;      Params:         2       0       0       0       0       0       0
  4219 ;;      Locals:         0       0       0       0       0       0       0
  4220 ;;      Temps:          6       0       0       0       0       0       0
  4221 ;;      Totals:         8       0       0       0       0       0       0
  4222 ;;Total ram usage:        8 bytes
  4223 ;; Hardware stack levels used:    1
  4224 ;; Hardware stack levels required when called:    1
  4225 ;; This function calls:
  4226 ;;		Nothing
  4227 ;; This function is called by:
  4228 ;;		_reach_goal
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           
  4232                           	psect	text8
  4233  002542                     __ptext8:
  4234                           	callstack 0
  4235  002542                     _turn_on_current_coil:
  4236                           	callstack 0
  4237  002542  FFFF               	dw	65535	; assembler added errata NOP
  4238  002544                     
  4239                           ;stepper_motor.c: 15:     *(stepper_motor -> register_name) = stepper_motor -> hex_coil_
      +                          register_values[stepper_motor -> current_coil];
  4240  002544  C001  FFD9         	movff	turn_on_current_coil@stepper_motor,fsr2l
  4241  002548  C002  FFDA         	movff	turn_on_current_coil@stepper_motor+1,fsr2h
  4242  00254C  CFDE F003          	movff	postinc2,??_turn_on_current_coil
  4243  002550  CFDD F004          	movff	postdec2,??_turn_on_current_coil+1
  4244  002554  C001  F005         	movff	turn_on_current_coil@stepper_motor,??_turn_on_current_coil+2
  4245  002558  C002  F006         	movff	turn_on_current_coil@stepper_motor+1,??_turn_on_current_coil+3
  4246  00255C  5003               	movf	??_turn_on_current_coil^0,w,c
  4247  00255E  2605               	addwf	(??_turn_on_current_coil+2)^0,f,c
  4248  002560  5004               	movf	(??_turn_on_current_coil+1)^0,w,c
  4249  002562  2206               	addwfc	(??_turn_on_current_coil+3)^0,f,c
  4250  002564  0E06               	movlw	6
  4251  002566  2405               	addwf	(??_turn_on_current_coil+2)^0,w,c
  4252  002568  6ED9               	movwf	fsr2l,c
  4253  00256A  0E00               	movlw	0
  4254  00256C  2006               	addwfc	(??_turn_on_current_coil+3)^0,w,c
  4255  00256E  6EDA               	movwf	fsr2h,c
  4256  002570  EE10 F00A          	lfsr	1,10
  4257  002574  5001               	movf	turn_on_current_coil@stepper_motor^0,w,c
  4258  002576  26E1               	addwf	fsr1l,f,c
  4259  002578  5002               	movf	(turn_on_current_coil@stepper_motor+1)^0,w,c
  4260  00257A  22E2               	addwfc	fsr1h,f,c
  4261  00257C  CFE6 F007          	movff	postinc1,??_turn_on_current_coil+4
  4262  002580  CFE5 F008          	movff	postdec1,??_turn_on_current_coil+5
  4263  002584  C007  FFE1         	movff	??_turn_on_current_coil+4,fsr1l
  4264  002588  C008  FFE2         	movff	??_turn_on_current_coil+5,fsr1h
  4265  00258C  CFDF FFE7          	movff	indf2,indf1
  4266  002590  0012               	return		;funcret
  4267  002592  FFFF               	dw	65535	; errata NOP
  4268  002594                     __end_of_turn_on_current_coil:
  4269                           	callstack 0
  4270                           
  4271 ;; *************** function _lcd_update *****************
  4272 ;; Defined at:
  4273 ;;		line 108 in file "lcd.c"
  4274 ;; Parameters:    Size  Location     Type
  4275 ;;  state           2   11[COMRAM] int 
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;  i               2   19[COMRAM] int 
  4278 ;;  line_select     4   15[COMRAM] const unsigned char [4]
  4279 ;; Return value:  Size  Location     Type
  4280 ;;                  1    wreg      void 
  4281 ;; Registers used:
  4282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4283 ;; Tracked objects:
  4284 ;;		On entry : 0/0
  4285 ;;		On exit  : 0/0
  4286 ;;		Unchanged: 0/0
  4287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4288 ;;      Params:         2       0       0       0       0       0       0
  4289 ;;      Locals:         6       0       0       0       0       0       0
  4290 ;;      Temps:          2       0       0       0       0       0       0
  4291 ;;      Totals:        10       0       0       0       0       0       0
  4292 ;;Total ram usage:       10 bytes
  4293 ;; Hardware stack levels used:    1
  4294 ;; Hardware stack levels required when called:    4
  4295 ;; This function calls:
  4296 ;;		___wmul
  4297 ;;		_lcd_cmd
  4298 ;;		_lcd_str
  4299 ;; This function is called by:
  4300 ;;		_main
  4301 ;; This function uses a non-reentrant model
  4302 ;;
  4303                           
  4304                           	psect	text9
  4305  002122                     __ptext9:
  4306                           	callstack 0
  4307  002122                     _lcd_update:
  4308                           	callstack 0
  4309  002122  FFFF               	dw	65535	; assembler added errata NOP
  4310  002124                     
  4311                           ;lcd.c: 109:     lcd_cmd(0x01);
  4312  002124  0E01               	movlw	1
  4313  002126  ECD4  F013         	call	_lcd_cmd
  4314  00212A                     
  4315                           ;lcd.c: 110:     const char line_select[4] = {0x80, 0xC0, 0x94, 0xD4};
  4316  00212A  0E2D               	movlw	low lcd_update@F2151
  4317  00212C  6EF6               	movwf	tblptrl,c
  4318  00212E                     	if	1	;There is more than 1 active tblptr byte
  4319  00212E  0E7B               	movlw	high lcd_update@F2151
  4320  002130  6EF7               	movwf	tblptrh,c
  4321  002132                     	endif
  4322  002132                     	if	0	;There are less than 3 active tblptr bytes
  4323  002132                     	endif
  4324  002132  0009               	tblrd		*+
  4325  002134  FFFF               	dw	65535	; errata NOP
  4326  002136  CFF5 F010          	movff	tablat,lcd_update@line_select
  4327  00213A  0009               	tblrd		*+
  4328  00213C  FFFF               	dw	65535	; errata NOP
  4329  00213E  CFF5 F011          	movff	tablat,lcd_update@line_select+1
  4330  002142  0009               	tblrd		*+
  4331  002144  FFFF               	dw	65535	; errata NOP
  4332  002146  CFF5 F012          	movff	tablat,lcd_update@line_select+2
  4333  00214A  000A               	tblrd		*-
  4334  00214C  FFFF               	dw	65535	; errata NOP
  4335  00214E  CFF5 F013          	movff	tablat,lcd_update@line_select+3
  4336  002152                     
  4337                           ;lcd.c: 111:     for (int i=0;i<4;i++ ){
  4338  002152  0E00               	movlw	0
  4339  002154  6E15               	movwf	(lcd_update@i+1)^0,c
  4340  002156  0E00               	movlw	0
  4341  002158  6E14               	movwf	lcd_update@i^0,c
  4342  00215A                     l2954:
  4343  00215A  FFFF               	dw	65535	; assembler added errata NOP
  4344                           
  4345                           ;lcd.c: 112:         lcd_cmd(line_select[i]);
  4346  00215C  0E10               	movlw	low lcd_update@line_select
  4347  00215E  2414               	addwf	lcd_update@i^0,w,c
  4348  002160  6ED9               	movwf	fsr2l,c
  4349  002162  0E00               	movlw	high lcd_update@line_select
  4350  002164  2015               	addwfc	(lcd_update@i+1)^0,w,c
  4351  002166  6EDA               	movwf	fsr2h,c
  4352  002168  50DF               	movf	indf2,w,c
  4353  00216A  ECD4  F013         	call	_lcd_cmd
  4354  00216E                     
  4355                           ;lcd.c: 113:         lcd_str(const_msgs[state][i]);
  4356  00216E  C00C  F001         	movff	lcd_update@state,___wmul@multiplier
  4357  002172  C00D  F002         	movff	lcd_update@state+1,___wmul@multiplier+1
  4358  002176  0E00               	movlw	0
  4359  002178  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4360  00217A  0E50               	movlw	80
  4361  00217C  6E03               	movwf	___wmul@multiplicand^0,c
  4362  00217E  ECBF  F013         	call	___wmul	;wreg free
  4363  002182  0E35               	movlw	low _const_msgs
  4364  002184  6E0E               	movwf	??_lcd_update^0,c
  4365  002186  0E7B               	movlw	high _const_msgs
  4366  002188  6E0F               	movwf	(??_lcd_update+1)^0,c
  4367  00218A  5001               	movf	?___wmul^0,w,c
  4368  00218C  260E               	addwf	??_lcd_update^0,f,c
  4369  00218E  5002               	movf	(?___wmul+1)^0,w,c
  4370  002190  220F               	addwfc	(??_lcd_update+1)^0,f,c
  4371  002192  C014  F001         	movff	lcd_update@i,___wmul@multiplier
  4372  002196  C015  F002         	movff	lcd_update@i+1,___wmul@multiplier+1
  4373  00219A  0E00               	movlw	0
  4374  00219C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4375  00219E  0E14               	movlw	20
  4376  0021A0  6E03               	movwf	___wmul@multiplicand^0,c
  4377  0021A2  ECBF  F013         	call	___wmul	;wreg free
  4378  0021A6  5001               	movf	?___wmul^0,w,c
  4379  0021A8  240E               	addwf	??_lcd_update^0,w,c
  4380  0021AA  6E07               	movwf	lcd_str@str^0,c
  4381  0021AC  5002               	movf	(?___wmul+1)^0,w,c
  4382  0021AE  200F               	addwfc	(??_lcd_update+1)^0,w,c
  4383  0021B0  6E08               	movwf	(lcd_str@str+1)^0,c
  4384  0021B2  EC71  F012         	call	_lcd_str	;wreg free
  4385  0021B6                     
  4386                           ;lcd.c: 114:     }
  4387  0021B6  4A14               	infsnz	lcd_update@i^0,f,c
  4388  0021B8  2A15               	incf	(lcd_update@i+1)^0,f,c
  4389  0021BA  BE15               	btfsc	(lcd_update@i+1)^0,7,c
  4390  0021BC  EFE9  F010         	goto	u2881
  4391  0021C0  5015               	movf	(lcd_update@i+1)^0,w,c
  4392  0021C2  E10A               	bnz	u2880
  4393  0021C4  0E04               	movlw	4
  4394  0021C6  5C14               	subwf	lcd_update@i^0,w,c
  4395  0021C8  A0D8               	btfss	status,0,c
  4396  0021CA  EFE9  F010         	goto	u2881
  4397  0021CE  EFEC  F010         	goto	u2880
  4398  0021D2                     u2881:
  4399  0021D2  FFFF               	dw	65535	; assembler added errata NOP
  4400  0021D4  EFAD  F010         	goto	l2954
  4401  0021D8                     u2880:
  4402  0021D8  FFFF               	dw	65535	; assembler added errata NOP
  4403  0021DA  0012               	return		;funcret
  4404  0021DC  FFFF               	dw	65535	; errata NOP
  4405  0021DE                     __end_of_lcd_update:
  4406                           	callstack 0
  4407                           
  4408 ;; *************** function _lcd_str *****************
  4409 ;; Defined at:
  4410 ;;		line 80 in file "lcd.c"
  4411 ;; Parameters:    Size  Location     Type
  4412 ;;  str             2    6[COMRAM] PTR const unsigned char 
  4413 ;;		 -> const_msgs(1200), STR_1(22), 
  4414 ;; Auto vars:     Size  Location     Type
  4415 ;;  i               1   10[COMRAM] unsigned char 
  4416 ;; Return value:  Size  Location     Type
  4417 ;;                  1    wreg      void 
  4418 ;; Registers used:
  4419 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4420 ;; Tracked objects:
  4421 ;;		On entry : 0/0
  4422 ;;		On exit  : 0/0
  4423 ;;		Unchanged: 0/0
  4424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4425 ;;      Params:         2       0       0       0       0       0       0
  4426 ;;      Locals:         1       0       0       0       0       0       0
  4427 ;;      Temps:          2       0       0       0       0       0       0
  4428 ;;      Totals:         5       0       0       0       0       0       0
  4429 ;;Total ram usage:        5 bytes
  4430 ;; Hardware stack levels used:    1
  4431 ;; Hardware stack levels required when called:    3
  4432 ;; This function calls:
  4433 ;;		_lcd_dat
  4434 ;; This function is called by:
  4435 ;;		_main
  4436 ;;		_lcd_update
  4437 ;; This function uses a non-reentrant model
  4438 ;;
  4439                           
  4440                           	psect	text10
  4441  0024E2                     __ptext10:
  4442                           	callstack 0
  4443  0024E2                     _lcd_str:
  4444                           	callstack 0
  4445  0024E2  FFFF               	dw	65535	; assembler added errata NOP
  4446  0024E4                     
  4447                           ;lcd.c: 80: void lcd_str(const char* str);lcd.c: 81: {;lcd.c: 82:     unsigned char i=0;
  4448  0024E4  0E00               	movlw	0
  4449  0024E6  6E0B               	movwf	lcd_str@i^0,c
  4450                           
  4451                           ;lcd.c: 84:     while(str[i] != 0 )
  4452  0024E8  EF87  F012         	goto	l2736
  4453  0024EC                     l2732:
  4454  0024EC  FFFF               	dw	65535	; assembler added errata NOP
  4455                           
  4456                           ;lcd.c: 85:     {;lcd.c: 86:       lcd_dat(str[i]);
  4457  0024EE  500B               	movf	lcd_str@i^0,w,c
  4458  0024F0  2407               	addwf	lcd_str@str^0,w,c
  4459  0024F2  6E09               	movwf	??_lcd_str^0,c
  4460  0024F4  0E00               	movlw	0
  4461  0024F6  2008               	addwfc	(lcd_str@str+1)^0,w,c
  4462  0024F8  6E0A               	movwf	(??_lcd_str+1)^0,c
  4463  0024FA  C009  FFF6         	movff	??_lcd_str,tblptrl
  4464  0024FE  C00A  FFF7         	movff	??_lcd_str+1,tblptrh
  4465  002502                     	if	0	;tblptru may be non-zero
  4466  002502                     	endif
  4467  002502                     	if	0	;tblptru may be non-zero
  4468  002502                     	endif
  4469  002502  0008               	tblrd		*
  4470  002504  FFFF               	dw	65535	; errata NOP
  4471  002506  50F5               	movf	tablat,w,c
  4472  002508  ECAA  F013         	call	_lcd_dat
  4473  00250C                     
  4474                           ;lcd.c: 87:       i++;
  4475  00250C  2A0B               	incf	lcd_str@i^0,f,c
  4476  00250E                     l2736:
  4477  00250E  FFFF               	dw	65535	; assembler added errata NOP
  4478                           
  4479                           ;lcd.c: 84:     while(str[i] != 0 )
  4480  002510  500B               	movf	lcd_str@i^0,w,c
  4481  002512  2407               	addwf	lcd_str@str^0,w,c
  4482  002514  6E09               	movwf	??_lcd_str^0,c
  4483  002516  0E00               	movlw	0
  4484  002518  2008               	addwfc	(lcd_str@str+1)^0,w,c
  4485  00251A  6E0A               	movwf	(??_lcd_str+1)^0,c
  4486  00251C  C009  FFF6         	movff	??_lcd_str,tblptrl
  4487  002520  C00A  FFF7         	movff	??_lcd_str+1,tblptrh
  4488  002524                     	if	0	;tblptru may be non-zero
  4489  002524                     	endif
  4490  002524                     	if	0	;tblptru may be non-zero
  4491  002524                     	endif
  4492  002524  0008               	tblrd		*
  4493  002526  FFFF               	dw	65535	; errata NOP
  4494  002528  50F5               	movf	tablat,w,c
  4495  00252A  0900               	iorlw	0
  4496  00252C  A4D8               	btfss	status,2,c
  4497  00252E  EF9B  F012         	goto	u2641
  4498  002532  EF9E  F012         	goto	u2640
  4499  002536                     u2641:
  4500  002536  FFFF               	dw	65535	; assembler added errata NOP
  4501  002538  EF76  F012         	goto	l2732
  4502  00253C                     u2640:
  4503  00253C  FFFF               	dw	65535	; assembler added errata NOP
  4504  00253E  0012               	return		;funcret
  4505  002540  FFFF               	dw	65535	; errata NOP
  4506  002542                     __end_of_lcd_str:
  4507                           	callstack 0
  4508                           
  4509 ;; *************** function _lcd_dat *****************
  4510 ;; Defined at:
  4511 ;;		line 39 in file "lcd.c"
  4512 ;; Parameters:    Size  Location     Type
  4513 ;;  val             1    wreg     unsigned char 
  4514 ;; Auto vars:     Size  Location     Type
  4515 ;;  val             1    1[COMRAM] unsigned char 
  4516 ;; Return value:  Size  Location     Type
  4517 ;;                  1    wreg      void 
  4518 ;; Registers used:
  4519 ;;		wreg, status,2, cstack
  4520 ;; Tracked objects:
  4521 ;;		On entry : 0/0
  4522 ;;		On exit  : 0/0
  4523 ;;		Unchanged: 0/0
  4524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4525 ;;      Params:         0       0       0       0       0       0       0
  4526 ;;      Locals:         1       0       0       0       0       0       0
  4527 ;;      Temps:          0       0       0       0       0       0       0
  4528 ;;      Totals:         1       0       0       0       0       0       0
  4529 ;;Total ram usage:        1 bytes
  4530 ;; Hardware stack levels used:    1
  4531 ;; Hardware stack levels required when called:    2
  4532 ;; This function calls:
  4533 ;;		_lcd_wr
  4534 ;; This function is called by:
  4535 ;;		_lcd_str
  4536 ;;		_state_translator_fpga_to_micro
  4537 ;; This function uses a non-reentrant model
  4538 ;;
  4539                           
  4540                           	psect	text11
  4541  002754                     __ptext11:
  4542                           	callstack 0
  4543  002754                     _lcd_dat:
  4544                           	callstack 0
  4545  002754  FFFF               	dw	65535	; assembler added errata NOP
  4546                           
  4547                           ;incstack = 0
  4548                           ;lcd_dat@val stored from wreg
  4549  002756  6E02               	movwf	lcd_dat@val^0,c
  4550  002758                     
  4551                           ;lcd.c: 39: void lcd_dat(unsigned char val);lcd.c: 40: {;lcd.c: 41:  PORTEbits.RE1=1;
  4552  002758  8284               	bsf	132,1,c	;volatile
  4553  00275A                     
  4554                           ;lcd.c: 42:     lcd_wr(val);
  4555  00275A  5002               	movf	lcd_dat@val^0,w,c
  4556  00275C  EC4A  F014         	call	_lcd_wr
  4557  002760                     
  4558                           ;lcd.c: 43:     PORTEbits.RE2=1;
  4559  002760  8484               	bsf	132,2,c	;volatile
  4560  002762                     
  4561                           ;lcd.c: 44:     _delay((unsigned long)((1)*(4000000/4000.0)));
  4562  002762  0EC8               	movlw	200
  4563  002764                     u3497:
  4564  002764  FFFF               	dw	65535	; errata NOP
  4565  002766  F000               	nop	
  4566  002768  2EE8               	decfsz	wreg,f,c
  4567  00276A  D7FC               	bra	u3497
  4568  00276C                     
  4569                           ;lcd.c: 45:     PORTEbits.RE1=0;
  4570  00276C  9284               	bcf	132,1,c	;volatile
  4571  00276E                     
  4572                           ;lcd.c: 46:     _delay((unsigned long)((1)*(4000000/4000.0)));
  4573  00276E  0EC8               	movlw	200
  4574  002770                     u3507:
  4575  002770  FFFF               	dw	65535	; errata NOP
  4576  002772  F000               	nop	
  4577  002774  2EE8               	decfsz	wreg,f,c
  4578  002776  D7FC               	bra	u3507
  4579  002778                     
  4580                           ;lcd.c: 47:  PORTEbits.RE1=1;
  4581  002778  8284               	bsf	132,1,c	;volatile
  4582  00277A  0012               	return		;funcret
  4583  00277C  FFFF               	dw	65535	; errata NOP
  4584  00277E                     __end_of_lcd_dat:
  4585                           	callstack 0
  4586                           
  4587 ;; *************** function ___wmul *****************
  4588 ;; Defined at:
  4589 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  4590 ;; Parameters:    Size  Location     Type
  4591 ;;  multiplier      2    0[COMRAM] unsigned int 
  4592 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;  product         2    4[COMRAM] unsigned int 
  4595 ;; Return value:  Size  Location     Type
  4596 ;;                  2    0[COMRAM] unsigned int 
  4597 ;; Registers used:
  4598 ;;		wreg, status,2, status,0, prodl, prodh
  4599 ;; Tracked objects:
  4600 ;;		On entry : 0/0
  4601 ;;		On exit  : 0/0
  4602 ;;		Unchanged: 0/0
  4603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4604 ;;      Params:         4       0       0       0       0       0       0
  4605 ;;      Locals:         2       0       0       0       0       0       0
  4606 ;;      Temps:          0       0       0       0       0       0       0
  4607 ;;      Totals:         6       0       0       0       0       0       0
  4608 ;;Total ram usage:        6 bytes
  4609 ;; Hardware stack levels used:    1
  4610 ;; Hardware stack levels required when called:    1
  4611 ;; This function calls:
  4612 ;;		Nothing
  4613 ;; This function is called by:
  4614 ;;		_main
  4615 ;;		_lcd_update
  4616 ;; This function uses a non-reentrant model
  4617 ;;
  4618                           
  4619                           	psect	text12
  4620  00277E                     __ptext12:
  4621                           	callstack 0
  4622  00277E                     ___wmul:
  4623                           	callstack 0
  4624  00277E  FFFF               	dw	65535	; assembler added errata NOP
  4625  002780  5001               	movf	___wmul@multiplier^0,w,c
  4626  002782  0203               	mulwf	___wmul@multiplicand^0,c
  4627  002784  CFF3 F005          	movff	prodl,___wmul@product
  4628  002788  CFF4 F006          	movff	prodh,___wmul@product+1
  4629  00278C  5001               	movf	___wmul@multiplier^0,w,c
  4630  00278E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  4631  002790  50F3               	movf	243,w,c
  4632  002792  2606               	addwf	(___wmul@product+1)^0,f,c
  4633  002794  5002               	movf	(___wmul@multiplier+1)^0,w,c
  4634  002796  0203               	mulwf	___wmul@multiplicand^0,c
  4635  002798  50F3               	movf	243,w,c
  4636  00279A  2606               	addwf	(___wmul@product+1)^0,f,c
  4637  00279C  C005  F001         	movff	___wmul@product,?___wmul
  4638  0027A0  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4639  0027A4  0012               	return		;funcret
  4640  0027A6  FFFF               	dw	65535	; errata NOP
  4641  0027A8                     __end_of___wmul:
  4642                           	callstack 0
  4643                           
  4644 ;; *************** function _lcd_init *****************
  4645 ;; Defined at:
  4646 ;;		line 50 in file "lcd.c"
  4647 ;; Parameters:    Size  Location     Type
  4648 ;;		None
  4649 ;; Auto vars:     Size  Location     Type
  4650 ;;		None
  4651 ;; Return value:  Size  Location     Type
  4652 ;;                  1    wreg      void 
  4653 ;; Registers used:
  4654 ;;		wreg, status,2, cstack
  4655 ;; Tracked objects:
  4656 ;;		On entry : 0/0
  4657 ;;		On exit  : 0/0
  4658 ;;		Unchanged: 0/0
  4659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4660 ;;      Params:         0       0       0       0       0       0       0
  4661 ;;      Locals:         0       0       0       0       0       0       0
  4662 ;;      Temps:          1       0       0       0       0       0       0
  4663 ;;      Totals:         1       0       0       0       0       0       0
  4664 ;;Total ram usage:        1 bytes
  4665 ;; Hardware stack levels used:    1
  4666 ;; Hardware stack levels required when called:    3
  4667 ;; This function calls:
  4668 ;;		_lcd_cmd
  4669 ;; This function is called by:
  4670 ;;		_main
  4671 ;; This function uses a non-reentrant model
  4672 ;;
  4673                           
  4674                           	psect	text13
  4675  002310                     __ptext13:
  4676                           	callstack 0
  4677  002310                     _lcd_init:
  4678                           	callstack 0
  4679  002310  FFFF               	dw	65535	; assembler added errata NOP
  4680  002312  6A83               	clrf	3971,c	;# 
  4681  002314  0E00               	movlw	0	;# 
  4682  002316  6E95               	movwf	3989,c	;# 
  4683  002318  6A84               	clrf	3972,c	;# 
  4684  00231A  0E00               	movlw	0	;# 
  4685  00231C  6E96               	movwf	3990,c	;# 
  4686                           
  4687                           ;lcd.c: 63:  PORTEbits.RE1=0;
  4688  00231E  9284               	bcf	132,1,c	;volatile
  4689                           
  4690                           ;lcd.c: 64:  PORTEbits.RE2=0;
  4691  002320  9484               	bcf	132,2,c	;volatile
  4692  002322                     
  4693                           ;lcd.c: 65:  _delay((unsigned long)((30)*(4000000/4000.0)));
  4694  002322  0E1E               	movlw	30
  4695  002324  6E03               	movwf	??_lcd_init^0,c
  4696  002326  0E3C               	movlw	60
  4697  002328                     u3517:
  4698  002328  FFFF               	dw	65535	; errata NOP
  4699  00232A  2EE8               	decfsz	wreg,f,c
  4700  00232C  D7FD               	bra	u3517
  4701  00232E  2E03               	decfsz	??_lcd_init^0,f,c
  4702  002330  D7FB               	bra	u3517
  4703  002332  D000               	nop2	
  4704  002334                     
  4705                           ;lcd.c: 66:  PORTEbits.RE1=1;
  4706  002334  8284               	bsf	132,1,c	;volatile
  4707  002336                     
  4708                           ;lcd.c: 68:  lcd_cmd(0x38);
  4709  002336  0E38               	movlw	56
  4710  002338  ECD4  F013         	call	_lcd_cmd
  4711  00233C                     
  4712                           ;lcd.c: 69:  _delay((unsigned long)((30)*(4000000/4000.0)));
  4713  00233C  0E1E               	movlw	30
  4714  00233E  6E03               	movwf	??_lcd_init^0,c
  4715  002340  0E3C               	movlw	60
  4716  002342                     u3527:
  4717  002342  FFFF               	dw	65535	; errata NOP
  4718  002344  2EE8               	decfsz	wreg,f,c
  4719  002346  D7FD               	bra	u3527
  4720  002348  2E03               	decfsz	??_lcd_init^0,f,c
  4721  00234A  D7FB               	bra	u3527
  4722  00234C  D000               	nop2	
  4723                           
  4724                           ;lcd.c: 70:  lcd_cmd(0x38);
  4725  00234E  0E38               	movlw	56
  4726  002350  ECD4  F013         	call	_lcd_cmd
  4727  002354                     
  4728                           ;lcd.c: 71:     _delay((unsigned long)((30)*(4000000/4000.0)));
  4729  002354  0E1E               	movlw	30
  4730  002356  6E03               	movwf	??_lcd_init^0,c
  4731  002358  0E3C               	movlw	60
  4732  00235A                     u3537:
  4733  00235A  FFFF               	dw	65535	; errata NOP
  4734  00235C  2EE8               	decfsz	wreg,f,c
  4735  00235E  D7FD               	bra	u3537
  4736  002360  2E03               	decfsz	??_lcd_init^0,f,c
  4737  002362  D7FB               	bra	u3537
  4738  002364  D000               	nop2	
  4739  002366                     
  4740                           ;lcd.c: 72:  lcd_cmd(0x38);
  4741  002366  0E38               	movlw	56
  4742  002368  ECD4  F013         	call	_lcd_cmd
  4743  00236C                     
  4744                           ;lcd.c: 73:  lcd_cmd(0x08);
  4745  00236C  0E08               	movlw	8
  4746  00236E  ECD4  F013         	call	_lcd_cmd
  4747  002372                     
  4748                           ;lcd.c: 74:  lcd_cmd(0x0F);
  4749  002372  0E0F               	movlw	15
  4750  002374  ECD4  F013         	call	_lcd_cmd
  4751  002378                     
  4752                           ;lcd.c: 75:  lcd_cmd(0x01);
  4753  002378  0E01               	movlw	1
  4754  00237A  ECD4  F013         	call	_lcd_cmd
  4755  00237E                     
  4756                           ;lcd.c: 76:  lcd_cmd(0x38);
  4757  00237E  0E38               	movlw	56
  4758  002380  ECD4  F013         	call	_lcd_cmd
  4759  002384                     
  4760                           ;lcd.c: 77:     lcd_cmd(0x80);
  4761  002384  0E80               	movlw	128
  4762  002386  ECD4  F013         	call	_lcd_cmd
  4763  00238A  0012               	return		;funcret
  4764  00238C  FFFF               	dw	65535	; errata NOP
  4765  00238E                     __end_of_lcd_init:
  4766                           	callstack 0
  4767                           
  4768 ;; *************** function _lcd_cmd *****************
  4769 ;; Defined at:
  4770 ;;		line 28 in file "lcd.c"
  4771 ;; Parameters:    Size  Location     Type
  4772 ;;  val             1    wreg     unsigned char 
  4773 ;; Auto vars:     Size  Location     Type
  4774 ;;  val             1    1[COMRAM] unsigned char 
  4775 ;; Return value:  Size  Location     Type
  4776 ;;                  1    wreg      void 
  4777 ;; Registers used:
  4778 ;;		wreg, status,2, cstack
  4779 ;; Tracked objects:
  4780 ;;		On entry : 0/0
  4781 ;;		On exit  : 0/0
  4782 ;;		Unchanged: 0/0
  4783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4784 ;;      Params:         0       0       0       0       0       0       0
  4785 ;;      Locals:         1       0       0       0       0       0       0
  4786 ;;      Temps:          0       0       0       0       0       0       0
  4787 ;;      Totals:         1       0       0       0       0       0       0
  4788 ;;Total ram usage:        1 bytes
  4789 ;; Hardware stack levels used:    1
  4790 ;; Hardware stack levels required when called:    2
  4791 ;; This function calls:
  4792 ;;		_lcd_wr
  4793 ;; This function is called by:
  4794 ;;		_main
  4795 ;;		_lcd_init
  4796 ;;		_lcd_update
  4797 ;; This function uses a non-reentrant model
  4798 ;;
  4799                           
  4800                           	psect	text14
  4801  0027A8                     __ptext14:
  4802                           	callstack 0
  4803  0027A8                     _lcd_cmd:
  4804                           	callstack 0
  4805  0027A8  FFFF               	dw	65535	; assembler added errata NOP
  4806                           
  4807                           ;incstack = 0
  4808                           ;lcd_cmd@val stored from wreg
  4809  0027AA  6E02               	movwf	lcd_cmd@val^0,c
  4810  0027AC                     
  4811                           ;lcd.c: 28: void lcd_cmd(unsigned char val);lcd.c: 29: {;lcd.c: 30:  PORTEbits.RE1=1;
  4812  0027AC  8284               	bsf	132,1,c	;volatile
  4813  0027AE                     
  4814                           ;lcd.c: 31:     lcd_wr(val);
  4815  0027AE  5002               	movf	lcd_cmd@val^0,w,c
  4816  0027B0  EC4A  F014         	call	_lcd_wr
  4817  0027B4                     
  4818                           ;lcd.c: 32:     PORTEbits.RE2=0;
  4819  0027B4  9484               	bcf	132,2,c	;volatile
  4820  0027B6                     
  4821                           ;lcd.c: 33:     _delay((unsigned long)((1)*(4000000/4000.0)));
  4822  0027B6  0EC8               	movlw	200
  4823  0027B8                     u3547:
  4824  0027B8  FFFF               	dw	65535	; errata NOP
  4825  0027BA  F000               	nop	
  4826  0027BC  2EE8               	decfsz	wreg,f,c
  4827  0027BE  D7FC               	bra	u3547
  4828  0027C0                     
  4829                           ;lcd.c: 34:     PORTEbits.RE1=0;
  4830  0027C0  9284               	bcf	132,1,c	;volatile
  4831  0027C2                     
  4832                           ;lcd.c: 35:     _delay((unsigned long)((1)*(4000000/4000.0)));
  4833  0027C2  0EC8               	movlw	200
  4834  0027C4                     u3557:
  4835  0027C4  FFFF               	dw	65535	; errata NOP
  4836  0027C6  F000               	nop	
  4837  0027C8  2EE8               	decfsz	wreg,f,c
  4838  0027CA  D7FC               	bra	u3557
  4839  0027CC                     
  4840                           ;lcd.c: 36:  PORTEbits.RE1=1;
  4841  0027CC  8284               	bsf	132,1,c	;volatile
  4842  0027CE  0012               	return		;funcret
  4843  0027D0  FFFF               	dw	65535	; errata NOP
  4844  0027D2                     __end_of_lcd_cmd:
  4845                           	callstack 0
  4846                           
  4847 ;; *************** function _lcd_wr *****************
  4848 ;; Defined at:
  4849 ;;		line 23 in file "lcd.c"
  4850 ;; Parameters:    Size  Location     Type
  4851 ;;  val             1    wreg     unsigned char 
  4852 ;; Auto vars:     Size  Location     Type
  4853 ;;  val             1    0[COMRAM] unsigned char 
  4854 ;; Return value:  Size  Location     Type
  4855 ;;                  1    wreg      void 
  4856 ;; Registers used:
  4857 ;;		wreg
  4858 ;; Tracked objects:
  4859 ;;		On entry : 0/0
  4860 ;;		On exit  : 0/0
  4861 ;;		Unchanged: 0/0
  4862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4863 ;;      Params:         0       0       0       0       0       0       0
  4864 ;;      Locals:         1       0       0       0       0       0       0
  4865 ;;      Temps:          0       0       0       0       0       0       0
  4866 ;;      Totals:         1       0       0       0       0       0       0
  4867 ;;Total ram usage:        1 bytes
  4868 ;; Hardware stack levels used:    1
  4869 ;; Hardware stack levels required when called:    1
  4870 ;; This function calls:
  4871 ;;		Nothing
  4872 ;; This function is called by:
  4873 ;;		_lcd_cmd
  4874 ;;		_lcd_dat
  4875 ;; This function uses a non-reentrant model
  4876 ;;
  4877                           
  4878                           	psect	text15
  4879  002894                     __ptext15:
  4880                           	callstack 0
  4881  002894                     _lcd_wr:
  4882                           	callstack 0
  4883  002894  FFFF               	dw	65535	; assembler added errata NOP
  4884                           
  4885                           ;incstack = 0
  4886                           ;lcd_wr@val stored from wreg
  4887  002896  6E01               	movwf	lcd_wr@val^0,c
  4888  002898                     
  4889                           ;lcd.c: 23: void lcd_wr(unsigned char val);lcd.c: 24: {;lcd.c: 25:     PORTD=val;
  4890  002898  C001  FF83         	movff	lcd_wr@val,3971	;volatile
  4891  00289C  0012               	return		;funcret
  4892  00289E  FFFF               	dw	65535	; errata NOP
  4893  0028A0                     __end_of_lcd_wr:
  4894                           	callstack 0
  4895                           
  4896 ;; *************** function _init_timer_0 *****************
  4897 ;; Defined at:
  4898 ;;		line 4 in file "timer.c"
  4899 ;; Parameters:    Size  Location     Type
  4900 ;;		None
  4901 ;; Auto vars:     Size  Location     Type
  4902 ;;		None
  4903 ;; Return value:  Size  Location     Type
  4904 ;;                  1    wreg      void 
  4905 ;; Registers used:
  4906 ;;		wreg, status,2
  4907 ;; Tracked objects:
  4908 ;;		On entry : 0/0
  4909 ;;		On exit  : 0/0
  4910 ;;		Unchanged: 0/0
  4911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4912 ;;      Params:         0       0       0       0       0       0       0
  4913 ;;      Locals:         0       0       0       0       0       0       0
  4914 ;;      Temps:          0       0       0       0       0       0       0
  4915 ;;      Totals:         0       0       0       0       0       0       0
  4916 ;;Total ram usage:        0 bytes
  4917 ;; Hardware stack levels used:    1
  4918 ;; Hardware stack levels required when called:    1
  4919 ;; This function calls:
  4920 ;;		Nothing
  4921 ;; This function is called by:
  4922 ;;		_main
  4923 ;; This function uses a non-reentrant model
  4924 ;;
  4925                           
  4926                           	psect	text16
  4927  0027F8                     __ptext16:
  4928                           	callstack 0
  4929  0027F8                     _init_timer_0:
  4930                           	callstack 0
  4931  0027F8  FFFF               	dw	65535	; assembler added errata NOP
  4932  0027FA                     
  4933                           ;timer.c: 6:     T0CON = 0;
  4934  0027FA  0E00               	movlw	0
  4935  0027FC  6ED5               	movwf	213,c	;volatile
  4936                           
  4937                           ;timer.c: 8:     TMR0L = 0x69;
  4938  0027FE  0E69               	movlw	105
  4939  002800  6ED6               	movwf	214,c	;volatile
  4940                           
  4941                           ;timer.c: 9:     TMR0H = 0x67;
  4942  002802  0E67               	movlw	103
  4943  002804  6ED7               	movwf	215,c	;volatile
  4944  002806                     
  4945                           ;timer.c: 10:     INTCONbits.TMR0IE = 1;
  4946  002806  8AF2               	bsf	242,5,c	;volatile
  4947  002808                     
  4948                           ;timer.c: 11:     T0CONbits.T08BIT = 0;
  4949  002808  9CD5               	bcf	213,6,c	;volatile
  4950  00280A                     
  4951                           ;timer.c: 12:     T0CONbits.T0CS = 0;
  4952  00280A  9AD5               	bcf	213,5,c	;volatile
  4953  00280C                     
  4954                           ;timer.c: 13:     T0CONbits.PSA = 0;
  4955  00280C  96D5               	bcf	213,3,c	;volatile
  4956  00280E                     
  4957                           ;timer.c: 14:     T0CONbits.T0PS0 = 0;
  4958  00280E  90D5               	bcf	213,0,c	;volatile
  4959  002810                     
  4960                           ;timer.c: 15:     T0CONbits.T0PS1 = 1;
  4961  002810  82D5               	bsf	213,1,c	;volatile
  4962  002812                     
  4963                           ;timer.c: 16:     T0CONbits.T0PS2 = 1;
  4964  002812  84D5               	bsf	213,2,c	;volatile
  4965  002814                     
  4966                           ;timer.c: 17:     T0CONbits.TMR0ON = 1;
  4967  002814  8ED5               	bsf	213,7,c	;volatile
  4968  002816  0012               	return		;funcret
  4969  002818  FFFF               	dw	65535	; errata NOP
  4970  00281A                     __end_of_init_timer_0:
  4971                           	callstack 0
  4972                           
  4973 ;; *************** function _init_stepper *****************
  4974 ;; Defined at:
  4975 ;;		line 4 in file "stepper_motor.c"
  4976 ;; Parameters:    Size  Location     Type
  4977 ;;  stepper_moto    2    0[COMRAM] PTR struct .
  4978 ;;		 -> joint_dilutor_stepper(12), end_effector_stepper(12), joint_stepper(12), 
  4979 ;;  current_coil    2    2[COMRAM] int 
  4980 ;;  step_counter    2    4[COMRAM] int 
  4981 ;;  direction       2    6[COMRAM] int 
  4982 ;;  hex_coil_reg    2    8[COMRAM] PTR unsigned char 
  4983 ;;		 -> hex_end_effector_values(4), hex_joint_values(4), 
  4984 ;;  register_nam    2   10[COMRAM] PTR volatile unsigned ch
  4985 ;;		 -> LATC(1), LATB(1), 
  4986 ;; Auto vars:     Size  Location     Type
  4987 ;;  i               2   14[COMRAM] int 
  4988 ;; Return value:  Size  Location     Type
  4989 ;;                  1    wreg      void 
  4990 ;; Registers used:
  4991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4992 ;; Tracked objects:
  4993 ;;		On entry : 0/0
  4994 ;;		On exit  : 0/0
  4995 ;;		Unchanged: 0/0
  4996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4997 ;;      Params:        12       0       0       0       0       0       0
  4998 ;;      Locals:         2       0       0       0       0       0       0
  4999 ;;      Temps:          2       0       0       0       0       0       0
  5000 ;;      Totals:        16       0       0       0       0       0       0
  5001 ;;Total ram usage:       16 bytes
  5002 ;; Hardware stack levels used:    1
  5003 ;; Hardware stack levels required when called:    1
  5004 ;; This function calls:
  5005 ;;		Nothing
  5006 ;; This function is called by:
  5007 ;;		_main
  5008 ;; This function uses a non-reentrant model
  5009 ;;
  5010                           
  5011                           	psect	text17
  5012  0021DE                     __ptext17:
  5013                           	callstack 0
  5014  0021DE                     _init_stepper:
  5015                           	callstack 0
  5016  0021DE  FFFF               	dw	65535	; assembler added errata NOP
  5017  0021E0                     
  5018                           ;stepper_motor.c: 5:     for (int i = 0; i < 4; i++) {
  5019  0021E0  0E00               	movlw	0
  5020  0021E2  6E10               	movwf	(init_stepper@i+1)^0,c
  5021  0021E4  0E00               	movlw	0
  5022  0021E6  6E0F               	movwf	init_stepper@i^0,c
  5023  0021E8                     l2852:
  5024  0021E8  FFFF               	dw	65535	; assembler added errata NOP
  5025                           
  5026                           ;stepper_motor.c: 6:        stepper_motor -> hex_coil_register_values[i] = hex_coil_regi
      +                          ster_values[i];
  5027  0021EA  500F               	movf	init_stepper@i^0,w,c
  5028  0021EC  2409               	addwf	init_stepper@hex_coil_register_values^0,w,c
  5029  0021EE  6ED9               	movwf	fsr2l,c
  5030  0021F0  5010               	movf	(init_stepper@i+1)^0,w,c
  5031  0021F2  200A               	addwfc	(init_stepper@hex_coil_register_values+1)^0,w,c
  5032  0021F4  6EDA               	movwf	fsr2h,c
  5033  0021F6  500F               	movf	init_stepper@i^0,w,c
  5034  0021F8  2401               	addwf	init_stepper@stepper_motor^0,w,c
  5035  0021FA  6E0D               	movwf	??_init_stepper^0,c
  5036  0021FC  5010               	movf	(init_stepper@i+1)^0,w,c
  5037  0021FE  2002               	addwfc	(init_stepper@stepper_motor+1)^0,w,c
  5038  002200  6E0E               	movwf	(??_init_stepper+1)^0,c
  5039  002202  0E06               	movlw	6
  5040  002204  240D               	addwf	??_init_stepper^0,w,c
  5041  002206  6EE1               	movwf	fsr1l,c
  5042  002208  0E00               	movlw	0
  5043  00220A  200E               	addwfc	(??_init_stepper+1)^0,w,c
  5044  00220C  6EE2               	movwf	fsr1h,c
  5045  00220E  CFDF FFE7          	movff	indf2,indf1
  5046  002212                     
  5047                           ;stepper_motor.c: 7:     }
  5048  002212  4A0F               	infsnz	init_stepper@i^0,f,c
  5049  002214  2A10               	incf	(init_stepper@i+1)^0,f,c
  5050  002216  BE10               	btfsc	(init_stepper@i+1)^0,7,c
  5051  002218  EF17  F011         	goto	u2761
  5052  00221C  5010               	movf	(init_stepper@i+1)^0,w,c
  5053  00221E  E10A               	bnz	u2760
  5054  002220  0E04               	movlw	4
  5055  002222  5C0F               	subwf	init_stepper@i^0,w,c
  5056  002224  A0D8               	btfss	status,0,c
  5057  002226  EF17  F011         	goto	u2761
  5058  00222A  EF1A  F011         	goto	u2760
  5059  00222E                     u2761:
  5060  00222E  FFFF               	dw	65535	; assembler added errata NOP
  5061  002230  EFF4  F010         	goto	l2852
  5062  002234                     u2760:
  5063  002234  FFFF               	dw	65535	; assembler added errata NOP
  5064  002236                     
  5065                           ;stepper_motor.c: 8:     stepper_motor -> current_coil = current_coil;
  5066  002236  C001  FFD9         	movff	init_stepper@stepper_motor,fsr2l
  5067  00223A  C002  FFDA         	movff	init_stepper@stepper_motor+1,fsr2h
  5068  00223E  C003  FFDE         	movff	init_stepper@current_coil,postinc2
  5069  002242  C004  FFDD         	movff	init_stepper@current_coil+1,postdec2
  5070  002246                     
  5071                           ;stepper_motor.c: 9:     stepper_motor -> step_counter = step_counter;
  5072  002246  EE20 F002          	lfsr	2,2
  5073  00224A  5001               	movf	init_stepper@stepper_motor^0,w,c
  5074  00224C  26D9               	addwf	fsr2l,f,c
  5075  00224E  5002               	movf	(init_stepper@stepper_motor+1)^0,w,c
  5076  002250  22DA               	addwfc	fsr2h,f,c
  5077  002252  C005  FFDE         	movff	init_stepper@step_counter,postinc2
  5078  002256  C006  FFDD         	movff	init_stepper@step_counter+1,postdec2
  5079  00225A                     
  5080                           ;stepper_motor.c: 10:     stepper_motor -> direction = direction;
  5081  00225A  EE20 F004          	lfsr	2,4
  5082  00225E  5001               	movf	init_stepper@stepper_motor^0,w,c
  5083  002260  26D9               	addwf	fsr2l,f,c
  5084  002262  5002               	movf	(init_stepper@stepper_motor+1)^0,w,c
  5085  002264  22DA               	addwfc	fsr2h,f,c
  5086  002266  C007  FFDE         	movff	init_stepper@direction,postinc2
  5087  00226A  C008  FFDD         	movff	init_stepper@direction+1,postdec2
  5088  00226E                     
  5089                           ;stepper_motor.c: 11:     stepper_motor -> register_name = register_name;
  5090  00226E  EE20 F00A          	lfsr	2,10
  5091  002272  5001               	movf	init_stepper@stepper_motor^0,w,c
  5092  002274  26D9               	addwf	fsr2l,f,c
  5093  002276  5002               	movf	(init_stepper@stepper_motor+1)^0,w,c
  5094  002278  22DA               	addwfc	fsr2h,f,c
  5095  00227A  C00B  FFDE         	movff	init_stepper@register_name,postinc2
  5096  00227E  C00C  FFDD         	movff	init_stepper@register_name+1,postdec2
  5097  002282  0012               	return		;funcret
  5098  002284  FFFF               	dw	65535	; errata NOP
  5099  002286                     __end_of_init_stepper:
  5100                           	callstack 0
  5101                           
  5102 ;; *************** function _init_interrupts *****************
  5103 ;; Defined at:
  5104 ;;		line 80 in file "init_PIC.c"
  5105 ;; Parameters:    Size  Location     Type
  5106 ;;		None
  5107 ;; Auto vars:     Size  Location     Type
  5108 ;;		None
  5109 ;; Return value:  Size  Location     Type
  5110 ;;                  1    wreg      void 
  5111 ;; Registers used:
  5112 ;;		None
  5113 ;; Tracked objects:
  5114 ;;		On entry : 0/0
  5115 ;;		On exit  : 0/0
  5116 ;;		Unchanged: 0/0
  5117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5118 ;;      Params:         0       0       0       0       0       0       0
  5119 ;;      Locals:         0       0       0       0       0       0       0
  5120 ;;      Temps:          0       0       0       0       0       0       0
  5121 ;;      Totals:         0       0       0       0       0       0       0
  5122 ;;Total ram usage:        0 bytes
  5123 ;; Hardware stack levels used:    1
  5124 ;; Hardware stack levels required when called:    1
  5125 ;; This function calls:
  5126 ;;		Nothing
  5127 ;; This function is called by:
  5128 ;;		_main
  5129 ;; This function uses a non-reentrant model
  5130 ;;
  5131                           
  5132                           	psect	text18
  5133  0028A0                     __ptext18:
  5134                           	callstack 0
  5135  0028A0                     _init_interrupts:
  5136                           	callstack 0
  5137  0028A0  FFFF               	dw	65535	; assembler added errata NOP
  5138  0028A2                     
  5139                           ;init_PIC.c: 82:     PIR1bits.RCIF = 0;
  5140  0028A2  9A9E               	bcf	158,5,c	;volatile
  5141                           
  5142                           ;init_PIC.c: 83:     PIE1bits.RCIE = 1;
  5143  0028A4  8A9D               	bsf	157,5,c	;volatile
  5144                           
  5145                           ;init_PIC.c: 84:     INTCONbits.PEIE = 1;
  5146  0028A6  8CF2               	bsf	242,6,c	;volatile
  5147  0028A8  0012               	return		;funcret
  5148  0028AA  FFFF               	dw	65535	; errata NOP
  5149  0028AC                     __end_of_init_interrupts:
  5150                           	callstack 0
  5151                           
  5152 ;; *************** function _init_USART *****************
  5153 ;; Defined at:
  5154 ;;		line 13 in file "serial_rs232.c"
  5155 ;; Parameters:    Size  Location     Type
  5156 ;;		None
  5157 ;; Auto vars:     Size  Location     Type
  5158 ;;		None
  5159 ;; Return value:  Size  Location     Type
  5160 ;;                  1    wreg      void 
  5161 ;; Registers used:
  5162 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5163 ;; Tracked objects:
  5164 ;;		On entry : 0/0
  5165 ;;		On exit  : 0/0
  5166 ;;		Unchanged: 0/0
  5167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5168 ;;      Params:         0       0       0       0       0       0       0
  5169 ;;      Locals:         0       0       0       0       0       0       0
  5170 ;;      Temps:          0       0       0       0       0       0       0
  5171 ;;      Totals:         0       0       0       0       0       0       0
  5172 ;;Total ram usage:        0 bytes
  5173 ;; Hardware stack levels used:    1
  5174 ;; Hardware stack levels required when called:    4
  5175 ;; This function calls:
  5176 ;;		___fltol
  5177 ;;		_roundf
  5178 ;; This function is called by:
  5179 ;;		_main
  5180 ;; This function uses a non-reentrant model
  5181 ;;
  5182                           
  5183                           	psect	text19
  5184  0026B2                     __ptext19:
  5185                           	callstack 0
  5186  0026B2                     _init_USART:
  5187                           	callstack 0
  5188  0026B2  FFFF               	dw	65535	; assembler added errata NOP
  5189  0026B4                     
  5190                           ;serial_rs232.c: 24:     SPBRG = roundf(((fosc / desired_baudrate) / 16) - 1);
  5191  0026B4  0E55               	movlw	85
  5192  0026B6  6E4C               	movwf	roundf@x^0,c
  5193  0026B8  0E55               	movlw	85
  5194  0026BA  6E4D               	movwf	(roundf@x+1)^0,c
  5195  0026BC  0EC8               	movlw	200
  5196  0026BE  6E4E               	movwf	(roundf@x+2)^0,c
  5197  0026C0  0E41               	movlw	65
  5198  0026C2  6E4F               	movwf	(roundf@x+3)^0,c
  5199  0026C4  EC6C  F00A         	call	_roundf	;wreg free
  5200  0026C8  C04C  F034         	movff	?_roundf,___fltol@f1
  5201  0026CC  C04D  F035         	movff	?_roundf+1,___fltol@f1+1
  5202  0026D0  C04E  F036         	movff	?_roundf+2,___fltol@f1+2
  5203  0026D4  C04F  F037         	movff	?_roundf+3,___fltol@f1+3
  5204  0026D8  EC12  F00E         	call	___fltol	;wreg free
  5205  0026DC  5034               	movf	?___fltol^0,w,c
  5206  0026DE  6EAF               	movwf	175,c	;volatile
  5207  0026E0                     
  5208                           ;serial_rs232.c: 28:     TXSTAbits.TX9 = 0;
  5209  0026E0  9CAC               	bcf	172,6,c	;volatile
  5210  0026E2                     
  5211                           ;serial_rs232.c: 29:     TXSTAbits.TXEN = 1;
  5212  0026E2  8AAC               	bsf	172,5,c	;volatile
  5213  0026E4                     
  5214                           ;serial_rs232.c: 30:     TXSTAbits.SYNC =0;
  5215  0026E4  98AC               	bcf	172,4,c	;volatile
  5216  0026E6                     
  5217                           ;serial_rs232.c: 31:     TXSTAbits.BRGH = 1;
  5218  0026E6  84AC               	bsf	172,2,c	;volatile
  5219  0026E8                     
  5220                           ;serial_rs232.c: 33:     RCSTAbits.SPEN = 1;
  5221  0026E8  8EAB               	bsf	171,7,c	;volatile
  5222  0026EA                     
  5223                           ;serial_rs232.c: 34:     RCSTAbits.RX9 = 0;
  5224  0026EA  9CAB               	bcf	171,6,c	;volatile
  5225  0026EC                     
  5226                           ;serial_rs232.c: 35:     RCSTAbits.CREN = 1;
  5227  0026EC  88AB               	bsf	171,4,c	;volatile
  5228  0026EE  0012               	return		;funcret
  5229  0026F0  FFFF               	dw	65535	; errata NOP
  5230  0026F2                     __end_of_init_USART:
  5231                           	callstack 0
  5232                           
  5233 ;; *************** function _roundf *****************
  5234 ;; Defined at:
  5235 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\roundf.c"
  5236 ;; Parameters:    Size  Location     Type
  5237 ;;  x               4   75[COMRAM] float 
  5238 ;; Auto vars:     Size  Location     Type
  5239 ;;  y               4   97[COMRAM] float 
  5240 ;;  u               4   93[COMRAM] struct .
  5241 ;;  e               2   87[COMRAM] int 
  5242 ;; Return value:  Size  Location     Type
  5243 ;;                  4   75[COMRAM] float 
  5244 ;; Registers used:
  5245 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5246 ;; Tracked objects:
  5247 ;;		On entry : 0/0
  5248 ;;		On exit  : 0/0
  5249 ;;		Unchanged: 0/0
  5250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5251 ;;      Params:         4       0       0       0       0       0       0
  5252 ;;      Locals:        18       0       0       0       0       0       0
  5253 ;;      Temps:          4       0       0       0       0       0       0
  5254 ;;      Totals:        26       0       0       0       0       0       0
  5255 ;;Total ram usage:       26 bytes
  5256 ;; Hardware stack levels used:    1
  5257 ;; Hardware stack levels required when called:    3
  5258 ;; This function calls:
  5259 ;;		___fladd
  5260 ;;		___flge
  5261 ;;		___flmul
  5262 ;;		___flneg
  5263 ;;		___flsub
  5264 ;; This function is called by:
  5265 ;;		_init_USART
  5266 ;; This function uses a non-reentrant model
  5267 ;;
  5268                           
  5269                           	psect	text20
  5270  0014D8                     __ptext20:
  5271                           	callstack 0
  5272  0014D8                     _roundf:
  5273                           	callstack 0
  5274  0014D8  FFFF               	dw	65535	; assembler added errata NOP
  5275  0014DA  C080  F05E         	movff	roundf@F525,roundf@u
  5276  0014DE  C081  F05F         	movff	roundf@F525+1,roundf@u+1
  5277  0014E2  C082  F060         	movff	roundf@F525+2,roundf@u+2
  5278  0014E6  C083  F061         	movff	roundf@F525+3,roundf@u+3
  5279  0014EA  C04C  F05E         	movff	roundf@x,roundf@u
  5280  0014EE  C04D  F05F         	movff	roundf@x+1,roundf@u+1
  5281  0014F2  C04E  F060         	movff	roundf@x+2,roundf@u+2
  5282  0014F6  C04F  F061         	movff	roundf@x+3,roundf@u+3
  5283  0014FA  C05E  F050         	movff	roundf@u,??_roundf
  5284  0014FE  C05F  F051         	movff	roundf@u+1,??_roundf+1
  5285  001502  C060  F052         	movff	roundf@u+2,??_roundf+2
  5286  001506  C061  F053         	movff	roundf@u+3,??_roundf+3
  5287  00150A  0E18               	movlw	24
  5288  00150C  EF8E  F00A         	goto	u2550
  5289  001510                     u2555:
  5290  001510  FFFF               	dw	65535	; assembler added errata NOP
  5291  001512  90D8               	bcf	status,0,c
  5292  001514  3253               	rrcf	(??_roundf+3)^0,f,c
  5293  001516  3252               	rrcf	(??_roundf+2)^0,f,c
  5294  001518  3251               	rrcf	(??_roundf+1)^0,f,c
  5295  00151A  3250               	rrcf	??_roundf^0,f,c
  5296  00151C                     u2550:
  5297  00151C  FFFF               	dw	65535	; assembler added errata NOP
  5298  00151E  2EE8               	decfsz	wreg,f,c
  5299  001520  EF88  F00A         	goto	u2555
  5300  001524  5050               	movf	??_roundf^0,w,c
  5301  001526  6E58               	movwf	roundf@e^0,c
  5302  001528  6A59               	clrf	(roundf@e+1)^0,c
  5303  00152A  BE59               	btfsc	(roundf@e+1)^0,7,c
  5304  00152C  EFA1  F00A         	goto	u2561
  5305  001530  5059               	movf	(roundf@e+1)^0,w,c
  5306  001532  E10A               	bnz	u2560
  5307  001534  0E96               	movlw	150
  5308  001536  5C58               	subwf	roundf@e^0,w,c
  5309  001538  A0D8               	btfss	status,0,c
  5310  00153A  EFA1  F00A         	goto	u2561
  5311  00153E  EFA4  F00A         	goto	u2560
  5312  001542                     u2561:
  5313  001542  FFFF               	dw	65535	; assembler added errata NOP
  5314  001544  EFAF  F00A         	goto	l2688
  5315  001548                     u2560:
  5316  001548  FFFF               	dw	65535	; assembler added errata NOP
  5317  00154A  C04C  F04C         	movff	roundf@x,?_roundf
  5318  00154E  C04D  F04D         	movff	roundf@x+1,?_roundf+1
  5319  001552  C04E  F04E         	movff	roundf@x+2,?_roundf+2
  5320  001556  C04F  F04F         	movff	roundf@x+3,?_roundf+3
  5321  00155A  EF5C  F00C         	goto	l1089
  5322  00155E                     l2688:
  5323  00155E  FFFF               	dw	65535	; assembler added errata NOP
  5324  001560  C05E  F050         	movff	roundf@u,??_roundf
  5325  001564  C05F  F051         	movff	roundf@u+1,??_roundf+1
  5326  001568  C060  F052         	movff	roundf@u+2,??_roundf+2
  5327  00156C  C061  F053         	movff	roundf@u+3,??_roundf+3
  5328  001570  0E20               	movlw	32
  5329  001572  EFC1  F00A         	goto	u2570
  5330  001576                     u2575:
  5331  001576  FFFF               	dw	65535	; assembler added errata NOP
  5332  001578  90D8               	bcf	status,0,c
  5333  00157A  3253               	rrcf	(??_roundf+3)^0,f,c
  5334  00157C  3252               	rrcf	(??_roundf+2)^0,f,c
  5335  00157E  3251               	rrcf	(??_roundf+1)^0,f,c
  5336  001580  3250               	rrcf	??_roundf^0,f,c
  5337  001582                     u2570:
  5338  001582  FFFF               	dw	65535	; assembler added errata NOP
  5339  001584  2EE8               	decfsz	wreg,f,c
  5340  001586  EFBB  F00A         	goto	u2575
  5341  00158A  5050               	movf	??_roundf^0,w,c
  5342  00158C  1051               	iorwf	(??_roundf+1)^0,w,c
  5343  00158E  1052               	iorwf	(??_roundf+2)^0,w,c
  5344  001590  1053               	iorwf	(??_roundf+3)^0,w,c
  5345  001592  B4D8               	btfsc	status,2,c
  5346  001594  EFCE  F00A         	goto	u2581
  5347  001598  EFD1  F00A         	goto	u2580
  5348  00159C                     u2581:
  5349  00159C  FFFF               	dw	65535	; assembler added errata NOP
  5350  00159E  EFE4  F00A         	goto	l2692
  5351  0015A2                     u2580:
  5352  0015A2  FFFF               	dw	65535	; assembler added errata NOP
  5353  0015A4  C04C  F001         	movff	roundf@x,___flneg@f1
  5354  0015A8  C04D  F002         	movff	roundf@x+1,___flneg@f1+1
  5355  0015AC  C04E  F003         	movff	roundf@x+2,___flneg@f1+2
  5356  0015B0  C04F  F004         	movff	roundf@x+3,___flneg@f1+3
  5357  0015B4  EC38  F013         	call	___flneg	;wreg free
  5358  0015B8  C001  F04C         	movff	?___flneg,roundf@x
  5359  0015BC  C002  F04D         	movff	?___flneg+1,roundf@x+1
  5360  0015C0  C003  F04E         	movff	?___flneg+2,roundf@x+2
  5361  0015C4  C004  F04F         	movff	?___flneg+3,roundf@x+3
  5362  0015C8                     l2692:
  5363  0015C8  FFFF               	dw	65535	; assembler added errata NOP
  5364  0015CA  BE59               	btfsc	(roundf@e+1)^0,7,c
  5365  0015CC  EFF4  F00A         	goto	u2590
  5366  0015D0  5059               	movf	(roundf@e+1)^0,w,c
  5367  0015D2  E107               	bnz	u2591
  5368  0015D4  0E7E               	movlw	126
  5369  0015D6  5C58               	subwf	roundf@e^0,w,c
  5370  0015D8  B0D8               	btfsc	status,0,c
  5371  0015DA  EFF1  F00A         	goto	u2591
  5372  0015DE  EFF4  F00A         	goto	u2590
  5373  0015E2                     u2591:
  5374  0015E2  FFFF               	dw	65535	; assembler added errata NOP
  5375  0015E4  EF11  F00B         	goto	l2698
  5376  0015E8                     u2590:
  5377  0015E8  FFFF               	dw	65535	; assembler added errata NOP
  5378  0015EA  C05E  F01B         	movff	roundf@u,___flmul@b
  5379  0015EE  C05F  F01C         	movff	roundf@u+1,___flmul@b+1
  5380  0015F2  C060  F01D         	movff	roundf@u+2,___flmul@b+2
  5381  0015F6  C061  F01E         	movff	roundf@u+3,___flmul@b+3
  5382  0015FA  0E00               	movlw	0
  5383  0015FC  6E1F               	movwf	___flmul@a^0,c
  5384  0015FE  0E00               	movlw	0
  5385  001600  6E20               	movwf	(___flmul@a+1)^0,c
  5386  001602  0E00               	movlw	0
  5387  001604  6E21               	movwf	(___flmul@a+2)^0,c
  5388  001606  0E00               	movlw	0
  5389  001608  6E22               	movwf	(___flmul@a+3)^0,c
  5390  00160A  EC1A  F008         	call	___flmul	;wreg free
  5391  00160E  C01B  F04C         	movff	?___flmul,?_roundf
  5392  001612  C01C  F04D         	movff	?___flmul+1,?_roundf+1
  5393  001616  C01D  F04E         	movff	?___flmul+2,?_roundf+2
  5394  00161A  C01E  F04F         	movff	?___flmul+3,?_roundf+3
  5395  00161E  EF5C  F00C         	goto	l1089
  5396  001622                     l2698:
  5397  001622  FFFF               	dw	65535	; assembler added errata NOP
  5398  001624  0E00               	movlw	0
  5399  001626  6E05               	movwf	___fladd@a^0,c
  5400  001628  0E00               	movlw	0
  5401  00162A  6E06               	movwf	(___fladd@a+1)^0,c
  5402  00162C  0E00               	movlw	0
  5403  00162E  6E07               	movwf	(___fladd@a+2)^0,c
  5404  001630  0E4B               	movlw	75
  5405  001632  6E08               	movwf	(___fladd@a+3)^0,c
  5406  001634  C04C  F001         	movff	roundf@x,___fladd@b
  5407  001638  C04D  F002         	movff	roundf@x+1,___fladd@b+1
  5408  00163C  C04E  F003         	movff	roundf@x+2,___fladd@b+2
  5409  001640  C04F  F004         	movff	roundf@x+3,___fladd@b+3
  5410  001644  EC46  F005         	call	___fladd	;wreg free
  5411  001648  C001  F05A         	movff	?___fladd,_roundf$1678
  5412  00164C  C002  F05B         	movff	?___fladd+1,_roundf$1678+1
  5413  001650  C003  F05C         	movff	?___fladd+2,_roundf$1678+2
  5414  001654  C004  F05D         	movff	?___fladd+3,_roundf$1678+3
  5415  001658  0E00               	movlw	0
  5416  00165A  6E05               	movwf	___fladd@a^0,c
  5417  00165C  0E00               	movlw	0
  5418  00165E  6E06               	movwf	(___fladd@a+1)^0,c
  5419  001660  0E00               	movlw	0
  5420  001662  6E07               	movwf	(___fladd@a+2)^0,c
  5421  001664  0ECB               	movlw	203
  5422  001666  6E08               	movwf	(___fladd@a+3)^0,c
  5423  001668  C05A  F001         	movff	_roundf$1678,___fladd@b
  5424  00166C  C05B  F002         	movff	_roundf$1678+1,___fladd@b+1
  5425  001670  C05C  F003         	movff	_roundf$1678+2,___fladd@b+2
  5426  001674  C05D  F004         	movff	_roundf$1678+3,___fladd@b+3
  5427  001678  EC46  F005         	call	___fladd	;wreg free
  5428  00167C  C001  F054         	movff	?___fladd,_roundf$1679
  5429  001680  C002  F055         	movff	?___fladd+1,_roundf$1679+1
  5430  001684  C003  F056         	movff	?___fladd+2,_roundf$1679+2
  5431  001688  C004  F057         	movff	?___fladd+3,_roundf$1679+3
  5432  00168C  C054  F011         	movff	_roundf$1679,___flsub@b
  5433  001690  C055  F012         	movff	_roundf$1679+1,___flsub@b+1
  5434  001694  C056  F013         	movff	_roundf$1679+2,___flsub@b+2
  5435  001698  C057  F014         	movff	_roundf$1679+3,___flsub@b+3
  5436  00169C  C04C  F015         	movff	roundf@x,___flsub@a
  5437  0016A0  C04D  F016         	movff	roundf@x+1,___flsub@a+1
  5438  0016A4  C04E  F017         	movff	roundf@x+2,___flsub@a+2
  5439  0016A8  C04F  F018         	movff	roundf@x+3,___flsub@a+3
  5440  0016AC  ECF0  F012         	call	___flsub	;wreg free
  5441  0016B0  C011  F062         	movff	?___flsub,roundf@y
  5442  0016B4  C012  F063         	movff	?___flsub+1,roundf@y+1
  5443  0016B8  C013  F064         	movff	?___flsub+2,roundf@y+2
  5444  0016BC  C014  F065         	movff	?___flsub+3,roundf@y+3
  5445  0016C0  0E00               	movlw	0
  5446  0016C2  6E40               	movwf	___flge@ff1^0,c
  5447  0016C4  0E00               	movlw	0
  5448  0016C6  6E41               	movwf	(___flge@ff1+1)^0,c
  5449  0016C8  0E00               	movlw	0
  5450  0016CA  6E42               	movwf	(___flge@ff1+2)^0,c
  5451  0016CC  0E3F               	movlw	63
  5452  0016CE  6E43               	movwf	(___flge@ff1+3)^0,c
  5453  0016D0  C062  F044         	movff	roundf@y,___flge@ff2
  5454  0016D4  C063  F045         	movff	roundf@y+1,___flge@ff2+1
  5455  0016D8  C064  F046         	movff	roundf@y+2,___flge@ff2+2
  5456  0016DC  C065  F047         	movff	roundf@y+3,___flge@ff2+3
  5457  0016E0  ECAD  F00E         	call	___flge	;wreg free
  5458  0016E4  B0D8               	btfsc	status,0,c
  5459  0016E6  EF77  F00B         	goto	u2601
  5460  0016EA  EF7A  F00B         	goto	u2600
  5461  0016EE                     u2601:
  5462  0016EE  FFFF               	dw	65535	; assembler added errata NOP
  5463  0016F0  EFB1  F00B         	goto	l2702
  5464  0016F4                     u2600:
  5465  0016F4  FFFF               	dw	65535	; assembler added errata NOP
  5466  0016F6  C04C  F005         	movff	roundf@x,___fladd@a
  5467  0016FA  C04D  F006         	movff	roundf@x+1,___fladd@a+1
  5468  0016FE  C04E  F007         	movff	roundf@x+2,___fladd@a+2
  5469  001702  C04F  F008         	movff	roundf@x+3,___fladd@a+3
  5470  001706  C062  F001         	movff	roundf@y,___fladd@b
  5471  00170A  C063  F002         	movff	roundf@y+1,___fladd@b+1
  5472  00170E  C064  F003         	movff	roundf@y+2,___fladd@b+2
  5473  001712  C065  F004         	movff	roundf@y+3,___fladd@b+3
  5474  001716  EC46  F005         	call	___fladd	;wreg free
  5475  00171A  C001  F05A         	movff	?___fladd,_roundf$1678
  5476  00171E  C002  F05B         	movff	?___fladd+1,_roundf$1678+1
  5477  001722  C003  F05C         	movff	?___fladd+2,_roundf$1678+2
  5478  001726  C004  F05D         	movff	?___fladd+3,_roundf$1678+3
  5479  00172A  C05A  F001         	movff	_roundf$1678,___fladd@b
  5480  00172E  C05B  F002         	movff	_roundf$1678+1,___fladd@b+1
  5481  001732  C05C  F003         	movff	_roundf$1678+2,___fladd@b+2
  5482  001736  C05D  F004         	movff	_roundf$1678+3,___fladd@b+3
  5483  00173A  0E00               	movlw	0
  5484  00173C  6E05               	movwf	___fladd@a^0,c
  5485  00173E  0E00               	movlw	0
  5486  001740  6E06               	movwf	(___fladd@a+1)^0,c
  5487  001742  0E80               	movlw	128
  5488  001744  6E07               	movwf	(___fladd@a+2)^0,c
  5489  001746  0EBF               	movlw	191
  5490  001748  6E08               	movwf	(___fladd@a+3)^0,c
  5491  00174A  EC46  F005         	call	___fladd	;wreg free
  5492  00174E  C001  F062         	movff	?___fladd,roundf@y
  5493  001752  C002  F063         	movff	?___fladd+1,roundf@y+1
  5494  001756  C003  F064         	movff	?___fladd+2,roundf@y+2
  5495  00175A  C004  F065         	movff	?___fladd+3,roundf@y+3
  5496  00175E  EF1E  F00C         	goto	l2708
  5497  001762                     l2702:
  5498  001762  FFFF               	dw	65535	; assembler added errata NOP
  5499  001764  0E00               	movlw	0
  5500  001766  6E40               	movwf	___flge@ff1^0,c
  5501  001768  0E00               	movlw	0
  5502  00176A  6E41               	movwf	(___flge@ff1+1)^0,c
  5503  00176C  0E00               	movlw	0
  5504  00176E  6E42               	movwf	(___flge@ff1+2)^0,c
  5505  001770  0EBF               	movlw	191
  5506  001772  6E43               	movwf	(___flge@ff1+3)^0,c
  5507  001774  C062  F044         	movff	roundf@y,___flge@ff2
  5508  001778  C063  F045         	movff	roundf@y+1,___flge@ff2+1
  5509  00177C  C064  F046         	movff	roundf@y+2,___flge@ff2+2
  5510  001780  C065  F047         	movff	roundf@y+3,___flge@ff2+3
  5511  001784  ECAD  F00E         	call	___flge	;wreg free
  5512  001788  A0D8               	btfss	status,0,c
  5513  00178A  EFC9  F00B         	goto	u2611
  5514  00178E  EFCC  F00B         	goto	u2610
  5515  001792                     u2611:
  5516  001792  FFFF               	dw	65535	; assembler added errata NOP
  5517  001794  EF03  F00C         	goto	l2706
  5518  001798                     u2610:
  5519  001798  FFFF               	dw	65535	; assembler added errata NOP
  5520  00179A  C04C  F005         	movff	roundf@x,___fladd@a
  5521  00179E  C04D  F006         	movff	roundf@x+1,___fladd@a+1
  5522  0017A2  C04E  F007         	movff	roundf@x+2,___fladd@a+2
  5523  0017A6  C04F  F008         	movff	roundf@x+3,___fladd@a+3
  5524  0017AA  C062  F001         	movff	roundf@y,___fladd@b
  5525  0017AE  C063  F002         	movff	roundf@y+1,___fladd@b+1
  5526  0017B2  C064  F003         	movff	roundf@y+2,___fladd@b+2
  5527  0017B6  C065  F004         	movff	roundf@y+3,___fladd@b+3
  5528  0017BA  EC46  F005         	call	___fladd	;wreg free
  5529  0017BE  C001  F05A         	movff	?___fladd,_roundf$1678
  5530  0017C2  C002  F05B         	movff	?___fladd+1,_roundf$1678+1
  5531  0017C6  C003  F05C         	movff	?___fladd+2,_roundf$1678+2
  5532  0017CA  C004  F05D         	movff	?___fladd+3,_roundf$1678+3
  5533  0017CE  C05A  F001         	movff	_roundf$1678,___fladd@b
  5534  0017D2  C05B  F002         	movff	_roundf$1678+1,___fladd@b+1
  5535  0017D6  C05C  F003         	movff	_roundf$1678+2,___fladd@b+2
  5536  0017DA  C05D  F004         	movff	_roundf$1678+3,___fladd@b+3
  5537  0017DE  0E00               	movlw	0
  5538  0017E0  6E05               	movwf	___fladd@a^0,c
  5539  0017E2  0E00               	movlw	0
  5540  0017E4  6E06               	movwf	(___fladd@a+1)^0,c
  5541  0017E6  0E80               	movlw	128
  5542  0017E8  6E07               	movwf	(___fladd@a+2)^0,c
  5543  0017EA  0E3F               	movlw	63
  5544  0017EC  6E08               	movwf	(___fladd@a+3)^0,c
  5545  0017EE  EC46  F005         	call	___fladd	;wreg free
  5546  0017F2  C001  F062         	movff	?___fladd,roundf@y
  5547  0017F6  C002  F063         	movff	?___fladd+1,roundf@y+1
  5548  0017FA  C003  F064         	movff	?___fladd+2,roundf@y+2
  5549  0017FE  C004  F065         	movff	?___fladd+3,roundf@y+3
  5550  001802  EF1E  F00C         	goto	l2708
  5551  001806                     l2706:
  5552  001806  FFFF               	dw	65535	; assembler added errata NOP
  5553  001808  C062  F001         	movff	roundf@y,___fladd@b
  5554  00180C  C063  F002         	movff	roundf@y+1,___fladd@b+1
  5555  001810  C064  F003         	movff	roundf@y+2,___fladd@b+2
  5556  001814  C065  F004         	movff	roundf@y+3,___fladd@b+3
  5557  001818  C04C  F005         	movff	roundf@x,___fladd@a
  5558  00181C  C04D  F006         	movff	roundf@x+1,___fladd@a+1
  5559  001820  C04E  F007         	movff	roundf@x+2,___fladd@a+2
  5560  001824  C04F  F008         	movff	roundf@x+3,___fladd@a+3
  5561  001828  EC46  F005         	call	___fladd	;wreg free
  5562  00182C  C001  F062         	movff	?___fladd,roundf@y
  5563  001830  C002  F063         	movff	?___fladd+1,roundf@y+1
  5564  001834  C003  F064         	movff	?___fladd+2,roundf@y+2
  5565  001838  C004  F065         	movff	?___fladd+3,roundf@y+3
  5566  00183C                     l2708:
  5567  00183C  FFFF               	dw	65535	; assembler added errata NOP
  5568  00183E  C05E  F050         	movff	roundf@u,??_roundf
  5569  001842  C05F  F051         	movff	roundf@u+1,??_roundf+1
  5570  001846  C060  F052         	movff	roundf@u+2,??_roundf+2
  5571  00184A  C061  F053         	movff	roundf@u+3,??_roundf+3
  5572  00184E  0E20               	movlw	32
  5573  001850  EF30  F00C         	goto	u2620
  5574  001854                     u2625:
  5575  001854  FFFF               	dw	65535	; assembler added errata NOP
  5576  001856  90D8               	bcf	status,0,c
  5577  001858  3253               	rrcf	(??_roundf+3)^0,f,c
  5578  00185A  3252               	rrcf	(??_roundf+2)^0,f,c
  5579  00185C  3251               	rrcf	(??_roundf+1)^0,f,c
  5580  00185E  3250               	rrcf	??_roundf^0,f,c
  5581  001860                     u2620:
  5582  001860  FFFF               	dw	65535	; assembler added errata NOP
  5583  001862  2EE8               	decfsz	wreg,f,c
  5584  001864  EF2A  F00C         	goto	u2625
  5585  001868  5050               	movf	??_roundf^0,w,c
  5586  00186A  1051               	iorwf	(??_roundf+1)^0,w,c
  5587  00186C  1052               	iorwf	(??_roundf+2)^0,w,c
  5588  00186E  1053               	iorwf	(??_roundf+3)^0,w,c
  5589  001870  B4D8               	btfsc	status,2,c
  5590  001872  EF3D  F00C         	goto	u2631
  5591  001876  EF40  F00C         	goto	u2630
  5592  00187A                     u2631:
  5593  00187A  FFFF               	dw	65535	; assembler added errata NOP
  5594  00187C  EF53  F00C         	goto	l2712
  5595  001880                     u2630:
  5596  001880  FFFF               	dw	65535	; assembler added errata NOP
  5597  001882  C062  F001         	movff	roundf@y,___flneg@f1
  5598  001886  C063  F002         	movff	roundf@y+1,___flneg@f1+1
  5599  00188A  C064  F003         	movff	roundf@y+2,___flneg@f1+2
  5600  00188E  C065  F004         	movff	roundf@y+3,___flneg@f1+3
  5601  001892  EC38  F013         	call	___flneg	;wreg free
  5602  001896  C001  F062         	movff	?___flneg,roundf@y
  5603  00189A  C002  F063         	movff	?___flneg+1,roundf@y+1
  5604  00189E  C003  F064         	movff	?___flneg+2,roundf@y+2
  5605  0018A2  C004  F065         	movff	?___flneg+3,roundf@y+3
  5606  0018A6                     l2712:
  5607  0018A6  FFFF               	dw	65535	; assembler added errata NOP
  5608  0018A8  C062  F04C         	movff	roundf@y,?_roundf
  5609  0018AC  C063  F04D         	movff	roundf@y+1,?_roundf+1
  5610  0018B0  C064  F04E         	movff	roundf@y+2,?_roundf+2
  5611  0018B4  C065  F04F         	movff	roundf@y+3,?_roundf+3
  5612  0018B8                     l1089:
  5613  0018B8  FFFF               	dw	65535	; assembler added errata NOP
  5614  0018BA  0012               	return		;funcret
  5615  0018BC  FFFF               	dw	65535	; errata NOP
  5616  0018BE                     __end_of_roundf:
  5617                           	callstack 0
  5618                           
  5619 ;; *************** function ___flsub *****************
  5620 ;; Defined at:
  5621 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  5622 ;; Parameters:    Size  Location     Type
  5623 ;;  b               4   16[COMRAM] float 
  5624 ;;  a               4   20[COMRAM] float 
  5625 ;; Auto vars:     Size  Location     Type
  5626 ;;		None
  5627 ;; Return value:  Size  Location     Type
  5628 ;;                  4   16[COMRAM] float 
  5629 ;; Registers used:
  5630 ;;		wreg, status,2, status,0, cstack
  5631 ;; Tracked objects:
  5632 ;;		On entry : 0/0
  5633 ;;		On exit  : 0/0
  5634 ;;		Unchanged: 0/0
  5635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5636 ;;      Params:         8       0       0       0       0       0       0
  5637 ;;      Locals:         0       0       0       0       0       0       0
  5638 ;;      Temps:          0       0       0       0       0       0       0
  5639 ;;      Totals:         8       0       0       0       0       0       0
  5640 ;;Total ram usage:        8 bytes
  5641 ;; Hardware stack levels used:    1
  5642 ;; Hardware stack levels required when called:    2
  5643 ;; This function calls:
  5644 ;;		___fladd
  5645 ;; This function is called by:
  5646 ;;		_roundf
  5647 ;; This function uses a non-reentrant model
  5648 ;;
  5649                           
  5650                           	psect	text21
  5651  0025E0                     __ptext21:
  5652                           	callstack 0
  5653  0025E0                     ___flsub:
  5654                           	callstack 0
  5655  0025E0  FFFF               	dw	65535	; assembler added errata NOP
  5656  0025E2  0E00               	movlw	0
  5657  0025E4  1A15               	xorwf	___flsub@a^0,f,c
  5658  0025E6  0E00               	movlw	0
  5659  0025E8  1A16               	xorwf	(___flsub@a+1)^0,f,c
  5660  0025EA  0E00               	movlw	0
  5661  0025EC  1A17               	xorwf	(___flsub@a+2)^0,f,c
  5662  0025EE  0E80               	movlw	128
  5663  0025F0  1A18               	xorwf	(___flsub@a+3)^0,f,c
  5664  0025F2  C011  F001         	movff	___flsub@b,___fladd@b
  5665  0025F6  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  5666  0025FA  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  5667  0025FE  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  5668  002602  C015  F005         	movff	___flsub@a,___fladd@a
  5669  002606  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  5670  00260A  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  5671  00260E  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  5672  002612  EC46  F005         	call	___fladd	;wreg free
  5673  002616  C001  F011         	movff	?___fladd,?___flsub
  5674  00261A  C002  F012         	movff	?___fladd+1,?___flsub+1
  5675  00261E  C003  F013         	movff	?___fladd+2,?___flsub+2
  5676  002622  C004  F014         	movff	?___fladd+3,?___flsub+3
  5677  002626  0012               	return		;funcret
  5678  002628  FFFF               	dw	65535	; errata NOP
  5679  00262A                     __end_of___flsub:
  5680                           	callstack 0
  5681                           
  5682 ;; *************** function ___fladd *****************
  5683 ;; Defined at:
  5684 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  5685 ;; Parameters:    Size  Location     Type
  5686 ;;  b               4    0[COMRAM] float 
  5687 ;;  a               4    4[COMRAM] float 
  5688 ;; Auto vars:     Size  Location     Type
  5689 ;;  grs             1   15[COMRAM] unsigned char 
  5690 ;;  bexp            1   14[COMRAM] unsigned char 
  5691 ;;  aexp            1   13[COMRAM] unsigned char 
  5692 ;;  signs           1   12[COMRAM] unsigned char 
  5693 ;; Return value:  Size  Location     Type
  5694 ;;                  4    0[COMRAM] unsigned char 
  5695 ;; Registers used:
  5696 ;;		wreg, status,2, status,0
  5697 ;; Tracked objects:
  5698 ;;		On entry : 0/0
  5699 ;;		On exit  : 0/0
  5700 ;;		Unchanged: 0/0
  5701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5702 ;;      Params:         8       0       0       0       0       0       0
  5703 ;;      Locals:         4       0       0       0       0       0       0
  5704 ;;      Temps:          4       0       0       0       0       0       0
  5705 ;;      Totals:        16       0       0       0       0       0       0
  5706 ;;Total ram usage:       16 bytes
  5707 ;; Hardware stack levels used:    1
  5708 ;; Hardware stack levels required when called:    1
  5709 ;; This function calls:
  5710 ;;		Nothing
  5711 ;; This function is called by:
  5712 ;;		___flsub
  5713 ;;		_roundf
  5714 ;; This function uses a non-reentrant model
  5715 ;;
  5716                           
  5717                           	psect	text22
  5718  000A8C                     __ptext22:
  5719                           	callstack 0
  5720  000A8C                     ___fladd:
  5721                           	callstack 0
  5722  000A8C  FFFF               	dw	65535	; assembler added errata NOP
  5723  000A8E  5004               	movf	(___fladd@b+3)^0,w,c
  5724  000A90  0B80               	andlw	128
  5725  000A92  6E0D               	movwf	___fladd@signs^0,c
  5726  000A94  5004               	movf	(___fladd@b+3)^0,w,c
  5727  000A96  2404               	addwf	(___fladd@b+3)^0,w,c
  5728  000A98  6E0F               	movwf	___fladd@bexp^0,c
  5729  000A9A  AE03               	btfss	(___fladd@b+2)^0,7,c
  5730  000A9C  EF52  F005         	goto	u1741
  5731  000AA0  EF55  F005         	goto	u1740
  5732  000AA4                     u1741:
  5733  000AA4  FFFF               	dw	65535	; assembler added errata NOP
  5734  000AA6  EF57  F005         	goto	l2216
  5735  000AAA                     u1740:
  5736  000AAA  FFFF               	dw	65535	; assembler added errata NOP
  5737  000AAC  800F               	bsf	___fladd@bexp^0,0,c
  5738  000AAE                     l2216:
  5739  000AAE  FFFF               	dw	65535	; assembler added errata NOP
  5740  000AB0  500F               	movf	___fladd@bexp^0,w,c
  5741  000AB2  B4D8               	btfsc	status,2,c
  5742  000AB4  EF5E  F005         	goto	u1751
  5743  000AB8  EF61  F005         	goto	u1750
  5744  000ABC                     u1751:
  5745  000ABC  FFFF               	dw	65535	; assembler added errata NOP
  5746  000ABE  EF7A  F005         	goto	l2226
  5747  000AC2                     u1750:
  5748  000AC2  FFFF               	dw	65535	; assembler added errata NOP
  5749  000AC4  280F               	incf	___fladd@bexp^0,w,c
  5750  000AC6  A4D8               	btfss	status,2,c
  5751  000AC8  EF68  F005         	goto	u1761
  5752  000ACC  EF6B  F005         	goto	u1760
  5753  000AD0                     u1761:
  5754  000AD0  FFFF               	dw	65535	; assembler added errata NOP
  5755  000AD2  EF74  F005         	goto	l2222
  5756  000AD6                     u1760:
  5757  000AD6  FFFF               	dw	65535	; assembler added errata NOP
  5758  000AD8  0E00               	movlw	0
  5759  000ADA  6E01               	movwf	___fladd@b^0,c
  5760  000ADC  0E00               	movlw	0
  5761  000ADE  6E02               	movwf	(___fladd@b+1)^0,c
  5762  000AE0  0E00               	movlw	0
  5763  000AE2  6E03               	movwf	(___fladd@b+2)^0,c
  5764  000AE4  0E00               	movlw	0
  5765  000AE6  6E04               	movwf	(___fladd@b+3)^0,c
  5766  000AE8                     l2222:
  5767  000AE8  FFFF               	dw	65535	; assembler added errata NOP
  5768  000AEA  8E03               	bsf	(___fladd@b+2)^0,7,c
  5769  000AEC  0E00               	movlw	0
  5770  000AEE  6E04               	movwf	(___fladd@b+3)^0,c
  5771  000AF0  EF83  F005         	goto	l2228
  5772  000AF4                     l2226:
  5773  000AF4  FFFF               	dw	65535	; assembler added errata NOP
  5774  000AF6  0E00               	movlw	0
  5775  000AF8  6E01               	movwf	___fladd@b^0,c
  5776  000AFA  0E00               	movlw	0
  5777  000AFC  6E02               	movwf	(___fladd@b+1)^0,c
  5778  000AFE  0E00               	movlw	0
  5779  000B00  6E03               	movwf	(___fladd@b+2)^0,c
  5780  000B02  0E00               	movlw	0
  5781  000B04  6E04               	movwf	(___fladd@b+3)^0,c
  5782  000B06                     l2228:
  5783  000B06  FFFF               	dw	65535	; assembler added errata NOP
  5784  000B08  5008               	movf	(___fladd@a+3)^0,w,c
  5785  000B0A  0B80               	andlw	128
  5786  000B0C  6E0E               	movwf	___fladd@aexp^0,c
  5787  000B0E  500D               	movf	___fladd@signs^0,w,c
  5788  000B10  180E               	xorwf	___fladd@aexp^0,w,c
  5789  000B12  B4D8               	btfsc	status,2,c
  5790  000B14  EF8E  F005         	goto	u1771
  5791  000B18  EF91  F005         	goto	u1770
  5792  000B1C                     u1771:
  5793  000B1C  FFFF               	dw	65535	; assembler added errata NOP
  5794  000B1E  EF93  F005         	goto	l2234
  5795  000B22                     u1770:
  5796  000B22  FFFF               	dw	65535	; assembler added errata NOP
  5797  000B24  8C0D               	bsf	___fladd@signs^0,6,c
  5798  000B26                     l2234:
  5799  000B26  FFFF               	dw	65535	; assembler added errata NOP
  5800  000B28  5008               	movf	(___fladd@a+3)^0,w,c
  5801  000B2A  2408               	addwf	(___fladd@a+3)^0,w,c
  5802  000B2C  6E0E               	movwf	___fladd@aexp^0,c
  5803  000B2E  AE07               	btfss	(___fladd@a+2)^0,7,c
  5804  000B30  EF9C  F005         	goto	u1781
  5805  000B34  EF9F  F005         	goto	u1780
  5806  000B38                     u1781:
  5807  000B38  FFFF               	dw	65535	; assembler added errata NOP
  5808  000B3A  EFA1  F005         	goto	l2240
  5809  000B3E                     u1780:
  5810  000B3E  FFFF               	dw	65535	; assembler added errata NOP
  5811  000B40  800E               	bsf	___fladd@aexp^0,0,c
  5812  000B42                     l2240:
  5813  000B42  FFFF               	dw	65535	; assembler added errata NOP
  5814  000B44  500E               	movf	___fladd@aexp^0,w,c
  5815  000B46  B4D8               	btfsc	status,2,c
  5816  000B48  EFA8  F005         	goto	u1791
  5817  000B4C  EFAB  F005         	goto	u1790
  5818  000B50                     u1791:
  5819  000B50  FFFF               	dw	65535	; assembler added errata NOP
  5820  000B52  EFC4  F005         	goto	l2250
  5821  000B56                     u1790:
  5822  000B56  FFFF               	dw	65535	; assembler added errata NOP
  5823  000B58  280E               	incf	___fladd@aexp^0,w,c
  5824  000B5A  A4D8               	btfss	status,2,c
  5825  000B5C  EFB2  F005         	goto	u1801
  5826  000B60  EFB5  F005         	goto	u1800
  5827  000B64                     u1801:
  5828  000B64  FFFF               	dw	65535	; assembler added errata NOP
  5829  000B66  EFBE  F005         	goto	l2246
  5830  000B6A                     u1800:
  5831  000B6A  FFFF               	dw	65535	; assembler added errata NOP
  5832  000B6C  0E00               	movlw	0
  5833  000B6E  6E05               	movwf	___fladd@a^0,c
  5834  000B70  0E00               	movlw	0
  5835  000B72  6E06               	movwf	(___fladd@a+1)^0,c
  5836  000B74  0E00               	movlw	0
  5837  000B76  6E07               	movwf	(___fladd@a+2)^0,c
  5838  000B78  0E00               	movlw	0
  5839  000B7A  6E08               	movwf	(___fladd@a+3)^0,c
  5840  000B7C                     l2246:
  5841  000B7C  FFFF               	dw	65535	; assembler added errata NOP
  5842  000B7E  8E07               	bsf	(___fladd@a+2)^0,7,c
  5843  000B80  0E00               	movlw	0
  5844  000B82  6E08               	movwf	(___fladd@a+3)^0,c
  5845  000B84  EFCD  F005         	goto	l2252
  5846  000B88                     l2250:
  5847  000B88  FFFF               	dw	65535	; assembler added errata NOP
  5848  000B8A  0E00               	movlw	0
  5849  000B8C  6E05               	movwf	___fladd@a^0,c
  5850  000B8E  0E00               	movlw	0
  5851  000B90  6E06               	movwf	(___fladd@a+1)^0,c
  5852  000B92  0E00               	movlw	0
  5853  000B94  6E07               	movwf	(___fladd@a+2)^0,c
  5854  000B96  0E00               	movlw	0
  5855  000B98  6E08               	movwf	(___fladd@a+3)^0,c
  5856  000B9A                     l2252:
  5857  000B9A  FFFF               	dw	65535	; assembler added errata NOP
  5858  000B9C  500F               	movf	___fladd@bexp^0,w,c
  5859  000B9E  5C0E               	subwf	___fladd@aexp^0,w,c
  5860  000BA0  B0D8               	btfsc	status,0,c
  5861  000BA2  EFD5  F005         	goto	u1811
  5862  000BA6  EFD8  F005         	goto	u1810
  5863  000BAA                     u1811:
  5864  000BAA  FFFF               	dw	65535	; assembler added errata NOP
  5865  000BAC  EF03  F006         	goto	l2288
  5866  000BB0                     u1810:
  5867  000BB0  FFFF               	dw	65535	; assembler added errata NOP
  5868  000BB2  AC0D               	btfss	___fladd@signs^0,6,c
  5869  000BB4  EFDE  F005         	goto	u1821
  5870  000BB8  EFE1  F005         	goto	u1820
  5871  000BBC                     u1821:
  5872  000BBC  FFFF               	dw	65535	; assembler added errata NOP
  5873  000BBE  EFE4  F005         	goto	l2258
  5874  000BC2                     u1820:
  5875  000BC2  FFFF               	dw	65535	; assembler added errata NOP
  5876  000BC4  0E80               	movlw	128
  5877  000BC6  1A0D               	xorwf	___fladd@signs^0,f,c
  5878  000BC8                     l2258:
  5879  000BC8  FFFF               	dw	65535	; assembler added errata NOP
  5880  000BCA  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5881  000BCE  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5882  000BD2  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5883  000BD6  C001  F010         	movff	___fladd@b,___fladd@grs
  5884  000BDA  C005  F001         	movff	___fladd@a,___fladd@b
  5885  000BDE  C010  F005         	movff	___fladd@grs,___fladd@a
  5886  000BE2  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5887  000BE6  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5888  000BEA  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5889  000BEE  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5890  000BF2  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5891  000BF6  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5892  000BFA  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5893  000BFE  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5894  000C02  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5895  000C06                     l2288:
  5896  000C06  FFFF               	dw	65535	; assembler added errata NOP
  5897  000C08  0E00               	movlw	0
  5898  000C0A  6E10               	movwf	___fladd@grs^0,c
  5899  000C0C  500F               	movf	___fladd@bexp^0,w,c
  5900  000C0E  C00E  F009         	movff	___fladd@aexp,??___fladd
  5901  000C12  6A0A               	clrf	(??___fladd+1)^0,c
  5902  000C14  5E09               	subwf	??___fladd^0,f,c
  5903  000C16  0E00               	movlw	0
  5904  000C18  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5905  000C1A  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5906  000C1C  EF19  F006         	goto	u1831
  5907  000C20  500A               	movf	(??___fladd+1)^0,w,c
  5908  000C22  E10A               	bnz	u1830
  5909  000C24  0E1A               	movlw	26
  5910  000C26  5C09               	subwf	??___fladd^0,w,c
  5911  000C28  A0D8               	btfss	status,0,c
  5912  000C2A  EF19  F006         	goto	u1831
  5913  000C2E  EF1C  F006         	goto	u1830
  5914  000C32                     u1831:
  5915  000C32  FFFF               	dw	65535	; assembler added errata NOP
  5916  000C34  EF5F  F006         	goto	l932
  5917  000C38                     u1830:
  5918  000C38  FFFF               	dw	65535	; assembler added errata NOP
  5919  000C3A  5001               	movf	___fladd@b^0,w,c
  5920  000C3C  1002               	iorwf	(___fladd@b+1)^0,w,c
  5921  000C3E  1003               	iorwf	(___fladd@b+2)^0,w,c
  5922  000C40  1004               	iorwf	(___fladd@b+3)^0,w,c
  5923  000C42  A4D8               	btfss	status,2,c
  5924  000C44  EF26  F006         	goto	u1841
  5925  000C48  EF2A  F006         	goto	u1840
  5926  000C4C                     u1841:
  5927  000C4C  FFFF               	dw	65535	; assembler added errata NOP
  5928  000C4E  0E01               	movlw	1
  5929  000C50  EF2C  F006         	goto	u1850
  5930  000C54                     u1840:
  5931  000C54  FFFF               	dw	65535	; assembler added errata NOP
  5932  000C56  0E00               	movlw	0
  5933  000C58                     u1850:
  5934  000C58  FFFF               	dw	65535	; assembler added errata NOP
  5935  000C5A  6E10               	movwf	___fladd@grs^0,c
  5936  000C5C  0E00               	movlw	0
  5937  000C5E  6E01               	movwf	___fladd@b^0,c
  5938  000C60  0E00               	movlw	0
  5939  000C62  6E02               	movwf	(___fladd@b+1)^0,c
  5940  000C64  0E00               	movlw	0
  5941  000C66  6E03               	movwf	(___fladd@b+2)^0,c
  5942  000C68  0E00               	movlw	0
  5943  000C6A  6E04               	movwf	(___fladd@b+3)^0,c
  5944  000C6C  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5945  000C70  EF6A  F006         	goto	l931
  5946  000C74                     l933:
  5947  000C74  FFFF               	dw	65535	; assembler added errata NOP
  5948  000C76  A010               	btfss	___fladd@grs^0,0,c
  5949  000C78  EF40  F006         	goto	u1861
  5950  000C7C  EF43  F006         	goto	u1860
  5951  000C80                     u1861:
  5952  000C80  FFFF               	dw	65535	; assembler added errata NOP
  5953  000C82  EF4A  F006         	goto	l2300
  5954  000C86                     u1860:
  5955  000C86  FFFF               	dw	65535	; assembler added errata NOP
  5956  000C88  90D8               	bcf	status,0,c
  5957  000C8A  3010               	rrcf	___fladd@grs^0,w,c
  5958  000C8C  0901               	iorlw	1
  5959  000C8E  6E10               	movwf	___fladd@grs^0,c
  5960  000C90  EF4D  F006         	goto	l2302
  5961  000C94                     l2300:
  5962  000C94  FFFF               	dw	65535	; assembler added errata NOP
  5963  000C96  90D8               	bcf	status,0,c
  5964  000C98  3210               	rrcf	___fladd@grs^0,f,c
  5965  000C9A                     l2302:
  5966  000C9A  FFFF               	dw	65535	; assembler added errata NOP
  5967  000C9C  A001               	btfss	___fladd@b^0,0,c
  5968  000C9E  EF53  F006         	goto	u1871
  5969  000CA2  EF56  F006         	goto	u1870
  5970  000CA6                     u1871:
  5971  000CA6  FFFF               	dw	65535	; assembler added errata NOP
  5972  000CA8  EF58  F006         	goto	l2306
  5973  000CAC                     u1870:
  5974  000CAC  FFFF               	dw	65535	; assembler added errata NOP
  5975  000CAE  8E10               	bsf	___fladd@grs^0,7,c
  5976  000CB0                     l2306:
  5977  000CB0  FFFF               	dw	65535	; assembler added errata NOP
  5978  000CB2  3404               	rlcf	(___fladd@b+3)^0,w,c
  5979  000CB4  3204               	rrcf	(___fladd@b+3)^0,f,c
  5980  000CB6  3203               	rrcf	(___fladd@b+2)^0,f,c
  5981  000CB8  3202               	rrcf	(___fladd@b+1)^0,f,c
  5982  000CBA  3201               	rrcf	___fladd@b^0,f,c
  5983  000CBC  2A0F               	incf	___fladd@bexp^0,f,c
  5984  000CBE                     l932:
  5985  000CBE  FFFF               	dw	65535	; assembler added errata NOP
  5986  000CC0  500E               	movf	___fladd@aexp^0,w,c
  5987  000CC2  5C0F               	subwf	___fladd@bexp^0,w,c
  5988  000CC4  A0D8               	btfss	status,0,c
  5989  000CC6  EF67  F006         	goto	u1881
  5990  000CCA  EF6A  F006         	goto	u1880
  5991  000CCE                     u1881:
  5992  000CCE  FFFF               	dw	65535	; assembler added errata NOP
  5993  000CD0  EF3A  F006         	goto	l933
  5994  000CD4                     u1880:
  5995  000CD4                     l931:
  5996  000CD4  FFFF               	dw	65535	; assembler added errata NOP
  5997  000CD6  BC0D               	btfsc	___fladd@signs^0,6,c
  5998  000CD8  EF70  F006         	goto	u1891
  5999  000CDC  EF73  F006         	goto	u1890
  6000  000CE0                     u1891:
  6001  000CE0  FFFF               	dw	65535	; assembler added errata NOP
  6002  000CE2  EFC0  F006         	goto	l2334
  6003  000CE6                     u1890:
  6004  000CE6  FFFF               	dw	65535	; assembler added errata NOP
  6005  000CE8  500F               	movf	___fladd@bexp^0,w,c
  6006  000CEA  A4D8               	btfss	status,2,c
  6007  000CEC  EF7A  F006         	goto	u1901
  6008  000CF0  EF7D  F006         	goto	u1900
  6009  000CF4                     u1901:
  6010  000CF4  FFFF               	dw	65535	; assembler added errata NOP
  6011  000CF6  EF88  F006         	goto	l2316
  6012  000CFA                     u1900:
  6013  000CFA  FFFF               	dw	65535	; assembler added errata NOP
  6014  000CFC  0E00               	movlw	0
  6015  000CFE  6E01               	movwf	?___fladd^0,c
  6016  000D00  0E00               	movlw	0
  6017  000D02  6E02               	movwf	(?___fladd+1)^0,c
  6018  000D04  0E00               	movlw	0
  6019  000D06  6E03               	movwf	(?___fladd+2)^0,c
  6020  000D08  0E00               	movlw	0
  6021  000D0A  6E04               	movwf	(?___fladd+3)^0,c
  6022  000D0C  EF17  F008         	goto	l940
  6023  000D10                     l2316:
  6024  000D10  FFFF               	dw	65535	; assembler added errata NOP
  6025  000D12  5005               	movf	___fladd@a^0,w,c
  6026  000D14  2601               	addwf	___fladd@b^0,f,c
  6027  000D16  5006               	movf	(___fladd@a+1)^0,w,c
  6028  000D18  2202               	addwfc	(___fladd@b+1)^0,f,c
  6029  000D1A  5007               	movf	(___fladd@a+2)^0,w,c
  6030  000D1C  2203               	addwfc	(___fladd@b+2)^0,f,c
  6031  000D1E  5008               	movf	(___fladd@a+3)^0,w,c
  6032  000D20  2204               	addwfc	(___fladd@b+3)^0,f,c
  6033  000D22  A004               	btfss	(___fladd@b+3)^0,0,c
  6034  000D24  EF96  F006         	goto	u1911
  6035  000D28  EF99  F006         	goto	u1910
  6036  000D2C                     u1911:
  6037  000D2C  FFFF               	dw	65535	; assembler added errata NOP
  6038  000D2E  EF64  F007         	goto	l2370
  6039  000D32                     u1910:
  6040  000D32  FFFF               	dw	65535	; assembler added errata NOP
  6041  000D34  A010               	btfss	___fladd@grs^0,0,c
  6042  000D36  EF9F  F006         	goto	u1921
  6043  000D3A  EFA2  F006         	goto	u1920
  6044  000D3E                     u1921:
  6045  000D3E  FFFF               	dw	65535	; assembler added errata NOP
  6046  000D40  EFA9  F006         	goto	l2324
  6047  000D44                     u1920:
  6048  000D44  FFFF               	dw	65535	; assembler added errata NOP
  6049  000D46  90D8               	bcf	status,0,c
  6050  000D48  3010               	rrcf	___fladd@grs^0,w,c
  6051  000D4A  0901               	iorlw	1
  6052  000D4C  6E10               	movwf	___fladd@grs^0,c
  6053  000D4E  EFAC  F006         	goto	l2326
  6054  000D52                     l2324:
  6055  000D52  FFFF               	dw	65535	; assembler added errata NOP
  6056  000D54  90D8               	bcf	status,0,c
  6057  000D56  3210               	rrcf	___fladd@grs^0,f,c
  6058  000D58                     l2326:
  6059  000D58  FFFF               	dw	65535	; assembler added errata NOP
  6060  000D5A  A001               	btfss	___fladd@b^0,0,c
  6061  000D5C  EFB2  F006         	goto	u1931
  6062  000D60  EFB5  F006         	goto	u1930
  6063  000D64                     u1931:
  6064  000D64  FFFF               	dw	65535	; assembler added errata NOP
  6065  000D66  EFB7  F006         	goto	l2330
  6066  000D6A                     u1930:
  6067  000D6A  FFFF               	dw	65535	; assembler added errata NOP
  6068  000D6C  8E10               	bsf	___fladd@grs^0,7,c
  6069  000D6E                     l2330:
  6070  000D6E  FFFF               	dw	65535	; assembler added errata NOP
  6071  000D70  3404               	rlcf	(___fladd@b+3)^0,w,c
  6072  000D72  3204               	rrcf	(___fladd@b+3)^0,f,c
  6073  000D74  3203               	rrcf	(___fladd@b+2)^0,f,c
  6074  000D76  3202               	rrcf	(___fladd@b+1)^0,f,c
  6075  000D78  3201               	rrcf	___fladd@b^0,f,c
  6076  000D7A  2A0F               	incf	___fladd@bexp^0,f,c
  6077  000D7C  EF64  F007         	goto	l2370
  6078  000D80                     l2334:
  6079  000D80  FFFF               	dw	65535	; assembler added errata NOP
  6080  000D82  5005               	movf	___fladd@a^0,w,c
  6081  000D84  5C01               	subwf	___fladd@b^0,w,c
  6082  000D86  5006               	movf	(___fladd@a+1)^0,w,c
  6083  000D88  5802               	subwfb	(___fladd@b+1)^0,w,c
  6084  000D8A  5007               	movf	(___fladd@a+2)^0,w,c
  6085  000D8C  5803               	subwfb	(___fladd@b+2)^0,w,c
  6086  000D8E  5004               	movf	(___fladd@b+3)^0,w,c
  6087  000D90  0A80               	xorlw	128
  6088  000D92  6E09               	movwf	??___fladd^0,c
  6089  000D94  5008               	movf	(___fladd@a+3)^0,w,c
  6090  000D96  0A80               	xorlw	128
  6091  000D98  5809               	subwfb	??___fladd^0,w,c
  6092  000D9A  B0D8               	btfsc	status,0,c
  6093  000D9C  EFD2  F006         	goto	u1941
  6094  000DA0  EFD5  F006         	goto	u1940
  6095  000DA4                     u1941:
  6096  000DA4  FFFF               	dw	65535	; assembler added errata NOP
  6097  000DA6  EF03  F007         	goto	l2344
  6098  000DAA                     u1940:
  6099  000DAA  FFFF               	dw	65535	; assembler added errata NOP
  6100  000DAC  5001               	movf	___fladd@b^0,w,c
  6101  000DAE  5C05               	subwf	___fladd@a^0,w,c
  6102  000DB0  6E09               	movwf	??___fladd^0,c
  6103  000DB2  5002               	movf	(___fladd@b+1)^0,w,c
  6104  000DB4  5806               	subwfb	(___fladd@a+1)^0,w,c
  6105  000DB6  6E0A               	movwf	(??___fladd+1)^0,c
  6106  000DB8  5003               	movf	(___fladd@b+2)^0,w,c
  6107  000DBA  5807               	subwfb	(___fladd@a+2)^0,w,c
  6108  000DBC  6E0B               	movwf	(??___fladd+2)^0,c
  6109  000DBE  5004               	movf	(___fladd@b+3)^0,w,c
  6110  000DC0  5808               	subwfb	(___fladd@a+3)^0,w,c
  6111  000DC2  6E0C               	movwf	(??___fladd+3)^0,c
  6112  000DC4  0EFF               	movlw	255
  6113  000DC6  2409               	addwf	??___fladd^0,w,c
  6114  000DC8  6E01               	movwf	___fladd@b^0,c
  6115  000DCA  0EFF               	movlw	255
  6116  000DCC  200A               	addwfc	(??___fladd+1)^0,w,c
  6117  000DCE  6E02               	movwf	(___fladd@b+1)^0,c
  6118  000DD0  0EFF               	movlw	255
  6119  000DD2  200B               	addwfc	(??___fladd+2)^0,w,c
  6120  000DD4  6E03               	movwf	(___fladd@b+2)^0,c
  6121  000DD6  0EFF               	movlw	255
  6122  000DD8  200C               	addwfc	(??___fladd+3)^0,w,c
  6123  000DDA  6E04               	movwf	(___fladd@b+3)^0,c
  6124  000DDC  0E80               	movlw	128
  6125  000DDE  1A0D               	xorwf	___fladd@signs^0,f,c
  6126  000DE0  6C10               	negf	___fladd@grs^0,c
  6127  000DE2  5010               	movf	___fladd@grs^0,w,c
  6128  000DE4  A4D8               	btfss	status,2,c
  6129  000DE6  EFF7  F006         	goto	u1951
  6130  000DEA  EFFA  F006         	goto	u1950
  6131  000DEE                     u1951:
  6132  000DEE  FFFF               	dw	65535	; assembler added errata NOP
  6133  000DF0  EF0C  F007         	goto	l948
  6134  000DF4                     u1950:
  6135  000DF4  FFFF               	dw	65535	; assembler added errata NOP
  6136  000DF6  0E01               	movlw	1
  6137  000DF8  2601               	addwf	___fladd@b^0,f,c
  6138  000DFA  0E00               	movlw	0
  6139  000DFC  2202               	addwfc	(___fladd@b+1)^0,f,c
  6140  000DFE  2203               	addwfc	(___fladd@b+2)^0,f,c
  6141  000E00  2204               	addwfc	(___fladd@b+3)^0,f,c
  6142  000E02  EF0C  F007         	goto	l948
  6143  000E06                     l2344:
  6144  000E06  FFFF               	dw	65535	; assembler added errata NOP
  6145  000E08  5005               	movf	___fladd@a^0,w,c
  6146  000E0A  5E01               	subwf	___fladd@b^0,f,c
  6147  000E0C  5006               	movf	(___fladd@a+1)^0,w,c
  6148  000E0E  5A02               	subwfb	(___fladd@b+1)^0,f,c
  6149  000E10  5007               	movf	(___fladd@a+2)^0,w,c
  6150  000E12  5A03               	subwfb	(___fladd@b+2)^0,f,c
  6151  000E14  5008               	movf	(___fladd@a+3)^0,w,c
  6152  000E16  5A04               	subwfb	(___fladd@b+3)^0,f,c
  6153  000E18                     l948:
  6154  000E18  FFFF               	dw	65535	; assembler added errata NOP
  6155  000E1A  5001               	movf	___fladd@b^0,w,c
  6156  000E1C  1002               	iorwf	(___fladd@b+1)^0,w,c
  6157  000E1E  1003               	iorwf	(___fladd@b+2)^0,w,c
  6158  000E20  1004               	iorwf	(___fladd@b+3)^0,w,c
  6159  000E22  A4D8               	btfss	status,2,c
  6160  000E24  EF16  F007         	goto	u1961
  6161  000E28  EF19  F007         	goto	u1960
  6162  000E2C                     u1961:
  6163  000E2C  FFFF               	dw	65535	; assembler added errata NOP
  6164  000E2E  EF5B  F007         	goto	l2368
  6165  000E32                     u1960:
  6166  000E32  FFFF               	dw	65535	; assembler added errata NOP
  6167  000E34  5010               	movf	___fladd@grs^0,w,c
  6168  000E36  A4D8               	btfss	status,2,c
  6169  000E38  EF20  F007         	goto	u1971
  6170  000E3C  EF23  F007         	goto	u1970
  6171  000E40                     u1971:
  6172  000E40  FFFF               	dw	65535	; assembler added errata NOP
  6173  000E42  EF5B  F007         	goto	l2368
  6174  000E46                     u1970:
  6175  000E46  FFFF               	dw	65535	; assembler added errata NOP
  6176  000E48  0E00               	movlw	0
  6177  000E4A  6E01               	movwf	?___fladd^0,c
  6178  000E4C  0E00               	movlw	0
  6179  000E4E  6E02               	movwf	(?___fladd+1)^0,c
  6180  000E50  0E00               	movlw	0
  6181  000E52  6E03               	movwf	(?___fladd+2)^0,c
  6182  000E54  0E00               	movlw	0
  6183  000E56  6E04               	movwf	(?___fladd+3)^0,c
  6184  000E58  EF17  F008         	goto	l940
  6185  000E5C                     l2352:
  6186  000E5C  FFFF               	dw	65535	; assembler added errata NOP
  6187  000E5E  90D8               	bcf	status,0,c
  6188  000E60  3601               	rlcf	___fladd@b^0,f,c
  6189  000E62  3602               	rlcf	(___fladd@b+1)^0,f,c
  6190  000E64  3603               	rlcf	(___fladd@b+2)^0,f,c
  6191  000E66  3604               	rlcf	(___fladd@b+3)^0,f,c
  6192  000E68  AE10               	btfss	___fladd@grs^0,7,c
  6193  000E6A  EF39  F007         	goto	u1981
  6194  000E6E  EF3C  F007         	goto	u1980
  6195  000E72                     u1981:
  6196  000E72  FFFF               	dw	65535	; assembler added errata NOP
  6197  000E74  EF3E  F007         	goto	l2358
  6198  000E78                     u1980:
  6199  000E78  FFFF               	dw	65535	; assembler added errata NOP
  6200  000E7A  8001               	bsf	___fladd@b^0,0,c
  6201  000E7C                     l2358:
  6202  000E7C  FFFF               	dw	65535	; assembler added errata NOP
  6203  000E7E  A010               	btfss	___fladd@grs^0,0,c
  6204  000E80  EF44  F007         	goto	u1991
  6205  000E84  EF47  F007         	goto	u1990
  6206  000E88                     u1991:
  6207  000E88  FFFF               	dw	65535	; assembler added errata NOP
  6208  000E8A  EF4C  F007         	goto	l2362
  6209  000E8E                     u1990:
  6210  000E8E  FFFF               	dw	65535	; assembler added errata NOP
  6211  000E90  80D8               	bsf	status,0,c
  6212  000E92  3610               	rlcf	___fladd@grs^0,f,c
  6213  000E94  EF4F  F007         	goto	l2364
  6214  000E98                     l2362:
  6215  000E98  FFFF               	dw	65535	; assembler added errata NOP
  6216  000E9A  90D8               	bcf	status,0,c
  6217  000E9C  3610               	rlcf	___fladd@grs^0,f,c
  6218  000E9E                     l2364:
  6219  000E9E  FFFF               	dw	65535	; assembler added errata NOP
  6220  000EA0  500F               	movf	___fladd@bexp^0,w,c
  6221  000EA2  B4D8               	btfsc	status,2,c
  6222  000EA4  EF56  F007         	goto	u2001
  6223  000EA8  EF59  F007         	goto	u2000
  6224  000EAC                     u2001:
  6225  000EAC  FFFF               	dw	65535	; assembler added errata NOP
  6226  000EAE  EF5B  F007         	goto	l2368
  6227  000EB2                     u2000:
  6228  000EB2  FFFF               	dw	65535	; assembler added errata NOP
  6229  000EB4  060F               	decf	___fladd@bexp^0,f,c
  6230  000EB6                     l2368:
  6231  000EB6  FFFF               	dw	65535	; assembler added errata NOP
  6232  000EB8  AE03               	btfss	(___fladd@b+2)^0,7,c
  6233  000EBA  EF61  F007         	goto	u2011
  6234  000EBE  EF64  F007         	goto	u2010
  6235  000EC2                     u2011:
  6236  000EC2  FFFF               	dw	65535	; assembler added errata NOP
  6237  000EC4  EF2E  F007         	goto	l2352
  6238  000EC8                     u2010:
  6239  000EC8                     l2370:
  6240  000EC8  FFFF               	dw	65535	; assembler added errata NOP
  6241  000ECA  0E00               	movlw	0
  6242  000ECC  6E0E               	movwf	___fladd@aexp^0,c
  6243  000ECE  AE10               	btfss	___fladd@grs^0,7,c
  6244  000ED0  EF6C  F007         	goto	u2021
  6245  000ED4  EF6F  F007         	goto	u2020
  6246  000ED8                     u2021:
  6247  000ED8  FFFF               	dw	65535	; assembler added errata NOP
  6248  000EDA  EF8E  F007         	goto	l957
  6249  000EDE                     u2020:
  6250  000EDE  FFFF               	dw	65535	; assembler added errata NOP
  6251  000EE0  C010  F009         	movff	___fladd@grs,??___fladd
  6252  000EE4  0E7F               	movlw	127
  6253  000EE6  1609               	andwf	??___fladd^0,f,c
  6254  000EE8  B4D8               	btfsc	status,2,c
  6255  000EEA  EF79  F007         	goto	u2031
  6256  000EEE  EF7C  F007         	goto	u2030
  6257  000EF2                     u2031:
  6258  000EF2  FFFF               	dw	65535	; assembler added errata NOP
  6259  000EF4  EF82  F007         	goto	l958
  6260  000EF8                     u2030:
  6261  000EF8  FFFF               	dw	65535	; assembler added errata NOP
  6262  000EFA                     l2376:
  6263  000EFA  FFFF               	dw	65535	; assembler added errata NOP
  6264  000EFC  0E01               	movlw	1
  6265  000EFE  6E0E               	movwf	___fladd@aexp^0,c
  6266  000F00  EF8E  F007         	goto	l957
  6267  000F04                     l958:
  6268  000F04  FFFF               	dw	65535	; assembler added errata NOP
  6269  000F06  A001               	btfss	___fladd@b^0,0,c
  6270  000F08  EF88  F007         	goto	u2041
  6271  000F0C  EF8B  F007         	goto	u2040
  6272  000F10                     u2041:
  6273  000F10  FFFF               	dw	65535	; assembler added errata NOP
  6274  000F12  EF8E  F007         	goto	l957
  6275  000F16                     u2040:
  6276  000F16  FFFF               	dw	65535	; assembler added errata NOP
  6277  000F18  EF7D  F007         	goto	l2376
  6278  000F1C                     l957:
  6279  000F1C  FFFF               	dw	65535	; assembler added errata NOP
  6280  000F1E  500E               	movf	___fladd@aexp^0,w,c
  6281  000F20  B4D8               	btfsc	status,2,c
  6282  000F22  EF95  F007         	goto	u2051
  6283  000F26  EF98  F007         	goto	u2050
  6284  000F2A                     u2051:
  6285  000F2A  FFFF               	dw	65535	; assembler added errata NOP
  6286  000F2C  EFC8  F007         	goto	l2388
  6287  000F30                     u2050:
  6288  000F30  FFFF               	dw	65535	; assembler added errata NOP
  6289  000F32  0E01               	movlw	1
  6290  000F34  2601               	addwf	___fladd@b^0,f,c
  6291  000F36  0E00               	movlw	0
  6292  000F38  2202               	addwfc	(___fladd@b+1)^0,f,c
  6293  000F3A  2203               	addwfc	(___fladd@b+2)^0,f,c
  6294  000F3C  2204               	addwfc	(___fladd@b+3)^0,f,c
  6295  000F3E  A004               	btfss	(___fladd@b+3)^0,0,c
  6296  000F40  EFA4  F007         	goto	u2061
  6297  000F44  EFA7  F007         	goto	u2060
  6298  000F48                     u2061:
  6299  000F48  FFFF               	dw	65535	; assembler added errata NOP
  6300  000F4A  EFC8  F007         	goto	l2388
  6301  000F4E                     u2060:
  6302  000F4E  FFFF               	dw	65535	; assembler added errata NOP
  6303  000F50  C001  F009         	movff	___fladd@b,??___fladd
  6304  000F54  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6305  000F58  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6306  000F5C  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6307  000F60  340C               	rlcf	(??___fladd+3)^0,w,c
  6308  000F62  320C               	rrcf	(??___fladd+3)^0,f,c
  6309  000F64  320B               	rrcf	(??___fladd+2)^0,f,c
  6310  000F66  320A               	rrcf	(??___fladd+1)^0,f,c
  6311  000F68  3209               	rrcf	??___fladd^0,f,c
  6312  000F6A  C009  F001         	movff	??___fladd,___fladd@b
  6313  000F6E  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6314  000F72  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6315  000F76  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6316  000F7A  280F               	incf	___fladd@bexp^0,w,c
  6317  000F7C  B4D8               	btfsc	status,2,c
  6318  000F7E  EFC3  F007         	goto	u2071
  6319  000F82  EFC6  F007         	goto	u2070
  6320  000F86                     u2071:
  6321  000F86  FFFF               	dw	65535	; assembler added errata NOP
  6322  000F88  EFC8  F007         	goto	l2388
  6323  000F8C                     u2070:
  6324  000F8C  FFFF               	dw	65535	; assembler added errata NOP
  6325  000F8E  2A0F               	incf	___fladd@bexp^0,f,c
  6326  000F90                     l2388:
  6327  000F90  FFFF               	dw	65535	; assembler added errata NOP
  6328  000F92  280F               	incf	___fladd@bexp^0,w,c
  6329  000F94  B4D8               	btfsc	status,2,c
  6330  000F96  EFCF  F007         	goto	u2081
  6331  000F9A  EFD2  F007         	goto	u2080
  6332  000F9E                     u2081:
  6333  000F9E  FFFF               	dw	65535	; assembler added errata NOP
  6334  000FA0  EFDC  F007         	goto	l2392
  6335  000FA4                     u2080:
  6336  000FA4  FFFF               	dw	65535	; assembler added errata NOP
  6337  000FA6  500F               	movf	___fladd@bexp^0,w,c
  6338  000FA8  A4D8               	btfss	status,2,c
  6339  000FAA  EFD9  F007         	goto	u2091
  6340  000FAE  EFDC  F007         	goto	u2090
  6341  000FB2                     u2091:
  6342  000FB2  FFFF               	dw	65535	; assembler added errata NOP
  6343  000FB4  EFF1  F007         	goto	l2396
  6344  000FB8                     u2090:
  6345  000FB8                     l2392:
  6346  000FB8  FFFF               	dw	65535	; assembler added errata NOP
  6347  000FBA  0E00               	movlw	0
  6348  000FBC  6E01               	movwf	___fladd@b^0,c
  6349  000FBE  0E00               	movlw	0
  6350  000FC0  6E02               	movwf	(___fladd@b+1)^0,c
  6351  000FC2  0E00               	movlw	0
  6352  000FC4  6E03               	movwf	(___fladd@b+2)^0,c
  6353  000FC6  0E00               	movlw	0
  6354  000FC8  6E04               	movwf	(___fladd@b+3)^0,c
  6355  000FCA  500F               	movf	___fladd@bexp^0,w,c
  6356  000FCC  A4D8               	btfss	status,2,c
  6357  000FCE  EFEB  F007         	goto	u2101
  6358  000FD2  EFEE  F007         	goto	u2100
  6359  000FD6                     u2101:
  6360  000FD6  FFFF               	dw	65535	; assembler added errata NOP
  6361  000FD8  EFF1  F007         	goto	l2396
  6362  000FDC                     u2100:
  6363  000FDC  FFFF               	dw	65535	; assembler added errata NOP
  6364  000FDE  0E00               	movlw	0
  6365  000FE0  6E0D               	movwf	___fladd@signs^0,c
  6366  000FE2                     l2396:
  6367  000FE2  FFFF               	dw	65535	; assembler added errata NOP
  6368  000FE4  A00F               	btfss	___fladd@bexp^0,0,c
  6369  000FE6  EFF7  F007         	goto	u2111
  6370  000FEA  EFFA  F007         	goto	u2110
  6371  000FEE                     u2111:
  6372  000FEE  FFFF               	dw	65535	; assembler added errata NOP
  6373  000FF0  EFFE  F007         	goto	l2400
  6374  000FF4                     u2110:
  6375  000FF4  FFFF               	dw	65535	; assembler added errata NOP
  6376  000FF6  8E03               	bsf	(___fladd@b+2)^0,7,c
  6377  000FF8  EF00  F008         	goto	l2402
  6378  000FFC                     l2400:
  6379  000FFC  FFFF               	dw	65535	; assembler added errata NOP
  6380  000FFE  9E03               	bcf	(___fladd@b+2)^0,7,c
  6381  001000                     l2402:
  6382  001000  FFFF               	dw	65535	; assembler added errata NOP
  6383  001002  90D8               	bcf	status,0,c
  6384  001004  300F               	rrcf	___fladd@bexp^0,w,c
  6385  001006  6E04               	movwf	(___fladd@b+3)^0,c
  6386  001008  AE0D               	btfss	___fladd@signs^0,7,c
  6387  00100A  EF09  F008         	goto	u2121
  6388  00100E  EF0C  F008         	goto	u2120
  6389  001012                     u2121:
  6390  001012  FFFF               	dw	65535	; assembler added errata NOP
  6391  001014  EF0E  F008         	goto	l2408
  6392  001018                     u2120:
  6393  001018  FFFF               	dw	65535	; assembler added errata NOP
  6394  00101A  8E04               	bsf	(___fladd@b+3)^0,7,c
  6395  00101C                     l2408:
  6396  00101C  FFFF               	dw	65535	; assembler added errata NOP
  6397  00101E  C001  F001         	movff	___fladd@b,?___fladd
  6398  001022  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6399  001026  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6400  00102A  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6401  00102E                     l940:
  6402  00102E  FFFF               	dw	65535	; assembler added errata NOP
  6403  001030  0012               	return		;funcret
  6404  001032  FFFF               	dw	65535	; errata NOP
  6405  001034                     __end_of___fladd:
  6406                           	callstack 0
  6407                           
  6408 ;; *************** function ___flneg *****************
  6409 ;; Defined at:
  6410 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
  6411 ;; Parameters:    Size  Location     Type
  6412 ;;  f1              4    0[COMRAM] unsigned char 
  6413 ;; Auto vars:     Size  Location     Type
  6414 ;;		None
  6415 ;; Return value:  Size  Location     Type
  6416 ;;                  4    0[COMRAM] unsigned char 
  6417 ;; Registers used:
  6418 ;;		wreg, status,2, status,0
  6419 ;; Tracked objects:
  6420 ;;		On entry : 0/0
  6421 ;;		On exit  : 0/0
  6422 ;;		Unchanged: 0/0
  6423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6424 ;;      Params:         4       0       0       0       0       0       0
  6425 ;;      Locals:         0       0       0       0       0       0       0
  6426 ;;      Temps:          0       0       0       0       0       0       0
  6427 ;;      Totals:         4       0       0       0       0       0       0
  6428 ;;Total ram usage:        4 bytes
  6429 ;; Hardware stack levels used:    1
  6430 ;; Hardware stack levels required when called:    1
  6431 ;; This function calls:
  6432 ;;		Nothing
  6433 ;; This function is called by:
  6434 ;;		_roundf
  6435 ;; This function uses a non-reentrant model
  6436 ;;
  6437                           
  6438                           	psect	text23
  6439  002670                     __ptext23:
  6440                           	callstack 0
  6441  002670                     ___flneg:
  6442                           	callstack 0
  6443  002670  FFFF               	dw	65535	; assembler added errata NOP
  6444  002672  5001               	movf	___flneg@f1^0,w,c
  6445  002674  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6446  002676  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6447  002678  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6448  00267A  B4D8               	btfsc	status,2,c
  6449  00267C  EF42  F013         	goto	u2371
  6450  002680  EF45  F013         	goto	u2370
  6451  002684                     u2371:
  6452  002684  FFFF               	dw	65535	; assembler added errata NOP
  6453  002686  EF4E  F013         	goto	l2588
  6454  00268A                     u2370:
  6455  00268A  FFFF               	dw	65535	; assembler added errata NOP
  6456  00268C  0E00               	movlw	0
  6457  00268E  1A01               	xorwf	___flneg@f1^0,f,c
  6458  002690  0E00               	movlw	0
  6459  002692  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6460  002694  0E00               	movlw	0
  6461  002696  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6462  002698  0E80               	movlw	128
  6463  00269A  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6464  00269C                     l2588:
  6465  00269C  FFFF               	dw	65535	; assembler added errata NOP
  6466  00269E  C001  F001         	movff	___flneg@f1,?___flneg
  6467  0026A2  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6468  0026A6  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6469  0026AA  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6470  0026AE  0012               	return		;funcret
  6471  0026B0  FFFF               	dw	65535	; errata NOP
  6472  0026B2                     __end_of___flneg:
  6473                           	callstack 0
  6474                           
  6475 ;; *************** function _init_PORTS *****************
  6476 ;; Defined at:
  6477 ;;		line 61 in file "init_PIC.c"
  6478 ;; Parameters:    Size  Location     Type
  6479 ;;		None
  6480 ;; Auto vars:     Size  Location     Type
  6481 ;;		None
  6482 ;; Return value:  Size  Location     Type
  6483 ;;                  1    wreg      void 
  6484 ;; Registers used:
  6485 ;;		wreg, status,2
  6486 ;; Tracked objects:
  6487 ;;		On entry : 0/0
  6488 ;;		On exit  : 0/0
  6489 ;;		Unchanged: 0/0
  6490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6491 ;;      Params:         0       0       0       0       0       0       0
  6492 ;;      Locals:         0       0       0       0       0       0       0
  6493 ;;      Temps:          0       0       0       0       0       0       0
  6494 ;;      Totals:         0       0       0       0       0       0       0
  6495 ;;Total ram usage:        0 bytes
  6496 ;; Hardware stack levels used:    1
  6497 ;; Hardware stack levels required when called:    1
  6498 ;; This function calls:
  6499 ;;		Nothing
  6500 ;; This function is called by:
  6501 ;;		_main
  6502 ;; This function uses a non-reentrant model
  6503 ;;
  6504                           
  6505                           	psect	text24
  6506  002728                     __ptext24:
  6507                           	callstack 0
  6508  002728                     _init_PORTS:
  6509                           	callstack 0
  6510  002728  FFFF               	dw	65535	; assembler added errata NOP
  6511  00272A                     
  6512                           ;init_PIC.c: 63:     LATA = 0;
  6513  00272A  0E00               	movlw	0
  6514  00272C  6E89               	movwf	137,c	;volatile
  6515                           
  6516                           ;init_PIC.c: 64:     PORTA = 0;
  6517  00272E  0E00               	movlw	0
  6518  002730  6E80               	movwf	128,c	;volatile
  6519                           
  6520                           ;init_PIC.c: 65:     TRISA = 0xF1;
  6521  002732  0EF1               	movlw	241
  6522  002734  6E92               	movwf	146,c	;volatile
  6523                           
  6524                           ;init_PIC.c: 67:     LATB = 0;
  6525  002736  0E00               	movlw	0
  6526  002738  6E8A               	movwf	138,c	;volatile
  6527                           
  6528                           ;init_PIC.c: 68:     PORTB = 0;
  6529  00273A  0E00               	movlw	0
  6530  00273C  6E81               	movwf	129,c	;volatile
  6531                           
  6532                           ;init_PIC.c: 69:     TRISB = 0x00;
  6533  00273E  0E00               	movlw	0
  6534  002740  6E93               	movwf	147,c	;volatile
  6535                           
  6536                           ;init_PIC.c: 72:     LATC = 0;
  6537  002742  0E00               	movlw	0
  6538  002744  6E8B               	movwf	139,c	;volatile
  6539                           
  6540                           ;init_PIC.c: 73:     PORTC = 0;
  6541  002746  0E00               	movlw	0
  6542  002748  6E82               	movwf	130,c	;volatile
  6543                           
  6544                           ;init_PIC.c: 74:     TRISC = 0x00;
  6545  00274A  0E00               	movlw	0
  6546  00274C  6E94               	movwf	148,c	;volatile
  6547  00274E                     
  6548                           ;init_PIC.c: 75:     TRISCbits.RC7 = 1;
  6549  00274E  8E94               	bsf	148,7,c	;volatile
  6550  002750  0012               	return		;funcret
  6551  002752  FFFF               	dw	65535	; errata NOP
  6552  002754                     __end_of_init_PORTS:
  6553                           	callstack 0
  6554                           
  6555 ;; *************** function _get_reg_value *****************
  6556 ;; Defined at:
  6557 ;;		line 51 in file "serial_rs232.c"
  6558 ;; Parameters:    Size  Location     Type
  6559 ;;		None
  6560 ;; Auto vars:     Size  Location     Type
  6561 ;;  rx_char         1    0[COMRAM] unsigned char 
  6562 ;; Return value:  Size  Location     Type
  6563 ;;                  1    wreg      unsigned char 
  6564 ;; Registers used:
  6565 ;;		wreg, status,2
  6566 ;; Tracked objects:
  6567 ;;		On entry : 0/0
  6568 ;;		On exit  : 0/0
  6569 ;;		Unchanged: 0/0
  6570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6571 ;;      Params:         0       0       0       0       0       0       0
  6572 ;;      Locals:         1       0       0       0       0       0       0
  6573 ;;      Temps:          0       0       0       0       0       0       0
  6574 ;;      Totals:         1       0       0       0       0       0       0
  6575 ;;Total ram usage:        1 bytes
  6576 ;; Hardware stack levels used:    1
  6577 ;; Hardware stack levels required when called:    1
  6578 ;; This function calls:
  6579 ;;		Nothing
  6580 ;; This function is called by:
  6581 ;;		_main
  6582 ;; This function uses a non-reentrant model
  6583 ;;
  6584                           
  6585                           	psect	text25
  6586  002876                     __ptext25:
  6587                           	callstack 0
  6588  002876                     _get_reg_value:
  6589                           	callstack 0
  6590  002876  FFFF               	dw	65535	; assembler added errata NOP
  6591  002878                     
  6592                           ;serial_rs232.c: 52:     unsigned char rx_char = RCREG;
  6593  002878  CFAE F001          	movff	4014,get_reg_value@rx_char	;volatile
  6594  00287C                     
  6595                           ;serial_rs232.c: 53:     RCREG = 0;
  6596  00287C  0E00               	movlw	0
  6597  00287E  6EAE               	movwf	174,c	;volatile
  6598                           
  6599                           ;serial_rs232.c: 54:     return rx_char;
  6600  002880  5001               	movf	get_reg_value@rx_char^0,w,c
  6601  002882  0012               	return		;funcret
  6602  002884  FFFF               	dw	65535	; errata NOP
  6603  002886                     __end_of_get_reg_value:
  6604                           	callstack 0
  6605                           
  6606 ;; *************** function _get_liters *****************
  6607 ;; Defined at:
  6608 ;;		line 36 in file "oven.c"
  6609 ;; Parameters:    Size  Location     Type
  6610 ;;		None
  6611 ;; Auto vars:     Size  Location     Type
  6612 ;;		None
  6613 ;; Return value:  Size  Location     Type
  6614 ;;                  2   61[COMRAM] int 
  6615 ;; Registers used:
  6616 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6617 ;; Tracked objects:
  6618 ;;		On entry : 0/0
  6619 ;;		On exit  : 0/0
  6620 ;;		Unchanged: 0/0
  6621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6622 ;;      Params:         2       0       0       0       0       0       0
  6623 ;;      Locals:         0       0       0       0       0       0       0
  6624 ;;      Temps:          0       0       0       0       0       0       0
  6625 ;;      Totals:         2       0       0       0       0       0       0
  6626 ;;Total ram usage:        2 bytes
  6627 ;; Hardware stack levels used:    1
  6628 ;; Hardware stack levels required when called:    2
  6629 ;; This function calls:
  6630 ;;		___flmul
  6631 ;;		___fltol
  6632 ;;		___xxtofl
  6633 ;; This function is called by:
  6634 ;;		_main
  6635 ;; This function uses a non-reentrant model
  6636 ;;
  6637                           
  6638                           	psect	text26
  6639  002476                     __ptext26:
  6640                           	callstack 0
  6641  002476                     _get_liters:
  6642                           	callstack 0
  6643  002476  FFFF               	dw	65535	; assembler added errata NOP
  6644  002478                     
  6645                           ;oven.c: 37:     ADCON0bits.GO = 1;
  6646  002478  84C2               	bsf	194,2,c	;volatile
  6647  00247A                     l385:
  6648  00247A  FFFF               	dw	65535	; assembler added errata NOP
  6649  00247C  B4C2               	btfsc	194,2,c	;volatile
  6650  00247E  EF43  F012         	goto	u2891
  6651  002482  EF46  F012         	goto	u2890
  6652  002486                     u2891:
  6653  002486  FFFF               	dw	65535	; assembler added errata NOP
  6654  002488  EF3D  F012         	goto	l385
  6655  00248C                     u2890:
  6656  00248C  FFFF               	dw	65535	; assembler added errata NOP
  6657  00248E                     
  6658                           ;oven.c: 39:     return (int) (ADRESH * 0.01);
  6659  00248E  0E0A               	movlw	10
  6660  002490  6E1F               	movwf	___flmul@a^0,c
  6661  002492  0ED7               	movlw	215
  6662  002494  6E20               	movwf	(___flmul@a+1)^0,c
  6663  002496  0E23               	movlw	35
  6664  002498  6E21               	movwf	(___flmul@a+2)^0,c
  6665  00249A  0E3C               	movlw	60
  6666  00249C  6E22               	movwf	(___flmul@a+3)^0,c
  6667  00249E  50C4               	movf	196,w,c	;volatile
  6668  0024A0  6E0D               	movwf	___xxtofl@val^0,c
  6669  0024A2  6A0E               	clrf	(___xxtofl@val+1)^0,c
  6670  0024A4  6A0F               	clrf	(___xxtofl@val+2)^0,c
  6671  0024A6  6A10               	clrf	(___xxtofl@val+3)^0,c
  6672  0024A8  0E01               	movlw	1
  6673  0024AA  EC5F  F00C         	call	___xxtofl
  6674  0024AE  C00D  F01B         	movff	?___xxtofl,___flmul@b
  6675  0024B2  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  6676  0024B6  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  6677  0024BA  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  6678  0024BE  EC1A  F008         	call	___flmul	;wreg free
  6679  0024C2  C01B  F034         	movff	?___flmul,___fltol@f1
  6680  0024C6  C01C  F035         	movff	?___flmul+1,___fltol@f1+1
  6681  0024CA  C01D  F036         	movff	?___flmul+2,___fltol@f1+2
  6682  0024CE  C01E  F037         	movff	?___flmul+3,___fltol@f1+3
  6683  0024D2  EC12  F00E         	call	___fltol	;wreg free
  6684  0024D6  C034  F03E         	movff	?___fltol,?_get_liters
  6685  0024DA  C035  F03F         	movff	?___fltol+1,?_get_liters+1
  6686  0024DE  0012               	return		;funcret
  6687  0024E0  FFFF               	dw	65535	; errata NOP
  6688  0024E2                     __end_of_get_liters:
  6689                           	callstack 0
  6690                           
  6691 ;; *************** function ___fltol *****************
  6692 ;; Defined at:
  6693 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
  6694 ;; Parameters:    Size  Location     Type
  6695 ;;  f1              4   51[COMRAM] int 
  6696 ;; Auto vars:     Size  Location     Type
  6697 ;;  exp1            1   60[COMRAM] unsigned char 
  6698 ;;  sign1           1   59[COMRAM] unsigned char 
  6699 ;; Return value:  Size  Location     Type
  6700 ;;                  4   51[COMRAM] long 
  6701 ;; Registers used:
  6702 ;;		wreg, status,2, status,0
  6703 ;; Tracked objects:
  6704 ;;		On entry : 0/0
  6705 ;;		On exit  : 0/0
  6706 ;;		Unchanged: 0/0
  6707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6708 ;;      Params:         4       0       0       0       0       0       0
  6709 ;;      Locals:         2       0       0       0       0       0       0
  6710 ;;      Temps:          4       0       0       0       0       0       0
  6711 ;;      Totals:        10       0       0       0       0       0       0
  6712 ;;Total ram usage:       10 bytes
  6713 ;; Hardware stack levels used:    1
  6714 ;; Hardware stack levels required when called:    1
  6715 ;; This function calls:
  6716 ;;		Nothing
  6717 ;; This function is called by:
  6718 ;;		_init_USART
  6719 ;;		_get_temperature
  6720 ;;		_get_liters
  6721 ;; This function uses a non-reentrant model
  6722 ;;
  6723                           
  6724                           	psect	text27
  6725  001C24                     __ptext27:
  6726                           	callstack 0
  6727  001C24                     ___fltol:
  6728                           	callstack 0
  6729  001C24  FFFF               	dw	65535	; assembler added errata NOP
  6730  001C26  3436               	rlcf	(___fltol@f1+2)^0,w,c
  6731  001C28  3437               	rlcf	(___fltol@f1+3)^0,w,c
  6732  001C2A  6E3D               	movwf	___fltol@exp1^0,c
  6733  001C2C  503D               	movf	___fltol@exp1^0,w,c
  6734  001C2E  A4D8               	btfss	status,2,c
  6735  001C30  EF1C  F00E         	goto	u2381
  6736  001C34  EF1F  F00E         	goto	u2380
  6737  001C38                     u2381:
  6738  001C38  FFFF               	dw	65535	; assembler added errata NOP
  6739  001C3A  EF2B  F00E         	goto	l2598
  6740  001C3E                     u2380:
  6741  001C3E  FFFF               	dw	65535	; assembler added errata NOP
  6742  001C40                     l2594:
  6743  001C40  FFFF               	dw	65535	; assembler added errata NOP
  6744  001C42  0E00               	movlw	0
  6745  001C44  6E34               	movwf	?___fltol^0,c
  6746  001C46  0E00               	movlw	0
  6747  001C48  6E35               	movwf	(?___fltol+1)^0,c
  6748  001C4A  0E00               	movlw	0
  6749  001C4C  6E36               	movwf	(?___fltol+2)^0,c
  6750  001C4E  0E00               	movlw	0
  6751  001C50  6E37               	movwf	(?___fltol+3)^0,c
  6752  001C52  EFAA  F00E         	goto	l700
  6753  001C56                     l2598:
  6754  001C56  FFFF               	dw	65535	; assembler added errata NOP
  6755  001C58  C034  F038         	movff	___fltol@f1,??___fltol
  6756  001C5C  C035  F039         	movff	___fltol@f1+1,??___fltol+1
  6757  001C60  C036  F03A         	movff	___fltol@f1+2,??___fltol+2
  6758  001C64  C037  F03B         	movff	___fltol@f1+3,??___fltol+3
  6759  001C68  0E20               	movlw	32
  6760  001C6A  EF3D  F00E         	goto	u2390
  6761  001C6E                     u2395:
  6762  001C6E  FFFF               	dw	65535	; assembler added errata NOP
  6763  001C70  90D8               	bcf	status,0,c
  6764  001C72  323B               	rrcf	(??___fltol+3)^0,f,c
  6765  001C74  323A               	rrcf	(??___fltol+2)^0,f,c
  6766  001C76  3239               	rrcf	(??___fltol+1)^0,f,c
  6767  001C78  3238               	rrcf	??___fltol^0,f,c
  6768  001C7A                     u2390:
  6769  001C7A  FFFF               	dw	65535	; assembler added errata NOP
  6770  001C7C  2EE8               	decfsz	wreg,f,c
  6771  001C7E  EF37  F00E         	goto	u2395
  6772  001C82  5038               	movf	??___fltol^0,w,c
  6773  001C84  6E3C               	movwf	___fltol@sign1^0,c
  6774  001C86  8E36               	bsf	(___fltol@f1+2)^0,7,c
  6775  001C88  0EFF               	movlw	255
  6776  001C8A  1634               	andwf	___fltol@f1^0,f,c
  6777  001C8C  0EFF               	movlw	255
  6778  001C8E  1635               	andwf	(___fltol@f1+1)^0,f,c
  6779  001C90  0EFF               	movlw	255
  6780  001C92  1636               	andwf	(___fltol@f1+2)^0,f,c
  6781  001C94  0E00               	movlw	0
  6782  001C96  1637               	andwf	(___fltol@f1+3)^0,f,c
  6783  001C98  0E96               	movlw	150
  6784  001C9A  5E3D               	subwf	___fltol@exp1^0,f,c
  6785  001C9C  BE3D               	btfsc	___fltol@exp1^0,7,c
  6786  001C9E  EF56  F00E         	goto	u2400
  6787  001CA2  EF53  F00E         	goto	u2401
  6788  001CA6                     u2401:
  6789  001CA6  FFFF               	dw	65535	; assembler added errata NOP
  6790  001CA8  EF70  F00E         	goto	l2618
  6791  001CAC                     u2400:
  6792  001CAC  FFFF               	dw	65535	; assembler added errata NOP
  6793  001CAE  503D               	movf	___fltol@exp1^0,w,c
  6794  001CB0  0A80               	xorlw	128
  6795  001CB2  0F97               	addlw	151
  6796  001CB4  B0D8               	btfsc	status,0,c
  6797  001CB6  EF5F  F00E         	goto	u2411
  6798  001CBA  EF62  F00E         	goto	u2410
  6799  001CBE                     u2411:
  6800  001CBE  FFFF               	dw	65535	; assembler added errata NOP
  6801  001CC0  EF65  F00E         	goto	l2614
  6802  001CC4                     u2410:
  6803  001CC4  FFFF               	dw	65535	; assembler added errata NOP
  6804  001CC6  EF20  F00E         	goto	l2594
  6805  001CCA                     l2614:
  6806  001CCA  FFFF               	dw	65535	; assembler added errata NOP
  6807  001CCC  90D8               	bcf	status,0,c
  6808  001CCE  3237               	rrcf	(___fltol@f1+3)^0,f,c
  6809  001CD0  3236               	rrcf	(___fltol@f1+2)^0,f,c
  6810  001CD2  3235               	rrcf	(___fltol@f1+1)^0,f,c
  6811  001CD4  3234               	rrcf	___fltol@f1^0,f,c
  6812  001CD6  3E3D               	incfsz	___fltol@exp1^0,f,c
  6813  001CD8  EF65  F00E         	goto	l2614
  6814  001CDC  EF8E  F00E         	goto	l2628
  6815  001CE0                     l2618:
  6816  001CE0  FFFF               	dw	65535	; assembler added errata NOP
  6817  001CE2  0E1F               	movlw	31
  6818  001CE4  643D               	cpfsgt	___fltol@exp1^0,c
  6819  001CE6  EF77  F00E         	goto	u2421
  6820  001CEA  EF7A  F00E         	goto	u2420
  6821  001CEE                     u2421:
  6822  001CEE  FFFF               	dw	65535	; assembler added errata NOP
  6823  001CF0  EF84  F00E         	goto	l2626
  6824  001CF4                     u2420:
  6825  001CF4  FFFF               	dw	65535	; assembler added errata NOP
  6826  001CF6  EF20  F00E         	goto	l2594
  6827  001CFA                     l2624:
  6828  001CFA  FFFF               	dw	65535	; assembler added errata NOP
  6829  001CFC  90D8               	bcf	status,0,c
  6830  001CFE  3634               	rlcf	___fltol@f1^0,f,c
  6831  001D00  3635               	rlcf	(___fltol@f1+1)^0,f,c
  6832  001D02  3636               	rlcf	(___fltol@f1+2)^0,f,c
  6833  001D04  3637               	rlcf	(___fltol@f1+3)^0,f,c
  6834  001D06  063D               	decf	___fltol@exp1^0,f,c
  6835  001D08                     l2626:
  6836  001D08  FFFF               	dw	65535	; assembler added errata NOP
  6837  001D0A  503D               	movf	___fltol@exp1^0,w,c
  6838  001D0C  A4D8               	btfss	status,2,c
  6839  001D0E  EF8B  F00E         	goto	u2431
  6840  001D12  EF8E  F00E         	goto	u2430
  6841  001D16                     u2431:
  6842  001D16  FFFF               	dw	65535	; assembler added errata NOP
  6843  001D18  EF7D  F00E         	goto	l2624
  6844  001D1C                     u2430:
  6845  001D1C                     l2628:
  6846  001D1C  FFFF               	dw	65535	; assembler added errata NOP
  6847  001D1E  503C               	movf	___fltol@sign1^0,w,c
  6848  001D20  B4D8               	btfsc	status,2,c
  6849  001D22  EF95  F00E         	goto	u2441
  6850  001D26  EF98  F00E         	goto	u2440
  6851  001D2A                     u2441:
  6852  001D2A  FFFF               	dw	65535	; assembler added errata NOP
  6853  001D2C  EFA1  F00E         	goto	l2632
  6854  001D30                     u2440:
  6855  001D30  FFFF               	dw	65535	; assembler added errata NOP
  6856  001D32  1E37               	comf	(___fltol@f1+3)^0,f,c
  6857  001D34  1E36               	comf	(___fltol@f1+2)^0,f,c
  6858  001D36  1E35               	comf	(___fltol@f1+1)^0,f,c
  6859  001D38  6C34               	negf	___fltol@f1^0,c
  6860  001D3A  0E00               	movlw	0
  6861  001D3C  2235               	addwfc	(___fltol@f1+1)^0,f,c
  6862  001D3E  2236               	addwfc	(___fltol@f1+2)^0,f,c
  6863  001D40  2237               	addwfc	(___fltol@f1+3)^0,f,c
  6864  001D42                     l2632:
  6865  001D42  FFFF               	dw	65535	; assembler added errata NOP
  6866  001D44  C034  F034         	movff	___fltol@f1,?___fltol
  6867  001D48  C035  F035         	movff	___fltol@f1+1,?___fltol+1
  6868  001D4C  C036  F036         	movff	___fltol@f1+2,?___fltol+2
  6869  001D50  C037  F037         	movff	___fltol@f1+3,?___fltol+3
  6870  001D54                     l700:
  6871  001D54  FFFF               	dw	65535	; assembler added errata NOP
  6872  001D56  0012               	return		;funcret
  6873  001D58  FFFF               	dw	65535	; errata NOP
  6874  001D5A                     __end_of___fltol:
  6875                           	callstack 0
  6876                           
  6877 ;; *************** function ___flmul *****************
  6878 ;; Defined at:
  6879 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
  6880 ;; Parameters:    Size  Location     Type
  6881 ;;  b               4   26[COMRAM] long 
  6882 ;;  a               4   30[COMRAM] long 
  6883 ;; Auto vars:     Size  Location     Type
  6884 ;;  prod            4   45[COMRAM] struct .
  6885 ;;  grs             4   39[COMRAM] unsigned long 
  6886 ;;  temp            2   49[COMRAM] struct .
  6887 ;;  bexp            1   44[COMRAM] unsigned char 
  6888 ;;  aexp            1   43[COMRAM] unsigned char 
  6889 ;;  sign            1   38[COMRAM] unsigned char 
  6890 ;; Return value:  Size  Location     Type
  6891 ;;                  4   26[COMRAM] unsigned char 
  6892 ;; Registers used:
  6893 ;;		wreg, status,2, status,0, prodl, prodh
  6894 ;; Tracked objects:
  6895 ;;		On entry : 0/0
  6896 ;;		On exit  : 0/0
  6897 ;;		Unchanged: 0/0
  6898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6899 ;;      Params:         8       0       0       0       0       0       0
  6900 ;;      Locals:        13       0       0       0       0       0       0
  6901 ;;      Temps:          4       0       0       0       0       0       0
  6902 ;;      Totals:        25       0       0       0       0       0       0
  6903 ;;Total ram usage:       25 bytes
  6904 ;; Hardware stack levels used:    1
  6905 ;; Hardware stack levels required when called:    1
  6906 ;; This function calls:
  6907 ;;		Nothing
  6908 ;; This function is called by:
  6909 ;;		_get_temperature
  6910 ;;		_get_liters
  6911 ;;		_roundf
  6912 ;; This function uses a non-reentrant model
  6913 ;;
  6914                           
  6915                           	psect	text28
  6916  001034                     __ptext28:
  6917                           	callstack 0
  6918  001034                     ___flmul:
  6919                           	callstack 0
  6920  001034  FFFF               	dw	65535	; assembler added errata NOP
  6921  001036  501E               	movf	(___flmul@b+3)^0,w,c
  6922  001038  0B80               	andlw	128
  6923  00103A  6E27               	movwf	___flmul@sign^0,c
  6924  00103C  501E               	movf	(___flmul@b+3)^0,w,c
  6925  00103E  241E               	addwf	(___flmul@b+3)^0,w,c
  6926  001040  6E2D               	movwf	___flmul@bexp^0,c
  6927  001042  AE1D               	btfss	(___flmul@b+2)^0,7,c
  6928  001044  EF26  F008         	goto	u2131
  6929  001048  EF29  F008         	goto	u2130
  6930  00104C                     u2131:
  6931  00104C  FFFF               	dw	65535	; assembler added errata NOP
  6932  00104E  EF2B  F008         	goto	l2432
  6933  001052                     u2130:
  6934  001052  FFFF               	dw	65535	; assembler added errata NOP
  6935  001054  802D               	bsf	___flmul@bexp^0,0,c
  6936  001056                     l2432:
  6937  001056  FFFF               	dw	65535	; assembler added errata NOP
  6938  001058  502D               	movf	___flmul@bexp^0,w,c
  6939  00105A  B4D8               	btfsc	status,2,c
  6940  00105C  EF32  F008         	goto	u2141
  6941  001060  EF35  F008         	goto	u2140
  6942  001064                     u2141:
  6943  001064  FFFF               	dw	65535	; assembler added errata NOP
  6944  001066  EF4C  F008         	goto	l2440
  6945  00106A                     u2140:
  6946  00106A  FFFF               	dw	65535	; assembler added errata NOP
  6947  00106C  282D               	incf	___flmul@bexp^0,w,c
  6948  00106E  A4D8               	btfss	status,2,c
  6949  001070  EF3C  F008         	goto	u2151
  6950  001074  EF3F  F008         	goto	u2150
  6951  001078                     u2151:
  6952  001078  FFFF               	dw	65535	; assembler added errata NOP
  6953  00107A  EF48  F008         	goto	l2438
  6954  00107E                     u2150:
  6955  00107E  FFFF               	dw	65535	; assembler added errata NOP
  6956  001080  0E00               	movlw	0
  6957  001082  6E1B               	movwf	___flmul@b^0,c
  6958  001084  0E00               	movlw	0
  6959  001086  6E1C               	movwf	(___flmul@b+1)^0,c
  6960  001088  0E00               	movlw	0
  6961  00108A  6E1D               	movwf	(___flmul@b+2)^0,c
  6962  00108C  0E00               	movlw	0
  6963  00108E  6E1E               	movwf	(___flmul@b+3)^0,c
  6964  001090                     l2438:
  6965  001090  FFFF               	dw	65535	; assembler added errata NOP
  6966  001092  8E1D               	bsf	(___flmul@b+2)^0,7,c
  6967  001094  EF55  F008         	goto	l2442
  6968  001098                     l2440:
  6969  001098  FFFF               	dw	65535	; assembler added errata NOP
  6970  00109A  0E00               	movlw	0
  6971  00109C  6E1B               	movwf	___flmul@b^0,c
  6972  00109E  0E00               	movlw	0
  6973  0010A0  6E1C               	movwf	(___flmul@b+1)^0,c
  6974  0010A2  0E00               	movlw	0
  6975  0010A4  6E1D               	movwf	(___flmul@b+2)^0,c
  6976  0010A6  0E00               	movlw	0
  6977  0010A8  6E1E               	movwf	(___flmul@b+3)^0,c
  6978  0010AA                     l2442:
  6979  0010AA  FFFF               	dw	65535	; assembler added errata NOP
  6980  0010AC  5022               	movf	(___flmul@a+3)^0,w,c
  6981  0010AE  0B80               	andlw	128
  6982  0010B0  1A27               	xorwf	___flmul@sign^0,f,c
  6983  0010B2  5022               	movf	(___flmul@a+3)^0,w,c
  6984  0010B4  2422               	addwf	(___flmul@a+3)^0,w,c
  6985  0010B6  6E2C               	movwf	___flmul@aexp^0,c
  6986  0010B8  AE21               	btfss	(___flmul@a+2)^0,7,c
  6987  0010BA  EF61  F008         	goto	u2161
  6988  0010BE  EF64  F008         	goto	u2160
  6989  0010C2                     u2161:
  6990  0010C2  FFFF               	dw	65535	; assembler added errata NOP
  6991  0010C4  EF66  F008         	goto	l2450
  6992  0010C8                     u2160:
  6993  0010C8  FFFF               	dw	65535	; assembler added errata NOP
  6994  0010CA  802C               	bsf	___flmul@aexp^0,0,c
  6995  0010CC                     l2450:
  6996  0010CC  FFFF               	dw	65535	; assembler added errata NOP
  6997  0010CE  502C               	movf	___flmul@aexp^0,w,c
  6998  0010D0  B4D8               	btfsc	status,2,c
  6999  0010D2  EF6D  F008         	goto	u2171
  7000  0010D6  EF70  F008         	goto	u2170
  7001  0010DA                     u2171:
  7002  0010DA  FFFF               	dw	65535	; assembler added errata NOP
  7003  0010DC  EF87  F008         	goto	l2458
  7004  0010E0                     u2170:
  7005  0010E0  FFFF               	dw	65535	; assembler added errata NOP
  7006  0010E2  282C               	incf	___flmul@aexp^0,w,c
  7007  0010E4  A4D8               	btfss	status,2,c
  7008  0010E6  EF77  F008         	goto	u2181
  7009  0010EA  EF7A  F008         	goto	u2180
  7010  0010EE                     u2181:
  7011  0010EE  FFFF               	dw	65535	; assembler added errata NOP
  7012  0010F0  EF83  F008         	goto	l2456
  7013  0010F4                     u2180:
  7014  0010F4  FFFF               	dw	65535	; assembler added errata NOP
  7015  0010F6  0E00               	movlw	0
  7016  0010F8  6E1F               	movwf	___flmul@a^0,c
  7017  0010FA  0E00               	movlw	0
  7018  0010FC  6E20               	movwf	(___flmul@a+1)^0,c
  7019  0010FE  0E00               	movlw	0
  7020  001100  6E21               	movwf	(___flmul@a+2)^0,c
  7021  001102  0E00               	movlw	0
  7022  001104  6E22               	movwf	(___flmul@a+3)^0,c
  7023  001106                     l2456:
  7024  001106  FFFF               	dw	65535	; assembler added errata NOP
  7025  001108  8E21               	bsf	(___flmul@a+2)^0,7,c
  7026  00110A  EF90  F008         	goto	l1017
  7027  00110E                     l2458:
  7028  00110E  FFFF               	dw	65535	; assembler added errata NOP
  7029  001110  0E00               	movlw	0
  7030  001112  6E1F               	movwf	___flmul@a^0,c
  7031  001114  0E00               	movlw	0
  7032  001116  6E20               	movwf	(___flmul@a+1)^0,c
  7033  001118  0E00               	movlw	0
  7034  00111A  6E21               	movwf	(___flmul@a+2)^0,c
  7035  00111C  0E00               	movlw	0
  7036  00111E  6E22               	movwf	(___flmul@a+3)^0,c
  7037  001120                     l1017:
  7038  001120  FFFF               	dw	65535	; assembler added errata NOP
  7039  001122  502C               	movf	___flmul@aexp^0,w,c
  7040  001124  B4D8               	btfsc	status,2,c
  7041  001126  EF97  F008         	goto	u2191
  7042  00112A  EF9A  F008         	goto	u2190
  7043  00112E                     u2191:
  7044  00112E  FFFF               	dw	65535	; assembler added errata NOP
  7045  001130  EFA4  F008         	goto	l2462
  7046  001134                     u2190:
  7047  001134  FFFF               	dw	65535	; assembler added errata NOP
  7048  001136  502D               	movf	___flmul@bexp^0,w,c
  7049  001138  A4D8               	btfss	status,2,c
  7050  00113A  EFA1  F008         	goto	u2201
  7051  00113E  EFA4  F008         	goto	u2200
  7052  001142                     u2201:
  7053  001142  FFFF               	dw	65535	; assembler added errata NOP
  7054  001144  EFAF  F008         	goto	l2466
  7055  001148                     u2200:
  7056  001148                     l2462:
  7057  001148  FFFF               	dw	65535	; assembler added errata NOP
  7058  00114A  0E00               	movlw	0
  7059  00114C  6E1B               	movwf	?___flmul^0,c
  7060  00114E  0E00               	movlw	0
  7061  001150  6E1C               	movwf	(?___flmul+1)^0,c
  7062  001152  0E00               	movlw	0
  7063  001154  6E1D               	movwf	(?___flmul+2)^0,c
  7064  001156  0E00               	movlw	0
  7065  001158  6E1E               	movwf	(?___flmul+3)^0,c
  7066  00115A  EF69  F00A         	goto	l1021
  7067  00115E                     l2466:
  7068  00115E  FFFF               	dw	65535	; assembler added errata NOP
  7069  001160  5021               	movf	(___flmul@a+2)^0,w,c
  7070  001162  021B               	mulwf	___flmul@b^0,c
  7071  001164  CFF3 F032          	movff	prodl,___flmul@temp
  7072  001168  CFF4 F033          	movff	prodh,___flmul@temp+1
  7073  00116C  5032               	movf	___flmul@temp^0,w,c
  7074  00116E  6E28               	movwf	___flmul@grs^0,c
  7075  001170  6A29               	clrf	(___flmul@grs+1)^0,c
  7076  001172  6A2A               	clrf	(___flmul@grs+2)^0,c
  7077  001174  6A2B               	clrf	(___flmul@grs+3)^0,c
  7078  001176  5033               	movf	(___flmul@temp+1)^0,w,c
  7079  001178  6E2E               	movwf	___flmul@prod^0,c
  7080  00117A  6A2F               	clrf	(___flmul@prod+1)^0,c
  7081  00117C  6A30               	clrf	(___flmul@prod+2)^0,c
  7082  00117E  6A31               	clrf	(___flmul@prod+3)^0,c
  7083  001180  5020               	movf	(___flmul@a+1)^0,w,c
  7084  001182  021C               	mulwf	(___flmul@b+1)^0,c
  7085  001184  CFF3 F032          	movff	prodl,___flmul@temp
  7086  001188  CFF4 F033          	movff	prodh,___flmul@temp+1
  7087  00118C  5032               	movf	___flmul@temp^0,w,c
  7088  00118E  2628               	addwf	___flmul@grs^0,f,c
  7089  001190  0E00               	movlw	0
  7090  001192  2229               	addwfc	(___flmul@grs+1)^0,f,c
  7091  001194  222A               	addwfc	(___flmul@grs+2)^0,f,c
  7092  001196  222B               	addwfc	(___flmul@grs+3)^0,f,c
  7093  001198  5033               	movf	(___flmul@temp+1)^0,w,c
  7094  00119A  262E               	addwf	___flmul@prod^0,f,c
  7095  00119C  0E00               	movlw	0
  7096  00119E  222F               	addwfc	(___flmul@prod+1)^0,f,c
  7097  0011A0  2230               	addwfc	(___flmul@prod+2)^0,f,c
  7098  0011A2  2231               	addwfc	(___flmul@prod+3)^0,f,c
  7099  0011A4  501F               	movf	___flmul@a^0,w,c
  7100  0011A6  021D               	mulwf	(___flmul@b+2)^0,c
  7101  0011A8  CFF3 F032          	movff	prodl,___flmul@temp
  7102  0011AC  CFF4 F033          	movff	prodh,___flmul@temp+1
  7103  0011B0  5032               	movf	___flmul@temp^0,w,c
  7104  0011B2  2628               	addwf	___flmul@grs^0,f,c
  7105  0011B4  0E00               	movlw	0
  7106  0011B6  2229               	addwfc	(___flmul@grs+1)^0,f,c
  7107  0011B8  222A               	addwfc	(___flmul@grs+2)^0,f,c
  7108  0011BA  222B               	addwfc	(___flmul@grs+3)^0,f,c
  7109  0011BC  5033               	movf	(___flmul@temp+1)^0,w,c
  7110  0011BE  262E               	addwf	___flmul@prod^0,f,c
  7111  0011C0  0E00               	movlw	0
  7112  0011C2  222F               	addwfc	(___flmul@prod+1)^0,f,c
  7113  0011C4  2230               	addwfc	(___flmul@prod+2)^0,f,c
  7114  0011C6  2231               	addwfc	(___flmul@prod+3)^0,f,c
  7115  0011C8  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
  7116  0011CC  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
  7117  0011D0  C028  F029         	movff	___flmul@grs,___flmul@grs+1
  7118  0011D4  6A28               	clrf	___flmul@grs^0,c
  7119  0011D6  501F               	movf	___flmul@a^0,w,c
  7120  0011D8  021C               	mulwf	(___flmul@b+1)^0,c
  7121  0011DA  CFF3 F032          	movff	prodl,___flmul@temp
  7122  0011DE  CFF4 F033          	movff	prodh,___flmul@temp+1
  7123  0011E2  5032               	movf	___flmul@temp^0,w,c
  7124  0011E4  2628               	addwf	___flmul@grs^0,f,c
  7125  0011E6  5033               	movf	(___flmul@temp+1)^0,w,c
  7126  0011E8  2229               	addwfc	(___flmul@grs+1)^0,f,c
  7127  0011EA  0E00               	movlw	0
  7128  0011EC  222A               	addwfc	(___flmul@grs+2)^0,f,c
  7129  0011EE  0E00               	movlw	0
  7130  0011F0  222B               	addwfc	(___flmul@grs+3)^0,f,c
  7131  0011F2  5020               	movf	(___flmul@a+1)^0,w,c
  7132  0011F4  021B               	mulwf	___flmul@b^0,c
  7133  0011F6  CFF3 F032          	movff	prodl,___flmul@temp
  7134  0011FA  CFF4 F033          	movff	prodh,___flmul@temp+1
  7135  0011FE  5032               	movf	___flmul@temp^0,w,c
  7136  001200  2628               	addwf	___flmul@grs^0,f,c
  7137  001202  5033               	movf	(___flmul@temp+1)^0,w,c
  7138  001204  2229               	addwfc	(___flmul@grs+1)^0,f,c
  7139  001206  0E00               	movlw	0
  7140  001208  222A               	addwfc	(___flmul@grs+2)^0,f,c
  7141  00120A  0E00               	movlw	0
  7142  00120C  222B               	addwfc	(___flmul@grs+3)^0,f,c
  7143  00120E  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
  7144  001212  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
  7145  001216  C028  F029         	movff	___flmul@grs,___flmul@grs+1
  7146  00121A  6A28               	clrf	___flmul@grs^0,c
  7147  00121C  501F               	movf	___flmul@a^0,w,c
  7148  00121E  021B               	mulwf	___flmul@b^0,c
  7149  001220  CFF3 F032          	movff	prodl,___flmul@temp
  7150  001224  CFF4 F033          	movff	prodh,___flmul@temp+1
  7151  001228  5032               	movf	___flmul@temp^0,w,c
  7152  00122A  2628               	addwf	___flmul@grs^0,f,c
  7153  00122C  5033               	movf	(___flmul@temp+1)^0,w,c
  7154  00122E  2229               	addwfc	(___flmul@grs+1)^0,f,c
  7155  001230  0E00               	movlw	0
  7156  001232  222A               	addwfc	(___flmul@grs+2)^0,f,c
  7157  001234  0E00               	movlw	0
  7158  001236  222B               	addwfc	(___flmul@grs+3)^0,f,c
  7159  001238  5021               	movf	(___flmul@a+2)^0,w,c
  7160  00123A  021C               	mulwf	(___flmul@b+1)^0,c
  7161  00123C  CFF3 F032          	movff	prodl,___flmul@temp
  7162  001240  CFF4 F033          	movff	prodh,___flmul@temp+1
  7163  001244  5032               	movf	___flmul@temp^0,w,c
  7164  001246  262E               	addwf	___flmul@prod^0,f,c
  7165  001248  5033               	movf	(___flmul@temp+1)^0,w,c
  7166  00124A  222F               	addwfc	(___flmul@prod+1)^0,f,c
  7167  00124C  0E00               	movlw	0
  7168  00124E  2230               	addwfc	(___flmul@prod+2)^0,f,c
  7169  001250  0E00               	movlw	0
  7170  001252  2231               	addwfc	(___flmul@prod+3)^0,f,c
  7171  001254  5020               	movf	(___flmul@a+1)^0,w,c
  7172  001256  021D               	mulwf	(___flmul@b+2)^0,c
  7173  001258  CFF3 F032          	movff	prodl,___flmul@temp
  7174  00125C  CFF4 F033          	movff	prodh,___flmul@temp+1
  7175  001260  5032               	movf	___flmul@temp^0,w,c
  7176  001262  262E               	addwf	___flmul@prod^0,f,c
  7177  001264  5033               	movf	(___flmul@temp+1)^0,w,c
  7178  001266  222F               	addwfc	(___flmul@prod+1)^0,f,c
  7179  001268  0E00               	movlw	0
  7180  00126A  2230               	addwfc	(___flmul@prod+2)^0,f,c
  7181  00126C  0E00               	movlw	0
  7182  00126E  2231               	addwfc	(___flmul@prod+3)^0,f,c
  7183  001270  5021               	movf	(___flmul@a+2)^0,w,c
  7184  001272  021D               	mulwf	(___flmul@b+2)^0,c
  7185  001274  CFF3 F032          	movff	prodl,___flmul@temp
  7186  001278  CFF4 F033          	movff	prodh,___flmul@temp+1
  7187  00127C  5032               	movf	___flmul@temp^0,w,c
  7188  00127E  6E23               	movwf	??___flmul^0,c
  7189  001280  5033               	movf	(___flmul@temp+1)^0,w,c
  7190  001282  6E24               	movwf	(??___flmul+1)^0,c
  7191  001284  6A25               	clrf	(??___flmul+2)^0,c
  7192  001286  6A26               	clrf	(??___flmul+3)^0,c
  7193  001288  C025  F026         	movff	??___flmul+2,??___flmul+3
  7194  00128C  C024  F025         	movff	??___flmul+1,??___flmul+2
  7195  001290  C023  F024         	movff	??___flmul,??___flmul+1
  7196  001294  6A23               	clrf	??___flmul^0,c
  7197  001296  5023               	movf	??___flmul^0,w,c
  7198  001298  262E               	addwf	___flmul@prod^0,f,c
  7199  00129A  5024               	movf	(??___flmul+1)^0,w,c
  7200  00129C  222F               	addwfc	(___flmul@prod+1)^0,f,c
  7201  00129E  5025               	movf	(??___flmul+2)^0,w,c
  7202  0012A0  2230               	addwfc	(___flmul@prod+2)^0,f,c
  7203  0012A2  5026               	movf	(??___flmul+3)^0,w,c
  7204  0012A4  2231               	addwfc	(___flmul@prod+3)^0,f,c
  7205  0012A6  C028  F023         	movff	___flmul@grs,??___flmul
  7206  0012AA  C029  F024         	movff	___flmul@grs+1,??___flmul+1
  7207  0012AE  C02A  F025         	movff	___flmul@grs+2,??___flmul+2
  7208  0012B2  C02B  F026         	movff	___flmul@grs+3,??___flmul+3
  7209  0012B6  0E19               	movlw	25
  7210  0012B8  EF64  F009         	goto	u2210
  7211  0012BC                     u2215:
  7212  0012BC  FFFF               	dw	65535	; assembler added errata NOP
  7213  0012BE  90D8               	bcf	status,0,c
  7214  0012C0  3226               	rrcf	(??___flmul+3)^0,f,c
  7215  0012C2  3225               	rrcf	(??___flmul+2)^0,f,c
  7216  0012C4  3224               	rrcf	(??___flmul+1)^0,f,c
  7217  0012C6  3223               	rrcf	??___flmul^0,f,c
  7218  0012C8                     u2210:
  7219  0012C8  FFFF               	dw	65535	; assembler added errata NOP
  7220  0012CA  2EE8               	decfsz	wreg,f,c
  7221  0012CC  EF5E  F009         	goto	u2215
  7222  0012D0  5023               	movf	??___flmul^0,w,c
  7223  0012D2  262E               	addwf	___flmul@prod^0,f,c
  7224  0012D4  5024               	movf	(??___flmul+1)^0,w,c
  7225  0012D6  222F               	addwfc	(___flmul@prod+1)^0,f,c
  7226  0012D8  5025               	movf	(??___flmul+2)^0,w,c
  7227  0012DA  2230               	addwfc	(___flmul@prod+2)^0,f,c
  7228  0012DC  5026               	movf	(??___flmul+3)^0,w,c
  7229  0012DE  2231               	addwfc	(___flmul@prod+3)^0,f,c
  7230  0012E0  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
  7231  0012E4  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
  7232  0012E8  C028  F029         	movff	___flmul@grs,___flmul@grs+1
  7233  0012EC  6A28               	clrf	___flmul@grs^0,c
  7234  0012EE  502C               	movf	___flmul@aexp^0,w,c
  7235  0012F0  C02D  F023         	movff	___flmul@bexp,??___flmul
  7236  0012F4  6A24               	clrf	(??___flmul+1)^0,c
  7237  0012F6  2623               	addwf	??___flmul^0,f,c
  7238  0012F8  0E00               	movlw	0
  7239  0012FA  2224               	addwfc	(??___flmul+1)^0,f,c
  7240  0012FC  0E82               	movlw	130
  7241  0012FE  2423               	addwf	??___flmul^0,w,c
  7242  001300  6E32               	movwf	___flmul@temp^0,c
  7243  001302  0EFF               	movlw	255
  7244  001304  2024               	addwfc	(??___flmul+1)^0,w,c
  7245  001306  6E33               	movwf	(___flmul@temp+1)^0,c
  7246  001308  EF9F  F009         	goto	l2514
  7247  00130C                     l2508:
  7248  00130C  FFFF               	dw	65535	; assembler added errata NOP
  7249  00130E  90D8               	bcf	status,0,c
  7250  001310  362E               	rlcf	___flmul@prod^0,f,c
  7251  001312  362F               	rlcf	(___flmul@prod+1)^0,f,c
  7252  001314  3630               	rlcf	(___flmul@prod+2)^0,f,c
  7253  001316  3631               	rlcf	(___flmul@prod+3)^0,f,c
  7254  001318  AE2B               	btfss	(___flmul@grs+3)^0,7,c
  7255  00131A  EF91  F009         	goto	u2221
  7256  00131E  EF94  F009         	goto	u2220
  7257  001322                     u2221:
  7258  001322  FFFF               	dw	65535	; assembler added errata NOP
  7259  001324  EF96  F009         	goto	l1024
  7260  001328                     u2220:
  7261  001328  FFFF               	dw	65535	; assembler added errata NOP
  7262  00132A  802E               	bsf	___flmul@prod^0,0,c
  7263  00132C                     l1024:
  7264  00132C  FFFF               	dw	65535	; assembler added errata NOP
  7265  00132E  90D8               	bcf	status,0,c
  7266  001330  3628               	rlcf	___flmul@grs^0,f,c
  7267  001332  3629               	rlcf	(___flmul@grs+1)^0,f,c
  7268  001334  362A               	rlcf	(___flmul@grs+2)^0,f,c
  7269  001336  362B               	rlcf	(___flmul@grs+3)^0,f,c
  7270  001338  0632               	decf	___flmul@temp^0,f,c
  7271  00133A  A0D8               	btfss	status,0,c
  7272  00133C  0633               	decf	(___flmul@temp+1)^0,f,c
  7273  00133E                     l2514:
  7274  00133E  FFFF               	dw	65535	; assembler added errata NOP
  7275  001340  AE30               	btfss	(___flmul@prod+2)^0,7,c
  7276  001342  EFA5  F009         	goto	u2231
  7277  001346  EFA8  F009         	goto	u2230
  7278  00134A                     u2231:
  7279  00134A  FFFF               	dw	65535	; assembler added errata NOP
  7280  00134C  EF86  F009         	goto	l2508
  7281  001350                     u2230:
  7282  001350  FFFF               	dw	65535	; assembler added errata NOP
  7283  001352  0E00               	movlw	0
  7284  001354  6E2C               	movwf	___flmul@aexp^0,c
  7285  001356  AE2B               	btfss	(___flmul@grs+3)^0,7,c
  7286  001358  EFB0  F009         	goto	u2241
  7287  00135C  EFB3  F009         	goto	u2240
  7288  001360                     u2241:
  7289  001360  FFFF               	dw	65535	; assembler added errata NOP
  7290  001362  EFDE  F009         	goto	l1026
  7291  001366                     u2240:
  7292  001366  FFFF               	dw	65535	; assembler added errata NOP
  7293  001368  0EFF               	movlw	255
  7294  00136A  1428               	andwf	___flmul@grs^0,w,c
  7295  00136C  6E23               	movwf	??___flmul^0,c
  7296  00136E  0EFF               	movlw	255
  7297  001370  1429               	andwf	(___flmul@grs+1)^0,w,c
  7298  001372  6E24               	movwf	(??___flmul+1)^0,c
  7299  001374  0EFF               	movlw	255
  7300  001376  142A               	andwf	(___flmul@grs+2)^0,w,c
  7301  001378  6E25               	movwf	(??___flmul+2)^0,c
  7302  00137A  0E7F               	movlw	127
  7303  00137C  142B               	andwf	(___flmul@grs+3)^0,w,c
  7304  00137E  6E26               	movwf	(??___flmul+3)^0,c
  7305  001380  5023               	movf	??___flmul^0,w,c
  7306  001382  1024               	iorwf	(??___flmul+1)^0,w,c
  7307  001384  1025               	iorwf	(??___flmul+2)^0,w,c
  7308  001386  1026               	iorwf	(??___flmul+3)^0,w,c
  7309  001388  B4D8               	btfsc	status,2,c
  7310  00138A  EFC9  F009         	goto	u2251
  7311  00138E  EFCC  F009         	goto	u2250
  7312  001392                     u2251:
  7313  001392  FFFF               	dw	65535	; assembler added errata NOP
  7314  001394  EFD2  F009         	goto	l1027
  7315  001398                     u2250:
  7316  001398  FFFF               	dw	65535	; assembler added errata NOP
  7317  00139A                     l2522:
  7318  00139A  FFFF               	dw	65535	; assembler added errata NOP
  7319  00139C  0E01               	movlw	1
  7320  00139E  6E2C               	movwf	___flmul@aexp^0,c
  7321  0013A0  EFDE  F009         	goto	l1026
  7322  0013A4                     l1027:
  7323  0013A4  FFFF               	dw	65535	; assembler added errata NOP
  7324  0013A6  A02E               	btfss	___flmul@prod^0,0,c
  7325  0013A8  EFD8  F009         	goto	u2261
  7326  0013AC  EFDB  F009         	goto	u2260
  7327  0013B0                     u2261:
  7328  0013B0  FFFF               	dw	65535	; assembler added errata NOP
  7329  0013B2  EFDE  F009         	goto	l1026
  7330  0013B6                     u2260:
  7331  0013B6  FFFF               	dw	65535	; assembler added errata NOP
  7332  0013B8  EFCD  F009         	goto	l2522
  7333  0013BC                     l1026:
  7334  0013BC  FFFF               	dw	65535	; assembler added errata NOP
  7335  0013BE  502C               	movf	___flmul@aexp^0,w,c
  7336  0013C0  B4D8               	btfsc	status,2,c
  7337  0013C2  EFE5  F009         	goto	u2271
  7338  0013C6  EFE8  F009         	goto	u2270
  7339  0013CA                     u2271:
  7340  0013CA  FFFF               	dw	65535	; assembler added errata NOP
  7341  0013CC  EF0F  F00A         	goto	l2534
  7342  0013D0                     u2270:
  7343  0013D0  FFFF               	dw	65535	; assembler added errata NOP
  7344  0013D2  0E01               	movlw	1
  7345  0013D4  262E               	addwf	___flmul@prod^0,f,c
  7346  0013D6  0E00               	movlw	0
  7347  0013D8  222F               	addwfc	(___flmul@prod+1)^0,f,c
  7348  0013DA  2230               	addwfc	(___flmul@prod+2)^0,f,c
  7349  0013DC  2231               	addwfc	(___flmul@prod+3)^0,f,c
  7350  0013DE  A031               	btfss	(___flmul@prod+3)^0,0,c
  7351  0013E0  EFF4  F009         	goto	u2281
  7352  0013E4  EFF7  F009         	goto	u2280
  7353  0013E8                     u2281:
  7354  0013E8  FFFF               	dw	65535	; assembler added errata NOP
  7355  0013EA  EF0F  F00A         	goto	l2534
  7356  0013EE                     u2280:
  7357  0013EE  FFFF               	dw	65535	; assembler added errata NOP
  7358  0013F0  C02E  F023         	movff	___flmul@prod,??___flmul
  7359  0013F4  C02F  F024         	movff	___flmul@prod+1,??___flmul+1
  7360  0013F8  C030  F025         	movff	___flmul@prod+2,??___flmul+2
  7361  0013FC  C031  F026         	movff	___flmul@prod+3,??___flmul+3
  7362  001400  3426               	rlcf	(??___flmul+3)^0,w,c
  7363  001402  3226               	rrcf	(??___flmul+3)^0,f,c
  7364  001404  3225               	rrcf	(??___flmul+2)^0,f,c
  7365  001406  3224               	rrcf	(??___flmul+1)^0,f,c
  7366  001408  3223               	rrcf	??___flmul^0,f,c
  7367  00140A  C023  F02E         	movff	??___flmul,___flmul@prod
  7368  00140E  C024  F02F         	movff	??___flmul+1,___flmul@prod+1
  7369  001412  C025  F030         	movff	??___flmul+2,___flmul@prod+2
  7370  001416  C026  F031         	movff	??___flmul+3,___flmul@prod+3
  7371  00141A  4A32               	infsnz	___flmul@temp^0,f,c
  7372  00141C  2A33               	incf	(___flmul@temp+1)^0,f,c
  7373  00141E                     l2534:
  7374  00141E  FFFF               	dw	65535	; assembler added errata NOP
  7375  001420  BE33               	btfsc	(___flmul@temp+1)^0,7,c
  7376  001422  EF1B  F00A         	goto	u2291
  7377  001426  5033               	movf	(___flmul@temp+1)^0,w,c
  7378  001428  E109               	bnz	u2290
  7379  00142A  2832               	incf	___flmul@temp^0,w,c
  7380  00142C  A0D8               	btfss	status,0,c
  7381  00142E  EF1B  F00A         	goto	u2291
  7382  001432  EF1E  F00A         	goto	u2290
  7383  001436                     u2291:
  7384  001436  FFFF               	dw	65535	; assembler added errata NOP
  7385  001438  EF29  F00A         	goto	l2538
  7386  00143C                     u2290:
  7387  00143C  FFFF               	dw	65535	; assembler added errata NOP
  7388  00143E  0E00               	movlw	0
  7389  001440  6E2E               	movwf	___flmul@prod^0,c
  7390  001442  0E00               	movlw	0
  7391  001444  6E2F               	movwf	(___flmul@prod+1)^0,c
  7392  001446  0E80               	movlw	128
  7393  001448  6E30               	movwf	(___flmul@prod+2)^0,c
  7394  00144A  0E7F               	movlw	127
  7395  00144C  6E31               	movwf	(___flmul@prod+3)^0,c
  7396  00144E  EF5E  F00A         	goto	l2550
  7397  001452                     l2538:
  7398  001452  FFFF               	dw	65535	; assembler added errata NOP
  7399  001454  BE33               	btfsc	(___flmul@temp+1)^0,7,c
  7400  001456  EF38  F00A         	goto	u2300
  7401  00145A  5033               	movf	(___flmul@temp+1)^0,w,c
  7402  00145C  E106               	bnz	u2301
  7403  00145E  0432               	decf	___flmul@temp^0,w,c
  7404  001460  B0D8               	btfsc	status,0,c
  7405  001462  EF35  F00A         	goto	u2301
  7406  001466  EF38  F00A         	goto	u2300
  7407  00146A                     u2301:
  7408  00146A  FFFF               	dw	65535	; assembler added errata NOP
  7409  00146C  EF45  F00A         	goto	l1034
  7410  001470                     u2300:
  7411  001470  FFFF               	dw	65535	; assembler added errata NOP
  7412  001472  0E00               	movlw	0
  7413  001474  6E2E               	movwf	___flmul@prod^0,c
  7414  001476  0E00               	movlw	0
  7415  001478  6E2F               	movwf	(___flmul@prod+1)^0,c
  7416  00147A  0E00               	movlw	0
  7417  00147C  6E30               	movwf	(___flmul@prod+2)^0,c
  7418  00147E  0E00               	movlw	0
  7419  001480  6E31               	movwf	(___flmul@prod+3)^0,c
  7420  001482  0E00               	movlw	0
  7421  001484  6E27               	movwf	___flmul@sign^0,c
  7422  001486  EF5E  F00A         	goto	l2550
  7423  00148A                     l1034:
  7424  00148A  FFFF               	dw	65535	; assembler added errata NOP
  7425  00148C  C032  F02D         	movff	___flmul@temp,___flmul@bexp
  7426  001490  0EFF               	movlw	255
  7427  001492  162E               	andwf	___flmul@prod^0,f,c
  7428  001494  0EFF               	movlw	255
  7429  001496  162F               	andwf	(___flmul@prod+1)^0,f,c
  7430  001498  0E7F               	movlw	127
  7431  00149A  1630               	andwf	(___flmul@prod+2)^0,f,c
  7432  00149C  0E00               	movlw	0
  7433  00149E  1631               	andwf	(___flmul@prod+3)^0,f,c
  7434  0014A0  A02D               	btfss	___flmul@bexp^0,0,c
  7435  0014A2  EF55  F00A         	goto	u2311
  7436  0014A6  EF58  F00A         	goto	u2310
  7437  0014AA                     u2311:
  7438  0014AA  FFFF               	dw	65535	; assembler added errata NOP
  7439  0014AC  EF5A  F00A         	goto	l2548
  7440  0014B0                     u2310:
  7441  0014B0  FFFF               	dw	65535	; assembler added errata NOP
  7442  0014B2  8E30               	bsf	(___flmul@prod+2)^0,7,c
  7443  0014B4                     l2548:
  7444  0014B4  FFFF               	dw	65535	; assembler added errata NOP
  7445  0014B6  90D8               	bcf	status,0,c
  7446  0014B8  302D               	rrcf	___flmul@bexp^0,w,c
  7447  0014BA  6E31               	movwf	(___flmul@prod+3)^0,c
  7448  0014BC                     l2550:
  7449  0014BC  FFFF               	dw	65535	; assembler added errata NOP
  7450  0014BE  5027               	movf	___flmul@sign^0,w,c
  7451  0014C0  1231               	iorwf	(___flmul@prod+3)^0,f,c
  7452  0014C2  C02E  F01B         	movff	___flmul@prod,?___flmul
  7453  0014C6  C02F  F01C         	movff	___flmul@prod+1,?___flmul+1
  7454  0014CA  C030  F01D         	movff	___flmul@prod+2,?___flmul+2
  7455  0014CE  C031  F01E         	movff	___flmul@prod+3,?___flmul+3
  7456  0014D2                     l1021:
  7457  0014D2  FFFF               	dw	65535	; assembler added errata NOP
  7458  0014D4  0012               	return		;funcret
  7459  0014D6  FFFF               	dw	65535	; errata NOP
  7460  0014D8                     __end_of___flmul:
  7461                           	callstack 0
  7462                           
  7463 ;; *************** function _configure_ad_conversion_tank *****************
  7464 ;; Defined at:
  7465 ;;		line 19 in file "oven.c"
  7466 ;; Parameters:    Size  Location     Type
  7467 ;;		None
  7468 ;; Auto vars:     Size  Location     Type
  7469 ;;		None
  7470 ;; Return value:  Size  Location     Type
  7471 ;;                  1    wreg      void 
  7472 ;; Registers used:
  7473 ;;		wreg, status,2
  7474 ;; Tracked objects:
  7475 ;;		On entry : 0/0
  7476 ;;		On exit  : 0/0
  7477 ;;		Unchanged: 0/0
  7478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7479 ;;      Params:         0       0       0       0       0       0       0
  7480 ;;      Locals:         0       0       0       0       0       0       0
  7481 ;;      Temps:          0       0       0       0       0       0       0
  7482 ;;      Totals:         0       0       0       0       0       0       0
  7483 ;;Total ram usage:        0 bytes
  7484 ;; Hardware stack levels used:    1
  7485 ;; Hardware stack levels required when called:    1
  7486 ;; This function calls:
  7487 ;;		Nothing
  7488 ;; This function is called by:
  7489 ;;		_main
  7490 ;; This function uses a non-reentrant model
  7491 ;;
  7492                           
  7493                           	psect	text29
  7494  00283A                     __ptext29:
  7495                           	callstack 0
  7496  00283A                     _configure_ad_conversion_tank:
  7497                           	callstack 0
  7498  00283A  FFFF               	dw	65535	; assembler added errata NOP
  7499  00283C                     
  7500                           ;oven.c: 20:     ADCON0 = 0;
  7501  00283C  0E00               	movlw	0
  7502  00283E  6EC2               	movwf	194,c	;volatile
  7503  002840                     
  7504                           ;oven.c: 21:     ADCON0bits.CHS0 = 0;
  7505  002840  96C2               	bcf	194,3,c	;volatile
  7506  002842                     
  7507                           ;oven.c: 22:     ADCON0bits.CHS1 = 0;
  7508  002842  98C2               	bcf	194,4,c	;volatile
  7509  002844                     
  7510                           ;oven.c: 23:     ADCON0bits.CHS2 = 0;
  7511  002844  9AC2               	bcf	194,5,c	;volatile
  7512  002846                     
  7513                           ;oven.c: 24:     ADCON0bits.ADON = 1;
  7514  002846  80C2               	bsf	194,0,c	;volatile
  7515                           
  7516                           ;oven.c: 25:     ADRESH = 0;
  7517  002848  0E00               	movlw	0
  7518  00284A  6EC4               	movwf	196,c	;volatile
  7519                           
  7520                           ;oven.c: 26:     ADRESL = 0;
  7521  00284C  0E00               	movlw	0
  7522  00284E  6EC3               	movwf	195,c	;volatile
  7523                           
  7524                           ;oven.c: 27:     ADCON1 = 0;
  7525  002850  0E00               	movlw	0
  7526  002852  6EC1               	movwf	193,c	;volatile
  7527  002854  0012               	return		;funcret
  7528  002856  FFFF               	dw	65535	; errata NOP
  7529  002858                     __end_of_configure_ad_conversion_tank:
  7530                           	callstack 0
  7531                           
  7532 ;; *************** function _configure_ad_conversion_oven *****************
  7533 ;; Defined at:
  7534 ;;		line 8 in file "oven.c"
  7535 ;; Parameters:    Size  Location     Type
  7536 ;;		None
  7537 ;; Auto vars:     Size  Location     Type
  7538 ;;		None
  7539 ;; Return value:  Size  Location     Type
  7540 ;;                  1    wreg      void 
  7541 ;; Registers used:
  7542 ;;		wreg, status,2
  7543 ;; Tracked objects:
  7544 ;;		On entry : 0/0
  7545 ;;		On exit  : 0/0
  7546 ;;		Unchanged: 0/0
  7547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7548 ;;      Params:         0       0       0       0       0       0       0
  7549 ;;      Locals:         0       0       0       0       0       0       0
  7550 ;;      Temps:          0       0       0       0       0       0       0
  7551 ;;      Totals:         0       0       0       0       0       0       0
  7552 ;;Total ram usage:        0 bytes
  7553 ;; Hardware stack levels used:    1
  7554 ;; Hardware stack levels required when called:    1
  7555 ;; This function calls:
  7556 ;;		Nothing
  7557 ;; This function is called by:
  7558 ;;		_main
  7559 ;; This function uses a non-reentrant model
  7560 ;;
  7561                           
  7562                           	psect	text30
  7563  002858                     __ptext30:
  7564                           	callstack 0
  7565  002858                     _configure_ad_conversion_oven:
  7566                           	callstack 0
  7567  002858  FFFF               	dw	65535	; assembler added errata NOP
  7568  00285A                     
  7569                           ;oven.c: 9:     ADCON0 = 0;
  7570  00285A  0E00               	movlw	0
  7571  00285C  6EC2               	movwf	194,c	;volatile
  7572  00285E                     
  7573                           ;oven.c: 10:     ADCON0bits.CHS0 = 0;
  7574  00285E  96C2               	bcf	194,3,c	;volatile
  7575  002860                     
  7576                           ;oven.c: 11:     ADCON0bits.CHS1 = 0;
  7577  002860  98C2               	bcf	194,4,c	;volatile
  7578  002862                     
  7579                           ;oven.c: 12:     ADCON0bits.CHS2 = 1;
  7580  002862  8AC2               	bsf	194,5,c	;volatile
  7581  002864                     
  7582                           ;oven.c: 13:     ADCON0bits.ADON = 1;
  7583  002864  80C2               	bsf	194,0,c	;volatile
  7584                           
  7585                           ;oven.c: 14:     ADRESH = 0;
  7586  002866  0E00               	movlw	0
  7587  002868  6EC4               	movwf	196,c	;volatile
  7588                           
  7589                           ;oven.c: 15:     ADRESL = 0;
  7590  00286A  0E00               	movlw	0
  7591  00286C  6EC3               	movwf	195,c	;volatile
  7592                           
  7593                           ;oven.c: 16:     ADCON1 = 0;
  7594  00286E  0E00               	movlw	0
  7595  002870  6EC1               	movwf	193,c	;volatile
  7596  002872  0012               	return		;funcret
  7597  002874  FFFF               	dw	65535	; errata NOP
  7598  002876                     __end_of_configure_ad_conversion_oven:
  7599                           	callstack 0
  7600                           
  7601 ;; *************** function _check_temperature *****************
  7602 ;; Defined at:
  7603 ;;		line 50 in file "oven.c"
  7604 ;; Parameters:    Size  Location     Type
  7605 ;;  temp_to_be_c    2   75[COMRAM] int 
  7606 ;; Auto vars:     Size  Location     Type
  7607 ;;  grad            4   77[COMRAM] float 
  7608 ;; Return value:  Size  Location     Type
  7609 ;;                  2   75[COMRAM] int 
  7610 ;; Registers used:
  7611 ;;		wreg, status,2, status,0, cstack
  7612 ;; Tracked objects:
  7613 ;;		On entry : 0/0
  7614 ;;		On exit  : 0/0
  7615 ;;		Unchanged: 0/0
  7616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7617 ;;      Params:         2       0       0       0       0       0       0
  7618 ;;      Locals:         4       0       0       0       0       0       0
  7619 ;;      Temps:          0       0       0       0       0       0       0
  7620 ;;      Totals:         6       0       0       0       0       0       0
  7621 ;;Total ram usage:        6 bytes
  7622 ;; Hardware stack levels used:    1
  7623 ;; Hardware stack levels required when called:    2
  7624 ;; This function calls:
  7625 ;;		___awdiv
  7626 ;;		___flge
  7627 ;;		___xxtofl
  7628 ;;		_abs
  7629 ;; This function is called by:
  7630 ;;		_main
  7631 ;; This function uses a non-reentrant model
  7632 ;;
  7633                           
  7634                           	psect	text31
  7635  00204C                     __ptext31:
  7636                           	callstack 0
  7637  00204C                     _check_temperature:
  7638                           	callstack 0
  7639  00204C  FFFF               	dw	65535	; assembler added errata NOP
  7640  00204E                     
  7641                           ;oven.c: 51:     float grad = abs(temp_to_be_checked - (-55))/5;
  7642  00204E  0E00               	movlw	0
  7643  002050  6E08               	movwf	(___awdiv@divisor+1)^0,c
  7644  002052  0E05               	movlw	5
  7645  002054  6E07               	movwf	___awdiv@divisor^0,c
  7646  002056  0E37               	movlw	55
  7647  002058  244C               	addwf	check_temperature@temp_to_be_checked^0,w,c
  7648  00205A  6E01               	movwf	abs@a^0,c
  7649  00205C  0E00               	movlw	0
  7650  00205E  204D               	addwfc	(check_temperature@temp_to_be_checked+1)^0,w,c
  7651  002060  6E02               	movwf	(abs@a+1)^0,c
  7652  002062  ECCA  F012         	call	_abs	;wreg free
  7653  002066  C001  F005         	movff	?_abs,___awdiv@dividend
  7654  00206A  C002  F006         	movff	?_abs+1,___awdiv@dividend+1
  7655  00206E  EC41  F00F         	call	___awdiv	;wreg free
  7656  002072  C005  F00D         	movff	?___awdiv,___xxtofl@val
  7657  002076  C006  F00E         	movff	?___awdiv+1,___xxtofl@val+1
  7658  00207A  0E00               	movlw	0
  7659  00207C  BE0E               	btfsc	(___xxtofl@val+1)^0,7,c
  7660  00207E  0EFF               	movlw	-1
  7661  002080  6E0F               	movwf	(___xxtofl@val+2)^0,c
  7662  002082  6E10               	movwf	(___xxtofl@val+3)^0,c
  7663  002084  0E01               	movlw	1
  7664  002086  EC5F  F00C         	call	___xxtofl
  7665  00208A  C00D  F04E         	movff	?___xxtofl,check_temperature@grad
  7666  00208E  C00E  F04F         	movff	?___xxtofl+1,check_temperature@grad+1
  7667  002092  C00F  F050         	movff	?___xxtofl+2,check_temperature@grad+2
  7668  002096  C010  F051         	movff	?___xxtofl+3,check_temperature@grad+3
  7669                           
  7670                           ;oven.c: 52:     if (grad >= 12 && grad <= 13.5){
  7671  00209A  C04E  F040         	movff	check_temperature@grad,___flge@ff1
  7672  00209E  C04F  F041         	movff	check_temperature@grad+1,___flge@ff1+1
  7673  0020A2  C050  F042         	movff	check_temperature@grad+2,___flge@ff1+2
  7674  0020A6  C051  F043         	movff	check_temperature@grad+3,___flge@ff1+3
  7675  0020AA  0E00               	movlw	0
  7676  0020AC  6E44               	movwf	___flge@ff2^0,c
  7677  0020AE  0E00               	movlw	0
  7678  0020B0  6E45               	movwf	(___flge@ff2+1)^0,c
  7679  0020B2  0E40               	movlw	64
  7680  0020B4  6E46               	movwf	(___flge@ff2+2)^0,c
  7681  0020B6  0E41               	movlw	65
  7682  0020B8  6E47               	movwf	(___flge@ff2+3)^0,c
  7683  0020BA  ECAD  F00E         	call	___flge	;wreg free
  7684  0020BE  A0D8               	btfss	status,0,c
  7685  0020C0  EF64  F010         	goto	u2901
  7686  0020C4  EF67  F010         	goto	u2900
  7687  0020C8                     u2901:
  7688  0020C8  FFFF               	dw	65535	; assembler added errata NOP
  7689  0020CA  EF89  F010         	goto	l2988
  7690  0020CE                     u2900:
  7691  0020CE  FFFF               	dw	65535	; assembler added errata NOP
  7692  0020D0  0E00               	movlw	0
  7693  0020D2  6E40               	movwf	___flge@ff1^0,c
  7694  0020D4  0E00               	movlw	0
  7695  0020D6  6E41               	movwf	(___flge@ff1+1)^0,c
  7696  0020D8  0E58               	movlw	88
  7697  0020DA  6E42               	movwf	(___flge@ff1+2)^0,c
  7698  0020DC  0E41               	movlw	65
  7699  0020DE  6E43               	movwf	(___flge@ff1+3)^0,c
  7700  0020E0  C04E  F044         	movff	check_temperature@grad,___flge@ff2
  7701  0020E4  C04F  F045         	movff	check_temperature@grad+1,___flge@ff2+1
  7702  0020E8  C050  F046         	movff	check_temperature@grad+2,___flge@ff2+2
  7703  0020EC  C051  F047         	movff	check_temperature@grad+3,___flge@ff2+3
  7704  0020F0  ECAD  F00E         	call	___flge	;wreg free
  7705  0020F4  A0D8               	btfss	status,0,c
  7706  0020F6  EF7F  F010         	goto	u2911
  7707  0020FA  EF82  F010         	goto	u2910
  7708  0020FE                     u2911:
  7709  0020FE  FFFF               	dw	65535	; assembler added errata NOP
  7710  002100  EF89  F010         	goto	l2988
  7711  002104                     u2910:
  7712  002104  FFFF               	dw	65535	; assembler added errata NOP
  7713  002106                     
  7714                           ;oven.c: 53:         return 1;
  7715  002106  0E00               	movlw	0
  7716  002108  6E4D               	movwf	(?_check_temperature+1)^0,c
  7717  00210A  0E01               	movlw	1
  7718  00210C  6E4C               	movwf	?_check_temperature^0,c
  7719  00210E  EF8E  F010         	goto	l399
  7720  002112                     l2988:
  7721  002112  FFFF               	dw	65535	; assembler added errata NOP
  7722                           
  7723                           ;oven.c: 55:         return 0;
  7724  002114  0E00               	movlw	0
  7725  002116  6E4D               	movwf	(?_check_temperature+1)^0,c
  7726  002118  0E00               	movlw	0
  7727  00211A  6E4C               	movwf	?_check_temperature^0,c
  7728  00211C                     l399:
  7729  00211C  FFFF               	dw	65535	; assembler added errata NOP
  7730  00211E  0012               	return		;funcret
  7731  002120  FFFF               	dw	65535	; errata NOP
  7732  002122                     __end_of_check_temperature:
  7733                           	callstack 0
  7734                           
  7735 ;; *************** function _abs *****************
  7736 ;; Defined at:
  7737 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
  7738 ;; Parameters:    Size  Location     Type
  7739 ;;  a               2    0[COMRAM] int 
  7740 ;; Auto vars:     Size  Location     Type
  7741 ;;		None
  7742 ;; Return value:  Size  Location     Type
  7743 ;;                  2    0[COMRAM] int 
  7744 ;; Registers used:
  7745 ;;		wreg, status,2, status,0
  7746 ;; Tracked objects:
  7747 ;;		On entry : 0/0
  7748 ;;		On exit  : 0/0
  7749 ;;		Unchanged: 0/0
  7750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7751 ;;      Params:         2       0       0       0       0       0       0
  7752 ;;      Locals:         0       0       0       0       0       0       0
  7753 ;;      Temps:          2       0       0       0       0       0       0
  7754 ;;      Totals:         4       0       0       0       0       0       0
  7755 ;;Total ram usage:        4 bytes
  7756 ;; Hardware stack levels used:    1
  7757 ;; Hardware stack levels required when called:    1
  7758 ;; This function calls:
  7759 ;;		Nothing
  7760 ;; This function is called by:
  7761 ;;		_check_temperature
  7762 ;; This function uses a non-reentrant model
  7763 ;;
  7764                           
  7765                           	psect	text32
  7766  002594                     __ptext32:
  7767                           	callstack 0
  7768  002594                     _abs:
  7769                           	callstack 0
  7770  002594  FFFF               	dw	65535	; assembler added errata NOP
  7771  002596  BE02               	btfsc	(abs@a+1)^0,7,c
  7772  002598  EFD9  F012         	goto	u2680
  7773  00259C  5002               	movf	(abs@a+1)^0,w,c
  7774  00259E  E106               	bnz	u2681
  7775  0025A0  0401               	decf	abs@a^0,w,c
  7776  0025A2  B0D8               	btfsc	status,0,c
  7777  0025A4  EFD6  F012         	goto	u2681
  7778  0025A8  EFD9  F012         	goto	u2680
  7779  0025AC                     u2681:
  7780  0025AC  FFFF               	dw	65535	; assembler added errata NOP
  7781  0025AE  EFE8  F012         	goto	l1078
  7782  0025B2                     u2680:
  7783  0025B2  FFFF               	dw	65535	; assembler added errata NOP
  7784  0025B4  C001  F003         	movff	abs@a,??_abs
  7785  0025B8  C002  F004         	movff	abs@a+1,??_abs+1
  7786  0025BC  1E03               	comf	??_abs^0,f,c
  7787  0025BE  1E04               	comf	(??_abs+1)^0,f,c
  7788  0025C0  4A03               	infsnz	??_abs^0,f,c
  7789  0025C2  2A04               	incf	(??_abs+1)^0,f,c
  7790  0025C4  C003  F001         	movff	??_abs,?_abs
  7791  0025C8  C004  F002         	movff	??_abs+1,?_abs+1
  7792  0025CC  EFED  F012         	goto	l1081
  7793  0025D0                     l1078:
  7794  0025D0  FFFF               	dw	65535	; assembler added errata NOP
  7795  0025D2  C001  F001         	movff	abs@a,?_abs
  7796  0025D6  C002  F002         	movff	abs@a+1,?_abs+1
  7797  0025DA                     l1081:
  7798  0025DA  FFFF               	dw	65535	; assembler added errata NOP
  7799  0025DC  0012               	return		;funcret
  7800  0025DE  FFFF               	dw	65535	; errata NOP
  7801  0025E0                     __end_of_abs:
  7802                           	callstack 0
  7803                           
  7804 ;; *************** function ___xxtofl *****************
  7805 ;; Defined at:
  7806 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
  7807 ;; Parameters:    Size  Location     Type
  7808 ;;  sign            1    wreg     unsigned char 
  7809 ;;  val             4   12[COMRAM] long 
  7810 ;; Auto vars:     Size  Location     Type
  7811 ;;  sign            1   20[COMRAM] unsigned char 
  7812 ;;  arg             4   22[COMRAM] unsigned long 
  7813 ;;  exp             1   21[COMRAM] unsigned char 
  7814 ;; Return value:  Size  Location     Type
  7815 ;;                  4   12[COMRAM] unsigned char 
  7816 ;; Registers used:
  7817 ;;		wreg, status,2, status,0
  7818 ;; Tracked objects:
  7819 ;;		On entry : 0/0
  7820 ;;		On exit  : 0/0
  7821 ;;		Unchanged: 0/0
  7822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7823 ;;      Params:         4       0       0       0       0       0       0
  7824 ;;      Locals:         6       0       0       0       0       0       0
  7825 ;;      Temps:          4       0       0       0       0       0       0
  7826 ;;      Totals:        14       0       0       0       0       0       0
  7827 ;;Total ram usage:       14 bytes
  7828 ;; Hardware stack levels used:    1
  7829 ;; Hardware stack levels required when called:    1
  7830 ;; This function calls:
  7831 ;;		Nothing
  7832 ;; This function is called by:
  7833 ;;		_main
  7834 ;;		_get_temperature
  7835 ;;		_get_liters
  7836 ;;		_check_temperature
  7837 ;; This function uses a non-reentrant model
  7838 ;;
  7839                           
  7840                           	psect	text33
  7841  0018BE                     __ptext33:
  7842                           	callstack 0
  7843  0018BE                     ___xxtofl:
  7844                           	callstack 0
  7845  0018BE  FFFF               	dw	65535	; assembler added errata NOP
  7846                           
  7847                           ;incstack = 0
  7848                           ;___xxtofl@sign stored from wreg
  7849  0018C0  6E15               	movwf	___xxtofl@sign^0,c
  7850  0018C2  5015               	movf	___xxtofl@sign^0,w,c
  7851  0018C4  B4D8               	btfsc	status,2,c
  7852  0018C6  EF67  F00C         	goto	u2451
  7853  0018CA  EF6A  F00C         	goto	u2450
  7854  0018CE                     u2451:
  7855  0018CE  FFFF               	dw	65535	; assembler added errata NOP
  7856  0018D0  EF8F  F00C         	goto	l1058
  7857  0018D4                     u2450:
  7858  0018D4  FFFF               	dw	65535	; assembler added errata NOP
  7859  0018D6  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
  7860  0018D8  EF73  F00C         	goto	u2460
  7861  0018DC  EF70  F00C         	goto	u2461
  7862  0018E0                     u2461:
  7863  0018E0  FFFF               	dw	65535	; assembler added errata NOP
  7864  0018E2  EF8F  F00C         	goto	l1058
  7865  0018E6                     u2460:
  7866  0018E6  FFFF               	dw	65535	; assembler added errata NOP
  7867  0018E8  C00D  F011         	movff	___xxtofl@val,??___xxtofl
  7868  0018EC  C00E  F012         	movff	___xxtofl@val+1,??___xxtofl+1
  7869  0018F0  C00F  F013         	movff	___xxtofl@val+2,??___xxtofl+2
  7870  0018F4  C010  F014         	movff	___xxtofl@val+3,??___xxtofl+3
  7871  0018F8  1E11               	comf	??___xxtofl^0,f,c
  7872  0018FA  1E12               	comf	(??___xxtofl+1)^0,f,c
  7873  0018FC  1E13               	comf	(??___xxtofl+2)^0,f,c
  7874  0018FE  1E14               	comf	(??___xxtofl+3)^0,f,c
  7875  001900  2A11               	incf	??___xxtofl^0,f,c
  7876  001902  0E00               	movlw	0
  7877  001904  2212               	addwfc	(??___xxtofl+1)^0,f,c
  7878  001906  2213               	addwfc	(??___xxtofl+2)^0,f,c
  7879  001908  2214               	addwfc	(??___xxtofl+3)^0,f,c
  7880  00190A  C011  F017         	movff	??___xxtofl,___xxtofl@arg
  7881  00190E  C012  F018         	movff	??___xxtofl+1,___xxtofl@arg+1
  7882  001912  C013  F019         	movff	??___xxtofl+2,___xxtofl@arg+2
  7883  001916  C014  F01A         	movff	??___xxtofl+3,___xxtofl@arg+3
  7884  00191A  EF98  F00C         	goto	l2642
  7885  00191E                     l1058:
  7886  00191E  FFFF               	dw	65535	; assembler added errata NOP
  7887  001920  C00D  F017         	movff	___xxtofl@val,___xxtofl@arg
  7888  001924  C00E  F018         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7889  001928  C00F  F019         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7890  00192C  C010  F01A         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7891  001930                     l2642:
  7892  001930  FFFF               	dw	65535	; assembler added errata NOP
  7893  001932  500D               	movf	___xxtofl@val^0,w,c
  7894  001934  100E               	iorwf	(___xxtofl@val+1)^0,w,c
  7895  001936  100F               	iorwf	(___xxtofl@val+2)^0,w,c
  7896  001938  1010               	iorwf	(___xxtofl@val+3)^0,w,c
  7897  00193A  A4D8               	btfss	status,2,c
  7898  00193C  EFA2  F00C         	goto	u2471
  7899  001940  EFA5  F00C         	goto	u2470
  7900  001944                     u2471:
  7901  001944  FFFF               	dw	65535	; assembler added errata NOP
  7902  001946  EFB0  F00C         	goto	l2648
  7903  00194A                     u2470:
  7904  00194A  FFFF               	dw	65535	; assembler added errata NOP
  7905  00194C  0E00               	movlw	0
  7906  00194E  6E0D               	movwf	?___xxtofl^0,c
  7907  001950  0E00               	movlw	0
  7908  001952  6E0E               	movwf	(?___xxtofl+1)^0,c
  7909  001954  0E00               	movlw	0
  7910  001956  6E0F               	movwf	(?___xxtofl+2)^0,c
  7911  001958  0E00               	movlw	0
  7912  00195A  6E10               	movwf	(?___xxtofl+3)^0,c
  7913  00195C  EF58  F00D         	goto	l1061
  7914  001960                     l2648:
  7915  001960  FFFF               	dw	65535	; assembler added errata NOP
  7916  001962  0E96               	movlw	150
  7917  001964  6E16               	movwf	___xxtofl@exp^0,c
  7918  001966  EFBC  F00C         	goto	l2652
  7919  00196A                     l2650:
  7920  00196A  FFFF               	dw	65535	; assembler added errata NOP
  7921  00196C  2A16               	incf	___xxtofl@exp^0,f,c
  7922  00196E  90D8               	bcf	status,0,c
  7923  001970  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  7924  001972  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  7925  001974  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  7926  001976  3217               	rrcf	___xxtofl@arg^0,f,c
  7927  001978                     l2652:
  7928  001978  FFFF               	dw	65535	; assembler added errata NOP
  7929  00197A  0E00               	movlw	0
  7930  00197C  1417               	andwf	___xxtofl@arg^0,w,c
  7931  00197E  6E11               	movwf	??___xxtofl^0,c
  7932  001980  0E00               	movlw	0
  7933  001982  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  7934  001984  6E12               	movwf	(??___xxtofl+1)^0,c
  7935  001986  0E00               	movlw	0
  7936  001988  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  7937  00198A  6E13               	movwf	(??___xxtofl+2)^0,c
  7938  00198C  0EFE               	movlw	254
  7939  00198E  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  7940  001990  6E14               	movwf	(??___xxtofl+3)^0,c
  7941  001992  5011               	movf	??___xxtofl^0,w,c
  7942  001994  1012               	iorwf	(??___xxtofl+1)^0,w,c
  7943  001996  1013               	iorwf	(??___xxtofl+2)^0,w,c
  7944  001998  1014               	iorwf	(??___xxtofl+3)^0,w,c
  7945  00199A  A4D8               	btfss	status,2,c
  7946  00199C  EFD2  F00C         	goto	u2481
  7947  0019A0  EFD5  F00C         	goto	u2480
  7948  0019A4                     u2481:
  7949  0019A4  FFFF               	dw	65535	; assembler added errata NOP
  7950  0019A6  EFB5  F00C         	goto	l2650
  7951  0019AA                     u2480:
  7952  0019AA  FFFF               	dw	65535	; assembler added errata NOP
  7953  0019AC  EFE5  F00C         	goto	l1065
  7954  0019B0                     l2654:
  7955  0019B0  FFFF               	dw	65535	; assembler added errata NOP
  7956  0019B2  2A16               	incf	___xxtofl@exp^0,f,c
  7957  0019B4  0E01               	movlw	1
  7958  0019B6  2617               	addwf	___xxtofl@arg^0,f,c
  7959  0019B8  0E00               	movlw	0
  7960  0019BA  2218               	addwfc	(___xxtofl@arg+1)^0,f,c
  7961  0019BC  2219               	addwfc	(___xxtofl@arg+2)^0,f,c
  7962  0019BE  221A               	addwfc	(___xxtofl@arg+3)^0,f,c
  7963  0019C0  90D8               	bcf	status,0,c
  7964  0019C2  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  7965  0019C4  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  7966  0019C6  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  7967  0019C8  3217               	rrcf	___xxtofl@arg^0,f,c
  7968  0019CA                     l1065:
  7969  0019CA  FFFF               	dw	65535	; assembler added errata NOP
  7970  0019CC  0E00               	movlw	0
  7971  0019CE  1417               	andwf	___xxtofl@arg^0,w,c
  7972  0019D0  6E11               	movwf	??___xxtofl^0,c
  7973  0019D2  0E00               	movlw	0
  7974  0019D4  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  7975  0019D6  6E12               	movwf	(??___xxtofl+1)^0,c
  7976  0019D8  0E00               	movlw	0
  7977  0019DA  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  7978  0019DC  6E13               	movwf	(??___xxtofl+2)^0,c
  7979  0019DE  0EFF               	movlw	255
  7980  0019E0  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  7981  0019E2  6E14               	movwf	(??___xxtofl+3)^0,c
  7982  0019E4  5011               	movf	??___xxtofl^0,w,c
  7983  0019E6  1012               	iorwf	(??___xxtofl+1)^0,w,c
  7984  0019E8  1013               	iorwf	(??___xxtofl+2)^0,w,c
  7985  0019EA  1014               	iorwf	(??___xxtofl+3)^0,w,c
  7986  0019EC  A4D8               	btfss	status,2,c
  7987  0019EE  EFFB  F00C         	goto	u2491
  7988  0019F2  EFFE  F00C         	goto	u2490
  7989  0019F6                     u2491:
  7990  0019F6  FFFF               	dw	65535	; assembler added errata NOP
  7991  0019F8  EFD8  F00C         	goto	l2654
  7992  0019FC                     u2490:
  7993  0019FC  FFFF               	dw	65535	; assembler added errata NOP
  7994  0019FE  EF08  F00D         	goto	l2662
  7995  001A02                     l2660:
  7996  001A02  FFFF               	dw	65535	; assembler added errata NOP
  7997  001A04  0616               	decf	___xxtofl@exp^0,f,c
  7998  001A06  90D8               	bcf	status,0,c
  7999  001A08  3617               	rlcf	___xxtofl@arg^0,f,c
  8000  001A0A  3618               	rlcf	(___xxtofl@arg+1)^0,f,c
  8001  001A0C  3619               	rlcf	(___xxtofl@arg+2)^0,f,c
  8002  001A0E  361A               	rlcf	(___xxtofl@arg+3)^0,f,c
  8003  001A10                     l2662:
  8004  001A10  FFFF               	dw	65535	; assembler added errata NOP
  8005  001A12  BE19               	btfsc	(___xxtofl@arg+2)^0,7,c
  8006  001A14  EF0E  F00D         	goto	u2501
  8007  001A18  EF11  F00D         	goto	u2500
  8008  001A1C                     u2501:
  8009  001A1C  FFFF               	dw	65535	; assembler added errata NOP
  8010  001A1E  EF1B  F00D         	goto	l1072
  8011  001A22                     u2500:
  8012  001A22  FFFF               	dw	65535	; assembler added errata NOP
  8013  001A24  0E02               	movlw	2
  8014  001A26  6016               	cpfslt	___xxtofl@exp^0,c
  8015  001A28  EF18  F00D         	goto	u2511
  8016  001A2C  EF1B  F00D         	goto	u2510
  8017  001A30                     u2511:
  8018  001A30  FFFF               	dw	65535	; assembler added errata NOP
  8019  001A32  EF01  F00D         	goto	l2660
  8020  001A36                     u2510:
  8021  001A36                     l1072:
  8022  001A36  FFFF               	dw	65535	; assembler added errata NOP
  8023  001A38  B016               	btfsc	___xxtofl@exp^0,0,c
  8024  001A3A  EF21  F00D         	goto	u2521
  8025  001A3E  EF24  F00D         	goto	u2520
  8026  001A42                     u2521:
  8027  001A42  FFFF               	dw	65535	; assembler added errata NOP
  8028  001A44  EF26  F00D         	goto	l2668
  8029  001A48                     u2520:
  8030  001A48  FFFF               	dw	65535	; assembler added errata NOP
  8031  001A4A  9E19               	bcf	(___xxtofl@arg+2)^0,7,c
  8032  001A4C                     l2668:
  8033  001A4C  FFFF               	dw	65535	; assembler added errata NOP
  8034  001A4E  90D8               	bcf	status,0,c
  8035  001A50  3216               	rrcf	___xxtofl@exp^0,f,c
  8036  001A52  C016  F011         	movff	___xxtofl@exp,??___xxtofl
  8037  001A56  6A12               	clrf	(??___xxtofl+1)^0,c
  8038  001A58  6A13               	clrf	(??___xxtofl+2)^0,c
  8039  001A5A  6A14               	clrf	(??___xxtofl+3)^0,c
  8040  001A5C  C011  F014         	movff	??___xxtofl,??___xxtofl+3
  8041  001A60  6A13               	clrf	(??___xxtofl+2)^0,c
  8042  001A62  6A12               	clrf	(??___xxtofl+1)^0,c
  8043  001A64  6A11               	clrf	??___xxtofl^0,c
  8044  001A66  5011               	movf	??___xxtofl^0,w,c
  8045  001A68  1217               	iorwf	___xxtofl@arg^0,f,c
  8046  001A6A  5012               	movf	(??___xxtofl+1)^0,w,c
  8047  001A6C  1218               	iorwf	(___xxtofl@arg+1)^0,f,c
  8048  001A6E  5013               	movf	(??___xxtofl+2)^0,w,c
  8049  001A70  1219               	iorwf	(___xxtofl@arg+2)^0,f,c
  8050  001A72  5014               	movf	(??___xxtofl+3)^0,w,c
  8051  001A74  121A               	iorwf	(___xxtofl@arg+3)^0,f,c
  8052  001A76  5015               	movf	___xxtofl@sign^0,w,c
  8053  001A78  B4D8               	btfsc	status,2,c
  8054  001A7A  EF41  F00D         	goto	u2531
  8055  001A7E  EF44  F00D         	goto	u2530
  8056  001A82                     u2531:
  8057  001A82  FFFF               	dw	65535	; assembler added errata NOP
  8058  001A84  EF4F  F00D         	goto	l2678
  8059  001A88                     u2530:
  8060  001A88  FFFF               	dw	65535	; assembler added errata NOP
  8061  001A8A  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
  8062  001A8C  EF4D  F00D         	goto	u2540
  8063  001A90  EF4A  F00D         	goto	u2541
  8064  001A94                     u2541:
  8065  001A94  FFFF               	dw	65535	; assembler added errata NOP
  8066  001A96  EF4F  F00D         	goto	l2678
  8067  001A9A                     u2540:
  8068  001A9A  FFFF               	dw	65535	; assembler added errata NOP
  8069  001A9C  8E1A               	bsf	(___xxtofl@arg+3)^0,7,c
  8070  001A9E                     l2678:
  8071  001A9E  FFFF               	dw	65535	; assembler added errata NOP
  8072  001AA0  C017  F00D         	movff	___xxtofl@arg,?___xxtofl
  8073  001AA4  C018  F00E         	movff	___xxtofl@arg+1,?___xxtofl+1
  8074  001AA8  C019  F00F         	movff	___xxtofl@arg+2,?___xxtofl+2
  8075  001AAC  C01A  F010         	movff	___xxtofl@arg+3,?___xxtofl+3
  8076  001AB0                     l1061:
  8077  001AB0  FFFF               	dw	65535	; assembler added errata NOP
  8078  001AB2  0012               	return		;funcret
  8079  001AB4  FFFF               	dw	65535	; errata NOP
  8080  001AB6                     __end_of___xxtofl:
  8081                           	callstack 0
  8082                           
  8083 ;; *************** function ___flge *****************
  8084 ;; Defined at:
  8085 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
  8086 ;; Parameters:    Size  Location     Type
  8087 ;;  ff1             4   63[COMRAM] unsigned char 
  8088 ;;  ff2             4   67[COMRAM] unsigned char 
  8089 ;; Auto vars:     Size  Location     Type
  8090 ;;		None
  8091 ;; Return value:  Size  Location     Type
  8092 ;;		None               void
  8093 ;; Registers used:
  8094 ;;		wreg, status,2, status,0
  8095 ;; Tracked objects:
  8096 ;;		On entry : 0/0
  8097 ;;		On exit  : 0/0
  8098 ;;		Unchanged: 0/0
  8099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8100 ;;      Params:         8       0       0       0       0       0       0
  8101 ;;      Locals:         0       0       0       0       0       0       0
  8102 ;;      Temps:          4       0       0       0       0       0       0
  8103 ;;      Totals:        12       0       0       0       0       0       0
  8104 ;;Total ram usage:       12 bytes
  8105 ;; Hardware stack levels used:    1
  8106 ;; Hardware stack levels required when called:    1
  8107 ;; This function calls:
  8108 ;;		Nothing
  8109 ;; This function is called by:
  8110 ;;		_main
  8111 ;;		_check_temperature
  8112 ;;		_roundf
  8113 ;; This function uses a non-reentrant model
  8114 ;;
  8115                           
  8116                           	psect	text34
  8117  001D5A                     __ptext34:
  8118                           	callstack 0
  8119  001D5A                     ___flge:
  8120                           	callstack 0
  8121  001D5A  FFFF               	dw	65535	; assembler added errata NOP
  8122  001D5C  0E00               	movlw	0
  8123  001D5E  1440               	andwf	___flge@ff1^0,w,c
  8124  001D60  6E48               	movwf	??___flge^0,c
  8125  001D62  0E00               	movlw	0
  8126  001D64  1441               	andwf	(___flge@ff1+1)^0,w,c
  8127  001D66  6E49               	movwf	(??___flge+1)^0,c
  8128  001D68  0E80               	movlw	128
  8129  001D6A  1442               	andwf	(___flge@ff1+2)^0,w,c
  8130  001D6C  6E4A               	movwf	(??___flge+2)^0,c
  8131  001D6E  0E7F               	movlw	127
  8132  001D70  1443               	andwf	(___flge@ff1+3)^0,w,c
  8133  001D72  6E4B               	movwf	(??___flge+3)^0,c
  8134  001D74  5048               	movf	??___flge^0,w,c
  8135  001D76  1049               	iorwf	(??___flge+1)^0,w,c
  8136  001D78  104A               	iorwf	(??___flge+2)^0,w,c
  8137  001D7A  104B               	iorwf	(??___flge+3)^0,w,c
  8138  001D7C  A4D8               	btfss	status,2,c
  8139  001D7E  EFC3  F00E         	goto	u2321
  8140  001D82  EFC6  F00E         	goto	u2320
  8141  001D86                     u2321:
  8142  001D86  FFFF               	dw	65535	; assembler added errata NOP
  8143  001D88  EFCF  F00E         	goto	l2566
  8144  001D8C                     u2320:
  8145  001D8C  FFFF               	dw	65535	; assembler added errata NOP
  8146  001D8E  0E00               	movlw	0
  8147  001D90  6E40               	movwf	___flge@ff1^0,c
  8148  001D92  0E00               	movlw	0
  8149  001D94  6E41               	movwf	(___flge@ff1+1)^0,c
  8150  001D96  0E00               	movlw	0
  8151  001D98  6E42               	movwf	(___flge@ff1+2)^0,c
  8152  001D9A  0E00               	movlw	0
  8153  001D9C  6E43               	movwf	(___flge@ff1+3)^0,c
  8154  001D9E                     l2566:
  8155  001D9E  FFFF               	dw	65535	; assembler added errata NOP
  8156  001DA0  0E00               	movlw	0
  8157  001DA2  1444               	andwf	___flge@ff2^0,w,c
  8158  001DA4  6E48               	movwf	??___flge^0,c
  8159  001DA6  0E00               	movlw	0
  8160  001DA8  1445               	andwf	(___flge@ff2+1)^0,w,c
  8161  001DAA  6E49               	movwf	(??___flge+1)^0,c
  8162  001DAC  0E80               	movlw	128
  8163  001DAE  1446               	andwf	(___flge@ff2+2)^0,w,c
  8164  001DB0  6E4A               	movwf	(??___flge+2)^0,c
  8165  001DB2  0E7F               	movlw	127
  8166  001DB4  1447               	andwf	(___flge@ff2+3)^0,w,c
  8167  001DB6  6E4B               	movwf	(??___flge+3)^0,c
  8168  001DB8  5048               	movf	??___flge^0,w,c
  8169  001DBA  1049               	iorwf	(??___flge+1)^0,w,c
  8170  001DBC  104A               	iorwf	(??___flge+2)^0,w,c
  8171  001DBE  104B               	iorwf	(??___flge+3)^0,w,c
  8172  001DC0  A4D8               	btfss	status,2,c
  8173  001DC2  EFE5  F00E         	goto	u2331
  8174  001DC6  EFE8  F00E         	goto	u2330
  8175  001DCA                     u2331:
  8176  001DCA  FFFF               	dw	65535	; assembler added errata NOP
  8177  001DCC  EFF1  F00E         	goto	l2570
  8178  001DD0                     u2330:
  8179  001DD0  FFFF               	dw	65535	; assembler added errata NOP
  8180  001DD2  0E00               	movlw	0
  8181  001DD4  6E44               	movwf	___flge@ff2^0,c
  8182  001DD6  0E00               	movlw	0
  8183  001DD8  6E45               	movwf	(___flge@ff2+1)^0,c
  8184  001DDA  0E00               	movlw	0
  8185  001DDC  6E46               	movwf	(___flge@ff2+2)^0,c
  8186  001DDE  0E00               	movlw	0
  8187  001DE0  6E47               	movwf	(___flge@ff2+3)^0,c
  8188  001DE2                     l2570:
  8189  001DE2  FFFF               	dw	65535	; assembler added errata NOP
  8190  001DE4  AE43               	btfss	(___flge@ff1+3)^0,7,c
  8191  001DE6  EFF7  F00E         	goto	u2341
  8192  001DEA  EFFA  F00E         	goto	u2340
  8193  001DEE                     u2341:
  8194  001DEE  FFFF               	dw	65535	; assembler added errata NOP
  8195  001DF0  EF04  F00F         	goto	l2574
  8196  001DF4                     u2340:
  8197  001DF4  FFFF               	dw	65535	; assembler added errata NOP
  8198  001DF6  6C40               	negf	___flge@ff1^0,c
  8199  001DF8  1E41               	comf	(___flge@ff1+1)^0,f,c
  8200  001DFA  B0D8               	btfsc	status,0,c
  8201  001DFC  2A41               	incf	(___flge@ff1+1)^0,f,c
  8202  001DFE  1E42               	comf	(___flge@ff1+2)^0,f,c
  8203  001E00  B0D8               	btfsc	status,0,c
  8204  001E02  2A42               	incf	(___flge@ff1+2)^0,f,c
  8205  001E04  0E80               	movlw	128
  8206  001E06  5643               	subfwb	(___flge@ff1+3)^0,f,c
  8207  001E08                     l2574:
  8208  001E08  FFFF               	dw	65535	; assembler added errata NOP
  8209  001E0A  AE47               	btfss	(___flge@ff2+3)^0,7,c
  8210  001E0C  EF0A  F00F         	goto	u2351
  8211  001E10  EF0D  F00F         	goto	u2350
  8212  001E14                     u2351:
  8213  001E14  FFFF               	dw	65535	; assembler added errata NOP
  8214  001E16  EF17  F00F         	goto	l668
  8215  001E1A                     u2350:
  8216  001E1A  FFFF               	dw	65535	; assembler added errata NOP
  8217  001E1C  6C44               	negf	___flge@ff2^0,c
  8218  001E1E  1E45               	comf	(___flge@ff2+1)^0,f,c
  8219  001E20  B0D8               	btfsc	status,0,c
  8220  001E22  2A45               	incf	(___flge@ff2+1)^0,f,c
  8221  001E24  1E46               	comf	(___flge@ff2+2)^0,f,c
  8222  001E26  B0D8               	btfsc	status,0,c
  8223  001E28  2A46               	incf	(___flge@ff2+2)^0,f,c
  8224  001E2A  0E80               	movlw	128
  8225  001E2C  5647               	subfwb	(___flge@ff2+3)^0,f,c
  8226  001E2E                     l668:
  8227  001E2E  FFFF               	dw	65535	; assembler added errata NOP
  8228  001E30  0E00               	movlw	0
  8229  001E32  1A40               	xorwf	___flge@ff1^0,f,c
  8230  001E34  0E00               	movlw	0
  8231  001E36  1A41               	xorwf	(___flge@ff1+1)^0,f,c
  8232  001E38  0E00               	movlw	0
  8233  001E3A  1A42               	xorwf	(___flge@ff1+2)^0,f,c
  8234  001E3C  0E80               	movlw	128
  8235  001E3E  1A43               	xorwf	(___flge@ff1+3)^0,f,c
  8236  001E40  0E00               	movlw	0
  8237  001E42  1A44               	xorwf	___flge@ff2^0,f,c
  8238  001E44  0E00               	movlw	0
  8239  001E46  1A45               	xorwf	(___flge@ff2+1)^0,f,c
  8240  001E48  0E00               	movlw	0
  8241  001E4A  1A46               	xorwf	(___flge@ff2+2)^0,f,c
  8242  001E4C  0E80               	movlw	128
  8243  001E4E  1A47               	xorwf	(___flge@ff2+3)^0,f,c
  8244  001E50  5044               	movf	___flge@ff2^0,w,c
  8245  001E52  5C40               	subwf	___flge@ff1^0,w,c
  8246  001E54  5045               	movf	(___flge@ff2+1)^0,w,c
  8247  001E56  5841               	subwfb	(___flge@ff1+1)^0,w,c
  8248  001E58  5046               	movf	(___flge@ff2+2)^0,w,c
  8249  001E5A  5842               	subwfb	(___flge@ff1+2)^0,w,c
  8250  001E5C  5047               	movf	(___flge@ff2+3)^0,w,c
  8251  001E5E  5843               	subwfb	(___flge@ff1+3)^0,w,c
  8252  001E60  B0D8               	btfsc	status,0,c
  8253  001E62  EF35  F00F         	goto	u2361
  8254  001E66  EF38  F00F         	goto	u2360
  8255  001E6A                     u2361:
  8256  001E6A  FFFF               	dw	65535	; assembler added errata NOP
  8257  001E6C  EF3C  F00F         	goto	l2580
  8258  001E70                     u2360:
  8259  001E70  FFFF               	dw	65535	; assembler added errata NOP
  8260  001E72  90D8               	bcf	status,0,c
  8261  001E74  EF3E  F00F         	goto	l673
  8262  001E78                     l2580:
  8263  001E78  FFFF               	dw	65535	; assembler added errata NOP
  8264  001E7A  80D8               	bsf	status,0,c
  8265  001E7C                     l673:
  8266  001E7C  FFFF               	dw	65535	; assembler added errata NOP
  8267  001E7E  0012               	return		;funcret
  8268  001E80  FFFF               	dw	65535	; errata NOP
  8269  001E82                     __end_of___flge:
  8270                           	callstack 0
  8271                           
  8272 ;; *************** function ___awdiv *****************
  8273 ;; Defined at:
  8274 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  8275 ;; Parameters:    Size  Location     Type
  8276 ;;  dividend        2    4[COMRAM] int 
  8277 ;;  divisor         2    6[COMRAM] int 
  8278 ;; Auto vars:     Size  Location     Type
  8279 ;;  quotient        2   10[COMRAM] int 
  8280 ;;  sign            1    9[COMRAM] unsigned char 
  8281 ;;  counter         1    8[COMRAM] unsigned char 
  8282 ;; Return value:  Size  Location     Type
  8283 ;;                  2    4[COMRAM] int 
  8284 ;; Registers used:
  8285 ;;		wreg, status,2, status,0
  8286 ;; Tracked objects:
  8287 ;;		On entry : 0/0
  8288 ;;		On exit  : 0/0
  8289 ;;		Unchanged: 0/0
  8290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8291 ;;      Params:         4       0       0       0       0       0       0
  8292 ;;      Locals:         4       0       0       0       0       0       0
  8293 ;;      Temps:          0       0       0       0       0       0       0
  8294 ;;      Totals:         8       0       0       0       0       0       0
  8295 ;;Total ram usage:        8 bytes
  8296 ;; Hardware stack levels used:    1
  8297 ;; Hardware stack levels required when called:    1
  8298 ;; This function calls:
  8299 ;;		Nothing
  8300 ;; This function is called by:
  8301 ;;		_check_temperature
  8302 ;; This function uses a non-reentrant model
  8303 ;;
  8304                           
  8305                           	psect	text35
  8306  001E82                     __ptext35:
  8307                           	callstack 0
  8308  001E82                     ___awdiv:
  8309                           	callstack 0
  8310  001E82  FFFF               	dw	65535	; assembler added errata NOP
  8311  001E84  0E00               	movlw	0
  8312  001E86  6E0A               	movwf	___awdiv@sign^0,c
  8313  001E88  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  8314  001E8A  EF4C  F00F         	goto	u2690
  8315  001E8E  EF49  F00F         	goto	u2691
  8316  001E92                     u2691:
  8317  001E92  FFFF               	dw	65535	; assembler added errata NOP
  8318  001E94  EF53  F00F         	goto	l2776
  8319  001E98                     u2690:
  8320  001E98  FFFF               	dw	65535	; assembler added errata NOP
  8321  001E9A  6C07               	negf	___awdiv@divisor^0,c
  8322  001E9C  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  8323  001E9E  B0D8               	btfsc	status,0,c
  8324  001EA0  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  8325  001EA2  0E01               	movlw	1
  8326  001EA4  6E0A               	movwf	___awdiv@sign^0,c
  8327  001EA6                     l2776:
  8328  001EA6  FFFF               	dw	65535	; assembler added errata NOP
  8329  001EA8  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  8330  001EAA  EF5C  F00F         	goto	u2700
  8331  001EAE  EF59  F00F         	goto	u2701
  8332  001EB2                     u2701:
  8333  001EB2  FFFF               	dw	65535	; assembler added errata NOP
  8334  001EB4  EF63  F00F         	goto	l2782
  8335  001EB8                     u2700:
  8336  001EB8  FFFF               	dw	65535	; assembler added errata NOP
  8337  001EBA  6C05               	negf	___awdiv@dividend^0,c
  8338  001EBC  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  8339  001EBE  B0D8               	btfsc	status,0,c
  8340  001EC0  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  8341  001EC2  0E01               	movlw	1
  8342  001EC4  1A0A               	xorwf	___awdiv@sign^0,f,c
  8343  001EC6                     l2782:
  8344  001EC6  FFFF               	dw	65535	; assembler added errata NOP
  8345  001EC8  0E00               	movlw	0
  8346  001ECA  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  8347  001ECC  0E00               	movlw	0
  8348  001ECE  6E0B               	movwf	___awdiv@quotient^0,c
  8349  001ED0  5007               	movf	___awdiv@divisor^0,w,c
  8350  001ED2  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  8351  001ED4  B4D8               	btfsc	status,2,c
  8352  001ED6  EF6F  F00F         	goto	u2711
  8353  001EDA  EF72  F00F         	goto	u2710
  8354  001EDE                     u2711:
  8355  001EDE  FFFF               	dw	65535	; assembler added errata NOP
  8356  001EE0  EFA3  F00F         	goto	l2804
  8357  001EE4                     u2710:
  8358  001EE4  FFFF               	dw	65535	; assembler added errata NOP
  8359  001EE6  0E01               	movlw	1
  8360  001EE8  6E09               	movwf	___awdiv@counter^0,c
  8361  001EEA  EF7C  F00F         	goto	l2790
  8362  001EEE                     l2788:
  8363  001EEE  FFFF               	dw	65535	; assembler added errata NOP
  8364  001EF0  90D8               	bcf	status,0,c
  8365  001EF2  3607               	rlcf	___awdiv@divisor^0,f,c
  8366  001EF4  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  8367  001EF6  2A09               	incf	___awdiv@counter^0,f,c
  8368  001EF8                     l2790:
  8369  001EF8  FFFF               	dw	65535	; assembler added errata NOP
  8370  001EFA  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  8371  001EFC  EF82  F00F         	goto	u2721
  8372  001F00  EF85  F00F         	goto	u2720
  8373  001F04                     u2721:
  8374  001F04  FFFF               	dw	65535	; assembler added errata NOP
  8375  001F06  EF77  F00F         	goto	l2788
  8376  001F0A                     u2720:
  8377  001F0A  FFFF               	dw	65535	; assembler added errata NOP
  8378  001F0C                     l2792:
  8379  001F0C  FFFF               	dw	65535	; assembler added errata NOP
  8380  001F0E  90D8               	bcf	status,0,c
  8381  001F10  360B               	rlcf	___awdiv@quotient^0,f,c
  8382  001F12  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  8383  001F14  5007               	movf	___awdiv@divisor^0,w,c
  8384  001F16  5C05               	subwf	___awdiv@dividend^0,w,c
  8385  001F18  5008               	movf	(___awdiv@divisor+1)^0,w,c
  8386  001F1A  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  8387  001F1C  A0D8               	btfss	status,0,c
  8388  001F1E  EF93  F00F         	goto	u2731
  8389  001F22  EF96  F00F         	goto	u2730
  8390  001F26                     u2731:
  8391  001F26  FFFF               	dw	65535	; assembler added errata NOP
  8392  001F28  EF9C  F00F         	goto	l2800
  8393  001F2C                     u2730:
  8394  001F2C  FFFF               	dw	65535	; assembler added errata NOP
  8395  001F2E  5007               	movf	___awdiv@divisor^0,w,c
  8396  001F30  5E05               	subwf	___awdiv@dividend^0,f,c
  8397  001F32  5008               	movf	(___awdiv@divisor+1)^0,w,c
  8398  001F34  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  8399  001F36  800B               	bsf	___awdiv@quotient^0,0,c
  8400  001F38                     l2800:
  8401  001F38  FFFF               	dw	65535	; assembler added errata NOP
  8402  001F3A  90D8               	bcf	status,0,c
  8403  001F3C  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  8404  001F3E  3207               	rrcf	___awdiv@divisor^0,f,c
  8405  001F40  2E09               	decfsz	___awdiv@counter^0,f,c
  8406  001F42  EF86  F00F         	goto	l2792
  8407  001F46                     l2804:
  8408  001F46  FFFF               	dw	65535	; assembler added errata NOP
  8409  001F48  500A               	movf	___awdiv@sign^0,w,c
  8410  001F4A  B4D8               	btfsc	status,2,c
  8411  001F4C  EFAA  F00F         	goto	u2741
  8412  001F50  EFAD  F00F         	goto	u2740
  8413  001F54                     u2741:
  8414  001F54  FFFF               	dw	65535	; assembler added errata NOP
  8415  001F56  EFB2  F00F         	goto	l2808
  8416  001F5A                     u2740:
  8417  001F5A  FFFF               	dw	65535	; assembler added errata NOP
  8418  001F5C  6C0B               	negf	___awdiv@quotient^0,c
  8419  001F5E  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  8420  001F60  B0D8               	btfsc	status,0,c
  8421  001F62  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  8422  001F64                     l2808:
  8423  001F64  FFFF               	dw	65535	; assembler added errata NOP
  8424  001F66  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  8425  001F6A  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  8426  001F6E  0012               	return		;funcret
  8427  001F70  FFFF               	dw	65535	; errata NOP
  8428  001F72                     __end_of___awdiv:
  8429                           	callstack 0
  8430                           
  8431 ;; *************** function _change_direction *****************
  8432 ;; Defined at:
  8433 ;;		line 41 in file "stepper_motor.c"
  8434 ;; Parameters:    Size  Location     Type
  8435 ;;  stepper_moto    2    0[COMRAM] PTR struct .
  8436 ;;		 -> joint_dilutor_stepper(12), end_effector_stepper(12), joint_stepper(12), 
  8437 ;; Auto vars:     Size  Location     Type
  8438 ;;		None
  8439 ;; Return value:  Size  Location     Type
  8440 ;;                  1    wreg      void 
  8441 ;; Registers used:
  8442 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8443 ;; Tracked objects:
  8444 ;;		On entry : 0/0
  8445 ;;		On exit  : 0/0
  8446 ;;		Unchanged: 0/0
  8447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8448 ;;      Params:         2       0       0       0       0       0       0
  8449 ;;      Locals:         0       0       0       0       0       0       0
  8450 ;;      Temps:          2       0       0       0       0       0       0
  8451 ;;      Totals:         4       0       0       0       0       0       0
  8452 ;;Total ram usage:        4 bytes
  8453 ;; Hardware stack levels used:    1
  8454 ;; Hardware stack levels required when called:    1
  8455 ;; This function calls:
  8456 ;;		Nothing
  8457 ;; This function is called by:
  8458 ;;		_main
  8459 ;; This function uses a non-reentrant model
  8460 ;;
  8461                           
  8462                           	psect	text36
  8463  0026F2                     __ptext36:
  8464                           	callstack 0
  8465  0026F2                     _change_direction:
  8466                           	callstack 0
  8467  0026F2  FFFF               	dw	65535	; assembler added errata NOP
  8468  0026F4                     
  8469                           ;stepper_motor.c: 42:     stepper_motor -> direction = stepper_motor -> direction*(-1);
  8470  0026F4  EE20 F004          	lfsr	2,4
  8471  0026F8  5001               	movf	change_direction@stepper_motor^0,w,c
  8472  0026FA  26D9               	addwf	fsr2l,f,c
  8473  0026FC  5002               	movf	(change_direction@stepper_motor+1)^0,w,c
  8474  0026FE  22DA               	addwfc	fsr2h,f,c
  8475  002700  CFDE F003          	movff	postinc2,??_change_direction
  8476  002704  CFDD F004          	movff	postdec2,??_change_direction+1
  8477  002708  1E03               	comf	??_change_direction^0,f,c
  8478  00270A  1E04               	comf	(??_change_direction+1)^0,f,c
  8479  00270C  4A03               	infsnz	??_change_direction^0,f,c
  8480  00270E  2A04               	incf	(??_change_direction+1)^0,f,c
  8481  002710  EE20 F004          	lfsr	2,4
  8482  002714  5001               	movf	change_direction@stepper_motor^0,w,c
  8483  002716  26D9               	addwf	fsr2l,f,c
  8484  002718  5002               	movf	(change_direction@stepper_motor+1)^0,w,c
  8485  00271A  22DA               	addwfc	fsr2h,f,c
  8486  00271C  C003  FFDE         	movff	??_change_direction,postinc2
  8487  002720  C004  FFDD         	movff	??_change_direction+1,postdec2
  8488  002724  0012               	return		;funcret
  8489  002726  FFFF               	dw	65535	; errata NOP
  8490  002728                     __end_of_change_direction:
  8491                           	callstack 0
  8492                           
  8493 ;; *************** function _rx_char_usart *****************
  8494 ;; Defined at:
  8495 ;;		line 255 in file "main.c"
  8496 ;; Parameters:    Size  Location     Type
  8497 ;;		None
  8498 ;; Auto vars:     Size  Location     Type
  8499 ;;		None
  8500 ;; Return value:  Size  Location     Type
  8501 ;;                  1    wreg      void 
  8502 ;; Registers used:
  8503 ;;		wreg, status,2
  8504 ;; Tracked objects:
  8505 ;;		On entry : 0/0
  8506 ;;		On exit  : 0/0
  8507 ;;		Unchanged: 0/0
  8508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8509 ;;      Params:         0       0       0       0       0       0       0
  8510 ;;      Locals:         0       0       0       0       0       0       0
  8511 ;;      Temps:          0       0       0       0       0       0       0
  8512 ;;      Totals:         0       0       0       0       0       0       0
  8513 ;;Total ram usage:        0 bytes
  8514 ;; Hardware stack levels used:    1
  8515 ;; This function calls:
  8516 ;;		Nothing
  8517 ;; This function is called by:
  8518 ;;		Interrupt level 2
  8519 ;; This function uses a non-reentrant model
  8520 ;;
  8521                           
  8522                           	psect	intcode
  8523  000008                     __pintcode:
  8524                           	callstack 0
  8525  000008                     _rx_char_usart:
  8526                           	callstack 0
  8527  000008  FFFF               	dw	65535	; assembler added errata NOP
  8528                           
  8529                           ;incstack = 0
  8530  00000A  827F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8531  00000C                     
  8532                           ;main.c: 256:     if(PIE1bits.RCIE && PIR1bits.RCIF){
  8533  00000C  AA9D               	btfss	157,5,c	;volatile
  8534  00000E  EF0B  F000         	goto	i2u170_41
  8535  000012  EF0E  F000         	goto	i2u170_40
  8536  000016                     i2u170_41:
  8537  000016  FFFF               	dw	65535	; assembler added errata NOP
  8538  000018  EF1D  F000         	goto	i2l2198
  8539  00001C                     i2u170_40:
  8540  00001C  FFFF               	dw	65535	; assembler added errata NOP
  8541  00001E  AA9E               	btfss	158,5,c	;volatile
  8542  000020  EF14  F000         	goto	i2u171_41
  8543  000024  EF17  F000         	goto	i2u171_40
  8544  000028                     i2u171_41:
  8545  000028  FFFF               	dw	65535	; assembler added errata NOP
  8546  00002A  EF1D  F000         	goto	i2l2198
  8547  00002E                     i2u171_40:
  8548  00002E  FFFF               	dw	65535	; assembler added errata NOP
  8549  000030                     
  8550                           ;main.c: 257:         PIR1bits.RCIF = 0;
  8551  000030  9A9E               	bcf	158,5,c	;volatile
  8552  000032                     
  8553                           ;main.c: 258:         state_changed = 1;
  8554  000032  0E01               	movlw	1
  8555  000034  6E7C               	movwf	_state_changed^0,c
  8556                           
  8557                           ;main.c: 259:         read_new_char = 1;
  8558  000036  0E01               	movlw	1
  8559  000038  6E7A               	movwf	_read_new_char^0,c
  8560  00003A                     i2l2198:
  8561  00003A  FFFF               	dw	65535	; assembler added errata NOP
  8562                           
  8563                           ;main.c: 261:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF){
  8564  00003C  AAF2               	btfss	242,5,c	;volatile
  8565  00003E  EF23  F000         	goto	i2u172_41
  8566  000042  EF26  F000         	goto	i2u172_40
  8567  000046                     i2u172_41:
  8568  000046  FFFF               	dw	65535	; assembler added errata NOP
  8569  000048  EF36  F000         	goto	i2l221
  8570  00004C                     i2u172_40:
  8571  00004C  FFFF               	dw	65535	; assembler added errata NOP
  8572  00004E  A4F2               	btfss	242,2,c	;volatile
  8573  000050  EF2C  F000         	goto	i2u173_41
  8574  000054  EF2F  F000         	goto	i2u173_40
  8575  000058                     i2u173_41:
  8576  000058  FFFF               	dw	65535	; assembler added errata NOP
  8577  00005A  EF36  F000         	goto	i2l221
  8578  00005E                     i2u173_40:
  8579  00005E  FFFF               	dw	65535	; assembler added errata NOP
  8580  000060                     
  8581                           ;main.c: 262:         T0CON = 0;
  8582  000060  0E00               	movlw	0
  8583  000062  6ED5               	movwf	213,c	;volatile
  8584  000064                     
  8585                           ;main.c: 263:         INTCONbits.TMR0IF = 0;
  8586  000064  94F2               	bcf	242,2,c	;volatile
  8587                           
  8588                           ;main.c: 264:         timer_done = 1;
  8589  000066  0E01               	movlw	1
  8590  000068  6E79               	movwf	_timer_done^0,c
  8591  00006A                     
  8592                           ;main.c: 265:         T0CONbits.TMR0ON = 0;
  8593  00006A  9ED5               	bcf	213,7,c	;volatile
  8594  00006C                     i2l221:
  8595  00006C  FFFF               	dw	65535	; assembler added errata NOP
  8596  00006E  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8597  000070  0011               	retfie		f
  8598  000072  FFFF               	dw	65535	; errata NOP
  8599  000074                     __end_of_rx_char_usart:
  8600                           	callstack 0
  8601                           
  8602                           	psect	rparam
  8603  0000                     
  8604                           	psect	temp
  8605  00007F                     btemp:
  8606                           	callstack 0
  8607  00007F                     	ds	1
  8608  0000                     int$flags	set	btemp
  8609  0000                     wtemp8	set	btemp+1
  8610  0000                     ttemp5	set	btemp+1
  8611  0000                     ttemp6	set	btemp+4
  8612  0000                     ttemp7	set	btemp+8
  8613                           
  8614                           	psect	idloc
  8615                           
  8616                           ;Config register IDLOC0 @ 0x200000
  8617                           ;	unspecified, using default values
  8618  200000                     	org	2097152
  8619  200000  FF                 	db	255
  8620                           
  8621                           ;Config register IDLOC1 @ 0x200001
  8622                           ;	unspecified, using default values
  8623  200001                     	org	2097153
  8624  200001  FF                 	db	255
  8625                           
  8626                           ;Config register IDLOC2 @ 0x200002
  8627                           ;	unspecified, using default values
  8628  200002                     	org	2097154
  8629  200002  FF                 	db	255
  8630                           
  8631                           ;Config register IDLOC3 @ 0x200003
  8632                           ;	unspecified, using default values
  8633  200003                     	org	2097155
  8634  200003  FF                 	db	255
  8635                           
  8636                           ;Config register IDLOC4 @ 0x200004
  8637                           ;	unspecified, using default values
  8638  200004                     	org	2097156
  8639  200004  FF                 	db	255
  8640                           
  8641                           ;Config register IDLOC5 @ 0x200005
  8642                           ;	unspecified, using default values
  8643  200005                     	org	2097157
  8644  200005  FF                 	db	255
  8645                           
  8646                           ;Config register IDLOC6 @ 0x200006
  8647                           ;	unspecified, using default values
  8648  200006                     	org	2097158
  8649  200006  FF                 	db	255
  8650                           
  8651                           ;Config register IDLOC7 @ 0x200007
  8652                           ;	unspecified, using default values
  8653  200007                     	org	2097159
  8654  200007  FF                 	db	255
  8655                           
  8656                           	psect	config
  8657                           
  8658                           ; Padding undefined space
  8659  300000                     	org	3145728
  8660  300000  FF                 	db	255
  8661                           
  8662                           ;Config register CONFIG1H @ 0x300001
  8663                           ;	Oscillator Selection bits
  8664                           ;	OSC = RCIO, RC oscillator w/ OSC2 configured as RA6
  8665                           ;	Oscillator System Clock Switch Enable bit
  8666                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  8667  300001                     	org	3145729
  8668  300001  27                 	db	39
  8669                           
  8670                           ;Config register CONFIG2L @ 0x300002
  8671                           ;	Power-up Timer Enable bit
  8672                           ;	PWRT = OFF, PWRT disabled
  8673                           ;	Brown-out Reset Enable bit
  8674                           ;	BOR = ON, Brown-out Reset enabled
  8675                           ;	Brown-out Reset Voltage bits
  8676                           ;	BORV = 20, VBOR set to 2.0V
  8677  300002                     	org	3145730
  8678  300002  0F                 	db	15
  8679                           
  8680                           ;Config register CONFIG2H @ 0x300003
  8681                           ;	Watchdog Timer Enable bit
  8682                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8683                           ;	Watchdog Timer Postscale Select bits
  8684                           ;	WDTPS = 128, 1:128
  8685  300003                     	org	3145731
  8686  300003  0E                 	db	14
  8687                           
  8688                           ; Padding undefined space
  8689  300004                     	org	3145732
  8690  300004  FF                 	db	255
  8691                           
  8692                           ;Config register CONFIG3H @ 0x300005
  8693                           ;	CCP2 Mux bit
  8694                           ;	CCP2MUX = ON, CCP2 input/output is multiplexed with RC1
  8695  300005                     	org	3145733
  8696  300005  01                 	db	1
  8697                           
  8698                           ;Config register CONFIG4L @ 0x300006
  8699                           ;	Stack Full/Underflow Reset Enable bit
  8700                           ;	STVR = ON, Stack Full/Underflow will cause RESET
  8701                           ;	Low Voltage ICSP Enable bit
  8702                           ;	LVP = ON, Low Voltage ICSP enabled
  8703                           ;	Background Debugger Enable bit
  8704                           ;	DEBUG = 0x1, unprogrammed default
  8705  300006                     	org	3145734
  8706  300006  85                 	db	133
  8707                           
  8708                           ; Padding undefined space
  8709  300007                     	org	3145735
  8710  300007  FF                 	db	255
  8711                           
  8712                           ;Config register CONFIG5L @ 0x300008
  8713                           ;	Code Protection bit
  8714                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
  8715                           ;	Code Protection bit
  8716                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  8717                           ;	Code Protection bit
  8718                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  8719                           ;	Code Protection bit
  8720                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  8721  300008                     	org	3145736
  8722  300008  0F                 	db	15
  8723                           
  8724                           ;Config register CONFIG5H @ 0x300009
  8725                           ;	Boot Block Code Protection bit
  8726                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  8727                           ;	Data EEPROM Code Protection bit
  8728                           ;	CPD = OFF, Data EEPROM not code protected
  8729  300009                     	org	3145737
  8730  300009  C0                 	db	192
  8731                           
  8732                           ;Config register CONFIG6L @ 0x30000A
  8733                           ;	Write Protection bit
  8734                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  8735                           ;	Write Protection bit
  8736                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  8737                           ;	Write Protection bit
  8738                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  8739                           ;	Write Protection bit
  8740                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  8741  30000A                     	org	3145738
  8742  30000A  0F                 	db	15
  8743                           
  8744                           ;Config register CONFIG6H @ 0x30000B
  8745                           ;	Configuration Register Write Protection bit
  8746                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  8747                           ;	Boot Block Write Protection bit
  8748                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  8749                           ;	Data EEPROM Write Protection bit
  8750                           ;	WRTD = OFF, Data EEPROM not write protected
  8751  30000B                     	org	3145739
  8752  30000B  E0                 	db	224
  8753                           
  8754                           ;Config register CONFIG7L @ 0x30000C
  8755                           ;	Table Read Protection bit
  8756                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  8757                           ;	Table Read Protection bit
  8758                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  8759                           ;	Table Read Protection bit
  8760                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  8761                           ;	Table Read Protection bit
  8762                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  8763  30000C                     	org	3145740
  8764  30000C  0F                 	db	15
  8765                           
  8766                           ;Config register CONFIG7H @ 0x30000D
  8767                           ;	Boot Block Table Read Protection bit
  8768                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  8769  30000D                     	org	3145741
  8770  30000D  40                 	db	64
  8771                           tosu	equ	0xFFF
  8772                           tosh	equ	0xFFE
  8773                           tosl	equ	0xFFD
  8774                           stkptr	equ	0xFFC
  8775                           pclatu	equ	0xFFB
  8776                           pclath	equ	0xFFA
  8777                           pcl	equ	0xFF9
  8778                           tblptru	equ	0xFF8
  8779                           tblptrh	equ	0xFF7
  8780                           tblptrl	equ	0xFF6
  8781                           tablat	equ	0xFF5
  8782                           prodh	equ	0xFF4
  8783                           prodl	equ	0xFF3
  8784                           indf0	equ	0xFEF
  8785                           postinc0	equ	0xFEE
  8786                           postdec0	equ	0xFED
  8787                           preinc0	equ	0xFEC
  8788                           plusw0	equ	0xFEB
  8789                           fsr0h	equ	0xFEA
  8790                           fsr0l	equ	0xFE9
  8791                           wreg	equ	0xFE8
  8792                           indf1	equ	0xFE7
  8793                           postinc1	equ	0xFE6
  8794                           postdec1	equ	0xFE5
  8795                           preinc1	equ	0xFE4
  8796                           plusw1	equ	0xFE3
  8797                           fsr1h	equ	0xFE2
  8798                           fsr1l	equ	0xFE1
  8799                           bsr	equ	0xFE0
  8800                           indf2	equ	0xFDF
  8801                           postinc2	equ	0xFDE
  8802                           postdec2	equ	0xFDD
  8803                           preinc2	equ	0xFDC
  8804                           plusw2	equ	0xFDB
  8805                           fsr2h	equ	0xFDA
  8806                           fsr2l	equ	0xFD9
  8807                           status	equ	0xFD8

Data Sizes:
    Strings     22
    Constant    1216
    Data        14
    BSS         74
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    110     126
    BANK0           128      0      72
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    change_direction@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    change_direction@stepper_motor	PTR struct . size(2) Largest target is 13
		 -> joint_dilutor_stepper(BANK0[12]), end_effector_stepper(BANK0[12]), joint_stepper(BANK0[12]), 

    reach_goal@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    reach_goal@stepper_motor	PTR struct . size(2) Largest target is 13
		 -> joint_dilutor_stepper(BANK0[12]), end_effector_stepper(BANK0[12]), joint_stepper(BANK0[12]), 

    update_current_coil@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    update_current_coil@stepper_motor	PTR struct . size(2) Largest target is 13
		 -> joint_dilutor_stepper(BANK0[12]), end_effector_stepper(BANK0[12]), joint_stepper(BANK0[12]), 

    turn_on_current_coil@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    turn_on_current_coil@stepper_motor	PTR struct . size(2) Largest target is 13
		 -> joint_dilutor_stepper(BANK0[12]), end_effector_stepper(BANK0[12]), joint_stepper(BANK0[12]), 

    init_stepper@register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    init_stepper@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    init_stepper@hex_coil_register_values	PTR unsigned char  size(2) Largest target is 4
		 -> hex_end_effector_values(BANK0[4]), hex_joint_values(BANK0[4]), 

    init_stepper@stepper_motor	PTR struct . size(2) Largest target is 13
		 -> joint_dilutor_stepper(BANK0[12]), end_effector_stepper(BANK0[12]), joint_stepper(BANK0[12]), 

    state_translator_micro_to_fpga@state	PTR int  size(2) Largest target is 2
		 -> state(COMRAM[2]), 

    state_translator_fpga_to_micro@state	PTR int  size(2) Largest target is 2
		 -> state(COMRAM[2]), 

    S782$current_msg	PTR unsigned char  size(2) Largest target is 0

    lcd_manager_init@lcd_manager.current_msg	PTR unsigned char  size(2) Largest target is 0

    S782$new_msg	PTR unsigned char  size(2) Largest target is 0

    lcd_manager_init@lcd_manager.new_msg	PTR unsigned char  size(2) Largest target is 0

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 1200
		 -> const_msgs(CODE[1200]), STR_1(CODE[22]), 

    joint_dilutor_stepper.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    end_effector_stepper.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    S181$register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    joint_stepper.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 


Critical Paths under _main in COMRAM

    _wait_for_zero->_get_temperature
    _get_temperature->___fltol
    _state_translator_fpga_to_micro->_lcd_dat
    _reach_goal->_turn_on_current_coil
    _lcd_update->_lcd_str
    _lcd_str->___wmul
    _lcd_dat->_lcd_wr
    _lcd_init->_lcd_cmd
    _lcd_cmd->_lcd_wr
    _init_USART->_roundf
    _roundf->___flge
    ___flsub->___fladd
    _get_liters->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl
    _check_temperature->___flge
    ___xxtofl->___awdiv
    ___flge->_get_liters
    ___awdiv->_abs

Critical Paths under _rx_char_usart in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _rx_char_usart in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rx_char_usart in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rx_char_usart in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rx_char_usart in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _rx_char_usart in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _rx_char_usart in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               249   249      0   33572
                                            101 COMRAM     9     9      0
                             ___flge
                             ___wmul
                           ___xxtofl
                   _change_direction
                  _check_temperature
       _configure_ad_conversion_oven
       _configure_ad_conversion_tank
                         _get_liters
                      _get_reg_value
                    _get_temperature
                         _init_PORTS
                         _init_USART
                    _init_interrupts
                       _init_stepper
                       _init_timer_0
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                         _lcd_update
                         _reach_goal
                     _serial_tx_char
     _state_translator_fpga_to_micro
     _state_translator_micro_to_fpga
                      _wait_for_zero
 ---------------------------------------------------------------------------------
 (1) _wait_for_zero                                        0     0      0    3207
                    _get_temperature
 ---------------------------------------------------------------------------------
 (2) _get_temperature                                      2     0      2    3207
                                             61 COMRAM     2     0      2
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _state_translator_micro_to_fpga                       5     3      2     168
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _state_translator_fpga_to_micro                       3     1      2     494
                                              2 COMRAM     3     1      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (1) _serial_tx_char                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _reach_goal                                           7     3      4    1590
                                              8 COMRAM     7     3      4
               _turn_on_current_coil
                _update_current_coil
 ---------------------------------------------------------------------------------
 (2) _update_current_coil                                  6     4      2     274
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _turn_on_current_coil                                 8     6      2     142
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _lcd_update                                          10     8      2    1309
                                             11 COMRAM    10     8      2
                             ___wmul
                            _lcd_cmd
                            _lcd_str
 ---------------------------------------------------------------------------------
 (2) _lcd_str                                              5     3      2     286
                                              6 COMRAM     5     3      2
                             ___wmul (ARG)
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              1     1      0      44
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     767
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0      44
                                              2 COMRAM     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0      44
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_timer_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_stepper                                        16     4     12    3046
                                              0 COMRAM    16     4     12
 ---------------------------------------------------------------------------------
 (1) _init_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_USART                                           0     0      0   11410
                            ___fltol
                             _roundf
 ---------------------------------------------------------------------------------
 (2) _roundf                                              26    22      4   10953
                                             75 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3649
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    3326
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _init_PORTS                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_reg_value                                        1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _get_liters                                           2     0      2    3207
                                             61 COMRAM     2     0      2
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     457
                                             51 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2048
                                             26 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _configure_ad_conversion_tank                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configure_ad_conversion_oven                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_temperature                                    6     4      2    2533
                                             75 COMRAM     6     4      2
                            ___awdiv
                             ___flge
                           ___xxtofl
                                _abs
                    _get_temperature (ARG)
 ---------------------------------------------------------------------------------
 (2) _abs                                                  4     2      2     142
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     702
                                             12 COMRAM    14    10      4
                            ___awdiv (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    1094
                                             63 COMRAM    12     4      8
                            ___fltol (ARG)
                           ___xxtofl (ARG)
                         _get_liters (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              4 COMRAM     8     4      4
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (1) _change_direction                                     4     2      2     348
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _rx_char_usart                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___flge
     ___fltol (ARG)
       ___fladd (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___flneg (ARG)
       ___flsub (ARG)
         ___fladd
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
     ___xxtofl (ARG)
       ___awdiv (ARG)
         _abs (ARG)
       _abs (ARG)
     _get_liters (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___fltol
         ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___flneg (ARG)
         ___flsub (ARG)
           ___fladd
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___xxtofl
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
   ___wmul
   ___xxtofl
     ___awdiv (ARG)
       _abs (ARG)
     _abs (ARG)
   _change_direction
   _check_temperature
     ___awdiv
       _abs (ARG)
     ___flge
       ___fltol (ARG)
         ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___flneg (ARG)
         ___flsub (ARG)
           ___fladd
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
       _get_liters (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___fltol
           ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
           ___flneg (ARG)
           ___flsub (ARG)
             ___fladd
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___xxtofl
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
     ___xxtofl
       ___awdiv (ARG)
         _abs (ARG)
       _abs (ARG)
     _abs
     _get_temperature (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___fltol
         ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___flneg (ARG)
         ___flsub (ARG)
           ___fladd
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___xxtofl
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
   _configure_ad_conversion_oven
   _configure_ad_conversion_tank
   _get_liters
     ___flmul
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
     ___fltol
       ___fladd (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___flneg (ARG)
       ___flsub (ARG)
         ___fladd
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
     ___xxtofl
       ___awdiv (ARG)
         _abs (ARG)
       _abs (ARG)
   _get_reg_value
   _get_temperature
     ___flmul
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
     ___fltol
       ___fladd (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___flneg (ARG)
       ___flsub (ARG)
         ___fladd
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
     ___xxtofl
       ___awdiv (ARG)
         _abs (ARG)
       _abs (ARG)
   _init_PORTS
   _init_USART
     ___fltol
       ___fladd (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___flneg (ARG)
       ___flsub (ARG)
         ___fladd
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
     _roundf
       ___fladd
       ___flge
         ___fltol (ARG)
           ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
           ___flneg (ARG)
           ___flsub (ARG)
             ___fladd
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
         _get_liters (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
           ___fltol
             ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
             ___flneg (ARG)
             ___flsub (ARG)
               ___fladd
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
           ___xxtofl
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___flneg
       ___flsub
         ___fladd
       ___fltol (ARG)
         ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___flneg (ARG)
         ___flsub (ARG)
           ___fladd
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
   _init_interrupts
   _init_stepper
   _init_timer_0
   _lcd_cmd
     _lcd_wr
   _lcd_init
     _lcd_cmd
       _lcd_wr
   _lcd_str
     ___wmul (ARG)
     _lcd_dat (ARG)
       _lcd_wr
   _lcd_update
     ___wmul
     _lcd_cmd
       _lcd_wr
     _lcd_str
       ___wmul (ARG)
       _lcd_dat (ARG)
         _lcd_wr
   _reach_goal
     _turn_on_current_coil
     _update_current_coil
   _serial_tx_char
   _state_translator_fpga_to_micro
     _lcd_dat
       _lcd_wr
   _state_translator_micro_to_fpga
   _wait_for_zero
     _get_temperature
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___fltol
         ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___flneg (ARG)
         ___flsub (ARG)
           ___fladd
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___xxtofl
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)

 _rx_char_usart (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      48       5       56.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     6E      7E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C6      15        0.0%
DATA                 0      0      C6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Jun 21 00:49:19 2023

                                           ?_get_reg_value 0001  
                                          ??_wait_for_zero 0040  
                                                       l21 26EE  
                                                       l24 2822  
                                                       l27 2836  
                                                       l36 2882  
                                             ___awdiv@sign 000A  
                                      ___wmul@multiplicand 0003  
                                                      l200 0900  
                                                      l310 1C1E  
                                                      l250 2750  
                                                      l314 2308  
                                                      l154 01F6  
                                                      l403 27A4  
                                                      l155 0A82  
                                                      l332 2816  
                                                      l340 2590  
                                                      l164 0368  
                                                      l253 28A8  
                                                      l157 0294  
                                                      l270 277A  
                                                      l350 2400  
                                                      l166 035A  
                                                      l319 230C  
                                                      l264 289C  
                                                      l168 0388  
                                                      l337 2282  
                                                      l273 238A  
                                                      l354 2724  
                                                      l346 2046  
                                                      l267 27CE  
                                                      l700 1D54  
                                                      l373 2872  
                                                      l382 2472  
                                                      l279 253E  
                                                      l391 27D4  
                                                      l376 2854  
                                                      l385 247A  
                                                      l289 21DA  
                                                      l634 1F6E  
                                                      l379 240A  
                                                      l395 27F4  
                                                      l388 24DE  
                                                      l399 211C  
                                                      l673 1E7C  
                                                      l931 0CD4  
                                                      l668 1E2E  
                                                      l940 102E  
                                                      l932 0CBE  
                                                      l677 26AE  
                                                      l933 0C74  
                                                      l948 0E18  
                                                      l957 0F1C  
                                                      l973 2626  
                                                      l958 0F04  
                                        ??_init_interrupts 0001  
                                                      _abs 2594  
                                init_stepper@register_name 000B  
                                                      wreg 000FE8  
                                           ?_rx_char_usart 0001  
                                             ___flmul@aexp 002C  
                                             ___flmul@bexp 002D  
                                             ___flmul@sign 0027  
                                             ___flmul@temp 0032  
                                             ___flmul@prod 002E  
                                             ___fltol@exp1 003D  
                                                     l1021 14D2  
                                                     l1024 132C  
                                                     l1017 1120  
                                                     l1034 148A  
                                                     l1026 13BC  
                                                     l1027 13A4  
                                                     ?_abs 0001  
                                                     l1061 1AB0  
                                                     l1072 1A36  
                                                     l3000 2864  
                                                     l1065 19CA  
                                                     l1081 25DA  
                                                     l1058 191E  
                                                     l2210 0A8E  
                                                     l3010 2808  
                                                     l3002 27D6  
                                                     l2300 0C94  
                                                     l2220 0AD8  
                                                     l2212 0A9A  
                                                     l3020 2812  
                                                     l3012 280A  
                                                     l3100 01CE  
                                                     PORTD 000F83  
                                                     PORTE 000F84  
                                                     l1078 25D0  
                                                     l2310 0CE8  
                                                     l2302 0C9A  
                                                     l2230 0B0E  
                                                     l2222 0AE8  
                                                     l2214 0AAC  
                                                     l3022 2814  
                                                     l3014 280C  
                                                     l3006 27FA  
                                                     l3110 0210  
                                                     l3102 01D2  
                                                     l2400 0FFC  
                                                     l2320 0D34  
                                                     l2312 0CFC  
                                                     l2304 0CAE  
                                                     l2240 0B42  
                                                     l2232 0B24  
                                                     l2224 0AEC  
                                                     l2216 0AAE  
                                                     l3016 280E  
                                                     l3008 2806  
                                                     l2208 2898  
                                                     l3024 2390  
                                                     l3200 0642  
                                                     l3112 0214  
                                                     l3120 029A  
                                                     l3104 01D6  
                                                     l1089 18B8  
                                                     l3042 26F4  
                                                     l2402 1000  
                                                     l2330 0D6E  
                                                     l2322 0D46  
                                                     l2306 0CB0  
                                                     l2242 0B58  
                                                     l2250 0B88  
                                                     l2234 0B26  
                                                     l2218 0AC4  
                                                     l2226 0AF4  
                                                     l3018 2810  
                                                     l3026 23BE  
                                                     l3034 23DE  
                                                     l3210 06A0  
                                                     l3202 064E  
                                                     l3130 0308  
                                                     l3122 02B2  
                                                     l3114 022A  
                                                     l3106 01F0  
                                                     l2500 127C  
                                                     l2404 1008  
                                                     l2340 0DE2  
                                                     l2332 0D7A  
                                                     l2324 0D52  
                                                     l2316 0D10  
                                                     l2308 0CBC  
                                                     l2260 0BCE  
                                                     l2252 0B9A  
                                                     l2244 0B6C  
                                                     l2236 0B2E  
                                                     l2228 0B06  
                                                     l2420 276C  
                                                     l2412 2758  
                                                     l3036 23EC  
                                                     l3028 23D2  
                                                     l3220 070E  
                                                     l3212 06C0  
                                                     l3204 065E  
                                                     l3140 037C  
                                                     l3132 031C  
                                                     l3124 02C4  
                                                     l3116 0276  
                                                     l3108 01FA  
                                                     l3060 0082  
                                                     l2510 1318  
                                                     l2502 12A6  
                                                     l2430 1054  
                                                     l2406 101A  
                                                     l2342 0DF6  
                                                     l2326 0D58  
                                                     l2318 0D22  
                                                     l2334 0D80  
                                                     l2270 0BE2  
                                                     l2262 0BD2  
                                                     l2254 0BB2  
                                                     l2246 0B7C  
                                                     l2238 0B40  
                                                     l2422 276E  
                                                     l2414 275A  
                                                     l3038 23F8  
                                                     l3230 0784  
                                                     l3214 06D8  
                                                     l3222 071E  
                                                     l3206 0678  
                                                     l3150 0450  
                                                     l3142 0380  
                                                     l3134 0342  
                                                     l3126 02DE  
                                                     l3118 027A  
                                                     l3070 0126  
                                                     l3062 0086  
                                                     l3054 0078  
                                                     l2520 1368  
                                                     l2512 132A  
                                                     l2504 12E0  
                                                     l2440 1098  
                                                     l2432 1056  
                                                     l2600 1C86  
                                                     l2408 101C  
                                                     l2360 0E90  
                                                     l2352 0E5C  
                                                     l2336 0DAC  
                                                     l2344 0E06  
                                                     l2328 0D6C  
                                                     l2280 0BF6  
                                                     l2272 0BE6  
                                                     l2264 0BD6  
                                                     l2256 0BC4  
                                                     l2248 0B80  
                                                     l2424 2778  
                                                     l2416 2760  
                                                     l3240 07F4  
                                                     l3232 079A  
                                                     l3224 0736  
                                                     l3216 06EE  
                                                     l3208 0688  
                                                     l3160 047A  
                                                     l3152 0458  
                                                     l3144 0384  
                                                     l3136 034E  
                                                     l3128 02EE  
                                                     l3080 0146  
                                                     l3072 012C  
                                                     l3064 00BA  
                                                     l3056 0078  
                                                     l2530 13F0  
                                                     l2522 139A  
                                                     l2514 133E  
                                                     l2506 12EE  
                                                     l2450 10CC  
                                                     l2442 10AA  
                                                     l2434 106C  
                                                     l2426 1036  
                                                     l2602 1C88  
                                                     l2362 0E98  
                                                     l2354 0E68  
                                                     l2346 0E34  
                                                     l2338 0DE0  
                                                     l2370 0EC8  
                                                     l2290 0C0C  
                                                     l2282 0BFA  
                                                     l2274 0BEA  
                                                     l2266 0BDA  
                                                     l2258 0BC8  
                                                     l2418 2762  
                                                     l3242 0810  
                                                     l3226 074C  
                                                     l3218 0706  
                                                     l3234 07B2  
                                                     l3170 04E0  
                                                     l3154 0462  
                                                     l3162 0482  
                                                     l3138 0358  
                                                     l3146 039A  
                                                     l3090 018C  
                                                     l3082 014E  
                                                     l3074 0132  
                                                     l3066 00EE  
                                                     l3058 007E  
                                                     l2540 1472  
                                                     l2532 141A  
                                                     l2516 1352  
                                                     l2508 130C  
                                                     l2460 1136  
                                                     l2452 10E2  
                                                     l2444 10B2  
                                                     l2436 1080  
                                                     l2428 1042  
                                                     l2604 1C98  
                                                     l2380 0F32  
                                                     l2372 0ECE  
                                                     l2364 0E9E  
                                                     l2356 0E7A  
                                                     l2348 0E48  
                                                     l2292 0C3A  
                                                     l2284 0BFE  
                                                     l2276 0BEE  
                                                     l2268 0BDE  
                                                     l2700 16F6  
                                                     l3260 08E4  
                                                     l3244 0828  
                                                     l3236 07CC  
                                                     l3252 088C  
                                                     l3228 076C  
                                                     l3172 04F8  
                                                     l3164 049C  
                                                     l3180 0568  
                                                     l3156 046A  
                                                     l3148 03B4  
                                                     l3092 0190  
                                                     l3084 0164  
                                                     l3076 0138  
                                                     l3068 0122  
                                                     l2542 1490  
                                                     l2550 14BC  
                                                     l2526 13D2  
                                                     l2534 141E  
                                                     l2518 1356  
                                                     l2470 1176  
                                                     l2462 1148  
                                                     l2454 10F6  
                                                     l2446 10B8  
                                                     l2438 1090  
                                                     l2630 1D32  
                                                     l2614 1CCA  
                                                     l2606 1C9C  
                                                     l2390 0FA6  
                                                     l2382 0F3E  
                                                     l2374 0EE0  
                                                     l2366 0EB4  
                                                     l2358 0E7C  
                                                     l2294 0C5C  
                                                     l2286 0C02  
                                                     l2278 0BF2  
                                                     l2710 1882  
                                                     l2702 1762  
                                                     l3270 0948  
                                                     l3262 0914  
                                                     l3254 08A6  
                                                     l3246 0840  
                                                     l3238 07DE  
                                                     l3190 05CC  
                                                     l3182 0582  
                                                     l3174 0510  
                                                     l3166 04AE  
                                                     l3158 0472  
                                                     l3094 01A8  
                                                     l3086 0178  
                                                     l3078 0144  
                                                     l2800 1F38  
                                                     l2640 18E8  
                                                     l2552 14C2  
                                                     l2544 14A0  
                                                     l2536 143E  
                                                     l2528 13DE  
                                                     l2480 11C8  
                                                     l2472 118C  
                                                     l2456 1106  
                                                     l2448 10CA  
                                                     l2632 1D42  
                                                     l2624 1CFA  
                                                     l2616 1CD6  
                                                     l2608 1CAE  
                                                     l2392 0FB8  
                                                     l2384 0F50  
                                                     l2376 0EFA  
                                                     l2368 0EB6  
                                                     l2296 0C6C  
                                                     l2288 0C06  
                                                     l2712 18A6  
                                                     l2704 179A  
                                                     l2720 27B4  
                                                     l3280 099E  
                                                     l3272 0962  
                                                     l3264 091C  
                                                     l3256 08B6  
                                                     l3248 085C  
                                                     l3192 05E6  
                                                     l3184 0592  
                                                     l3176 052C  
                                                     l3168 04C4  
                                                     l3088 017E  
                                                     l3096 01AE  
                                                     l2802 1F40  
                                                     l2570 1DE2  
                                                     l2562 1D5C  
                                                     l2650 196A  
                                                     l2642 1930  
                                                     l2546 14B2  
                                                     l2538 1452  
                                                     l2490 120E  
                                                     l2482 11D6  
                                                     l2474 1198  
                                                     l2466 115E  
                                                     l2458 110E  
                                                     l2626 1D08  
                                                     l2618 1CE0  
                                                     l2394 0FDE  
                                                     l2386 0F8E  
                                                     l2298 0C88  
                                                     l2706 1806  
                                                     l2722 27B6  
                                                     l2730 24E4  
                                                     l3290 09FA  
                                                     l3282 09C0  
                                                     l3274 0964  
                                                     l3266 0936  
                                                     l3258 08D0  
                                                     l3194 05FC  
                                                     l3186 05BC  
                                                     l3178 0558  
                                                     l3098 01C0  
                                                     l2804 1F46  
                                                     l2580 1E78  
                                                     l2572 1DF6  
                                                     l2564 1D8E  
                                                     l2660 1A02  
                                                     l2652 1978  
                                                     l2644 194C  
                                                     l2636 18C2  
                                                     l2548 14B4  
                                                     l2492 1228  
                                                     l2484 11E2  
                                                     l2476 11B0  
                                                     l2468 116C  
                                                     l2628 1D1C  
                                                     l2396 0FE2  
                                                     l2388 0F90  
                                                     l2556 25E2  
                                                     l2708 183C  
                                                     l2820 26E6  
                                                     l2812 26B4  
                                                     l2724 27C0  
                                                     l2716 27AC  
                                                     l2732 24EC  
                                                     l2900 1B14  
                                                     l2740 241E  
                                                     l3292 0A0C  
                                                     l3284 09CC  
                                                     l3276 0984  
                                                     l3268 0942  
                                                     l3196 060C  
                                                     l3188 05C8  
                                                     l2806 1F5C  
                                                     l2574 1E08  
                                                     l2566 1D9E  
                                                     l2670 1A52  
                                                     l2662 1A10  
                                                     l2654 19B0  
                                                     l2638 18D6  
                                                     l2494 1238  
                                                     l2486 11F2  
                                                     l2478 11BC  
                                                     l2398 0FF6  
                                                     l2558 25F2  
                                                     l2822 26E8  
                                                     l2814 26E0  
                                                     l2726 27C2  
                                                     l2718 27AE  
                                                     l2734 250C  
                                                     l2750 2000  
                                                     l2830 281E  
                                                     l2910 1B84  
                                                     l2902 1B2C  
                                                     l3294 0A22  
                                                     l3278 0996  
                                                     l3198 0626  
                                                     l3286 09CE  
                                                     l2808 1F64  
                                                     l2576 1E1C  
                                                     l2568 1DD2  
                                                     l2672 1A76  
                                                     l2664 1A24  
                                                     l2656 19B4  
                                                     l2648 1960  
                                                     l2760 25B4  
                                                     l2496 1254  
                                                     l2488 11FE  
                                                     l2592 1C26  
                                                     l2832 2878  
                                                     l2840 274E  
                                                     l2584 2672  
                                                     l2824 26EA  
                                                     l2816 26E2  
                                                     l2728 27CC  
                                                     l2736 250E  
                                                     l2744 2544  
                                                     l2752 2014  
                                                     l2920 1BE0  
                                                     l2912 1B98  
                                                     l2904 1B40  
                                                     l3296 0A6E  
                                                     l3288 09E8  
                                                     l2770 1E88  
                                                     l2578 1E72  
                                                     l2674 1A8A  
                                                     l2666 1A4A  
                                                     l2658 19C0  
                                                     l2498 1260  
                                                     l2594 1C40  
                                                     l2834 287C  
                                                     l2586 268C  
                                                     l2690 15A4  
                                                     l2682 14DA  
                                                     l2826 26EC  
                                                     l2818 26E4  
                                                     l2762 2780  
                                                     l2754 2036  
                                                     l2922 1BF8  
                                                     l2914 1BB0  
                                                     l2906 1B58  
                                                     l2930 22A8  
                                                     l2738 2408  
                                                     l3298 0A7A  
                                                     l2780 1EC2  
                                                     l2772 1E9A  
                                                     l2676 1A9C  
                                                     l2668 1A4C  
                                                     l2588 269C  
                                                     l2692 15C8  
                                                     l2684 14FA  
                                                     l2844 28A2  
                                                     l2860 2246  
                                                     l2852 21E8  
                                                     l2764 279C  
                                                     l2748 1F74  
                                                     l2924 1C0C  
                                                     l2916 1BC4  
                                                     l2908 1B6C  
                                                     l2940 2302  
                                                     l2932 22B0  
                                                     l2790 1EF8  
                                                     l2782 1EC6  
                                                     l2774 1EA2  
                                                     l2678 1A9E  
                                                     l2758 2596  
                                                     l2598 1C56  
                                                     l2838 272A  
                                                     l2694 15EA  
                                                     l2686 154A  
                                                     l2862 225A  
                                                     l2854 2212  
                                                     l2846 21E0  
                                                     l2870 2334  
                                                     l2934 22D0  
                                                     l2792 1F0C  
                                                     l2784 1ED0  
                                                     l2776 1EA6  
                                                     l2768 1E84  
                                                     l2688 155E  
                                                     l2864 226E  
                                                     l2856 2216  
                                                     l2880 236C  
                                                     l2872 2336  
                                                     l2960 21BA  
                                                     l2944 2124  
                                                     l2936 22D8  
                                                     l2928 2288  
                                                     l2794 1F14  
                                                     l2786 1EE6  
                                                     l2778 1EBA  
                                                     l2970 2846  
                                                     l2962 283C  
                                                     l2698 1622  
                                                     l2858 2236  
                                                     l2882 2372  
                                                     l2874 233C  
                                                     l2866 2312  
                                                     l2954 215A  
                                                     l2946 212A  
                                                     l2890 1ABA  
                                                     l2938 22FA  
                                                     l2796 1F2E  
                                                     l2788 1EEE  
                                                     l2980 20D0  
                                                     l2964 2840  
                                                     l2972 2478  
                                                     l2884 2378  
                                                     l2876 2354  
                                                     l2868 2322  
                                                     l2956 216E  
                                                     l2948 2152  
                                                     l2892 1AC0  
                                                     l2798 1F36  
                                                     l2982 2106  
                                                     l2966 2842  
                                                     l2974 248E  
                                                     l2886 237E  
                                                     l2878 2366  
                                                     l2958 21B6  
                                                     l2894 1AD4  
                                                     l2992 285A  
                                                     l2968 2844  
                                                     l2888 2384  
                                                     l2896 1AE8  
                                                     l2978 204E  
                                                     l2994 285E  
                                                     l2898 1B00  
                                                     l2988 2112  
                                                     l2996 2860  
                                                     l2998 2862  
                                                     TRISD 000F95  
                                                     TRISE 000F96  
                                                     STR_1 7FE9  
                                            _state_changed 007C  
                                                     u2000 0EB2  
                                                     u2001 0EAC  
                                                     u2010 0EC8  
                                                     u2011 0EC2  
                                                     u2100 0FDC  
                                                     u2020 0EDE  
                                                     u2101 0FD6  
                                                     u2021 0ED8  
                                                     u2110 0FF4  
                                                     u2030 0EF8  
                                                     u2111 0FEE  
                                                     u2031 0EF2  
                                                     u2200 1148  
                                                     u2120 1018  
                                                     u2040 0F16  
                                                     u3000 0274  
                                                     u2201 1142  
                                                     u2121 1012  
                                                     u2041 0F10  
                                                     u3001 026E  
                                                     u2210 12C8  
                                                     u2130 1052  
                                                     u2050 0F30  
                                                     u3010 02B0  
                                                     u2131 104C  
                                                     u2051 0F2A  
                                                     u3011 02AA  
                                                     u2300 1470  
                                                     u2220 1328  
                                                     u2140 106A  
                                                     u2060 0F4E  
                                                     u3100 04F6  
                                                     u3020 02DC  
                                                     u2301 146A  
                                                     u2221 1322  
                                                     u2141 1064  
                                                     u2061 0F48  
                                                     u3101 04F0  
                                                     u3021 02D6  
                                                     _LATA 000F89  
                                                     u2310 14B0  
                                                     u2230 1350  
                                                     u2150 107E  
                                                     u2070 0F8C  
                                                     u3110 050E  
                                                     u3030 0306  
                                                     _LATB 000F8A  
                                                     u2311 14AA  
                                                     u2231 134A  
                                                     u2215 12BC  
                                                     u2151 1078  
                                                     u2071 0F86  
                                                     u3111 0508  
                                                     u3031 0300  
                                                     _LATC 000F8B  
                                                     u2320 1D8C  
                                                     u2240 1366  
                                                     u2160 10C8  
                                                     u2400 1CAC  
                                                     u2080 0FA4  
                                                     u3200 06D6  
                                                     u3120 0556  
                                                     u3040 031A  
                                                     u2321 1D86  
                                                     u2241 1360  
                                                     u2161 10C2  
                                                     u2401 1CA6  
                                                     u2081 0F9E  
                                                     u3201 06D0  
                                                     u3121 0550  
                                                     u3041 0314  
                                                     u2330 1DD0  
                                                     u2250 1398  
                                                     u2170 10E0  
                                                     u2410 1CC4  
                                                     u2090 0FB8  
                                                     u3210 06EC  
                                                     u3130 0580  
                                                     u3050 0340  
                                                     u2331 1DCA  
                                                     u2251 1392  
                                                     u2171 10DA  
                                                     u2411 1CBE  
                                                     u2091 0FB2  
                                                     u3211 06E6  
                                                     u3131 057A  
                                                     u3051 033A  
                                                     u2340 1DF4  
                                                     u2500 1A22  
                                                     u2260 13B6  
                                                     u2180 10F4  
                                                     u2420 1CF4  
                                                     u3300 0886  
                                                     u3220 0734  
                                                     u3140 05BA  
                                                     u3060 037A  
                                                     u2341 1DEE  
                                                     u2501 1A1C  
                                                     u2261 13B0  
                                                     u2181 10EE  
                                                     u2421 1CEE  
                                                     u3301 0880  
                                                     u3221 072E  
                                                     u3141 05B4  
                                                     u3061 0374  
                                                     u2350 1E1A  
                                                     u2510 1A36  
                                                     u2270 13D0  
                                                     u2190 1134  
                                                     u2430 1D1C  
                                                     u3310 08A4  
                                                     u3230 074A  
                                                     u3150 05E4  
                                                     u3070 03B2  
                                                     u2351 1E14  
                                                     u2511 1A30  
                                                     u2271 13CA  
                                                     u2191 112E  
                                                     u2431 1D16  
                                                     u3311 089E  
                                                     u3231 0744  
                                                     u3151 05DE  
                                                     u3071 03AC  
                                                     u2360 1E70  
                                                     u2520 1A48  
                                                     u2280 13EE  
                                                     u2440 1D30  
                                                     u1800 0B6A  
                                                     u2600 16F4  
                                                     u3400 09F8  
                                                     u3320 08CE  
                                                     u3240 0782  
                                                     u3160 05FA  
                                                     u3080 049A  
                                                     u2361 1E6A  
                                                     u2521 1A42  
                                                     u2281 13E8  
                                                     u2441 1D2A  
                                                     u1801 0B64  
                                                     u2601 16EE  
                                                     u3401 09F2  
                                                     u3321 08C8  
                                                     u3241 077C  
                                                     u3161 05F4  
                                                     u3081 0494  
                                                     u2530 1A88  
                                                     u2450 18D4  
                                                     u2290 143C  
                                                     u2370 268A  
                                                     u1810 0BB0  
                                                     u2610 1798  
                                                     u3410 0A0A  
                                                     u3330 08E2  
                                                     u3250 0798  
                                                     u3170 0624  
                                                     u3090 04C2  
                                                     u2531 1A82  
                                                     u2451 18CE  
                                                     u2291 1436  
                                                     u2371 2684  
                                                     u1811 0BAA  
                                                     u2611 1792  
                                                     u3411 0A04  
                                                     u3331 08DC  
                                                     u3251 0792  
                                                     u3171 061E  
                                                     u3091 04BC  
                                                     u2700 1EB8  
                                                     u2540 1A9A  
                                                     u2460 18E6  
                                                     u2380 1C3E  
                                                     u1900 0CFA  
                                                     u1820 0BC2  
                                                     u1740 0AAA  
                                                     u2620 1860  
                                                     u3420 0A6C  
                                                     u3340 0912  
                                                     u3260 07CA  
                                                     u3180 0676  
                                                     u2701 1EB2  
                                                     u2541 1A94  
                                                     u2461 18E0  
                                                     u2381 1C38  
                                                     u1901 0CF4  
                                                     u1821 0BBC  
                                                     u1741 0AA4  
                                                     u3421 0A66  
                                                     u3341 090C  
                                                     u3261 07C4  
                                                     u3181 0670  
                                                     u2710 1EE4  
                                                     u2470 194A  
                                                     u2390 1C7A  
                                                     u1910 0D32  
                                                     u1830 0C38  
                                                     u1750 0AC2  
                                                     u2630 1880  
                                                     u2550 151C  
                                                     u3350 0934  
                                                     u3270 07F2  
                                                     u3190 069E  
                                                     u2711 1EDE  
                                                     u2471 1944  
                                                     u1911 0D2C  
                                                     u1831 0C32  
                                                     u1751 0ABC  
                                                     u2631 187A  
                                                     u3351 092E  
                                                     u3271 07EC  
                                                     u3191 0698  
                                                     u2720 1F0A  
                                                     u2480 19AA  
                                                     u1920 0D44  
                                                     u1840 0C54  
                                                     u1760 0AD6  
                                                     u2560 1548  
                                                     u2640 253C  
                                                     u2800 1B56  
                                                     u3360 0960  
                                                     u3280 0826  
                                                     u2721 1F04  
                                                     u2481 19A4  
                                                     u1921 0D3E  
                                                     u1841 0C4C  
                                                     u1761 0AD0  
                                                     u2625 1854  
                                                     u2561 1542  
                                                     u2641 2536  
                                                     u2801 1B50  
                                                     u3361 095A  
                                                     u3281 0820  
                                                     u2730 1F2C  
                                                     u2490 19FC  
                                                     u1930 0D6A  
                                                     u1850 0C58  
                                                     u1770 0B22  
                                                     u2570 1582  
                                                     u2810 1B82  
                                                     u2650 241C  
                                                     u3370 0982  
                                                     u3290 083E  
                                                     u2731 1F26  
                                                     u2491 19F6  
                                                     u2395 1C6E  
                                                     u1931 0D64  
                                                     u1771 0B1C  
                                                     u2555 1510  
                                                     u3507 2770  
                                                     u2811 1B7C  
                                                     u2651 2416  
                                                     u3371 097C  
                                                     u3291 0838  
                                                     u2740 1F5A  
                                                     u2900 20CE  
                                                     u1940 0DAA  
                                                     u1860 0C86  
                                                     u1780 0B3E  
                                                     u2580 15A2  
                                                     u2660 1FFE  
                                                     u2820 1BAE  
                                                     u3380 09BE  
                                                     u2741 1F54  
                                                     u2901 20C8  
                                                     u1941 0DA4  
                                                     u1861 0C80  
                                                     u1781 0B38  
                                                     u2581 159C  
                                                     u3517 2328  
                                                     u2661 1FF8  
                                                     u2821 1BA8  
                                                     u3381 09B8  
                                                     u3437 04A2  
                                                     u2910 2104  
                                                     u1950 0DF4  
                                                     u1870 0CAC  
                                                     u1790 0B56  
                                                     u2590 15E8  
                                                     u2670 2034  
                                                     u2750 2834  
                                                     u2830 1BDA  
                                                     u3390 09E6  
                                                     u2911 20FE  
                                                     u1951 0DEE  
                                                     u1871 0CA6  
                                                     u1791 0B50  
                                                     u2591 15E2  
                                                     u2575 1576  
                                                     u3527 2342  
                                                     u2671 202E  
                                                     u2751 282E  
                                                     u2831 1BD4  
                                                     u3391 09E0  
                                                     u3447 0588  
                                                     u2680 25B2  
                                                     u1960 0E32  
                                                     u1880 0CD4  
                                                     u2760 2234  
                                                     u2840 1BF6  
                                                     u2920 27F2  
                                                     u2681 25AC  
                                                     u1961 0E2C  
                                                     u1881 0CCE  
                                                     u2761 222E  
                                                     u3537 235A  
                                                     u2841 1BF0  
                                                     u2921 27EC  
                                                     u3457 067E  
                                                     u2690 1E98  
                                                     u1970 0E46  
                                                     u1890 0CE6  
                                                     u2930 23BC  
                                                     u2770 1AD2  
                                                     u2850 22A6  
                                                     u2691 1E92  
                                                     u1971 0E40  
                                                     u1891 0CE0  
                                                     u3547 27B8  
                                                     u2931 23B6  
                                                     u2771 1ACC  
                                                     u2851 22A0  
                                                     u3467 06F8  
                                                     u1980 0E78  
                                                     u2780 1AFE  
                                                     u2860 22CE  
                                                     u1981 0E72  
                                                     u3557 27C4  
                                                     u2781 1AF8  
                                                     u2861 22C8  
                                                     u3477 07D2  
                                                     u1990 0E8E  
                                                     u2790 1B2A  
                                                     u2870 22F8  
                                                     u2950 0162  
                                                     u1991 0E88  
                                                     u2791 1B24  
                                                     u2871 22F2  
                                                     u3487 098A  
                                                     u2951 015C  
                                                     u2880 21D8  
                                                     u2960 0176  
                                                     u3497 2764  
                                                     u2881 21D2  
                                                     u2961 0170  
                                                     u2890 248C  
                                                     u2970 01A6  
                                                     u2891 2486  
                                                     u2971 01A0  
                                                     u2980 01EE  
                                                     u2981 01E8  
                                                     u2990 020E  
                                                     u2991 0208  
                                                     abs@a 0001  
                                              lcd_update@i 0014  
                                                     _main 0078  
                                                     _fosc 7FE5  
                                                     fsr1h 000FE2  
                                                     fsr2h 000FDA  
                                                     indf1 000FE7  
                                                     indf2 000FDF  
                                                     fsr1l 000FE1  
                                                     fsr2l 000FD9  
                                                     _tosc 00BA  
                                                     btemp 007F  
                                              main@rx_char 006A  
                                                     prodh 000FF4  
                                            _trash_counter 0073  
                                                     prodl 000FF3  
                                                     start 0074  
         state_translator_fpga_to_micro@state_machine_code 0005  
                                             ___param_bank 000000  
                                                    ??_abs 0003  
                                            ___fltol@sign1 003C  
                                          __end_of___fladd 1034  
                                                    ?_main 0001  
                                          __end_of___awdiv 1F72  
                                          __end_of___flneg 26B2  
                                          __end_of___flmul 14D8  
                                          __end_of___flsub 262A  
                                          __end_of___fltol 1D5A  
                                                    _T0CON 000FD5  
                                          ___awdiv@divisor 0007  
                                                    i2l221 006C  
                              __end_of_update_current_coil 204C  
                                          ___awdiv@counter 0009  
                                                    _RCREG 000FAE  
                                                    _TMR0H 000FD7  
                                                    _TMR0L 000FD6  
                                                    _SPBRG 000FAF  
                                                    _PORTA 000F80  
                                                    _PORTB 000F81  
                                                    _PORTC 000F82  
                                                    _PORTD 000F83  
                                                    _TRISA 000F92  
                                                    _TRISB 000F93  
                                                    _TRISC 000F94  
                                                    _TXREG 000FAD  
                                         ?_get_temperature 003E  
                                          __end_of_lcd_dat 277E  
                                          __end_of_lcd_cmd 27D2  
                     __end_of_configure_ad_conversion_tank 2858  
                    __size_of_configure_ad_conversion_tank 001E  
                             _configure_ad_conversion_tank 283A  
                     __end_of_configure_ad_conversion_oven 2876  
                    __size_of_configure_ad_conversion_oven 001E  
                             _configure_ad_conversion_oven 2858  
                                          __end_of_lcd_str 2542  
                                                    _state 007D  
                                                    _toint 7B29  
                                                    tablat 000FF5  
                                                    ttemp5 0080  
                                                    ttemp6 0083  
                                                    ttemp7 0087  
                                                    status 000FD8  
                                                    wtemp8 0080  
                                       _end_effector_homed 006F  
                                          ??_get_reg_value 0001  
                                     get_reg_value@rx_char 0001  
                                          __initialization 262A  
                                             __end_of_main 0A8C  
                                             __end_of_fosc 7FE9  
                                    lcd_update@line_select 0010  
                                                   ??_main 0066  
                                            __activetblptr 000002  
                                          ??_rx_char_usart 0001  
                                                   _ADCON0 000FC2  
                                                   _ADCON1 000FC1  
                                         _change_direction 26F2  
                                                   _ADRESH 000FC4  
                                                   _ADRESL 000FC3  
                             __end_of_turn_on_current_coil 2594  
                            ?_configure_ad_conversion_tank 0001  
                                         ___awdiv@dividend 0005  
                            ?_configure_ad_conversion_oven 0001  
                                                   i2l2200 004E  
                                                   i2l2202 0060  
                                                   i2l2204 0064  
                                                   i2l2206 006A  
                                                   i2l2190 000C  
                                                   i2l2192 001E  
                                                   i2l2194 0030  
                                                   i2l2196 0032  
                                                   i2l2198 003A  
                                         __end_of___xxtofl 1AB6  
                                            ?_init_timer_0 0001  
                   __end_of_state_translator_fpga_to_micro 1C24  
                  __size_of_state_translator_fpga_to_micro 016E  
                           _state_translator_fpga_to_micro 1AB6  
                                            ?_init_stepper 0001  
                                         __end_of_lcd_init 238E  
                                                   ___flge 1D5A  
                                                ??___fladd 0009  
                                                   ___wmul 277E  
                                                ??___awdiv 0009  
                                                ??___flneg 0005  
                                                ??___flmul 0023  
                                                ??___flsub 0019  
                                                ??___fltol 0038  
                                                   _lcd_wr 2894  
                                                   clear_0 2650  
                                                   clear_1 265C  
                                         ___awdiv@quotient 000B  
                                                   _roundf 14D8  
                                                ??_lcd_dat 0002  
                                                ??_lcd_cmd 0002  
                                                ??_lcd_str 0009  
                                             __mediumconst 7B28  
                                                   tblptrh 000FF7  
                                                   tblptrl 000FF6  
                                                   tblptru 000FF8  
                                  reach_goal@goal_to_reach 000B  
                                               ___flge@ff1 0040  
                                               ___flge@ff2 0044  
                         update_current_coil@stepper_motor 0001  
                                             ___xxtofl@arg 0017  
                                             ___xxtofl@exp 0016  
                                             ___xxtofl@val 000D  
                                               __accesstop 0080  
                                  __end_of__initialization 2662  
                                               ___flneg@f1 0001  
                                        serial_tx_char@val 0001  
                                           ??_init_timer_0 0001  
                                            ___rparam_used 000001  
                                               ___fltol@f1 0034  
                                           ??_init_stepper 000D  
                                          _init_interrupts 28A0  
                                           __pcstackCOMRAM 0001  
                                             __pidataBANK0 2886  
                                            __end_of_toint 7B2D  
                                          _temperature_int 0086  
                                  __size_of_serial_tx_char 0020  
                      state_translator_fpga_to_micro@state 0003  
                                         _mix_current_step 0094  
                                               __pbssBANK0 0080  
                           ??_configure_ad_conversion_tank 0001  
                           ??_configure_ad_conversion_oven 0001  
                                                  ?___flge 0040  
                                                  ?___wmul 0001  
                      check_temperature@temp_to_be_checked 004C  
                                                  ?_lcd_wr 0001  
                                     _turn_on_current_coil 2542  
                                    __end_of_wait_for_zero 27F8  
                                  _hex_end_effector_values 00C0  
                                            _read_new_char 007A  
                          _grasping_joint_position_reached 0071  
                                                  ?_roundf 004C  
                                       _temperature_scaled 0084  
                                                ?___xxtofl 000D  
                                  reach_goal@stepper_motor 0009  
                                               _get_liters 2476  
                        turn_on_current_coil@stepper_motor 0001  
                                         _desired_baudrate 7B31  
                                               _lcd_update 2122  
                                                ?_lcd_init 0001  
                                  __end_of_init_interrupts 28AC  
                                               _const_msgs 7B35  
                                        _check_temperature 204C  
                            change_direction@stepper_motor 0001  
                                                  __Hparam 0000  
                                       ?_check_temperature 004C  
                                                  __Lparam 0000  
                                               _init_PORTS 2728  
                                               _init_USART 26B2  
                                          __size_of___flge 0128  
                                                  ___fladd 0A8C  
                                                  ___awdiv 1E82  
                                                  ___flneg 2670  
                                                  ___flmul 1034  
                                 __end_of_change_direction 2728  
                                                  ___flsub 25E0  
                                                  ___fltol 1C24  
                                          __size_of___wmul 002A  
                                    ?_turn_on_current_coil 0001  
                                       _state_before_error 00BE  
                                          __size_of_lcd_wr 000C  
                                      ??_check_temperature 004E  
                                                  __pcinit 262A  
                     init_stepper@hex_coil_register_values 0009  
                                                  __ramtop 0600  
                                               _reach_goal 238E  
                                                  __ptext0 0078  
                                                  __ptext1 27D2  
                                                  __ptext2 2406  
                                                  __ptext3 2286  
                                                  __ptext4 1AB6  
                                                  __ptext5 281A  
                                                  __ptext6 238E  
                                                  __ptext7 1F72  
                                                  __ptext8 2542  
                                                  __ptext9 2122  
                                                  _lcd_dat 2754  
                                                  _lcd_cmd 27A8  
                                                  _lcd_str 24E2  
                                                _T0CONbits 000FD5  
                                          __size_of_roundf 03E6  
                                             __size_of_abs 004C  
                                               ??___xxtofl 0011  
                                     __end_of_init_timer_0 281A  
                                     __end_of_init_stepper 2286  
                                            _joint_stepper 00AE  
                                               ??_lcd_init 0003  
                             __size_of_update_current_coil 00DA  
                                     end_of_initialization 2662  
                                __end_of_check_temperature 2122  
                                 __size_of_get_temperature 0070  
                                            __Lmediumconst 7B28  
                      state_translator_micro_to_fpga@state 0001  
                                    __end_of_get_reg_value 2886  
                                                _RCSTAbits 000FAB  
                                                  postdec1 000FE5  
                                                  postdec2 000FDD  
                                                  postinc0 000FEE  
                                                  postinc1 000FE6  
                                                  postinc2 000FDE  
                                                  roundf@e 0058  
                                                  roundf@u 005E  
                                                  roundf@x 004C  
                                                  roundf@y 0062  
                                               _timer_done 0079  
                                                _PORTEbits 000F84  
                         ??_state_translator_fpga_to_micro 0005  
                          ?_state_translator_fpga_to_micro 0003  
                                              ___fladd@grs 0010  
                                           _serial_tx_char 281A  
                                            ___xxtofl@sign 0015  
                                    __end_of_rx_char_usart 0074  
                                                _TRISCbits 000F94  
                                              ?_get_liters 003E  
                                               lcd_dat@val 0002  
                                               lcd_cmd@val 0002  
                                              ?_lcd_update 000C  
                                            _mix_direction 0092  
                                     _end_effector_stepper 00A2  
                                              ___flmul@grs 0028  
                                         ?_init_interrupts 0001  
                                                _TXSTAbits 000FAC  
                                         main@current_temp 0068  
                                               lcd_str@str 0007  
                                              ?_init_PORTS 0001  
                                              ?_init_USART 0001  
                                   ??_turn_on_current_coil 0003  
                                           __end_of___flge 1E82  
                   __end_of_state_translator_micro_to_fpga 2310  
                  __size_of_state_translator_micro_to_fpga 008A  
                           _state_translator_micro_to_fpga 2286  
                             _grasping_ee_position_reached 008E  
                                           __end_of___wmul 27A8  
                                           __end_of_lcd_wr 28A0  
                                              ?_reach_goal 0009  
         state_translator_micro_to_fpga@state_machine_code 0005  
                                   __end_of_serial_tx_char 283A  
                                           __end_of_roundf 18BE  
                                      start_initialization 262A  
                                              __end_of_abs 25E0  
                                         _hex_joint_values 00C4  
                               __size_of_check_temperature 00D6  
                                 init_stepper@current_coil 0003  
                                init_stepper@stepper_motor 0001  
                                        ??_get_temperature 0040  
                                                 ??___flge 0048  
                                 __end_of_desired_baudrate 7B35  
                                      __size_of_get_liters 006C  
                                                 ??___wmul 0005  
                                      __size_of_lcd_update 00BC  
                                                 ??_lcd_wr 0001  
                                              __pdataBANK0 00BA  
                                    check_temperature@grad 004E  
                                    __size_of_init_timer_0 0022  
                                    __size_of_init_stepper 00A8  
                                                 ??_roundf 0050  
                                          ?_serial_tx_char 0001  
                                                ___fladd@a 0005  
                                                ___fladd@b 0001  
                                                ___flmul@a 001F  
                                                ___flmul@b 001B  
                                              __pbssCOMRAM 006F  
                                                ___flsub@a 0015  
                                                ___flsub@b 0011  
                                        __size_of___xxtofl 01F8  
                                      __size_of_init_PORTS 002C  
                                      __size_of_init_USART 0040  
                                        __size_of_lcd_init 007E  
                                      __size_of_reach_goal 0078  
                                             _init_timer_0 27F8  
                                                _main$1677 006B  
                                             _init_stepper 21DE  
                                    init_stepper@direction 0007  
                                                __pintcode 0008  
                                            __pmediumconst 7B28  
                                                 ?___fladd 0001  
                                                 ?___awdiv 0005  
                                                 ?___flneg 0001  
                                                 ?___flmul 001B  
                                                 ?___flsub 0011  
                                                 ?___fltol 0034  
                                      _update_current_coil 1F72  
                                        ?_change_direction 0001  
                                       ??_change_direction 0003  
                                                 ?_lcd_dat 0001  
                                                 ?_lcd_cmd 0001  
                                                 ?_lcd_str 0007  
                                         _mix_step_counter 0090  
                                     ?_update_current_coil 0001  
                                   __size_of_wait_for_zero 0026  
                                           ___wmul@product 0005  
                                                 _LATAbits 000F89  
                                                 _LATCbits 000F8B  
                                                 _PIE1bits 000F9D  
                                    _joint_dilutor_stepper 0096  
                                                 i2u170_40 001C  
                                                 i2u170_41 0016  
                                                 i2u171_40 002E  
                                                 i2u171_41 0028  
                                                 i2u172_40 004C  
                                                 i2u172_41 0046  
                                                 i2u173_40 005E  
                                                 i2u173_41 0058  
                                                 _PIR1bits 000F9E  
                                               _ADCON0bits 000FC2  
                                        ___wmul@multiplier 0001  
                                                lcd_wr@val 0001  
                                             ??_get_liters 0040  
                                             ??_lcd_update 000E  
                                    ??_update_current_coil 0003  
                                                copy_data0 263E  
                                               roundf@F525 0080  
                                                 __Hrparam 0000  
                                             ??_init_PORTS 0001  
                                             ??_init_USART 0066  
                                                 __Lrparam 0000  
                                       __end_of_get_liters 24E2  
                                         __size_of___fladd 05A8  
                                         __size_of___awdiv 00F0  
                                         __size_of___flneg 0042  
                                         __size_of___flmul 04A4  
                                         __size_of___flsub 004A  
                                         __size_of___fltol 0136  
                                       __end_of_lcd_update 21DE  
                                            _wait_for_zero 27D2  
                                             ??_reach_goal 000D  
                                          lcd_update@F2151 7B2D  
                                         __size_of_lcd_dat 002A  
                                         __size_of_lcd_cmd 002A  
                                         __size_of_lcd_str 0060  
                                       __end_of_const_msgs 7FE5  
                                                 ___xxtofl 18BE  
                                                 __ptext10 24E2  
                                                 __ptext11 2754  
                                                 __ptext20 14D8  
                                                 __ptext12 277E  
                                                 __ptext21 25E0  
                                                 __ptext13 2310  
                                                 __ptext30 2858  
                                                 __ptext22 0A8C  
                                                 __ptext14 27A8  
                                                 __ptext31 204C  
                                                 __ptext23 2670  
                                                 __ptext15 2894  
                                                 __ptext32 2594  
                                                 __ptext24 2728  
                                                 __ptext16 27F8  
                                                 __ptext33 18BE  
                                                 __ptext25 2876  
                                                 __ptext17 21DE  
                                                 __ptext34 1D5A  
                                                 __ptext26 2476  
                                                 __ptext18 28A0  
                                                 __ptext35 1E82  
                                                 __ptext27 1C24  
                                                 __ptext19 26B2  
                                                 __ptext36 26F2  
                                                 __ptext28 1034  
                                                 __ptext29 283A  
                         ??_state_translator_micro_to_fpga 0003  
                          ?_state_translator_micro_to_fpga 0001  
                                   __size_of_get_reg_value 0010  
                                       __end_of_init_PORTS 2754  
                                                 _lcd_init 2310  
                                       __end_of_init_USART 26F2  
                                          _get_temperature 2406  
                                          lcd_update@state 000C  
                                _diluting_position_reached 008C  
                                            __size_of_main 0A14  
                                              _joint_homed 008A  
                                       __end_of_reach_goal 2406  
                                   __size_of_rx_char_usart 006C  
                                 __size_of_init_interrupts 000C  
                                                 int$flags 007F  
                                         ??_serial_tx_char 0001  
                            __size_of_turn_on_current_coil 0052  
                                           ?_wait_for_zero 0001  
                                                 lcd_str@i 000B  
                                              _mix_counter 0077  
                                               _INTCONbits 000FF2  
                                            _idle_msg_sent 007B  
                                                 intlevel2 28AC  
                                      _joint_dilutor_homed 0088  
                                  __end_oflcd_update@F2151 7B31  
                                            _get_reg_value 2876  
                                            init_stepper@i 000F  
                                            _dilution_done 0075  
                                  __end_of_get_temperature 2476  
                                 init_stepper@step_counter 0005  
                                            _rx_char_usart 0008  
                                __size_of_change_direction 0036  
                                            ___fladd@signs 000D  
                                             ___fladd@aexp 000E  
                                             ___fladd@bexp 000F  
                                              _roundf$1678 005A  
                                              _roundf$1679 0054  
