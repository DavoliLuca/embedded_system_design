

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Jun 21 20:20:24 2023

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    53                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    55  0000                     
    56                           ; Version 2.20
    57                           ; Generated 12/02/2020 GMT
    58                           ; 
    59                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F452 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     
    91                           	psect	idataBANK0
    92  00289A                     __pidataBANK0:
    93                           	callstack 0
    94                           
    95                           ;initializer for _tosc
    96  00289A  37BD               	dw	14269
    97  00289C  3486               	dw	13446
    98                           
    99                           ;initializer for _state_before_error
   100  00289E  0008               	dw	8
   101                           
   102                           ;initializer for _hex_end_effector_values
   103  0028A0  10                 	db	16
   104  0028A1  20                 	db	32
   105  0028A2  40                 	db	64
   106  0028A3  80                 	db	128
   107                           
   108                           ;initializer for _hex_joint_values
   109  0028A4  01                 	db	1
   110  0028A5  02                 	db	2
   111  0028A6  04                 	db	4
   112  0028A7  08                 	db	8
   113                           
   114                           	psect	mediumconst
   115  007B28                     __pmediumconst:
   116                           	callstack 0
   117  007B28  00                 	db	0
   118  007B29  0000               	dw	0
   119  007B2B  4B00               	dw	19200
   120  007B2D                     __end_of_toint:
   121                           	callstack 0
   122  007B2D                     lcd_update@F2139:
   123                           	callstack 0
   124  007B2D  80                 	db	128
   125  007B2E  C0                 	db	192
   126  007B2F  94                 	db	148
   127  007B30  D4                 	db	212
   128  007B31                     __end_oflcd_update@F2139:
   129                           	callstack 0
   130  007B31  0000               	dw	0
   131  007B33  4616               	dw	17942
   132  007B35                     __end_of_desired_baudrate:
   133                           	callstack 0
   134  007B35                     _const_msgs:
   135                           	callstack 0
   136  007B35  49                 	db	73
   137  007B36  44                 	db	68
   138  007B37  4C                 	db	76
   139  007B38  45                 	db	69
   140  007B39  3A                 	db	58
   141  007B3A  20                 	db	32
   142  007B3B  77                 	db	119
   143  007B3C  61                 	db	97
   144  007B3D  69                 	db	105
   145  007B3E  74                 	db	116
   146  007B3F  69                 	db	105
   147  007B40  6E                 	db	110
   148  007B41  67                 	db	103
   149  007B42  20                 	db	32
   150  007B43  66                 	db	102
   151  007B44  6F                 	db	111
   152  007B45  72                 	db	114
   153  007B46  00                 	db	0
   154  007B47  00                 	db	0
   155  007B48  00                 	db	0
   156  007B49  76                 	db	118
   157  007B4A  69                 	db	105
   158  007B4B  61                 	db	97
   159  007B4C  6C                 	db	108
   160  007B4D  20                 	db	32
   161  007B4E  74                 	db	116
   162  007B4F  6F                 	db	111
   163  007B50  20                 	db	32
   164  007B51  62                 	db	98
   165  007B52  65                 	db	101
   166  007B53  20                 	db	32
   167  007B54  70                 	db	112
   168  007B55  6C                 	db	108
   169  007B56  61                 	db	97
   170  007B57  63                 	db	99
   171  007B58  65                 	db	101
   172  007B59  64                 	db	100
   173  007B5A  00                 	db	0
   174  007B5B  00                 	db	0
   175  007B5C  00                 	db	0
   176  007B5D  69                 	db	105
   177  007B5E  6E                 	db	110
   178  007B5F  20                 	db	32
   179  007B60  69                 	db	105
   180  007B61  6E                 	db	110
   181  007B62  69                 	db	105
   182  007B63  74                 	db	116
   183  007B64  20                 	db	32
   184  007B65  70                 	db	112
   185  007B66  6F                 	db	111
   186  007B67  73                 	db	115
   187  007B68  00                 	db	0
   188  007B69  00                 	db	0
   189  007B6A  00                 	db	0
   190  007B6B  00                 	db	0
   191  007B6C  00                 	db	0
   192  007B6D  00                 	db	0
   193  007B6E  00                 	db	0
   194  007B6F  00                 	db	0
   195  007B70  00                 	db	0
   196  007B71  00                 	db	0
   197  007B72  00                 	db	0
   198  007B73  00                 	db	0
   199  007B74  00                 	db	0
   200  007B75  00                 	db	0
   201  007B76  00                 	db	0
   202  007B77  00                 	db	0
   203  007B78  00                 	db	0
   204  007B79  00                 	db	0
   205  007B7A  00                 	db	0
   206  007B7B  00                 	db	0
   207  007B7C  00                 	db	0
   208  007B7D  00                 	db	0
   209  007B7E  00                 	db	0
   210  007B7F  00                 	db	0
   211  007B80  00                 	db	0
   212  007B81  00                 	db	0
   213  007B82  00                 	db	0
   214  007B83  00                 	db	0
   215  007B84  00                 	db	0
   216  007B85  49                 	db	73
   217  007B86  4E                 	db	78
   218  007B87  49                 	db	73
   219  007B88  54                 	db	84
   220  007B89  5F                 	db	95
   221  007B8A  50                 	db	80
   222  007B8B  4F                 	db	79
   223  007B8C  53                 	db	83
   224  007B8D  3A                 	db	58
   225  007B8E  20                 	db	32
   226  007B8F  74                 	db	116
   227  007B90  68                 	db	104
   228  007B91  65                 	db	101
   229  007B92  20                 	db	32
   230  007B93  76                 	db	118
   231  007B94  69                 	db	105
   232  007B95  61                 	db	97
   233  007B96  6C                 	db	108
   234  007B97  00                 	db	0
   235  007B98  00                 	db	0
   236  007B99  69                 	db	105
   237  007B9A  73                 	db	115
   238  007B9B  20                 	db	32
   239  007B9C  61                 	db	97
   240  007B9D  74                 	db	116
   241  007B9E  20                 	db	32
   242  007B9F  74                 	db	116
   243  007BA0  68                 	db	104
   244  007BA1  65                 	db	101
   245  007BA2  20                 	db	32
   246  007BA3  69                 	db	105
   247  007BA4  6E                 	db	110
   248  007BA5  69                 	db	105
   249  007BA6  74                 	db	116
   250  007BA7  20                 	db	32
   251  007BA8  70                 	db	112
   252  007BA9  6F                 	db	111
   253  007BAA  73                 	db	115
   254  007BAB  00                 	db	0
   255  007BAC  00                 	db	0
   256  007BAD  70                 	db	112
   257  007BAE  72                 	db	114
   258  007BAF  6F                 	db	111
   259  007BB0  63                 	db	99
   260  007BB1  65                 	db	101
   261  007BB2  73                 	db	115
   262  007BB3  73                 	db	115
   263  007BB4  20                 	db	32
   264  007BB5  69                 	db	105
   265  007BB6  73                 	db	115
   266  007BB7  20                 	db	32
   267  007BB8  73                 	db	115
   268  007BB9  74                 	db	116
   269  007BBA  61                 	db	97
   270  007BBB  72                 	db	114
   271  007BBC  74                 	db	116
   272  007BBD  69                 	db	105
   273  007BBE  6E                 	db	110
   274  007BBF  67                 	db	103
   275  007BC0  00                 	db	0
   276  007BC1  00                 	db	0
   277  007BC2  00                 	db	0
   278  007BC3  00                 	db	0
   279  007BC4  00                 	db	0
   280  007BC5  00                 	db	0
   281  007BC6  00                 	db	0
   282  007BC7  00                 	db	0
   283  007BC8  00                 	db	0
   284  007BC9  00                 	db	0
   285  007BCA  00                 	db	0
   286  007BCB  00                 	db	0
   287  007BCC  00                 	db	0
   288  007BCD  00                 	db	0
   289  007BCE  00                 	db	0
   290  007BCF  00                 	db	0
   291  007BD0  00                 	db	0
   292  007BD1  00                 	db	0
   293  007BD2  00                 	db	0
   294  007BD3  00                 	db	0
   295  007BD4  00                 	db	0
   296  007BD5  4D                 	db	77
   297  007BD6  4F                 	db	79
   298  007BD7  56                 	db	86
   299  007BD8  45                 	db	69
   300  007BD9  4D                 	db	77
   301  007BDA  45                 	db	69
   302  007BDB  4E                 	db	78
   303  007BDC  54                 	db	84
   304  007BDD  00                 	db	0
   305  007BDE  00                 	db	0
   306  007BDF  00                 	db	0
   307  007BE0  00                 	db	0
   308  007BE1  00                 	db	0
   309  007BE2  00                 	db	0
   310  007BE3  00                 	db	0
   311  007BE4  00                 	db	0
   312  007BE5  00                 	db	0
   313  007BE6  00                 	db	0
   314  007BE7  00                 	db	0
   315  007BE8  00                 	db	0
   316  007BE9  00                 	db	0
   317  007BEA  00                 	db	0
   318  007BEB  00                 	db	0
   319  007BEC  00                 	db	0
   320  007BED  00                 	db	0
   321  007BEE  00                 	db	0
   322  007BEF  00                 	db	0
   323  007BF0  00                 	db	0
   324  007BF1  00                 	db	0
   325  007BF2  00                 	db	0
   326  007BF3  00                 	db	0
   327  007BF4  00                 	db	0
   328  007BF5  00                 	db	0
   329  007BF6  00                 	db	0
   330  007BF7  00                 	db	0
   331  007BF8  00                 	db	0
   332  007BF9  00                 	db	0
   333  007BFA  00                 	db	0
   334  007BFB  00                 	db	0
   335  007BFC  00                 	db	0
   336  007BFD  00                 	db	0
   337  007BFE  00                 	db	0
   338  007BFF  00                 	db	0
   339  007C00  00                 	db	0
   340  007C01  00                 	db	0
   341  007C02  00                 	db	0
   342  007C03  00                 	db	0
   343  007C04  00                 	db	0
   344  007C05  00                 	db	0
   345  007C06  00                 	db	0
   346  007C07  00                 	db	0
   347  007C08  00                 	db	0
   348  007C09  00                 	db	0
   349  007C0A  00                 	db	0
   350  007C0B  00                 	db	0
   351  007C0C  00                 	db	0
   352  007C0D  00                 	db	0
   353  007C0E  00                 	db	0
   354  007C0F  00                 	db	0
   355  007C10  00                 	db	0
   356  007C11  00                 	db	0
   357  007C12  00                 	db	0
   358  007C13  00                 	db	0
   359  007C14  00                 	db	0
   360  007C15  00                 	db	0
   361  007C16  00                 	db	0
   362  007C17  00                 	db	0
   363  007C18  00                 	db	0
   364  007C19  00                 	db	0
   365  007C1A  00                 	db	0
   366  007C1B  00                 	db	0
   367  007C1C  00                 	db	0
   368  007C1D  00                 	db	0
   369  007C1E  00                 	db	0
   370  007C1F  00                 	db	0
   371  007C20  00                 	db	0
   372  007C21  00                 	db	0
   373  007C22  00                 	db	0
   374  007C23  00                 	db	0
   375  007C24  00                 	db	0
   376  007C25  4F                 	db	79
   377  007C26  56                 	db	86
   378  007C27  45                 	db	69
   379  007C28  4E                 	db	78
   380  007C29  3A                 	db	58
   381  007C2A  00                 	db	0
   382  007C2B  00                 	db	0
   383  007C2C  00                 	db	0
   384  007C2D  00                 	db	0
   385  007C2E  00                 	db	0
   386  007C2F  00                 	db	0
   387  007C30  00                 	db	0
   388  007C31  00                 	db	0
   389  007C32  00                 	db	0
   390  007C33  00                 	db	0
   391  007C34  00                 	db	0
   392  007C35  00                 	db	0
   393  007C36  00                 	db	0
   394  007C37  00                 	db	0
   395  007C38  00                 	db	0
   396  007C39  76                 	db	118
   397  007C3A  69                 	db	105
   398  007C3B  61                 	db	97
   399  007C3C  6C                 	db	108
   400  007C3D  20                 	db	32
   401  007C3E  68                 	db	104
   402  007C3F  61                 	db	97
   403  007C40  73                 	db	115
   404  007C41  20                 	db	32
   405  007C42  72                 	db	114
   406  007C43  65                 	db	101
   407  007C44  61                 	db	97
   408  007C45  63                 	db	99
   409  007C46  68                 	db	104
   410  007C47  65                 	db	101
   411  007C48  64                 	db	100
   412  007C49  00                 	db	0
   413  007C4A  00                 	db	0
   414  007C4B  00                 	db	0
   415  007C4C  00                 	db	0
   416  007C4D  74                 	db	116
   417  007C4E  68                 	db	104
   418  007C4F  65                 	db	101
   419  007C50  20                 	db	32
   420  007C51  6F                 	db	111
   421  007C52  76                 	db	118
   422  007C53  65                 	db	101
   423  007C54  6E                 	db	110
   424  007C55  00                 	db	0
   425  007C56  00                 	db	0
   426  007C57  00                 	db	0
   427  007C58  00                 	db	0
   428  007C59  00                 	db	0
   429  007C5A  00                 	db	0
   430  007C5B  00                 	db	0
   431  007C5C  00                 	db	0
   432  007C5D  00                 	db	0
   433  007C5E  00                 	db	0
   434  007C5F  00                 	db	0
   435  007C60  00                 	db	0
   436  007C61  00                 	db	0
   437  007C62  00                 	db	0
   438  007C63  00                 	db	0
   439  007C64  00                 	db	0
   440  007C65  00                 	db	0
   441  007C66  00                 	db	0
   442  007C67  00                 	db	0
   443  007C68  00                 	db	0
   444  007C69  00                 	db	0
   445  007C6A  00                 	db	0
   446  007C6B  00                 	db	0
   447  007C6C  00                 	db	0
   448  007C6D  00                 	db	0
   449  007C6E  00                 	db	0
   450  007C6F  00                 	db	0
   451  007C70  00                 	db	0
   452  007C71  00                 	db	0
   453  007C72  00                 	db	0
   454  007C73  00                 	db	0
   455  007C74  00                 	db	0
   456  007C75  4F                 	db	79
   457  007C76  56                 	db	86
   458  007C77  45                 	db	69
   459  007C78  4E                 	db	78
   460  007C79  3A                 	db	58
   461  007C7A  20                 	db	32
   462  007C7B  72                 	db	114
   463  007C7C  65                 	db	101
   464  007C7D  61                 	db	97
   465  007C7E  63                 	db	99
   466  007C7F  68                 	db	104
   467  007C80  69                 	db	105
   468  007C81  6E                 	db	110
   469  007C82  67                 	db	103
   470  007C83  20                 	db	32
   471  007C84  74                 	db	116
   472  007C85  68                 	db	104
   473  007C86  65                 	db	101
   474  007C87  00                 	db	0
   475  007C88  00                 	db	0
   476  007C89  63                 	db	99
   477  007C8A  6F                 	db	111
   478  007C8B  72                 	db	114
   479  007C8C  72                 	db	114
   480  007C8D  65                 	db	101
   481  007C8E  63                 	db	99
   482  007C8F  74                 	db	116
   483  007C90  20                 	db	32
   484  007C91  74                 	db	116
   485  007C92  65                 	db	101
   486  007C93  6D                 	db	109
   487  007C94  70                 	db	112
   488  007C95  65                 	db	101
   489  007C96  72                 	db	114
   490  007C97  61                 	db	97
   491  007C98  74                 	db	116
   492  007C99  75                 	db	117
   493  007C9A  72                 	db	114
   494  007C9B  65                 	db	101
   495  007C9C  00                 	db	0
   496  007C9D  00                 	db	0
   497  007C9E  00                 	db	0
   498  007C9F  00                 	db	0
   499  007CA0  00                 	db	0
   500  007CA1  00                 	db	0
   501  007CA2  00                 	db	0
   502  007CA3  00                 	db	0
   503  007CA4  00                 	db	0
   504  007CA5  00                 	db	0
   505  007CA6  00                 	db	0
   506  007CA7  00                 	db	0
   507  007CA8  00                 	db	0
   508  007CA9  00                 	db	0
   509  007CAA  00                 	db	0
   510  007CAB  00                 	db	0
   511  007CAC  00                 	db	0
   512  007CAD  00                 	db	0
   513  007CAE  00                 	db	0
   514  007CAF  00                 	db	0
   515  007CB0  00                 	db	0
   516  007CB1  00                 	db	0
   517  007CB2  00                 	db	0
   518  007CB3  00                 	db	0
   519  007CB4  00                 	db	0
   520  007CB5  00                 	db	0
   521  007CB6  00                 	db	0
   522  007CB7  00                 	db	0
   523  007CB8  00                 	db	0
   524  007CB9  00                 	db	0
   525  007CBA  00                 	db	0
   526  007CBB  00                 	db	0
   527  007CBC  00                 	db	0
   528  007CBD  00                 	db	0
   529  007CBE  00                 	db	0
   530  007CBF  00                 	db	0
   531  007CC0  00                 	db	0
   532  007CC1  00                 	db	0
   533  007CC2  00                 	db	0
   534  007CC3  00                 	db	0
   535  007CC4  00                 	db	0
   536  007CC5  47                 	db	71
   537  007CC6  52                 	db	82
   538  007CC7  41                 	db	65
   539  007CC8  53                 	db	83
   540  007CC9  50                 	db	80
   541  007CCA  49                 	db	73
   542  007CCB  4E                 	db	78
   543  007CCC  47                 	db	71
   544  007CCD  3A                 	db	58
   545  007CCE  20                 	db	32
   546  007CCF  74                 	db	116
   547  007CD0  68                 	db	104
   548  007CD1  65                 	db	101
   549  007CD2  20                 	db	32
   550  007CD3  76                 	db	118
   551  007CD4  69                 	db	105
   552  007CD5  61                 	db	97
   553  007CD6  6C                 	db	108
   554  007CD7  00                 	db	0
   555  007CD8  00                 	db	0
   556  007CD9  68                 	db	104
   557  007CDA  61                 	db	97
   558  007CDB  73                 	db	115
   559  007CDC  20                 	db	32
   560  007CDD  72                 	db	114
   561  007CDE  65                 	db	101
   562  007CDF  61                 	db	97
   563  007CE0  63                 	db	99
   564  007CE1  68                 	db	104
   565  007CE2  65                 	db	101
   566  007CE3  64                 	db	100
   567  007CE4  20                 	db	32
   568  007CE5  74                 	db	116
   569  007CE6  68                 	db	104
   570  007CE7  65                 	db	101
   571  007CE8  00                 	db	0
   572  007CE9  00                 	db	0
   573  007CEA  00                 	db	0
   574  007CEB  00                 	db	0
   575  007CEC  00                 	db	0
   576  007CED  6D                 	db	109
   577  007CEE  69                 	db	105
   578  007CEF  78                 	db	120
   579  007CF0  69                 	db	105
   580  007CF1  6E                 	db	110
   581  007CF2  67                 	db	103
   582  007CF3  20                 	db	32
   583  007CF4  73                 	db	115
   584  007CF5  74                 	db	116
   585  007CF6  61                 	db	97
   586  007CF7  74                 	db	116
   587  007CF8  69                 	db	105
   588  007CF9  6F                 	db	111
   589  007CFA  6E                 	db	110
   590  007CFB  00                 	db	0
   591  007CFC  00                 	db	0
   592  007CFD  00                 	db	0
   593  007CFE  00                 	db	0
   594  007CFF  00                 	db	0
   595  007D00  00                 	db	0
   596  007D01  00                 	db	0
   597  007D02  00                 	db	0
   598  007D03  00                 	db	0
   599  007D04  00                 	db	0
   600  007D05  00                 	db	0
   601  007D06  00                 	db	0
   602  007D07  00                 	db	0
   603  007D08  00                 	db	0
   604  007D09  00                 	db	0
   605  007D0A  00                 	db	0
   606  007D0B  00                 	db	0
   607  007D0C  00                 	db	0
   608  007D0D  00                 	db	0
   609  007D0E  00                 	db	0
   610  007D0F  00                 	db	0
   611  007D10  00                 	db	0
   612  007D11  00                 	db	0
   613  007D12  00                 	db	0
   614  007D13  00                 	db	0
   615  007D14  00                 	db	0
   616  007D15  47                 	db	71
   617  007D16  52                 	db	82
   618  007D17  41                 	db	65
   619  007D18  53                 	db	83
   620  007D19  50                 	db	80
   621  007D1A  49                 	db	73
   622  007D1B  4E                 	db	78
   623  007D1C  47                 	db	71
   624  007D1D  3A                 	db	58
   625  007D1E  00                 	db	0
   626  007D1F  00                 	db	0
   627  007D20  00                 	db	0
   628  007D21  00                 	db	0
   629  007D22  00                 	db	0
   630  007D23  00                 	db	0
   631  007D24  00                 	db	0
   632  007D25  00                 	db	0
   633  007D26  00                 	db	0
   634  007D27  00                 	db	0
   635  007D28  00                 	db	0
   636  007D29  67                 	db	103
   637  007D2A  72                 	db	114
   638  007D2B  61                 	db	97
   639  007D2C  73                 	db	115
   640  007D2D  70                 	db	112
   641  007D2E  69                 	db	105
   642  007D2F  6E                 	db	110
   643  007D30  67                 	db	103
   644  007D31  20                 	db	32
   645  007D32  68                 	db	104
   646  007D33  61                 	db	97
   647  007D34  73                 	db	115
   648  007D35  00                 	db	0
   649  007D36  00                 	db	0
   650  007D37  00                 	db	0
   651  007D38  00                 	db	0
   652  007D39  00                 	db	0
   653  007D3A  00                 	db	0
   654  007D3B  00                 	db	0
   655  007D3C  00                 	db	0
   656  007D3D  73                 	db	115
   657  007D3E  74                 	db	116
   658  007D3F  61                 	db	97
   659  007D40  72                 	db	114
   660  007D41  74                 	db	116
   661  007D42  65                 	db	101
   662  007D43  64                 	db	100
   663  007D44  00                 	db	0
   664  007D45  00                 	db	0
   665  007D46  00                 	db	0
   666  007D47  00                 	db	0
   667  007D48  00                 	db	0
   668  007D49  00                 	db	0
   669  007D4A  00                 	db	0
   670  007D4B  00                 	db	0
   671  007D4C  00                 	db	0
   672  007D4D  00                 	db	0
   673  007D4E  00                 	db	0
   674  007D4F  00                 	db	0
   675  007D50  00                 	db	0
   676  007D51  00                 	db	0
   677  007D52  00                 	db	0
   678  007D53  00                 	db	0
   679  007D54  00                 	db	0
   680  007D55  00                 	db	0
   681  007D56  00                 	db	0
   682  007D57  00                 	db	0
   683  007D58  00                 	db	0
   684  007D59  00                 	db	0
   685  007D5A  00                 	db	0
   686  007D5B  00                 	db	0
   687  007D5C  00                 	db	0
   688  007D5D  00                 	db	0
   689  007D5E  00                 	db	0
   690  007D5F  00                 	db	0
   691  007D60  00                 	db	0
   692  007D61  00                 	db	0
   693  007D62  00                 	db	0
   694  007D63  00                 	db	0
   695  007D64  00                 	db	0
   696  007D65  4D                 	db	77
   697  007D66  49                 	db	73
   698  007D67  58                 	db	88
   699  007D68  49                 	db	73
   700  007D69  4E                 	db	78
   701  007D6A  47                 	db	71
   702  007D6B  3A                 	db	58
   703  007D6C  20                 	db	32
   704  007D6D  74                 	db	116
   705  007D6E  68                 	db	104
   706  007D6F  65                 	db	101
   707  007D70  20                 	db	32
   708  007D71  76                 	db	118
   709  007D72  69                 	db	105
   710  007D73  61                 	db	97
   711  007D74  6C                 	db	108
   712  007D75  00                 	db	0
   713  007D76  00                 	db	0
   714  007D77  00                 	db	0
   715  007D78  00                 	db	0
   716  007D79  77                 	db	119
   717  007D7A  69                 	db	105
   718  007D7B  6C                 	db	108
   719  007D7C  6C                 	db	108
   720  007D7D  20                 	db	32
   721  007D7E  6E                 	db	110
   722  007D7F  6F                 	db	111
   723  007D80  77                 	db	119
   724  007D81  20                 	db	32
   725  007D82  62                 	db	98
   726  007D83  65                 	db	101
   727  007D84  00                 	db	0
   728  007D85  00                 	db	0
   729  007D86  00                 	db	0
   730  007D87  00                 	db	0
   731  007D88  00                 	db	0
   732  007D89  00                 	db	0
   733  007D8A  00                 	db	0
   734  007D8B  00                 	db	0
   735  007D8C  00                 	db	0
   736  007D8D  74                 	db	116
   737  007D8E  69                 	db	105
   738  007D8F  6C                 	db	108
   739  007D90  74                 	db	116
   740  007D91  65                 	db	101
   741  007D92  64                 	db	100
   742  007D93  20                 	db	32
   743  007D94  31                 	db	49
   744  007D95  30                 	db	48
   745  007D96  20                 	db	32
   746  007D97  74                 	db	116
   747  007D98  69                 	db	105
   748  007D99  6D                 	db	109
   749  007D9A  65                 	db	101
   750  007D9B  73                 	db	115
   751  007D9C  00                 	db	0
   752  007D9D  00                 	db	0
   753  007D9E  00                 	db	0
   754  007D9F  00                 	db	0
   755  007DA0  00                 	db	0
   756  007DA1  00                 	db	0
   757  007DA2  00                 	db	0
   758  007DA3  00                 	db	0
   759  007DA4  00                 	db	0
   760  007DA5  00                 	db	0
   761  007DA6  00                 	db	0
   762  007DA7  00                 	db	0
   763  007DA8  00                 	db	0
   764  007DA9  00                 	db	0
   765  007DAA  00                 	db	0
   766  007DAB  00                 	db	0
   767  007DAC  00                 	db	0
   768  007DAD  00                 	db	0
   769  007DAE  00                 	db	0
   770  007DAF  00                 	db	0
   771  007DB0  00                 	db	0
   772  007DB1  00                 	db	0
   773  007DB2  00                 	db	0
   774  007DB3  00                 	db	0
   775  007DB4  00                 	db	0
   776  007DB5  44                 	db	68
   777  007DB6  49                 	db	73
   778  007DB7  4C                 	db	76
   779  007DB8  55                 	db	85
   780  007DB9  54                 	db	84
   781  007DBA  49                 	db	73
   782  007DBB  4E                 	db	78
   783  007DBC  47                 	db	71
   784  007DBD  3A                 	db	58
   785  007DBE  20                 	db	32
   786  007DBF  74                 	db	116
   787  007DC0  68                 	db	104
   788  007DC1  65                 	db	101
   789  007DC2  00                 	db	0
   790  007DC3  00                 	db	0
   791  007DC4  00                 	db	0
   792  007DC5  00                 	db	0
   793  007DC6  00                 	db	0
   794  007DC7  00                 	db	0
   795  007DC8  00                 	db	0
   796  007DC9  76                 	db	118
   797  007DCA  61                 	db	97
   798  007DCB  63                 	db	99
   799  007DCC  63                 	db	99
   800  007DCD  69                 	db	105
   801  007DCE  6E                 	db	110
   802  007DCF  65                 	db	101
   803  007DD0  20                 	db	32
   804  007DD1  77                 	db	119
   805  007DD2  69                 	db	105
   806  007DD3  6C                 	db	108
   807  007DD4  6C                 	db	108
   808  007DD5  20                 	db	32
   809  007DD6  6E                 	db	110
   810  007DD7  6F                 	db	111
   811  007DD8  77                 	db	119
   812  007DD9  00                 	db	0
   813  007DDA  00                 	db	0
   814  007DDB  00                 	db	0
   815  007DDC  00                 	db	0
   816  007DDD  62                 	db	98
   817  007DDE  65                 	db	101
   818  007DDF  20                 	db	32
   819  007DE0  64                 	db	100
   820  007DE1  69                 	db	105
   821  007DE2  6C                 	db	108
   822  007DE3  75                 	db	117
   823  007DE4  74                 	db	116
   824  007DE5  65                 	db	101
   825  007DE6  64                 	db	100
   826  007DE7  00                 	db	0
   827  007DE8  00                 	db	0
   828  007DE9  00                 	db	0
   829  007DEA  00                 	db	0
   830  007DEB  00                 	db	0
   831  007DEC  00                 	db	0
   832  007DED  00                 	db	0
   833  007DEE  00                 	db	0
   834  007DEF  00                 	db	0
   835  007DF0  00                 	db	0
   836  007DF1  00                 	db	0
   837  007DF2  00                 	db	0
   838  007DF3  00                 	db	0
   839  007DF4  00                 	db	0
   840  007DF5  00                 	db	0
   841  007DF6  00                 	db	0
   842  007DF7  00                 	db	0
   843  007DF8  00                 	db	0
   844  007DF9  00                 	db	0
   845  007DFA  00                 	db	0
   846  007DFB  00                 	db	0
   847  007DFC  00                 	db	0
   848  007DFD  00                 	db	0
   849  007DFE  00                 	db	0
   850  007DFF  00                 	db	0
   851  007E00  00                 	db	0
   852  007E01  00                 	db	0
   853  007E02  00                 	db	0
   854  007E03  00                 	db	0
   855  007E04  00                 	db	0
   856  007E05  52                 	db	82
   857  007E06  45                 	db	69
   858  007E07  4C                 	db	76
   859  007E08  45                 	db	69
   860  007E09  41                 	db	65
   861  007E0A  53                 	db	83
   862  007E0B  49                 	db	73
   863  007E0C  4E                 	db	78
   864  007E0D  47                 	db	71
   865  007E0E  3A                 	db	58
   866  007E0F  00                 	db	0
   867  007E10  00                 	db	0
   868  007E11  00                 	db	0
   869  007E12  00                 	db	0
   870  007E13  00                 	db	0
   871  007E14  00                 	db	0
   872  007E15  00                 	db	0
   873  007E16  00                 	db	0
   874  007E17  00                 	db	0
   875  007E18  00                 	db	0
   876  007E19  72                 	db	114
   877  007E1A  65                 	db	101
   878  007E1B  6C                 	db	108
   879  007E1C  65                 	db	101
   880  007E1D  61                 	db	97
   881  007E1E  73                 	db	115
   882  007E1F  69                 	db	105
   883  007E20  6E                 	db	110
   884  007E21  67                 	db	103
   885  007E22  20                 	db	32
   886  007E23  68                 	db	104
   887  007E24  61                 	db	97
   888  007E25  73                 	db	115
   889  007E26  00                 	db	0
   890  007E27  00                 	db	0
   891  007E28  00                 	db	0
   892  007E29  00                 	db	0
   893  007E2A  00                 	db	0
   894  007E2B  00                 	db	0
   895  007E2C  00                 	db	0
   896  007E2D  73                 	db	115
   897  007E2E  74                 	db	116
   898  007E2F  61                 	db	97
   899  007E30  72                 	db	114
   900  007E31  74                 	db	116
   901  007E32  65                 	db	101
   902  007E33  64                 	db	100
   903  007E34  00                 	db	0
   904  007E35  00                 	db	0
   905  007E36  00                 	db	0
   906  007E37  00                 	db	0
   907  007E38  00                 	db	0
   908  007E39  00                 	db	0
   909  007E3A  00                 	db	0
   910  007E3B  00                 	db	0
   911  007E3C  00                 	db	0
   912  007E3D  00                 	db	0
   913  007E3E  00                 	db	0
   914  007E3F  00                 	db	0
   915  007E40  00                 	db	0
   916  007E41  00                 	db	0
   917  007E42  00                 	db	0
   918  007E43  00                 	db	0
   919  007E44  00                 	db	0
   920  007E45  00                 	db	0
   921  007E46  00                 	db	0
   922  007E47  00                 	db	0
   923  007E48  00                 	db	0
   924  007E49  00                 	db	0
   925  007E4A  00                 	db	0
   926  007E4B  00                 	db	0
   927  007E4C  00                 	db	0
   928  007E4D  00                 	db	0
   929  007E4E  00                 	db	0
   930  007E4F  00                 	db	0
   931  007E50  00                 	db	0
   932  007E51  00                 	db	0
   933  007E52  00                 	db	0
   934  007E53  00                 	db	0
   935  007E54  00                 	db	0
   936  007E55  50                 	db	80
   937  007E56  49                 	db	73
   938  007E57  43                 	db	67
   939  007E58  4B                 	db	75
   940  007E59  5F                 	db	95
   941  007E5A  55                 	db	85
   942  007E5B  50                 	db	80
   943  007E5C  3A                 	db	58
   944  007E5D  20                 	db	32
   945  007E5E  74                 	db	116
   946  007E5F  68                 	db	104
   947  007E60  65                 	db	101
   948  007E61  20                 	db	32
   949  007E62  76                 	db	118
   950  007E63  69                 	db	105
   951  007E64  61                 	db	97
   952  007E65  6C                 	db	108
   953  007E66  00                 	db	0
   954  007E67  00                 	db	0
   955  007E68  00                 	db	0
   956  007E69  68                 	db	104
   957  007E6A  61                 	db	97
   958  007E6B  73                 	db	115
   959  007E6C  20                 	db	32
   960  007E6D  72                 	db	114
   961  007E6E  65                 	db	101
   962  007E6F  61                 	db	97
   963  007E70  63                 	db	99
   964  007E71  68                 	db	104
   965  007E72  65                 	db	101
   966  007E73  64                 	db	100
   967  007E74  20                 	db	32
   968  007E75  74                 	db	116
   969  007E76  68                 	db	104
   970  007E77  65                 	db	101
   971  007E78  00                 	db	0
   972  007E79  00                 	db	0
   973  007E7A  00                 	db	0
   974  007E7B  00                 	db	0
   975  007E7C  00                 	db	0
   976  007E7D  70                 	db	112
   977  007E7E  69                 	db	105
   978  007E7F  63                 	db	99
   979  007E80  6B                 	db	107
   980  007E81  20                 	db	32
   981  007E82  75                 	db	117
   982  007E83  70                 	db	112
   983  007E84  20                 	db	32
   984  007E85  73                 	db	115
   985  007E86  74                 	db	116
   986  007E87  61                 	db	97
   987  007E88  74                 	db	116
   988  007E89  69                 	db	105
   989  007E8A  6F                 	db	111
   990  007E8B  6E                 	db	110
   991  007E8C  00                 	db	0
   992  007E8D  00                 	db	0
   993  007E8E  00                 	db	0
   994  007E8F  00                 	db	0
   995  007E90  00                 	db	0
   996  007E91  00                 	db	0
   997  007E92  00                 	db	0
   998  007E93  00                 	db	0
   999  007E94  00                 	db	0
  1000  007E95  00                 	db	0
  1001  007E96  00                 	db	0
  1002  007E97  00                 	db	0
  1003  007E98  00                 	db	0
  1004  007E99  00                 	db	0
  1005  007E9A  00                 	db	0
  1006  007E9B  00                 	db	0
  1007  007E9C  00                 	db	0
  1008  007E9D  00                 	db	0
  1009  007E9E  00                 	db	0
  1010  007E9F  00                 	db	0
  1011  007EA0  00                 	db	0
  1012  007EA1  00                 	db	0
  1013  007EA2  00                 	db	0
  1014  007EA3  00                 	db	0
  1015  007EA4  00                 	db	0
  1016  007EA5  50                 	db	80
  1017  007EA6  49                 	db	73
  1018  007EA7  43                 	db	67
  1019  007EA8  4B                 	db	75
  1020  007EA9  5F                 	db	95
  1021  007EAA  55                 	db	85
  1022  007EAB  50                 	db	80
  1023  007EAC  3A                 	db	58
  1024  007EAD  20                 	db	32
  1025  007EAE  70                 	db	112
  1026  007EAF  6C                 	db	108
  1027  007EB0  65                 	db	101
  1028  007EB1  61                 	db	97
  1029  007EB2  73                 	db	115
  1030  007EB3  65                 	db	101
  1031  007EB4  00                 	db	0
  1032  007EB5  00                 	db	0
  1033  007EB6  00                 	db	0
  1034  007EB7  00                 	db	0
  1035  007EB8  00                 	db	0
  1036  007EB9  70                 	db	112
  1037  007EBA  69                 	db	105
  1038  007EBB  63                 	db	99
  1039  007EBC  6B                 	db	107
  1040  007EBD  20                 	db	32
  1041  007EBE  75                 	db	117
  1042  007EBF  70                 	db	112
  1043  007EC0  20                 	db	32
  1044  007EC1  74                 	db	116
  1045  007EC2  68                 	db	104
  1046  007EC3  65                 	db	101
  1047  007EC4  00                 	db	0
  1048  007EC5  00                 	db	0
  1049  007EC6  00                 	db	0
  1050  007EC7  00                 	db	0
  1051  007EC8  00                 	db	0
  1052  007EC9  00                 	db	0
  1053  007ECA  00                 	db	0
  1054  007ECB  00                 	db	0
  1055  007ECC  00                 	db	0
  1056  007ECD  76                 	db	118
  1057  007ECE  69                 	db	105
  1058  007ECF  61                 	db	97
  1059  007ED0  6C                 	db	108
  1060  007ED1  20                 	db	32
  1061  007ED2  62                 	db	98
  1062  007ED3  65                 	db	101
  1063  007ED4  66                 	db	102
  1064  007ED5  6F                 	db	111
  1065  007ED6  72                 	db	114
  1066  007ED7  65                 	db	101
  1067  007ED8  00                 	db	0
  1068  007ED9  00                 	db	0
  1069  007EDA  00                 	db	0
  1070  007EDB  00                 	db	0
  1071  007EDC  00                 	db	0
  1072  007EDD  00                 	db	0
  1073  007EDE  00                 	db	0
  1074  007EDF  00                 	db	0
  1075  007EE0  00                 	db	0
  1076  007EE1  74                 	db	116
  1077  007EE2  69                 	db	105
  1078  007EE3  6D                 	db	109
  1079  007EE4  65                 	db	101
  1080  007EE5  6F                 	db	111
  1081  007EE6  75                 	db	117
  1082  007EE7  74                 	db	116
  1083  007EE8  00                 	db	0
  1084  007EE9  00                 	db	0
  1085  007EEA  00                 	db	0
  1086  007EEB  00                 	db	0
  1087  007EEC  00                 	db	0
  1088  007EED  00                 	db	0
  1089  007EEE  00                 	db	0
  1090  007EEF  00                 	db	0
  1091  007EF0  00                 	db	0
  1092  007EF1  00                 	db	0
  1093  007EF2  00                 	db	0
  1094  007EF3  00                 	db	0
  1095  007EF4  00                 	db	0
  1096  007EF5  50                 	db	80
  1097  007EF6  49                 	db	73
  1098  007EF7  43                 	db	67
  1099  007EF8  4B                 	db	75
  1100  007EF9  5F                 	db	95
  1101  007EFA  55                 	db	85
  1102  007EFB  50                 	db	80
  1103  007EFC  3A                 	db	58
  1104  007EFD  20                 	db	32
  1105  007EFE  74                 	db	116
  1106  007EFF  68                 	db	104
  1107  007F00  65                 	db	101
  1108  007F01  20                 	db	32
  1109  007F02  76                 	db	118
  1110  007F03  69                 	db	105
  1111  007F04  61                 	db	97
  1112  007F05  6C                 	db	108
  1113  007F06  00                 	db	0
  1114  007F07  00                 	db	0
  1115  007F08  00                 	db	0
  1116  007F09  68                 	db	104
  1117  007F0A  61                 	db	97
  1118  007F0B  73                 	db	115
  1119  007F0C  20                 	db	32
  1120  007F0D  62                 	db	98
  1121  007F0E  65                 	db	101
  1122  007F0F  65                 	db	101
  1123  007F10  6E                 	db	110
  1124  007F11  20                 	db	32
  1125  007F12  70                 	db	112
  1126  007F13  69                 	db	105
  1127  007F14  63                 	db	99
  1128  007F15  6B                 	db	107
  1129  007F16  65                 	db	101
  1130  007F17  64                 	db	100
  1131  007F18  00                 	db	0
  1132  007F19  00                 	db	0
  1133  007F1A  00                 	db	0
  1134  007F1B  00                 	db	0
  1135  007F1C  00                 	db	0
  1136  007F1D  67                 	db	103
  1137  007F1E  6F                 	db	111
  1138  007F1F  69                 	db	105
  1139  007F20  6E                 	db	110
  1140  007F21  67                 	db	103
  1141  007F22  20                 	db	32
  1142  007F23  62                 	db	98
  1143  007F24  61                 	db	97
  1144  007F25  63                 	db	99
  1145  007F26  6B                 	db	107
  1146  007F27  20                 	db	32
  1147  007F28  74                 	db	116
  1148  007F29  6F                 	db	111
  1149  007F2A  00                 	db	0
  1150  007F2B  00                 	db	0
  1151  007F2C  00                 	db	0
  1152  007F2D  00                 	db	0
  1153  007F2E  00                 	db	0
  1154  007F2F  00                 	db	0
  1155  007F30  00                 	db	0
  1156  007F31  69                 	db	105
  1157  007F32  64                 	db	100
  1158  007F33  6C                 	db	108
  1159  007F34  65                 	db	101
  1160  007F35  00                 	db	0
  1161  007F36  00                 	db	0
  1162  007F37  00                 	db	0
  1163  007F38  00                 	db	0
  1164  007F39  00                 	db	0
  1165  007F3A  00                 	db	0
  1166  007F3B  00                 	db	0
  1167  007F3C  00                 	db	0
  1168  007F3D  00                 	db	0
  1169  007F3E  00                 	db	0
  1170  007F3F  00                 	db	0
  1171  007F40  00                 	db	0
  1172  007F41  00                 	db	0
  1173  007F42  00                 	db	0
  1174  007F43  00                 	db	0
  1175  007F44  00                 	db	0
  1176  007F45  54                 	db	84
  1177  007F46  52                 	db	82
  1178  007F47  41                 	db	65
  1179  007F48  53                 	db	83
  1180  007F49  48                 	db	72
  1181  007F4A  3A                 	db	58
  1182  007F4B  20                 	db	32
  1183  007F4C  74                 	db	116
  1184  007F4D  69                 	db	105
  1185  007F4E  6D                 	db	109
  1186  007F4F  65                 	db	101
  1187  007F50  6F                 	db	111
  1188  007F51  75                 	db	117
  1189  007F52  74                 	db	116
  1190  007F53  00                 	db	0
  1191  007F54  00                 	db	0
  1192  007F55  00                 	db	0
  1193  007F56  00                 	db	0
  1194  007F57  00                 	db	0
  1195  007F58  00                 	db	0
  1196  007F59  65                 	db	101
  1197  007F5A  78                 	db	120
  1198  007F5B  63                 	db	99
  1199  007F5C  65                 	db	101
  1200  007F5D  65                 	db	101
  1201  007F5E  64                 	db	100
  1202  007F5F  65                 	db	101
  1203  007F60  64                 	db	100
  1204  007F61  20                 	db	32
  1205  007F62  74                 	db	116
  1206  007F63  68                 	db	104
  1207  007F64  65                 	db	101
  1208  007F65  00                 	db	0
  1209  007F66  00                 	db	0
  1210  007F67  00                 	db	0
  1211  007F68  00                 	db	0
  1212  007F69  00                 	db	0
  1213  007F6A  00                 	db	0
  1214  007F6B  00                 	db	0
  1215  007F6C  00                 	db	0
  1216  007F6D  76                 	db	118
  1217  007F6E  69                 	db	105
  1218  007F6F  61                 	db	97
  1219  007F70  6C                 	db	108
  1220  007F71  20                 	db	32
  1221  007F72  77                 	db	119
  1222  007F73  69                 	db	105
  1223  007F74  6C                 	db	108
  1224  007F75  6C                 	db	108
  1225  007F76  20                 	db	32
  1226  007F77  62                 	db	98
  1227  007F78  65                 	db	101
  1228  007F79  00                 	db	0
  1229  007F7A  00                 	db	0
  1230  007F7B  00                 	db	0
  1231  007F7C  00                 	db	0
  1232  007F7D  00                 	db	0
  1233  007F7E  00                 	db	0
  1234  007F7F  00                 	db	0
  1235  007F80  00                 	db	0
  1236  007F81  74                 	db	116
  1237  007F82  72                 	db	114
  1238  007F83  61                 	db	97
  1239  007F84  73                 	db	115
  1240  007F85  68                 	db	104
  1241  007F86  65                 	db	101
  1242  007F87  64                 	db	100
  1243  007F88  00                 	db	0
  1244  007F89  00                 	db	0
  1245  007F8A  00                 	db	0
  1246  007F8B  00                 	db	0
  1247  007F8C  00                 	db	0
  1248  007F8D  00                 	db	0
  1249  007F8E  00                 	db	0
  1250  007F8F  00                 	db	0
  1251  007F90  00                 	db	0
  1252  007F91  00                 	db	0
  1253  007F92  00                 	db	0
  1254  007F93  00                 	db	0
  1255  007F94  00                 	db	0
  1256  007F95  45                 	db	69
  1257  007F96  52                 	db	82
  1258  007F97  52                 	db	82
  1259  007F98  4F                 	db	79
  1260  007F99  52                 	db	82
  1261  007F9A  00                 	db	0
  1262  007F9B  00                 	db	0
  1263  007F9C  00                 	db	0
  1264  007F9D  00                 	db	0
  1265  007F9E  00                 	db	0
  1266  007F9F  00                 	db	0
  1267  007FA0  00                 	db	0
  1268  007FA1  00                 	db	0
  1269  007FA2  00                 	db	0
  1270  007FA3  00                 	db	0
  1271  007FA4  00                 	db	0
  1272  007FA5  00                 	db	0
  1273  007FA6  00                 	db	0
  1274  007FA7  00                 	db	0
  1275  007FA8  00                 	db	0
  1276  007FA9  00                 	db	0
  1277  007FAA  00                 	db	0
  1278  007FAB  00                 	db	0
  1279  007FAC  00                 	db	0
  1280  007FAD  00                 	db	0
  1281  007FAE  00                 	db	0
  1282  007FAF  00                 	db	0
  1283  007FB0  00                 	db	0
  1284  007FB1  00                 	db	0
  1285  007FB2  00                 	db	0
  1286  007FB3  00                 	db	0
  1287  007FB4  00                 	db	0
  1288  007FB5  00                 	db	0
  1289  007FB6  00                 	db	0
  1290  007FB7  00                 	db	0
  1291  007FB8  00                 	db	0
  1292  007FB9  00                 	db	0
  1293  007FBA  00                 	db	0
  1294  007FBB  00                 	db	0
  1295  007FBC  00                 	db	0
  1296  007FBD  00                 	db	0
  1297  007FBE  00                 	db	0
  1298  007FBF  00                 	db	0
  1299  007FC0  00                 	db	0
  1300  007FC1  00                 	db	0
  1301  007FC2  00                 	db	0
  1302  007FC3  00                 	db	0
  1303  007FC4  00                 	db	0
  1304  007FC5  00                 	db	0
  1305  007FC6  00                 	db	0
  1306  007FC7  00                 	db	0
  1307  007FC8  00                 	db	0
  1308  007FC9  00                 	db	0
  1309  007FCA  00                 	db	0
  1310  007FCB  00                 	db	0
  1311  007FCC  00                 	db	0
  1312  007FCD  00                 	db	0
  1313  007FCE  00                 	db	0
  1314  007FCF  00                 	db	0
  1315  007FD0  00                 	db	0
  1316  007FD1  00                 	db	0
  1317  007FD2  00                 	db	0
  1318  007FD3  00                 	db	0
  1319  007FD4  00                 	db	0
  1320  007FD5  00                 	db	0
  1321  007FD6  00                 	db	0
  1322  007FD7  00                 	db	0
  1323  007FD8  00                 	db	0
  1324  007FD9  00                 	db	0
  1325  007FDA  00                 	db	0
  1326  007FDB  00                 	db	0
  1327  007FDC  00                 	db	0
  1328  007FDD  00                 	db	0
  1329  007FDE  00                 	db	0
  1330  007FDF  00                 	db	0
  1331  007FE0  00                 	db	0
  1332  007FE1  00                 	db	0
  1333  007FE2  00                 	db	0
  1334  007FE3  00                 	db	0
  1335  007FE4  00                 	db	0
  1336  007FE5                     __end_of_const_msgs:
  1337                           	callstack 0
  1338  007FE5  2400               	dw	9216
  1339  007FE7  4A74               	dw	19060
  1340  007FE9                     __end_of_fosc:
  1341                           	callstack 0
  1342  0000                     _ADCON1	set	4033
  1343  0000                     _ADRESL	set	4035
  1344  0000                     _ADRESH	set	4036
  1345  0000                     _ADCON0bits	set	4034
  1346  0000                     _ADCON0	set	4034
  1347  0000                     _TMR0H	set	4055
  1348  0000                     _TMR0L	set	4054
  1349  0000                     _PORTEbits	set	3972
  1350  0000                     _PORTD	set	3971
  1351  0000                     _TRISCbits	set	3988
  1352  0000                     _TRISC	set	3988
  1353  0000                     _PORTC	set	3970
  1354  0000                     _TRISB	set	3987
  1355  0000                     _PORTB	set	3969
  1356  0000                     _TRISA	set	3986
  1357  0000                     _PORTA	set	3968
  1358  0000                     _LATA	set	3977
  1359  0000                     _T0CON	set	4053
  1360  0000                     _PIR1bits	set	3998
  1361  0000                     _PIE1bits	set	3997
  1362  0000                     _T0CONbits	set	4053
  1363  0000                     _LATAbits	set	3977
  1364  0000                     _LATCbits	set	3979
  1365  0000                     _INTCONbits	set	4082
  1366  0000                     _RCREG	set	4014
  1367  0000                     _TXREG	set	4013
  1368  0000                     _RCSTAbits	set	4011
  1369  0000                     _TXSTAbits	set	4012
  1370  0000                     _SPBRG	set	4015
  1371  0000                     _LATC	set	3979
  1372  0000                     _LATB	set	3978
  1373  007FE9                     STR_1:
  1374  007FE9  44                 	db	68	;'D'
  1375  007FEA  65                 	db	101	;'e'
  1376  007FEB  76                 	db	118	;'v'
  1377  007FEC  69                 	db	105	;'i'
  1378  007FED  63                 	db	99	;'c'
  1379  007FEE  65                 	db	101	;'e'
  1380  007FEF  20                 	db	32
  1381  007FF0  68                 	db	104	;'h'
  1382  007FF1  61                 	db	97	;'a'
  1383  007FF2  73                 	db	115	;'s'
  1384  007FF3  20                 	db	32
  1385  007FF4  62                 	db	98	;'b'
  1386  007FF5  65                 	db	101	;'e'
  1387  007FF6  65                 	db	101	;'e'
  1388  007FF7  6E                 	db	110	;'n'
  1389  007FF8  20                 	db	32
  1390  007FF9  72                 	db	114	;'r'
  1391  007FFA  65                 	db	101	;'e'
  1392  007FFB  73                 	db	115	;'s'
  1393  007FFC  65                 	db	101	;'e'
  1394  007FFD  74                 	db	116	;'t'
  1395  007FFE  00                 	db	0
  1396  007FFF  00                 	db	0	; dummy byte at the end
  1397  0000                     
  1398                           ; #config settings
  1399                           
  1400                           	psect	cinit
  1401  00263E                     __pcinit:
  1402                           	callstack 0
  1403  00263E                     start_initialization:
  1404                           	callstack 0
  1405  00263E                     __initialization:
  1406                           	callstack 0
  1407                           
  1408                           ; Initialize objects allocated to BANK0 (14 bytes)
  1409                           ; load TBLPTR registers with __pidataBANK0
  1410  00263E  0E9A               	movlw	low __pidataBANK0
  1411  002640  6EF6               	movwf	tblptrl,c
  1412  002642  0E28               	movlw	high __pidataBANK0
  1413  002644  6EF7               	movwf	tblptrh,c
  1414  002646  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1415  002648  6EF8               	movwf	tblptru,c
  1416  00264A  EE00  F0BA         	lfsr	0,__pdataBANK0
  1417  00264E  EE10 F00E          	lfsr	1,14
  1418  002652                     copy_data0:
  1419  002652  0009               	tblrd		*+
  1420  002654  CFF5 FFEE          	movff	tablat,postinc0
  1421  002658  50E5               	movf	postdec1,w,c
  1422  00265A  50E1               	movf	fsr1l,w,c
  1423  00265C  E1FA               	bnz	copy_data0
  1424                           
  1425                           ; Clear objects allocated to BANK0 (58 bytes)
  1426  00265E  EE00  F080         	lfsr	0,__pbssBANK0
  1427  002662  0E3A               	movlw	58
  1428  002664                     clear_0:
  1429  002664  6AEE               	clrf	postinc0,c
  1430  002666  06E8               	decf	wreg,f,c
  1431  002668  E1FD               	bnz	clear_0
  1432                           
  1433                           ; Clear objects allocated to COMRAM (15 bytes)
  1434  00266A  EE00  F06F         	lfsr	0,__pbssCOMRAM
  1435  00266E  0E0F               	movlw	15
  1436  002670                     clear_1:
  1437  002670  6AEE               	clrf	postinc0,c
  1438  002672  06E8               	decf	wreg,f,c
  1439  002674  E1FD               	bnz	clear_1
  1440  002676                     end_of_initialization:
  1441                           	callstack 0
  1442  002676                     __end_of__initialization:
  1443                           	callstack 0
  1444  002676  907E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1445  002678  927E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1446  00267A  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1447  00267C  6EF8               	movwf	tblptru,c
  1448  00267E  0100               	movlb	0
  1449  002680  EF48  F000         	goto	_main	;jump to C main() function
  1450                           
  1451                           	psect	bssCOMRAM
  1452  00006F                     __pbssCOMRAM:
  1453                           	callstack 0
  1454  00006F                     _end_effector_homed:
  1455                           	callstack 0
  1456  00006F                     	ds	2
  1457  000071                     _grasping_joint_position_reached:
  1458                           	callstack 0
  1459  000071                     	ds	2
  1460  000073                     _trash_counter:
  1461                           	callstack 0
  1462  000073                     	ds	2
  1463  000075                     _dilution_done:
  1464                           	callstack 0
  1465  000075                     	ds	2
  1466  000077                     _mix_counter:
  1467                           	callstack 0
  1468  000077                     	ds	2
  1469  000079                     _timer_done:
  1470                           	callstack 0
  1471  000079                     	ds	1
  1472  00007A                     _read_new_char:
  1473                           	callstack 0
  1474  00007A                     	ds	1
  1475  00007B                     _state_changed:
  1476                           	callstack 0
  1477  00007B                     	ds	1
  1478  00007C                     _state:
  1479                           	callstack 0
  1480  00007C                     	ds	2
  1481                           
  1482                           	psect	bssBANK0
  1483  000080                     __pbssBANK0:
  1484                           	callstack 0
  1485  000080                     roundf@F525:
  1486                           	callstack 0
  1487  000080                     	ds	4
  1488  000084                     _temperature_scaled:
  1489                           	callstack 0
  1490  000084                     	ds	2
  1491  000086                     _temperature_int:
  1492                           	callstack 0
  1493  000086                     	ds	2
  1494  000088                     _joint_dilutor_homed:
  1495                           	callstack 0
  1496  000088                     	ds	2
  1497  00008A                     _joint_homed:
  1498                           	callstack 0
  1499  00008A                     	ds	2
  1500  00008C                     _diluting_position_reached:
  1501                           	callstack 0
  1502  00008C                     	ds	2
  1503  00008E                     _grasping_ee_position_reached:
  1504                           	callstack 0
  1505  00008E                     	ds	2
  1506  000090                     _mix_step_counter:
  1507                           	callstack 0
  1508  000090                     	ds	2
  1509  000092                     _mix_direction:
  1510                           	callstack 0
  1511  000092                     	ds	2
  1512  000094                     _mix_current_step:
  1513                           	callstack 0
  1514  000094                     	ds	2
  1515  000096                     _joint_dilutor_stepper:
  1516                           	callstack 0
  1517  000096                     	ds	12
  1518  0000A2                     _end_effector_stepper:
  1519                           	callstack 0
  1520  0000A2                     	ds	12
  1521  0000AE                     _joint_stepper:
  1522                           	callstack 0
  1523  0000AE                     	ds	12
  1524                           
  1525                           	psect	dataBANK0
  1526  0000BA                     __pdataBANK0:
  1527                           	callstack 0
  1528  0000BA                     	ds	4
  1529  0000BE                     _state_before_error:
  1530                           	callstack 0
  1531  0000BE                     	ds	2
  1532  0000C0                     _hex_end_effector_values:
  1533                           	callstack 0
  1534  0000C0                     	ds	4
  1535  0000C4                     _hex_joint_values:
  1536                           	callstack 0
  1537  0000C4                     	ds	4
  1538                           
  1539                           	psect	cstackCOMRAM
  1540  000001                     __pcstackCOMRAM:
  1541                           	callstack 0
  1542  000001                     ?_abs:
  1543                           	callstack 0
  1544  000001                     ?___wmul:
  1545                           	callstack 0
  1546  000001                     ?___fladd:
  1547                           	callstack 0
  1548  000001                     ?___flneg:
  1549                           	callstack 0
  1550  000001                     serial_tx_char@val:
  1551                           	callstack 0
  1552  000001                     get_reg_value@rx_char:
  1553                           	callstack 0
  1554  000001                     lcd_wr@val:
  1555                           	callstack 0
  1556  000001                     state_translator_micro_to_fpga@state:
  1557                           	callstack 0
  1558  000001                     init_stepper@stepper_motor:
  1559                           	callstack 0
  1560  000001                     turn_on_current_coil@stepper_motor:
  1561                           	callstack 0
  1562  000001                     update_current_coil@stepper_motor:
  1563                           	callstack 0
  1564  000001                     change_direction@stepper_motor:
  1565                           	callstack 0
  1566  000001                     ___wmul@multiplier:
  1567                           	callstack 0
  1568  000001                     abs@a:
  1569                           	callstack 0
  1570  000001                     ___flneg@f1:
  1571                           	callstack 0
  1572  000001                     ___fladd@b:
  1573                           	callstack 0
  1574                           
  1575                           ; 4 bytes @ 0x0
  1576  000001                     	ds	1
  1577  000002                     lcd_cmd@val:
  1578                           	callstack 0
  1579  000002                     lcd_dat@val:
  1580                           	callstack 0
  1581                           
  1582                           ; 1 bytes @ 0x1
  1583  000002                     	ds	1
  1584  000003                     ??_lcd_init:
  1585  000003                     ??_change_direction:
  1586  000003                     ??_abs:
  1587  000003                     ??_turn_on_current_coil:
  1588  000003                     ??_update_current_coil:
  1589  000003                     state_translator_fpga_to_micro@state:
  1590                           	callstack 0
  1591  000003                     init_stepper@current_coil:
  1592                           	callstack 0
  1593  000003                     ___wmul@multiplicand:
  1594                           	callstack 0
  1595                           
  1596                           ; 2 bytes @ 0x2
  1597  000003                     	ds	2
  1598  000005                     ?___awdiv:
  1599                           	callstack 0
  1600  000005                     state_translator_fpga_to_micro@state_machine_code:
  1601                           	callstack 0
  1602  000005                     state_translator_micro_to_fpga@state_machine_code:
  1603                           	callstack 0
  1604  000005                     init_stepper@step_counter:
  1605                           	callstack 0
  1606  000005                     ___wmul@product:
  1607                           	callstack 0
  1608  000005                     ___awdiv@dividend:
  1609                           	callstack 0
  1610  000005                     ___fladd@a:
  1611                           	callstack 0
  1612                           
  1613                           ; 4 bytes @ 0x4
  1614  000005                     	ds	2
  1615  000007                     lcd_str@str:
  1616                           	callstack 0
  1617  000007                     init_stepper@direction:
  1618                           	callstack 0
  1619  000007                     ___awdiv@divisor:
  1620                           	callstack 0
  1621                           
  1622                           ; 2 bytes @ 0x6
  1623  000007                     	ds	2
  1624  000009                     ??_lcd_str:
  1625  000009                     ??___fladd:
  1626  000009                     ?_reach_goal:
  1627                           	callstack 0
  1628  000009                     ___awdiv@counter:
  1629                           	callstack 0
  1630  000009                     init_stepper@hex_coil_register_values:
  1631                           	callstack 0
  1632  000009                     reach_goal@stepper_motor:
  1633                           	callstack 0
  1634                           
  1635                           ; 2 bytes @ 0x8
  1636  000009                     	ds	1
  1637  00000A                     ___awdiv@sign:
  1638                           	callstack 0
  1639                           
  1640                           ; 1 bytes @ 0x9
  1641  00000A                     	ds	1
  1642  00000B                     lcd_str@i:
  1643                           	callstack 0
  1644  00000B                     init_stepper@register_name:
  1645                           	callstack 0
  1646  00000B                     reach_goal@goal_to_reach:
  1647                           	callstack 0
  1648  00000B                     ___awdiv@quotient:
  1649                           	callstack 0
  1650                           
  1651                           ; 2 bytes @ 0xA
  1652  00000B                     	ds	1
  1653  00000C                     lcd_update@state:
  1654                           	callstack 0
  1655                           
  1656                           ; 2 bytes @ 0xB
  1657  00000C                     	ds	1
  1658  00000D                     ??_init_stepper:
  1659  00000D                     ??_reach_goal:
  1660  00000D                     ?___xxtofl:
  1661                           	callstack 0
  1662  00000D                     ___fladd@signs:
  1663                           	callstack 0
  1664  00000D                     ___xxtofl@val:
  1665                           	callstack 0
  1666                           
  1667                           ; 4 bytes @ 0xC
  1668  00000D                     	ds	1
  1669  00000E                     ??_lcd_update:
  1670  00000E                     ___fladd@aexp:
  1671                           	callstack 0
  1672                           
  1673                           ; 1 bytes @ 0xD
  1674  00000E                     	ds	1
  1675  00000F                     ___fladd@bexp:
  1676                           	callstack 0
  1677  00000F                     init_stepper@i:
  1678                           	callstack 0
  1679                           
  1680                           ; 2 bytes @ 0xE
  1681  00000F                     	ds	1
  1682  000010                     ___fladd@grs:
  1683                           	callstack 0
  1684  000010                     lcd_update@line_select:
  1685                           	callstack 0
  1686                           
  1687                           ; 4 bytes @ 0xF
  1688  000010                     	ds	1
  1689  000011                     ??___xxtofl:
  1690  000011                     ?___flsub:
  1691                           	callstack 0
  1692  000011                     ___flsub@b:
  1693                           	callstack 0
  1694                           
  1695                           ; 4 bytes @ 0x10
  1696  000011                     	ds	3
  1697  000014                     lcd_update@i:
  1698                           	callstack 0
  1699                           
  1700                           ; 2 bytes @ 0x13
  1701  000014                     	ds	1
  1702  000015                     ___xxtofl@sign:
  1703                           	callstack 0
  1704  000015                     ___flsub@a:
  1705                           	callstack 0
  1706                           
  1707                           ; 4 bytes @ 0x14
  1708  000015                     	ds	1
  1709  000016                     ___xxtofl@exp:
  1710                           	callstack 0
  1711                           
  1712                           ; 1 bytes @ 0x15
  1713  000016                     	ds	1
  1714  000017                     ___xxtofl@arg:
  1715                           	callstack 0
  1716                           
  1717                           ; 4 bytes @ 0x16
  1718  000017                     	ds	2
  1719  000019                     
  1720                           ; 1 bytes @ 0x18
  1721  000019                     	ds	2
  1722  00001B                     ?___flmul:
  1723                           	callstack 0
  1724  00001B                     ___flmul@b:
  1725                           	callstack 0
  1726                           
  1727                           ; 4 bytes @ 0x1A
  1728  00001B                     	ds	4
  1729  00001F                     ___flmul@a:
  1730                           	callstack 0
  1731                           
  1732                           ; 4 bytes @ 0x1E
  1733  00001F                     	ds	4
  1734  000023                     ??___flmul:
  1735                           
  1736                           ; 1 bytes @ 0x22
  1737  000023                     	ds	4
  1738  000027                     ___flmul@sign:
  1739                           	callstack 0
  1740                           
  1741                           ; 1 bytes @ 0x26
  1742  000027                     	ds	1
  1743  000028                     ___flmul@grs:
  1744                           	callstack 0
  1745                           
  1746                           ; 4 bytes @ 0x27
  1747  000028                     	ds	4
  1748  00002C                     ___flmul@aexp:
  1749                           	callstack 0
  1750                           
  1751                           ; 1 bytes @ 0x2B
  1752  00002C                     	ds	1
  1753  00002D                     ___flmul@bexp:
  1754                           	callstack 0
  1755                           
  1756                           ; 1 bytes @ 0x2C
  1757  00002D                     	ds	1
  1758  00002E                     ___flmul@prod:
  1759                           	callstack 0
  1760                           
  1761                           ; 4 bytes @ 0x2D
  1762  00002E                     	ds	4
  1763  000032                     ___flmul@temp:
  1764                           	callstack 0
  1765                           
  1766                           ; 2 bytes @ 0x31
  1767  000032                     	ds	2
  1768  000034                     ?___fltol:
  1769                           	callstack 0
  1770  000034                     ___fltol@f1:
  1771                           	callstack 0
  1772                           
  1773                           ; 4 bytes @ 0x33
  1774  000034                     	ds	4
  1775  000038                     ??___fltol:
  1776                           
  1777                           ; 1 bytes @ 0x37
  1778  000038                     	ds	4
  1779  00003C                     ___fltol@sign1:
  1780                           	callstack 0
  1781                           
  1782                           ; 1 bytes @ 0x3B
  1783  00003C                     	ds	1
  1784  00003D                     ___fltol@exp1:
  1785                           	callstack 0
  1786                           
  1787                           ; 1 bytes @ 0x3C
  1788  00003D                     	ds	1
  1789  00003E                     ?_get_liters:
  1790                           	callstack 0
  1791  00003E                     ?_get_temperature:
  1792                           	callstack 0
  1793                           
  1794                           ; 2 bytes @ 0x3D
  1795  00003E                     	ds	2
  1796  000040                     ___flge@ff1:
  1797                           	callstack 0
  1798                           
  1799                           ; 4 bytes @ 0x3F
  1800  000040                     	ds	4
  1801  000044                     ___flge@ff2:
  1802                           	callstack 0
  1803                           
  1804                           ; 4 bytes @ 0x43
  1805  000044                     	ds	4
  1806  000048                     ??___flge:
  1807                           
  1808                           ; 1 bytes @ 0x47
  1809  000048                     	ds	4
  1810  00004C                     ?_check_temperature:
  1811                           	callstack 0
  1812  00004C                     ?_roundf:
  1813                           	callstack 0
  1814  00004C                     check_temperature@temp_to_be_checked:
  1815                           	callstack 0
  1816  00004C                     roundf@x:
  1817                           	callstack 0
  1818                           
  1819                           ; 4 bytes @ 0x4B
  1820  00004C                     	ds	2
  1821  00004E                     check_temperature@grad:
  1822                           	callstack 0
  1823                           
  1824                           ; 4 bytes @ 0x4D
  1825  00004E                     	ds	2
  1826  000050                     ??_roundf:
  1827                           
  1828                           ; 1 bytes @ 0x4F
  1829  000050                     	ds	4
  1830  000054                     _roundf$1665:
  1831                           	callstack 0
  1832                           
  1833                           ; 4 bytes @ 0x53
  1834  000054                     	ds	4
  1835  000058                     roundf@e:
  1836                           	callstack 0
  1837                           
  1838                           ; 2 bytes @ 0x57
  1839  000058                     	ds	2
  1840  00005A                     _roundf$1664:
  1841                           	callstack 0
  1842                           
  1843                           ; 4 bytes @ 0x59
  1844  00005A                     	ds	4
  1845  00005E                     roundf@u:
  1846                           	callstack 0
  1847                           
  1848                           ; 4 bytes @ 0x5D
  1849  00005E                     	ds	4
  1850  000062                     roundf@y:
  1851                           	callstack 0
  1852                           
  1853                           ; 4 bytes @ 0x61
  1854  000062                     	ds	4
  1855  000066                     ??_main:
  1856                           
  1857                           ; 1 bytes @ 0x65
  1858  000066                     	ds	2
  1859  000068                     main@current_temp:
  1860                           	callstack 0
  1861                           
  1862                           ; 2 bytes @ 0x67
  1863  000068                     	ds	2
  1864  00006A                     main@rx_char:
  1865                           	callstack 0
  1866                           
  1867                           ; 1 bytes @ 0x69
  1868  00006A                     	ds	1
  1869  00006B                     _main$1663:
  1870                           	callstack 0
  1871                           
  1872                           ; 4 bytes @ 0x6A
  1873  00006B                     	ds	4
  1874                           
  1875 ;;
  1876 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1877 ;;
  1878 ;; *************** function _main *****************
  1879 ;; Defined at:
  1880 ;;		line 56 in file "main.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;		None
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;  current_temp    2  103[COMRAM] int 
  1885 ;;  rx_char         1  105[COMRAM] unsigned char 
  1886 ;; Return value:  Size  Location     Type
  1887 ;;                  1    wreg      void 
  1888 ;; Registers used:
  1889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1890 ;; Tracked objects:
  1891 ;;		On entry : 0/0
  1892 ;;		On exit  : 0/0
  1893 ;;		Unchanged: 0/0
  1894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1895 ;;      Params:         0       0       0       0       0       0       0
  1896 ;;      Locals:         7       0       0       0       0       0       0
  1897 ;;      Temps:          2       0       0       0       0       0       0
  1898 ;;      Totals:         9       0       0       0       0       0       0
  1899 ;;Total ram usage:        9 bytes
  1900 ;; Hardware stack levels required when called:    5
  1901 ;; This function calls:
  1902 ;;		___flge
  1903 ;;		___wmul
  1904 ;;		___xxtofl
  1905 ;;		_change_direction
  1906 ;;		_check_temperature
  1907 ;;		_configure_ad_conversion_oven
  1908 ;;		_configure_ad_conversion_tank
  1909 ;;		_get_liters
  1910 ;;		_get_reg_value
  1911 ;;		_get_temperature
  1912 ;;		_init_PORTS
  1913 ;;		_init_USART
  1914 ;;		_init_interrupts
  1915 ;;		_init_stepper
  1916 ;;		_init_timer_0
  1917 ;;		_lcd_cmd
  1918 ;;		_lcd_init
  1919 ;;		_lcd_str
  1920 ;;		_lcd_update
  1921 ;;		_reach_goal
  1922 ;;		_serial_tx_char
  1923 ;;		_state_translator_fpga_to_micro
  1924 ;;		_state_translator_micro_to_fpga
  1925 ;;		_wait_for_zero
  1926 ;; This function is called by:
  1927 ;;		Startup code after reset
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           	psect	text0
  1932  000090                     __ptext0:
  1933                           	callstack 0
  1934  000090                     _main:
  1935                           	callstack 26
  1936  000090  FFFF               	dw	65535	; assembler added errata NOP
  1937                           
  1938                           ;main.c: 58:     init_PORTS();
  1939  000092  EC9E  F013         	call	_init_PORTS	;wreg free
  1940  000096                     
  1941                           ;main.c: 59:     init_USART();
  1942  000096  EC63  F013         	call	_init_USART	;wreg free
  1943  00009A                     
  1944                           ;main.c: 60:     init_interrupts();
  1945  00009A  EC5A  F014         	call	_init_interrupts	;wreg free
  1946  00009E                     
  1947                           ;main.c: 62:     init_stepper(&joint_stepper, 0, 0, 1, hex_joint_values, &LATB);
  1948  00009E  0EAE               	movlw	low _joint_stepper
  1949  0000A0  6E01               	movwf	init_stepper@stepper_motor^0,c
  1950  0000A2  0E00               	movlw	high _joint_stepper
  1951  0000A4  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  1952  0000A6  0E00               	movlw	0
  1953  0000A8  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  1954  0000AA  0E00               	movlw	0
  1955  0000AC  6E03               	movwf	init_stepper@current_coil^0,c
  1956  0000AE  0E00               	movlw	0
  1957  0000B0  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  1958  0000B2  0E00               	movlw	0
  1959  0000B4  6E05               	movwf	init_stepper@step_counter^0,c
  1960  0000B6  0E00               	movlw	0
  1961  0000B8  6E08               	movwf	(init_stepper@direction+1)^0,c
  1962  0000BA  0E01               	movlw	1
  1963  0000BC  6E07               	movwf	init_stepper@direction^0,c
  1964  0000BE  0EC4               	movlw	low _hex_joint_values
  1965  0000C0  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  1966  0000C2  0E00               	movlw	high _hex_joint_values
  1967  0000C4  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  1968  0000C6  0E8A               	movlw	138
  1969  0000C8  6E0B               	movwf	init_stepper@register_name^0,c
  1970  0000CA  0E0F               	movlw	15
  1971  0000CC  6E0C               	movwf	(init_stepper@register_name+1)^0,c
  1972  0000CE  ECF9  F010         	call	_init_stepper	;wreg free
  1973  0000D2                     
  1974                           ;main.c: 63:     init_stepper(&end_effector_stepper, 0, 0, 1, hex_end_effector_values, &
      +                          LATB);
  1975  0000D2  0EA2               	movlw	low _end_effector_stepper
  1976  0000D4  6E01               	movwf	init_stepper@stepper_motor^0,c
  1977  0000D6  0E00               	movlw	high _end_effector_stepper
  1978  0000D8  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  1979  0000DA  0E00               	movlw	0
  1980  0000DC  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  1981  0000DE  0E00               	movlw	0
  1982  0000E0  6E03               	movwf	init_stepper@current_coil^0,c
  1983  0000E2  0E00               	movlw	0
  1984  0000E4  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  1985  0000E6  0E00               	movlw	0
  1986  0000E8  6E05               	movwf	init_stepper@step_counter^0,c
  1987  0000EA  0E00               	movlw	0
  1988  0000EC  6E08               	movwf	(init_stepper@direction+1)^0,c
  1989  0000EE  0E01               	movlw	1
  1990  0000F0  6E07               	movwf	init_stepper@direction^0,c
  1991  0000F2  0EC0               	movlw	low _hex_end_effector_values
  1992  0000F4  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  1993  0000F6  0E00               	movlw	high _hex_end_effector_values
  1994  0000F8  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  1995  0000FA  0E8A               	movlw	138
  1996  0000FC  6E0B               	movwf	init_stepper@register_name^0,c
  1997  0000FE  0E0F               	movlw	15
  1998  000100  6E0C               	movwf	(init_stepper@register_name+1)^0,c
  1999  000102  ECF9  F010         	call	_init_stepper	;wreg free
  2000  000106                     
  2001                           ;main.c: 64:     init_stepper(&joint_dilutor_stepper, 0, 0, 1, hex_joint_values, &LATC);
  2002  000106  0E96               	movlw	low _joint_dilutor_stepper
  2003  000108  6E01               	movwf	init_stepper@stepper_motor^0,c
  2004  00010A  0E00               	movlw	high _joint_dilutor_stepper
  2005  00010C  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  2006  00010E  0E00               	movlw	0
  2007  000110  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  2008  000112  0E00               	movlw	0
  2009  000114  6E03               	movwf	init_stepper@current_coil^0,c
  2010  000116  0E00               	movlw	0
  2011  000118  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  2012  00011A  0E00               	movlw	0
  2013  00011C  6E05               	movwf	init_stepper@step_counter^0,c
  2014  00011E  0E00               	movlw	0
  2015  000120  6E08               	movwf	(init_stepper@direction+1)^0,c
  2016  000122  0E01               	movlw	1
  2017  000124  6E07               	movwf	init_stepper@direction^0,c
  2018  000126  0EC4               	movlw	low _hex_joint_values
  2019  000128  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  2020  00012A  0E00               	movlw	high _hex_joint_values
  2021  00012C  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  2022  00012E  0E8B               	movlw	139
  2023  000130  6E0B               	movwf	init_stepper@register_name^0,c
  2024  000132  0E0F               	movlw	15
  2025  000134  6E0C               	movwf	(init_stepper@register_name+1)^0,c
  2026  000136  ECF9  F010         	call	_init_stepper	;wreg free
  2027  00013A                     
  2028                           ;main.c: 66:     lcd_init();
  2029  00013A  EC92  F011         	call	_lcd_init	;wreg free
  2030  00013E                     
  2031                           ;main.c: 67:     lcd_cmd(0x0C);
  2032  00013E  0E0C               	movlw	12
  2033  000140  ECDE  F013         	call	_lcd_cmd
  2034  000144                     
  2035                           ;main.c: 69:     lcd_cmd(0x01);
  2036  000144  0E01               	movlw	1
  2037  000146  ECDE  F013         	call	_lcd_cmd
  2038  00014A                     
  2039                           ;main.c: 70:     lcd_cmd(0x80);
  2040  00014A  0E80               	movlw	128
  2041  00014C  ECDE  F013         	call	_lcd_cmd
  2042  000150                     
  2043                           ;main.c: 71:     lcd_str("Device has been reset");
  2044  000150  0EE9               	movlw	low STR_1
  2045  000152  6E07               	movwf	lcd_str@str^0,c
  2046  000154  0E7F               	movlw	high STR_1
  2047  000156  6E08               	movwf	(lcd_str@str+1)^0,c
  2048  000158  EC7B  F012         	call	_lcd_str	;wreg free
  2049  00015C                     
  2050                           ;main.c: 73:     (INTCONbits.GIE = 1);
  2051  00015C  8EF2               	bsf	242,7,c	;volatile
  2052  00015E                     
  2053                           ;main.c: 75:     mix_counter = 0;
  2054  00015E  0E00               	movlw	0
  2055  000160  6E78               	movwf	(_mix_counter+1)^0,c
  2056  000162  0E00               	movlw	0
  2057  000164  6E77               	movwf	_mix_counter^0,c
  2058  000166                     l3078:
  2059  000166  FFFF               	dw	65535	; assembler added errata NOP
  2060                           
  2061                           ;main.c: 78:         if (state_changed){
  2062  000168  507B               	movf	_state_changed^0,w,c
  2063  00016A  B4D8               	btfsc	status,2,c
  2064  00016C  EFBA  F000         	goto	u2961
  2065  000170  EFBD  F000         	goto	u2960
  2066  000174                     u2961:
  2067  000174  FFFF               	dw	65535	; assembler added errata NOP
  2068  000176  EFF5  F000         	goto	l3098
  2069  00017A                     u2960:
  2070  00017A  FFFF               	dw	65535	; assembler added errata NOP
  2071  00017C                     
  2072                           ;main.c: 79:             if (read_new_char){
  2073  00017C  507A               	movf	_read_new_char^0,w,c
  2074  00017E  B4D8               	btfsc	status,2,c
  2075  000180  EFC4  F000         	goto	u2971
  2076  000184  EFC7  F000         	goto	u2970
  2077  000188                     u2971:
  2078  000188  FFFF               	dw	65535	; assembler added errata NOP
  2079  00018A  EFE3  F000         	goto	l3092
  2080  00018E                     u2970:
  2081  00018E  FFFF               	dw	65535	; assembler added errata NOP
  2082  000190                     
  2083                           ;main.c: 80:                 rx_char = get_reg_value();
  2084  000190  EC45  F014         	call	_get_reg_value	;wreg free
  2085  000194  6E6A               	movwf	main@rx_char^0,c
  2086  000196                     
  2087                           ;main.c: 81:                 state_translator_fpga_to_micro(rx_char, &state);
  2088  000196  0E7C               	movlw	low _state
  2089  000198  6E03               	movwf	state_translator_fpga_to_micro@state^0,c
  2090  00019A  0E00               	movlw	high _state
  2091  00019C  6E04               	movwf	(state_translator_fpga_to_micro@state+1)^0,c
  2092  00019E  506A               	movf	main@rx_char^0,w,c
  2093  0001A0  EC65  F00D         	call	_state_translator_fpga_to_micro
  2094  0001A4                     
  2095                           ;main.c: 82:                 read_new_char = 0;
  2096  0001A4  0E00               	movlw	0
  2097  0001A6  6E7A               	movwf	_read_new_char^0,c
  2098  0001A8                     
  2099                           ;main.c: 83:                 if (state == 14){
  2100  0001A8  0E0E               	movlw	14
  2101  0001AA  187C               	xorwf	_state^0,w,c
  2102  0001AC  107D               	iorwf	(_state+1)^0,w,c
  2103  0001AE  A4D8               	btfss	status,2,c
  2104  0001B0  EFDC  F000         	goto	u2981
  2105  0001B4  EFDF  F000         	goto	u2980
  2106  0001B8                     u2981:
  2107  0001B8  FFFF               	dw	65535	; assembler added errata NOP
  2108  0001BA  EFEC  F000         	goto	l3094
  2109  0001BE                     u2980:
  2110  0001BE  FFFF               	dw	65535	; assembler added errata NOP
  2111  0001C0                     
  2112                           ;main.c: 84:                     LATCbits.LATC4 = 1;
  2113  0001C0  888B               	bsf	139,4,c	;volatile
  2114  0001C2  EFEC  F000         	goto	l3094
  2115  0001C6                     l3092:
  2116  0001C6  FFFF               	dw	65535	; assembler added errata NOP
  2117                           
  2118                           ;main.c: 87:                 serial_tx_char(state_translator_micro_to_fpga(&state));
  2119  0001C8  0E7C               	movlw	low _state
  2120  0001CA  6E01               	movwf	state_translator_micro_to_fpga@state^0,c
  2121  0001CC  0E00               	movlw	high _state
  2122  0001CE  6E02               	movwf	(state_translator_micro_to_fpga@state+1)^0,c
  2123  0001D0  EC4D  F011         	call	_state_translator_micro_to_fpga	;wreg free
  2124  0001D4  EC17  F014         	call	_serial_tx_char
  2125  0001D8                     l3094:
  2126  0001D8  FFFF               	dw	65535	; assembler added errata NOP
  2127                           
  2128                           ;main.c: 89:             lcd_update(state);
  2129  0001DA  C07C  F00C         	movff	_state,lcd_update@state
  2130  0001DE  C07D  F00D         	movff	_state+1,lcd_update@state+1
  2131  0001E2  EC9B  F010         	call	_lcd_update	;wreg free
  2132  0001E6                     
  2133                           ;main.c: 91:             state_changed = 0;
  2134  0001E6  0E00               	movlw	0
  2135  0001E8  6E7B               	movwf	_state_changed^0,c
  2136  0001EA                     l3098:
  2137  0001EA  FFFF               	dw	65535	; assembler added errata NOP
  2138                           
  2139                           ;main.c: 94:         if (state == 2){
  2140  0001EC  0E02               	movlw	2
  2141  0001EE  187C               	xorwf	_state^0,w,c
  2142  0001F0  107D               	iorwf	(_state+1)^0,w,c
  2143  0001F2  A4D8               	btfss	status,2,c
  2144  0001F4  EFFE  F000         	goto	u2991
  2145  0001F8  EF01  F001         	goto	u2990
  2146  0001FC                     u2991:
  2147  0001FC  FFFF               	dw	65535	; assembler added errata NOP
  2148  0001FE  EF05  F001         	goto	l152
  2149  000202                     u2990:
  2150  000202  FFFF               	dw	65535	; assembler added errata NOP
  2151  000204                     
  2152                           ;main.c: 95:             LATAbits.LATA1 = 1;
  2153  000204  8289               	bsf	137,1,c	;volatile
  2154                           
  2155                           ;main.c: 96:         } else {
  2156  000206  EFB3  F000         	goto	l3078
  2157  00020A                     l152:
  2158  00020A  FFFF               	dw	65535	; assembler added errata NOP
  2159                           
  2160                           ;main.c: 97:             LATAbits.LATA1 = 0;
  2161  00020C  9289               	bcf	137,1,c	;volatile
  2162  00020E                     
  2163                           ;main.c: 98:             if (state == 0) {
  2164  00020E  507C               	movf	_state^0,w,c
  2165  000210  107D               	iorwf	(_state+1)^0,w,c
  2166  000212  A4D8               	btfss	status,2,c
  2167  000214  EF0E  F001         	goto	u3001
  2168  000218  EF11  F001         	goto	u3000
  2169  00021C                     u3001:
  2170  00021C  FFFF               	dw	65535	; assembler added errata NOP
  2171  00021E  EF57  F001         	goto	l3114
  2172  000222                     u3000:
  2173  000222  FFFF               	dw	65535	; assembler added errata NOP
  2174  000224                     
  2175                           ;main.c: 100:                 configure_ad_conversion_tank();
  2176  000224  EC27  F014         	call	_configure_ad_conversion_tank	;wreg free
  2177  000228                     
  2178                           ;main.c: 101:                 if (get_liters() < 0.1){
  2179  000228  EC45  F012         	call	_get_liters	;wreg free
  2180  00022C  C03E  F06B         	movff	?_get_liters,_main$1663
  2181  000230  C03F  F06C         	movff	?_get_liters+1,_main$1663+1
  2182  000234  0E00               	movlw	0
  2183  000236  BE6C               	btfsc	(_main$1663+1)^0,7,c
  2184  000238  0EFF               	movlw	-1
  2185  00023A  6E6D               	movwf	(_main$1663+2)^0,c
  2186  00023C  6E6E               	movwf	(_main$1663+3)^0,c
  2187  00023E                     
  2188                           ;main.c: 101:                 if (get_liters() < 0.1){
  2189  00023E  C06B  F00D         	movff	_main$1663,___xxtofl@val
  2190  000242  C06C  F00E         	movff	_main$1663+1,___xxtofl@val+1
  2191  000246  C06D  F00F         	movff	_main$1663+2,___xxtofl@val+2
  2192  00024A  C06E  F010         	movff	_main$1663+3,___xxtofl@val+3
  2193  00024E  0E01               	movlw	1
  2194  000250  EC69  F00C         	call	___xxtofl
  2195  000254  C00D  F040         	movff	?___xxtofl,___flge@ff1
  2196  000258  C00E  F041         	movff	?___xxtofl+1,___flge@ff1+1
  2197  00025C  C00F  F042         	movff	?___xxtofl+2,___flge@ff1+2
  2198  000260  C010  F043         	movff	?___xxtofl+3,___flge@ff1+3
  2199  000264  0ECD               	movlw	205
  2200  000266  6E44               	movwf	___flge@ff2^0,c
  2201  000268  0ECC               	movlw	204
  2202  00026A  6E45               	movwf	(___flge@ff2+1)^0,c
  2203  00026C  0ECC               	movlw	204
  2204  00026E  6E46               	movwf	(___flge@ff2+2)^0,c
  2205  000270  0E3D               	movlw	61
  2206  000272  6E47               	movwf	(___flge@ff2+3)^0,c
  2207  000274  ECB7  F00E         	call	___flge	;wreg free
  2208  000278  B0D8               	btfsc	status,0,c
  2209  00027A  EF41  F001         	goto	u3011
  2210  00027E  EF44  F001         	goto	u3010
  2211  000282                     u3011:
  2212  000282  FFFF               	dw	65535	; assembler added errata NOP
  2213  000284  EFF1  F004         	goto	l3280
  2214  000288                     u3010:
  2215  000288  FFFF               	dw	65535	; assembler added errata NOP
  2216  00028A                     
  2217                           ;main.c: 102:                     LATCbits.LATC5 = 1;
  2218  00028A  8A8B               	bsf	139,5,c	;volatile
  2219                           
  2220                           ;main.c: 103:                     LATCbits.LATC4 = 1;
  2221  00028C  888B               	bsf	139,4,c	;volatile
  2222  00028E                     
  2223                           ;main.c: 104:                     state = 14;
  2224  00028E  0E00               	movlw	0
  2225  000290  6E7D               	movwf	(_state+1)^0,c
  2226  000292  0E0E               	movlw	14
  2227  000294  6E7C               	movwf	_state^0,c
  2228                           
  2229                           ;main.c: 105:                     state_changed = 1;
  2230  000296  0E01               	movlw	1
  2231  000298  6E7B               	movwf	_state_changed^0,c
  2232                           
  2233                           ;main.c: 106:                     state_before_error = 0;
  2234  00029A  0E00               	movlw	0
  2235  00029C  0100               	movlb	0	; () banked
  2236  00029E  6FBF               	movwf	(_state_before_error+1)& (0+255),b
  2237  0002A0  0E00               	movlw	0
  2238  0002A2  6FBE               	movwf	_state_before_error& (0+255),b
  2239  0002A4  EFF1  F004         	goto	l3280
  2240  0002A8                     l155:
  2241  0002A8  FFFF               	dw	65535	; assembler added errata NOP
  2242                           
  2243                           ;main.c: 108:             } else if (state == 1){
  2244  0002AA  EFF1  F004         	goto	l3280
  2245  0002AE                     l3114:
  2246  0002AE  FFFF               	dw	65535	; assembler added errata NOP
  2247  0002B0  047C               	decf	_state^0,w,c
  2248  0002B2  107D               	iorwf	(_state+1)^0,w,c
  2249  0002B4  A4D8               	btfss	status,2,c
  2250  0002B6  EF5F  F001         	goto	u3021
  2251  0002BA  EF62  F001         	goto	u3020
  2252  0002BE                     u3021:
  2253  0002BE  FFFF               	dw	65535	; assembler added errata NOP
  2254  0002C0  EF6C  F001         	goto	l3118
  2255  0002C4                     u3020:
  2256  0002C4  FFFF               	dw	65535	; assembler added errata NOP
  2257  0002C6                     l3116:
  2258  0002C6  FFFF               	dw	65535	; assembler added errata NOP
  2259                           
  2260                           ;main.c: 109:                 state = 2;
  2261  0002C8  0E00               	movlw	0
  2262  0002CA  6E7D               	movwf	(_state+1)^0,c
  2263  0002CC  0E02               	movlw	2
  2264  0002CE  6E7C               	movwf	_state^0,c
  2265                           
  2266                           ;main.c: 110:                 state_changed = 1;
  2267  0002D0  0E01               	movlw	1
  2268  0002D2  6E7B               	movwf	_state_changed^0,c
  2269                           
  2270                           ;main.c: 111:             } else if (state == 3){
  2271  0002D4  EFF1  F004         	goto	l3280
  2272  0002D8                     l3118:
  2273  0002D8  FFFF               	dw	65535	; assembler added errata NOP
  2274  0002DA  0E03               	movlw	3
  2275  0002DC  187C               	xorwf	_state^0,w,c
  2276  0002DE  107D               	iorwf	(_state+1)^0,w,c
  2277  0002E0  A4D8               	btfss	status,2,c
  2278  0002E2  EF75  F001         	goto	u3031
  2279  0002E6  EF78  F001         	goto	u3030
  2280  0002EA                     u3031:
  2281  0002EA  FFFF               	dw	65535	; assembler added errata NOP
  2282  0002EC  EF81  F001         	goto	l3122
  2283  0002F0                     u3030:
  2284  0002F0  FFFF               	dw	65535	; assembler added errata NOP
  2285  0002F2                     
  2286                           ;main.c: 112:                 state = 4;
  2287  0002F2  0E00               	movlw	0
  2288  0002F4  6E7D               	movwf	(_state+1)^0,c
  2289  0002F6  0E04               	movlw	4
  2290  0002F8  6E7C               	movwf	_state^0,c
  2291                           
  2292                           ;main.c: 113:                 state_changed = 1;
  2293  0002FA  0E01               	movlw	1
  2294  0002FC  6E7B               	movwf	_state_changed^0,c
  2295                           
  2296                           ;main.c: 114:             } else if (state == 4){
  2297  0002FE  EFF1  F004         	goto	l3280
  2298  000302                     l3122:
  2299  000302  FFFF               	dw	65535	; assembler added errata NOP
  2300  000304  0E04               	movlw	4
  2301  000306  187C               	xorwf	_state^0,w,c
  2302  000308  107D               	iorwf	(_state+1)^0,w,c
  2303  00030A  A4D8               	btfss	status,2,c
  2304  00030C  EF8A  F001         	goto	u3041
  2305  000310  EF8D  F001         	goto	u3040
  2306  000314                     u3041:
  2307  000314  FFFF               	dw	65535	; assembler added errata NOP
  2308  000316  EFD7  F001         	goto	l3140
  2309  00031A                     u3040:
  2310  00031A  FFFF               	dw	65535	; assembler added errata NOP
  2311  00031C                     
  2312                           ;main.c: 115:                 if (timer_done){
  2313  00031C  5079               	movf	_timer_done^0,w,c
  2314  00031E  B4D8               	btfsc	status,2,c
  2315  000320  EF94  F001         	goto	u3051
  2316  000324  EF97  F001         	goto	u3050
  2317  000328                     u3051:
  2318  000328  FFFF               	dw	65535	; assembler added errata NOP
  2319  00032A  EFBE  F001         	goto	l162
  2320  00032E                     u3050:
  2321  00032E  FFFF               	dw	65535	; assembler added errata NOP
  2322  000330                     
  2323                           ;main.c: 116:                     if(check_temperature(get_temperature())){
  2324  000330  EC0D  F012         	call	_get_temperature	;wreg free
  2325  000334  C03E  F04C         	movff	?_get_temperature,check_temperature@temp_to_be_checked
  2326  000338  C03F  F04D         	movff	?_get_temperature+1,check_temperature@temp_to_be_checked+1
  2327  00033C  EC30  F010         	call	_check_temperature	;wreg free
  2328  000340  504C               	movf	?_check_temperature^0,w,c
  2329  000342  104D               	iorwf	(?_check_temperature+1)^0,w,c
  2330  000344  B4D8               	btfsc	status,2,c
  2331  000346  EFA7  F001         	goto	u3061
  2332  00034A  EFAA  F001         	goto	u3060
  2333  00034E                     u3061:
  2334  00034E  FFFF               	dw	65535	; assembler added errata NOP
  2335  000350  EFB1  F001         	goto	l3130
  2336  000354                     u3060:
  2337  000354  FFFF               	dw	65535	; assembler added errata NOP
  2338  000356                     
  2339                           ;main.c: 117:                         state = 2;
  2340  000356  0E00               	movlw	0
  2341  000358  6E7D               	movwf	(_state+1)^0,c
  2342  00035A  0E02               	movlw	2
  2343  00035C  6E7C               	movwf	_state^0,c
  2344                           
  2345                           ;main.c: 118:                     } else{
  2346  00035E  EFB7  F001         	goto	l164
  2347  000362                     l3130:
  2348  000362  FFFF               	dw	65535	; assembler added errata NOP
  2349                           
  2350                           ;main.c: 119:                         state = 14;
  2351  000364  0E00               	movlw	0
  2352  000366  6E7D               	movwf	(_state+1)^0,c
  2353  000368  0E0E               	movlw	14
  2354  00036A  6E7C               	movwf	_state^0,c
  2355  00036C                     
  2356                           ;main.c: 120:                         LATCbits.LATC4 = 1;
  2357  00036C  888B               	bsf	139,4,c	;volatile
  2358  00036E                     l164:
  2359  00036E  FFFF               	dw	65535	; assembler added errata NOP
  2360                           
  2361                           ;main.c: 122:                     state_changed = 1;
  2362  000370  0E01               	movlw	1
  2363  000372  6E7B               	movwf	_state_changed^0,c
  2364                           
  2365                           ;main.c: 123:                     timer_done = 0;
  2366  000374  0E00               	movlw	0
  2367  000376  6E79               	movwf	_timer_done^0,c
  2368                           
  2369                           ;main.c: 124:                 } else {
  2370  000378  EFF1  F004         	goto	l3280
  2371  00037C                     l162:
  2372  00037C  FFFF               	dw	65535	; assembler added errata NOP
  2373                           
  2374                           ;main.c: 125:                     if (T0CONbits.TMR0ON == 0){
  2375  00037E  BED5               	btfsc	213,7,c	;volatile
  2376  000380  EFC4  F001         	goto	u3071
  2377  000384  EFC7  F001         	goto	u3070
  2378  000388                     u3071:
  2379  000388  FFFF               	dw	65535	; assembler added errata NOP
  2380  00038A  EFCE  F001         	goto	l166
  2381  00038E                     u3070:
  2382  00038E  FFFF               	dw	65535	; assembler added errata NOP
  2383  000390                     
  2384                           ;main.c: 126:                         configure_ad_conversion_oven();
  2385  000390  EC36  F014         	call	_configure_ad_conversion_oven	;wreg free
  2386  000394                     
  2387                           ;main.c: 127:                         wait_for_zero();
  2388  000394  ECF3  F013         	call	_wait_for_zero	;wreg free
  2389  000398                     
  2390                           ;main.c: 128:                         init_timer_0();
  2391  000398  EC06  F014         	call	_init_timer_0	;wreg free
  2392  00039C                     l166:
  2393  00039C  FFFF               	dw	65535	; assembler added errata NOP
  2394                           
  2395                           ;main.c: 130:                     int current_temp = get_temperature();
  2396  00039E  EC0D  F012         	call	_get_temperature	;wreg free
  2397  0003A2  C03E  F068         	movff	?_get_temperature,main@current_temp
  2398  0003A6  C03F  F069         	movff	?_get_temperature+1,main@current_temp+1
  2399  0003AA  EFF1  F004         	goto	l3280
  2400  0003AE                     l3140:
  2401  0003AE  FFFF               	dw	65535	; assembler added errata NOP
  2402  0003B0  0E05               	movlw	5
  2403  0003B2  187C               	xorwf	_state^0,w,c
  2404  0003B4  107D               	iorwf	(_state+1)^0,w,c
  2405  0003B6  A4D8               	btfss	status,2,c
  2406  0003B8  EFE0  F001         	goto	u3081
  2407  0003BC  EFE3  F001         	goto	u3080
  2408  0003C0                     u3081:
  2409  0003C0  FFFF               	dw	65535	; assembler added errata NOP
  2410  0003C2  EF4B  F002         	goto	l3156
  2411  0003C6                     u3080:
  2412  0003C6  FFFF               	dw	65535	; assembler added errata NOP
  2413  0003C8                     
  2414                           ;main.c: 135:                 init_stepper(&joint_stepper, 0, 0, 1, hex_joint_values, &L
      +                          ATB);
  2415  0003C8  0EAE               	movlw	low _joint_stepper
  2416  0003CA  6E01               	movwf	init_stepper@stepper_motor^0,c
  2417  0003CC  0E00               	movlw	high _joint_stepper
  2418  0003CE  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  2419  0003D0  0E00               	movlw	0
  2420  0003D2  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  2421  0003D4  0E00               	movlw	0
  2422  0003D6  6E03               	movwf	init_stepper@current_coil^0,c
  2423  0003D8  0E00               	movlw	0
  2424  0003DA  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  2425  0003DC  0E00               	movlw	0
  2426  0003DE  6E05               	movwf	init_stepper@step_counter^0,c
  2427  0003E0  0E00               	movlw	0
  2428  0003E2  6E08               	movwf	(init_stepper@direction+1)^0,c
  2429  0003E4  0E01               	movlw	1
  2430  0003E6  6E07               	movwf	init_stepper@direction^0,c
  2431  0003E8  0EC4               	movlw	low _hex_joint_values
  2432  0003EA  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  2433  0003EC  0E00               	movlw	high _hex_joint_values
  2434  0003EE  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  2435  0003F0  0E8A               	movlw	138
  2436  0003F2  6E0B               	movwf	init_stepper@register_name^0,c
  2437  0003F4  0E0F               	movlw	15
  2438  0003F6  6E0C               	movwf	(init_stepper@register_name+1)^0,c
  2439  0003F8  ECF9  F010         	call	_init_stepper	;wreg free
  2440                           
  2441                           ;main.c: 136:                 init_stepper(&end_effector_stepper, 0, 0, 1, hex_end_effec
      +                          tor_values, &LATB);
  2442  0003FC  0EA2               	movlw	low _end_effector_stepper
  2443  0003FE  6E01               	movwf	init_stepper@stepper_motor^0,c
  2444  000400  0E00               	movlw	high _end_effector_stepper
  2445  000402  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  2446  000404  0E00               	movlw	0
  2447  000406  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  2448  000408  0E00               	movlw	0
  2449  00040A  6E03               	movwf	init_stepper@current_coil^0,c
  2450  00040C  0E00               	movlw	0
  2451  00040E  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  2452  000410  0E00               	movlw	0
  2453  000412  6E05               	movwf	init_stepper@step_counter^0,c
  2454  000414  0E00               	movlw	0
  2455  000416  6E08               	movwf	(init_stepper@direction+1)^0,c
  2456  000418  0E01               	movlw	1
  2457  00041A  6E07               	movwf	init_stepper@direction^0,c
  2458  00041C  0EC0               	movlw	low _hex_end_effector_values
  2459  00041E  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  2460  000420  0E00               	movlw	high _hex_end_effector_values
  2461  000422  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  2462  000424  0E8A               	movlw	138
  2463  000426  6E0B               	movwf	init_stepper@register_name^0,c
  2464  000428  0E0F               	movlw	15
  2465  00042A  6E0C               	movwf	(init_stepper@register_name+1)^0,c
  2466  00042C  ECF9  F010         	call	_init_stepper	;wreg free
  2467                           
  2468                           ;main.c: 137:                 init_stepper(&joint_dilutor_stepper, 0, 0, 1, hex_joint_va
      +                          lues, &LATC);
  2469  000430  0E96               	movlw	low _joint_dilutor_stepper
  2470  000432  6E01               	movwf	init_stepper@stepper_motor^0,c
  2471  000434  0E00               	movlw	high _joint_dilutor_stepper
  2472  000436  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  2473  000438  0E00               	movlw	0
  2474  00043A  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  2475  00043C  0E00               	movlw	0
  2476  00043E  6E03               	movwf	init_stepper@current_coil^0,c
  2477  000440  0E00               	movlw	0
  2478  000442  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  2479  000444  0E00               	movlw	0
  2480  000446  6E05               	movwf	init_stepper@step_counter^0,c
  2481  000448  0E00               	movlw	0
  2482  00044A  6E08               	movwf	(init_stepper@direction+1)^0,c
  2483  00044C  0E01               	movlw	1
  2484  00044E  6E07               	movwf	init_stepper@direction^0,c
  2485  000450  0EC4               	movlw	low _hex_joint_values
  2486  000452  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  2487  000454  0E00               	movlw	high _hex_joint_values
  2488  000456  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  2489  000458  0E8B               	movlw	139
  2490  00045A  6E0B               	movwf	init_stepper@register_name^0,c
  2491  00045C  0E0F               	movlw	15
  2492  00045E  6E0C               	movwf	(init_stepper@register_name+1)^0,c
  2493  000460  ECF9  F010         	call	_init_stepper	;wreg free
  2494  000464                     
  2495                           ;main.c: 138:                 grasping_joint_position_reached = 0;
  2496  000464  0E00               	movlw	0
  2497  000466  6E72               	movwf	(_grasping_joint_position_reached+1)^0,c
  2498  000468  0E00               	movlw	0
  2499  00046A  6E71               	movwf	_grasping_joint_position_reached^0,c
  2500  00046C                     
  2501                           ;main.c: 139:                 grasping_ee_position_reached = 0;
  2502  00046C  0E00               	movlw	0
  2503  00046E  0100               	movlb	0	; () banked
  2504  000470  6F8F               	movwf	(_grasping_ee_position_reached+1)& (0+255),b
  2505  000472  0E00               	movlw	0
  2506  000474  6F8E               	movwf	_grasping_ee_position_reached& (0+255),b
  2507  000476                     
  2508                           ; BSR set to: 0
  2509                           ;main.c: 140:                 end_effector_homed = 0;
  2510  000476  0E00               	movlw	0
  2511  000478  6E70               	movwf	(_end_effector_homed+1)^0,c
  2512  00047A  0E00               	movlw	0
  2513  00047C  6E6F               	movwf	_end_effector_homed^0,c
  2514  00047E                     
  2515                           ; BSR set to: 0
  2516                           ;main.c: 141:                 joint_homed = 0;
  2517  00047E  0E00               	movlw	0
  2518  000480  6F8B               	movwf	(_joint_homed+1)& (0+255),b
  2519  000482  0E00               	movlw	0
  2520  000484  6F8A               	movwf	_joint_homed& (0+255),b
  2521  000486                     
  2522                           ; BSR set to: 0
  2523                           ;main.c: 142:                 state = 6;
  2524  000486  0E00               	movlw	0
  2525  000488  6E7D               	movwf	(_state+1)^0,c
  2526  00048A  0E06               	movlw	6
  2527  00048C  6E7C               	movwf	_state^0,c
  2528  00048E                     
  2529                           ; BSR set to: 0
  2530                           ;main.c: 143:                 state_changed = 1;
  2531  00048E  0E01               	movlw	1
  2532  000490  6E7B               	movwf	_state_changed^0,c
  2533                           
  2534                           ;main.c: 144:             }else if (state == 6){
  2535  000492  EFF1  F004         	goto	l3280
  2536  000496                     l3156:
  2537  000496  FFFF               	dw	65535	; assembler added errata NOP
  2538  000498  0E06               	movlw	6
  2539  00049A  187C               	xorwf	_state^0,w,c
  2540  00049C  107D               	iorwf	(_state+1)^0,w,c
  2541  00049E  A4D8               	btfss	status,2,c
  2542  0004A0  EF54  F002         	goto	u3091
  2543  0004A4  EF57  F002         	goto	u3090
  2544  0004A8                     u3091:
  2545  0004A8  FFFF               	dw	65535	; assembler added errata NOP
  2546  0004AA  EFBE  F002         	goto	l3174
  2547  0004AE                     u3090:
  2548  0004AE  FFFF               	dw	65535	; assembler added errata NOP
  2549  0004B0                     
  2550                           ;main.c: 145:                 _delay((unsigned long)((20)*(4000000/4000.0)));
  2551  0004B0  0E14               	movlw	20
  2552  0004B2  6E66               	movwf	??_main^0,c
  2553  0004B4  0E7D               	movlw	125
  2554  0004B6                     u3447:
  2555  0004B6  FFFF               	dw	65535	; errata NOP
  2556  0004B8  2EE8               	decfsz	wreg,f,c
  2557  0004BA  D7FD               	bra	u3447
  2558  0004BC  2E66               	decfsz	??_main^0,f,c
  2559  0004BE  D7FB               	bra	u3447
  2560  0004C0  D000               	nop2	
  2561  0004C2                     
  2562                           ;main.c: 146:                 if (!grasping_joint_position_reached){
  2563  0004C2  5071               	movf	_grasping_joint_position_reached^0,w,c
  2564  0004C4  1072               	iorwf	(_grasping_joint_position_reached+1)^0,w,c
  2565  0004C6  A4D8               	btfss	status,2,c
  2566  0004C8  EF68  F002         	goto	u3101
  2567  0004CC  EF6B  F002         	goto	u3100
  2568  0004D0                     u3101:
  2569  0004D0  FFFF               	dw	65535	; assembler added errata NOP
  2570  0004D2  EF7A  F002         	goto	l3164
  2571  0004D6                     u3100:
  2572  0004D6  FFFF               	dw	65535	; assembler added errata NOP
  2573  0004D8                     
  2574                           ;main.c: 147:                     grasping_joint_position_reached = reach_goal(&joint_st
      +                          epper, 50);
  2575  0004D8  0EAE               	movlw	low _joint_stepper
  2576  0004DA  6E09               	movwf	reach_goal@stepper_motor^0,c
  2577  0004DC  0E00               	movlw	high _joint_stepper
  2578  0004DE  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  2579  0004E0  0E00               	movlw	0
  2580  0004E2  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2581  0004E4  0E32               	movlw	50
  2582  0004E6  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  2583  0004E8  ECD1  F011         	call	_reach_goal	;wreg free
  2584  0004EC  C009  F071         	movff	?_reach_goal,_grasping_joint_position_reached
  2585  0004F0  C00A  F072         	movff	?_reach_goal+1,_grasping_joint_position_reached+1
  2586  0004F4                     l3164:
  2587  0004F4  FFFF               	dw	65535	; assembler added errata NOP
  2588                           
  2589                           ;main.c: 150:                 if (grasping_joint_position_reached && !grasping_ee_positi
      +                          on_reached){
  2590  0004F6  5071               	movf	_grasping_joint_position_reached^0,w,c
  2591  0004F8  1072               	iorwf	(_grasping_joint_position_reached+1)^0,w,c
  2592  0004FA  B4D8               	btfsc	status,2,c
  2593  0004FC  EF82  F002         	goto	u3111
  2594  000500  EF85  F002         	goto	u3110
  2595  000504                     u3111:
  2596  000504  FFFF               	dw	65535	; assembler added errata NOP
  2597  000506  EFA0  F002         	goto	l3170
  2598  00050A                     u3110:
  2599  00050A  FFFF               	dw	65535	; assembler added errata NOP
  2600  00050C  0100               	movlb	0	; () banked
  2601  00050E  518E               	movf	_grasping_ee_position_reached& (0+255),w,b
  2602  000510  118F               	iorwf	(_grasping_ee_position_reached+1)& (0+255),w,b
  2603  000512  A4D8               	btfss	status,2,c
  2604  000514  EF8E  F002         	goto	u3121
  2605  000518  EF91  F002         	goto	u3120
  2606  00051C                     u3121:
  2607  00051C  FFFF               	dw	65535	; assembler added errata NOP
  2608  00051E  EFA0  F002         	goto	l3170
  2609  000522                     u3120:
  2610  000522  FFFF               	dw	65535	; assembler added errata NOP
  2611  000524                     
  2612                           ; BSR set to: 0
  2613                           ;main.c: 151:                     grasping_ee_position_reached = reach_goal(&end_effecto
      +                          r_stepper, 100);
  2614  000524  0EA2               	movlw	low _end_effector_stepper
  2615  000526  6E09               	movwf	reach_goal@stepper_motor^0,c
  2616  000528  0E00               	movlw	high _end_effector_stepper
  2617  00052A  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  2618  00052C  0E00               	movlw	0
  2619  00052E  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2620  000530  0E64               	movlw	100
  2621  000532  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  2622  000534  ECD1  F011         	call	_reach_goal	;wreg free
  2623  000538  C009  F08E         	movff	?_reach_goal,_grasping_ee_position_reached
  2624  00053C  C00A  F08F         	movff	?_reach_goal+1,_grasping_ee_position_reached+1
  2625  000540                     l3170:
  2626  000540  FFFF               	dw	65535	; assembler added errata NOP
  2627                           
  2628                           ;main.c: 153:                 if (grasping_joint_position_reached * grasping_ee_position
      +                          _reached){
  2629  000542  C071  F001         	movff	_grasping_joint_position_reached,___wmul@multiplier
  2630  000546  C072  F002         	movff	_grasping_joint_position_reached+1,___wmul@multiplier+1
  2631  00054A  C08E  F003         	movff	_grasping_ee_position_reached,___wmul@multiplicand
  2632  00054E  C08F  F004         	movff	_grasping_ee_position_reached+1,___wmul@multiplicand+1
  2633  000552  ECC9  F013         	call	___wmul	;wreg free
  2634  000556  5001               	movf	?___wmul^0,w,c
  2635  000558  1002               	iorwf	(?___wmul+1)^0,w,c
  2636  00055A  B4D8               	btfsc	status,2,c
  2637  00055C  EFB2  F002         	goto	u3131
  2638  000560  EFB5  F002         	goto	u3130
  2639  000564                     u3131:
  2640  000564  FFFF               	dw	65535	; assembler added errata NOP
  2641  000566  EFF1  F004         	goto	l3280
  2642  00056A                     u3130:
  2643  00056A  FFFF               	dw	65535	; assembler added errata NOP
  2644  00056C                     
  2645                           ;main.c: 154:                     state = 7;
  2646  00056C  0E00               	movlw	0
  2647  00056E  6E7D               	movwf	(_state+1)^0,c
  2648  000570  0E07               	movlw	7
  2649  000572  6E7C               	movwf	_state^0,c
  2650                           
  2651                           ;main.c: 155:                     state_changed = 1;
  2652  000574  0E01               	movlw	1
  2653  000576  6E7B               	movwf	_state_changed^0,c
  2654  000578  EFF1  F004         	goto	l3280
  2655  00057C                     l3174:
  2656  00057C  FFFF               	dw	65535	; assembler added errata NOP
  2657  00057E  0E07               	movlw	7
  2658  000580  187C               	xorwf	_state^0,w,c
  2659  000582  107D               	iorwf	(_state+1)^0,w,c
  2660  000584  A4D8               	btfss	status,2,c
  2661  000586  EFC7  F002         	goto	u3141
  2662  00058A  EFCA  F002         	goto	u3140
  2663  00058E                     u3141:
  2664  00058E  FFFF               	dw	65535	; assembler added errata NOP
  2665  000590  EF39  F003         	goto	l3198
  2666  000594                     u3140:
  2667  000594  FFFF               	dw	65535	; assembler added errata NOP
  2668  000596                     
  2669                           ;main.c: 158:                 _delay((unsigned long)((5)*(4000000/4000.0)));
  2670  000596  0E05               	movlw	5
  2671  000598  6E66               	movwf	??_main^0,c
  2672  00059A  0EDF               	movlw	223
  2673  00059C                     u3457:
  2674  00059C  FFFF               	dw	65535	; errata NOP
  2675  00059E  2EE8               	decfsz	wreg,f,c
  2676  0005A0  D7FD               	bra	u3457
  2677  0005A2  2E66               	decfsz	??_main^0,f,c
  2678  0005A4  D7FB               	bra	u3457
  2679  0005A6                     
  2680                           ;main.c: 159:                 if (reach_goal(&joint_stepper, 100)) {
  2681  0005A6  0EAE               	movlw	low _joint_stepper
  2682  0005A8  6E09               	movwf	reach_goal@stepper_motor^0,c
  2683  0005AA  0E00               	movlw	high _joint_stepper
  2684  0005AC  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  2685  0005AE  0E00               	movlw	0
  2686  0005B0  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2687  0005B2  0E64               	movlw	100
  2688  0005B4  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  2689  0005B6  ECD1  F011         	call	_reach_goal	;wreg free
  2690  0005BA  5009               	movf	?_reach_goal^0,w,c
  2691  0005BC  100A               	iorwf	(?_reach_goal+1)^0,w,c
  2692  0005BE  B4D8               	btfsc	status,2,c
  2693  0005C0  EFE4  F002         	goto	u3151
  2694  0005C4  EFE7  F002         	goto	u3150
  2695  0005C8                     u3151:
  2696  0005C8  FFFF               	dw	65535	; assembler added errata NOP
  2697  0005CA  EFF0  F002         	goto	l3184
  2698  0005CE                     u3150:
  2699  0005CE  FFFF               	dw	65535	; assembler added errata NOP
  2700  0005D0                     
  2701                           ;main.c: 160:                     change_direction(&joint_stepper);
  2702  0005D0  0EAE               	movlw	low _joint_stepper
  2703  0005D2  6E01               	movwf	change_direction@stepper_motor^0,c
  2704  0005D4  0E00               	movlw	high _joint_stepper
  2705  0005D6  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2706  0005D8  EC83  F013         	call	_change_direction	;wreg free
  2707  0005DC                     
  2708                           ;main.c: 161:                     mix_counter++;
  2709  0005DC  4A77               	infsnz	_mix_counter^0,f,c
  2710  0005DE  2A78               	incf	(_mix_counter+1)^0,f,c
  2711  0005E0                     l3184:
  2712  0005E0  FFFF               	dw	65535	; assembler added errata NOP
  2713                           
  2714                           ;main.c: 164:                 if (mix_counter == 20 && !dilution_done){
  2715  0005E2  0E14               	movlw	20
  2716  0005E4  1877               	xorwf	_mix_counter^0,w,c
  2717  0005E6  1078               	iorwf	(_mix_counter+1)^0,w,c
  2718  0005E8  A4D8               	btfss	status,2,c
  2719  0005EA  EFF9  F002         	goto	u3161
  2720  0005EE  EFFC  F002         	goto	u3160
  2721  0005F2                     u3161:
  2722  0005F2  FFFF               	dw	65535	; assembler added errata NOP
  2723  0005F4  EF10  F003         	goto	l3190
  2724  0005F8                     u3160:
  2725  0005F8  FFFF               	dw	65535	; assembler added errata NOP
  2726  0005FA  5075               	movf	_dilution_done^0,w,c
  2727  0005FC  1076               	iorwf	(_dilution_done+1)^0,w,c
  2728  0005FE  A4D8               	btfss	status,2,c
  2729  000600  EF04  F003         	goto	u3171
  2730  000604  EF07  F003         	goto	u3170
  2731  000608                     u3171:
  2732  000608  FFFF               	dw	65535	; assembler added errata NOP
  2733  00060A  EF10  F003         	goto	l3190
  2734  00060E                     u3170:
  2735  00060E  FFFF               	dw	65535	; assembler added errata NOP
  2736  000610                     
  2737                           ;main.c: 165:                     state = 8;
  2738  000610  0E00               	movlw	0
  2739  000612  6E7D               	movwf	(_state+1)^0,c
  2740  000614  0E08               	movlw	8
  2741  000616  6E7C               	movwf	_state^0,c
  2742                           
  2743                           ;main.c: 166:                     state_changed = 1;
  2744  000618  0E01               	movlw	1
  2745  00061A  6E7B               	movwf	_state_changed^0,c
  2746                           
  2747                           ;main.c: 167:                 } else if (mix_counter == 40) {
  2748  00061C  EFF1  F004         	goto	l3280
  2749  000620                     l3190:
  2750  000620  FFFF               	dw	65535	; assembler added errata NOP
  2751  000622  0E28               	movlw	40
  2752  000624  1877               	xorwf	_mix_counter^0,w,c
  2753  000626  1078               	iorwf	(_mix_counter+1)^0,w,c
  2754  000628  A4D8               	btfss	status,2,c
  2755  00062A  EF19  F003         	goto	u3181
  2756  00062E  EF1C  F003         	goto	u3180
  2757  000632                     u3181:
  2758  000632  FFFF               	dw	65535	; assembler added errata NOP
  2759  000634  EF54  F001         	goto	l155
  2760  000638                     u3180:
  2761  000638  FFFF               	dw	65535	; assembler added errata NOP
  2762  00063A                     
  2763                           ;main.c: 168:                     dilution_done = 0;
  2764  00063A  0E00               	movlw	0
  2765  00063C  6E76               	movwf	(_dilution_done+1)^0,c
  2766  00063E  0E00               	movlw	0
  2767  000640  6E75               	movwf	_dilution_done^0,c
  2768                           
  2769                           ;main.c: 169:                     state = 9;
  2770  000642  0E00               	movlw	0
  2771  000644  6E7D               	movwf	(_state+1)^0,c
  2772  000646  0E09               	movlw	9
  2773  000648  6E7C               	movwf	_state^0,c
  2774                           
  2775                           ;main.c: 170:                     state_changed = 1;
  2776  00064A  0E01               	movlw	1
  2777  00064C  6E7B               	movwf	_state_changed^0,c
  2778                           
  2779                           ;main.c: 171:                     mix_counter = 0;
  2780  00064E  0E00               	movlw	0
  2781  000650  6E78               	movwf	(_mix_counter+1)^0,c
  2782  000652  0E00               	movlw	0
  2783  000654  6E77               	movwf	_mix_counter^0,c
  2784  000656                     
  2785                           ;main.c: 173:                     change_direction(&joint_stepper);
  2786  000656  0EAE               	movlw	low _joint_stepper
  2787  000658  6E01               	movwf	change_direction@stepper_motor^0,c
  2788  00065A  0E00               	movlw	high _joint_stepper
  2789  00065C  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2790  00065E  EC83  F013         	call	_change_direction	;wreg free
  2791  000662                     
  2792                           ;main.c: 174:                     change_direction(&end_effector_stepper);
  2793  000662  0EA2               	movlw	low _end_effector_stepper
  2794  000664  6E01               	movwf	change_direction@stepper_motor^0,c
  2795  000666  0E00               	movlw	high _end_effector_stepper
  2796  000668  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2797  00066A  EC83  F013         	call	_change_direction	;wreg free
  2798  00066E  EFF1  F004         	goto	l3280
  2799  000672                     l3198:
  2800  000672  FFFF               	dw	65535	; assembler added errata NOP
  2801  000674  0E08               	movlw	8
  2802  000676  187C               	xorwf	_state^0,w,c
  2803  000678  107D               	iorwf	(_state+1)^0,w,c
  2804  00067A  A4D8               	btfss	status,2,c
  2805  00067C  EF42  F003         	goto	u3191
  2806  000680  EF45  F003         	goto	u3190
  2807  000684                     u3191:
  2808  000684  FFFF               	dw	65535	; assembler added errata NOP
  2809  000686  EFE3  F003         	goto	l3228
  2810  00068A                     u3190:
  2811  00068A  FFFF               	dw	65535	; assembler added errata NOP
  2812  00068C                     
  2813                           ;main.c: 177:                 _delay((unsigned long)((5)*(4000000/4000.0)));
  2814  00068C  0E05               	movlw	5
  2815  00068E  6E66               	movwf	??_main^0,c
  2816  000690  0EDF               	movlw	223
  2817  000692                     u3467:
  2818  000692  FFFF               	dw	65535	; errata NOP
  2819  000694  2EE8               	decfsz	wreg,f,c
  2820  000696  D7FD               	bra	u3467
  2821  000698  2E66               	decfsz	??_main^0,f,c
  2822  00069A  D7FB               	bra	u3467
  2823  00069C                     
  2824                           ;main.c: 178:                 if (!diluting_position_reached){
  2825  00069C  0100               	movlb	0	; () banked
  2826  00069E  518C               	movf	_diluting_position_reached& (0+255),w,b
  2827  0006A0  118D               	iorwf	(_diluting_position_reached+1)& (0+255),w,b
  2828  0006A2  A4D8               	btfss	status,2,c
  2829  0006A4  EF56  F003         	goto	u3201
  2830  0006A8  EF59  F003         	goto	u3200
  2831  0006AC                     u3201:
  2832  0006AC  FFFF               	dw	65535	; assembler added errata NOP
  2833  0006AE  EF6A  F003         	goto	l3206
  2834  0006B2                     u3200:
  2835  0006B2  FFFF               	dw	65535	; assembler added errata NOP
  2836  0006B4                     
  2837                           ; BSR set to: 0
  2838                           ;main.c: 179:                     diluting_position_reached = reach_goal(&joint_dilutor_
      +                          stepper, 200);
  2839  0006B4  0E96               	movlw	low _joint_dilutor_stepper
  2840  0006B6  6E09               	movwf	reach_goal@stepper_motor^0,c
  2841  0006B8  0E00               	movlw	high _joint_dilutor_stepper
  2842  0006BA  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  2843  0006BC  0E00               	movlw	0
  2844  0006BE  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2845  0006C0  0EC8               	movlw	200
  2846  0006C2  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  2847  0006C4  ECD1  F011         	call	_reach_goal	;wreg free
  2848  0006C8  C009  F08C         	movff	?_reach_goal,_diluting_position_reached
  2849  0006CC  C00A  F08D         	movff	?_reach_goal+1,_diluting_position_reached+1
  2850                           
  2851                           ;main.c: 180:                 } else if (!dilution_done && diluting_position_reached){
  2852  0006D0  EFF1  F004         	goto	l3280
  2853  0006D4                     l3206:
  2854  0006D4  FFFF               	dw	65535	; assembler added errata NOP
  2855                           
  2856                           ; BSR set to: 0
  2857  0006D6  5075               	movf	_dilution_done^0,w,c
  2858  0006D8  1076               	iorwf	(_dilution_done+1)^0,w,c
  2859  0006DA  A4D8               	btfss	status,2,c
  2860  0006DC  EF72  F003         	goto	u3211
  2861  0006E0  EF75  F003         	goto	u3210
  2862  0006E4                     u3211:
  2863  0006E4  FFFF               	dw	65535	; assembler added errata NOP
  2864  0006E6  EF99  F003         	goto	l3216
  2865  0006EA                     u3210:
  2866  0006EA  FFFF               	dw	65535	; assembler added errata NOP
  2867  0006EC                     
  2868                           ; BSR set to: 0
  2869  0006EC  518C               	movf	_diluting_position_reached& (0+255),w,b
  2870  0006EE  118D               	iorwf	(_diluting_position_reached+1)& (0+255),w,b
  2871  0006F0  B4D8               	btfsc	status,2,c
  2872  0006F2  EF7D  F003         	goto	u3221
  2873  0006F6  EF80  F003         	goto	u3220
  2874  0006FA                     u3221:
  2875  0006FA  FFFF               	dw	65535	; assembler added errata NOP
  2876  0006FC  EF99  F003         	goto	l3216
  2877  000700                     u3220:
  2878  000700  FFFF               	dw	65535	; assembler added errata NOP
  2879  000702                     
  2880                           ; BSR set to: 0
  2881                           ;main.c: 183:                     _delay((unsigned long)((2000)*(4000000/4000.0)));
  2882  000702  0E08               	movlw	8
  2883  000704  6E67               	movwf	(??_main+1)^0,c
  2884  000706  0E9E               	movlw	158
  2885  000708  6E66               	movwf	??_main^0,c
  2886  00070A  0E4C               	movlw	76
  2887  00070C                     u3477:
  2888  00070C  FFFF               	dw	65535	; errata NOP
  2889  00070E  2EE8               	decfsz	wreg,f,c
  2890  000710  D7FD               	bra	u3477
  2891  000712  2E66               	decfsz	??_main^0,f,c
  2892  000714  D7FB               	bra	u3477
  2893  000716  2E67               	decfsz	(??_main+1)^0,f,c
  2894  000718  D7F9               	bra	u3477
  2895  00071A                     
  2896                           ;main.c: 184:                     dilution_done = 1;
  2897  00071A  0E00               	movlw	0
  2898  00071C  6E76               	movwf	(_dilution_done+1)^0,c
  2899  00071E  0E01               	movlw	1
  2900  000720  6E75               	movwf	_dilution_done^0,c
  2901  000722                     
  2902                           ;main.c: 185:                     change_direction(&joint_dilutor_stepper);
  2903  000722  0E96               	movlw	low _joint_dilutor_stepper
  2904  000724  6E01               	movwf	change_direction@stepper_motor^0,c
  2905  000726  0E00               	movlw	high _joint_dilutor_stepper
  2906  000728  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2907  00072A  EC83  F013         	call	_change_direction	;wreg free
  2908                           
  2909                           ;main.c: 186:                 } else if (dilution_done && !joint_dilutor_homed){
  2910  00072E  EFF1  F004         	goto	l3280
  2911  000732                     l3216:
  2912  000732  FFFF               	dw	65535	; assembler added errata NOP
  2913                           
  2914                           ; BSR set to: 0
  2915  000734  5075               	movf	_dilution_done^0,w,c
  2916  000736  1076               	iorwf	(_dilution_done+1)^0,w,c
  2917  000738  B4D8               	btfsc	status,2,c
  2918  00073A  EFA1  F003         	goto	u3231
  2919  00073E  EFA4  F003         	goto	u3230
  2920  000742                     u3231:
  2921  000742  FFFF               	dw	65535	; assembler added errata NOP
  2922  000744  EFC0  F003         	goto	l3222
  2923  000748                     u3230:
  2924  000748  FFFF               	dw	65535	; assembler added errata NOP
  2925  00074A                     
  2926                           ; BSR set to: 0
  2927  00074A  5188               	movf	_joint_dilutor_homed& (0+255),w,b
  2928  00074C  1189               	iorwf	(_joint_dilutor_homed+1)& (0+255),w,b
  2929  00074E  A4D8               	btfss	status,2,c
  2930  000750  EFAC  F003         	goto	u3241
  2931  000754  EFAF  F003         	goto	u3240
  2932  000758                     u3241:
  2933  000758  FFFF               	dw	65535	; assembler added errata NOP
  2934  00075A  EFC0  F003         	goto	l3222
  2935  00075E                     u3240:
  2936  00075E  FFFF               	dw	65535	; assembler added errata NOP
  2937  000760                     
  2938                           ; BSR set to: 0
  2939                           ;main.c: 187:                     joint_dilutor_homed = reach_goal(&joint_dilutor_steppe
      +                          r, 200);
  2940  000760  0E96               	movlw	low _joint_dilutor_stepper
  2941  000762  6E09               	movwf	reach_goal@stepper_motor^0,c
  2942  000764  0E00               	movlw	high _joint_dilutor_stepper
  2943  000766  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  2944  000768  0E00               	movlw	0
  2945  00076A  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2946  00076C  0EC8               	movlw	200
  2947  00076E  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  2948  000770  ECD1  F011         	call	_reach_goal	;wreg free
  2949  000774  C009  F088         	movff	?_reach_goal,_joint_dilutor_homed
  2950  000778  C00A  F089         	movff	?_reach_goal+1,_joint_dilutor_homed+1
  2951                           
  2952                           ;main.c: 188:                 } else if (dilution_done && joint_dilutor_homed){
  2953  00077C  EFF1  F004         	goto	l3280
  2954  000780                     l3222:
  2955  000780  FFFF               	dw	65535	; assembler added errata NOP
  2956                           
  2957                           ; BSR set to: 0
  2958  000782  5075               	movf	_dilution_done^0,w,c
  2959  000784  1076               	iorwf	(_dilution_done+1)^0,w,c
  2960  000786  B4D8               	btfsc	status,2,c
  2961  000788  EFC8  F003         	goto	u3251
  2962  00078C  EFCB  F003         	goto	u3250
  2963  000790                     u3251:
  2964  000790  FFFF               	dw	65535	; assembler added errata NOP
  2965  000792  EF54  F001         	goto	l155
  2966  000796                     u3250:
  2967  000796  FFFF               	dw	65535	; assembler added errata NOP
  2968  000798                     
  2969                           ; BSR set to: 0
  2970  000798  5188               	movf	_joint_dilutor_homed& (0+255),w,b
  2971  00079A  1189               	iorwf	(_joint_dilutor_homed+1)& (0+255),w,b
  2972  00079C  B4D8               	btfsc	status,2,c
  2973  00079E  EFD3  F003         	goto	u3261
  2974  0007A2  EFD6  F003         	goto	u3260
  2975  0007A6                     u3261:
  2976  0007A6  FFFF               	dw	65535	; assembler added errata NOP
  2977  0007A8  EF54  F001         	goto	l155
  2978  0007AC                     u3260:
  2979  0007AC  FFFF               	dw	65535	; assembler added errata NOP
  2980  0007AE                     
  2981                           ; BSR set to: 0
  2982                           ;main.c: 189:                     state = 7;
  2983  0007AE  0E00               	movlw	0
  2984  0007B0  6E7D               	movwf	(_state+1)^0,c
  2985  0007B2  0E07               	movlw	7
  2986  0007B4  6E7C               	movwf	_state^0,c
  2987                           
  2988                           ;main.c: 190:                     state_changed = 1;
  2989  0007B6  0E01               	movlw	1
  2990  0007B8  6E7B               	movwf	_state_changed^0,c
  2991                           
  2992                           ;main.c: 191:                     diluting_position_reached = 0;
  2993  0007BA  0E00               	movlw	0
  2994  0007BC  6F8D               	movwf	(_diluting_position_reached+1)& (0+255),b
  2995  0007BE  0E00               	movlw	0
  2996  0007C0  6F8C               	movwf	_diluting_position_reached& (0+255),b
  2997  0007C2  EFF1  F004         	goto	l3280
  2998  0007C6                     l3228:
  2999  0007C6  FFFF               	dw	65535	; assembler added errata NOP
  3000  0007C8  0E09               	movlw	9
  3001  0007CA  187C               	xorwf	_state^0,w,c
  3002  0007CC  107D               	iorwf	(_state+1)^0,w,c
  3003  0007CE  A4D8               	btfss	status,2,c
  3004  0007D0  EFEC  F003         	goto	u3271
  3005  0007D4  EFEF  F003         	goto	u3270
  3006  0007D8                     u3271:
  3007  0007D8  FFFF               	dw	65535	; assembler added errata NOP
  3008  0007DA  EF50  F004         	goto	l3246
  3009  0007DE                     u3270:
  3010  0007DE  FFFF               	dw	65535	; assembler added errata NOP
  3011  0007E0                     
  3012                           ;main.c: 195:                 _delay((unsigned long)((20)*(4000000/4000.0)));
  3013  0007E0  0E14               	movlw	20
  3014  0007E2  6E66               	movwf	??_main^0,c
  3015  0007E4  0E7D               	movlw	125
  3016  0007E6                     u3487:
  3017  0007E6  FFFF               	dw	65535	; errata NOP
  3018  0007E8  2EE8               	decfsz	wreg,f,c
  3019  0007EA  D7FD               	bra	u3487
  3020  0007EC  2E66               	decfsz	??_main^0,f,c
  3021  0007EE  D7FB               	bra	u3487
  3022  0007F0  D000               	nop2	
  3023  0007F2                     
  3024                           ;main.c: 197:                 if (!end_effector_homed){
  3025  0007F2  506F               	movf	_end_effector_homed^0,w,c
  3026  0007F4  1070               	iorwf	(_end_effector_homed+1)^0,w,c
  3027  0007F6  A4D8               	btfss	status,2,c
  3028  0007F8  EF00  F004         	goto	u3281
  3029  0007FC  EF03  F004         	goto	u3280
  3030  000800                     u3281:
  3031  000800  FFFF               	dw	65535	; assembler added errata NOP
  3032  000802  EF12  F004         	goto	l3236
  3033  000806                     u3280:
  3034  000806  FFFF               	dw	65535	; assembler added errata NOP
  3035  000808                     
  3036                           ;main.c: 198:                     end_effector_homed = reach_goal(&end_effector_stepper,
      +                           100);
  3037  000808  0EA2               	movlw	low _end_effector_stepper
  3038  00080A  6E09               	movwf	reach_goal@stepper_motor^0,c
  3039  00080C  0E00               	movlw	high _end_effector_stepper
  3040  00080E  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  3041  000810  0E00               	movlw	0
  3042  000812  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  3043  000814  0E64               	movlw	100
  3044  000816  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  3045  000818  ECD1  F011         	call	_reach_goal	;wreg free
  3046  00081C  C009  F06F         	movff	?_reach_goal,_end_effector_homed
  3047  000820  C00A  F070         	movff	?_reach_goal+1,_end_effector_homed+1
  3048  000824                     l3236:
  3049  000824  FFFF               	dw	65535	; assembler added errata NOP
  3050                           
  3051                           ;main.c: 201:                 if (end_effector_homed && !joint_homed){
  3052  000826  506F               	movf	_end_effector_homed^0,w,c
  3053  000828  1070               	iorwf	(_end_effector_homed+1)^0,w,c
  3054  00082A  B4D8               	btfsc	status,2,c
  3055  00082C  EF1A  F004         	goto	u3291
  3056  000830  EF1D  F004         	goto	u3290
  3057  000834                     u3291:
  3058  000834  FFFF               	dw	65535	; assembler added errata NOP
  3059  000836  EF38  F004         	goto	l3242
  3060  00083A                     u3290:
  3061  00083A  FFFF               	dw	65535	; assembler added errata NOP
  3062  00083C  0100               	movlb	0	; () banked
  3063  00083E  518A               	movf	_joint_homed& (0+255),w,b
  3064  000840  118B               	iorwf	(_joint_homed+1)& (0+255),w,b
  3065  000842  A4D8               	btfss	status,2,c
  3066  000844  EF26  F004         	goto	u3301
  3067  000848  EF29  F004         	goto	u3300
  3068  00084C                     u3301:
  3069  00084C  FFFF               	dw	65535	; assembler added errata NOP
  3070  00084E  EF38  F004         	goto	l3242
  3071  000852                     u3300:
  3072  000852  FFFF               	dw	65535	; assembler added errata NOP
  3073  000854                     
  3074                           ; BSR set to: 0
  3075                           ;main.c: 202:                     joint_homed = reach_goal(&joint_stepper, 50);
  3076  000854  0EAE               	movlw	low _joint_stepper
  3077  000856  6E09               	movwf	reach_goal@stepper_motor^0,c
  3078  000858  0E00               	movlw	high _joint_stepper
  3079  00085A  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  3080  00085C  0E00               	movlw	0
  3081  00085E  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  3082  000860  0E32               	movlw	50
  3083  000862  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  3084  000864  ECD1  F011         	call	_reach_goal	;wreg free
  3085  000868  C009  F08A         	movff	?_reach_goal,_joint_homed
  3086  00086C  C00A  F08B         	movff	?_reach_goal+1,_joint_homed+1
  3087  000870                     l3242:
  3088  000870  FFFF               	dw	65535	; assembler added errata NOP
  3089                           
  3090                           ;main.c: 205:                 if (end_effector_homed * joint_homed){
  3091  000872  C06F  F001         	movff	_end_effector_homed,___wmul@multiplier
  3092  000876  C070  F002         	movff	_end_effector_homed+1,___wmul@multiplier+1
  3093  00087A  C08A  F003         	movff	_joint_homed,___wmul@multiplicand
  3094  00087E  C08B  F004         	movff	_joint_homed+1,___wmul@multiplicand+1
  3095  000882  ECC9  F013         	call	___wmul	;wreg free
  3096  000886  5001               	movf	?___wmul^0,w,c
  3097  000888  1002               	iorwf	(?___wmul+1)^0,w,c
  3098  00088A  B4D8               	btfsc	status,2,c
  3099  00088C  EF4A  F004         	goto	u3311
  3100  000890  EF4D  F004         	goto	u3310
  3101  000894                     u3311:
  3102  000894  FFFF               	dw	65535	; assembler added errata NOP
  3103  000896  EFF1  F004         	goto	l3280
  3104  00089A                     u3310:
  3105  00089A  FFFF               	dw	65535	; assembler added errata NOP
  3106  00089C  EF63  F001         	goto	l3116
  3107  0008A0                     l3246:
  3108  0008A0  FFFF               	dw	65535	; assembler added errata NOP
  3109  0008A2  0E0A               	movlw	10
  3110  0008A4  187C               	xorwf	_state^0,w,c
  3111  0008A6  107D               	iorwf	(_state+1)^0,w,c
  3112  0008A8  A4D8               	btfss	status,2,c
  3113  0008AA  EF59  F004         	goto	u3321
  3114  0008AE  EF5C  F004         	goto	u3320
  3115  0008B2                     u3321:
  3116  0008B2  FFFF               	dw	65535	; assembler added errata NOP
  3117  0008B4  EF65  F004         	goto	l3250
  3118  0008B8                     u3320:
  3119  0008B8  FFFF               	dw	65535	; assembler added errata NOP
  3120  0008BA                     
  3121                           ;main.c: 210:                 state = 11;
  3122  0008BA  0E00               	movlw	0
  3123  0008BC  6E7D               	movwf	(_state+1)^0,c
  3124  0008BE  0E0B               	movlw	11
  3125  0008C0  6E7C               	movwf	_state^0,c
  3126                           
  3127                           ;main.c: 211:                 state_changed = 1;
  3128  0008C2  0E01               	movlw	1
  3129  0008C4  6E7B               	movwf	_state_changed^0,c
  3130                           
  3131                           ;main.c: 212:             }else if (state == 11){
  3132  0008C6  EFF1  F004         	goto	l3280
  3133  0008CA                     l3250:
  3134  0008CA  FFFF               	dw	65535	; assembler added errata NOP
  3135  0008CC  0E0B               	movlw	11
  3136  0008CE  187C               	xorwf	_state^0,w,c
  3137  0008D0  107D               	iorwf	(_state+1)^0,w,c
  3138  0008D2  A4D8               	btfss	status,2,c
  3139  0008D4  EF6E  F004         	goto	u3331
  3140  0008D8  EF71  F004         	goto	u3330
  3141  0008DC                     u3331:
  3142  0008DC  FFFF               	dw	65535	; assembler added errata NOP
  3143  0008DE  EF98  F004         	goto	l3258
  3144  0008E2                     u3330:
  3145  0008E2  FFFF               	dw	65535	; assembler added errata NOP
  3146  0008E4                     
  3147                           ;main.c: 213:                 if (timer_done){
  3148  0008E4  5079               	movf	_timer_done^0,w,c
  3149  0008E6  B4D8               	btfsc	status,2,c
  3150  0008E8  EF78  F004         	goto	u3341
  3151  0008EC  EF7B  F004         	goto	u3340
  3152  0008F0                     u3341:
  3153  0008F0  FFFF               	dw	65535	; assembler added errata NOP
  3154  0008F2  EF8A  F004         	goto	l198
  3155  0008F6                     u3340:
  3156  0008F6  FFFF               	dw	65535	; assembler added errata NOP
  3157  0008F8                     
  3158                           ;main.c: 214:                     state_changed = 1;
  3159  0008F8  0E01               	movlw	1
  3160  0008FA  6E7B               	movwf	_state_changed^0,c
  3161                           
  3162                           ;main.c: 215:                     state = 13;
  3163  0008FC  0E00               	movlw	0
  3164  0008FE  6E7D               	movwf	(_state+1)^0,c
  3165  000900  0E0D               	movlw	13
  3166  000902  6E7C               	movwf	_state^0,c
  3167                           
  3168                           ;main.c: 216:                     trash_counter = 0;
  3169  000904  0E00               	movlw	0
  3170  000906  6E74               	movwf	(_trash_counter+1)^0,c
  3171  000908  0E00               	movlw	0
  3172  00090A  6E73               	movwf	_trash_counter^0,c
  3173                           
  3174                           ;main.c: 217:                     timer_done = 0;
  3175  00090C  0E00               	movlw	0
  3176  00090E  6E79               	movwf	_timer_done^0,c
  3177                           
  3178                           ;main.c: 218:                 } else {
  3179  000910  EFF1  F004         	goto	l3280
  3180  000914                     l198:
  3181  000914  FFFF               	dw	65535	; assembler added errata NOP
  3182                           
  3183                           ;main.c: 219:                     if (T0CONbits.TMR0ON == 0){
  3184  000916  BED5               	btfsc	213,7,c	;volatile
  3185  000918  EF90  F004         	goto	u3351
  3186  00091C  EF93  F004         	goto	u3350
  3187  000920                     u3351:
  3188  000920  FFFF               	dw	65535	; assembler added errata NOP
  3189  000922  EF54  F001         	goto	l155
  3190  000926                     u3350:
  3191  000926  FFFF               	dw	65535	; assembler added errata NOP
  3192  000928                     
  3193                           ;main.c: 220:                         init_timer_0();
  3194  000928  EC06  F014         	call	_init_timer_0	;wreg free
  3195  00092C  EFF1  F004         	goto	l3280
  3196  000930                     l3258:
  3197  000930  FFFF               	dw	65535	; assembler added errata NOP
  3198  000932  0E0C               	movlw	12
  3199  000934  187C               	xorwf	_state^0,w,c
  3200  000936  107D               	iorwf	(_state+1)^0,w,c
  3201  000938  A4D8               	btfss	status,2,c
  3202  00093A  EFA1  F004         	goto	u3361
  3203  00093E  EFA4  F004         	goto	u3360
  3204  000942                     u3361:
  3205  000942  FFFF               	dw	65535	; assembler added errata NOP
  3206  000944  EFAE  F004         	goto	l3264
  3207  000948                     u3360:
  3208  000948  FFFF               	dw	65535	; assembler added errata NOP
  3209  00094A                     
  3210                           ;main.c: 225:                 state = 0;
  3211  00094A  0E00               	movlw	0
  3212  00094C  6E7D               	movwf	(_state+1)^0,c
  3213  00094E  0E00               	movlw	0
  3214  000950  6E7C               	movwf	_state^0,c
  3215                           
  3216                           ;main.c: 227:                 state_changed = 1;
  3217  000952  0E01               	movlw	1
  3218  000954  6E7B               	movwf	_state_changed^0,c
  3219  000956                     
  3220                           ;main.c: 228:                 T0CONbits.TMR0ON = 0;
  3221  000956  9ED5               	bcf	213,7,c	;volatile
  3222                           
  3223                           ;main.c: 229:             } else if (state == 13){
  3224  000958  EFF1  F004         	goto	l3280
  3225  00095C                     l3264:
  3226  00095C  FFFF               	dw	65535	; assembler added errata NOP
  3227  00095E  0E0D               	movlw	13
  3228  000960  187C               	xorwf	_state^0,w,c
  3229  000962  107D               	iorwf	(_state+1)^0,w,c
  3230  000964  A4D8               	btfss	status,2,c
  3231  000966  EFB7  F004         	goto	u3371
  3232  00096A  EFBA  F004         	goto	u3370
  3233  00096E                     u3371:
  3234  00096E  FFFF               	dw	65535	; assembler added errata NOP
  3235  000970  EFF1  F004         	goto	l3280
  3236  000974                     u3370:
  3237  000974  FFFF               	dw	65535	; assembler added errata NOP
  3238  000976                     
  3239                           ;main.c: 230:                 LATAbits.LATA1 = 1;
  3240  000976  8289               	bsf	137,1,c	;volatile
  3241  000978                     
  3242                           ;main.c: 231:                 if ( trash_counter < 100){
  3243  000978  BE74               	btfsc	(_trash_counter+1)^0,7,c
  3244  00097A  EFCB  F004         	goto	u3380
  3245  00097E  5074               	movf	(_trash_counter+1)^0,w,c
  3246  000980  E107               	bnz	u3381
  3247  000982  0E64               	movlw	100
  3248  000984  5C73               	subwf	_trash_counter^0,w,c
  3249  000986  B0D8               	btfsc	status,0,c
  3250  000988  EFC8  F004         	goto	u3381
  3251  00098C  EFCB  F004         	goto	u3380
  3252  000990                     u3381:
  3253  000990  FFFF               	dw	65535	; assembler added errata NOP
  3254  000992  EFD9  F004         	goto	l3274
  3255  000996                     u3380:
  3256  000996  FFFF               	dw	65535	; assembler added errata NOP
  3257  000998                     
  3258                           ;main.c: 232:                     _delay((unsigned long)((10)*(4000000/4000.0)));
  3259  000998  0E0A               	movlw	10
  3260  00099A  6E66               	movwf	??_main^0,c
  3261  00099C  0EBE               	movlw	190
  3262  00099E                     u3497:
  3263  00099E  FFFF               	dw	65535	; errata NOP
  3264  0009A0  2EE8               	decfsz	wreg,f,c
  3265  0009A2  D7FD               	bra	u3497
  3266  0009A4  2E66               	decfsz	??_main^0,f,c
  3267  0009A6  D7FB               	bra	u3497
  3268  0009A8  D000               	nop2	
  3269  0009AA                     
  3270                           ;main.c: 233:                     trash_counter++;
  3271  0009AA  4A73               	infsnz	_trash_counter^0,f,c
  3272  0009AC  2A74               	incf	(_trash_counter+1)^0,f,c
  3273                           
  3274                           ;main.c: 234:                 } else if (trash_counter >= 100){
  3275  0009AE  EFF1  F004         	goto	l3280
  3276  0009B2                     l3274:
  3277  0009B2  FFFF               	dw	65535	; assembler added errata NOP
  3278  0009B4  BE74               	btfsc	(_trash_counter+1)^0,7,c
  3279  0009B6  EFE6  F004         	goto	u3391
  3280  0009BA  5074               	movf	(_trash_counter+1)^0,w,c
  3281  0009BC  E10A               	bnz	u3390
  3282  0009BE  0E64               	movlw	100
  3283  0009C0  5C73               	subwf	_trash_counter^0,w,c
  3284  0009C2  A0D8               	btfss	status,0,c
  3285  0009C4  EFE6  F004         	goto	u3391
  3286  0009C8  EFE9  F004         	goto	u3390
  3287  0009CC                     u3391:
  3288  0009CC  FFFF               	dw	65535	; assembler added errata NOP
  3289  0009CE  EF54  F001         	goto	l155
  3290  0009D2                     u3390:
  3291  0009D2  FFFF               	dw	65535	; assembler added errata NOP
  3292  0009D4                     
  3293                           ;main.c: 235:                     state = 0;
  3294  0009D4  0E00               	movlw	0
  3295  0009D6  6E7D               	movwf	(_state+1)^0,c
  3296  0009D8  0E00               	movlw	0
  3297  0009DA  6E7C               	movwf	_state^0,c
  3298                           
  3299                           ;main.c: 236:                     state_changed = 1;
  3300  0009DC  0E01               	movlw	1
  3301  0009DE  6E7B               	movwf	_state_changed^0,c
  3302  0009E0                     
  3303                           ;main.c: 237:                     T0CONbits.TMR0ON = 0;
  3304  0009E0  9ED5               	bcf	213,7,c	;volatile
  3305  0009E2                     l3280:
  3306  0009E2  FFFF               	dw	65535	; assembler added errata NOP
  3307  0009E4  0E0E               	movlw	14
  3308  0009E6  187C               	xorwf	_state^0,w,c
  3309  0009E8  107D               	iorwf	(_state+1)^0,w,c
  3310  0009EA  A4D8               	btfss	status,2,c
  3311  0009EC  EFFA  F004         	goto	u3401
  3312  0009F0  EFFD  F004         	goto	u3400
  3313  0009F4                     u3401:
  3314  0009F4  FFFF               	dw	65535	; assembler added errata NOP
  3315  0009F6  EFB3  F000         	goto	l3078
  3316  0009FA                     u3400:
  3317  0009FA  FFFF               	dw	65535	; assembler added errata NOP
  3318  0009FC                     
  3319                           ;main.c: 241:                 if (LATCbits.LATC4 == 1 && LATCbits.LATC5 == 1 && get_lite
      +                          rs() > 0.1){
  3320  0009FC  A88B               	btfss	139,4,c	;volatile
  3321  0009FE  EF03  F005         	goto	u3411
  3322  000A02  EF06  F005         	goto	u3410
  3323  000A06                     u3411:
  3324  000A06  FFFF               	dw	65535	; assembler added errata NOP
  3325  000A08  EF4B  F005         	goto	l153
  3326  000A0C                     u3410:
  3327  000A0C  FFFF               	dw	65535	; assembler added errata NOP
  3328  000A0E  AA8B               	btfss	139,5,c	;volatile
  3329  000A10  EF0C  F005         	goto	u3421
  3330  000A14  EF0F  F005         	goto	u3420
  3331  000A18                     u3421:
  3332  000A18  FFFF               	dw	65535	; assembler added errata NOP
  3333  000A1A  EF4B  F005         	goto	l153
  3334  000A1E                     u3420:
  3335  000A1E  FFFF               	dw	65535	; assembler added errata NOP
  3336  000A20  EC45  F012         	call	_get_liters	;wreg free
  3337  000A24  C03E  F06B         	movff	?_get_liters,_main$1663
  3338  000A28  C03F  F06C         	movff	?_get_liters+1,_main$1663+1
  3339  000A2C  0E00               	movlw	0
  3340  000A2E  BE6C               	btfsc	(_main$1663+1)^0,7,c
  3341  000A30  0EFF               	movlw	-1
  3342  000A32  6E6D               	movwf	(_main$1663+2)^0,c
  3343  000A34  6E6E               	movwf	(_main$1663+3)^0,c
  3344  000A36  0ECD               	movlw	205
  3345  000A38  6E40               	movwf	___flge@ff1^0,c
  3346  000A3A  0ECC               	movlw	204
  3347  000A3C  6E41               	movwf	(___flge@ff1+1)^0,c
  3348  000A3E  0ECC               	movlw	204
  3349  000A40  6E42               	movwf	(___flge@ff1+2)^0,c
  3350  000A42  0E3D               	movlw	61
  3351  000A44  6E43               	movwf	(___flge@ff1+3)^0,c
  3352  000A46  C06B  F00D         	movff	_main$1663,___xxtofl@val
  3353  000A4A  C06C  F00E         	movff	_main$1663+1,___xxtofl@val+1
  3354  000A4E  C06D  F00F         	movff	_main$1663+2,___xxtofl@val+2
  3355  000A52  C06E  F010         	movff	_main$1663+3,___xxtofl@val+3
  3356  000A56  0E01               	movlw	1
  3357  000A58  EC69  F00C         	call	___xxtofl
  3358  000A5C  C00D  F044         	movff	?___xxtofl,___flge@ff2
  3359  000A60  C00E  F045         	movff	?___xxtofl+1,___flge@ff2+1
  3360  000A64  C00F  F046         	movff	?___xxtofl+2,___flge@ff2+2
  3361  000A68  C010  F047         	movff	?___xxtofl+3,___flge@ff2+3
  3362  000A6C  ECB7  F00E         	call	___flge	;wreg free
  3363  000A70  B0D8               	btfsc	status,0,c
  3364  000A72  EF3D  F005         	goto	u3431
  3365  000A76  EF40  F005         	goto	u3430
  3366  000A7A                     u3431:
  3367  000A7A  FFFF               	dw	65535	; assembler added errata NOP
  3368  000A7C  EF4B  F005         	goto	l153
  3369  000A80                     u3430:
  3370  000A80  FFFF               	dw	65535	; assembler added errata NOP
  3371  000A82                     
  3372                           ;main.c: 242:                     LATCbits.LATC4 = 0;
  3373  000A82  988B               	bcf	139,4,c	;volatile
  3374                           
  3375                           ;main.c: 243:                     LATCbits.LATC5 = 0;
  3376  000A84  9A8B               	bcf	139,5,c	;volatile
  3377                           
  3378                           ;main.c: 244:                     state = state_before_error;
  3379  000A86  C0BE  F07C         	movff	_state_before_error,_state
  3380  000A8A  C0BF  F07D         	movff	_state_before_error+1,_state+1
  3381  000A8E                     
  3382                           ;main.c: 245:                     state_changed = 1;
  3383  000A8E  0E01               	movlw	1
  3384  000A90  6E7B               	movwf	_state_changed^0,c
  3385  000A92  EFB3  F000         	goto	l3078
  3386  000A96                     l153:
  3387  000A96  FFFF               	dw	65535	; assembler added errata NOP
  3388  000A98  EFB3  F000         	goto	l3078
  3389  000A9C  EF46  F000         	goto	start
  3390  000AA0                     __end_of_main:
  3391                           	callstack 0
  3392                           
  3393 ;; *************** function _wait_for_zero *****************
  3394 ;; Defined at:
  3395 ;;		line 48 in file "oven.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;		None
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;		None
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  1    wreg      void 
  3402 ;; Registers used:
  3403 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3409 ;;      Params:         0       0       0       0       0       0       0
  3410 ;;      Locals:         0       0       0       0       0       0       0
  3411 ;;      Temps:          0       0       0       0       0       0       0
  3412 ;;      Totals:         0       0       0       0       0       0       0
  3413 ;;Total ram usage:        0 bytes
  3414 ;; Hardware stack levels used:    1
  3415 ;; Hardware stack levels required when called:    3
  3416 ;; This function calls:
  3417 ;;		_get_temperature
  3418 ;; This function is called by:
  3419 ;;		_main
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           	psect	text1
  3424  0027E6                     __ptext1:
  3425                           	callstack 0
  3426  0027E6                     _wait_for_zero:
  3427                           	callstack 0
  3428  0027E6  FFFF               	dw	65535	; assembler added errata NOP
  3429  0027E8                     l387:
  3430  0027E8  FFFF               	dw	65535	; assembler added errata NOP
  3431  0027EA                     
  3432                           ;oven.c: 50:         if (get_temperature() == -55){
  3433  0027EA  EC0D  F012         	call	_get_temperature	;wreg free
  3434  0027EE  0EC9               	movlw	201
  3435  0027F0  183E               	xorwf	?_get_temperature^0,w,c
  3436  0027F2  E106               	bnz	u2931
  3437  0027F4  283F               	incf	(?_get_temperature+1)^0,w,c
  3438  0027F6  A4D8               	btfss	status,2,c
  3439  0027F8  EF00  F014         	goto	u2931
  3440  0027FC  EF03  F014         	goto	u2930
  3441  002800                     u2931:
  3442  002800  FFFF               	dw	65535	; assembler added errata NOP
  3443  002802  EFF4  F013         	goto	l387
  3444  002806                     u2930:
  3445  002806  FFFF               	dw	65535	; assembler added errata NOP
  3446  002808  0012               	return		;funcret
  3447  00280A  FFFF               	dw	65535	; errata NOP
  3448  00280C                     __end_of_wait_for_zero:
  3449                           	callstack 0
  3450                           
  3451 ;; *************** function _get_temperature *****************
  3452 ;; Defined at:
  3453 ;;		line 33 in file "oven.c"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;		None
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;		None
  3458 ;; Return value:  Size  Location     Type
  3459 ;;                  2   61[COMRAM] int 
  3460 ;; Registers used:
  3461 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3462 ;; Tracked objects:
  3463 ;;		On entry : 0/0
  3464 ;;		On exit  : 0/0
  3465 ;;		Unchanged: 0/0
  3466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3467 ;;      Params:         2       0       0       0       0       0       0
  3468 ;;      Locals:         0       0       0       0       0       0       0
  3469 ;;      Temps:          0       0       0       0       0       0       0
  3470 ;;      Totals:         2       0       0       0       0       0       0
  3471 ;;Total ram usage:        2 bytes
  3472 ;; Hardware stack levels used:    1
  3473 ;; Hardware stack levels required when called:    2
  3474 ;; This function calls:
  3475 ;;		___flmul
  3476 ;;		___fltol
  3477 ;;		___xxtofl
  3478 ;; This function is called by:
  3479 ;;		_main
  3480 ;;		_wait_for_zero
  3481 ;; This function uses a non-reentrant model
  3482 ;;
  3483                           
  3484                           	psect	text2
  3485  00241A                     __ptext2:
  3486                           	callstack 0
  3487  00241A                     _get_temperature:
  3488                           	callstack 0
  3489  00241A  FFFF               	dw	65535	; assembler added errata NOP
  3490  00241C                     
  3491                           ;oven.c: 34:     ADCON0bits.GO = 1;
  3492  00241C  84C2               	bsf	194,2,c	;volatile
  3493  00241E                     l375:
  3494  00241E  FFFF               	dw	65535	; assembler added errata NOP
  3495  002420  B4C2               	btfsc	194,2,c	;volatile
  3496  002422  EF15  F012         	goto	u2661
  3497  002426  EF18  F012         	goto	u2660
  3498  00242A                     u2661:
  3499  00242A  FFFF               	dw	65535	; assembler added errata NOP
  3500  00242C  EF0F  F012         	goto	l375
  3501  002430                     u2660:
  3502  002430  FFFF               	dw	65535	; assembler added errata NOP
  3503  002432                     
  3504                           ;oven.c: 36:     return (int) (ADRESH * 0.25) + -55;
  3505  002432  0E00               	movlw	0
  3506  002434  6E1F               	movwf	___flmul@a^0,c
  3507  002436  0E00               	movlw	0
  3508  002438  6E20               	movwf	(___flmul@a+1)^0,c
  3509  00243A  0E80               	movlw	128
  3510  00243C  6E21               	movwf	(___flmul@a+2)^0,c
  3511  00243E  0E3E               	movlw	62
  3512  002440  6E22               	movwf	(___flmul@a+3)^0,c
  3513  002442  50C4               	movf	196,w,c	;volatile
  3514  002444  6E0D               	movwf	___xxtofl@val^0,c
  3515  002446  6A0E               	clrf	(___xxtofl@val+1)^0,c
  3516  002448  6A0F               	clrf	(___xxtofl@val+2)^0,c
  3517  00244A  6A10               	clrf	(___xxtofl@val+3)^0,c
  3518  00244C  0E01               	movlw	1
  3519  00244E  EC69  F00C         	call	___xxtofl
  3520  002452  C00D  F01B         	movff	?___xxtofl,___flmul@b
  3521  002456  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  3522  00245A  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  3523  00245E  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  3524  002462  EC24  F008         	call	___flmul	;wreg free
  3525  002466  C01B  F034         	movff	?___flmul,___fltol@f1
  3526  00246A  C01C  F035         	movff	?___flmul+1,___fltol@f1+1
  3527  00246E  C01D  F036         	movff	?___flmul+2,___fltol@f1+2
  3528  002472  C01E  F037         	movff	?___flmul+3,___fltol@f1+3
  3529  002476  EC1C  F00E         	call	___fltol	;wreg free
  3530  00247A  0EC9               	movlw	201
  3531  00247C  2434               	addwf	?___fltol^0,w,c
  3532  00247E  6E3E               	movwf	?_get_temperature^0,c
  3533  002480  0EFF               	movlw	255
  3534  002482  2035               	addwfc	(?___fltol+1)^0,w,c
  3535  002484  6E3F               	movwf	(?_get_temperature+1)^0,c
  3536  002486  0012               	return		;funcret
  3537  002488  FFFF               	dw	65535	; errata NOP
  3538  00248A                     __end_of_get_temperature:
  3539                           	callstack 0
  3540                           
  3541 ;; *************** function _state_translator_micro_to_fpga *****************
  3542 ;; Defined at:
  3543 ;;		line 29 in file "utils.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;  state           2    0[COMRAM] PTR int 
  3546 ;;		 -> state(2), 
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;  state_machin    1    4[COMRAM] unsigned char 
  3549 ;; Return value:  Size  Location     Type
  3550 ;;                  1    wreg      unsigned char 
  3551 ;; Registers used:
  3552 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3558 ;;      Params:         2       0       0       0       0       0       0
  3559 ;;      Locals:         1       0       0       0       0       0       0
  3560 ;;      Temps:          2       0       0       0       0       0       0
  3561 ;;      Totals:         5       0       0       0       0       0       0
  3562 ;;Total ram usage:        5 bytes
  3563 ;; Hardware stack levels used:    1
  3564 ;; Hardware stack levels required when called:    1
  3565 ;; This function calls:
  3566 ;;		Nothing
  3567 ;; This function is called by:
  3568 ;;		_main
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572                           	psect	text3
  3573  00229A                     __ptext3:
  3574                           	callstack 0
  3575  00229A                     _state_translator_micro_to_fpga:
  3576                           	callstack 0
  3577  00229A  FFFF               	dw	65535	; assembler added errata NOP
  3578  00229C                     
  3579                           ;utils.c: 30:     unsigned char state_machine_code;;utils.c: 31:     if (*state == 2){
  3580  00229C  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  3581  0022A0  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  3582  0022A4  0E02               	movlw	2
  3583  0022A6  18DE               	xorwf	postinc2,w,c
  3584  0022A8  10DE               	iorwf	postinc2,w,c
  3585  0022AA  A4D8               	btfss	status,2,c
  3586  0022AC  EF5A  F011         	goto	u2861
  3587  0022B0  EF5D  F011         	goto	u2860
  3588  0022B4                     u2861:
  3589  0022B4  FFFF               	dw	65535	; assembler added errata NOP
  3590  0022B6  EF62  F011         	goto	l2928
  3591  0022BA                     u2860:
  3592  0022BA  FFFF               	dw	65535	; assembler added errata NOP
  3593  0022BC                     
  3594                           ;utils.c: 32:         state_machine_code = 0x10;
  3595  0022BC  0E10               	movlw	16
  3596  0022BE  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  3597                           
  3598                           ;utils.c: 33:     } else if (*state == 0) {
  3599  0022C0  EF8E  F011         	goto	l310
  3600  0022C4                     l2928:
  3601  0022C4  FFFF               	dw	65535	; assembler added errata NOP
  3602  0022C6  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  3603  0022CA  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  3604  0022CE  50DE               	movf	postinc2,w,c
  3605  0022D0  10DE               	iorwf	postinc2,w,c
  3606  0022D2  A4D8               	btfss	status,2,c
  3607  0022D4  EF6E  F011         	goto	u2871
  3608  0022D8  EF71  F011         	goto	u2870
  3609  0022DC                     u2871:
  3610  0022DC  FFFF               	dw	65535	; assembler added errata NOP
  3611  0022DE  EF76  F011         	goto	l2932
  3612  0022E2                     u2870:
  3613  0022E2  FFFF               	dw	65535	; assembler added errata NOP
  3614  0022E4                     
  3615                           ;utils.c: 34:         state_machine_code = 0x00;
  3616  0022E4  0E00               	movlw	0
  3617  0022E6  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  3618                           
  3619                           ;utils.c: 35:     } else if (*state == 14) {
  3620  0022E8  EF8E  F011         	goto	l310
  3621  0022EC                     l2932:
  3622  0022EC  FFFF               	dw	65535	; assembler added errata NOP
  3623  0022EE  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  3624  0022F2  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  3625  0022F6  0E0E               	movlw	14
  3626  0022F8  18DE               	xorwf	postinc2,w,c
  3627  0022FA  10DE               	iorwf	postinc2,w,c
  3628  0022FC  A4D8               	btfss	status,2,c
  3629  0022FE  EF83  F011         	goto	u2881
  3630  002302  EF86  F011         	goto	u2880
  3631  002306                     u2881:
  3632  002306  FFFF               	dw	65535	; assembler added errata NOP
  3633  002308  EF8B  F011         	goto	l2936
  3634  00230C                     u2880:
  3635  00230C  FFFF               	dw	65535	; assembler added errata NOP
  3636  00230E                     
  3637                           ;utils.c: 36:         state_machine_code = 0x40;
  3638  00230E  0E40               	movlw	64
  3639  002310  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  3640                           
  3641                           ;utils.c: 37:     } else {
  3642  002312  EF8E  F011         	goto	l310
  3643  002316                     l2936:
  3644  002316  FFFF               	dw	65535	; assembler added errata NOP
  3645                           
  3646                           ;utils.c: 38:         state_machine_code = 0x80;
  3647  002318  0E80               	movlw	128
  3648  00231A  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  3649  00231C                     l310:
  3650  00231C  FFFF               	dw	65535	; assembler added errata NOP
  3651                           
  3652                           ;utils.c: 40:     return state_machine_code;
  3653  00231E  5005               	movf	state_translator_micro_to_fpga@state_machine_code^0,w,c
  3654  002320  0012               	return		;funcret
  3655  002322  FFFF               	dw	65535	; errata NOP
  3656  002324                     __end_of_state_translator_micro_to_fpga:
  3657                           	callstack 0
  3658                           
  3659 ;; *************** function _state_translator_fpga_to_micro *****************
  3660 ;; Defined at:
  3661 ;;		line 4 in file "utils.c"
  3662 ;; Parameters:    Size  Location     Type
  3663 ;;  state_machin    1    wreg     unsigned char 
  3664 ;;  state           2    2[COMRAM] PTR int 
  3665 ;;		 -> state(2), 
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;  state_machin    1    4[COMRAM] unsigned char 
  3668 ;; Return value:  Size  Location     Type
  3669 ;;                  1    wreg      void 
  3670 ;; Registers used:
  3671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3672 ;; Tracked objects:
  3673 ;;		On entry : 0/0
  3674 ;;		On exit  : 0/0
  3675 ;;		Unchanged: 0/0
  3676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3677 ;;      Params:         2       0       0       0       0       0       0
  3678 ;;      Locals:         1       0       0       0       0       0       0
  3679 ;;      Temps:          0       0       0       0       0       0       0
  3680 ;;      Totals:         3       0       0       0       0       0       0
  3681 ;;Total ram usage:        3 bytes
  3682 ;; Hardware stack levels used:    1
  3683 ;; Hardware stack levels required when called:    3
  3684 ;; This function calls:
  3685 ;;		_lcd_dat
  3686 ;; This function is called by:
  3687 ;;		_main
  3688 ;; This function uses a non-reentrant model
  3689 ;;
  3690                           
  3691                           	psect	text4
  3692  001ACA                     __ptext4:
  3693                           	callstack 0
  3694  001ACA                     _state_translator_fpga_to_micro:
  3695                           	callstack 0
  3696  001ACA  FFFF               	dw	65535	; assembler added errata NOP
  3697                           
  3698                           ;incstack = 0
  3699                           ;state_translator_fpga_to_micro@state_machine_code stored from wreg
  3700  001ACC  6E05               	movwf	state_translator_fpga_to_micro@state_machine_code^0,c
  3701  001ACE                     
  3702                           ;utils.c: 5:     lcd_dat(state_machine_code);
  3703  001ACE  5005               	movf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3704  001AD0  ECB4  F013         	call	_lcd_dat
  3705  001AD4                     
  3706                           ;utils.c: 6:     if (state_machine_code == 0x01){
  3707  001AD4  0405               	decf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3708  001AD6  A4D8               	btfss	status,2,c
  3709  001AD8  EF70  F00D         	goto	u2781
  3710  001ADC  EF73  F00D         	goto	u2780
  3711  001AE0                     u2781:
  3712  001AE0  FFFF               	dw	65535	; assembler added errata NOP
  3713  001AE2  EF7E  F00D         	goto	l2892
  3714  001AE6                     u2780:
  3715  001AE6  FFFF               	dw	65535	; assembler added errata NOP
  3716  001AE8                     
  3717                           ;utils.c: 7:         *state = 1;
  3718  001AE8  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3719  001AEC  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3720  001AF0  0E01               	movlw	1
  3721  001AF2  6EDE               	movwf	postinc2,c
  3722  001AF4  0E00               	movlw	0
  3723  001AF6  6EDD               	movwf	postdec2,c
  3724                           
  3725                           ;utils.c: 8:     } else if (state_machine_code == 0x02){
  3726  001AF8  EF19  F00E         	goto	l306
  3727  001AFC                     l2892:
  3728  001AFC  FFFF               	dw	65535	; assembler added errata NOP
  3729  001AFE  0E02               	movlw	2
  3730  001B00  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3731  001B02  A4D8               	btfss	status,2,c
  3732  001B04  EF86  F00D         	goto	u2791
  3733  001B08  EF89  F00D         	goto	u2790
  3734  001B0C                     u2791:
  3735  001B0C  FFFF               	dw	65535	; assembler added errata NOP
  3736  001B0E  EF94  F00D         	goto	l2896
  3737  001B12                     u2790:
  3738  001B12  FFFF               	dw	65535	; assembler added errata NOP
  3739  001B14                     
  3740                           ;utils.c: 9:         *state = 3;
  3741  001B14  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3742  001B18  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3743  001B1C  0E03               	movlw	3
  3744  001B1E  6EDE               	movwf	postinc2,c
  3745  001B20  0E00               	movlw	0
  3746  001B22  6EDD               	movwf	postdec2,c
  3747                           
  3748                           ;utils.c: 10:     } else if (state_machine_code == 0x04){
  3749  001B24  EF19  F00E         	goto	l306
  3750  001B28                     l2896:
  3751  001B28  FFFF               	dw	65535	; assembler added errata NOP
  3752  001B2A  0E04               	movlw	4
  3753  001B2C  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3754  001B2E  A4D8               	btfss	status,2,c
  3755  001B30  EF9C  F00D         	goto	u2801
  3756  001B34  EF9F  F00D         	goto	u2800
  3757  001B38                     u2801:
  3758  001B38  FFFF               	dw	65535	; assembler added errata NOP
  3759  001B3A  EFAA  F00D         	goto	l2900
  3760  001B3E                     u2800:
  3761  001B3E  FFFF               	dw	65535	; assembler added errata NOP
  3762  001B40                     
  3763                           ;utils.c: 11:         *state = 5;
  3764  001B40  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3765  001B44  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3766  001B48  0E05               	movlw	5
  3767  001B4A  6EDE               	movwf	postinc2,c
  3768  001B4C  0E00               	movlw	0
  3769  001B4E  6EDD               	movwf	postdec2,c
  3770                           
  3771                           ;utils.c: 12:     } else if (state_machine_code == 0x08){
  3772  001B50  EF19  F00E         	goto	l306
  3773  001B54                     l2900:
  3774  001B54  FFFF               	dw	65535	; assembler added errata NOP
  3775  001B56  0E08               	movlw	8
  3776  001B58  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3777  001B5A  A4D8               	btfss	status,2,c
  3778  001B5C  EFB2  F00D         	goto	u2811
  3779  001B60  EFB5  F00D         	goto	u2810
  3780  001B64                     u2811:
  3781  001B64  FFFF               	dw	65535	; assembler added errata NOP
  3782  001B66  EFC0  F00D         	goto	l2904
  3783  001B6A                     u2810:
  3784  001B6A  FFFF               	dw	65535	; assembler added errata NOP
  3785  001B6C                     
  3786                           ;utils.c: 13:         *state = 10;
  3787  001B6C  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3788  001B70  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3789  001B74  0E0A               	movlw	10
  3790  001B76  6EDE               	movwf	postinc2,c
  3791  001B78  0E00               	movlw	0
  3792  001B7A  6EDD               	movwf	postdec2,c
  3793                           
  3794                           ;utils.c: 14:     } else if (state_machine_code == 0x10){
  3795  001B7C  EF19  F00E         	goto	l306
  3796  001B80                     l2904:
  3797  001B80  FFFF               	dw	65535	; assembler added errata NOP
  3798  001B82  0E10               	movlw	16
  3799  001B84  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3800  001B86  A4D8               	btfss	status,2,c
  3801  001B88  EFC8  F00D         	goto	u2821
  3802  001B8C  EFCB  F00D         	goto	u2820
  3803  001B90                     u2821:
  3804  001B90  FFFF               	dw	65535	; assembler added errata NOP
  3805  001B92  EFD6  F00D         	goto	l2908
  3806  001B96                     u2820:
  3807  001B96  FFFF               	dw	65535	; assembler added errata NOP
  3808  001B98                     
  3809                           ;utils.c: 15:         *state = 2;
  3810  001B98  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3811  001B9C  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3812  001BA0  0E02               	movlw	2
  3813  001BA2  6EDE               	movwf	postinc2,c
  3814  001BA4  0E00               	movlw	0
  3815  001BA6  6EDD               	movwf	postdec2,c
  3816                           
  3817                           ;utils.c: 16:     } else if (state_machine_code == 0x40){
  3818  001BA8  EF19  F00E         	goto	l306
  3819  001BAC                     l2908:
  3820  001BAC  FFFF               	dw	65535	; assembler added errata NOP
  3821  001BAE  0E40               	movlw	64
  3822  001BB0  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3823  001BB2  A4D8               	btfss	status,2,c
  3824  001BB4  EFDE  F00D         	goto	u2831
  3825  001BB8  EFE1  F00D         	goto	u2830
  3826  001BBC                     u2831:
  3827  001BBC  FFFF               	dw	65535	; assembler added errata NOP
  3828  001BBE  EFEC  F00D         	goto	l2912
  3829  001BC2                     u2830:
  3830  001BC2  FFFF               	dw	65535	; assembler added errata NOP
  3831  001BC4                     
  3832                           ;utils.c: 17:         *state = 14;
  3833  001BC4  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3834  001BC8  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3835  001BCC  0E0E               	movlw	14
  3836  001BCE  6EDE               	movwf	postinc2,c
  3837  001BD0  0E00               	movlw	0
  3838  001BD2  6EDD               	movwf	postdec2,c
  3839                           
  3840                           ;utils.c: 18:     } else if (state_machine_code == 0x80){
  3841  001BD4  EF19  F00E         	goto	l306
  3842  001BD8                     l2912:
  3843  001BD8  FFFF               	dw	65535	; assembler added errata NOP
  3844  001BDA  0E80               	movlw	128
  3845  001BDC  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3846  001BDE  A4D8               	btfss	status,2,c
  3847  001BE0  EFF4  F00D         	goto	u2841
  3848  001BE4  EFF7  F00D         	goto	u2840
  3849  001BE8                     u2841:
  3850  001BE8  FFFF               	dw	65535	; assembler added errata NOP
  3851  001BEA  EFFA  F00D         	goto	l2916
  3852  001BEE                     u2840:
  3853  001BEE  FFFF               	dw	65535	; assembler added errata NOP
  3854  001BF0  EF19  F00E         	goto	l306
  3855  001BF4                     l2916:
  3856  001BF4  FFFF               	dw	65535	; assembler added errata NOP
  3857  001BF6  0EA0               	movlw	160
  3858  001BF8  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3859  001BFA  A4D8               	btfss	status,2,c
  3860  001BFC  EF02  F00E         	goto	u2851
  3861  001C00  EF05  F00E         	goto	u2850
  3862  001C04                     u2851:
  3863  001C04  FFFF               	dw	65535	; assembler added errata NOP
  3864  001C06  EF10  F00E         	goto	l2920
  3865  001C0A                     u2850:
  3866  001C0A  FFFF               	dw	65535	; assembler added errata NOP
  3867  001C0C                     
  3868                           ;utils.c: 21:         *state = 12;
  3869  001C0C  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3870  001C10  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3871  001C14  0E0C               	movlw	12
  3872  001C16  6EDE               	movwf	postinc2,c
  3873  001C18  0E00               	movlw	0
  3874  001C1A  6EDD               	movwf	postdec2,c
  3875                           
  3876                           ;utils.c: 22:     } else {
  3877  001C1C  EF19  F00E         	goto	l306
  3878  001C20                     l2920:
  3879  001C20  FFFF               	dw	65535	; assembler added errata NOP
  3880                           
  3881                           ;utils.c: 23:         *state = 0;
  3882  001C22  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3883  001C26  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3884  001C2A  0E00               	movlw	0
  3885  001C2C  6EDE               	movwf	postinc2,c
  3886  001C2E  0E00               	movlw	0
  3887  001C30  6EDD               	movwf	postdec2,c
  3888  001C32                     l306:
  3889  001C32  FFFF               	dw	65535	; assembler added errata NOP
  3890  001C34  0012               	return		;funcret
  3891  001C36  FFFF               	dw	65535	; errata NOP
  3892  001C38                     __end_of_state_translator_fpga_to_micro:
  3893                           	callstack 0
  3894                           
  3895 ;; *************** function _serial_tx_char *****************
  3896 ;; Defined at:
  3897 ;;		line 40 in file "serial_rs232.c"
  3898 ;; Parameters:    Size  Location     Type
  3899 ;;  val             1    wreg     unsigned char 
  3900 ;; Auto vars:     Size  Location     Type
  3901 ;;  val             1    0[COMRAM] unsigned char 
  3902 ;; Return value:  Size  Location     Type
  3903 ;;                  1    wreg      void 
  3904 ;; Registers used:
  3905 ;;		wreg
  3906 ;; Tracked objects:
  3907 ;;		On entry : 0/0
  3908 ;;		On exit  : 0/0
  3909 ;;		Unchanged: 0/0
  3910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3911 ;;      Params:         0       0       0       0       0       0       0
  3912 ;;      Locals:         1       0       0       0       0       0       0
  3913 ;;      Temps:          0       0       0       0       0       0       0
  3914 ;;      Totals:         1       0       0       0       0       0       0
  3915 ;;Total ram usage:        1 bytes
  3916 ;; Hardware stack levels used:    1
  3917 ;; Hardware stack levels required when called:    1
  3918 ;; This function calls:
  3919 ;;		Nothing
  3920 ;; This function is called by:
  3921 ;;		_main
  3922 ;;		_serial_tx_string
  3923 ;; This function uses a non-reentrant model
  3924 ;;
  3925                           
  3926                           	psect	text5
  3927  00282E                     __ptext5:
  3928                           	callstack 0
  3929  00282E                     _serial_tx_char:
  3930                           	callstack 0
  3931  00282E  FFFF               	dw	65535	; assembler added errata NOP
  3932                           
  3933                           ;incstack = 0
  3934                           ;serial_tx_char@val stored from wreg
  3935  002830  6E01               	movwf	serial_tx_char@val^0,c
  3936  002832                     
  3937                           ;serial_rs232.c: 41:     TXREG = val;
  3938  002832  C001  FFAD         	movff	serial_tx_char@val,4013	;volatile
  3939  002836                     l24:
  3940  002836  FFFF               	dw	65535	; assembler added errata NOP
  3941  002838  A2AC               	btfss	172,1,c	;volatile
  3942  00283A  EF21  F014         	goto	u2761
  3943  00283E  EF24  F014         	goto	u2760
  3944  002842                     u2761:
  3945  002842  FFFF               	dw	65535	; assembler added errata NOP
  3946  002844  EF1B  F014         	goto	l24
  3947  002848                     u2760:
  3948  002848  FFFF               	dw	65535	; assembler added errata NOP
  3949  00284A  0012               	return		;funcret
  3950  00284C  FFFF               	dw	65535	; errata NOP
  3951  00284E                     __end_of_serial_tx_char:
  3952                           	callstack 0
  3953                           
  3954 ;; *************** function _reach_goal *****************
  3955 ;; Defined at:
  3956 ;;		line 34 in file "stepper_motor.c"
  3957 ;; Parameters:    Size  Location     Type
  3958 ;;  stepper_moto    2    8[COMRAM] PTR struct .
  3959 ;;		 -> joint_dilutor_stepper(12), end_effector_stepper(12), joint_stepper(12), 
  3960 ;;  goal_to_reac    2   10[COMRAM] int 
  3961 ;; Auto vars:     Size  Location     Type
  3962 ;;		None
  3963 ;; Return value:  Size  Location     Type
  3964 ;;                  2    8[COMRAM] int 
  3965 ;; Registers used:
  3966 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3967 ;; Tracked objects:
  3968 ;;		On entry : 0/0
  3969 ;;		On exit  : 0/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3972 ;;      Params:         4       0       0       0       0       0       0
  3973 ;;      Locals:         0       0       0       0       0       0       0
  3974 ;;      Temps:          3       0       0       0       0       0       0
  3975 ;;      Totals:         7       0       0       0       0       0       0
  3976 ;;Total ram usage:        7 bytes
  3977 ;; Hardware stack levels used:    1
  3978 ;; Hardware stack levels required when called:    2
  3979 ;; This function calls:
  3980 ;;		_turn_on_current_coil
  3981 ;;		_update_current_coil
  3982 ;; This function is called by:
  3983 ;;		_main
  3984 ;; This function uses a non-reentrant model
  3985 ;;
  3986                           
  3987                           	psect	text6
  3988  0023A2                     __ptext6:
  3989                           	callstack 0
  3990  0023A2                     _reach_goal:
  3991                           	callstack 0
  3992  0023A2  FFFF               	dw	65535	; assembler added errata NOP
  3993  0023A4                     
  3994                           ;stepper_motor.c: 35:     if(stepper_motor -> step_counter >= goal_to_reach){
  3995  0023A4  EE20 F002          	lfsr	2,2
  3996  0023A8  5009               	movf	reach_goal@stepper_motor^0,w,c
  3997  0023AA  26D9               	addwf	fsr2l,f,c
  3998  0023AC  500A               	movf	(reach_goal@stepper_motor+1)^0,w,c
  3999  0023AE  22DA               	addwfc	fsr2h,f,c
  4000  0023B0  500B               	movf	reach_goal@goal_to_reach^0,w,c
  4001  0023B2  5CDE               	subwf	postinc2,w,c
  4002  0023B4  50DE               	movf	postinc2,w,c
  4003  0023B6  0A80               	xorlw	128
  4004  0023B8  6E0F               	movwf	(??_reach_goal+2)^0,c
  4005  0023BA  500C               	movf	(reach_goal@goal_to_reach+1)^0,w,c
  4006  0023BC  0A80               	xorlw	128
  4007  0023BE  580F               	subwfb	(??_reach_goal+2)^0,w,c
  4008  0023C0  A0D8               	btfss	status,0,c
  4009  0023C2  EFE5  F011         	goto	u2941
  4010  0023C6  EFE8  F011         	goto	u2940
  4011  0023CA                     u2941:
  4012  0023CA  FFFF               	dw	65535	; assembler added errata NOP
  4013  0023CC  EFF9  F011         	goto	l3030
  4014  0023D0                     u2940:
  4015  0023D0  FFFF               	dw	65535	; assembler added errata NOP
  4016  0023D2                     
  4017                           ;stepper_motor.c: 36:         stepper_motor -> step_counter = 0;
  4018  0023D2  EE20 F002          	lfsr	2,2
  4019  0023D6  5009               	movf	reach_goal@stepper_motor^0,w,c
  4020  0023D8  26D9               	addwf	fsr2l,f,c
  4021  0023DA  500A               	movf	(reach_goal@stepper_motor+1)^0,w,c
  4022  0023DC  22DA               	addwfc	fsr2h,f,c
  4023  0023DE  0E00               	movlw	0
  4024  0023E0  6EDE               	movwf	postinc2,c
  4025  0023E2  0E00               	movlw	0
  4026  0023E4  6EDD               	movwf	postdec2,c
  4027  0023E6                     
  4028                           ;stepper_motor.c: 37:         return 1;
  4029  0023E6  0E00               	movlw	0
  4030  0023E8  6E0A               	movwf	(?_reach_goal+1)^0,c
  4031  0023EA  0E01               	movlw	1
  4032  0023EC  6E09               	movwf	?_reach_goal^0,c
  4033  0023EE  EF0A  F012         	goto	l346
  4034  0023F2                     l3030:
  4035  0023F2  FFFF               	dw	65535	; assembler added errata NOP
  4036                           
  4037                           ;stepper_motor.c: 39:         turn_on_current_coil(stepper_motor);
  4038  0023F4  C009  F001         	movff	reach_goal@stepper_motor,turn_on_current_coil@stepper_motor
  4039  0023F8  C00A  F002         	movff	reach_goal@stepper_motor+1,turn_on_current_coil@stepper_motor+1
  4040  0023FC  ECAB  F012         	call	_turn_on_current_coil	;wreg free
  4041  002400                     
  4042                           ;stepper_motor.c: 40:         update_current_coil(stepper_motor);
  4043  002400  C009  F001         	movff	reach_goal@stepper_motor,update_current_coil@stepper_motor
  4044  002404  C00A  F002         	movff	reach_goal@stepper_motor+1,update_current_coil@stepper_motor+1
  4045  002408  ECC3  F00F         	call	_update_current_coil	;wreg free
  4046  00240C                     
  4047                           ;stepper_motor.c: 41:         return 0;
  4048  00240C  0E00               	movlw	0
  4049  00240E  6E0A               	movwf	(?_reach_goal+1)^0,c
  4050  002410  0E00               	movlw	0
  4051  002412  6E09               	movwf	?_reach_goal^0,c
  4052  002414                     l346:
  4053  002414  FFFF               	dw	65535	; assembler added errata NOP
  4054  002416  0012               	return		;funcret
  4055  002418  FFFF               	dw	65535	; errata NOP
  4056  00241A                     __end_of_reach_goal:
  4057                           	callstack 0
  4058                           
  4059 ;; *************** function _update_current_coil *****************
  4060 ;; Defined at:
  4061 ;;		line 22 in file "stepper_motor.c"
  4062 ;; Parameters:    Size  Location     Type
  4063 ;;  stepper_moto    2    0[COMRAM] PTR struct .
  4064 ;;		 -> joint_dilutor_stepper(12), end_effector_stepper(12), joint_stepper(12), 
  4065 ;; Auto vars:     Size  Location     Type
  4066 ;;		None
  4067 ;; Return value:  Size  Location     Type
  4068 ;;                  1    wreg      void 
  4069 ;; Registers used:
  4070 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4071 ;; Tracked objects:
  4072 ;;		On entry : 0/0
  4073 ;;		On exit  : 0/0
  4074 ;;		Unchanged: 0/0
  4075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4076 ;;      Params:         2       0       0       0       0       0       0
  4077 ;;      Locals:         0       0       0       0       0       0       0
  4078 ;;      Temps:          4       0       0       0       0       0       0
  4079 ;;      Totals:         6       0       0       0       0       0       0
  4080 ;;Total ram usage:        6 bytes
  4081 ;; Hardware stack levels used:    1
  4082 ;; Hardware stack levels required when called:    1
  4083 ;; This function calls:
  4084 ;;		Nothing
  4085 ;; This function is called by:
  4086 ;;		_reach_goal
  4087 ;; This function uses a non-reentrant model
  4088 ;;
  4089                           
  4090                           	psect	text7
  4091  001F86                     __ptext7:
  4092                           	callstack 0
  4093  001F86                     _update_current_coil:
  4094                           	callstack 0
  4095  001F86  FFFF               	dw	65535	; assembler added errata NOP
  4096  001F88                     
  4097                           ;stepper_motor.c: 23:     stepper_motor -> current_coil = stepper_motor -> current_coil 
      +                          + stepper_motor -> direction;
  4098  001F88  EE20 F004          	lfsr	2,4
  4099  001F8C  5001               	movf	update_current_coil@stepper_motor^0,w,c
  4100  001F8E  26D9               	addwf	fsr2l,f,c
  4101  001F90  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
  4102  001F92  22DA               	addwfc	fsr2h,f,c
  4103  001F94  CFDE F003          	movff	postinc2,??_update_current_coil
  4104  001F98  CFDD F004          	movff	postdec2,??_update_current_coil+1
  4105  001F9C  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
  4106  001FA0  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
  4107  001FA4  CFDE F005          	movff	postinc2,??_update_current_coil+2
  4108  001FA8  CFDD F006          	movff	postdec2,??_update_current_coil+3
  4109  001FAC  5003               	movf	??_update_current_coil^0,w,c
  4110  001FAE  2605               	addwf	(??_update_current_coil+2)^0,f,c
  4111  001FB0  5004               	movf	(??_update_current_coil+1)^0,w,c
  4112  001FB2  2206               	addwfc	(??_update_current_coil+3)^0,f,c
  4113  001FB4  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
  4114  001FB8  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
  4115  001FBC  C005  FFDE         	movff	??_update_current_coil+2,postinc2
  4116  001FC0  C006  FFDD         	movff	??_update_current_coil+3,postdec2
  4117                           
  4118                           ;stepper_motor.c: 24:     stepper_motor -> step_counter = stepper_motor -> step_counter 
      +                          + 1;
  4119  001FC4  EE20 F002          	lfsr	2,2
  4120  001FC8  5001               	movf	update_current_coil@stepper_motor^0,w,c
  4121  001FCA  26D9               	addwf	fsr2l,f,c
  4122  001FCC  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
  4123  001FCE  22DA               	addwfc	fsr2h,f,c
  4124  001FD0  CFDE F003          	movff	postinc2,??_update_current_coil
  4125  001FD4  CFDD F004          	movff	postdec2,??_update_current_coil+1
  4126  001FD8  0E01               	movlw	1
  4127  001FDA  2603               	addwf	??_update_current_coil^0,f,c
  4128  001FDC  0E00               	movlw	0
  4129  001FDE  2204               	addwfc	(??_update_current_coil+1)^0,f,c
  4130  001FE0  EE20 F002          	lfsr	2,2
  4131  001FE4  5001               	movf	update_current_coil@stepper_motor^0,w,c
  4132  001FE6  26D9               	addwf	fsr2l,f,c
  4133  001FE8  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
  4134  001FEA  22DA               	addwfc	fsr2h,f,c
  4135  001FEC  C003  FFDE         	movff	??_update_current_coil,postinc2
  4136  001FF0  C004  FFDD         	movff	??_update_current_coil+1,postdec2
  4137                           
  4138                           ;stepper_motor.c: 25:     if (stepper_motor -> current_coil == -1) {
  4139  001FF4  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
  4140  001FF8  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
  4141  001FFC  28DE               	incf	postinc2,w,c
  4142  001FFE  E106               	bnz	u2671
  4143  002000  28DE               	incf	postinc2,w,c
  4144  002002  A4D8               	btfss	status,2,c
  4145  002004  EF06  F010         	goto	u2671
  4146  002008  EF09  F010         	goto	u2670
  4147  00200C                     u2671:
  4148  00200C  FFFF               	dw	65535	; assembler added errata NOP
  4149  00200E  EF14  F010         	goto	l2748
  4150  002012                     u2670:
  4151  002012  FFFF               	dw	65535	; assembler added errata NOP
  4152  002014                     
  4153                           ;stepper_motor.c: 26:         stepper_motor -> current_coil = 3;
  4154  002014  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
  4155  002018  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
  4156  00201C  0E03               	movlw	3
  4157  00201E  6EDE               	movwf	postinc2,c
  4158  002020  0E00               	movlw	0
  4159  002022  6EDD               	movwf	postdec2,c
  4160                           
  4161                           ;stepper_motor.c: 27:     } else if(stepper_motor -> current_coil == 4) {
  4162  002024  EF2D  F010         	goto	l342
  4163  002028                     l2748:
  4164  002028  FFFF               	dw	65535	; assembler added errata NOP
  4165  00202A  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
  4166  00202E  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
  4167  002032  0E04               	movlw	4
  4168  002034  18DE               	xorwf	postinc2,w,c
  4169  002036  10DE               	iorwf	postinc2,w,c
  4170  002038  A4D8               	btfss	status,2,c
  4171  00203A  EF21  F010         	goto	u2681
  4172  00203E  EF24  F010         	goto	u2680
  4173  002042                     u2681:
  4174  002042  FFFF               	dw	65535	; assembler added errata NOP
  4175  002044  EF2D  F010         	goto	l342
  4176  002048                     u2680:
  4177  002048  FFFF               	dw	65535	; assembler added errata NOP
  4178  00204A                     
  4179                           ;stepper_motor.c: 28:         stepper_motor -> current_coil = 0;
  4180  00204A  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
  4181  00204E  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
  4182  002052  0E00               	movlw	0
  4183  002054  6EDE               	movwf	postinc2,c
  4184  002056  0E00               	movlw	0
  4185  002058  6EDD               	movwf	postdec2,c
  4186  00205A                     l342:
  4187  00205A  FFFF               	dw	65535	; assembler added errata NOP
  4188  00205C  0012               	return		;funcret
  4189  00205E  FFFF               	dw	65535	; errata NOP
  4190  002060                     __end_of_update_current_coil:
  4191                           	callstack 0
  4192                           
  4193 ;; *************** function _turn_on_current_coil *****************
  4194 ;; Defined at:
  4195 ;;		line 16 in file "stepper_motor.c"
  4196 ;; Parameters:    Size  Location     Type
  4197 ;;  stepper_moto    2    0[COMRAM] PTR struct .
  4198 ;;		 -> joint_dilutor_stepper(12), end_effector_stepper(12), joint_stepper(12), 
  4199 ;; Auto vars:     Size  Location     Type
  4200 ;;		None
  4201 ;; Return value:  Size  Location     Type
  4202 ;;                  1    wreg      void 
  4203 ;; Registers used:
  4204 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4205 ;; Tracked objects:
  4206 ;;		On entry : 0/0
  4207 ;;		On exit  : 0/0
  4208 ;;		Unchanged: 0/0
  4209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4210 ;;      Params:         2       0       0       0       0       0       0
  4211 ;;      Locals:         0       0       0       0       0       0       0
  4212 ;;      Temps:          6       0       0       0       0       0       0
  4213 ;;      Totals:         8       0       0       0       0       0       0
  4214 ;;Total ram usage:        8 bytes
  4215 ;; Hardware stack levels used:    1
  4216 ;; Hardware stack levels required when called:    1
  4217 ;; This function calls:
  4218 ;;		Nothing
  4219 ;; This function is called by:
  4220 ;;		_reach_goal
  4221 ;; This function uses a non-reentrant model
  4222 ;;
  4223                           
  4224                           	psect	text8
  4225  002556                     __ptext8:
  4226                           	callstack 0
  4227  002556                     _turn_on_current_coil:
  4228                           	callstack 0
  4229  002556  FFFF               	dw	65535	; assembler added errata NOP
  4230  002558                     
  4231                           ;stepper_motor.c: 17:     *(stepper_motor -> register_name) = stepper_motor -> hex_coil_
      +                          register_values[stepper_motor -> current_coil];
  4232  002558  C001  FFD9         	movff	turn_on_current_coil@stepper_motor,fsr2l
  4233  00255C  C002  FFDA         	movff	turn_on_current_coil@stepper_motor+1,fsr2h
  4234  002560  CFDE F003          	movff	postinc2,??_turn_on_current_coil
  4235  002564  CFDD F004          	movff	postdec2,??_turn_on_current_coil+1
  4236  002568  C001  F005         	movff	turn_on_current_coil@stepper_motor,??_turn_on_current_coil+2
  4237  00256C  C002  F006         	movff	turn_on_current_coil@stepper_motor+1,??_turn_on_current_coil+3
  4238  002570  5003               	movf	??_turn_on_current_coil^0,w,c
  4239  002572  2605               	addwf	(??_turn_on_current_coil+2)^0,f,c
  4240  002574  5004               	movf	(??_turn_on_current_coil+1)^0,w,c
  4241  002576  2206               	addwfc	(??_turn_on_current_coil+3)^0,f,c
  4242  002578  0E06               	movlw	6
  4243  00257A  2405               	addwf	(??_turn_on_current_coil+2)^0,w,c
  4244  00257C  6ED9               	movwf	fsr2l,c
  4245  00257E  0E00               	movlw	0
  4246  002580  2006               	addwfc	(??_turn_on_current_coil+3)^0,w,c
  4247  002582  6EDA               	movwf	fsr2h,c
  4248  002584  EE10 F00A          	lfsr	1,10
  4249  002588  5001               	movf	turn_on_current_coil@stepper_motor^0,w,c
  4250  00258A  26E1               	addwf	fsr1l,f,c
  4251  00258C  5002               	movf	(turn_on_current_coil@stepper_motor+1)^0,w,c
  4252  00258E  22E2               	addwfc	fsr1h,f,c
  4253  002590  CFE6 F007          	movff	postinc1,??_turn_on_current_coil+4
  4254  002594  CFE5 F008          	movff	postdec1,??_turn_on_current_coil+5
  4255  002598  C007  FFE1         	movff	??_turn_on_current_coil+4,fsr1l
  4256  00259C  C008  FFE2         	movff	??_turn_on_current_coil+5,fsr1h
  4257  0025A0  CFDF FFE7          	movff	indf2,indf1
  4258  0025A4  0012               	return		;funcret
  4259  0025A6  FFFF               	dw	65535	; errata NOP
  4260  0025A8                     __end_of_turn_on_current_coil:
  4261                           	callstack 0
  4262                           
  4263 ;; *************** function _lcd_update *****************
  4264 ;; Defined at:
  4265 ;;		line 92 in file "lcd.c"
  4266 ;; Parameters:    Size  Location     Type
  4267 ;;  state           2   11[COMRAM] int 
  4268 ;; Auto vars:     Size  Location     Type
  4269 ;;  i               2   19[COMRAM] int 
  4270 ;;  line_select     4   15[COMRAM] const unsigned char [4]
  4271 ;; Return value:  Size  Location     Type
  4272 ;;                  1    wreg      void 
  4273 ;; Registers used:
  4274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4275 ;; Tracked objects:
  4276 ;;		On entry : 0/0
  4277 ;;		On exit  : 0/0
  4278 ;;		Unchanged: 0/0
  4279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4280 ;;      Params:         2       0       0       0       0       0       0
  4281 ;;      Locals:         6       0       0       0       0       0       0
  4282 ;;      Temps:          2       0       0       0       0       0       0
  4283 ;;      Totals:        10       0       0       0       0       0       0
  4284 ;;Total ram usage:       10 bytes
  4285 ;; Hardware stack levels used:    1
  4286 ;; Hardware stack levels required when called:    4
  4287 ;; This function calls:
  4288 ;;		___wmul
  4289 ;;		_lcd_cmd
  4290 ;;		_lcd_str
  4291 ;; This function is called by:
  4292 ;;		_main
  4293 ;; This function uses a non-reentrant model
  4294 ;;
  4295                           
  4296                           	psect	text9
  4297  002136                     __ptext9:
  4298                           	callstack 0
  4299  002136                     _lcd_update:
  4300                           	callstack 0
  4301  002136  FFFF               	dw	65535	; assembler added errata NOP
  4302  002138                     
  4303                           ;lcd.c: 93:     lcd_cmd(0x01);
  4304  002138  0E01               	movlw	1
  4305  00213A  ECDE  F013         	call	_lcd_cmd
  4306  00213E                     
  4307                           ;lcd.c: 94:     const char line_select[4] = {0x80, 0xC0, 0x94, 0xD4};
  4308  00213E  0E2D               	movlw	low lcd_update@F2139
  4309  002140  6EF6               	movwf	tblptrl,c
  4310  002142                     	if	1	;There is more than 1 active tblptr byte
  4311  002142  0E7B               	movlw	high lcd_update@F2139
  4312  002144  6EF7               	movwf	tblptrh,c
  4313  002146                     	endif
  4314  002146                     	if	0	;There are less than 3 active tblptr bytes
  4315  002146                     	endif
  4316  002146  0009               	tblrd		*+
  4317  002148  FFFF               	dw	65535	; errata NOP
  4318  00214A  CFF5 F010          	movff	tablat,lcd_update@line_select
  4319  00214E  0009               	tblrd		*+
  4320  002150  FFFF               	dw	65535	; errata NOP
  4321  002152  CFF5 F011          	movff	tablat,lcd_update@line_select+1
  4322  002156  0009               	tblrd		*+
  4323  002158  FFFF               	dw	65535	; errata NOP
  4324  00215A  CFF5 F012          	movff	tablat,lcd_update@line_select+2
  4325  00215E  000A               	tblrd		*-
  4326  002160  FFFF               	dw	65535	; errata NOP
  4327  002162  CFF5 F013          	movff	tablat,lcd_update@line_select+3
  4328  002166                     
  4329                           ;lcd.c: 95:     for (int i=0;i<4;i++ ){
  4330  002166  0E00               	movlw	0
  4331  002168  6E15               	movwf	(lcd_update@i+1)^0,c
  4332  00216A  0E00               	movlw	0
  4333  00216C  6E14               	movwf	lcd_update@i^0,c
  4334  00216E                     l2950:
  4335  00216E  FFFF               	dw	65535	; assembler added errata NOP
  4336                           
  4337                           ;lcd.c: 96:         lcd_cmd(line_select[i]);
  4338  002170  0E10               	movlw	low lcd_update@line_select
  4339  002172  2414               	addwf	lcd_update@i^0,w,c
  4340  002174  6ED9               	movwf	fsr2l,c
  4341  002176  0E00               	movlw	high lcd_update@line_select
  4342  002178  2015               	addwfc	(lcd_update@i+1)^0,w,c
  4343  00217A  6EDA               	movwf	fsr2h,c
  4344  00217C  50DF               	movf	indf2,w,c
  4345  00217E  ECDE  F013         	call	_lcd_cmd
  4346  002182                     
  4347                           ;lcd.c: 97:         lcd_str(const_msgs[state][i]);
  4348  002182  C00C  F001         	movff	lcd_update@state,___wmul@multiplier
  4349  002186  C00D  F002         	movff	lcd_update@state+1,___wmul@multiplier+1
  4350  00218A  0E00               	movlw	0
  4351  00218C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4352  00218E  0E50               	movlw	80
  4353  002190  6E03               	movwf	___wmul@multiplicand^0,c
  4354  002192  ECC9  F013         	call	___wmul	;wreg free
  4355  002196  0E35               	movlw	low _const_msgs
  4356  002198  6E0E               	movwf	??_lcd_update^0,c
  4357  00219A  0E7B               	movlw	high _const_msgs
  4358  00219C  6E0F               	movwf	(??_lcd_update+1)^0,c
  4359  00219E  5001               	movf	?___wmul^0,w,c
  4360  0021A0  260E               	addwf	??_lcd_update^0,f,c
  4361  0021A2  5002               	movf	(?___wmul+1)^0,w,c
  4362  0021A4  220F               	addwfc	(??_lcd_update+1)^0,f,c
  4363  0021A6  C014  F001         	movff	lcd_update@i,___wmul@multiplier
  4364  0021AA  C015  F002         	movff	lcd_update@i+1,___wmul@multiplier+1
  4365  0021AE  0E00               	movlw	0
  4366  0021B0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4367  0021B2  0E14               	movlw	20
  4368  0021B4  6E03               	movwf	___wmul@multiplicand^0,c
  4369  0021B6  ECC9  F013         	call	___wmul	;wreg free
  4370  0021BA  5001               	movf	?___wmul^0,w,c
  4371  0021BC  240E               	addwf	??_lcd_update^0,w,c
  4372  0021BE  6E07               	movwf	lcd_str@str^0,c
  4373  0021C0  5002               	movf	(?___wmul+1)^0,w,c
  4374  0021C2  200F               	addwfc	(??_lcd_update+1)^0,w,c
  4375  0021C4  6E08               	movwf	(lcd_str@str+1)^0,c
  4376  0021C6  EC7B  F012         	call	_lcd_str	;wreg free
  4377  0021CA                     
  4378                           ;lcd.c: 98:     }
  4379  0021CA  4A14               	infsnz	lcd_update@i^0,f,c
  4380  0021CC  2A15               	incf	(lcd_update@i+1)^0,f,c
  4381  0021CE  BE15               	btfsc	(lcd_update@i+1)^0,7,c
  4382  0021D0  EFF3  F010         	goto	u2891
  4383  0021D4  5015               	movf	(lcd_update@i+1)^0,w,c
  4384  0021D6  E10A               	bnz	u2890
  4385  0021D8  0E04               	movlw	4
  4386  0021DA  5C14               	subwf	lcd_update@i^0,w,c
  4387  0021DC  A0D8               	btfss	status,0,c
  4388  0021DE  EFF3  F010         	goto	u2891
  4389  0021E2  EFF6  F010         	goto	u2890
  4390  0021E6                     u2891:
  4391  0021E6  FFFF               	dw	65535	; assembler added errata NOP
  4392  0021E8  EFB7  F010         	goto	l2950
  4393  0021EC                     u2890:
  4394  0021EC  FFFF               	dw	65535	; assembler added errata NOP
  4395  0021EE  0012               	return		;funcret
  4396  0021F0  FFFF               	dw	65535	; errata NOP
  4397  0021F2                     __end_of_lcd_update:
  4398                           	callstack 0
  4399                           
  4400 ;; *************** function _lcd_str *****************
  4401 ;; Defined at:
  4402 ;;		line 81 in file "lcd.c"
  4403 ;; Parameters:    Size  Location     Type
  4404 ;;  str             2    6[COMRAM] PTR const unsigned char 
  4405 ;;		 -> const_msgs(1200), STR_1(22), 
  4406 ;; Auto vars:     Size  Location     Type
  4407 ;;  i               1   10[COMRAM] unsigned char 
  4408 ;; Return value:  Size  Location     Type
  4409 ;;                  1    wreg      void 
  4410 ;; Registers used:
  4411 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4417 ;;      Params:         2       0       0       0       0       0       0
  4418 ;;      Locals:         1       0       0       0       0       0       0
  4419 ;;      Temps:          2       0       0       0       0       0       0
  4420 ;;      Totals:         5       0       0       0       0       0       0
  4421 ;;Total ram usage:        5 bytes
  4422 ;; Hardware stack levels used:    1
  4423 ;; Hardware stack levels required when called:    3
  4424 ;; This function calls:
  4425 ;;		_lcd_dat
  4426 ;; This function is called by:
  4427 ;;		_main
  4428 ;;		_lcd_update
  4429 ;; This function uses a non-reentrant model
  4430 ;;
  4431                           
  4432                           	psect	text10
  4433  0024F6                     __ptext10:
  4434                           	callstack 0
  4435  0024F6                     _lcd_str:
  4436                           	callstack 0
  4437  0024F6  FFFF               	dw	65535	; assembler added errata NOP
  4438  0024F8                     
  4439                           ;lcd.c: 81: void lcd_str(const char* str);lcd.c: 82: {;lcd.c: 83:     unsigned char i=0;
  4440  0024F8  0E00               	movlw	0
  4441  0024FA  6E0B               	movwf	lcd_str@i^0,c
  4442                           
  4443                           ;lcd.c: 85:     while(str[i] != 0 )
  4444  0024FC  EF91  F012         	goto	l2732
  4445  002500                     l2728:
  4446  002500  FFFF               	dw	65535	; assembler added errata NOP
  4447                           
  4448                           ;lcd.c: 86:     {;lcd.c: 87:       lcd_dat(str[i]);
  4449  002502  500B               	movf	lcd_str@i^0,w,c
  4450  002504  2407               	addwf	lcd_str@str^0,w,c
  4451  002506  6E09               	movwf	??_lcd_str^0,c
  4452  002508  0E00               	movlw	0
  4453  00250A  2008               	addwfc	(lcd_str@str+1)^0,w,c
  4454  00250C  6E0A               	movwf	(??_lcd_str+1)^0,c
  4455  00250E  C009  FFF6         	movff	??_lcd_str,tblptrl
  4456  002512  C00A  FFF7         	movff	??_lcd_str+1,tblptrh
  4457  002516                     	if	0	;tblptru may be non-zero
  4458  002516                     	endif
  4459  002516                     	if	0	;tblptru may be non-zero
  4460  002516                     	endif
  4461  002516  0008               	tblrd		*
  4462  002518  FFFF               	dw	65535	; errata NOP
  4463  00251A  50F5               	movf	tablat,w,c
  4464  00251C  ECB4  F013         	call	_lcd_dat
  4465  002520                     
  4466                           ;lcd.c: 88:       i++;
  4467  002520  2A0B               	incf	lcd_str@i^0,f,c
  4468  002522                     l2732:
  4469  002522  FFFF               	dw	65535	; assembler added errata NOP
  4470                           
  4471                           ;lcd.c: 85:     while(str[i] != 0 )
  4472  002524  500B               	movf	lcd_str@i^0,w,c
  4473  002526  2407               	addwf	lcd_str@str^0,w,c
  4474  002528  6E09               	movwf	??_lcd_str^0,c
  4475  00252A  0E00               	movlw	0
  4476  00252C  2008               	addwfc	(lcd_str@str+1)^0,w,c
  4477  00252E  6E0A               	movwf	(??_lcd_str+1)^0,c
  4478  002530  C009  FFF6         	movff	??_lcd_str,tblptrl
  4479  002534  C00A  FFF7         	movff	??_lcd_str+1,tblptrh
  4480  002538                     	if	0	;tblptru may be non-zero
  4481  002538                     	endif
  4482  002538                     	if	0	;tblptru may be non-zero
  4483  002538                     	endif
  4484  002538  0008               	tblrd		*
  4485  00253A  FFFF               	dw	65535	; errata NOP
  4486  00253C  50F5               	movf	tablat,w,c
  4487  00253E  0900               	iorlw	0
  4488  002540  A4D8               	btfss	status,2,c
  4489  002542  EFA5  F012         	goto	u2651
  4490  002546  EFA8  F012         	goto	u2650
  4491  00254A                     u2651:
  4492  00254A  FFFF               	dw	65535	; assembler added errata NOP
  4493  00254C  EF80  F012         	goto	l2728
  4494  002550                     u2650:
  4495  002550  FFFF               	dw	65535	; assembler added errata NOP
  4496  002552  0012               	return		;funcret
  4497  002554  FFFF               	dw	65535	; errata NOP
  4498  002556                     __end_of_lcd_str:
  4499                           	callstack 0
  4500                           
  4501 ;; *************** function _lcd_dat *****************
  4502 ;; Defined at:
  4503 ;;		line 40 in file "lcd.c"
  4504 ;; Parameters:    Size  Location     Type
  4505 ;;  val             1    wreg     unsigned char 
  4506 ;; Auto vars:     Size  Location     Type
  4507 ;;  val             1    1[COMRAM] unsigned char 
  4508 ;; Return value:  Size  Location     Type
  4509 ;;                  1    wreg      void 
  4510 ;; Registers used:
  4511 ;;		wreg, status,2, cstack
  4512 ;; Tracked objects:
  4513 ;;		On entry : 0/0
  4514 ;;		On exit  : 0/0
  4515 ;;		Unchanged: 0/0
  4516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4517 ;;      Params:         0       0       0       0       0       0       0
  4518 ;;      Locals:         1       0       0       0       0       0       0
  4519 ;;      Temps:          0       0       0       0       0       0       0
  4520 ;;      Totals:         1       0       0       0       0       0       0
  4521 ;;Total ram usage:        1 bytes
  4522 ;; Hardware stack levels used:    1
  4523 ;; Hardware stack levels required when called:    2
  4524 ;; This function calls:
  4525 ;;		_lcd_wr
  4526 ;; This function is called by:
  4527 ;;		_lcd_str
  4528 ;;		_state_translator_fpga_to_micro
  4529 ;; This function uses a non-reentrant model
  4530 ;;
  4531                           
  4532                           	psect	text11
  4533  002768                     __ptext11:
  4534                           	callstack 0
  4535  002768                     _lcd_dat:
  4536                           	callstack 0
  4537  002768  FFFF               	dw	65535	; assembler added errata NOP
  4538                           
  4539                           ;incstack = 0
  4540                           ;lcd_dat@val stored from wreg
  4541  00276A  6E02               	movwf	lcd_dat@val^0,c
  4542  00276C                     
  4543                           ;lcd.c: 40: void lcd_dat(unsigned char val);lcd.c: 41: {;lcd.c: 42:  PORTEbits.RE1=1;
  4544  00276C  8284               	bsf	132,1,c	;volatile
  4545  00276E                     
  4546                           ;lcd.c: 43:     lcd_wr(val);
  4547  00276E  5002               	movf	lcd_dat@val^0,w,c
  4548  002770  EC54  F014         	call	_lcd_wr
  4549  002774                     
  4550                           ;lcd.c: 44:     PORTEbits.RE2=1;
  4551  002774  8484               	bsf	132,2,c	;volatile
  4552  002776                     
  4553                           ;lcd.c: 45:     _delay((unsigned long)((1)*(4000000/4000.0)));
  4554  002776  0EC8               	movlw	200
  4555  002778                     u3507:
  4556  002778  FFFF               	dw	65535	; errata NOP
  4557  00277A  F000               	nop	
  4558  00277C  2EE8               	decfsz	wreg,f,c
  4559  00277E  D7FC               	bra	u3507
  4560  002780                     
  4561                           ;lcd.c: 46:     PORTEbits.RE1=0;
  4562  002780  9284               	bcf	132,1,c	;volatile
  4563  002782                     
  4564                           ;lcd.c: 47:     _delay((unsigned long)((1)*(4000000/4000.0)));
  4565  002782  0EC8               	movlw	200
  4566  002784                     u3517:
  4567  002784  FFFF               	dw	65535	; errata NOP
  4568  002786  F000               	nop	
  4569  002788  2EE8               	decfsz	wreg,f,c
  4570  00278A  D7FC               	bra	u3517
  4571  00278C                     
  4572                           ;lcd.c: 48:  PORTEbits.RE1=1;
  4573  00278C  8284               	bsf	132,1,c	;volatile
  4574  00278E  0012               	return		;funcret
  4575  002790  FFFF               	dw	65535	; errata NOP
  4576  002792                     __end_of_lcd_dat:
  4577                           	callstack 0
  4578                           
  4579 ;; *************** function ___wmul *****************
  4580 ;; Defined at:
  4581 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  4582 ;; Parameters:    Size  Location     Type
  4583 ;;  multiplier      2    0[COMRAM] unsigned int 
  4584 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4585 ;; Auto vars:     Size  Location     Type
  4586 ;;  product         2    4[COMRAM] unsigned int 
  4587 ;; Return value:  Size  Location     Type
  4588 ;;                  2    0[COMRAM] unsigned int 
  4589 ;; Registers used:
  4590 ;;		wreg, status,2, status,0, prodl, prodh
  4591 ;; Tracked objects:
  4592 ;;		On entry : 0/0
  4593 ;;		On exit  : 0/0
  4594 ;;		Unchanged: 0/0
  4595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4596 ;;      Params:         4       0       0       0       0       0       0
  4597 ;;      Locals:         2       0       0       0       0       0       0
  4598 ;;      Temps:          0       0       0       0       0       0       0
  4599 ;;      Totals:         6       0       0       0       0       0       0
  4600 ;;Total ram usage:        6 bytes
  4601 ;; Hardware stack levels used:    1
  4602 ;; Hardware stack levels required when called:    1
  4603 ;; This function calls:
  4604 ;;		Nothing
  4605 ;; This function is called by:
  4606 ;;		_main
  4607 ;;		_lcd_update
  4608 ;; This function uses a non-reentrant model
  4609 ;;
  4610                           
  4611                           	psect	text12
  4612  002792                     __ptext12:
  4613                           	callstack 0
  4614  002792                     ___wmul:
  4615                           	callstack 0
  4616  002792  FFFF               	dw	65535	; assembler added errata NOP
  4617  002794  5001               	movf	___wmul@multiplier^0,w,c
  4618  002796  0203               	mulwf	___wmul@multiplicand^0,c
  4619  002798  CFF3 F005          	movff	prodl,___wmul@product
  4620  00279C  CFF4 F006          	movff	prodh,___wmul@product+1
  4621  0027A0  5001               	movf	___wmul@multiplier^0,w,c
  4622  0027A2  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  4623  0027A4  50F3               	movf	243,w,c
  4624  0027A6  2606               	addwf	(___wmul@product+1)^0,f,c
  4625  0027A8  5002               	movf	(___wmul@multiplier+1)^0,w,c
  4626  0027AA  0203               	mulwf	___wmul@multiplicand^0,c
  4627  0027AC  50F3               	movf	243,w,c
  4628  0027AE  2606               	addwf	(___wmul@product+1)^0,f,c
  4629  0027B0  C005  F001         	movff	___wmul@product,?___wmul
  4630  0027B4  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4631  0027B8  0012               	return		;funcret
  4632  0027BA  FFFF               	dw	65535	; errata NOP
  4633  0027BC                     __end_of___wmul:
  4634                           	callstack 0
  4635                           
  4636 ;; *************** function _lcd_init *****************
  4637 ;; Defined at:
  4638 ;;		line 51 in file "lcd.c"
  4639 ;; Parameters:    Size  Location     Type
  4640 ;;		None
  4641 ;; Auto vars:     Size  Location     Type
  4642 ;;		None
  4643 ;; Return value:  Size  Location     Type
  4644 ;;                  1    wreg      void 
  4645 ;; Registers used:
  4646 ;;		wreg, status,2, cstack
  4647 ;; Tracked objects:
  4648 ;;		On entry : 0/0
  4649 ;;		On exit  : 0/0
  4650 ;;		Unchanged: 0/0
  4651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4652 ;;      Params:         0       0       0       0       0       0       0
  4653 ;;      Locals:         0       0       0       0       0       0       0
  4654 ;;      Temps:          1       0       0       0       0       0       0
  4655 ;;      Totals:         1       0       0       0       0       0       0
  4656 ;;Total ram usage:        1 bytes
  4657 ;; Hardware stack levels used:    1
  4658 ;; Hardware stack levels required when called:    3
  4659 ;; This function calls:
  4660 ;;		_lcd_cmd
  4661 ;; This function is called by:
  4662 ;;		_main
  4663 ;; This function uses a non-reentrant model
  4664 ;;
  4665                           
  4666                           	psect	text13
  4667  002324                     __ptext13:
  4668                           	callstack 0
  4669  002324                     _lcd_init:
  4670                           	callstack 0
  4671  002324  FFFF               	dw	65535	; assembler added errata NOP
  4672  002326  6A83               	clrf	3971,c	;# 
  4673  002328  0E00               	movlw	0	;# 
  4674  00232A  6E95               	movwf	3989,c	;# 
  4675  00232C  6A84               	clrf	3972,c	;# 
  4676  00232E  0E00               	movlw	0	;# 
  4677  002330  6E96               	movwf	3990,c	;# 
  4678                           
  4679                           ;lcd.c: 64:  PORTEbits.RE1=0;
  4680  002332  9284               	bcf	132,1,c	;volatile
  4681                           
  4682                           ;lcd.c: 65:  PORTEbits.RE2=0;
  4683  002334  9484               	bcf	132,2,c	;volatile
  4684  002336                     
  4685                           ;lcd.c: 66:  _delay((unsigned long)((30)*(4000000/4000.0)));
  4686  002336  0E1E               	movlw	30
  4687  002338  6E03               	movwf	??_lcd_init^0,c
  4688  00233A  0E3C               	movlw	60
  4689  00233C                     u3527:
  4690  00233C  FFFF               	dw	65535	; errata NOP
  4691  00233E  2EE8               	decfsz	wreg,f,c
  4692  002340  D7FD               	bra	u3527
  4693  002342  2E03               	decfsz	??_lcd_init^0,f,c
  4694  002344  D7FB               	bra	u3527
  4695  002346  D000               	nop2	
  4696  002348                     
  4697                           ;lcd.c: 67:  PORTEbits.RE1=1;
  4698  002348  8284               	bsf	132,1,c	;volatile
  4699  00234A                     
  4700                           ;lcd.c: 69:  lcd_cmd(0x38);
  4701  00234A  0E38               	movlw	56
  4702  00234C  ECDE  F013         	call	_lcd_cmd
  4703  002350                     
  4704                           ;lcd.c: 70:  _delay((unsigned long)((30)*(4000000/4000.0)));
  4705  002350  0E1E               	movlw	30
  4706  002352  6E03               	movwf	??_lcd_init^0,c
  4707  002354  0E3C               	movlw	60
  4708  002356                     u3537:
  4709  002356  FFFF               	dw	65535	; errata NOP
  4710  002358  2EE8               	decfsz	wreg,f,c
  4711  00235A  D7FD               	bra	u3537
  4712  00235C  2E03               	decfsz	??_lcd_init^0,f,c
  4713  00235E  D7FB               	bra	u3537
  4714  002360  D000               	nop2	
  4715                           
  4716                           ;lcd.c: 71:  lcd_cmd(0x38);
  4717  002362  0E38               	movlw	56
  4718  002364  ECDE  F013         	call	_lcd_cmd
  4719  002368                     
  4720                           ;lcd.c: 72:     _delay((unsigned long)((30)*(4000000/4000.0)));
  4721  002368  0E1E               	movlw	30
  4722  00236A  6E03               	movwf	??_lcd_init^0,c
  4723  00236C  0E3C               	movlw	60
  4724  00236E                     u3547:
  4725  00236E  FFFF               	dw	65535	; errata NOP
  4726  002370  2EE8               	decfsz	wreg,f,c
  4727  002372  D7FD               	bra	u3547
  4728  002374  2E03               	decfsz	??_lcd_init^0,f,c
  4729  002376  D7FB               	bra	u3547
  4730  002378  D000               	nop2	
  4731  00237A                     
  4732                           ;lcd.c: 73:  lcd_cmd(0x38);
  4733  00237A  0E38               	movlw	56
  4734  00237C  ECDE  F013         	call	_lcd_cmd
  4735  002380                     
  4736                           ;lcd.c: 74:  lcd_cmd(0x08);
  4737  002380  0E08               	movlw	8
  4738  002382  ECDE  F013         	call	_lcd_cmd
  4739  002386                     
  4740                           ;lcd.c: 75:  lcd_cmd(0x0F);
  4741  002386  0E0F               	movlw	15
  4742  002388  ECDE  F013         	call	_lcd_cmd
  4743  00238C                     
  4744                           ;lcd.c: 76:  lcd_cmd(0x01);
  4745  00238C  0E01               	movlw	1
  4746  00238E  ECDE  F013         	call	_lcd_cmd
  4747  002392                     
  4748                           ;lcd.c: 77:  lcd_cmd(0x38);
  4749  002392  0E38               	movlw	56
  4750  002394  ECDE  F013         	call	_lcd_cmd
  4751  002398                     
  4752                           ;lcd.c: 78:     lcd_cmd(0x80);
  4753  002398  0E80               	movlw	128
  4754  00239A  ECDE  F013         	call	_lcd_cmd
  4755  00239E  0012               	return		;funcret
  4756  0023A0  FFFF               	dw	65535	; errata NOP
  4757  0023A2                     __end_of_lcd_init:
  4758                           	callstack 0
  4759                           
  4760 ;; *************** function _lcd_cmd *****************
  4761 ;; Defined at:
  4762 ;;		line 29 in file "lcd.c"
  4763 ;; Parameters:    Size  Location     Type
  4764 ;;  val             1    wreg     unsigned char 
  4765 ;; Auto vars:     Size  Location     Type
  4766 ;;  val             1    1[COMRAM] unsigned char 
  4767 ;; Return value:  Size  Location     Type
  4768 ;;                  1    wreg      void 
  4769 ;; Registers used:
  4770 ;;		wreg, status,2, cstack
  4771 ;; Tracked objects:
  4772 ;;		On entry : 0/0
  4773 ;;		On exit  : 0/0
  4774 ;;		Unchanged: 0/0
  4775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4776 ;;      Params:         0       0       0       0       0       0       0
  4777 ;;      Locals:         1       0       0       0       0       0       0
  4778 ;;      Temps:          0       0       0       0       0       0       0
  4779 ;;      Totals:         1       0       0       0       0       0       0
  4780 ;;Total ram usage:        1 bytes
  4781 ;; Hardware stack levels used:    1
  4782 ;; Hardware stack levels required when called:    2
  4783 ;; This function calls:
  4784 ;;		_lcd_wr
  4785 ;; This function is called by:
  4786 ;;		_main
  4787 ;;		_lcd_init
  4788 ;;		_lcd_update
  4789 ;; This function uses a non-reentrant model
  4790 ;;
  4791                           
  4792                           	psect	text14
  4793  0027BC                     __ptext14:
  4794                           	callstack 0
  4795  0027BC                     _lcd_cmd:
  4796                           	callstack 0
  4797  0027BC  FFFF               	dw	65535	; assembler added errata NOP
  4798                           
  4799                           ;incstack = 0
  4800                           ;lcd_cmd@val stored from wreg
  4801  0027BE  6E02               	movwf	lcd_cmd@val^0,c
  4802  0027C0                     
  4803                           ;lcd.c: 29: void lcd_cmd(unsigned char val);lcd.c: 30: {;lcd.c: 31:  PORTEbits.RE1=1;
  4804  0027C0  8284               	bsf	132,1,c	;volatile
  4805  0027C2                     
  4806                           ;lcd.c: 32:     lcd_wr(val);
  4807  0027C2  5002               	movf	lcd_cmd@val^0,w,c
  4808  0027C4  EC54  F014         	call	_lcd_wr
  4809  0027C8                     
  4810                           ;lcd.c: 33:     PORTEbits.RE2=0;
  4811  0027C8  9484               	bcf	132,2,c	;volatile
  4812  0027CA                     
  4813                           ;lcd.c: 34:     _delay((unsigned long)((1)*(4000000/4000.0)));
  4814  0027CA  0EC8               	movlw	200
  4815  0027CC                     u3557:
  4816  0027CC  FFFF               	dw	65535	; errata NOP
  4817  0027CE  F000               	nop	
  4818  0027D0  2EE8               	decfsz	wreg,f,c
  4819  0027D2  D7FC               	bra	u3557
  4820  0027D4                     
  4821                           ;lcd.c: 35:     PORTEbits.RE1=0;
  4822  0027D4  9284               	bcf	132,1,c	;volatile
  4823  0027D6                     
  4824                           ;lcd.c: 36:     _delay((unsigned long)((1)*(4000000/4000.0)));
  4825  0027D6  0EC8               	movlw	200
  4826  0027D8                     u3567:
  4827  0027D8  FFFF               	dw	65535	; errata NOP
  4828  0027DA  F000               	nop	
  4829  0027DC  2EE8               	decfsz	wreg,f,c
  4830  0027DE  D7FC               	bra	u3567
  4831  0027E0                     
  4832                           ;lcd.c: 37:  PORTEbits.RE1=1;
  4833  0027E0  8284               	bsf	132,1,c	;volatile
  4834  0027E2  0012               	return		;funcret
  4835  0027E4  FFFF               	dw	65535	; errata NOP
  4836  0027E6                     __end_of_lcd_cmd:
  4837                           	callstack 0
  4838                           
  4839 ;; *************** function _lcd_wr *****************
  4840 ;; Defined at:
  4841 ;;		line 24 in file "lcd.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;  val             1    wreg     unsigned char 
  4844 ;; Auto vars:     Size  Location     Type
  4845 ;;  val             1    0[COMRAM] unsigned char 
  4846 ;; Return value:  Size  Location     Type
  4847 ;;                  1    wreg      void 
  4848 ;; Registers used:
  4849 ;;		wreg
  4850 ;; Tracked objects:
  4851 ;;		On entry : 0/0
  4852 ;;		On exit  : 0/0
  4853 ;;		Unchanged: 0/0
  4854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4855 ;;      Params:         0       0       0       0       0       0       0
  4856 ;;      Locals:         1       0       0       0       0       0       0
  4857 ;;      Temps:          0       0       0       0       0       0       0
  4858 ;;      Totals:         1       0       0       0       0       0       0
  4859 ;;Total ram usage:        1 bytes
  4860 ;; Hardware stack levels used:    1
  4861 ;; Hardware stack levels required when called:    1
  4862 ;; This function calls:
  4863 ;;		Nothing
  4864 ;; This function is called by:
  4865 ;;		_lcd_cmd
  4866 ;;		_lcd_dat
  4867 ;; This function uses a non-reentrant model
  4868 ;;
  4869                           
  4870                           	psect	text15
  4871  0028A8                     __ptext15:
  4872                           	callstack 0
  4873  0028A8                     _lcd_wr:
  4874                           	callstack 0
  4875  0028A8  FFFF               	dw	65535	; assembler added errata NOP
  4876                           
  4877                           ;incstack = 0
  4878                           ;lcd_wr@val stored from wreg
  4879  0028AA  6E01               	movwf	lcd_wr@val^0,c
  4880  0028AC                     
  4881                           ;lcd.c: 24: void lcd_wr(unsigned char val);lcd.c: 25: {;lcd.c: 26:     PORTD=val;
  4882  0028AC  C001  FF83         	movff	lcd_wr@val,3971	;volatile
  4883  0028B0  0012               	return		;funcret
  4884  0028B2  FFFF               	dw	65535	; errata NOP
  4885  0028B4                     __end_of_lcd_wr:
  4886                           	callstack 0
  4887                           
  4888 ;; *************** function _init_timer_0 *****************
  4889 ;; Defined at:
  4890 ;;		line 4 in file "timer.c"
  4891 ;; Parameters:    Size  Location     Type
  4892 ;;		None
  4893 ;; Auto vars:     Size  Location     Type
  4894 ;;		None
  4895 ;; Return value:  Size  Location     Type
  4896 ;;                  1    wreg      void 
  4897 ;; Registers used:
  4898 ;;		wreg, status,2
  4899 ;; Tracked objects:
  4900 ;;		On entry : 0/0
  4901 ;;		On exit  : 0/0
  4902 ;;		Unchanged: 0/0
  4903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4904 ;;      Params:         0       0       0       0       0       0       0
  4905 ;;      Locals:         0       0       0       0       0       0       0
  4906 ;;      Temps:          0       0       0       0       0       0       0
  4907 ;;      Totals:         0       0       0       0       0       0       0
  4908 ;;Total ram usage:        0 bytes
  4909 ;; Hardware stack levels used:    1
  4910 ;; Hardware stack levels required when called:    1
  4911 ;; This function calls:
  4912 ;;		Nothing
  4913 ;; This function is called by:
  4914 ;;		_main
  4915 ;; This function uses a non-reentrant model
  4916 ;;
  4917                           
  4918                           	psect	text16
  4919  00280C                     __ptext16:
  4920                           	callstack 0
  4921  00280C                     _init_timer_0:
  4922                           	callstack 0
  4923  00280C  FFFF               	dw	65535	; assembler added errata NOP
  4924  00280E                     
  4925                           ;timer.c: 6:     T0CON = 0;
  4926  00280E  0E00               	movlw	0
  4927  002810  6ED5               	movwf	213,c	;volatile
  4928                           
  4929                           ;timer.c: 8:     TMR0L = 0x69;
  4930  002812  0E69               	movlw	105
  4931  002814  6ED6               	movwf	214,c	;volatile
  4932                           
  4933                           ;timer.c: 9:     TMR0H = 0x67;
  4934  002816  0E67               	movlw	103
  4935  002818  6ED7               	movwf	215,c	;volatile
  4936  00281A                     
  4937                           ;timer.c: 10:     INTCONbits.TMR0IE = 1;
  4938  00281A  8AF2               	bsf	242,5,c	;volatile
  4939  00281C                     
  4940                           ;timer.c: 11:     T0CONbits.T08BIT = 0;
  4941  00281C  9CD5               	bcf	213,6,c	;volatile
  4942  00281E                     
  4943                           ;timer.c: 12:     T0CONbits.T0CS = 0;
  4944  00281E  9AD5               	bcf	213,5,c	;volatile
  4945  002820                     
  4946                           ;timer.c: 13:     T0CONbits.PSA = 0;
  4947  002820  96D5               	bcf	213,3,c	;volatile
  4948  002822                     
  4949                           ;timer.c: 14:     T0CONbits.T0PS0 = 0;
  4950  002822  90D5               	bcf	213,0,c	;volatile
  4951  002824                     
  4952                           ;timer.c: 15:     T0CONbits.T0PS1 = 1;
  4953  002824  82D5               	bsf	213,1,c	;volatile
  4954  002826                     
  4955                           ;timer.c: 16:     T0CONbits.T0PS2 = 1;
  4956  002826  84D5               	bsf	213,2,c	;volatile
  4957  002828                     
  4958                           ;timer.c: 17:     T0CONbits.TMR0ON = 1;
  4959  002828  8ED5               	bsf	213,7,c	;volatile
  4960  00282A  0012               	return		;funcret
  4961  00282C  FFFF               	dw	65535	; errata NOP
  4962  00282E                     __end_of_init_timer_0:
  4963                           	callstack 0
  4964                           
  4965 ;; *************** function _init_stepper *****************
  4966 ;; Defined at:
  4967 ;;		line 5 in file "stepper_motor.c"
  4968 ;; Parameters:    Size  Location     Type
  4969 ;;  stepper_moto    2    0[COMRAM] PTR struct .
  4970 ;;		 -> joint_dilutor_stepper(12), end_effector_stepper(12), joint_stepper(12), 
  4971 ;;  current_coil    2    2[COMRAM] int 
  4972 ;;  step_counter    2    4[COMRAM] int 
  4973 ;;  direction       2    6[COMRAM] int 
  4974 ;;  hex_coil_reg    2    8[COMRAM] PTR unsigned char 
  4975 ;;		 -> hex_end_effector_values(4), hex_joint_values(4), 
  4976 ;;  register_nam    2   10[COMRAM] PTR volatile unsigned ch
  4977 ;;		 -> LATC(1), LATB(1), 
  4978 ;; Auto vars:     Size  Location     Type
  4979 ;;  i               2   14[COMRAM] int 
  4980 ;; Return value:  Size  Location     Type
  4981 ;;                  1    wreg      void 
  4982 ;; Registers used:
  4983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4984 ;; Tracked objects:
  4985 ;;		On entry : 0/0
  4986 ;;		On exit  : 0/0
  4987 ;;		Unchanged: 0/0
  4988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4989 ;;      Params:        12       0       0       0       0       0       0
  4990 ;;      Locals:         2       0       0       0       0       0       0
  4991 ;;      Temps:          2       0       0       0       0       0       0
  4992 ;;      Totals:        16       0       0       0       0       0       0
  4993 ;;Total ram usage:       16 bytes
  4994 ;; Hardware stack levels used:    1
  4995 ;; Hardware stack levels required when called:    1
  4996 ;; This function calls:
  4997 ;;		Nothing
  4998 ;; This function is called by:
  4999 ;;		_main
  5000 ;; This function uses a non-reentrant model
  5001 ;;
  5002                           
  5003                           	psect	text17
  5004  0021F2                     __ptext17:
  5005                           	callstack 0
  5006  0021F2                     _init_stepper:
  5007                           	callstack 0
  5008  0021F2  FFFF               	dw	65535	; assembler added errata NOP
  5009  0021F4                     
  5010                           ;stepper_motor.c: 6:     for (int i = 0; i < 4; i++) {
  5011  0021F4  0E00               	movlw	0
  5012  0021F6  6E10               	movwf	(init_stepper@i+1)^0,c
  5013  0021F8  0E00               	movlw	0
  5014  0021FA  6E0F               	movwf	init_stepper@i^0,c
  5015  0021FC                     l2848:
  5016  0021FC  FFFF               	dw	65535	; assembler added errata NOP
  5017                           
  5018                           ;stepper_motor.c: 7:        stepper_motor -> hex_coil_register_values[i] = hex_coil_regi
      +                          ster_values[i];
  5019  0021FE  500F               	movf	init_stepper@i^0,w,c
  5020  002200  2409               	addwf	init_stepper@hex_coil_register_values^0,w,c
  5021  002202  6ED9               	movwf	fsr2l,c
  5022  002204  5010               	movf	(init_stepper@i+1)^0,w,c
  5023  002206  200A               	addwfc	(init_stepper@hex_coil_register_values+1)^0,w,c
  5024  002208  6EDA               	movwf	fsr2h,c
  5025  00220A  500F               	movf	init_stepper@i^0,w,c
  5026  00220C  2401               	addwf	init_stepper@stepper_motor^0,w,c
  5027  00220E  6E0D               	movwf	??_init_stepper^0,c
  5028  002210  5010               	movf	(init_stepper@i+1)^0,w,c
  5029  002212  2002               	addwfc	(init_stepper@stepper_motor+1)^0,w,c
  5030  002214  6E0E               	movwf	(??_init_stepper+1)^0,c
  5031  002216  0E06               	movlw	6
  5032  002218  240D               	addwf	??_init_stepper^0,w,c
  5033  00221A  6EE1               	movwf	fsr1l,c
  5034  00221C  0E00               	movlw	0
  5035  00221E  200E               	addwfc	(??_init_stepper+1)^0,w,c
  5036  002220  6EE2               	movwf	fsr1h,c
  5037  002222  CFDF FFE7          	movff	indf2,indf1
  5038  002226                     
  5039                           ;stepper_motor.c: 8:     }
  5040  002226  4A0F               	infsnz	init_stepper@i^0,f,c
  5041  002228  2A10               	incf	(init_stepper@i+1)^0,f,c
  5042  00222A  BE10               	btfsc	(init_stepper@i+1)^0,7,c
  5043  00222C  EF21  F011         	goto	u2771
  5044  002230  5010               	movf	(init_stepper@i+1)^0,w,c
  5045  002232  E10A               	bnz	u2770
  5046  002234  0E04               	movlw	4
  5047  002236  5C0F               	subwf	init_stepper@i^0,w,c
  5048  002238  A0D8               	btfss	status,0,c
  5049  00223A  EF21  F011         	goto	u2771
  5050  00223E  EF24  F011         	goto	u2770
  5051  002242                     u2771:
  5052  002242  FFFF               	dw	65535	; assembler added errata NOP
  5053  002244  EFFE  F010         	goto	l2848
  5054  002248                     u2770:
  5055  002248  FFFF               	dw	65535	; assembler added errata NOP
  5056  00224A                     
  5057                           ;stepper_motor.c: 9:     stepper_motor -> current_coil = current_coil;
  5058  00224A  C001  FFD9         	movff	init_stepper@stepper_motor,fsr2l
  5059  00224E  C002  FFDA         	movff	init_stepper@stepper_motor+1,fsr2h
  5060  002252  C003  FFDE         	movff	init_stepper@current_coil,postinc2
  5061  002256  C004  FFDD         	movff	init_stepper@current_coil+1,postdec2
  5062  00225A                     
  5063                           ;stepper_motor.c: 10:     stepper_motor -> step_counter = step_counter;
  5064  00225A  EE20 F002          	lfsr	2,2
  5065  00225E  5001               	movf	init_stepper@stepper_motor^0,w,c
  5066  002260  26D9               	addwf	fsr2l,f,c
  5067  002262  5002               	movf	(init_stepper@stepper_motor+1)^0,w,c
  5068  002264  22DA               	addwfc	fsr2h,f,c
  5069  002266  C005  FFDE         	movff	init_stepper@step_counter,postinc2
  5070  00226A  C006  FFDD         	movff	init_stepper@step_counter+1,postdec2
  5071  00226E                     
  5072                           ;stepper_motor.c: 11:     stepper_motor -> direction = direction;
  5073  00226E  EE20 F004          	lfsr	2,4
  5074  002272  5001               	movf	init_stepper@stepper_motor^0,w,c
  5075  002274  26D9               	addwf	fsr2l,f,c
  5076  002276  5002               	movf	(init_stepper@stepper_motor+1)^0,w,c
  5077  002278  22DA               	addwfc	fsr2h,f,c
  5078  00227A  C007  FFDE         	movff	init_stepper@direction,postinc2
  5079  00227E  C008  FFDD         	movff	init_stepper@direction+1,postdec2
  5080  002282                     
  5081                           ;stepper_motor.c: 12:     stepper_motor -> register_name = register_name;
  5082  002282  EE20 F00A          	lfsr	2,10
  5083  002286  5001               	movf	init_stepper@stepper_motor^0,w,c
  5084  002288  26D9               	addwf	fsr2l,f,c
  5085  00228A  5002               	movf	(init_stepper@stepper_motor+1)^0,w,c
  5086  00228C  22DA               	addwfc	fsr2h,f,c
  5087  00228E  C00B  FFDE         	movff	init_stepper@register_name,postinc2
  5088  002292  C00C  FFDD         	movff	init_stepper@register_name+1,postdec2
  5089  002296  0012               	return		;funcret
  5090  002298  FFFF               	dw	65535	; errata NOP
  5091  00229A                     __end_of_init_stepper:
  5092                           	callstack 0
  5093                           
  5094 ;; *************** function _init_interrupts *****************
  5095 ;; Defined at:
  5096 ;;		line 80 in file "init_PIC.c"
  5097 ;; Parameters:    Size  Location     Type
  5098 ;;		None
  5099 ;; Auto vars:     Size  Location     Type
  5100 ;;		None
  5101 ;; Return value:  Size  Location     Type
  5102 ;;                  1    wreg      void 
  5103 ;; Registers used:
  5104 ;;		None
  5105 ;; Tracked objects:
  5106 ;;		On entry : 0/0
  5107 ;;		On exit  : 0/0
  5108 ;;		Unchanged: 0/0
  5109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5110 ;;      Params:         0       0       0       0       0       0       0
  5111 ;;      Locals:         0       0       0       0       0       0       0
  5112 ;;      Temps:          0       0       0       0       0       0       0
  5113 ;;      Totals:         0       0       0       0       0       0       0
  5114 ;;Total ram usage:        0 bytes
  5115 ;; Hardware stack levels used:    1
  5116 ;; Hardware stack levels required when called:    1
  5117 ;; This function calls:
  5118 ;;		Nothing
  5119 ;; This function is called by:
  5120 ;;		_main
  5121 ;; This function uses a non-reentrant model
  5122 ;;
  5123                           
  5124                           	psect	text18
  5125  0028B4                     __ptext18:
  5126                           	callstack 0
  5127  0028B4                     _init_interrupts:
  5128                           	callstack 0
  5129  0028B4  FFFF               	dw	65535	; assembler added errata NOP
  5130  0028B6                     
  5131                           ;init_PIC.c: 82:     PIR1bits.RCIF = 0;
  5132  0028B6  9A9E               	bcf	158,5,c	;volatile
  5133                           
  5134                           ;init_PIC.c: 83:     PIE1bits.RCIE = 1;
  5135  0028B8  8A9D               	bsf	157,5,c	;volatile
  5136                           
  5137                           ;init_PIC.c: 84:     INTCONbits.PEIE = 1;
  5138  0028BA  8CF2               	bsf	242,6,c	;volatile
  5139  0028BC  0012               	return		;funcret
  5140  0028BE  FFFF               	dw	65535	; errata NOP
  5141  0028C0                     __end_of_init_interrupts:
  5142                           	callstack 0
  5143                           
  5144 ;; *************** function _init_USART *****************
  5145 ;; Defined at:
  5146 ;;		line 13 in file "serial_rs232.c"
  5147 ;; Parameters:    Size  Location     Type
  5148 ;;		None
  5149 ;; Auto vars:     Size  Location     Type
  5150 ;;		None
  5151 ;; Return value:  Size  Location     Type
  5152 ;;                  1    wreg      void 
  5153 ;; Registers used:
  5154 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5155 ;; Tracked objects:
  5156 ;;		On entry : 0/0
  5157 ;;		On exit  : 0/0
  5158 ;;		Unchanged: 0/0
  5159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5160 ;;      Params:         0       0       0       0       0       0       0
  5161 ;;      Locals:         0       0       0       0       0       0       0
  5162 ;;      Temps:          0       0       0       0       0       0       0
  5163 ;;      Totals:         0       0       0       0       0       0       0
  5164 ;;Total ram usage:        0 bytes
  5165 ;; Hardware stack levels used:    1
  5166 ;; Hardware stack levels required when called:    4
  5167 ;; This function calls:
  5168 ;;		___fltol
  5169 ;;		_roundf
  5170 ;; This function is called by:
  5171 ;;		_main
  5172 ;; This function uses a non-reentrant model
  5173 ;;
  5174                           
  5175                           	psect	text19
  5176  0026C6                     __ptext19:
  5177                           	callstack 0
  5178  0026C6                     _init_USART:
  5179                           	callstack 0
  5180  0026C6  FFFF               	dw	65535	; assembler added errata NOP
  5181  0026C8                     
  5182                           ;serial_rs232.c: 24:     SPBRG = roundf(((fosc / desired_baudrate) / 16) - 1);
  5183  0026C8  0E55               	movlw	85
  5184  0026CA  6E4C               	movwf	roundf@x^0,c
  5185  0026CC  0E55               	movlw	85
  5186  0026CE  6E4D               	movwf	(roundf@x+1)^0,c
  5187  0026D0  0EC8               	movlw	200
  5188  0026D2  6E4E               	movwf	(roundf@x+2)^0,c
  5189  0026D4  0E41               	movlw	65
  5190  0026D6  6E4F               	movwf	(roundf@x+3)^0,c
  5191  0026D8  EC76  F00A         	call	_roundf	;wreg free
  5192  0026DC  C04C  F034         	movff	?_roundf,___fltol@f1
  5193  0026E0  C04D  F035         	movff	?_roundf+1,___fltol@f1+1
  5194  0026E4  C04E  F036         	movff	?_roundf+2,___fltol@f1+2
  5195  0026E8  C04F  F037         	movff	?_roundf+3,___fltol@f1+3
  5196  0026EC  EC1C  F00E         	call	___fltol	;wreg free
  5197  0026F0  5034               	movf	?___fltol^0,w,c
  5198  0026F2  6EAF               	movwf	175,c	;volatile
  5199  0026F4                     
  5200                           ;serial_rs232.c: 28:     TXSTAbits.TX9 = 0;
  5201  0026F4  9CAC               	bcf	172,6,c	;volatile
  5202  0026F6                     
  5203                           ;serial_rs232.c: 29:     TXSTAbits.TXEN = 1;
  5204  0026F6  8AAC               	bsf	172,5,c	;volatile
  5205  0026F8                     
  5206                           ;serial_rs232.c: 30:     TXSTAbits.SYNC =0;
  5207  0026F8  98AC               	bcf	172,4,c	;volatile
  5208  0026FA                     
  5209                           ;serial_rs232.c: 31:     TXSTAbits.BRGH = 1;
  5210  0026FA  84AC               	bsf	172,2,c	;volatile
  5211  0026FC                     
  5212                           ;serial_rs232.c: 33:     RCSTAbits.SPEN = 1;
  5213  0026FC  8EAB               	bsf	171,7,c	;volatile
  5214  0026FE                     
  5215                           ;serial_rs232.c: 34:     RCSTAbits.RX9 = 0;
  5216  0026FE  9CAB               	bcf	171,6,c	;volatile
  5217  002700                     
  5218                           ;serial_rs232.c: 35:     RCSTAbits.CREN = 1;
  5219  002700  88AB               	bsf	171,4,c	;volatile
  5220  002702  0012               	return		;funcret
  5221  002704  FFFF               	dw	65535	; errata NOP
  5222  002706                     __end_of_init_USART:
  5223                           	callstack 0
  5224                           
  5225 ;; *************** function _roundf *****************
  5226 ;; Defined at:
  5227 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\roundf.c"
  5228 ;; Parameters:    Size  Location     Type
  5229 ;;  x               4   75[COMRAM] float 
  5230 ;; Auto vars:     Size  Location     Type
  5231 ;;  y               4   97[COMRAM] float 
  5232 ;;  u               4   93[COMRAM] struct .
  5233 ;;  e               2   87[COMRAM] int 
  5234 ;; Return value:  Size  Location     Type
  5235 ;;                  4   75[COMRAM] float 
  5236 ;; Registers used:
  5237 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5238 ;; Tracked objects:
  5239 ;;		On entry : 0/0
  5240 ;;		On exit  : 0/0
  5241 ;;		Unchanged: 0/0
  5242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5243 ;;      Params:         4       0       0       0       0       0       0
  5244 ;;      Locals:        18       0       0       0       0       0       0
  5245 ;;      Temps:          4       0       0       0       0       0       0
  5246 ;;      Totals:        26       0       0       0       0       0       0
  5247 ;;Total ram usage:       26 bytes
  5248 ;; Hardware stack levels used:    1
  5249 ;; Hardware stack levels required when called:    3
  5250 ;; This function calls:
  5251 ;;		___fladd
  5252 ;;		___flge
  5253 ;;		___flmul
  5254 ;;		___flneg
  5255 ;;		___flsub
  5256 ;; This function is called by:
  5257 ;;		_init_USART
  5258 ;; This function uses a non-reentrant model
  5259 ;;
  5260                           
  5261                           	psect	text20
  5262  0014EC                     __ptext20:
  5263                           	callstack 0
  5264  0014EC                     _roundf:
  5265                           	callstack 0
  5266  0014EC  FFFF               	dw	65535	; assembler added errata NOP
  5267  0014EE  C080  F05E         	movff	roundf@F525,roundf@u
  5268  0014F2  C081  F05F         	movff	roundf@F525+1,roundf@u+1
  5269  0014F6  C082  F060         	movff	roundf@F525+2,roundf@u+2
  5270  0014FA  C083  F061         	movff	roundf@F525+3,roundf@u+3
  5271  0014FE  C04C  F05E         	movff	roundf@x,roundf@u
  5272  001502  C04D  F05F         	movff	roundf@x+1,roundf@u+1
  5273  001506  C04E  F060         	movff	roundf@x+2,roundf@u+2
  5274  00150A  C04F  F061         	movff	roundf@x+3,roundf@u+3
  5275  00150E  C05E  F050         	movff	roundf@u,??_roundf
  5276  001512  C05F  F051         	movff	roundf@u+1,??_roundf+1
  5277  001516  C060  F052         	movff	roundf@u+2,??_roundf+2
  5278  00151A  C061  F053         	movff	roundf@u+3,??_roundf+3
  5279  00151E  0E18               	movlw	24
  5280  001520  EF98  F00A         	goto	u2560
  5281  001524                     u2565:
  5282  001524  FFFF               	dw	65535	; assembler added errata NOP
  5283  001526  90D8               	bcf	status,0,c
  5284  001528  3253               	rrcf	(??_roundf+3)^0,f,c
  5285  00152A  3252               	rrcf	(??_roundf+2)^0,f,c
  5286  00152C  3251               	rrcf	(??_roundf+1)^0,f,c
  5287  00152E  3250               	rrcf	??_roundf^0,f,c
  5288  001530                     u2560:
  5289  001530  FFFF               	dw	65535	; assembler added errata NOP
  5290  001532  2EE8               	decfsz	wreg,f,c
  5291  001534  EF92  F00A         	goto	u2565
  5292  001538  5050               	movf	??_roundf^0,w,c
  5293  00153A  6E58               	movwf	roundf@e^0,c
  5294  00153C  6A59               	clrf	(roundf@e+1)^0,c
  5295  00153E  BE59               	btfsc	(roundf@e+1)^0,7,c
  5296  001540  EFAB  F00A         	goto	u2571
  5297  001544  5059               	movf	(roundf@e+1)^0,w,c
  5298  001546  E10A               	bnz	u2570
  5299  001548  0E96               	movlw	150
  5300  00154A  5C58               	subwf	roundf@e^0,w,c
  5301  00154C  A0D8               	btfss	status,0,c
  5302  00154E  EFAB  F00A         	goto	u2571
  5303  001552  EFAE  F00A         	goto	u2570
  5304  001556                     u2571:
  5305  001556  FFFF               	dw	65535	; assembler added errata NOP
  5306  001558  EFB9  F00A         	goto	l2684
  5307  00155C                     u2570:
  5308  00155C  FFFF               	dw	65535	; assembler added errata NOP
  5309  00155E  C04C  F04C         	movff	roundf@x,?_roundf
  5310  001562  C04D  F04D         	movff	roundf@x+1,?_roundf+1
  5311  001566  C04E  F04E         	movff	roundf@x+2,?_roundf+2
  5312  00156A  C04F  F04F         	movff	roundf@x+3,?_roundf+3
  5313  00156E  EF66  F00C         	goto	l1085
  5314  001572                     l2684:
  5315  001572  FFFF               	dw	65535	; assembler added errata NOP
  5316  001574  C05E  F050         	movff	roundf@u,??_roundf
  5317  001578  C05F  F051         	movff	roundf@u+1,??_roundf+1
  5318  00157C  C060  F052         	movff	roundf@u+2,??_roundf+2
  5319  001580  C061  F053         	movff	roundf@u+3,??_roundf+3
  5320  001584  0E20               	movlw	32
  5321  001586  EFCB  F00A         	goto	u2580
  5322  00158A                     u2585:
  5323  00158A  FFFF               	dw	65535	; assembler added errata NOP
  5324  00158C  90D8               	bcf	status,0,c
  5325  00158E  3253               	rrcf	(??_roundf+3)^0,f,c
  5326  001590  3252               	rrcf	(??_roundf+2)^0,f,c
  5327  001592  3251               	rrcf	(??_roundf+1)^0,f,c
  5328  001594  3250               	rrcf	??_roundf^0,f,c
  5329  001596                     u2580:
  5330  001596  FFFF               	dw	65535	; assembler added errata NOP
  5331  001598  2EE8               	decfsz	wreg,f,c
  5332  00159A  EFC5  F00A         	goto	u2585
  5333  00159E  5050               	movf	??_roundf^0,w,c
  5334  0015A0  1051               	iorwf	(??_roundf+1)^0,w,c
  5335  0015A2  1052               	iorwf	(??_roundf+2)^0,w,c
  5336  0015A4  1053               	iorwf	(??_roundf+3)^0,w,c
  5337  0015A6  B4D8               	btfsc	status,2,c
  5338  0015A8  EFD8  F00A         	goto	u2591
  5339  0015AC  EFDB  F00A         	goto	u2590
  5340  0015B0                     u2591:
  5341  0015B0  FFFF               	dw	65535	; assembler added errata NOP
  5342  0015B2  EFEE  F00A         	goto	l2688
  5343  0015B6                     u2590:
  5344  0015B6  FFFF               	dw	65535	; assembler added errata NOP
  5345  0015B8  C04C  F001         	movff	roundf@x,___flneg@f1
  5346  0015BC  C04D  F002         	movff	roundf@x+1,___flneg@f1+1
  5347  0015C0  C04E  F003         	movff	roundf@x+2,___flneg@f1+2
  5348  0015C4  C04F  F004         	movff	roundf@x+3,___flneg@f1+3
  5349  0015C8  EC42  F013         	call	___flneg	;wreg free
  5350  0015CC  C001  F04C         	movff	?___flneg,roundf@x
  5351  0015D0  C002  F04D         	movff	?___flneg+1,roundf@x+1
  5352  0015D4  C003  F04E         	movff	?___flneg+2,roundf@x+2
  5353  0015D8  C004  F04F         	movff	?___flneg+3,roundf@x+3
  5354  0015DC                     l2688:
  5355  0015DC  FFFF               	dw	65535	; assembler added errata NOP
  5356  0015DE  BE59               	btfsc	(roundf@e+1)^0,7,c
  5357  0015E0  EFFE  F00A         	goto	u2600
  5358  0015E4  5059               	movf	(roundf@e+1)^0,w,c
  5359  0015E6  E107               	bnz	u2601
  5360  0015E8  0E7E               	movlw	126
  5361  0015EA  5C58               	subwf	roundf@e^0,w,c
  5362  0015EC  B0D8               	btfsc	status,0,c
  5363  0015EE  EFFB  F00A         	goto	u2601
  5364  0015F2  EFFE  F00A         	goto	u2600
  5365  0015F6                     u2601:
  5366  0015F6  FFFF               	dw	65535	; assembler added errata NOP
  5367  0015F8  EF1B  F00B         	goto	l2694
  5368  0015FC                     u2600:
  5369  0015FC  FFFF               	dw	65535	; assembler added errata NOP
  5370  0015FE  C05E  F01B         	movff	roundf@u,___flmul@b
  5371  001602  C05F  F01C         	movff	roundf@u+1,___flmul@b+1
  5372  001606  C060  F01D         	movff	roundf@u+2,___flmul@b+2
  5373  00160A  C061  F01E         	movff	roundf@u+3,___flmul@b+3
  5374  00160E  0E00               	movlw	0
  5375  001610  6E1F               	movwf	___flmul@a^0,c
  5376  001612  0E00               	movlw	0
  5377  001614  6E20               	movwf	(___flmul@a+1)^0,c
  5378  001616  0E00               	movlw	0
  5379  001618  6E21               	movwf	(___flmul@a+2)^0,c
  5380  00161A  0E00               	movlw	0
  5381  00161C  6E22               	movwf	(___flmul@a+3)^0,c
  5382  00161E  EC24  F008         	call	___flmul	;wreg free
  5383  001622  C01B  F04C         	movff	?___flmul,?_roundf
  5384  001626  C01C  F04D         	movff	?___flmul+1,?_roundf+1
  5385  00162A  C01D  F04E         	movff	?___flmul+2,?_roundf+2
  5386  00162E  C01E  F04F         	movff	?___flmul+3,?_roundf+3
  5387  001632  EF66  F00C         	goto	l1085
  5388  001636                     l2694:
  5389  001636  FFFF               	dw	65535	; assembler added errata NOP
  5390  001638  0E00               	movlw	0
  5391  00163A  6E05               	movwf	___fladd@a^0,c
  5392  00163C  0E00               	movlw	0
  5393  00163E  6E06               	movwf	(___fladd@a+1)^0,c
  5394  001640  0E00               	movlw	0
  5395  001642  6E07               	movwf	(___fladd@a+2)^0,c
  5396  001644  0E4B               	movlw	75
  5397  001646  6E08               	movwf	(___fladd@a+3)^0,c
  5398  001648  C04C  F001         	movff	roundf@x,___fladd@b
  5399  00164C  C04D  F002         	movff	roundf@x+1,___fladd@b+1
  5400  001650  C04E  F003         	movff	roundf@x+2,___fladd@b+2
  5401  001654  C04F  F004         	movff	roundf@x+3,___fladd@b+3
  5402  001658  EC50  F005         	call	___fladd	;wreg free
  5403  00165C  C001  F05A         	movff	?___fladd,_roundf$1664
  5404  001660  C002  F05B         	movff	?___fladd+1,_roundf$1664+1
  5405  001664  C003  F05C         	movff	?___fladd+2,_roundf$1664+2
  5406  001668  C004  F05D         	movff	?___fladd+3,_roundf$1664+3
  5407  00166C  0E00               	movlw	0
  5408  00166E  6E05               	movwf	___fladd@a^0,c
  5409  001670  0E00               	movlw	0
  5410  001672  6E06               	movwf	(___fladd@a+1)^0,c
  5411  001674  0E00               	movlw	0
  5412  001676  6E07               	movwf	(___fladd@a+2)^0,c
  5413  001678  0ECB               	movlw	203
  5414  00167A  6E08               	movwf	(___fladd@a+3)^0,c
  5415  00167C  C05A  F001         	movff	_roundf$1664,___fladd@b
  5416  001680  C05B  F002         	movff	_roundf$1664+1,___fladd@b+1
  5417  001684  C05C  F003         	movff	_roundf$1664+2,___fladd@b+2
  5418  001688  C05D  F004         	movff	_roundf$1664+3,___fladd@b+3
  5419  00168C  EC50  F005         	call	___fladd	;wreg free
  5420  001690  C001  F054         	movff	?___fladd,_roundf$1665
  5421  001694  C002  F055         	movff	?___fladd+1,_roundf$1665+1
  5422  001698  C003  F056         	movff	?___fladd+2,_roundf$1665+2
  5423  00169C  C004  F057         	movff	?___fladd+3,_roundf$1665+3
  5424  0016A0  C054  F011         	movff	_roundf$1665,___flsub@b
  5425  0016A4  C055  F012         	movff	_roundf$1665+1,___flsub@b+1
  5426  0016A8  C056  F013         	movff	_roundf$1665+2,___flsub@b+2
  5427  0016AC  C057  F014         	movff	_roundf$1665+3,___flsub@b+3
  5428  0016B0  C04C  F015         	movff	roundf@x,___flsub@a
  5429  0016B4  C04D  F016         	movff	roundf@x+1,___flsub@a+1
  5430  0016B8  C04E  F017         	movff	roundf@x+2,___flsub@a+2
  5431  0016BC  C04F  F018         	movff	roundf@x+3,___flsub@a+3
  5432  0016C0  ECFA  F012         	call	___flsub	;wreg free
  5433  0016C4  C011  F062         	movff	?___flsub,roundf@y
  5434  0016C8  C012  F063         	movff	?___flsub+1,roundf@y+1
  5435  0016CC  C013  F064         	movff	?___flsub+2,roundf@y+2
  5436  0016D0  C014  F065         	movff	?___flsub+3,roundf@y+3
  5437  0016D4  0E00               	movlw	0
  5438  0016D6  6E40               	movwf	___flge@ff1^0,c
  5439  0016D8  0E00               	movlw	0
  5440  0016DA  6E41               	movwf	(___flge@ff1+1)^0,c
  5441  0016DC  0E00               	movlw	0
  5442  0016DE  6E42               	movwf	(___flge@ff1+2)^0,c
  5443  0016E0  0E3F               	movlw	63
  5444  0016E2  6E43               	movwf	(___flge@ff1+3)^0,c
  5445  0016E4  C062  F044         	movff	roundf@y,___flge@ff2
  5446  0016E8  C063  F045         	movff	roundf@y+1,___flge@ff2+1
  5447  0016EC  C064  F046         	movff	roundf@y+2,___flge@ff2+2
  5448  0016F0  C065  F047         	movff	roundf@y+3,___flge@ff2+3
  5449  0016F4  ECB7  F00E         	call	___flge	;wreg free
  5450  0016F8  B0D8               	btfsc	status,0,c
  5451  0016FA  EF81  F00B         	goto	u2611
  5452  0016FE  EF84  F00B         	goto	u2610
  5453  001702                     u2611:
  5454  001702  FFFF               	dw	65535	; assembler added errata NOP
  5455  001704  EFBB  F00B         	goto	l2698
  5456  001708                     u2610:
  5457  001708  FFFF               	dw	65535	; assembler added errata NOP
  5458  00170A  C04C  F005         	movff	roundf@x,___fladd@a
  5459  00170E  C04D  F006         	movff	roundf@x+1,___fladd@a+1
  5460  001712  C04E  F007         	movff	roundf@x+2,___fladd@a+2
  5461  001716  C04F  F008         	movff	roundf@x+3,___fladd@a+3
  5462  00171A  C062  F001         	movff	roundf@y,___fladd@b
  5463  00171E  C063  F002         	movff	roundf@y+1,___fladd@b+1
  5464  001722  C064  F003         	movff	roundf@y+2,___fladd@b+2
  5465  001726  C065  F004         	movff	roundf@y+3,___fladd@b+3
  5466  00172A  EC50  F005         	call	___fladd	;wreg free
  5467  00172E  C001  F05A         	movff	?___fladd,_roundf$1664
  5468  001732  C002  F05B         	movff	?___fladd+1,_roundf$1664+1
  5469  001736  C003  F05C         	movff	?___fladd+2,_roundf$1664+2
  5470  00173A  C004  F05D         	movff	?___fladd+3,_roundf$1664+3
  5471  00173E  C05A  F001         	movff	_roundf$1664,___fladd@b
  5472  001742  C05B  F002         	movff	_roundf$1664+1,___fladd@b+1
  5473  001746  C05C  F003         	movff	_roundf$1664+2,___fladd@b+2
  5474  00174A  C05D  F004         	movff	_roundf$1664+3,___fladd@b+3
  5475  00174E  0E00               	movlw	0
  5476  001750  6E05               	movwf	___fladd@a^0,c
  5477  001752  0E00               	movlw	0
  5478  001754  6E06               	movwf	(___fladd@a+1)^0,c
  5479  001756  0E80               	movlw	128
  5480  001758  6E07               	movwf	(___fladd@a+2)^0,c
  5481  00175A  0EBF               	movlw	191
  5482  00175C  6E08               	movwf	(___fladd@a+3)^0,c
  5483  00175E  EC50  F005         	call	___fladd	;wreg free
  5484  001762  C001  F062         	movff	?___fladd,roundf@y
  5485  001766  C002  F063         	movff	?___fladd+1,roundf@y+1
  5486  00176A  C003  F064         	movff	?___fladd+2,roundf@y+2
  5487  00176E  C004  F065         	movff	?___fladd+3,roundf@y+3
  5488  001772  EF28  F00C         	goto	l2704
  5489  001776                     l2698:
  5490  001776  FFFF               	dw	65535	; assembler added errata NOP
  5491  001778  0E00               	movlw	0
  5492  00177A  6E40               	movwf	___flge@ff1^0,c
  5493  00177C  0E00               	movlw	0
  5494  00177E  6E41               	movwf	(___flge@ff1+1)^0,c
  5495  001780  0E00               	movlw	0
  5496  001782  6E42               	movwf	(___flge@ff1+2)^0,c
  5497  001784  0EBF               	movlw	191
  5498  001786  6E43               	movwf	(___flge@ff1+3)^0,c
  5499  001788  C062  F044         	movff	roundf@y,___flge@ff2
  5500  00178C  C063  F045         	movff	roundf@y+1,___flge@ff2+1
  5501  001790  C064  F046         	movff	roundf@y+2,___flge@ff2+2
  5502  001794  C065  F047         	movff	roundf@y+3,___flge@ff2+3
  5503  001798  ECB7  F00E         	call	___flge	;wreg free
  5504  00179C  A0D8               	btfss	status,0,c
  5505  00179E  EFD3  F00B         	goto	u2621
  5506  0017A2  EFD6  F00B         	goto	u2620
  5507  0017A6                     u2621:
  5508  0017A6  FFFF               	dw	65535	; assembler added errata NOP
  5509  0017A8  EF0D  F00C         	goto	l2702
  5510  0017AC                     u2620:
  5511  0017AC  FFFF               	dw	65535	; assembler added errata NOP
  5512  0017AE  C04C  F005         	movff	roundf@x,___fladd@a
  5513  0017B2  C04D  F006         	movff	roundf@x+1,___fladd@a+1
  5514  0017B6  C04E  F007         	movff	roundf@x+2,___fladd@a+2
  5515  0017BA  C04F  F008         	movff	roundf@x+3,___fladd@a+3
  5516  0017BE  C062  F001         	movff	roundf@y,___fladd@b
  5517  0017C2  C063  F002         	movff	roundf@y+1,___fladd@b+1
  5518  0017C6  C064  F003         	movff	roundf@y+2,___fladd@b+2
  5519  0017CA  C065  F004         	movff	roundf@y+3,___fladd@b+3
  5520  0017CE  EC50  F005         	call	___fladd	;wreg free
  5521  0017D2  C001  F05A         	movff	?___fladd,_roundf$1664
  5522  0017D6  C002  F05B         	movff	?___fladd+1,_roundf$1664+1
  5523  0017DA  C003  F05C         	movff	?___fladd+2,_roundf$1664+2
  5524  0017DE  C004  F05D         	movff	?___fladd+3,_roundf$1664+3
  5525  0017E2  C05A  F001         	movff	_roundf$1664,___fladd@b
  5526  0017E6  C05B  F002         	movff	_roundf$1664+1,___fladd@b+1
  5527  0017EA  C05C  F003         	movff	_roundf$1664+2,___fladd@b+2
  5528  0017EE  C05D  F004         	movff	_roundf$1664+3,___fladd@b+3
  5529  0017F2  0E00               	movlw	0
  5530  0017F4  6E05               	movwf	___fladd@a^0,c
  5531  0017F6  0E00               	movlw	0
  5532  0017F8  6E06               	movwf	(___fladd@a+1)^0,c
  5533  0017FA  0E80               	movlw	128
  5534  0017FC  6E07               	movwf	(___fladd@a+2)^0,c
  5535  0017FE  0E3F               	movlw	63
  5536  001800  6E08               	movwf	(___fladd@a+3)^0,c
  5537  001802  EC50  F005         	call	___fladd	;wreg free
  5538  001806  C001  F062         	movff	?___fladd,roundf@y
  5539  00180A  C002  F063         	movff	?___fladd+1,roundf@y+1
  5540  00180E  C003  F064         	movff	?___fladd+2,roundf@y+2
  5541  001812  C004  F065         	movff	?___fladd+3,roundf@y+3
  5542  001816  EF28  F00C         	goto	l2704
  5543  00181A                     l2702:
  5544  00181A  FFFF               	dw	65535	; assembler added errata NOP
  5545  00181C  C062  F001         	movff	roundf@y,___fladd@b
  5546  001820  C063  F002         	movff	roundf@y+1,___fladd@b+1
  5547  001824  C064  F003         	movff	roundf@y+2,___fladd@b+2
  5548  001828  C065  F004         	movff	roundf@y+3,___fladd@b+3
  5549  00182C  C04C  F005         	movff	roundf@x,___fladd@a
  5550  001830  C04D  F006         	movff	roundf@x+1,___fladd@a+1
  5551  001834  C04E  F007         	movff	roundf@x+2,___fladd@a+2
  5552  001838  C04F  F008         	movff	roundf@x+3,___fladd@a+3
  5553  00183C  EC50  F005         	call	___fladd	;wreg free
  5554  001840  C001  F062         	movff	?___fladd,roundf@y
  5555  001844  C002  F063         	movff	?___fladd+1,roundf@y+1
  5556  001848  C003  F064         	movff	?___fladd+2,roundf@y+2
  5557  00184C  C004  F065         	movff	?___fladd+3,roundf@y+3
  5558  001850                     l2704:
  5559  001850  FFFF               	dw	65535	; assembler added errata NOP
  5560  001852  C05E  F050         	movff	roundf@u,??_roundf
  5561  001856  C05F  F051         	movff	roundf@u+1,??_roundf+1
  5562  00185A  C060  F052         	movff	roundf@u+2,??_roundf+2
  5563  00185E  C061  F053         	movff	roundf@u+3,??_roundf+3
  5564  001862  0E20               	movlw	32
  5565  001864  EF3A  F00C         	goto	u2630
  5566  001868                     u2635:
  5567  001868  FFFF               	dw	65535	; assembler added errata NOP
  5568  00186A  90D8               	bcf	status,0,c
  5569  00186C  3253               	rrcf	(??_roundf+3)^0,f,c
  5570  00186E  3252               	rrcf	(??_roundf+2)^0,f,c
  5571  001870  3251               	rrcf	(??_roundf+1)^0,f,c
  5572  001872  3250               	rrcf	??_roundf^0,f,c
  5573  001874                     u2630:
  5574  001874  FFFF               	dw	65535	; assembler added errata NOP
  5575  001876  2EE8               	decfsz	wreg,f,c
  5576  001878  EF34  F00C         	goto	u2635
  5577  00187C  5050               	movf	??_roundf^0,w,c
  5578  00187E  1051               	iorwf	(??_roundf+1)^0,w,c
  5579  001880  1052               	iorwf	(??_roundf+2)^0,w,c
  5580  001882  1053               	iorwf	(??_roundf+3)^0,w,c
  5581  001884  B4D8               	btfsc	status,2,c
  5582  001886  EF47  F00C         	goto	u2641
  5583  00188A  EF4A  F00C         	goto	u2640
  5584  00188E                     u2641:
  5585  00188E  FFFF               	dw	65535	; assembler added errata NOP
  5586  001890  EF5D  F00C         	goto	l2708
  5587  001894                     u2640:
  5588  001894  FFFF               	dw	65535	; assembler added errata NOP
  5589  001896  C062  F001         	movff	roundf@y,___flneg@f1
  5590  00189A  C063  F002         	movff	roundf@y+1,___flneg@f1+1
  5591  00189E  C064  F003         	movff	roundf@y+2,___flneg@f1+2
  5592  0018A2  C065  F004         	movff	roundf@y+3,___flneg@f1+3
  5593  0018A6  EC42  F013         	call	___flneg	;wreg free
  5594  0018AA  C001  F062         	movff	?___flneg,roundf@y
  5595  0018AE  C002  F063         	movff	?___flneg+1,roundf@y+1
  5596  0018B2  C003  F064         	movff	?___flneg+2,roundf@y+2
  5597  0018B6  C004  F065         	movff	?___flneg+3,roundf@y+3
  5598  0018BA                     l2708:
  5599  0018BA  FFFF               	dw	65535	; assembler added errata NOP
  5600  0018BC  C062  F04C         	movff	roundf@y,?_roundf
  5601  0018C0  C063  F04D         	movff	roundf@y+1,?_roundf+1
  5602  0018C4  C064  F04E         	movff	roundf@y+2,?_roundf+2
  5603  0018C8  C065  F04F         	movff	roundf@y+3,?_roundf+3
  5604  0018CC                     l1085:
  5605  0018CC  FFFF               	dw	65535	; assembler added errata NOP
  5606  0018CE  0012               	return		;funcret
  5607  0018D0  FFFF               	dw	65535	; errata NOP
  5608  0018D2                     __end_of_roundf:
  5609                           	callstack 0
  5610                           
  5611 ;; *************** function ___flsub *****************
  5612 ;; Defined at:
  5613 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  5614 ;; Parameters:    Size  Location     Type
  5615 ;;  b               4   16[COMRAM] float 
  5616 ;;  a               4   20[COMRAM] float 
  5617 ;; Auto vars:     Size  Location     Type
  5618 ;;		None
  5619 ;; Return value:  Size  Location     Type
  5620 ;;                  4   16[COMRAM] float 
  5621 ;; Registers used:
  5622 ;;		wreg, status,2, status,0, cstack
  5623 ;; Tracked objects:
  5624 ;;		On entry : 0/0
  5625 ;;		On exit  : 0/0
  5626 ;;		Unchanged: 0/0
  5627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5628 ;;      Params:         8       0       0       0       0       0       0
  5629 ;;      Locals:         0       0       0       0       0       0       0
  5630 ;;      Temps:          0       0       0       0       0       0       0
  5631 ;;      Totals:         8       0       0       0       0       0       0
  5632 ;;Total ram usage:        8 bytes
  5633 ;; Hardware stack levels used:    1
  5634 ;; Hardware stack levels required when called:    2
  5635 ;; This function calls:
  5636 ;;		___fladd
  5637 ;; This function is called by:
  5638 ;;		_roundf
  5639 ;; This function uses a non-reentrant model
  5640 ;;
  5641                           
  5642                           	psect	text21
  5643  0025F4                     __ptext21:
  5644                           	callstack 0
  5645  0025F4                     ___flsub:
  5646                           	callstack 0
  5647  0025F4  FFFF               	dw	65535	; assembler added errata NOP
  5648  0025F6  0E00               	movlw	0
  5649  0025F8  1A15               	xorwf	___flsub@a^0,f,c
  5650  0025FA  0E00               	movlw	0
  5651  0025FC  1A16               	xorwf	(___flsub@a+1)^0,f,c
  5652  0025FE  0E00               	movlw	0
  5653  002600  1A17               	xorwf	(___flsub@a+2)^0,f,c
  5654  002602  0E80               	movlw	128
  5655  002604  1A18               	xorwf	(___flsub@a+3)^0,f,c
  5656  002606  C011  F001         	movff	___flsub@b,___fladd@b
  5657  00260A  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  5658  00260E  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  5659  002612  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  5660  002616  C015  F005         	movff	___flsub@a,___fladd@a
  5661  00261A  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  5662  00261E  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  5663  002622  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  5664  002626  EC50  F005         	call	___fladd	;wreg free
  5665  00262A  C001  F011         	movff	?___fladd,?___flsub
  5666  00262E  C002  F012         	movff	?___fladd+1,?___flsub+1
  5667  002632  C003  F013         	movff	?___fladd+2,?___flsub+2
  5668  002636  C004  F014         	movff	?___fladd+3,?___flsub+3
  5669  00263A  0012               	return		;funcret
  5670  00263C  FFFF               	dw	65535	; errata NOP
  5671  00263E                     __end_of___flsub:
  5672                           	callstack 0
  5673                           
  5674 ;; *************** function ___fladd *****************
  5675 ;; Defined at:
  5676 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  5677 ;; Parameters:    Size  Location     Type
  5678 ;;  b               4    0[COMRAM] float 
  5679 ;;  a               4    4[COMRAM] float 
  5680 ;; Auto vars:     Size  Location     Type
  5681 ;;  grs             1   15[COMRAM] unsigned char 
  5682 ;;  bexp            1   14[COMRAM] unsigned char 
  5683 ;;  aexp            1   13[COMRAM] unsigned char 
  5684 ;;  signs           1   12[COMRAM] unsigned char 
  5685 ;; Return value:  Size  Location     Type
  5686 ;;                  4    0[COMRAM] unsigned char 
  5687 ;; Registers used:
  5688 ;;		wreg, status,2, status,0
  5689 ;; Tracked objects:
  5690 ;;		On entry : 0/0
  5691 ;;		On exit  : 0/0
  5692 ;;		Unchanged: 0/0
  5693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5694 ;;      Params:         8       0       0       0       0       0       0
  5695 ;;      Locals:         4       0       0       0       0       0       0
  5696 ;;      Temps:          4       0       0       0       0       0       0
  5697 ;;      Totals:        16       0       0       0       0       0       0
  5698 ;;Total ram usage:       16 bytes
  5699 ;; Hardware stack levels used:    1
  5700 ;; Hardware stack levels required when called:    1
  5701 ;; This function calls:
  5702 ;;		Nothing
  5703 ;; This function is called by:
  5704 ;;		___flsub
  5705 ;;		_roundf
  5706 ;; This function uses a non-reentrant model
  5707 ;;
  5708                           
  5709                           	psect	text22
  5710  000AA0                     __ptext22:
  5711                           	callstack 0
  5712  000AA0                     ___fladd:
  5713                           	callstack 0
  5714  000AA0  FFFF               	dw	65535	; assembler added errata NOP
  5715  000AA2  5004               	movf	(___fladd@b+3)^0,w,c
  5716  000AA4  0B80               	andlw	128
  5717  000AA6  6E0D               	movwf	___fladd@signs^0,c
  5718  000AA8  5004               	movf	(___fladd@b+3)^0,w,c
  5719  000AAA  2404               	addwf	(___fladd@b+3)^0,w,c
  5720  000AAC  6E0F               	movwf	___fladd@bexp^0,c
  5721  000AAE  AE03               	btfss	(___fladd@b+2)^0,7,c
  5722  000AB0  EF5C  F005         	goto	u1751
  5723  000AB4  EF5F  F005         	goto	u1750
  5724  000AB8                     u1751:
  5725  000AB8  FFFF               	dw	65535	; assembler added errata NOP
  5726  000ABA  EF61  F005         	goto	l2212
  5727  000ABE                     u1750:
  5728  000ABE  FFFF               	dw	65535	; assembler added errata NOP
  5729  000AC0  800F               	bsf	___fladd@bexp^0,0,c
  5730  000AC2                     l2212:
  5731  000AC2  FFFF               	dw	65535	; assembler added errata NOP
  5732  000AC4  500F               	movf	___fladd@bexp^0,w,c
  5733  000AC6  B4D8               	btfsc	status,2,c
  5734  000AC8  EF68  F005         	goto	u1761
  5735  000ACC  EF6B  F005         	goto	u1760
  5736  000AD0                     u1761:
  5737  000AD0  FFFF               	dw	65535	; assembler added errata NOP
  5738  000AD2  EF84  F005         	goto	l2222
  5739  000AD6                     u1760:
  5740  000AD6  FFFF               	dw	65535	; assembler added errata NOP
  5741  000AD8  280F               	incf	___fladd@bexp^0,w,c
  5742  000ADA  A4D8               	btfss	status,2,c
  5743  000ADC  EF72  F005         	goto	u1771
  5744  000AE0  EF75  F005         	goto	u1770
  5745  000AE4                     u1771:
  5746  000AE4  FFFF               	dw	65535	; assembler added errata NOP
  5747  000AE6  EF7E  F005         	goto	l2218
  5748  000AEA                     u1770:
  5749  000AEA  FFFF               	dw	65535	; assembler added errata NOP
  5750  000AEC  0E00               	movlw	0
  5751  000AEE  6E01               	movwf	___fladd@b^0,c
  5752  000AF0  0E00               	movlw	0
  5753  000AF2  6E02               	movwf	(___fladd@b+1)^0,c
  5754  000AF4  0E00               	movlw	0
  5755  000AF6  6E03               	movwf	(___fladd@b+2)^0,c
  5756  000AF8  0E00               	movlw	0
  5757  000AFA  6E04               	movwf	(___fladd@b+3)^0,c
  5758  000AFC                     l2218:
  5759  000AFC  FFFF               	dw	65535	; assembler added errata NOP
  5760  000AFE  8E03               	bsf	(___fladd@b+2)^0,7,c
  5761  000B00  0E00               	movlw	0
  5762  000B02  6E04               	movwf	(___fladd@b+3)^0,c
  5763  000B04  EF8D  F005         	goto	l2224
  5764  000B08                     l2222:
  5765  000B08  FFFF               	dw	65535	; assembler added errata NOP
  5766  000B0A  0E00               	movlw	0
  5767  000B0C  6E01               	movwf	___fladd@b^0,c
  5768  000B0E  0E00               	movlw	0
  5769  000B10  6E02               	movwf	(___fladd@b+1)^0,c
  5770  000B12  0E00               	movlw	0
  5771  000B14  6E03               	movwf	(___fladd@b+2)^0,c
  5772  000B16  0E00               	movlw	0
  5773  000B18  6E04               	movwf	(___fladd@b+3)^0,c
  5774  000B1A                     l2224:
  5775  000B1A  FFFF               	dw	65535	; assembler added errata NOP
  5776  000B1C  5008               	movf	(___fladd@a+3)^0,w,c
  5777  000B1E  0B80               	andlw	128
  5778  000B20  6E0E               	movwf	___fladd@aexp^0,c
  5779  000B22  500D               	movf	___fladd@signs^0,w,c
  5780  000B24  180E               	xorwf	___fladd@aexp^0,w,c
  5781  000B26  B4D8               	btfsc	status,2,c
  5782  000B28  EF98  F005         	goto	u1781
  5783  000B2C  EF9B  F005         	goto	u1780
  5784  000B30                     u1781:
  5785  000B30  FFFF               	dw	65535	; assembler added errata NOP
  5786  000B32  EF9D  F005         	goto	l2230
  5787  000B36                     u1780:
  5788  000B36  FFFF               	dw	65535	; assembler added errata NOP
  5789  000B38  8C0D               	bsf	___fladd@signs^0,6,c
  5790  000B3A                     l2230:
  5791  000B3A  FFFF               	dw	65535	; assembler added errata NOP
  5792  000B3C  5008               	movf	(___fladd@a+3)^0,w,c
  5793  000B3E  2408               	addwf	(___fladd@a+3)^0,w,c
  5794  000B40  6E0E               	movwf	___fladd@aexp^0,c
  5795  000B42  AE07               	btfss	(___fladd@a+2)^0,7,c
  5796  000B44  EFA6  F005         	goto	u1791
  5797  000B48  EFA9  F005         	goto	u1790
  5798  000B4C                     u1791:
  5799  000B4C  FFFF               	dw	65535	; assembler added errata NOP
  5800  000B4E  EFAB  F005         	goto	l2236
  5801  000B52                     u1790:
  5802  000B52  FFFF               	dw	65535	; assembler added errata NOP
  5803  000B54  800E               	bsf	___fladd@aexp^0,0,c
  5804  000B56                     l2236:
  5805  000B56  FFFF               	dw	65535	; assembler added errata NOP
  5806  000B58  500E               	movf	___fladd@aexp^0,w,c
  5807  000B5A  B4D8               	btfsc	status,2,c
  5808  000B5C  EFB2  F005         	goto	u1801
  5809  000B60  EFB5  F005         	goto	u1800
  5810  000B64                     u1801:
  5811  000B64  FFFF               	dw	65535	; assembler added errata NOP
  5812  000B66  EFCE  F005         	goto	l2246
  5813  000B6A                     u1800:
  5814  000B6A  FFFF               	dw	65535	; assembler added errata NOP
  5815  000B6C  280E               	incf	___fladd@aexp^0,w,c
  5816  000B6E  A4D8               	btfss	status,2,c
  5817  000B70  EFBC  F005         	goto	u1811
  5818  000B74  EFBF  F005         	goto	u1810
  5819  000B78                     u1811:
  5820  000B78  FFFF               	dw	65535	; assembler added errata NOP
  5821  000B7A  EFC8  F005         	goto	l2242
  5822  000B7E                     u1810:
  5823  000B7E  FFFF               	dw	65535	; assembler added errata NOP
  5824  000B80  0E00               	movlw	0
  5825  000B82  6E05               	movwf	___fladd@a^0,c
  5826  000B84  0E00               	movlw	0
  5827  000B86  6E06               	movwf	(___fladd@a+1)^0,c
  5828  000B88  0E00               	movlw	0
  5829  000B8A  6E07               	movwf	(___fladd@a+2)^0,c
  5830  000B8C  0E00               	movlw	0
  5831  000B8E  6E08               	movwf	(___fladd@a+3)^0,c
  5832  000B90                     l2242:
  5833  000B90  FFFF               	dw	65535	; assembler added errata NOP
  5834  000B92  8E07               	bsf	(___fladd@a+2)^0,7,c
  5835  000B94  0E00               	movlw	0
  5836  000B96  6E08               	movwf	(___fladd@a+3)^0,c
  5837  000B98  EFD7  F005         	goto	l2248
  5838  000B9C                     l2246:
  5839  000B9C  FFFF               	dw	65535	; assembler added errata NOP
  5840  000B9E  0E00               	movlw	0
  5841  000BA0  6E05               	movwf	___fladd@a^0,c
  5842  000BA2  0E00               	movlw	0
  5843  000BA4  6E06               	movwf	(___fladd@a+1)^0,c
  5844  000BA6  0E00               	movlw	0
  5845  000BA8  6E07               	movwf	(___fladd@a+2)^0,c
  5846  000BAA  0E00               	movlw	0
  5847  000BAC  6E08               	movwf	(___fladd@a+3)^0,c
  5848  000BAE                     l2248:
  5849  000BAE  FFFF               	dw	65535	; assembler added errata NOP
  5850  000BB0  500F               	movf	___fladd@bexp^0,w,c
  5851  000BB2  5C0E               	subwf	___fladd@aexp^0,w,c
  5852  000BB4  B0D8               	btfsc	status,0,c
  5853  000BB6  EFDF  F005         	goto	u1821
  5854  000BBA  EFE2  F005         	goto	u1820
  5855  000BBE                     u1821:
  5856  000BBE  FFFF               	dw	65535	; assembler added errata NOP
  5857  000BC0  EF0D  F006         	goto	l2284
  5858  000BC4                     u1820:
  5859  000BC4  FFFF               	dw	65535	; assembler added errata NOP
  5860  000BC6  AC0D               	btfss	___fladd@signs^0,6,c
  5861  000BC8  EFE8  F005         	goto	u1831
  5862  000BCC  EFEB  F005         	goto	u1830
  5863  000BD0                     u1831:
  5864  000BD0  FFFF               	dw	65535	; assembler added errata NOP
  5865  000BD2  EFEE  F005         	goto	l2254
  5866  000BD6                     u1830:
  5867  000BD6  FFFF               	dw	65535	; assembler added errata NOP
  5868  000BD8  0E80               	movlw	128
  5869  000BDA  1A0D               	xorwf	___fladd@signs^0,f,c
  5870  000BDC                     l2254:
  5871  000BDC  FFFF               	dw	65535	; assembler added errata NOP
  5872  000BDE  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5873  000BE2  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5874  000BE6  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5875  000BEA  C001  F010         	movff	___fladd@b,___fladd@grs
  5876  000BEE  C005  F001         	movff	___fladd@a,___fladd@b
  5877  000BF2  C010  F005         	movff	___fladd@grs,___fladd@a
  5878  000BF6  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5879  000BFA  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5880  000BFE  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5881  000C02  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5882  000C06  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5883  000C0A  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5884  000C0E  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5885  000C12  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5886  000C16  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5887  000C1A                     l2284:
  5888  000C1A  FFFF               	dw	65535	; assembler added errata NOP
  5889  000C1C  0E00               	movlw	0
  5890  000C1E  6E10               	movwf	___fladd@grs^0,c
  5891  000C20  500F               	movf	___fladd@bexp^0,w,c
  5892  000C22  C00E  F009         	movff	___fladd@aexp,??___fladd
  5893  000C26  6A0A               	clrf	(??___fladd+1)^0,c
  5894  000C28  5E09               	subwf	??___fladd^0,f,c
  5895  000C2A  0E00               	movlw	0
  5896  000C2C  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5897  000C2E  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5898  000C30  EF23  F006         	goto	u1841
  5899  000C34  500A               	movf	(??___fladd+1)^0,w,c
  5900  000C36  E10A               	bnz	u1840
  5901  000C38  0E1A               	movlw	26
  5902  000C3A  5C09               	subwf	??___fladd^0,w,c
  5903  000C3C  A0D8               	btfss	status,0,c
  5904  000C3E  EF23  F006         	goto	u1841
  5905  000C42  EF26  F006         	goto	u1840
  5906  000C46                     u1841:
  5907  000C46  FFFF               	dw	65535	; assembler added errata NOP
  5908  000C48  EF69  F006         	goto	l928
  5909  000C4C                     u1840:
  5910  000C4C  FFFF               	dw	65535	; assembler added errata NOP
  5911  000C4E  5001               	movf	___fladd@b^0,w,c
  5912  000C50  1002               	iorwf	(___fladd@b+1)^0,w,c
  5913  000C52  1003               	iorwf	(___fladd@b+2)^0,w,c
  5914  000C54  1004               	iorwf	(___fladd@b+3)^0,w,c
  5915  000C56  A4D8               	btfss	status,2,c
  5916  000C58  EF30  F006         	goto	u1851
  5917  000C5C  EF34  F006         	goto	u1850
  5918  000C60                     u1851:
  5919  000C60  FFFF               	dw	65535	; assembler added errata NOP
  5920  000C62  0E01               	movlw	1
  5921  000C64  EF36  F006         	goto	u1860
  5922  000C68                     u1850:
  5923  000C68  FFFF               	dw	65535	; assembler added errata NOP
  5924  000C6A  0E00               	movlw	0
  5925  000C6C                     u1860:
  5926  000C6C  FFFF               	dw	65535	; assembler added errata NOP
  5927  000C6E  6E10               	movwf	___fladd@grs^0,c
  5928  000C70  0E00               	movlw	0
  5929  000C72  6E01               	movwf	___fladd@b^0,c
  5930  000C74  0E00               	movlw	0
  5931  000C76  6E02               	movwf	(___fladd@b+1)^0,c
  5932  000C78  0E00               	movlw	0
  5933  000C7A  6E03               	movwf	(___fladd@b+2)^0,c
  5934  000C7C  0E00               	movlw	0
  5935  000C7E  6E04               	movwf	(___fladd@b+3)^0,c
  5936  000C80  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5937  000C84  EF74  F006         	goto	l927
  5938  000C88                     l929:
  5939  000C88  FFFF               	dw	65535	; assembler added errata NOP
  5940  000C8A  A010               	btfss	___fladd@grs^0,0,c
  5941  000C8C  EF4A  F006         	goto	u1871
  5942  000C90  EF4D  F006         	goto	u1870
  5943  000C94                     u1871:
  5944  000C94  FFFF               	dw	65535	; assembler added errata NOP
  5945  000C96  EF54  F006         	goto	l2296
  5946  000C9A                     u1870:
  5947  000C9A  FFFF               	dw	65535	; assembler added errata NOP
  5948  000C9C  90D8               	bcf	status,0,c
  5949  000C9E  3010               	rrcf	___fladd@grs^0,w,c
  5950  000CA0  0901               	iorlw	1
  5951  000CA2  6E10               	movwf	___fladd@grs^0,c
  5952  000CA4  EF57  F006         	goto	l2298
  5953  000CA8                     l2296:
  5954  000CA8  FFFF               	dw	65535	; assembler added errata NOP
  5955  000CAA  90D8               	bcf	status,0,c
  5956  000CAC  3210               	rrcf	___fladd@grs^0,f,c
  5957  000CAE                     l2298:
  5958  000CAE  FFFF               	dw	65535	; assembler added errata NOP
  5959  000CB0  A001               	btfss	___fladd@b^0,0,c
  5960  000CB2  EF5D  F006         	goto	u1881
  5961  000CB6  EF60  F006         	goto	u1880
  5962  000CBA                     u1881:
  5963  000CBA  FFFF               	dw	65535	; assembler added errata NOP
  5964  000CBC  EF62  F006         	goto	l2302
  5965  000CC0                     u1880:
  5966  000CC0  FFFF               	dw	65535	; assembler added errata NOP
  5967  000CC2  8E10               	bsf	___fladd@grs^0,7,c
  5968  000CC4                     l2302:
  5969  000CC4  FFFF               	dw	65535	; assembler added errata NOP
  5970  000CC6  3404               	rlcf	(___fladd@b+3)^0,w,c
  5971  000CC8  3204               	rrcf	(___fladd@b+3)^0,f,c
  5972  000CCA  3203               	rrcf	(___fladd@b+2)^0,f,c
  5973  000CCC  3202               	rrcf	(___fladd@b+1)^0,f,c
  5974  000CCE  3201               	rrcf	___fladd@b^0,f,c
  5975  000CD0  2A0F               	incf	___fladd@bexp^0,f,c
  5976  000CD2                     l928:
  5977  000CD2  FFFF               	dw	65535	; assembler added errata NOP
  5978  000CD4  500E               	movf	___fladd@aexp^0,w,c
  5979  000CD6  5C0F               	subwf	___fladd@bexp^0,w,c
  5980  000CD8  A0D8               	btfss	status,0,c
  5981  000CDA  EF71  F006         	goto	u1891
  5982  000CDE  EF74  F006         	goto	u1890
  5983  000CE2                     u1891:
  5984  000CE2  FFFF               	dw	65535	; assembler added errata NOP
  5985  000CE4  EF44  F006         	goto	l929
  5986  000CE8                     u1890:
  5987  000CE8                     l927:
  5988  000CE8  FFFF               	dw	65535	; assembler added errata NOP
  5989  000CEA  BC0D               	btfsc	___fladd@signs^0,6,c
  5990  000CEC  EF7A  F006         	goto	u1901
  5991  000CF0  EF7D  F006         	goto	u1900
  5992  000CF4                     u1901:
  5993  000CF4  FFFF               	dw	65535	; assembler added errata NOP
  5994  000CF6  EFCA  F006         	goto	l2330
  5995  000CFA                     u1900:
  5996  000CFA  FFFF               	dw	65535	; assembler added errata NOP
  5997  000CFC  500F               	movf	___fladd@bexp^0,w,c
  5998  000CFE  A4D8               	btfss	status,2,c
  5999  000D00  EF84  F006         	goto	u1911
  6000  000D04  EF87  F006         	goto	u1910
  6001  000D08                     u1911:
  6002  000D08  FFFF               	dw	65535	; assembler added errata NOP
  6003  000D0A  EF92  F006         	goto	l2312
  6004  000D0E                     u1910:
  6005  000D0E  FFFF               	dw	65535	; assembler added errata NOP
  6006  000D10  0E00               	movlw	0
  6007  000D12  6E01               	movwf	?___fladd^0,c
  6008  000D14  0E00               	movlw	0
  6009  000D16  6E02               	movwf	(?___fladd+1)^0,c
  6010  000D18  0E00               	movlw	0
  6011  000D1A  6E03               	movwf	(?___fladd+2)^0,c
  6012  000D1C  0E00               	movlw	0
  6013  000D1E  6E04               	movwf	(?___fladd+3)^0,c
  6014  000D20  EF21  F008         	goto	l936
  6015  000D24                     l2312:
  6016  000D24  FFFF               	dw	65535	; assembler added errata NOP
  6017  000D26  5005               	movf	___fladd@a^0,w,c
  6018  000D28  2601               	addwf	___fladd@b^0,f,c
  6019  000D2A  5006               	movf	(___fladd@a+1)^0,w,c
  6020  000D2C  2202               	addwfc	(___fladd@b+1)^0,f,c
  6021  000D2E  5007               	movf	(___fladd@a+2)^0,w,c
  6022  000D30  2203               	addwfc	(___fladd@b+2)^0,f,c
  6023  000D32  5008               	movf	(___fladd@a+3)^0,w,c
  6024  000D34  2204               	addwfc	(___fladd@b+3)^0,f,c
  6025  000D36  A004               	btfss	(___fladd@b+3)^0,0,c
  6026  000D38  EFA0  F006         	goto	u1921
  6027  000D3C  EFA3  F006         	goto	u1920
  6028  000D40                     u1921:
  6029  000D40  FFFF               	dw	65535	; assembler added errata NOP
  6030  000D42  EF6E  F007         	goto	l2366
  6031  000D46                     u1920:
  6032  000D46  FFFF               	dw	65535	; assembler added errata NOP
  6033  000D48  A010               	btfss	___fladd@grs^0,0,c
  6034  000D4A  EFA9  F006         	goto	u1931
  6035  000D4E  EFAC  F006         	goto	u1930
  6036  000D52                     u1931:
  6037  000D52  FFFF               	dw	65535	; assembler added errata NOP
  6038  000D54  EFB3  F006         	goto	l2320
  6039  000D58                     u1930:
  6040  000D58  FFFF               	dw	65535	; assembler added errata NOP
  6041  000D5A  90D8               	bcf	status,0,c
  6042  000D5C  3010               	rrcf	___fladd@grs^0,w,c
  6043  000D5E  0901               	iorlw	1
  6044  000D60  6E10               	movwf	___fladd@grs^0,c
  6045  000D62  EFB6  F006         	goto	l2322
  6046  000D66                     l2320:
  6047  000D66  FFFF               	dw	65535	; assembler added errata NOP
  6048  000D68  90D8               	bcf	status,0,c
  6049  000D6A  3210               	rrcf	___fladd@grs^0,f,c
  6050  000D6C                     l2322:
  6051  000D6C  FFFF               	dw	65535	; assembler added errata NOP
  6052  000D6E  A001               	btfss	___fladd@b^0,0,c
  6053  000D70  EFBC  F006         	goto	u1941
  6054  000D74  EFBF  F006         	goto	u1940
  6055  000D78                     u1941:
  6056  000D78  FFFF               	dw	65535	; assembler added errata NOP
  6057  000D7A  EFC1  F006         	goto	l2326
  6058  000D7E                     u1940:
  6059  000D7E  FFFF               	dw	65535	; assembler added errata NOP
  6060  000D80  8E10               	bsf	___fladd@grs^0,7,c
  6061  000D82                     l2326:
  6062  000D82  FFFF               	dw	65535	; assembler added errata NOP
  6063  000D84  3404               	rlcf	(___fladd@b+3)^0,w,c
  6064  000D86  3204               	rrcf	(___fladd@b+3)^0,f,c
  6065  000D88  3203               	rrcf	(___fladd@b+2)^0,f,c
  6066  000D8A  3202               	rrcf	(___fladd@b+1)^0,f,c
  6067  000D8C  3201               	rrcf	___fladd@b^0,f,c
  6068  000D8E  2A0F               	incf	___fladd@bexp^0,f,c
  6069  000D90  EF6E  F007         	goto	l2366
  6070  000D94                     l2330:
  6071  000D94  FFFF               	dw	65535	; assembler added errata NOP
  6072  000D96  5005               	movf	___fladd@a^0,w,c
  6073  000D98  5C01               	subwf	___fladd@b^0,w,c
  6074  000D9A  5006               	movf	(___fladd@a+1)^0,w,c
  6075  000D9C  5802               	subwfb	(___fladd@b+1)^0,w,c
  6076  000D9E  5007               	movf	(___fladd@a+2)^0,w,c
  6077  000DA0  5803               	subwfb	(___fladd@b+2)^0,w,c
  6078  000DA2  5004               	movf	(___fladd@b+3)^0,w,c
  6079  000DA4  0A80               	xorlw	128
  6080  000DA6  6E09               	movwf	??___fladd^0,c
  6081  000DA8  5008               	movf	(___fladd@a+3)^0,w,c
  6082  000DAA  0A80               	xorlw	128
  6083  000DAC  5809               	subwfb	??___fladd^0,w,c
  6084  000DAE  B0D8               	btfsc	status,0,c
  6085  000DB0  EFDC  F006         	goto	u1951
  6086  000DB4  EFDF  F006         	goto	u1950
  6087  000DB8                     u1951:
  6088  000DB8  FFFF               	dw	65535	; assembler added errata NOP
  6089  000DBA  EF0D  F007         	goto	l2340
  6090  000DBE                     u1950:
  6091  000DBE  FFFF               	dw	65535	; assembler added errata NOP
  6092  000DC0  5001               	movf	___fladd@b^0,w,c
  6093  000DC2  5C05               	subwf	___fladd@a^0,w,c
  6094  000DC4  6E09               	movwf	??___fladd^0,c
  6095  000DC6  5002               	movf	(___fladd@b+1)^0,w,c
  6096  000DC8  5806               	subwfb	(___fladd@a+1)^0,w,c
  6097  000DCA  6E0A               	movwf	(??___fladd+1)^0,c
  6098  000DCC  5003               	movf	(___fladd@b+2)^0,w,c
  6099  000DCE  5807               	subwfb	(___fladd@a+2)^0,w,c
  6100  000DD0  6E0B               	movwf	(??___fladd+2)^0,c
  6101  000DD2  5004               	movf	(___fladd@b+3)^0,w,c
  6102  000DD4  5808               	subwfb	(___fladd@a+3)^0,w,c
  6103  000DD6  6E0C               	movwf	(??___fladd+3)^0,c
  6104  000DD8  0EFF               	movlw	255
  6105  000DDA  2409               	addwf	??___fladd^0,w,c
  6106  000DDC  6E01               	movwf	___fladd@b^0,c
  6107  000DDE  0EFF               	movlw	255
  6108  000DE0  200A               	addwfc	(??___fladd+1)^0,w,c
  6109  000DE2  6E02               	movwf	(___fladd@b+1)^0,c
  6110  000DE4  0EFF               	movlw	255
  6111  000DE6  200B               	addwfc	(??___fladd+2)^0,w,c
  6112  000DE8  6E03               	movwf	(___fladd@b+2)^0,c
  6113  000DEA  0EFF               	movlw	255
  6114  000DEC  200C               	addwfc	(??___fladd+3)^0,w,c
  6115  000DEE  6E04               	movwf	(___fladd@b+3)^0,c
  6116  000DF0  0E80               	movlw	128
  6117  000DF2  1A0D               	xorwf	___fladd@signs^0,f,c
  6118  000DF4  6C10               	negf	___fladd@grs^0,c
  6119  000DF6  5010               	movf	___fladd@grs^0,w,c
  6120  000DF8  A4D8               	btfss	status,2,c
  6121  000DFA  EF01  F007         	goto	u1961
  6122  000DFE  EF04  F007         	goto	u1960
  6123  000E02                     u1961:
  6124  000E02  FFFF               	dw	65535	; assembler added errata NOP
  6125  000E04  EF16  F007         	goto	l944
  6126  000E08                     u1960:
  6127  000E08  FFFF               	dw	65535	; assembler added errata NOP
  6128  000E0A  0E01               	movlw	1
  6129  000E0C  2601               	addwf	___fladd@b^0,f,c
  6130  000E0E  0E00               	movlw	0
  6131  000E10  2202               	addwfc	(___fladd@b+1)^0,f,c
  6132  000E12  2203               	addwfc	(___fladd@b+2)^0,f,c
  6133  000E14  2204               	addwfc	(___fladd@b+3)^0,f,c
  6134  000E16  EF16  F007         	goto	l944
  6135  000E1A                     l2340:
  6136  000E1A  FFFF               	dw	65535	; assembler added errata NOP
  6137  000E1C  5005               	movf	___fladd@a^0,w,c
  6138  000E1E  5E01               	subwf	___fladd@b^0,f,c
  6139  000E20  5006               	movf	(___fladd@a+1)^0,w,c
  6140  000E22  5A02               	subwfb	(___fladd@b+1)^0,f,c
  6141  000E24  5007               	movf	(___fladd@a+2)^0,w,c
  6142  000E26  5A03               	subwfb	(___fladd@b+2)^0,f,c
  6143  000E28  5008               	movf	(___fladd@a+3)^0,w,c
  6144  000E2A  5A04               	subwfb	(___fladd@b+3)^0,f,c
  6145  000E2C                     l944:
  6146  000E2C  FFFF               	dw	65535	; assembler added errata NOP
  6147  000E2E  5001               	movf	___fladd@b^0,w,c
  6148  000E30  1002               	iorwf	(___fladd@b+1)^0,w,c
  6149  000E32  1003               	iorwf	(___fladd@b+2)^0,w,c
  6150  000E34  1004               	iorwf	(___fladd@b+3)^0,w,c
  6151  000E36  A4D8               	btfss	status,2,c
  6152  000E38  EF20  F007         	goto	u1971
  6153  000E3C  EF23  F007         	goto	u1970
  6154  000E40                     u1971:
  6155  000E40  FFFF               	dw	65535	; assembler added errata NOP
  6156  000E42  EF65  F007         	goto	l2364
  6157  000E46                     u1970:
  6158  000E46  FFFF               	dw	65535	; assembler added errata NOP
  6159  000E48  5010               	movf	___fladd@grs^0,w,c
  6160  000E4A  A4D8               	btfss	status,2,c
  6161  000E4C  EF2A  F007         	goto	u1981
  6162  000E50  EF2D  F007         	goto	u1980
  6163  000E54                     u1981:
  6164  000E54  FFFF               	dw	65535	; assembler added errata NOP
  6165  000E56  EF65  F007         	goto	l2364
  6166  000E5A                     u1980:
  6167  000E5A  FFFF               	dw	65535	; assembler added errata NOP
  6168  000E5C  0E00               	movlw	0
  6169  000E5E  6E01               	movwf	?___fladd^0,c
  6170  000E60  0E00               	movlw	0
  6171  000E62  6E02               	movwf	(?___fladd+1)^0,c
  6172  000E64  0E00               	movlw	0
  6173  000E66  6E03               	movwf	(?___fladd+2)^0,c
  6174  000E68  0E00               	movlw	0
  6175  000E6A  6E04               	movwf	(?___fladd+3)^0,c
  6176  000E6C  EF21  F008         	goto	l936
  6177  000E70                     l2348:
  6178  000E70  FFFF               	dw	65535	; assembler added errata NOP
  6179  000E72  90D8               	bcf	status,0,c
  6180  000E74  3601               	rlcf	___fladd@b^0,f,c
  6181  000E76  3602               	rlcf	(___fladd@b+1)^0,f,c
  6182  000E78  3603               	rlcf	(___fladd@b+2)^0,f,c
  6183  000E7A  3604               	rlcf	(___fladd@b+3)^0,f,c
  6184  000E7C  AE10               	btfss	___fladd@grs^0,7,c
  6185  000E7E  EF43  F007         	goto	u1991
  6186  000E82  EF46  F007         	goto	u1990
  6187  000E86                     u1991:
  6188  000E86  FFFF               	dw	65535	; assembler added errata NOP
  6189  000E88  EF48  F007         	goto	l2354
  6190  000E8C                     u1990:
  6191  000E8C  FFFF               	dw	65535	; assembler added errata NOP
  6192  000E8E  8001               	bsf	___fladd@b^0,0,c
  6193  000E90                     l2354:
  6194  000E90  FFFF               	dw	65535	; assembler added errata NOP
  6195  000E92  A010               	btfss	___fladd@grs^0,0,c
  6196  000E94  EF4E  F007         	goto	u2001
  6197  000E98  EF51  F007         	goto	u2000
  6198  000E9C                     u2001:
  6199  000E9C  FFFF               	dw	65535	; assembler added errata NOP
  6200  000E9E  EF56  F007         	goto	l2358
  6201  000EA2                     u2000:
  6202  000EA2  FFFF               	dw	65535	; assembler added errata NOP
  6203  000EA4  80D8               	bsf	status,0,c
  6204  000EA6  3610               	rlcf	___fladd@grs^0,f,c
  6205  000EA8  EF59  F007         	goto	l2360
  6206  000EAC                     l2358:
  6207  000EAC  FFFF               	dw	65535	; assembler added errata NOP
  6208  000EAE  90D8               	bcf	status,0,c
  6209  000EB0  3610               	rlcf	___fladd@grs^0,f,c
  6210  000EB2                     l2360:
  6211  000EB2  FFFF               	dw	65535	; assembler added errata NOP
  6212  000EB4  500F               	movf	___fladd@bexp^0,w,c
  6213  000EB6  B4D8               	btfsc	status,2,c
  6214  000EB8  EF60  F007         	goto	u2011
  6215  000EBC  EF63  F007         	goto	u2010
  6216  000EC0                     u2011:
  6217  000EC0  FFFF               	dw	65535	; assembler added errata NOP
  6218  000EC2  EF65  F007         	goto	l2364
  6219  000EC6                     u2010:
  6220  000EC6  FFFF               	dw	65535	; assembler added errata NOP
  6221  000EC8  060F               	decf	___fladd@bexp^0,f,c
  6222  000ECA                     l2364:
  6223  000ECA  FFFF               	dw	65535	; assembler added errata NOP
  6224  000ECC  AE03               	btfss	(___fladd@b+2)^0,7,c
  6225  000ECE  EF6B  F007         	goto	u2021
  6226  000ED2  EF6E  F007         	goto	u2020
  6227  000ED6                     u2021:
  6228  000ED6  FFFF               	dw	65535	; assembler added errata NOP
  6229  000ED8  EF38  F007         	goto	l2348
  6230  000EDC                     u2020:
  6231  000EDC                     l2366:
  6232  000EDC  FFFF               	dw	65535	; assembler added errata NOP
  6233  000EDE  0E00               	movlw	0
  6234  000EE0  6E0E               	movwf	___fladd@aexp^0,c
  6235  000EE2  AE10               	btfss	___fladd@grs^0,7,c
  6236  000EE4  EF76  F007         	goto	u2031
  6237  000EE8  EF79  F007         	goto	u2030
  6238  000EEC                     u2031:
  6239  000EEC  FFFF               	dw	65535	; assembler added errata NOP
  6240  000EEE  EF98  F007         	goto	l953
  6241  000EF2                     u2030:
  6242  000EF2  FFFF               	dw	65535	; assembler added errata NOP
  6243  000EF4  C010  F009         	movff	___fladd@grs,??___fladd
  6244  000EF8  0E7F               	movlw	127
  6245  000EFA  1609               	andwf	??___fladd^0,f,c
  6246  000EFC  B4D8               	btfsc	status,2,c
  6247  000EFE  EF83  F007         	goto	u2041
  6248  000F02  EF86  F007         	goto	u2040
  6249  000F06                     u2041:
  6250  000F06  FFFF               	dw	65535	; assembler added errata NOP
  6251  000F08  EF8C  F007         	goto	l954
  6252  000F0C                     u2040:
  6253  000F0C  FFFF               	dw	65535	; assembler added errata NOP
  6254  000F0E                     l2372:
  6255  000F0E  FFFF               	dw	65535	; assembler added errata NOP
  6256  000F10  0E01               	movlw	1
  6257  000F12  6E0E               	movwf	___fladd@aexp^0,c
  6258  000F14  EF98  F007         	goto	l953
  6259  000F18                     l954:
  6260  000F18  FFFF               	dw	65535	; assembler added errata NOP
  6261  000F1A  A001               	btfss	___fladd@b^0,0,c
  6262  000F1C  EF92  F007         	goto	u2051
  6263  000F20  EF95  F007         	goto	u2050
  6264  000F24                     u2051:
  6265  000F24  FFFF               	dw	65535	; assembler added errata NOP
  6266  000F26  EF98  F007         	goto	l953
  6267  000F2A                     u2050:
  6268  000F2A  FFFF               	dw	65535	; assembler added errata NOP
  6269  000F2C  EF87  F007         	goto	l2372
  6270  000F30                     l953:
  6271  000F30  FFFF               	dw	65535	; assembler added errata NOP
  6272  000F32  500E               	movf	___fladd@aexp^0,w,c
  6273  000F34  B4D8               	btfsc	status,2,c
  6274  000F36  EF9F  F007         	goto	u2061
  6275  000F3A  EFA2  F007         	goto	u2060
  6276  000F3E                     u2061:
  6277  000F3E  FFFF               	dw	65535	; assembler added errata NOP
  6278  000F40  EFD2  F007         	goto	l2384
  6279  000F44                     u2060:
  6280  000F44  FFFF               	dw	65535	; assembler added errata NOP
  6281  000F46  0E01               	movlw	1
  6282  000F48  2601               	addwf	___fladd@b^0,f,c
  6283  000F4A  0E00               	movlw	0
  6284  000F4C  2202               	addwfc	(___fladd@b+1)^0,f,c
  6285  000F4E  2203               	addwfc	(___fladd@b+2)^0,f,c
  6286  000F50  2204               	addwfc	(___fladd@b+3)^0,f,c
  6287  000F52  A004               	btfss	(___fladd@b+3)^0,0,c
  6288  000F54  EFAE  F007         	goto	u2071
  6289  000F58  EFB1  F007         	goto	u2070
  6290  000F5C                     u2071:
  6291  000F5C  FFFF               	dw	65535	; assembler added errata NOP
  6292  000F5E  EFD2  F007         	goto	l2384
  6293  000F62                     u2070:
  6294  000F62  FFFF               	dw	65535	; assembler added errata NOP
  6295  000F64  C001  F009         	movff	___fladd@b,??___fladd
  6296  000F68  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6297  000F6C  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6298  000F70  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6299  000F74  340C               	rlcf	(??___fladd+3)^0,w,c
  6300  000F76  320C               	rrcf	(??___fladd+3)^0,f,c
  6301  000F78  320B               	rrcf	(??___fladd+2)^0,f,c
  6302  000F7A  320A               	rrcf	(??___fladd+1)^0,f,c
  6303  000F7C  3209               	rrcf	??___fladd^0,f,c
  6304  000F7E  C009  F001         	movff	??___fladd,___fladd@b
  6305  000F82  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6306  000F86  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6307  000F8A  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6308  000F8E  280F               	incf	___fladd@bexp^0,w,c
  6309  000F90  B4D8               	btfsc	status,2,c
  6310  000F92  EFCD  F007         	goto	u2081
  6311  000F96  EFD0  F007         	goto	u2080
  6312  000F9A                     u2081:
  6313  000F9A  FFFF               	dw	65535	; assembler added errata NOP
  6314  000F9C  EFD2  F007         	goto	l2384
  6315  000FA0                     u2080:
  6316  000FA0  FFFF               	dw	65535	; assembler added errata NOP
  6317  000FA2  2A0F               	incf	___fladd@bexp^0,f,c
  6318  000FA4                     l2384:
  6319  000FA4  FFFF               	dw	65535	; assembler added errata NOP
  6320  000FA6  280F               	incf	___fladd@bexp^0,w,c
  6321  000FA8  B4D8               	btfsc	status,2,c
  6322  000FAA  EFD9  F007         	goto	u2091
  6323  000FAE  EFDC  F007         	goto	u2090
  6324  000FB2                     u2091:
  6325  000FB2  FFFF               	dw	65535	; assembler added errata NOP
  6326  000FB4  EFE6  F007         	goto	l2388
  6327  000FB8                     u2090:
  6328  000FB8  FFFF               	dw	65535	; assembler added errata NOP
  6329  000FBA  500F               	movf	___fladd@bexp^0,w,c
  6330  000FBC  A4D8               	btfss	status,2,c
  6331  000FBE  EFE3  F007         	goto	u2101
  6332  000FC2  EFE6  F007         	goto	u2100
  6333  000FC6                     u2101:
  6334  000FC6  FFFF               	dw	65535	; assembler added errata NOP
  6335  000FC8  EFFB  F007         	goto	l2392
  6336  000FCC                     u2100:
  6337  000FCC                     l2388:
  6338  000FCC  FFFF               	dw	65535	; assembler added errata NOP
  6339  000FCE  0E00               	movlw	0
  6340  000FD0  6E01               	movwf	___fladd@b^0,c
  6341  000FD2  0E00               	movlw	0
  6342  000FD4  6E02               	movwf	(___fladd@b+1)^0,c
  6343  000FD6  0E00               	movlw	0
  6344  000FD8  6E03               	movwf	(___fladd@b+2)^0,c
  6345  000FDA  0E00               	movlw	0
  6346  000FDC  6E04               	movwf	(___fladd@b+3)^0,c
  6347  000FDE  500F               	movf	___fladd@bexp^0,w,c
  6348  000FE0  A4D8               	btfss	status,2,c
  6349  000FE2  EFF5  F007         	goto	u2111
  6350  000FE6  EFF8  F007         	goto	u2110
  6351  000FEA                     u2111:
  6352  000FEA  FFFF               	dw	65535	; assembler added errata NOP
  6353  000FEC  EFFB  F007         	goto	l2392
  6354  000FF0                     u2110:
  6355  000FF0  FFFF               	dw	65535	; assembler added errata NOP
  6356  000FF2  0E00               	movlw	0
  6357  000FF4  6E0D               	movwf	___fladd@signs^0,c
  6358  000FF6                     l2392:
  6359  000FF6  FFFF               	dw	65535	; assembler added errata NOP
  6360  000FF8  A00F               	btfss	___fladd@bexp^0,0,c
  6361  000FFA  EF01  F008         	goto	u2121
  6362  000FFE  EF04  F008         	goto	u2120
  6363  001002                     u2121:
  6364  001002  FFFF               	dw	65535	; assembler added errata NOP
  6365  001004  EF08  F008         	goto	l2396
  6366  001008                     u2120:
  6367  001008  FFFF               	dw	65535	; assembler added errata NOP
  6368  00100A  8E03               	bsf	(___fladd@b+2)^0,7,c
  6369  00100C  EF0A  F008         	goto	l2398
  6370  001010                     l2396:
  6371  001010  FFFF               	dw	65535	; assembler added errata NOP
  6372  001012  9E03               	bcf	(___fladd@b+2)^0,7,c
  6373  001014                     l2398:
  6374  001014  FFFF               	dw	65535	; assembler added errata NOP
  6375  001016  90D8               	bcf	status,0,c
  6376  001018  300F               	rrcf	___fladd@bexp^0,w,c
  6377  00101A  6E04               	movwf	(___fladd@b+3)^0,c
  6378  00101C  AE0D               	btfss	___fladd@signs^0,7,c
  6379  00101E  EF13  F008         	goto	u2131
  6380  001022  EF16  F008         	goto	u2130
  6381  001026                     u2131:
  6382  001026  FFFF               	dw	65535	; assembler added errata NOP
  6383  001028  EF18  F008         	goto	l2404
  6384  00102C                     u2130:
  6385  00102C  FFFF               	dw	65535	; assembler added errata NOP
  6386  00102E  8E04               	bsf	(___fladd@b+3)^0,7,c
  6387  001030                     l2404:
  6388  001030  FFFF               	dw	65535	; assembler added errata NOP
  6389  001032  C001  F001         	movff	___fladd@b,?___fladd
  6390  001036  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6391  00103A  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6392  00103E  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6393  001042                     l936:
  6394  001042  FFFF               	dw	65535	; assembler added errata NOP
  6395  001044  0012               	return		;funcret
  6396  001046  FFFF               	dw	65535	; errata NOP
  6397  001048                     __end_of___fladd:
  6398                           	callstack 0
  6399                           
  6400 ;; *************** function ___flneg *****************
  6401 ;; Defined at:
  6402 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
  6403 ;; Parameters:    Size  Location     Type
  6404 ;;  f1              4    0[COMRAM] unsigned char 
  6405 ;; Auto vars:     Size  Location     Type
  6406 ;;		None
  6407 ;; Return value:  Size  Location     Type
  6408 ;;                  4    0[COMRAM] unsigned char 
  6409 ;; Registers used:
  6410 ;;		wreg, status,2, status,0
  6411 ;; Tracked objects:
  6412 ;;		On entry : 0/0
  6413 ;;		On exit  : 0/0
  6414 ;;		Unchanged: 0/0
  6415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6416 ;;      Params:         4       0       0       0       0       0       0
  6417 ;;      Locals:         0       0       0       0       0       0       0
  6418 ;;      Temps:          0       0       0       0       0       0       0
  6419 ;;      Totals:         4       0       0       0       0       0       0
  6420 ;;Total ram usage:        4 bytes
  6421 ;; Hardware stack levels used:    1
  6422 ;; Hardware stack levels required when called:    1
  6423 ;; This function calls:
  6424 ;;		Nothing
  6425 ;; This function is called by:
  6426 ;;		_roundf
  6427 ;; This function uses a non-reentrant model
  6428 ;;
  6429                           
  6430                           	psect	text23
  6431  002684                     __ptext23:
  6432                           	callstack 0
  6433  002684                     ___flneg:
  6434                           	callstack 0
  6435  002684  FFFF               	dw	65535	; assembler added errata NOP
  6436  002686  5001               	movf	___flneg@f1^0,w,c
  6437  002688  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6438  00268A  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6439  00268C  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6440  00268E  B4D8               	btfsc	status,2,c
  6441  002690  EF4C  F013         	goto	u2381
  6442  002694  EF4F  F013         	goto	u2380
  6443  002698                     u2381:
  6444  002698  FFFF               	dw	65535	; assembler added errata NOP
  6445  00269A  EF58  F013         	goto	l2584
  6446  00269E                     u2380:
  6447  00269E  FFFF               	dw	65535	; assembler added errata NOP
  6448  0026A0  0E00               	movlw	0
  6449  0026A2  1A01               	xorwf	___flneg@f1^0,f,c
  6450  0026A4  0E00               	movlw	0
  6451  0026A6  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6452  0026A8  0E00               	movlw	0
  6453  0026AA  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6454  0026AC  0E80               	movlw	128
  6455  0026AE  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6456  0026B0                     l2584:
  6457  0026B0  FFFF               	dw	65535	; assembler added errata NOP
  6458  0026B2  C001  F001         	movff	___flneg@f1,?___flneg
  6459  0026B6  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6460  0026BA  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6461  0026BE  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6462  0026C2  0012               	return		;funcret
  6463  0026C4  FFFF               	dw	65535	; errata NOP
  6464  0026C6                     __end_of___flneg:
  6465                           	callstack 0
  6466                           
  6467 ;; *************** function _init_PORTS *****************
  6468 ;; Defined at:
  6469 ;;		line 61 in file "init_PIC.c"
  6470 ;; Parameters:    Size  Location     Type
  6471 ;;		None
  6472 ;; Auto vars:     Size  Location     Type
  6473 ;;		None
  6474 ;; Return value:  Size  Location     Type
  6475 ;;                  1    wreg      void 
  6476 ;; Registers used:
  6477 ;;		wreg, status,2
  6478 ;; Tracked objects:
  6479 ;;		On entry : 0/0
  6480 ;;		On exit  : 0/0
  6481 ;;		Unchanged: 0/0
  6482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6483 ;;      Params:         0       0       0       0       0       0       0
  6484 ;;      Locals:         0       0       0       0       0       0       0
  6485 ;;      Temps:          0       0       0       0       0       0       0
  6486 ;;      Totals:         0       0       0       0       0       0       0
  6487 ;;Total ram usage:        0 bytes
  6488 ;; Hardware stack levels used:    1
  6489 ;; Hardware stack levels required when called:    1
  6490 ;; This function calls:
  6491 ;;		Nothing
  6492 ;; This function is called by:
  6493 ;;		_main
  6494 ;; This function uses a non-reentrant model
  6495 ;;
  6496                           
  6497                           	psect	text24
  6498  00273C                     __ptext24:
  6499                           	callstack 0
  6500  00273C                     _init_PORTS:
  6501                           	callstack 0
  6502  00273C  FFFF               	dw	65535	; assembler added errata NOP
  6503  00273E                     
  6504                           ;init_PIC.c: 63:     LATA = 0;
  6505  00273E  0E00               	movlw	0
  6506  002740  6E89               	movwf	137,c	;volatile
  6507                           
  6508                           ;init_PIC.c: 64:     PORTA = 0;
  6509  002742  0E00               	movlw	0
  6510  002744  6E80               	movwf	128,c	;volatile
  6511                           
  6512                           ;init_PIC.c: 65:     TRISA = 0xF1;
  6513  002746  0EF1               	movlw	241
  6514  002748  6E92               	movwf	146,c	;volatile
  6515                           
  6516                           ;init_PIC.c: 67:     LATB = 0;
  6517  00274A  0E00               	movlw	0
  6518  00274C  6E8A               	movwf	138,c	;volatile
  6519                           
  6520                           ;init_PIC.c: 68:     PORTB = 0;
  6521  00274E  0E00               	movlw	0
  6522  002750  6E81               	movwf	129,c	;volatile
  6523                           
  6524                           ;init_PIC.c: 69:     TRISB = 0x00;
  6525  002752  0E00               	movlw	0
  6526  002754  6E93               	movwf	147,c	;volatile
  6527                           
  6528                           ;init_PIC.c: 72:     LATC = 0;
  6529  002756  0E00               	movlw	0
  6530  002758  6E8B               	movwf	139,c	;volatile
  6531                           
  6532                           ;init_PIC.c: 73:     PORTC = 0;
  6533  00275A  0E00               	movlw	0
  6534  00275C  6E82               	movwf	130,c	;volatile
  6535                           
  6536                           ;init_PIC.c: 74:     TRISC = 0x00;
  6537  00275E  0E00               	movlw	0
  6538  002760  6E94               	movwf	148,c	;volatile
  6539  002762                     
  6540                           ;init_PIC.c: 75:     TRISCbits.RC7 = 1;
  6541  002762  8E94               	bsf	148,7,c	;volatile
  6542  002764  0012               	return		;funcret
  6543  002766  FFFF               	dw	65535	; errata NOP
  6544  002768                     __end_of_init_PORTS:
  6545                           	callstack 0
  6546                           
  6547 ;; *************** function _get_reg_value *****************
  6548 ;; Defined at:
  6549 ;;		line 54 in file "serial_rs232.c"
  6550 ;; Parameters:    Size  Location     Type
  6551 ;;		None
  6552 ;; Auto vars:     Size  Location     Type
  6553 ;;  rx_char         1    0[COMRAM] unsigned char 
  6554 ;; Return value:  Size  Location     Type
  6555 ;;                  1    wreg      unsigned char 
  6556 ;; Registers used:
  6557 ;;		wreg, status,2
  6558 ;; Tracked objects:
  6559 ;;		On entry : 0/0
  6560 ;;		On exit  : 0/0
  6561 ;;		Unchanged: 0/0
  6562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6563 ;;      Params:         0       0       0       0       0       0       0
  6564 ;;      Locals:         1       0       0       0       0       0       0
  6565 ;;      Temps:          0       0       0       0       0       0       0
  6566 ;;      Totals:         1       0       0       0       0       0       0
  6567 ;;Total ram usage:        1 bytes
  6568 ;; Hardware stack levels used:    1
  6569 ;; Hardware stack levels required when called:    1
  6570 ;; This function calls:
  6571 ;;		Nothing
  6572 ;; This function is called by:
  6573 ;;		_main
  6574 ;; This function uses a non-reentrant model
  6575 ;;
  6576                           
  6577                           	psect	text25
  6578  00288A                     __ptext25:
  6579                           	callstack 0
  6580  00288A                     _get_reg_value:
  6581                           	callstack 0
  6582  00288A  FFFF               	dw	65535	; assembler added errata NOP
  6583  00288C                     
  6584                           ;serial_rs232.c: 55:     unsigned char rx_char = RCREG;
  6585  00288C  CFAE F001          	movff	4014,get_reg_value@rx_char	;volatile
  6586  002890                     
  6587                           ;serial_rs232.c: 56:     RCREG = 0;
  6588  002890  0E00               	movlw	0
  6589  002892  6EAE               	movwf	174,c	;volatile
  6590                           
  6591                           ;serial_rs232.c: 57:     return rx_char;
  6592  002894  5001               	movf	get_reg_value@rx_char^0,w,c
  6593  002896  0012               	return		;funcret
  6594  002898  FFFF               	dw	65535	; errata NOP
  6595  00289A                     __end_of_get_reg_value:
  6596                           	callstack 0
  6597                           
  6598 ;; *************** function _get_liters *****************
  6599 ;; Defined at:
  6600 ;;		line 41 in file "oven.c"
  6601 ;; Parameters:    Size  Location     Type
  6602 ;;		None
  6603 ;; Auto vars:     Size  Location     Type
  6604 ;;		None
  6605 ;; Return value:  Size  Location     Type
  6606 ;;                  2   61[COMRAM] int 
  6607 ;; Registers used:
  6608 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6609 ;; Tracked objects:
  6610 ;;		On entry : 0/0
  6611 ;;		On exit  : 0/0
  6612 ;;		Unchanged: 0/0
  6613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6614 ;;      Params:         2       0       0       0       0       0       0
  6615 ;;      Locals:         0       0       0       0       0       0       0
  6616 ;;      Temps:          0       0       0       0       0       0       0
  6617 ;;      Totals:         2       0       0       0       0       0       0
  6618 ;;Total ram usage:        2 bytes
  6619 ;; Hardware stack levels used:    1
  6620 ;; Hardware stack levels required when called:    2
  6621 ;; This function calls:
  6622 ;;		___flmul
  6623 ;;		___fltol
  6624 ;;		___xxtofl
  6625 ;; This function is called by:
  6626 ;;		_main
  6627 ;; This function uses a non-reentrant model
  6628 ;;
  6629                           
  6630                           	psect	text26
  6631  00248A                     __ptext26:
  6632                           	callstack 0
  6633  00248A                     _get_liters:
  6634                           	callstack 0
  6635  00248A  FFFF               	dw	65535	; assembler added errata NOP
  6636  00248C                     
  6637                           ;oven.c: 42:     ADCON0bits.GO = 1;
  6638  00248C  84C2               	bsf	194,2,c	;volatile
  6639  00248E                     l381:
  6640  00248E  FFFF               	dw	65535	; assembler added errata NOP
  6641  002490  B4C2               	btfsc	194,2,c	;volatile
  6642  002492  EF4D  F012         	goto	u2901
  6643  002496  EF50  F012         	goto	u2900
  6644  00249A                     u2901:
  6645  00249A  FFFF               	dw	65535	; assembler added errata NOP
  6646  00249C  EF47  F012         	goto	l381
  6647  0024A0                     u2900:
  6648  0024A0  FFFF               	dw	65535	; assembler added errata NOP
  6649  0024A2                     
  6650                           ;oven.c: 44:     return (int) (ADRESH * 0.01);
  6651  0024A2  0E0A               	movlw	10
  6652  0024A4  6E1F               	movwf	___flmul@a^0,c
  6653  0024A6  0ED7               	movlw	215
  6654  0024A8  6E20               	movwf	(___flmul@a+1)^0,c
  6655  0024AA  0E23               	movlw	35
  6656  0024AC  6E21               	movwf	(___flmul@a+2)^0,c
  6657  0024AE  0E3C               	movlw	60
  6658  0024B0  6E22               	movwf	(___flmul@a+3)^0,c
  6659  0024B2  50C4               	movf	196,w,c	;volatile
  6660  0024B4  6E0D               	movwf	___xxtofl@val^0,c
  6661  0024B6  6A0E               	clrf	(___xxtofl@val+1)^0,c
  6662  0024B8  6A0F               	clrf	(___xxtofl@val+2)^0,c
  6663  0024BA  6A10               	clrf	(___xxtofl@val+3)^0,c
  6664  0024BC  0E01               	movlw	1
  6665  0024BE  EC69  F00C         	call	___xxtofl
  6666  0024C2  C00D  F01B         	movff	?___xxtofl,___flmul@b
  6667  0024C6  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  6668  0024CA  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  6669  0024CE  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  6670  0024D2  EC24  F008         	call	___flmul	;wreg free
  6671  0024D6  C01B  F034         	movff	?___flmul,___fltol@f1
  6672  0024DA  C01C  F035         	movff	?___flmul+1,___fltol@f1+1
  6673  0024DE  C01D  F036         	movff	?___flmul+2,___fltol@f1+2
  6674  0024E2  C01E  F037         	movff	?___flmul+3,___fltol@f1+3
  6675  0024E6  EC1C  F00E         	call	___fltol	;wreg free
  6676  0024EA  C034  F03E         	movff	?___fltol,?_get_liters
  6677  0024EE  C035  F03F         	movff	?___fltol+1,?_get_liters+1
  6678  0024F2  0012               	return		;funcret
  6679  0024F4  FFFF               	dw	65535	; errata NOP
  6680  0024F6                     __end_of_get_liters:
  6681                           	callstack 0
  6682                           
  6683 ;; *************** function ___fltol *****************
  6684 ;; Defined at:
  6685 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
  6686 ;; Parameters:    Size  Location     Type
  6687 ;;  f1              4   51[COMRAM] int 
  6688 ;; Auto vars:     Size  Location     Type
  6689 ;;  exp1            1   60[COMRAM] unsigned char 
  6690 ;;  sign1           1   59[COMRAM] unsigned char 
  6691 ;; Return value:  Size  Location     Type
  6692 ;;                  4   51[COMRAM] long 
  6693 ;; Registers used:
  6694 ;;		wreg, status,2, status,0
  6695 ;; Tracked objects:
  6696 ;;		On entry : 0/0
  6697 ;;		On exit  : 0/0
  6698 ;;		Unchanged: 0/0
  6699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6700 ;;      Params:         4       0       0       0       0       0       0
  6701 ;;      Locals:         2       0       0       0       0       0       0
  6702 ;;      Temps:          4       0       0       0       0       0       0
  6703 ;;      Totals:        10       0       0       0       0       0       0
  6704 ;;Total ram usage:       10 bytes
  6705 ;; Hardware stack levels used:    1
  6706 ;; Hardware stack levels required when called:    1
  6707 ;; This function calls:
  6708 ;;		Nothing
  6709 ;; This function is called by:
  6710 ;;		_init_USART
  6711 ;;		_get_temperature
  6712 ;;		_get_liters
  6713 ;; This function uses a non-reentrant model
  6714 ;;
  6715                           
  6716                           	psect	text27
  6717  001C38                     __ptext27:
  6718                           	callstack 0
  6719  001C38                     ___fltol:
  6720                           	callstack 0
  6721  001C38  FFFF               	dw	65535	; assembler added errata NOP
  6722  001C3A  3436               	rlcf	(___fltol@f1+2)^0,w,c
  6723  001C3C  3437               	rlcf	(___fltol@f1+3)^0,w,c
  6724  001C3E  6E3D               	movwf	___fltol@exp1^0,c
  6725  001C40  503D               	movf	___fltol@exp1^0,w,c
  6726  001C42  A4D8               	btfss	status,2,c
  6727  001C44  EF26  F00E         	goto	u2391
  6728  001C48  EF29  F00E         	goto	u2390
  6729  001C4C                     u2391:
  6730  001C4C  FFFF               	dw	65535	; assembler added errata NOP
  6731  001C4E  EF35  F00E         	goto	l2594
  6732  001C52                     u2390:
  6733  001C52  FFFF               	dw	65535	; assembler added errata NOP
  6734  001C54                     l2590:
  6735  001C54  FFFF               	dw	65535	; assembler added errata NOP
  6736  001C56  0E00               	movlw	0
  6737  001C58  6E34               	movwf	?___fltol^0,c
  6738  001C5A  0E00               	movlw	0
  6739  001C5C  6E35               	movwf	(?___fltol+1)^0,c
  6740  001C5E  0E00               	movlw	0
  6741  001C60  6E36               	movwf	(?___fltol+2)^0,c
  6742  001C62  0E00               	movlw	0
  6743  001C64  6E37               	movwf	(?___fltol+3)^0,c
  6744  001C66  EFB4  F00E         	goto	l696
  6745  001C6A                     l2594:
  6746  001C6A  FFFF               	dw	65535	; assembler added errata NOP
  6747  001C6C  C034  F038         	movff	___fltol@f1,??___fltol
  6748  001C70  C035  F039         	movff	___fltol@f1+1,??___fltol+1
  6749  001C74  C036  F03A         	movff	___fltol@f1+2,??___fltol+2
  6750  001C78  C037  F03B         	movff	___fltol@f1+3,??___fltol+3
  6751  001C7C  0E20               	movlw	32
  6752  001C7E  EF47  F00E         	goto	u2400
  6753  001C82                     u2405:
  6754  001C82  FFFF               	dw	65535	; assembler added errata NOP
  6755  001C84  90D8               	bcf	status,0,c
  6756  001C86  323B               	rrcf	(??___fltol+3)^0,f,c
  6757  001C88  323A               	rrcf	(??___fltol+2)^0,f,c
  6758  001C8A  3239               	rrcf	(??___fltol+1)^0,f,c
  6759  001C8C  3238               	rrcf	??___fltol^0,f,c
  6760  001C8E                     u2400:
  6761  001C8E  FFFF               	dw	65535	; assembler added errata NOP
  6762  001C90  2EE8               	decfsz	wreg,f,c
  6763  001C92  EF41  F00E         	goto	u2405
  6764  001C96  5038               	movf	??___fltol^0,w,c
  6765  001C98  6E3C               	movwf	___fltol@sign1^0,c
  6766  001C9A  8E36               	bsf	(___fltol@f1+2)^0,7,c
  6767  001C9C  0EFF               	movlw	255
  6768  001C9E  1634               	andwf	___fltol@f1^0,f,c
  6769  001CA0  0EFF               	movlw	255
  6770  001CA2  1635               	andwf	(___fltol@f1+1)^0,f,c
  6771  001CA4  0EFF               	movlw	255
  6772  001CA6  1636               	andwf	(___fltol@f1+2)^0,f,c
  6773  001CA8  0E00               	movlw	0
  6774  001CAA  1637               	andwf	(___fltol@f1+3)^0,f,c
  6775  001CAC  0E96               	movlw	150
  6776  001CAE  5E3D               	subwf	___fltol@exp1^0,f,c
  6777  001CB0  BE3D               	btfsc	___fltol@exp1^0,7,c
  6778  001CB2  EF60  F00E         	goto	u2410
  6779  001CB6  EF5D  F00E         	goto	u2411
  6780  001CBA                     u2411:
  6781  001CBA  FFFF               	dw	65535	; assembler added errata NOP
  6782  001CBC  EF7A  F00E         	goto	l2614
  6783  001CC0                     u2410:
  6784  001CC0  FFFF               	dw	65535	; assembler added errata NOP
  6785  001CC2  503D               	movf	___fltol@exp1^0,w,c
  6786  001CC4  0A80               	xorlw	128
  6787  001CC6  0F97               	addlw	151
  6788  001CC8  B0D8               	btfsc	status,0,c
  6789  001CCA  EF69  F00E         	goto	u2421
  6790  001CCE  EF6C  F00E         	goto	u2420
  6791  001CD2                     u2421:
  6792  001CD2  FFFF               	dw	65535	; assembler added errata NOP
  6793  001CD4  EF6F  F00E         	goto	l2610
  6794  001CD8                     u2420:
  6795  001CD8  FFFF               	dw	65535	; assembler added errata NOP
  6796  001CDA  EF2A  F00E         	goto	l2590
  6797  001CDE                     l2610:
  6798  001CDE  FFFF               	dw	65535	; assembler added errata NOP
  6799  001CE0  90D8               	bcf	status,0,c
  6800  001CE2  3237               	rrcf	(___fltol@f1+3)^0,f,c
  6801  001CE4  3236               	rrcf	(___fltol@f1+2)^0,f,c
  6802  001CE6  3235               	rrcf	(___fltol@f1+1)^0,f,c
  6803  001CE8  3234               	rrcf	___fltol@f1^0,f,c
  6804  001CEA  3E3D               	incfsz	___fltol@exp1^0,f,c
  6805  001CEC  EF6F  F00E         	goto	l2610
  6806  001CF0  EF98  F00E         	goto	l2624
  6807  001CF4                     l2614:
  6808  001CF4  FFFF               	dw	65535	; assembler added errata NOP
  6809  001CF6  0E1F               	movlw	31
  6810  001CF8  643D               	cpfsgt	___fltol@exp1^0,c
  6811  001CFA  EF81  F00E         	goto	u2431
  6812  001CFE  EF84  F00E         	goto	u2430
  6813  001D02                     u2431:
  6814  001D02  FFFF               	dw	65535	; assembler added errata NOP
  6815  001D04  EF8E  F00E         	goto	l2622
  6816  001D08                     u2430:
  6817  001D08  FFFF               	dw	65535	; assembler added errata NOP
  6818  001D0A  EF2A  F00E         	goto	l2590
  6819  001D0E                     l2620:
  6820  001D0E  FFFF               	dw	65535	; assembler added errata NOP
  6821  001D10  90D8               	bcf	status,0,c
  6822  001D12  3634               	rlcf	___fltol@f1^0,f,c
  6823  001D14  3635               	rlcf	(___fltol@f1+1)^0,f,c
  6824  001D16  3636               	rlcf	(___fltol@f1+2)^0,f,c
  6825  001D18  3637               	rlcf	(___fltol@f1+3)^0,f,c
  6826  001D1A  063D               	decf	___fltol@exp1^0,f,c
  6827  001D1C                     l2622:
  6828  001D1C  FFFF               	dw	65535	; assembler added errata NOP
  6829  001D1E  503D               	movf	___fltol@exp1^0,w,c
  6830  001D20  A4D8               	btfss	status,2,c
  6831  001D22  EF95  F00E         	goto	u2441
  6832  001D26  EF98  F00E         	goto	u2440
  6833  001D2A                     u2441:
  6834  001D2A  FFFF               	dw	65535	; assembler added errata NOP
  6835  001D2C  EF87  F00E         	goto	l2620
  6836  001D30                     u2440:
  6837  001D30                     l2624:
  6838  001D30  FFFF               	dw	65535	; assembler added errata NOP
  6839  001D32  503C               	movf	___fltol@sign1^0,w,c
  6840  001D34  B4D8               	btfsc	status,2,c
  6841  001D36  EF9F  F00E         	goto	u2451
  6842  001D3A  EFA2  F00E         	goto	u2450
  6843  001D3E                     u2451:
  6844  001D3E  FFFF               	dw	65535	; assembler added errata NOP
  6845  001D40  EFAB  F00E         	goto	l2628
  6846  001D44                     u2450:
  6847  001D44  FFFF               	dw	65535	; assembler added errata NOP
  6848  001D46  1E37               	comf	(___fltol@f1+3)^0,f,c
  6849  001D48  1E36               	comf	(___fltol@f1+2)^0,f,c
  6850  001D4A  1E35               	comf	(___fltol@f1+1)^0,f,c
  6851  001D4C  6C34               	negf	___fltol@f1^0,c
  6852  001D4E  0E00               	movlw	0
  6853  001D50  2235               	addwfc	(___fltol@f1+1)^0,f,c
  6854  001D52  2236               	addwfc	(___fltol@f1+2)^0,f,c
  6855  001D54  2237               	addwfc	(___fltol@f1+3)^0,f,c
  6856  001D56                     l2628:
  6857  001D56  FFFF               	dw	65535	; assembler added errata NOP
  6858  001D58  C034  F034         	movff	___fltol@f1,?___fltol
  6859  001D5C  C035  F035         	movff	___fltol@f1+1,?___fltol+1
  6860  001D60  C036  F036         	movff	___fltol@f1+2,?___fltol+2
  6861  001D64  C037  F037         	movff	___fltol@f1+3,?___fltol+3
  6862  001D68                     l696:
  6863  001D68  FFFF               	dw	65535	; assembler added errata NOP
  6864  001D6A  0012               	return		;funcret
  6865  001D6C  FFFF               	dw	65535	; errata NOP
  6866  001D6E                     __end_of___fltol:
  6867                           	callstack 0
  6868                           
  6869 ;; *************** function ___flmul *****************
  6870 ;; Defined at:
  6871 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
  6872 ;; Parameters:    Size  Location     Type
  6873 ;;  b               4   26[COMRAM] long 
  6874 ;;  a               4   30[COMRAM] long 
  6875 ;; Auto vars:     Size  Location     Type
  6876 ;;  prod            4   45[COMRAM] struct .
  6877 ;;  grs             4   39[COMRAM] unsigned long 
  6878 ;;  temp            2   49[COMRAM] struct .
  6879 ;;  bexp            1   44[COMRAM] unsigned char 
  6880 ;;  aexp            1   43[COMRAM] unsigned char 
  6881 ;;  sign            1   38[COMRAM] unsigned char 
  6882 ;; Return value:  Size  Location     Type
  6883 ;;                  4   26[COMRAM] unsigned char 
  6884 ;; Registers used:
  6885 ;;		wreg, status,2, status,0, prodl, prodh
  6886 ;; Tracked objects:
  6887 ;;		On entry : 0/0
  6888 ;;		On exit  : 0/0
  6889 ;;		Unchanged: 0/0
  6890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6891 ;;      Params:         8       0       0       0       0       0       0
  6892 ;;      Locals:        13       0       0       0       0       0       0
  6893 ;;      Temps:          4       0       0       0       0       0       0
  6894 ;;      Totals:        25       0       0       0       0       0       0
  6895 ;;Total ram usage:       25 bytes
  6896 ;; Hardware stack levels used:    1
  6897 ;; Hardware stack levels required when called:    1
  6898 ;; This function calls:
  6899 ;;		Nothing
  6900 ;; This function is called by:
  6901 ;;		_get_temperature
  6902 ;;		_get_liters
  6903 ;;		_roundf
  6904 ;; This function uses a non-reentrant model
  6905 ;;
  6906                           
  6907                           	psect	text28
  6908  001048                     __ptext28:
  6909                           	callstack 0
  6910  001048                     ___flmul:
  6911                           	callstack 0
  6912  001048  FFFF               	dw	65535	; assembler added errata NOP
  6913  00104A  501E               	movf	(___flmul@b+3)^0,w,c
  6914  00104C  0B80               	andlw	128
  6915  00104E  6E27               	movwf	___flmul@sign^0,c
  6916  001050  501E               	movf	(___flmul@b+3)^0,w,c
  6917  001052  241E               	addwf	(___flmul@b+3)^0,w,c
  6918  001054  6E2D               	movwf	___flmul@bexp^0,c
  6919  001056  AE1D               	btfss	(___flmul@b+2)^0,7,c
  6920  001058  EF30  F008         	goto	u2141
  6921  00105C  EF33  F008         	goto	u2140
  6922  001060                     u2141:
  6923  001060  FFFF               	dw	65535	; assembler added errata NOP
  6924  001062  EF35  F008         	goto	l2428
  6925  001066                     u2140:
  6926  001066  FFFF               	dw	65535	; assembler added errata NOP
  6927  001068  802D               	bsf	___flmul@bexp^0,0,c
  6928  00106A                     l2428:
  6929  00106A  FFFF               	dw	65535	; assembler added errata NOP
  6930  00106C  502D               	movf	___flmul@bexp^0,w,c
  6931  00106E  B4D8               	btfsc	status,2,c
  6932  001070  EF3C  F008         	goto	u2151
  6933  001074  EF3F  F008         	goto	u2150
  6934  001078                     u2151:
  6935  001078  FFFF               	dw	65535	; assembler added errata NOP
  6936  00107A  EF56  F008         	goto	l2436
  6937  00107E                     u2150:
  6938  00107E  FFFF               	dw	65535	; assembler added errata NOP
  6939  001080  282D               	incf	___flmul@bexp^0,w,c
  6940  001082  A4D8               	btfss	status,2,c
  6941  001084  EF46  F008         	goto	u2161
  6942  001088  EF49  F008         	goto	u2160
  6943  00108C                     u2161:
  6944  00108C  FFFF               	dw	65535	; assembler added errata NOP
  6945  00108E  EF52  F008         	goto	l2434
  6946  001092                     u2160:
  6947  001092  FFFF               	dw	65535	; assembler added errata NOP
  6948  001094  0E00               	movlw	0
  6949  001096  6E1B               	movwf	___flmul@b^0,c
  6950  001098  0E00               	movlw	0
  6951  00109A  6E1C               	movwf	(___flmul@b+1)^0,c
  6952  00109C  0E00               	movlw	0
  6953  00109E  6E1D               	movwf	(___flmul@b+2)^0,c
  6954  0010A0  0E00               	movlw	0
  6955  0010A2  6E1E               	movwf	(___flmul@b+3)^0,c
  6956  0010A4                     l2434:
  6957  0010A4  FFFF               	dw	65535	; assembler added errata NOP
  6958  0010A6  8E1D               	bsf	(___flmul@b+2)^0,7,c
  6959  0010A8  EF5F  F008         	goto	l2438
  6960  0010AC                     l2436:
  6961  0010AC  FFFF               	dw	65535	; assembler added errata NOP
  6962  0010AE  0E00               	movlw	0
  6963  0010B0  6E1B               	movwf	___flmul@b^0,c
  6964  0010B2  0E00               	movlw	0
  6965  0010B4  6E1C               	movwf	(___flmul@b+1)^0,c
  6966  0010B6  0E00               	movlw	0
  6967  0010B8  6E1D               	movwf	(___flmul@b+2)^0,c
  6968  0010BA  0E00               	movlw	0
  6969  0010BC  6E1E               	movwf	(___flmul@b+3)^0,c
  6970  0010BE                     l2438:
  6971  0010BE  FFFF               	dw	65535	; assembler added errata NOP
  6972  0010C0  5022               	movf	(___flmul@a+3)^0,w,c
  6973  0010C2  0B80               	andlw	128
  6974  0010C4  1A27               	xorwf	___flmul@sign^0,f,c
  6975  0010C6  5022               	movf	(___flmul@a+3)^0,w,c
  6976  0010C8  2422               	addwf	(___flmul@a+3)^0,w,c
  6977  0010CA  6E2C               	movwf	___flmul@aexp^0,c
  6978  0010CC  AE21               	btfss	(___flmul@a+2)^0,7,c
  6979  0010CE  EF6B  F008         	goto	u2171
  6980  0010D2  EF6E  F008         	goto	u2170
  6981  0010D6                     u2171:
  6982  0010D6  FFFF               	dw	65535	; assembler added errata NOP
  6983  0010D8  EF70  F008         	goto	l2446
  6984  0010DC                     u2170:
  6985  0010DC  FFFF               	dw	65535	; assembler added errata NOP
  6986  0010DE  802C               	bsf	___flmul@aexp^0,0,c
  6987  0010E0                     l2446:
  6988  0010E0  FFFF               	dw	65535	; assembler added errata NOP
  6989  0010E2  502C               	movf	___flmul@aexp^0,w,c
  6990  0010E4  B4D8               	btfsc	status,2,c
  6991  0010E6  EF77  F008         	goto	u2181
  6992  0010EA  EF7A  F008         	goto	u2180
  6993  0010EE                     u2181:
  6994  0010EE  FFFF               	dw	65535	; assembler added errata NOP
  6995  0010F0  EF91  F008         	goto	l2454
  6996  0010F4                     u2180:
  6997  0010F4  FFFF               	dw	65535	; assembler added errata NOP
  6998  0010F6  282C               	incf	___flmul@aexp^0,w,c
  6999  0010F8  A4D8               	btfss	status,2,c
  7000  0010FA  EF81  F008         	goto	u2191
  7001  0010FE  EF84  F008         	goto	u2190
  7002  001102                     u2191:
  7003  001102  FFFF               	dw	65535	; assembler added errata NOP
  7004  001104  EF8D  F008         	goto	l2452
  7005  001108                     u2190:
  7006  001108  FFFF               	dw	65535	; assembler added errata NOP
  7007  00110A  0E00               	movlw	0
  7008  00110C  6E1F               	movwf	___flmul@a^0,c
  7009  00110E  0E00               	movlw	0
  7010  001110  6E20               	movwf	(___flmul@a+1)^0,c
  7011  001112  0E00               	movlw	0
  7012  001114  6E21               	movwf	(___flmul@a+2)^0,c
  7013  001116  0E00               	movlw	0
  7014  001118  6E22               	movwf	(___flmul@a+3)^0,c
  7015  00111A                     l2452:
  7016  00111A  FFFF               	dw	65535	; assembler added errata NOP
  7017  00111C  8E21               	bsf	(___flmul@a+2)^0,7,c
  7018  00111E  EF9A  F008         	goto	l1013
  7019  001122                     l2454:
  7020  001122  FFFF               	dw	65535	; assembler added errata NOP
  7021  001124  0E00               	movlw	0
  7022  001126  6E1F               	movwf	___flmul@a^0,c
  7023  001128  0E00               	movlw	0
  7024  00112A  6E20               	movwf	(___flmul@a+1)^0,c
  7025  00112C  0E00               	movlw	0
  7026  00112E  6E21               	movwf	(___flmul@a+2)^0,c
  7027  001130  0E00               	movlw	0
  7028  001132  6E22               	movwf	(___flmul@a+3)^0,c
  7029  001134                     l1013:
  7030  001134  FFFF               	dw	65535	; assembler added errata NOP
  7031  001136  502C               	movf	___flmul@aexp^0,w,c
  7032  001138  B4D8               	btfsc	status,2,c
  7033  00113A  EFA1  F008         	goto	u2201
  7034  00113E  EFA4  F008         	goto	u2200
  7035  001142                     u2201:
  7036  001142  FFFF               	dw	65535	; assembler added errata NOP
  7037  001144  EFAE  F008         	goto	l2458
  7038  001148                     u2200:
  7039  001148  FFFF               	dw	65535	; assembler added errata NOP
  7040  00114A  502D               	movf	___flmul@bexp^0,w,c
  7041  00114C  A4D8               	btfss	status,2,c
  7042  00114E  EFAB  F008         	goto	u2211
  7043  001152  EFAE  F008         	goto	u2210
  7044  001156                     u2211:
  7045  001156  FFFF               	dw	65535	; assembler added errata NOP
  7046  001158  EFB9  F008         	goto	l2462
  7047  00115C                     u2210:
  7048  00115C                     l2458:
  7049  00115C  FFFF               	dw	65535	; assembler added errata NOP
  7050  00115E  0E00               	movlw	0
  7051  001160  6E1B               	movwf	?___flmul^0,c
  7052  001162  0E00               	movlw	0
  7053  001164  6E1C               	movwf	(?___flmul+1)^0,c
  7054  001166  0E00               	movlw	0
  7055  001168  6E1D               	movwf	(?___flmul+2)^0,c
  7056  00116A  0E00               	movlw	0
  7057  00116C  6E1E               	movwf	(?___flmul+3)^0,c
  7058  00116E  EF73  F00A         	goto	l1017
  7059  001172                     l2462:
  7060  001172  FFFF               	dw	65535	; assembler added errata NOP
  7061  001174  5021               	movf	(___flmul@a+2)^0,w,c
  7062  001176  021B               	mulwf	___flmul@b^0,c
  7063  001178  CFF3 F032          	movff	prodl,___flmul@temp
  7064  00117C  CFF4 F033          	movff	prodh,___flmul@temp+1
  7065  001180  5032               	movf	___flmul@temp^0,w,c
  7066  001182  6E28               	movwf	___flmul@grs^0,c
  7067  001184  6A29               	clrf	(___flmul@grs+1)^0,c
  7068  001186  6A2A               	clrf	(___flmul@grs+2)^0,c
  7069  001188  6A2B               	clrf	(___flmul@grs+3)^0,c
  7070  00118A  5033               	movf	(___flmul@temp+1)^0,w,c
  7071  00118C  6E2E               	movwf	___flmul@prod^0,c
  7072  00118E  6A2F               	clrf	(___flmul@prod+1)^0,c
  7073  001190  6A30               	clrf	(___flmul@prod+2)^0,c
  7074  001192  6A31               	clrf	(___flmul@prod+3)^0,c
  7075  001194  5020               	movf	(___flmul@a+1)^0,w,c
  7076  001196  021C               	mulwf	(___flmul@b+1)^0,c
  7077  001198  CFF3 F032          	movff	prodl,___flmul@temp
  7078  00119C  CFF4 F033          	movff	prodh,___flmul@temp+1
  7079  0011A0  5032               	movf	___flmul@temp^0,w,c
  7080  0011A2  2628               	addwf	___flmul@grs^0,f,c
  7081  0011A4  0E00               	movlw	0
  7082  0011A6  2229               	addwfc	(___flmul@grs+1)^0,f,c
  7083  0011A8  222A               	addwfc	(___flmul@grs+2)^0,f,c
  7084  0011AA  222B               	addwfc	(___flmul@grs+3)^0,f,c
  7085  0011AC  5033               	movf	(___flmul@temp+1)^0,w,c
  7086  0011AE  262E               	addwf	___flmul@prod^0,f,c
  7087  0011B0  0E00               	movlw	0
  7088  0011B2  222F               	addwfc	(___flmul@prod+1)^0,f,c
  7089  0011B4  2230               	addwfc	(___flmul@prod+2)^0,f,c
  7090  0011B6  2231               	addwfc	(___flmul@prod+3)^0,f,c
  7091  0011B8  501F               	movf	___flmul@a^0,w,c
  7092  0011BA  021D               	mulwf	(___flmul@b+2)^0,c
  7093  0011BC  CFF3 F032          	movff	prodl,___flmul@temp
  7094  0011C0  CFF4 F033          	movff	prodh,___flmul@temp+1
  7095  0011C4  5032               	movf	___flmul@temp^0,w,c
  7096  0011C6  2628               	addwf	___flmul@grs^0,f,c
  7097  0011C8  0E00               	movlw	0
  7098  0011CA  2229               	addwfc	(___flmul@grs+1)^0,f,c
  7099  0011CC  222A               	addwfc	(___flmul@grs+2)^0,f,c
  7100  0011CE  222B               	addwfc	(___flmul@grs+3)^0,f,c
  7101  0011D0  5033               	movf	(___flmul@temp+1)^0,w,c
  7102  0011D2  262E               	addwf	___flmul@prod^0,f,c
  7103  0011D4  0E00               	movlw	0
  7104  0011D6  222F               	addwfc	(___flmul@prod+1)^0,f,c
  7105  0011D8  2230               	addwfc	(___flmul@prod+2)^0,f,c
  7106  0011DA  2231               	addwfc	(___flmul@prod+3)^0,f,c
  7107  0011DC  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
  7108  0011E0  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
  7109  0011E4  C028  F029         	movff	___flmul@grs,___flmul@grs+1
  7110  0011E8  6A28               	clrf	___flmul@grs^0,c
  7111  0011EA  501F               	movf	___flmul@a^0,w,c
  7112  0011EC  021C               	mulwf	(___flmul@b+1)^0,c
  7113  0011EE  CFF3 F032          	movff	prodl,___flmul@temp
  7114  0011F2  CFF4 F033          	movff	prodh,___flmul@temp+1
  7115  0011F6  5032               	movf	___flmul@temp^0,w,c
  7116  0011F8  2628               	addwf	___flmul@grs^0,f,c
  7117  0011FA  5033               	movf	(___flmul@temp+1)^0,w,c
  7118  0011FC  2229               	addwfc	(___flmul@grs+1)^0,f,c
  7119  0011FE  0E00               	movlw	0
  7120  001200  222A               	addwfc	(___flmul@grs+2)^0,f,c
  7121  001202  0E00               	movlw	0
  7122  001204  222B               	addwfc	(___flmul@grs+3)^0,f,c
  7123  001206  5020               	movf	(___flmul@a+1)^0,w,c
  7124  001208  021B               	mulwf	___flmul@b^0,c
  7125  00120A  CFF3 F032          	movff	prodl,___flmul@temp
  7126  00120E  CFF4 F033          	movff	prodh,___flmul@temp+1
  7127  001212  5032               	movf	___flmul@temp^0,w,c
  7128  001214  2628               	addwf	___flmul@grs^0,f,c
  7129  001216  5033               	movf	(___flmul@temp+1)^0,w,c
  7130  001218  2229               	addwfc	(___flmul@grs+1)^0,f,c
  7131  00121A  0E00               	movlw	0
  7132  00121C  222A               	addwfc	(___flmul@grs+2)^0,f,c
  7133  00121E  0E00               	movlw	0
  7134  001220  222B               	addwfc	(___flmul@grs+3)^0,f,c
  7135  001222  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
  7136  001226  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
  7137  00122A  C028  F029         	movff	___flmul@grs,___flmul@grs+1
  7138  00122E  6A28               	clrf	___flmul@grs^0,c
  7139  001230  501F               	movf	___flmul@a^0,w,c
  7140  001232  021B               	mulwf	___flmul@b^0,c
  7141  001234  CFF3 F032          	movff	prodl,___flmul@temp
  7142  001238  CFF4 F033          	movff	prodh,___flmul@temp+1
  7143  00123C  5032               	movf	___flmul@temp^0,w,c
  7144  00123E  2628               	addwf	___flmul@grs^0,f,c
  7145  001240  5033               	movf	(___flmul@temp+1)^0,w,c
  7146  001242  2229               	addwfc	(___flmul@grs+1)^0,f,c
  7147  001244  0E00               	movlw	0
  7148  001246  222A               	addwfc	(___flmul@grs+2)^0,f,c
  7149  001248  0E00               	movlw	0
  7150  00124A  222B               	addwfc	(___flmul@grs+3)^0,f,c
  7151  00124C  5021               	movf	(___flmul@a+2)^0,w,c
  7152  00124E  021C               	mulwf	(___flmul@b+1)^0,c
  7153  001250  CFF3 F032          	movff	prodl,___flmul@temp
  7154  001254  CFF4 F033          	movff	prodh,___flmul@temp+1
  7155  001258  5032               	movf	___flmul@temp^0,w,c
  7156  00125A  262E               	addwf	___flmul@prod^0,f,c
  7157  00125C  5033               	movf	(___flmul@temp+1)^0,w,c
  7158  00125E  222F               	addwfc	(___flmul@prod+1)^0,f,c
  7159  001260  0E00               	movlw	0
  7160  001262  2230               	addwfc	(___flmul@prod+2)^0,f,c
  7161  001264  0E00               	movlw	0
  7162  001266  2231               	addwfc	(___flmul@prod+3)^0,f,c
  7163  001268  5020               	movf	(___flmul@a+1)^0,w,c
  7164  00126A  021D               	mulwf	(___flmul@b+2)^0,c
  7165  00126C  CFF3 F032          	movff	prodl,___flmul@temp
  7166  001270  CFF4 F033          	movff	prodh,___flmul@temp+1
  7167  001274  5032               	movf	___flmul@temp^0,w,c
  7168  001276  262E               	addwf	___flmul@prod^0,f,c
  7169  001278  5033               	movf	(___flmul@temp+1)^0,w,c
  7170  00127A  222F               	addwfc	(___flmul@prod+1)^0,f,c
  7171  00127C  0E00               	movlw	0
  7172  00127E  2230               	addwfc	(___flmul@prod+2)^0,f,c
  7173  001280  0E00               	movlw	0
  7174  001282  2231               	addwfc	(___flmul@prod+3)^0,f,c
  7175  001284  5021               	movf	(___flmul@a+2)^0,w,c
  7176  001286  021D               	mulwf	(___flmul@b+2)^0,c
  7177  001288  CFF3 F032          	movff	prodl,___flmul@temp
  7178  00128C  CFF4 F033          	movff	prodh,___flmul@temp+1
  7179  001290  5032               	movf	___flmul@temp^0,w,c
  7180  001292  6E23               	movwf	??___flmul^0,c
  7181  001294  5033               	movf	(___flmul@temp+1)^0,w,c
  7182  001296  6E24               	movwf	(??___flmul+1)^0,c
  7183  001298  6A25               	clrf	(??___flmul+2)^0,c
  7184  00129A  6A26               	clrf	(??___flmul+3)^0,c
  7185  00129C  C025  F026         	movff	??___flmul+2,??___flmul+3
  7186  0012A0  C024  F025         	movff	??___flmul+1,??___flmul+2
  7187  0012A4  C023  F024         	movff	??___flmul,??___flmul+1
  7188  0012A8  6A23               	clrf	??___flmul^0,c
  7189  0012AA  5023               	movf	??___flmul^0,w,c
  7190  0012AC  262E               	addwf	___flmul@prod^0,f,c
  7191  0012AE  5024               	movf	(??___flmul+1)^0,w,c
  7192  0012B0  222F               	addwfc	(___flmul@prod+1)^0,f,c
  7193  0012B2  5025               	movf	(??___flmul+2)^0,w,c
  7194  0012B4  2230               	addwfc	(___flmul@prod+2)^0,f,c
  7195  0012B6  5026               	movf	(??___flmul+3)^0,w,c
  7196  0012B8  2231               	addwfc	(___flmul@prod+3)^0,f,c
  7197  0012BA  C028  F023         	movff	___flmul@grs,??___flmul
  7198  0012BE  C029  F024         	movff	___flmul@grs+1,??___flmul+1
  7199  0012C2  C02A  F025         	movff	___flmul@grs+2,??___flmul+2
  7200  0012C6  C02B  F026         	movff	___flmul@grs+3,??___flmul+3
  7201  0012CA  0E19               	movlw	25
  7202  0012CC  EF6E  F009         	goto	u2220
  7203  0012D0                     u2225:
  7204  0012D0  FFFF               	dw	65535	; assembler added errata NOP
  7205  0012D2  90D8               	bcf	status,0,c
  7206  0012D4  3226               	rrcf	(??___flmul+3)^0,f,c
  7207  0012D6  3225               	rrcf	(??___flmul+2)^0,f,c
  7208  0012D8  3224               	rrcf	(??___flmul+1)^0,f,c
  7209  0012DA  3223               	rrcf	??___flmul^0,f,c
  7210  0012DC                     u2220:
  7211  0012DC  FFFF               	dw	65535	; assembler added errata NOP
  7212  0012DE  2EE8               	decfsz	wreg,f,c
  7213  0012E0  EF68  F009         	goto	u2225
  7214  0012E4  5023               	movf	??___flmul^0,w,c
  7215  0012E6  262E               	addwf	___flmul@prod^0,f,c
  7216  0012E8  5024               	movf	(??___flmul+1)^0,w,c
  7217  0012EA  222F               	addwfc	(___flmul@prod+1)^0,f,c
  7218  0012EC  5025               	movf	(??___flmul+2)^0,w,c
  7219  0012EE  2230               	addwfc	(___flmul@prod+2)^0,f,c
  7220  0012F0  5026               	movf	(??___flmul+3)^0,w,c
  7221  0012F2  2231               	addwfc	(___flmul@prod+3)^0,f,c
  7222  0012F4  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
  7223  0012F8  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
  7224  0012FC  C028  F029         	movff	___flmul@grs,___flmul@grs+1
  7225  001300  6A28               	clrf	___flmul@grs^0,c
  7226  001302  502C               	movf	___flmul@aexp^0,w,c
  7227  001304  C02D  F023         	movff	___flmul@bexp,??___flmul
  7228  001308  6A24               	clrf	(??___flmul+1)^0,c
  7229  00130A  2623               	addwf	??___flmul^0,f,c
  7230  00130C  0E00               	movlw	0
  7231  00130E  2224               	addwfc	(??___flmul+1)^0,f,c
  7232  001310  0E82               	movlw	130
  7233  001312  2423               	addwf	??___flmul^0,w,c
  7234  001314  6E32               	movwf	___flmul@temp^0,c
  7235  001316  0EFF               	movlw	255
  7236  001318  2024               	addwfc	(??___flmul+1)^0,w,c
  7237  00131A  6E33               	movwf	(___flmul@temp+1)^0,c
  7238  00131C  EFA9  F009         	goto	l2510
  7239  001320                     l2504:
  7240  001320  FFFF               	dw	65535	; assembler added errata NOP
  7241  001322  90D8               	bcf	status,0,c
  7242  001324  362E               	rlcf	___flmul@prod^0,f,c
  7243  001326  362F               	rlcf	(___flmul@prod+1)^0,f,c
  7244  001328  3630               	rlcf	(___flmul@prod+2)^0,f,c
  7245  00132A  3631               	rlcf	(___flmul@prod+3)^0,f,c
  7246  00132C  AE2B               	btfss	(___flmul@grs+3)^0,7,c
  7247  00132E  EF9B  F009         	goto	u2231
  7248  001332  EF9E  F009         	goto	u2230
  7249  001336                     u2231:
  7250  001336  FFFF               	dw	65535	; assembler added errata NOP
  7251  001338  EFA0  F009         	goto	l1020
  7252  00133C                     u2230:
  7253  00133C  FFFF               	dw	65535	; assembler added errata NOP
  7254  00133E  802E               	bsf	___flmul@prod^0,0,c
  7255  001340                     l1020:
  7256  001340  FFFF               	dw	65535	; assembler added errata NOP
  7257  001342  90D8               	bcf	status,0,c
  7258  001344  3628               	rlcf	___flmul@grs^0,f,c
  7259  001346  3629               	rlcf	(___flmul@grs+1)^0,f,c
  7260  001348  362A               	rlcf	(___flmul@grs+2)^0,f,c
  7261  00134A  362B               	rlcf	(___flmul@grs+3)^0,f,c
  7262  00134C  0632               	decf	___flmul@temp^0,f,c
  7263  00134E  A0D8               	btfss	status,0,c
  7264  001350  0633               	decf	(___flmul@temp+1)^0,f,c
  7265  001352                     l2510:
  7266  001352  FFFF               	dw	65535	; assembler added errata NOP
  7267  001354  AE30               	btfss	(___flmul@prod+2)^0,7,c
  7268  001356  EFAF  F009         	goto	u2241
  7269  00135A  EFB2  F009         	goto	u2240
  7270  00135E                     u2241:
  7271  00135E  FFFF               	dw	65535	; assembler added errata NOP
  7272  001360  EF90  F009         	goto	l2504
  7273  001364                     u2240:
  7274  001364  FFFF               	dw	65535	; assembler added errata NOP
  7275  001366  0E00               	movlw	0
  7276  001368  6E2C               	movwf	___flmul@aexp^0,c
  7277  00136A  AE2B               	btfss	(___flmul@grs+3)^0,7,c
  7278  00136C  EFBA  F009         	goto	u2251
  7279  001370  EFBD  F009         	goto	u2250
  7280  001374                     u2251:
  7281  001374  FFFF               	dw	65535	; assembler added errata NOP
  7282  001376  EFE8  F009         	goto	l1022
  7283  00137A                     u2250:
  7284  00137A  FFFF               	dw	65535	; assembler added errata NOP
  7285  00137C  0EFF               	movlw	255
  7286  00137E  1428               	andwf	___flmul@grs^0,w,c
  7287  001380  6E23               	movwf	??___flmul^0,c
  7288  001382  0EFF               	movlw	255
  7289  001384  1429               	andwf	(___flmul@grs+1)^0,w,c
  7290  001386  6E24               	movwf	(??___flmul+1)^0,c
  7291  001388  0EFF               	movlw	255
  7292  00138A  142A               	andwf	(___flmul@grs+2)^0,w,c
  7293  00138C  6E25               	movwf	(??___flmul+2)^0,c
  7294  00138E  0E7F               	movlw	127
  7295  001390  142B               	andwf	(___flmul@grs+3)^0,w,c
  7296  001392  6E26               	movwf	(??___flmul+3)^0,c
  7297  001394  5023               	movf	??___flmul^0,w,c
  7298  001396  1024               	iorwf	(??___flmul+1)^0,w,c
  7299  001398  1025               	iorwf	(??___flmul+2)^0,w,c
  7300  00139A  1026               	iorwf	(??___flmul+3)^0,w,c
  7301  00139C  B4D8               	btfsc	status,2,c
  7302  00139E  EFD3  F009         	goto	u2261
  7303  0013A2  EFD6  F009         	goto	u2260
  7304  0013A6                     u2261:
  7305  0013A6  FFFF               	dw	65535	; assembler added errata NOP
  7306  0013A8  EFDC  F009         	goto	l1023
  7307  0013AC                     u2260:
  7308  0013AC  FFFF               	dw	65535	; assembler added errata NOP
  7309  0013AE                     l2518:
  7310  0013AE  FFFF               	dw	65535	; assembler added errata NOP
  7311  0013B0  0E01               	movlw	1
  7312  0013B2  6E2C               	movwf	___flmul@aexp^0,c
  7313  0013B4  EFE8  F009         	goto	l1022
  7314  0013B8                     l1023:
  7315  0013B8  FFFF               	dw	65535	; assembler added errata NOP
  7316  0013BA  A02E               	btfss	___flmul@prod^0,0,c
  7317  0013BC  EFE2  F009         	goto	u2271
  7318  0013C0  EFE5  F009         	goto	u2270
  7319  0013C4                     u2271:
  7320  0013C4  FFFF               	dw	65535	; assembler added errata NOP
  7321  0013C6  EFE8  F009         	goto	l1022
  7322  0013CA                     u2270:
  7323  0013CA  FFFF               	dw	65535	; assembler added errata NOP
  7324  0013CC  EFD7  F009         	goto	l2518
  7325  0013D0                     l1022:
  7326  0013D0  FFFF               	dw	65535	; assembler added errata NOP
  7327  0013D2  502C               	movf	___flmul@aexp^0,w,c
  7328  0013D4  B4D8               	btfsc	status,2,c
  7329  0013D6  EFEF  F009         	goto	u2281
  7330  0013DA  EFF2  F009         	goto	u2280
  7331  0013DE                     u2281:
  7332  0013DE  FFFF               	dw	65535	; assembler added errata NOP
  7333  0013E0  EF19  F00A         	goto	l2530
  7334  0013E4                     u2280:
  7335  0013E4  FFFF               	dw	65535	; assembler added errata NOP
  7336  0013E6  0E01               	movlw	1
  7337  0013E8  262E               	addwf	___flmul@prod^0,f,c
  7338  0013EA  0E00               	movlw	0
  7339  0013EC  222F               	addwfc	(___flmul@prod+1)^0,f,c
  7340  0013EE  2230               	addwfc	(___flmul@prod+2)^0,f,c
  7341  0013F0  2231               	addwfc	(___flmul@prod+3)^0,f,c
  7342  0013F2  A031               	btfss	(___flmul@prod+3)^0,0,c
  7343  0013F4  EFFE  F009         	goto	u2291
  7344  0013F8  EF01  F00A         	goto	u2290
  7345  0013FC                     u2291:
  7346  0013FC  FFFF               	dw	65535	; assembler added errata NOP
  7347  0013FE  EF19  F00A         	goto	l2530
  7348  001402                     u2290:
  7349  001402  FFFF               	dw	65535	; assembler added errata NOP
  7350  001404  C02E  F023         	movff	___flmul@prod,??___flmul
  7351  001408  C02F  F024         	movff	___flmul@prod+1,??___flmul+1
  7352  00140C  C030  F025         	movff	___flmul@prod+2,??___flmul+2
  7353  001410  C031  F026         	movff	___flmul@prod+3,??___flmul+3
  7354  001414  3426               	rlcf	(??___flmul+3)^0,w,c
  7355  001416  3226               	rrcf	(??___flmul+3)^0,f,c
  7356  001418  3225               	rrcf	(??___flmul+2)^0,f,c
  7357  00141A  3224               	rrcf	(??___flmul+1)^0,f,c
  7358  00141C  3223               	rrcf	??___flmul^0,f,c
  7359  00141E  C023  F02E         	movff	??___flmul,___flmul@prod
  7360  001422  C024  F02F         	movff	??___flmul+1,___flmul@prod+1
  7361  001426  C025  F030         	movff	??___flmul+2,___flmul@prod+2
  7362  00142A  C026  F031         	movff	??___flmul+3,___flmul@prod+3
  7363  00142E  4A32               	infsnz	___flmul@temp^0,f,c
  7364  001430  2A33               	incf	(___flmul@temp+1)^0,f,c
  7365  001432                     l2530:
  7366  001432  FFFF               	dw	65535	; assembler added errata NOP
  7367  001434  BE33               	btfsc	(___flmul@temp+1)^0,7,c
  7368  001436  EF25  F00A         	goto	u2301
  7369  00143A  5033               	movf	(___flmul@temp+1)^0,w,c
  7370  00143C  E109               	bnz	u2300
  7371  00143E  2832               	incf	___flmul@temp^0,w,c
  7372  001440  A0D8               	btfss	status,0,c
  7373  001442  EF25  F00A         	goto	u2301
  7374  001446  EF28  F00A         	goto	u2300
  7375  00144A                     u2301:
  7376  00144A  FFFF               	dw	65535	; assembler added errata NOP
  7377  00144C  EF33  F00A         	goto	l2534
  7378  001450                     u2300:
  7379  001450  FFFF               	dw	65535	; assembler added errata NOP
  7380  001452  0E00               	movlw	0
  7381  001454  6E2E               	movwf	___flmul@prod^0,c
  7382  001456  0E00               	movlw	0
  7383  001458  6E2F               	movwf	(___flmul@prod+1)^0,c
  7384  00145A  0E80               	movlw	128
  7385  00145C  6E30               	movwf	(___flmul@prod+2)^0,c
  7386  00145E  0E7F               	movlw	127
  7387  001460  6E31               	movwf	(___flmul@prod+3)^0,c
  7388  001462  EF68  F00A         	goto	l2546
  7389  001466                     l2534:
  7390  001466  FFFF               	dw	65535	; assembler added errata NOP
  7391  001468  BE33               	btfsc	(___flmul@temp+1)^0,7,c
  7392  00146A  EF42  F00A         	goto	u2310
  7393  00146E  5033               	movf	(___flmul@temp+1)^0,w,c
  7394  001470  E106               	bnz	u2311
  7395  001472  0432               	decf	___flmul@temp^0,w,c
  7396  001474  B0D8               	btfsc	status,0,c
  7397  001476  EF3F  F00A         	goto	u2311
  7398  00147A  EF42  F00A         	goto	u2310
  7399  00147E                     u2311:
  7400  00147E  FFFF               	dw	65535	; assembler added errata NOP
  7401  001480  EF4F  F00A         	goto	l1030
  7402  001484                     u2310:
  7403  001484  FFFF               	dw	65535	; assembler added errata NOP
  7404  001486  0E00               	movlw	0
  7405  001488  6E2E               	movwf	___flmul@prod^0,c
  7406  00148A  0E00               	movlw	0
  7407  00148C  6E2F               	movwf	(___flmul@prod+1)^0,c
  7408  00148E  0E00               	movlw	0
  7409  001490  6E30               	movwf	(___flmul@prod+2)^0,c
  7410  001492  0E00               	movlw	0
  7411  001494  6E31               	movwf	(___flmul@prod+3)^0,c
  7412  001496  0E00               	movlw	0
  7413  001498  6E27               	movwf	___flmul@sign^0,c
  7414  00149A  EF68  F00A         	goto	l2546
  7415  00149E                     l1030:
  7416  00149E  FFFF               	dw	65535	; assembler added errata NOP
  7417  0014A0  C032  F02D         	movff	___flmul@temp,___flmul@bexp
  7418  0014A4  0EFF               	movlw	255
  7419  0014A6  162E               	andwf	___flmul@prod^0,f,c
  7420  0014A8  0EFF               	movlw	255
  7421  0014AA  162F               	andwf	(___flmul@prod+1)^0,f,c
  7422  0014AC  0E7F               	movlw	127
  7423  0014AE  1630               	andwf	(___flmul@prod+2)^0,f,c
  7424  0014B0  0E00               	movlw	0
  7425  0014B2  1631               	andwf	(___flmul@prod+3)^0,f,c
  7426  0014B4  A02D               	btfss	___flmul@bexp^0,0,c
  7427  0014B6  EF5F  F00A         	goto	u2321
  7428  0014BA  EF62  F00A         	goto	u2320
  7429  0014BE                     u2321:
  7430  0014BE  FFFF               	dw	65535	; assembler added errata NOP
  7431  0014C0  EF64  F00A         	goto	l2544
  7432  0014C4                     u2320:
  7433  0014C4  FFFF               	dw	65535	; assembler added errata NOP
  7434  0014C6  8E30               	bsf	(___flmul@prod+2)^0,7,c
  7435  0014C8                     l2544:
  7436  0014C8  FFFF               	dw	65535	; assembler added errata NOP
  7437  0014CA  90D8               	bcf	status,0,c
  7438  0014CC  302D               	rrcf	___flmul@bexp^0,w,c
  7439  0014CE  6E31               	movwf	(___flmul@prod+3)^0,c
  7440  0014D0                     l2546:
  7441  0014D0  FFFF               	dw	65535	; assembler added errata NOP
  7442  0014D2  5027               	movf	___flmul@sign^0,w,c
  7443  0014D4  1231               	iorwf	(___flmul@prod+3)^0,f,c
  7444  0014D6  C02E  F01B         	movff	___flmul@prod,?___flmul
  7445  0014DA  C02F  F01C         	movff	___flmul@prod+1,?___flmul+1
  7446  0014DE  C030  F01D         	movff	___flmul@prod+2,?___flmul+2
  7447  0014E2  C031  F01E         	movff	___flmul@prod+3,?___flmul+3
  7448  0014E6                     l1017:
  7449  0014E6  FFFF               	dw	65535	; assembler added errata NOP
  7450  0014E8  0012               	return		;funcret
  7451  0014EA  FFFF               	dw	65535	; errata NOP
  7452  0014EC                     __end_of___flmul:
  7453                           	callstack 0
  7454                           
  7455 ;; *************** function _configure_ad_conversion_tank *****************
  7456 ;; Defined at:
  7457 ;;		line 21 in file "oven.c"
  7458 ;; Parameters:    Size  Location     Type
  7459 ;;		None
  7460 ;; Auto vars:     Size  Location     Type
  7461 ;;		None
  7462 ;; Return value:  Size  Location     Type
  7463 ;;                  1    wreg      void 
  7464 ;; Registers used:
  7465 ;;		wreg, status,2
  7466 ;; Tracked objects:
  7467 ;;		On entry : 0/0
  7468 ;;		On exit  : 0/0
  7469 ;;		Unchanged: 0/0
  7470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7471 ;;      Params:         0       0       0       0       0       0       0
  7472 ;;      Locals:         0       0       0       0       0       0       0
  7473 ;;      Temps:          0       0       0       0       0       0       0
  7474 ;;      Totals:         0       0       0       0       0       0       0
  7475 ;;Total ram usage:        0 bytes
  7476 ;; Hardware stack levels used:    1
  7477 ;; Hardware stack levels required when called:    1
  7478 ;; This function calls:
  7479 ;;		Nothing
  7480 ;; This function is called by:
  7481 ;;		_main
  7482 ;; This function uses a non-reentrant model
  7483 ;;
  7484                           
  7485                           	psect	text29
  7486  00284E                     __ptext29:
  7487                           	callstack 0
  7488  00284E                     _configure_ad_conversion_tank:
  7489                           	callstack 0
  7490  00284E  FFFF               	dw	65535	; assembler added errata NOP
  7491  002850                     
  7492                           ;oven.c: 22:     ADCON0 = 0;
  7493  002850  0E00               	movlw	0
  7494  002852  6EC2               	movwf	194,c	;volatile
  7495  002854                     
  7496                           ;oven.c: 23:     ADCON0bits.CHS0 = 0;
  7497  002854  96C2               	bcf	194,3,c	;volatile
  7498  002856                     
  7499                           ;oven.c: 24:     ADCON0bits.CHS1 = 0;
  7500  002856  98C2               	bcf	194,4,c	;volatile
  7501  002858                     
  7502                           ;oven.c: 25:     ADCON0bits.CHS2 = 0;
  7503  002858  9AC2               	bcf	194,5,c	;volatile
  7504  00285A                     
  7505                           ;oven.c: 26:     ADCON0bits.ADON = 1;
  7506  00285A  80C2               	bsf	194,0,c	;volatile
  7507                           
  7508                           ;oven.c: 27:     ADRESH = 0;
  7509  00285C  0E00               	movlw	0
  7510  00285E  6EC4               	movwf	196,c	;volatile
  7511                           
  7512                           ;oven.c: 28:     ADRESL = 0;
  7513  002860  0E00               	movlw	0
  7514  002862  6EC3               	movwf	195,c	;volatile
  7515                           
  7516                           ;oven.c: 29:     ADCON1 = 0;
  7517  002864  0E00               	movlw	0
  7518  002866  6EC1               	movwf	193,c	;volatile
  7519  002868  0012               	return		;funcret
  7520  00286A  FFFF               	dw	65535	; errata NOP
  7521  00286C                     __end_of_configure_ad_conversion_tank:
  7522                           	callstack 0
  7523                           
  7524 ;; *************** function _configure_ad_conversion_oven *****************
  7525 ;; Defined at:
  7526 ;;		line 9 in file "oven.c"
  7527 ;; Parameters:    Size  Location     Type
  7528 ;;		None
  7529 ;; Auto vars:     Size  Location     Type
  7530 ;;		None
  7531 ;; Return value:  Size  Location     Type
  7532 ;;                  1    wreg      void 
  7533 ;; Registers used:
  7534 ;;		wreg, status,2
  7535 ;; Tracked objects:
  7536 ;;		On entry : 0/0
  7537 ;;		On exit  : 0/0
  7538 ;;		Unchanged: 0/0
  7539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7540 ;;      Params:         0       0       0       0       0       0       0
  7541 ;;      Locals:         0       0       0       0       0       0       0
  7542 ;;      Temps:          0       0       0       0       0       0       0
  7543 ;;      Totals:         0       0       0       0       0       0       0
  7544 ;;Total ram usage:        0 bytes
  7545 ;; Hardware stack levels used:    1
  7546 ;; Hardware stack levels required when called:    1
  7547 ;; This function calls:
  7548 ;;		Nothing
  7549 ;; This function is called by:
  7550 ;;		_main
  7551 ;; This function uses a non-reentrant model
  7552 ;;
  7553                           
  7554                           	psect	text30
  7555  00286C                     __ptext30:
  7556                           	callstack 0
  7557  00286C                     _configure_ad_conversion_oven:
  7558                           	callstack 0
  7559  00286C  FFFF               	dw	65535	; assembler added errata NOP
  7560  00286E                     
  7561                           ;oven.c: 10:     ADCON0 = 0;
  7562  00286E  0E00               	movlw	0
  7563  002870  6EC2               	movwf	194,c	;volatile
  7564  002872                     
  7565                           ;oven.c: 11:     ADCON0bits.CHS0 = 0;
  7566  002872  96C2               	bcf	194,3,c	;volatile
  7567  002874                     
  7568                           ;oven.c: 12:     ADCON0bits.CHS1 = 0;
  7569  002874  98C2               	bcf	194,4,c	;volatile
  7570  002876                     
  7571                           ;oven.c: 13:     ADCON0bits.CHS2 = 1;
  7572  002876  8AC2               	bsf	194,5,c	;volatile
  7573  002878                     
  7574                           ;oven.c: 14:     ADCON0bits.ADON = 1;
  7575  002878  80C2               	bsf	194,0,c	;volatile
  7576                           
  7577                           ;oven.c: 15:     ADRESH = 0;
  7578  00287A  0E00               	movlw	0
  7579  00287C  6EC4               	movwf	196,c	;volatile
  7580                           
  7581                           ;oven.c: 16:     ADRESL = 0;
  7582  00287E  0E00               	movlw	0
  7583  002880  6EC3               	movwf	195,c	;volatile
  7584                           
  7585                           ;oven.c: 17:     ADCON1 = 0;
  7586  002882  0E00               	movlw	0
  7587  002884  6EC1               	movwf	193,c	;volatile
  7588  002886  0012               	return		;funcret
  7589  002888  FFFF               	dw	65535	; errata NOP
  7590  00288A                     __end_of_configure_ad_conversion_oven:
  7591                           	callstack 0
  7592                           
  7593 ;; *************** function _check_temperature *****************
  7594 ;; Defined at:
  7595 ;;		line 57 in file "oven.c"
  7596 ;; Parameters:    Size  Location     Type
  7597 ;;  temp_to_be_c    2   75[COMRAM] int 
  7598 ;; Auto vars:     Size  Location     Type
  7599 ;;  grad            4   77[COMRAM] float 
  7600 ;; Return value:  Size  Location     Type
  7601 ;;                  2   75[COMRAM] int 
  7602 ;; Registers used:
  7603 ;;		wreg, status,2, status,0, cstack
  7604 ;; Tracked objects:
  7605 ;;		On entry : 0/0
  7606 ;;		On exit  : 0/0
  7607 ;;		Unchanged: 0/0
  7608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7609 ;;      Params:         2       0       0       0       0       0       0
  7610 ;;      Locals:         4       0       0       0       0       0       0
  7611 ;;      Temps:          0       0       0       0       0       0       0
  7612 ;;      Totals:         6       0       0       0       0       0       0
  7613 ;;Total ram usage:        6 bytes
  7614 ;; Hardware stack levels used:    1
  7615 ;; Hardware stack levels required when called:    2
  7616 ;; This function calls:
  7617 ;;		___awdiv
  7618 ;;		___flge
  7619 ;;		___xxtofl
  7620 ;;		_abs
  7621 ;; This function is called by:
  7622 ;;		_main
  7623 ;; This function uses a non-reentrant model
  7624 ;;
  7625                           
  7626                           	psect	text31
  7627  002060                     __ptext31:
  7628                           	callstack 0
  7629  002060                     _check_temperature:
  7630                           	callstack 0
  7631  002060  FFFF               	dw	65535	; assembler added errata NOP
  7632  002062                     
  7633                           ;oven.c: 58:     float grad = abs(temp_to_be_checked - (-55))/5;
  7634  002062  0E00               	movlw	0
  7635  002064  6E08               	movwf	(___awdiv@divisor+1)^0,c
  7636  002066  0E05               	movlw	5
  7637  002068  6E07               	movwf	___awdiv@divisor^0,c
  7638  00206A  0E37               	movlw	55
  7639  00206C  244C               	addwf	check_temperature@temp_to_be_checked^0,w,c
  7640  00206E  6E01               	movwf	abs@a^0,c
  7641  002070  0E00               	movlw	0
  7642  002072  204D               	addwfc	(check_temperature@temp_to_be_checked+1)^0,w,c
  7643  002074  6E02               	movwf	(abs@a+1)^0,c
  7644  002076  ECD4  F012         	call	_abs	;wreg free
  7645  00207A  C001  F005         	movff	?_abs,___awdiv@dividend
  7646  00207E  C002  F006         	movff	?_abs+1,___awdiv@dividend+1
  7647  002082  EC4B  F00F         	call	___awdiv	;wreg free
  7648  002086  C005  F00D         	movff	?___awdiv,___xxtofl@val
  7649  00208A  C006  F00E         	movff	?___awdiv+1,___xxtofl@val+1
  7650  00208E  0E00               	movlw	0
  7651  002090  BE0E               	btfsc	(___xxtofl@val+1)^0,7,c
  7652  002092  0EFF               	movlw	-1
  7653  002094  6E0F               	movwf	(___xxtofl@val+2)^0,c
  7654  002096  6E10               	movwf	(___xxtofl@val+3)^0,c
  7655  002098  0E01               	movlw	1
  7656  00209A  EC69  F00C         	call	___xxtofl
  7657  00209E  C00D  F04E         	movff	?___xxtofl,check_temperature@grad
  7658  0020A2  C00E  F04F         	movff	?___xxtofl+1,check_temperature@grad+1
  7659  0020A6  C00F  F050         	movff	?___xxtofl+2,check_temperature@grad+2
  7660  0020AA  C010  F051         	movff	?___xxtofl+3,check_temperature@grad+3
  7661                           
  7662                           ;oven.c: 59:     if (grad >= 12 && grad <= 13.5){
  7663  0020AE  C04E  F040         	movff	check_temperature@grad,___flge@ff1
  7664  0020B2  C04F  F041         	movff	check_temperature@grad+1,___flge@ff1+1
  7665  0020B6  C050  F042         	movff	check_temperature@grad+2,___flge@ff1+2
  7666  0020BA  C051  F043         	movff	check_temperature@grad+3,___flge@ff1+3
  7667  0020BE  0E00               	movlw	0
  7668  0020C0  6E44               	movwf	___flge@ff2^0,c
  7669  0020C2  0E00               	movlw	0
  7670  0020C4  6E45               	movwf	(___flge@ff2+1)^0,c
  7671  0020C6  0E40               	movlw	64
  7672  0020C8  6E46               	movwf	(___flge@ff2+2)^0,c
  7673  0020CA  0E41               	movlw	65
  7674  0020CC  6E47               	movwf	(___flge@ff2+3)^0,c
  7675  0020CE  ECB7  F00E         	call	___flge	;wreg free
  7676  0020D2  A0D8               	btfss	status,0,c
  7677  0020D4  EF6E  F010         	goto	u2911
  7678  0020D8  EF71  F010         	goto	u2910
  7679  0020DC                     u2911:
  7680  0020DC  FFFF               	dw	65535	; assembler added errata NOP
  7681  0020DE  EF93  F010         	goto	l2984
  7682  0020E2                     u2910:
  7683  0020E2  FFFF               	dw	65535	; assembler added errata NOP
  7684  0020E4  0E00               	movlw	0
  7685  0020E6  6E40               	movwf	___flge@ff1^0,c
  7686  0020E8  0E00               	movlw	0
  7687  0020EA  6E41               	movwf	(___flge@ff1+1)^0,c
  7688  0020EC  0E58               	movlw	88
  7689  0020EE  6E42               	movwf	(___flge@ff1+2)^0,c
  7690  0020F0  0E41               	movlw	65
  7691  0020F2  6E43               	movwf	(___flge@ff1+3)^0,c
  7692  0020F4  C04E  F044         	movff	check_temperature@grad,___flge@ff2
  7693  0020F8  C04F  F045         	movff	check_temperature@grad+1,___flge@ff2+1
  7694  0020FC  C050  F046         	movff	check_temperature@grad+2,___flge@ff2+2
  7695  002100  C051  F047         	movff	check_temperature@grad+3,___flge@ff2+3
  7696  002104  ECB7  F00E         	call	___flge	;wreg free
  7697  002108  A0D8               	btfss	status,0,c
  7698  00210A  EF89  F010         	goto	u2921
  7699  00210E  EF8C  F010         	goto	u2920
  7700  002112                     u2921:
  7701  002112  FFFF               	dw	65535	; assembler added errata NOP
  7702  002114  EF93  F010         	goto	l2984
  7703  002118                     u2920:
  7704  002118  FFFF               	dw	65535	; assembler added errata NOP
  7705  00211A                     
  7706                           ;oven.c: 60:         return 1;
  7707  00211A  0E00               	movlw	0
  7708  00211C  6E4D               	movwf	(?_check_temperature+1)^0,c
  7709  00211E  0E01               	movlw	1
  7710  002120  6E4C               	movwf	?_check_temperature^0,c
  7711  002122  EF98  F010         	goto	l395
  7712  002126                     l2984:
  7713  002126  FFFF               	dw	65535	; assembler added errata NOP
  7714                           
  7715                           ;oven.c: 62:         return 0;
  7716  002128  0E00               	movlw	0
  7717  00212A  6E4D               	movwf	(?_check_temperature+1)^0,c
  7718  00212C  0E00               	movlw	0
  7719  00212E  6E4C               	movwf	?_check_temperature^0,c
  7720  002130                     l395:
  7721  002130  FFFF               	dw	65535	; assembler added errata NOP
  7722  002132  0012               	return		;funcret
  7723  002134  FFFF               	dw	65535	; errata NOP
  7724  002136                     __end_of_check_temperature:
  7725                           	callstack 0
  7726                           
  7727 ;; *************** function _abs *****************
  7728 ;; Defined at:
  7729 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
  7730 ;; Parameters:    Size  Location     Type
  7731 ;;  a               2    0[COMRAM] int 
  7732 ;; Auto vars:     Size  Location     Type
  7733 ;;		None
  7734 ;; Return value:  Size  Location     Type
  7735 ;;                  2    0[COMRAM] int 
  7736 ;; Registers used:
  7737 ;;		wreg, status,2, status,0
  7738 ;; Tracked objects:
  7739 ;;		On entry : 0/0
  7740 ;;		On exit  : 0/0
  7741 ;;		Unchanged: 0/0
  7742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7743 ;;      Params:         2       0       0       0       0       0       0
  7744 ;;      Locals:         0       0       0       0       0       0       0
  7745 ;;      Temps:          2       0       0       0       0       0       0
  7746 ;;      Totals:         4       0       0       0       0       0       0
  7747 ;;Total ram usage:        4 bytes
  7748 ;; Hardware stack levels used:    1
  7749 ;; Hardware stack levels required when called:    1
  7750 ;; This function calls:
  7751 ;;		Nothing
  7752 ;; This function is called by:
  7753 ;;		_check_temperature
  7754 ;; This function uses a non-reentrant model
  7755 ;;
  7756                           
  7757                           	psect	text32
  7758  0025A8                     __ptext32:
  7759                           	callstack 0
  7760  0025A8                     _abs:
  7761                           	callstack 0
  7762  0025A8  FFFF               	dw	65535	; assembler added errata NOP
  7763  0025AA  BE02               	btfsc	(abs@a+1)^0,7,c
  7764  0025AC  EFE3  F012         	goto	u2690
  7765  0025B0  5002               	movf	(abs@a+1)^0,w,c
  7766  0025B2  E106               	bnz	u2691
  7767  0025B4  0401               	decf	abs@a^0,w,c
  7768  0025B6  B0D8               	btfsc	status,0,c
  7769  0025B8  EFE0  F012         	goto	u2691
  7770  0025BC  EFE3  F012         	goto	u2690
  7771  0025C0                     u2691:
  7772  0025C0  FFFF               	dw	65535	; assembler added errata NOP
  7773  0025C2  EFF2  F012         	goto	l1074
  7774  0025C6                     u2690:
  7775  0025C6  FFFF               	dw	65535	; assembler added errata NOP
  7776  0025C8  C001  F003         	movff	abs@a,??_abs
  7777  0025CC  C002  F004         	movff	abs@a+1,??_abs+1
  7778  0025D0  1E03               	comf	??_abs^0,f,c
  7779  0025D2  1E04               	comf	(??_abs+1)^0,f,c
  7780  0025D4  4A03               	infsnz	??_abs^0,f,c
  7781  0025D6  2A04               	incf	(??_abs+1)^0,f,c
  7782  0025D8  C003  F001         	movff	??_abs,?_abs
  7783  0025DC  C004  F002         	movff	??_abs+1,?_abs+1
  7784  0025E0  EFF7  F012         	goto	l1077
  7785  0025E4                     l1074:
  7786  0025E4  FFFF               	dw	65535	; assembler added errata NOP
  7787  0025E6  C001  F001         	movff	abs@a,?_abs
  7788  0025EA  C002  F002         	movff	abs@a+1,?_abs+1
  7789  0025EE                     l1077:
  7790  0025EE  FFFF               	dw	65535	; assembler added errata NOP
  7791  0025F0  0012               	return		;funcret
  7792  0025F2  FFFF               	dw	65535	; errata NOP
  7793  0025F4                     __end_of_abs:
  7794                           	callstack 0
  7795                           
  7796 ;; *************** function ___xxtofl *****************
  7797 ;; Defined at:
  7798 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
  7799 ;; Parameters:    Size  Location     Type
  7800 ;;  sign            1    wreg     unsigned char 
  7801 ;;  val             4   12[COMRAM] long 
  7802 ;; Auto vars:     Size  Location     Type
  7803 ;;  sign            1   20[COMRAM] unsigned char 
  7804 ;;  arg             4   22[COMRAM] unsigned long 
  7805 ;;  exp             1   21[COMRAM] unsigned char 
  7806 ;; Return value:  Size  Location     Type
  7807 ;;                  4   12[COMRAM] unsigned char 
  7808 ;; Registers used:
  7809 ;;		wreg, status,2, status,0
  7810 ;; Tracked objects:
  7811 ;;		On entry : 0/0
  7812 ;;		On exit  : 0/0
  7813 ;;		Unchanged: 0/0
  7814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7815 ;;      Params:         4       0       0       0       0       0       0
  7816 ;;      Locals:         6       0       0       0       0       0       0
  7817 ;;      Temps:          4       0       0       0       0       0       0
  7818 ;;      Totals:        14       0       0       0       0       0       0
  7819 ;;Total ram usage:       14 bytes
  7820 ;; Hardware stack levels used:    1
  7821 ;; Hardware stack levels required when called:    1
  7822 ;; This function calls:
  7823 ;;		Nothing
  7824 ;; This function is called by:
  7825 ;;		_main
  7826 ;;		_get_temperature
  7827 ;;		_get_liters
  7828 ;;		_check_temperature
  7829 ;; This function uses a non-reentrant model
  7830 ;;
  7831                           
  7832                           	psect	text33
  7833  0018D2                     __ptext33:
  7834                           	callstack 0
  7835  0018D2                     ___xxtofl:
  7836                           	callstack 0
  7837  0018D2  FFFF               	dw	65535	; assembler added errata NOP
  7838                           
  7839                           ;incstack = 0
  7840                           ;___xxtofl@sign stored from wreg
  7841  0018D4  6E15               	movwf	___xxtofl@sign^0,c
  7842  0018D6  5015               	movf	___xxtofl@sign^0,w,c
  7843  0018D8  B4D8               	btfsc	status,2,c
  7844  0018DA  EF71  F00C         	goto	u2461
  7845  0018DE  EF74  F00C         	goto	u2460
  7846  0018E2                     u2461:
  7847  0018E2  FFFF               	dw	65535	; assembler added errata NOP
  7848  0018E4  EF99  F00C         	goto	l1054
  7849  0018E8                     u2460:
  7850  0018E8  FFFF               	dw	65535	; assembler added errata NOP
  7851  0018EA  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
  7852  0018EC  EF7D  F00C         	goto	u2470
  7853  0018F0  EF7A  F00C         	goto	u2471
  7854  0018F4                     u2471:
  7855  0018F4  FFFF               	dw	65535	; assembler added errata NOP
  7856  0018F6  EF99  F00C         	goto	l1054
  7857  0018FA                     u2470:
  7858  0018FA  FFFF               	dw	65535	; assembler added errata NOP
  7859  0018FC  C00D  F011         	movff	___xxtofl@val,??___xxtofl
  7860  001900  C00E  F012         	movff	___xxtofl@val+1,??___xxtofl+1
  7861  001904  C00F  F013         	movff	___xxtofl@val+2,??___xxtofl+2
  7862  001908  C010  F014         	movff	___xxtofl@val+3,??___xxtofl+3
  7863  00190C  1E11               	comf	??___xxtofl^0,f,c
  7864  00190E  1E12               	comf	(??___xxtofl+1)^0,f,c
  7865  001910  1E13               	comf	(??___xxtofl+2)^0,f,c
  7866  001912  1E14               	comf	(??___xxtofl+3)^0,f,c
  7867  001914  2A11               	incf	??___xxtofl^0,f,c
  7868  001916  0E00               	movlw	0
  7869  001918  2212               	addwfc	(??___xxtofl+1)^0,f,c
  7870  00191A  2213               	addwfc	(??___xxtofl+2)^0,f,c
  7871  00191C  2214               	addwfc	(??___xxtofl+3)^0,f,c
  7872  00191E  C011  F017         	movff	??___xxtofl,___xxtofl@arg
  7873  001922  C012  F018         	movff	??___xxtofl+1,___xxtofl@arg+1
  7874  001926  C013  F019         	movff	??___xxtofl+2,___xxtofl@arg+2
  7875  00192A  C014  F01A         	movff	??___xxtofl+3,___xxtofl@arg+3
  7876  00192E  EFA2  F00C         	goto	l2638
  7877  001932                     l1054:
  7878  001932  FFFF               	dw	65535	; assembler added errata NOP
  7879  001934  C00D  F017         	movff	___xxtofl@val,___xxtofl@arg
  7880  001938  C00E  F018         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7881  00193C  C00F  F019         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7882  001940  C010  F01A         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7883  001944                     l2638:
  7884  001944  FFFF               	dw	65535	; assembler added errata NOP
  7885  001946  500D               	movf	___xxtofl@val^0,w,c
  7886  001948  100E               	iorwf	(___xxtofl@val+1)^0,w,c
  7887  00194A  100F               	iorwf	(___xxtofl@val+2)^0,w,c
  7888  00194C  1010               	iorwf	(___xxtofl@val+3)^0,w,c
  7889  00194E  A4D8               	btfss	status,2,c
  7890  001950  EFAC  F00C         	goto	u2481
  7891  001954  EFAF  F00C         	goto	u2480
  7892  001958                     u2481:
  7893  001958  FFFF               	dw	65535	; assembler added errata NOP
  7894  00195A  EFBA  F00C         	goto	l2644
  7895  00195E                     u2480:
  7896  00195E  FFFF               	dw	65535	; assembler added errata NOP
  7897  001960  0E00               	movlw	0
  7898  001962  6E0D               	movwf	?___xxtofl^0,c
  7899  001964  0E00               	movlw	0
  7900  001966  6E0E               	movwf	(?___xxtofl+1)^0,c
  7901  001968  0E00               	movlw	0
  7902  00196A  6E0F               	movwf	(?___xxtofl+2)^0,c
  7903  00196C  0E00               	movlw	0
  7904  00196E  6E10               	movwf	(?___xxtofl+3)^0,c
  7905  001970  EF62  F00D         	goto	l1057
  7906  001974                     l2644:
  7907  001974  FFFF               	dw	65535	; assembler added errata NOP
  7908  001976  0E96               	movlw	150
  7909  001978  6E16               	movwf	___xxtofl@exp^0,c
  7910  00197A  EFC6  F00C         	goto	l2648
  7911  00197E                     l2646:
  7912  00197E  FFFF               	dw	65535	; assembler added errata NOP
  7913  001980  2A16               	incf	___xxtofl@exp^0,f,c
  7914  001982  90D8               	bcf	status,0,c
  7915  001984  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  7916  001986  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  7917  001988  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  7918  00198A  3217               	rrcf	___xxtofl@arg^0,f,c
  7919  00198C                     l2648:
  7920  00198C  FFFF               	dw	65535	; assembler added errata NOP
  7921  00198E  0E00               	movlw	0
  7922  001990  1417               	andwf	___xxtofl@arg^0,w,c
  7923  001992  6E11               	movwf	??___xxtofl^0,c
  7924  001994  0E00               	movlw	0
  7925  001996  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  7926  001998  6E12               	movwf	(??___xxtofl+1)^0,c
  7927  00199A  0E00               	movlw	0
  7928  00199C  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  7929  00199E  6E13               	movwf	(??___xxtofl+2)^0,c
  7930  0019A0  0EFE               	movlw	254
  7931  0019A2  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  7932  0019A4  6E14               	movwf	(??___xxtofl+3)^0,c
  7933  0019A6  5011               	movf	??___xxtofl^0,w,c
  7934  0019A8  1012               	iorwf	(??___xxtofl+1)^0,w,c
  7935  0019AA  1013               	iorwf	(??___xxtofl+2)^0,w,c
  7936  0019AC  1014               	iorwf	(??___xxtofl+3)^0,w,c
  7937  0019AE  A4D8               	btfss	status,2,c
  7938  0019B0  EFDC  F00C         	goto	u2491
  7939  0019B4  EFDF  F00C         	goto	u2490
  7940  0019B8                     u2491:
  7941  0019B8  FFFF               	dw	65535	; assembler added errata NOP
  7942  0019BA  EFBF  F00C         	goto	l2646
  7943  0019BE                     u2490:
  7944  0019BE  FFFF               	dw	65535	; assembler added errata NOP
  7945  0019C0  EFEF  F00C         	goto	l1061
  7946  0019C4                     l2650:
  7947  0019C4  FFFF               	dw	65535	; assembler added errata NOP
  7948  0019C6  2A16               	incf	___xxtofl@exp^0,f,c
  7949  0019C8  0E01               	movlw	1
  7950  0019CA  2617               	addwf	___xxtofl@arg^0,f,c
  7951  0019CC  0E00               	movlw	0
  7952  0019CE  2218               	addwfc	(___xxtofl@arg+1)^0,f,c
  7953  0019D0  2219               	addwfc	(___xxtofl@arg+2)^0,f,c
  7954  0019D2  221A               	addwfc	(___xxtofl@arg+3)^0,f,c
  7955  0019D4  90D8               	bcf	status,0,c
  7956  0019D6  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  7957  0019D8  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  7958  0019DA  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  7959  0019DC  3217               	rrcf	___xxtofl@arg^0,f,c
  7960  0019DE                     l1061:
  7961  0019DE  FFFF               	dw	65535	; assembler added errata NOP
  7962  0019E0  0E00               	movlw	0
  7963  0019E2  1417               	andwf	___xxtofl@arg^0,w,c
  7964  0019E4  6E11               	movwf	??___xxtofl^0,c
  7965  0019E6  0E00               	movlw	0
  7966  0019E8  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  7967  0019EA  6E12               	movwf	(??___xxtofl+1)^0,c
  7968  0019EC  0E00               	movlw	0
  7969  0019EE  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  7970  0019F0  6E13               	movwf	(??___xxtofl+2)^0,c
  7971  0019F2  0EFF               	movlw	255
  7972  0019F4  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  7973  0019F6  6E14               	movwf	(??___xxtofl+3)^0,c
  7974  0019F8  5011               	movf	??___xxtofl^0,w,c
  7975  0019FA  1012               	iorwf	(??___xxtofl+1)^0,w,c
  7976  0019FC  1013               	iorwf	(??___xxtofl+2)^0,w,c
  7977  0019FE  1014               	iorwf	(??___xxtofl+3)^0,w,c
  7978  001A00  A4D8               	btfss	status,2,c
  7979  001A02  EF05  F00D         	goto	u2501
  7980  001A06  EF08  F00D         	goto	u2500
  7981  001A0A                     u2501:
  7982  001A0A  FFFF               	dw	65535	; assembler added errata NOP
  7983  001A0C  EFE2  F00C         	goto	l2650
  7984  001A10                     u2500:
  7985  001A10  FFFF               	dw	65535	; assembler added errata NOP
  7986  001A12  EF12  F00D         	goto	l2658
  7987  001A16                     l2656:
  7988  001A16  FFFF               	dw	65535	; assembler added errata NOP
  7989  001A18  0616               	decf	___xxtofl@exp^0,f,c
  7990  001A1A  90D8               	bcf	status,0,c
  7991  001A1C  3617               	rlcf	___xxtofl@arg^0,f,c
  7992  001A1E  3618               	rlcf	(___xxtofl@arg+1)^0,f,c
  7993  001A20  3619               	rlcf	(___xxtofl@arg+2)^0,f,c
  7994  001A22  361A               	rlcf	(___xxtofl@arg+3)^0,f,c
  7995  001A24                     l2658:
  7996  001A24  FFFF               	dw	65535	; assembler added errata NOP
  7997  001A26  BE19               	btfsc	(___xxtofl@arg+2)^0,7,c
  7998  001A28  EF18  F00D         	goto	u2511
  7999  001A2C  EF1B  F00D         	goto	u2510
  8000  001A30                     u2511:
  8001  001A30  FFFF               	dw	65535	; assembler added errata NOP
  8002  001A32  EF25  F00D         	goto	l1068
  8003  001A36                     u2510:
  8004  001A36  FFFF               	dw	65535	; assembler added errata NOP
  8005  001A38  0E02               	movlw	2
  8006  001A3A  6016               	cpfslt	___xxtofl@exp^0,c
  8007  001A3C  EF22  F00D         	goto	u2521
  8008  001A40  EF25  F00D         	goto	u2520
  8009  001A44                     u2521:
  8010  001A44  FFFF               	dw	65535	; assembler added errata NOP
  8011  001A46  EF0B  F00D         	goto	l2656
  8012  001A4A                     u2520:
  8013  001A4A                     l1068:
  8014  001A4A  FFFF               	dw	65535	; assembler added errata NOP
  8015  001A4C  B016               	btfsc	___xxtofl@exp^0,0,c
  8016  001A4E  EF2B  F00D         	goto	u2531
  8017  001A52  EF2E  F00D         	goto	u2530
  8018  001A56                     u2531:
  8019  001A56  FFFF               	dw	65535	; assembler added errata NOP
  8020  001A58  EF30  F00D         	goto	l2664
  8021  001A5C                     u2530:
  8022  001A5C  FFFF               	dw	65535	; assembler added errata NOP
  8023  001A5E  9E19               	bcf	(___xxtofl@arg+2)^0,7,c
  8024  001A60                     l2664:
  8025  001A60  FFFF               	dw	65535	; assembler added errata NOP
  8026  001A62  90D8               	bcf	status,0,c
  8027  001A64  3216               	rrcf	___xxtofl@exp^0,f,c
  8028  001A66  C016  F011         	movff	___xxtofl@exp,??___xxtofl
  8029  001A6A  6A12               	clrf	(??___xxtofl+1)^0,c
  8030  001A6C  6A13               	clrf	(??___xxtofl+2)^0,c
  8031  001A6E  6A14               	clrf	(??___xxtofl+3)^0,c
  8032  001A70  C011  F014         	movff	??___xxtofl,??___xxtofl+3
  8033  001A74  6A13               	clrf	(??___xxtofl+2)^0,c
  8034  001A76  6A12               	clrf	(??___xxtofl+1)^0,c
  8035  001A78  6A11               	clrf	??___xxtofl^0,c
  8036  001A7A  5011               	movf	??___xxtofl^0,w,c
  8037  001A7C  1217               	iorwf	___xxtofl@arg^0,f,c
  8038  001A7E  5012               	movf	(??___xxtofl+1)^0,w,c
  8039  001A80  1218               	iorwf	(___xxtofl@arg+1)^0,f,c
  8040  001A82  5013               	movf	(??___xxtofl+2)^0,w,c
  8041  001A84  1219               	iorwf	(___xxtofl@arg+2)^0,f,c
  8042  001A86  5014               	movf	(??___xxtofl+3)^0,w,c
  8043  001A88  121A               	iorwf	(___xxtofl@arg+3)^0,f,c
  8044  001A8A  5015               	movf	___xxtofl@sign^0,w,c
  8045  001A8C  B4D8               	btfsc	status,2,c
  8046  001A8E  EF4B  F00D         	goto	u2541
  8047  001A92  EF4E  F00D         	goto	u2540
  8048  001A96                     u2541:
  8049  001A96  FFFF               	dw	65535	; assembler added errata NOP
  8050  001A98  EF59  F00D         	goto	l2674
  8051  001A9C                     u2540:
  8052  001A9C  FFFF               	dw	65535	; assembler added errata NOP
  8053  001A9E  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
  8054  001AA0  EF57  F00D         	goto	u2550
  8055  001AA4  EF54  F00D         	goto	u2551
  8056  001AA8                     u2551:
  8057  001AA8  FFFF               	dw	65535	; assembler added errata NOP
  8058  001AAA  EF59  F00D         	goto	l2674
  8059  001AAE                     u2550:
  8060  001AAE  FFFF               	dw	65535	; assembler added errata NOP
  8061  001AB0  8E1A               	bsf	(___xxtofl@arg+3)^0,7,c
  8062  001AB2                     l2674:
  8063  001AB2  FFFF               	dw	65535	; assembler added errata NOP
  8064  001AB4  C017  F00D         	movff	___xxtofl@arg,?___xxtofl
  8065  001AB8  C018  F00E         	movff	___xxtofl@arg+1,?___xxtofl+1
  8066  001ABC  C019  F00F         	movff	___xxtofl@arg+2,?___xxtofl+2
  8067  001AC0  C01A  F010         	movff	___xxtofl@arg+3,?___xxtofl+3
  8068  001AC4                     l1057:
  8069  001AC4  FFFF               	dw	65535	; assembler added errata NOP
  8070  001AC6  0012               	return		;funcret
  8071  001AC8  FFFF               	dw	65535	; errata NOP
  8072  001ACA                     __end_of___xxtofl:
  8073                           	callstack 0
  8074                           
  8075 ;; *************** function ___flge *****************
  8076 ;; Defined at:
  8077 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
  8078 ;; Parameters:    Size  Location     Type
  8079 ;;  ff1             4   63[COMRAM] unsigned char 
  8080 ;;  ff2             4   67[COMRAM] unsigned char 
  8081 ;; Auto vars:     Size  Location     Type
  8082 ;;		None
  8083 ;; Return value:  Size  Location     Type
  8084 ;;		None               void
  8085 ;; Registers used:
  8086 ;;		wreg, status,2, status,0
  8087 ;; Tracked objects:
  8088 ;;		On entry : 0/0
  8089 ;;		On exit  : 0/0
  8090 ;;		Unchanged: 0/0
  8091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8092 ;;      Params:         8       0       0       0       0       0       0
  8093 ;;      Locals:         0       0       0       0       0       0       0
  8094 ;;      Temps:          4       0       0       0       0       0       0
  8095 ;;      Totals:        12       0       0       0       0       0       0
  8096 ;;Total ram usage:       12 bytes
  8097 ;; Hardware stack levels used:    1
  8098 ;; Hardware stack levels required when called:    1
  8099 ;; This function calls:
  8100 ;;		Nothing
  8101 ;; This function is called by:
  8102 ;;		_main
  8103 ;;		_check_temperature
  8104 ;;		_roundf
  8105 ;; This function uses a non-reentrant model
  8106 ;;
  8107                           
  8108                           	psect	text34
  8109  001D6E                     __ptext34:
  8110                           	callstack 0
  8111  001D6E                     ___flge:
  8112                           	callstack 0
  8113  001D6E  FFFF               	dw	65535	; assembler added errata NOP
  8114  001D70  0E00               	movlw	0
  8115  001D72  1440               	andwf	___flge@ff1^0,w,c
  8116  001D74  6E48               	movwf	??___flge^0,c
  8117  001D76  0E00               	movlw	0
  8118  001D78  1441               	andwf	(___flge@ff1+1)^0,w,c
  8119  001D7A  6E49               	movwf	(??___flge+1)^0,c
  8120  001D7C  0E80               	movlw	128
  8121  001D7E  1442               	andwf	(___flge@ff1+2)^0,w,c
  8122  001D80  6E4A               	movwf	(??___flge+2)^0,c
  8123  001D82  0E7F               	movlw	127
  8124  001D84  1443               	andwf	(___flge@ff1+3)^0,w,c
  8125  001D86  6E4B               	movwf	(??___flge+3)^0,c
  8126  001D88  5048               	movf	??___flge^0,w,c
  8127  001D8A  1049               	iorwf	(??___flge+1)^0,w,c
  8128  001D8C  104A               	iorwf	(??___flge+2)^0,w,c
  8129  001D8E  104B               	iorwf	(??___flge+3)^0,w,c
  8130  001D90  A4D8               	btfss	status,2,c
  8131  001D92  EFCD  F00E         	goto	u2331
  8132  001D96  EFD0  F00E         	goto	u2330
  8133  001D9A                     u2331:
  8134  001D9A  FFFF               	dw	65535	; assembler added errata NOP
  8135  001D9C  EFD9  F00E         	goto	l2562
  8136  001DA0                     u2330:
  8137  001DA0  FFFF               	dw	65535	; assembler added errata NOP
  8138  001DA2  0E00               	movlw	0
  8139  001DA4  6E40               	movwf	___flge@ff1^0,c
  8140  001DA6  0E00               	movlw	0
  8141  001DA8  6E41               	movwf	(___flge@ff1+1)^0,c
  8142  001DAA  0E00               	movlw	0
  8143  001DAC  6E42               	movwf	(___flge@ff1+2)^0,c
  8144  001DAE  0E00               	movlw	0
  8145  001DB0  6E43               	movwf	(___flge@ff1+3)^0,c
  8146  001DB2                     l2562:
  8147  001DB2  FFFF               	dw	65535	; assembler added errata NOP
  8148  001DB4  0E00               	movlw	0
  8149  001DB6  1444               	andwf	___flge@ff2^0,w,c
  8150  001DB8  6E48               	movwf	??___flge^0,c
  8151  001DBA  0E00               	movlw	0
  8152  001DBC  1445               	andwf	(___flge@ff2+1)^0,w,c
  8153  001DBE  6E49               	movwf	(??___flge+1)^0,c
  8154  001DC0  0E80               	movlw	128
  8155  001DC2  1446               	andwf	(___flge@ff2+2)^0,w,c
  8156  001DC4  6E4A               	movwf	(??___flge+2)^0,c
  8157  001DC6  0E7F               	movlw	127
  8158  001DC8  1447               	andwf	(___flge@ff2+3)^0,w,c
  8159  001DCA  6E4B               	movwf	(??___flge+3)^0,c
  8160  001DCC  5048               	movf	??___flge^0,w,c
  8161  001DCE  1049               	iorwf	(??___flge+1)^0,w,c
  8162  001DD0  104A               	iorwf	(??___flge+2)^0,w,c
  8163  001DD2  104B               	iorwf	(??___flge+3)^0,w,c
  8164  001DD4  A4D8               	btfss	status,2,c
  8165  001DD6  EFEF  F00E         	goto	u2341
  8166  001DDA  EFF2  F00E         	goto	u2340
  8167  001DDE                     u2341:
  8168  001DDE  FFFF               	dw	65535	; assembler added errata NOP
  8169  001DE0  EFFB  F00E         	goto	l2566
  8170  001DE4                     u2340:
  8171  001DE4  FFFF               	dw	65535	; assembler added errata NOP
  8172  001DE6  0E00               	movlw	0
  8173  001DE8  6E44               	movwf	___flge@ff2^0,c
  8174  001DEA  0E00               	movlw	0
  8175  001DEC  6E45               	movwf	(___flge@ff2+1)^0,c
  8176  001DEE  0E00               	movlw	0
  8177  001DF0  6E46               	movwf	(___flge@ff2+2)^0,c
  8178  001DF2  0E00               	movlw	0
  8179  001DF4  6E47               	movwf	(___flge@ff2+3)^0,c
  8180  001DF6                     l2566:
  8181  001DF6  FFFF               	dw	65535	; assembler added errata NOP
  8182  001DF8  AE43               	btfss	(___flge@ff1+3)^0,7,c
  8183  001DFA  EF01  F00F         	goto	u2351
  8184  001DFE  EF04  F00F         	goto	u2350
  8185  001E02                     u2351:
  8186  001E02  FFFF               	dw	65535	; assembler added errata NOP
  8187  001E04  EF0E  F00F         	goto	l2570
  8188  001E08                     u2350:
  8189  001E08  FFFF               	dw	65535	; assembler added errata NOP
  8190  001E0A  6C40               	negf	___flge@ff1^0,c
  8191  001E0C  1E41               	comf	(___flge@ff1+1)^0,f,c
  8192  001E0E  B0D8               	btfsc	status,0,c
  8193  001E10  2A41               	incf	(___flge@ff1+1)^0,f,c
  8194  001E12  1E42               	comf	(___flge@ff1+2)^0,f,c
  8195  001E14  B0D8               	btfsc	status,0,c
  8196  001E16  2A42               	incf	(___flge@ff1+2)^0,f,c
  8197  001E18  0E80               	movlw	128
  8198  001E1A  5643               	subfwb	(___flge@ff1+3)^0,f,c
  8199  001E1C                     l2570:
  8200  001E1C  FFFF               	dw	65535	; assembler added errata NOP
  8201  001E1E  AE47               	btfss	(___flge@ff2+3)^0,7,c
  8202  001E20  EF14  F00F         	goto	u2361
  8203  001E24  EF17  F00F         	goto	u2360
  8204  001E28                     u2361:
  8205  001E28  FFFF               	dw	65535	; assembler added errata NOP
  8206  001E2A  EF21  F00F         	goto	l664
  8207  001E2E                     u2360:
  8208  001E2E  FFFF               	dw	65535	; assembler added errata NOP
  8209  001E30  6C44               	negf	___flge@ff2^0,c
  8210  001E32  1E45               	comf	(___flge@ff2+1)^0,f,c
  8211  001E34  B0D8               	btfsc	status,0,c
  8212  001E36  2A45               	incf	(___flge@ff2+1)^0,f,c
  8213  001E38  1E46               	comf	(___flge@ff2+2)^0,f,c
  8214  001E3A  B0D8               	btfsc	status,0,c
  8215  001E3C  2A46               	incf	(___flge@ff2+2)^0,f,c
  8216  001E3E  0E80               	movlw	128
  8217  001E40  5647               	subfwb	(___flge@ff2+3)^0,f,c
  8218  001E42                     l664:
  8219  001E42  FFFF               	dw	65535	; assembler added errata NOP
  8220  001E44  0E00               	movlw	0
  8221  001E46  1A40               	xorwf	___flge@ff1^0,f,c
  8222  001E48  0E00               	movlw	0
  8223  001E4A  1A41               	xorwf	(___flge@ff1+1)^0,f,c
  8224  001E4C  0E00               	movlw	0
  8225  001E4E  1A42               	xorwf	(___flge@ff1+2)^0,f,c
  8226  001E50  0E80               	movlw	128
  8227  001E52  1A43               	xorwf	(___flge@ff1+3)^0,f,c
  8228  001E54  0E00               	movlw	0
  8229  001E56  1A44               	xorwf	___flge@ff2^0,f,c
  8230  001E58  0E00               	movlw	0
  8231  001E5A  1A45               	xorwf	(___flge@ff2+1)^0,f,c
  8232  001E5C  0E00               	movlw	0
  8233  001E5E  1A46               	xorwf	(___flge@ff2+2)^0,f,c
  8234  001E60  0E80               	movlw	128
  8235  001E62  1A47               	xorwf	(___flge@ff2+3)^0,f,c
  8236  001E64  5044               	movf	___flge@ff2^0,w,c
  8237  001E66  5C40               	subwf	___flge@ff1^0,w,c
  8238  001E68  5045               	movf	(___flge@ff2+1)^0,w,c
  8239  001E6A  5841               	subwfb	(___flge@ff1+1)^0,w,c
  8240  001E6C  5046               	movf	(___flge@ff2+2)^0,w,c
  8241  001E6E  5842               	subwfb	(___flge@ff1+2)^0,w,c
  8242  001E70  5047               	movf	(___flge@ff2+3)^0,w,c
  8243  001E72  5843               	subwfb	(___flge@ff1+3)^0,w,c
  8244  001E74  B0D8               	btfsc	status,0,c
  8245  001E76  EF3F  F00F         	goto	u2371
  8246  001E7A  EF42  F00F         	goto	u2370
  8247  001E7E                     u2371:
  8248  001E7E  FFFF               	dw	65535	; assembler added errata NOP
  8249  001E80  EF46  F00F         	goto	l2576
  8250  001E84                     u2370:
  8251  001E84  FFFF               	dw	65535	; assembler added errata NOP
  8252  001E86  90D8               	bcf	status,0,c
  8253  001E88  EF48  F00F         	goto	l669
  8254  001E8C                     l2576:
  8255  001E8C  FFFF               	dw	65535	; assembler added errata NOP
  8256  001E8E  80D8               	bsf	status,0,c
  8257  001E90                     l669:
  8258  001E90  FFFF               	dw	65535	; assembler added errata NOP
  8259  001E92  0012               	return		;funcret
  8260  001E94  FFFF               	dw	65535	; errata NOP
  8261  001E96                     __end_of___flge:
  8262                           	callstack 0
  8263                           
  8264 ;; *************** function ___awdiv *****************
  8265 ;; Defined at:
  8266 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  8267 ;; Parameters:    Size  Location     Type
  8268 ;;  dividend        2    4[COMRAM] int 
  8269 ;;  divisor         2    6[COMRAM] int 
  8270 ;; Auto vars:     Size  Location     Type
  8271 ;;  quotient        2   10[COMRAM] int 
  8272 ;;  sign            1    9[COMRAM] unsigned char 
  8273 ;;  counter         1    8[COMRAM] unsigned char 
  8274 ;; Return value:  Size  Location     Type
  8275 ;;                  2    4[COMRAM] int 
  8276 ;; Registers used:
  8277 ;;		wreg, status,2, status,0
  8278 ;; Tracked objects:
  8279 ;;		On entry : 0/0
  8280 ;;		On exit  : 0/0
  8281 ;;		Unchanged: 0/0
  8282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8283 ;;      Params:         4       0       0       0       0       0       0
  8284 ;;      Locals:         4       0       0       0       0       0       0
  8285 ;;      Temps:          0       0       0       0       0       0       0
  8286 ;;      Totals:         8       0       0       0       0       0       0
  8287 ;;Total ram usage:        8 bytes
  8288 ;; Hardware stack levels used:    1
  8289 ;; Hardware stack levels required when called:    1
  8290 ;; This function calls:
  8291 ;;		Nothing
  8292 ;; This function is called by:
  8293 ;;		_check_temperature
  8294 ;; This function uses a non-reentrant model
  8295 ;;
  8296                           
  8297                           	psect	text35
  8298  001E96                     __ptext35:
  8299                           	callstack 0
  8300  001E96                     ___awdiv:
  8301                           	callstack 0
  8302  001E96  FFFF               	dw	65535	; assembler added errata NOP
  8303  001E98  0E00               	movlw	0
  8304  001E9A  6E0A               	movwf	___awdiv@sign^0,c
  8305  001E9C  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  8306  001E9E  EF56  F00F         	goto	u2700
  8307  001EA2  EF53  F00F         	goto	u2701
  8308  001EA6                     u2701:
  8309  001EA6  FFFF               	dw	65535	; assembler added errata NOP
  8310  001EA8  EF5D  F00F         	goto	l2772
  8311  001EAC                     u2700:
  8312  001EAC  FFFF               	dw	65535	; assembler added errata NOP
  8313  001EAE  6C07               	negf	___awdiv@divisor^0,c
  8314  001EB0  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  8315  001EB2  B0D8               	btfsc	status,0,c
  8316  001EB4  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  8317  001EB6  0E01               	movlw	1
  8318  001EB8  6E0A               	movwf	___awdiv@sign^0,c
  8319  001EBA                     l2772:
  8320  001EBA  FFFF               	dw	65535	; assembler added errata NOP
  8321  001EBC  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  8322  001EBE  EF66  F00F         	goto	u2710
  8323  001EC2  EF63  F00F         	goto	u2711
  8324  001EC6                     u2711:
  8325  001EC6  FFFF               	dw	65535	; assembler added errata NOP
  8326  001EC8  EF6D  F00F         	goto	l2778
  8327  001ECC                     u2710:
  8328  001ECC  FFFF               	dw	65535	; assembler added errata NOP
  8329  001ECE  6C05               	negf	___awdiv@dividend^0,c
  8330  001ED0  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  8331  001ED2  B0D8               	btfsc	status,0,c
  8332  001ED4  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  8333  001ED6  0E01               	movlw	1
  8334  001ED8  1A0A               	xorwf	___awdiv@sign^0,f,c
  8335  001EDA                     l2778:
  8336  001EDA  FFFF               	dw	65535	; assembler added errata NOP
  8337  001EDC  0E00               	movlw	0
  8338  001EDE  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  8339  001EE0  0E00               	movlw	0
  8340  001EE2  6E0B               	movwf	___awdiv@quotient^0,c
  8341  001EE4  5007               	movf	___awdiv@divisor^0,w,c
  8342  001EE6  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  8343  001EE8  B4D8               	btfsc	status,2,c
  8344  001EEA  EF79  F00F         	goto	u2721
  8345  001EEE  EF7C  F00F         	goto	u2720
  8346  001EF2                     u2721:
  8347  001EF2  FFFF               	dw	65535	; assembler added errata NOP
  8348  001EF4  EFAD  F00F         	goto	l2800
  8349  001EF8                     u2720:
  8350  001EF8  FFFF               	dw	65535	; assembler added errata NOP
  8351  001EFA  0E01               	movlw	1
  8352  001EFC  6E09               	movwf	___awdiv@counter^0,c
  8353  001EFE  EF86  F00F         	goto	l2786
  8354  001F02                     l2784:
  8355  001F02  FFFF               	dw	65535	; assembler added errata NOP
  8356  001F04  90D8               	bcf	status,0,c
  8357  001F06  3607               	rlcf	___awdiv@divisor^0,f,c
  8358  001F08  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  8359  001F0A  2A09               	incf	___awdiv@counter^0,f,c
  8360  001F0C                     l2786:
  8361  001F0C  FFFF               	dw	65535	; assembler added errata NOP
  8362  001F0E  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  8363  001F10  EF8C  F00F         	goto	u2731
  8364  001F14  EF8F  F00F         	goto	u2730
  8365  001F18                     u2731:
  8366  001F18  FFFF               	dw	65535	; assembler added errata NOP
  8367  001F1A  EF81  F00F         	goto	l2784
  8368  001F1E                     u2730:
  8369  001F1E  FFFF               	dw	65535	; assembler added errata NOP
  8370  001F20                     l2788:
  8371  001F20  FFFF               	dw	65535	; assembler added errata NOP
  8372  001F22  90D8               	bcf	status,0,c
  8373  001F24  360B               	rlcf	___awdiv@quotient^0,f,c
  8374  001F26  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  8375  001F28  5007               	movf	___awdiv@divisor^0,w,c
  8376  001F2A  5C05               	subwf	___awdiv@dividend^0,w,c
  8377  001F2C  5008               	movf	(___awdiv@divisor+1)^0,w,c
  8378  001F2E  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  8379  001F30  A0D8               	btfss	status,0,c
  8380  001F32  EF9D  F00F         	goto	u2741
  8381  001F36  EFA0  F00F         	goto	u2740
  8382  001F3A                     u2741:
  8383  001F3A  FFFF               	dw	65535	; assembler added errata NOP
  8384  001F3C  EFA6  F00F         	goto	l2796
  8385  001F40                     u2740:
  8386  001F40  FFFF               	dw	65535	; assembler added errata NOP
  8387  001F42  5007               	movf	___awdiv@divisor^0,w,c
  8388  001F44  5E05               	subwf	___awdiv@dividend^0,f,c
  8389  001F46  5008               	movf	(___awdiv@divisor+1)^0,w,c
  8390  001F48  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  8391  001F4A  800B               	bsf	___awdiv@quotient^0,0,c
  8392  001F4C                     l2796:
  8393  001F4C  FFFF               	dw	65535	; assembler added errata NOP
  8394  001F4E  90D8               	bcf	status,0,c
  8395  001F50  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  8396  001F52  3207               	rrcf	___awdiv@divisor^0,f,c
  8397  001F54  2E09               	decfsz	___awdiv@counter^0,f,c
  8398  001F56  EF90  F00F         	goto	l2788
  8399  001F5A                     l2800:
  8400  001F5A  FFFF               	dw	65535	; assembler added errata NOP
  8401  001F5C  500A               	movf	___awdiv@sign^0,w,c
  8402  001F5E  B4D8               	btfsc	status,2,c
  8403  001F60  EFB4  F00F         	goto	u2751
  8404  001F64  EFB7  F00F         	goto	u2750
  8405  001F68                     u2751:
  8406  001F68  FFFF               	dw	65535	; assembler added errata NOP
  8407  001F6A  EFBC  F00F         	goto	l2804
  8408  001F6E                     u2750:
  8409  001F6E  FFFF               	dw	65535	; assembler added errata NOP
  8410  001F70  6C0B               	negf	___awdiv@quotient^0,c
  8411  001F72  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  8412  001F74  B0D8               	btfsc	status,0,c
  8413  001F76  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  8414  001F78                     l2804:
  8415  001F78  FFFF               	dw	65535	; assembler added errata NOP
  8416  001F7A  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  8417  001F7E  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  8418  001F82  0012               	return		;funcret
  8419  001F84  FFFF               	dw	65535	; errata NOP
  8420  001F86                     __end_of___awdiv:
  8421                           	callstack 0
  8422                           
  8423 ;; *************** function _change_direction *****************
  8424 ;; Defined at:
  8425 ;;		line 46 in file "stepper_motor.c"
  8426 ;; Parameters:    Size  Location     Type
  8427 ;;  stepper_moto    2    0[COMRAM] PTR struct .
  8428 ;;		 -> joint_dilutor_stepper(12), end_effector_stepper(12), joint_stepper(12), 
  8429 ;; Auto vars:     Size  Location     Type
  8430 ;;		None
  8431 ;; Return value:  Size  Location     Type
  8432 ;;                  1    wreg      void 
  8433 ;; Registers used:
  8434 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8435 ;; Tracked objects:
  8436 ;;		On entry : 0/0
  8437 ;;		On exit  : 0/0
  8438 ;;		Unchanged: 0/0
  8439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8440 ;;      Params:         2       0       0       0       0       0       0
  8441 ;;      Locals:         0       0       0       0       0       0       0
  8442 ;;      Temps:          2       0       0       0       0       0       0
  8443 ;;      Totals:         4       0       0       0       0       0       0
  8444 ;;Total ram usage:        4 bytes
  8445 ;; Hardware stack levels used:    1
  8446 ;; Hardware stack levels required when called:    1
  8447 ;; This function calls:
  8448 ;;		Nothing
  8449 ;; This function is called by:
  8450 ;;		_main
  8451 ;; This function uses a non-reentrant model
  8452 ;;
  8453                           
  8454                           	psect	text36
  8455  002706                     __ptext36:
  8456                           	callstack 0
  8457  002706                     _change_direction:
  8458                           	callstack 0
  8459  002706  FFFF               	dw	65535	; assembler added errata NOP
  8460  002708                     
  8461                           ;stepper_motor.c: 47:     stepper_motor -> direction = stepper_motor -> direction*(-1);
  8462  002708  EE20 F004          	lfsr	2,4
  8463  00270C  5001               	movf	change_direction@stepper_motor^0,w,c
  8464  00270E  26D9               	addwf	fsr2l,f,c
  8465  002710  5002               	movf	(change_direction@stepper_motor+1)^0,w,c
  8466  002712  22DA               	addwfc	fsr2h,f,c
  8467  002714  CFDE F003          	movff	postinc2,??_change_direction
  8468  002718  CFDD F004          	movff	postdec2,??_change_direction+1
  8469  00271C  1E03               	comf	??_change_direction^0,f,c
  8470  00271E  1E04               	comf	(??_change_direction+1)^0,f,c
  8471  002720  4A03               	infsnz	??_change_direction^0,f,c
  8472  002722  2A04               	incf	(??_change_direction+1)^0,f,c
  8473  002724  EE20 F004          	lfsr	2,4
  8474  002728  5001               	movf	change_direction@stepper_motor^0,w,c
  8475  00272A  26D9               	addwf	fsr2l,f,c
  8476  00272C  5002               	movf	(change_direction@stepper_motor+1)^0,w,c
  8477  00272E  22DA               	addwfc	fsr2h,f,c
  8478  002730  C003  FFDE         	movff	??_change_direction,postinc2
  8479  002734  C004  FFDD         	movff	??_change_direction+1,postdec2
  8480  002738  0012               	return		;funcret
  8481  00273A  FFFF               	dw	65535	; errata NOP
  8482  00273C                     __end_of_change_direction:
  8483                           	callstack 0
  8484                           
  8485 ;; *************** function _interrupt_management *****************
  8486 ;; Defined at:
  8487 ;;		line 254 in file "main.c"
  8488 ;; Parameters:    Size  Location     Type
  8489 ;;		None
  8490 ;; Auto vars:     Size  Location     Type
  8491 ;;		None
  8492 ;; Return value:  Size  Location     Type
  8493 ;;                  1    wreg      void 
  8494 ;; Registers used:
  8495 ;;		wreg, status,2, status,0
  8496 ;; Tracked objects:
  8497 ;;		On entry : 0/0
  8498 ;;		On exit  : 0/0
  8499 ;;		Unchanged: 0/0
  8500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8501 ;;      Params:         0       0       0       0       0       0       0
  8502 ;;      Locals:         0       0       0       0       0       0       0
  8503 ;;      Temps:          0       0       0       0       0       0       0
  8504 ;;      Totals:         0       0       0       0       0       0       0
  8505 ;;Total ram usage:        0 bytes
  8506 ;; Hardware stack levels used:    1
  8507 ;; This function calls:
  8508 ;;		Nothing
  8509 ;; This function is called by:
  8510 ;;		Interrupt level 2
  8511 ;; This function uses a non-reentrant model
  8512 ;;
  8513                           
  8514                           	psect	intcode
  8515  000008                     __pintcode:
  8516                           	callstack 0
  8517  000008                     _interrupt_management:
  8518                           	callstack 0
  8519  000008  FFFF               	dw	65535	; assembler added errata NOP
  8520                           
  8521                           ;incstack = 0
  8522  00000A  827E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8523  00000C                     
  8524                           ;main.c: 255:     if(PIE1bits.RCIE && PIR1bits.RCIF){
  8525  00000C  AA9D               	btfss	157,5,c	;volatile
  8526  00000E  EF0B  F000         	goto	i2u170_41
  8527  000012  EF0E  F000         	goto	i2u170_40
  8528  000016                     i2u170_41:
  8529  000016  FFFF               	dw	65535	; assembler added errata NOP
  8530  000018  EF29  F000         	goto	i2l2194
  8531  00001C                     i2u170_40:
  8532  00001C  FFFF               	dw	65535	; assembler added errata NOP
  8533  00001E  AA9E               	btfss	158,5,c	;volatile
  8534  000020  EF14  F000         	goto	i2u171_41
  8535  000024  EF17  F000         	goto	i2u171_40
  8536  000028                     i2u171_41:
  8537  000028  FFFF               	dw	65535	; assembler added errata NOP
  8538  00002A  EF29  F000         	goto	i2l2194
  8539  00002E                     i2u171_40:
  8540  00002E  FFFF               	dw	65535	; assembler added errata NOP
  8541  000030                     
  8542                           ;main.c: 256:         PIR1bits.RCIF = 0;
  8543  000030  9A9E               	bcf	158,5,c	;volatile
  8544  000032                     
  8545                           ;main.c: 257:         if (state != 14){
  8546  000032  0E0E               	movlw	14
  8547  000034  187C               	xorwf	_state^0,w,c
  8548  000036  107D               	iorwf	(_state+1)^0,w,c
  8549  000038  B4D8               	btfsc	status,2,c
  8550  00003A  EF21  F000         	goto	i2u172_41
  8551  00003E  EF24  F000         	goto	i2u172_40
  8552  000042                     i2u172_41:
  8553  000042  FFFF               	dw	65535	; assembler added errata NOP
  8554  000044  EF29  F000         	goto	i2l2194
  8555  000048                     i2u172_40:
  8556  000048  FFFF               	dw	65535	; assembler added errata NOP
  8557  00004A                     
  8558                           ;main.c: 258:             state_changed = 1;
  8559  00004A  0E01               	movlw	1
  8560  00004C  6E7B               	movwf	_state_changed^0,c
  8561                           
  8562                           ;main.c: 259:             read_new_char = 1;
  8563  00004E  0E01               	movlw	1
  8564  000050  6E7A               	movwf	_read_new_char^0,c
  8565  000052                     i2l2194:
  8566  000052  FFFF               	dw	65535	; assembler added errata NOP
  8567                           
  8568                           ;main.c: 262:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF){
  8569  000054  AAF2               	btfss	242,5,c	;volatile
  8570  000056  EF2F  F000         	goto	i2u173_41
  8571  00005A  EF32  F000         	goto	i2u173_40
  8572  00005E                     i2u173_41:
  8573  00005E  FFFF               	dw	65535	; assembler added errata NOP
  8574  000060  EF42  F000         	goto	i2l220
  8575  000064                     i2u173_40:
  8576  000064  FFFF               	dw	65535	; assembler added errata NOP
  8577  000066  A4F2               	btfss	242,2,c	;volatile
  8578  000068  EF38  F000         	goto	i2u174_41
  8579  00006C  EF3B  F000         	goto	i2u174_40
  8580  000070                     i2u174_41:
  8581  000070  FFFF               	dw	65535	; assembler added errata NOP
  8582  000072  EF42  F000         	goto	i2l220
  8583  000076                     i2u174_40:
  8584  000076  FFFF               	dw	65535	; assembler added errata NOP
  8585  000078                     
  8586                           ;main.c: 263:         T0CON = 0;
  8587  000078  0E00               	movlw	0
  8588  00007A  6ED5               	movwf	213,c	;volatile
  8589  00007C                     
  8590                           ;main.c: 264:         INTCONbits.TMR0IF = 0;
  8591  00007C  94F2               	bcf	242,2,c	;volatile
  8592                           
  8593                           ;main.c: 265:         timer_done = 1;
  8594  00007E  0E01               	movlw	1
  8595  000080  6E79               	movwf	_timer_done^0,c
  8596  000082                     
  8597                           ;main.c: 266:         T0CONbits.TMR0ON = 0;
  8598  000082  9ED5               	bcf	213,7,c	;volatile
  8599  000084                     i2l220:
  8600  000084  FFFF               	dw	65535	; assembler added errata NOP
  8601  000086  927E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8602  000088  0011               	retfie		f
  8603  00008A  FFFF               	dw	65535	; errata NOP
  8604  00008C                     __end_of_interrupt_management:
  8605                           	callstack 0
  8606                           
  8607                           	psect	rparam
  8608  0000                     
  8609                           	psect	temp
  8610  00007E                     btemp:
  8611                           	callstack 0
  8612  00007E                     	ds	1
  8613  0000                     int$flags	set	btemp
  8614  0000                     wtemp8	set	btemp+1
  8615  0000                     ttemp5	set	btemp+1
  8616  0000                     ttemp6	set	btemp+4
  8617  0000                     ttemp7	set	btemp+8
  8618                           
  8619                           	psect	idloc
  8620                           
  8621                           ;Config register IDLOC0 @ 0x200000
  8622                           ;	unspecified, using default values
  8623  200000                     	org	2097152
  8624  200000  FF                 	db	255
  8625                           
  8626                           ;Config register IDLOC1 @ 0x200001
  8627                           ;	unspecified, using default values
  8628  200001                     	org	2097153
  8629  200001  FF                 	db	255
  8630                           
  8631                           ;Config register IDLOC2 @ 0x200002
  8632                           ;	unspecified, using default values
  8633  200002                     	org	2097154
  8634  200002  FF                 	db	255
  8635                           
  8636                           ;Config register IDLOC3 @ 0x200003
  8637                           ;	unspecified, using default values
  8638  200003                     	org	2097155
  8639  200003  FF                 	db	255
  8640                           
  8641                           ;Config register IDLOC4 @ 0x200004
  8642                           ;	unspecified, using default values
  8643  200004                     	org	2097156
  8644  200004  FF                 	db	255
  8645                           
  8646                           ;Config register IDLOC5 @ 0x200005
  8647                           ;	unspecified, using default values
  8648  200005                     	org	2097157
  8649  200005  FF                 	db	255
  8650                           
  8651                           ;Config register IDLOC6 @ 0x200006
  8652                           ;	unspecified, using default values
  8653  200006                     	org	2097158
  8654  200006  FF                 	db	255
  8655                           
  8656                           ;Config register IDLOC7 @ 0x200007
  8657                           ;	unspecified, using default values
  8658  200007                     	org	2097159
  8659  200007  FF                 	db	255
  8660                           
  8661                           	psect	config
  8662                           
  8663                           ; Padding undefined space
  8664  300000                     	org	3145728
  8665  300000  FF                 	db	255
  8666                           
  8667                           ;Config register CONFIG1H @ 0x300001
  8668                           ;	Oscillator Selection bits
  8669                           ;	OSC = RCIO, RC oscillator w/ OSC2 configured as RA6
  8670                           ;	Oscillator System Clock Switch Enable bit
  8671                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  8672  300001                     	org	3145729
  8673  300001  27                 	db	39
  8674                           
  8675                           ;Config register CONFIG2L @ 0x300002
  8676                           ;	Power-up Timer Enable bit
  8677                           ;	PWRT = OFF, PWRT disabled
  8678                           ;	Brown-out Reset Enable bit
  8679                           ;	BOR = ON, Brown-out Reset enabled
  8680                           ;	Brown-out Reset Voltage bits
  8681                           ;	BORV = 20, VBOR set to 2.0V
  8682  300002                     	org	3145730
  8683  300002  0F                 	db	15
  8684                           
  8685                           ;Config register CONFIG2H @ 0x300003
  8686                           ;	Watchdog Timer Enable bit
  8687                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8688                           ;	Watchdog Timer Postscale Select bits
  8689                           ;	WDTPS = 128, 1:128
  8690  300003                     	org	3145731
  8691  300003  0E                 	db	14
  8692                           
  8693                           ; Padding undefined space
  8694  300004                     	org	3145732
  8695  300004  FF                 	db	255
  8696                           
  8697                           ;Config register CONFIG3H @ 0x300005
  8698                           ;	CCP2 Mux bit
  8699                           ;	CCP2MUX = ON, CCP2 input/output is multiplexed with RC1
  8700  300005                     	org	3145733
  8701  300005  01                 	db	1
  8702                           
  8703                           ;Config register CONFIG4L @ 0x300006
  8704                           ;	Stack Full/Underflow Reset Enable bit
  8705                           ;	STVR = ON, Stack Full/Underflow will cause RESET
  8706                           ;	Low Voltage ICSP Enable bit
  8707                           ;	LVP = ON, Low Voltage ICSP enabled
  8708                           ;	Background Debugger Enable bit
  8709                           ;	DEBUG = 0x1, unprogrammed default
  8710  300006                     	org	3145734
  8711  300006  85                 	db	133
  8712                           
  8713                           ; Padding undefined space
  8714  300007                     	org	3145735
  8715  300007  FF                 	db	255
  8716                           
  8717                           ;Config register CONFIG5L @ 0x300008
  8718                           ;	Code Protection bit
  8719                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
  8720                           ;	Code Protection bit
  8721                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  8722                           ;	Code Protection bit
  8723                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  8724                           ;	Code Protection bit
  8725                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  8726  300008                     	org	3145736
  8727  300008  0F                 	db	15
  8728                           
  8729                           ;Config register CONFIG5H @ 0x300009
  8730                           ;	Boot Block Code Protection bit
  8731                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  8732                           ;	Data EEPROM Code Protection bit
  8733                           ;	CPD = OFF, Data EEPROM not code protected
  8734  300009                     	org	3145737
  8735  300009  C0                 	db	192
  8736                           
  8737                           ;Config register CONFIG6L @ 0x30000A
  8738                           ;	Write Protection bit
  8739                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  8740                           ;	Write Protection bit
  8741                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  8742                           ;	Write Protection bit
  8743                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  8744                           ;	Write Protection bit
  8745                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  8746  30000A                     	org	3145738
  8747  30000A  0F                 	db	15
  8748                           
  8749                           ;Config register CONFIG6H @ 0x30000B
  8750                           ;	Configuration Register Write Protection bit
  8751                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  8752                           ;	Boot Block Write Protection bit
  8753                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  8754                           ;	Data EEPROM Write Protection bit
  8755                           ;	WRTD = OFF, Data EEPROM not write protected
  8756  30000B                     	org	3145739
  8757  30000B  E0                 	db	224
  8758                           
  8759                           ;Config register CONFIG7L @ 0x30000C
  8760                           ;	Table Read Protection bit
  8761                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  8762                           ;	Table Read Protection bit
  8763                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  8764                           ;	Table Read Protection bit
  8765                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  8766                           ;	Table Read Protection bit
  8767                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  8768  30000C                     	org	3145740
  8769  30000C  0F                 	db	15
  8770                           
  8771                           ;Config register CONFIG7H @ 0x30000D
  8772                           ;	Boot Block Table Read Protection bit
  8773                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  8774  30000D                     	org	3145741
  8775  30000D  40                 	db	64
  8776                           tosu	equ	0xFFF
  8777                           tosh	equ	0xFFE
  8778                           tosl	equ	0xFFD
  8779                           stkptr	equ	0xFFC
  8780                           pclatu	equ	0xFFB
  8781                           pclath	equ	0xFFA
  8782                           pcl	equ	0xFF9
  8783                           tblptru	equ	0xFF8
  8784                           tblptrh	equ	0xFF7
  8785                           tblptrl	equ	0xFF6
  8786                           tablat	equ	0xFF5
  8787                           prodh	equ	0xFF4
  8788                           prodl	equ	0xFF3
  8789                           indf0	equ	0xFEF
  8790                           postinc0	equ	0xFEE
  8791                           postdec0	equ	0xFED
  8792                           preinc0	equ	0xFEC
  8793                           plusw0	equ	0xFEB
  8794                           fsr0h	equ	0xFEA
  8795                           fsr0l	equ	0xFE9
  8796                           wreg	equ	0xFE8
  8797                           indf1	equ	0xFE7
  8798                           postinc1	equ	0xFE6
  8799                           postdec1	equ	0xFE5
  8800                           preinc1	equ	0xFE4
  8801                           plusw1	equ	0xFE3
  8802                           fsr1h	equ	0xFE2
  8803                           fsr1l	equ	0xFE1
  8804                           bsr	equ	0xFE0
  8805                           indf2	equ	0xFDF
  8806                           postinc2	equ	0xFDE
  8807                           postdec2	equ	0xFDD
  8808                           preinc2	equ	0xFDC
  8809                           plusw2	equ	0xFDB
  8810                           fsr2h	equ	0xFDA
  8811                           fsr2l	equ	0xFD9
  8812                           status	equ	0xFD8

Data Sizes:
    Strings     22
    Constant    1216
    Data        14
    BSS         73
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    110     125
    BANK0           128      0      72
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    change_direction@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    change_direction@stepper_motor	PTR struct . size(2) Largest target is 13
		 -> joint_dilutor_stepper(BANK0[12]), end_effector_stepper(BANK0[12]), joint_stepper(BANK0[12]), 

    reach_goal@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    reach_goal@stepper_motor	PTR struct . size(2) Largest target is 13
		 -> joint_dilutor_stepper(BANK0[12]), end_effector_stepper(BANK0[12]), joint_stepper(BANK0[12]), 

    update_current_coil@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    update_current_coil@stepper_motor	PTR struct . size(2) Largest target is 13
		 -> joint_dilutor_stepper(BANK0[12]), end_effector_stepper(BANK0[12]), joint_stepper(BANK0[12]), 

    turn_on_current_coil@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    turn_on_current_coil@stepper_motor	PTR struct . size(2) Largest target is 13
		 -> joint_dilutor_stepper(BANK0[12]), end_effector_stepper(BANK0[12]), joint_stepper(BANK0[12]), 

    init_stepper@register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    init_stepper@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    init_stepper@hex_coil_register_values	PTR unsigned char  size(2) Largest target is 4
		 -> hex_end_effector_values(BANK0[4]), hex_joint_values(BANK0[4]), 

    init_stepper@stepper_motor	PTR struct . size(2) Largest target is 13
		 -> joint_dilutor_stepper(BANK0[12]), end_effector_stepper(BANK0[12]), joint_stepper(BANK0[12]), 

    state_translator_micro_to_fpga@state	PTR int  size(2) Largest target is 2
		 -> state(COMRAM[2]), 

    state_translator_fpga_to_micro@state	PTR int  size(2) Largest target is 2
		 -> state(COMRAM[2]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 1200
		 -> const_msgs(CODE[1200]), STR_1(CODE[22]), 

    joint_dilutor_stepper.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    end_effector_stepper.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    S181$register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    joint_stepper.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 


Critical Paths under _main in COMRAM

    _wait_for_zero->_get_temperature
    _get_temperature->___fltol
    _state_translator_fpga_to_micro->_lcd_dat
    _reach_goal->_turn_on_current_coil
    _lcd_update->_lcd_str
    _lcd_str->___wmul
    _lcd_dat->_lcd_wr
    _lcd_init->_lcd_cmd
    _lcd_cmd->_lcd_wr
    _init_USART->_roundf
    _roundf->___flge
    ___flsub->___fladd
    _get_liters->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl
    _check_temperature->___flge
    ___xxtofl->___awdiv
    ___flge->_get_liters
    ___awdiv->_abs

Critical Paths under _interrupt_management in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupt_management in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_management in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_management in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_management in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupt_management in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupt_management in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   33572
                                            101 COMRAM     9     9      0
                             ___flge
                             ___wmul
                           ___xxtofl
                   _change_direction
                  _check_temperature
       _configure_ad_conversion_oven
       _configure_ad_conversion_tank
                         _get_liters
                      _get_reg_value
                    _get_temperature
                         _init_PORTS
                         _init_USART
                    _init_interrupts
                       _init_stepper
                       _init_timer_0
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                         _lcd_update
                         _reach_goal
                     _serial_tx_char
     _state_translator_fpga_to_micro
     _state_translator_micro_to_fpga
                      _wait_for_zero
 ---------------------------------------------------------------------------------
 (1) _wait_for_zero                                        0     0      0    3207
                    _get_temperature
 ---------------------------------------------------------------------------------
 (2) _get_temperature                                      2     0      2    3207
                                             61 COMRAM     2     0      2
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _state_translator_micro_to_fpga                       5     3      2     168
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _state_translator_fpga_to_micro                       3     1      2     494
                                              2 COMRAM     3     1      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (1) _serial_tx_char                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _reach_goal                                           7     3      4    1590
                                              8 COMRAM     7     3      4
               _turn_on_current_coil
                _update_current_coil
 ---------------------------------------------------------------------------------
 (2) _update_current_coil                                  6     4      2     274
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _turn_on_current_coil                                 8     6      2     142
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _lcd_update                                          10     8      2    1309
                                             11 COMRAM    10     8      2
                             ___wmul
                            _lcd_cmd
                            _lcd_str
 ---------------------------------------------------------------------------------
 (2) _lcd_str                                              5     3      2     286
                                              6 COMRAM     5     3      2
                             ___wmul (ARG)
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              1     1      0      44
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     767
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0      44
                                              2 COMRAM     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0      44
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_timer_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_stepper                                        16     4     12    3046
                                              0 COMRAM    16     4     12
 ---------------------------------------------------------------------------------
 (1) _init_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_USART                                           0     0      0   11410
                            ___fltol
                             _roundf
 ---------------------------------------------------------------------------------
 (2) _roundf                                              26    22      4   10953
                                             75 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3649
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    3326
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _init_PORTS                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_reg_value                                        1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _get_liters                                           2     0      2    3207
                                             61 COMRAM     2     0      2
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     457
                                             51 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2048
                                             26 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _configure_ad_conversion_tank                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configure_ad_conversion_oven                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_temperature                                    6     4      2    2533
                                             75 COMRAM     6     4      2
                            ___awdiv
                             ___flge
                           ___xxtofl
                                _abs
                    _get_temperature (ARG)
 ---------------------------------------------------------------------------------
 (2) _abs                                                  4     2      2     142
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     702
                                             12 COMRAM    14    10      4
                            ___awdiv (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    1094
                                             63 COMRAM    12     4      8
                            ___fltol (ARG)
                           ___xxtofl (ARG)
                         _get_liters (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              4 COMRAM     8     4      4
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (1) _change_direction                                     4     2      2     348
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _interrupt_management                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___flge
     ___fltol (ARG)
       ___fladd (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___flneg (ARG)
       ___flsub (ARG)
         ___fladd
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
     ___xxtofl (ARG)
       ___awdiv (ARG)
         _abs (ARG)
       _abs (ARG)
     _get_liters (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___fltol
         ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___flneg (ARG)
         ___flsub (ARG)
           ___fladd
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___xxtofl
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
   ___wmul
   ___xxtofl
     ___awdiv (ARG)
       _abs (ARG)
     _abs (ARG)
   _change_direction
   _check_temperature
     ___awdiv
       _abs (ARG)
     ___flge
       ___fltol (ARG)
         ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___flneg (ARG)
         ___flsub (ARG)
           ___fladd
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
       _get_liters (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___fltol
           ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
           ___flneg (ARG)
           ___flsub (ARG)
             ___fladd
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___xxtofl
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
     ___xxtofl
       ___awdiv (ARG)
         _abs (ARG)
       _abs (ARG)
     _abs
     _get_temperature (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___fltol
         ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___flneg (ARG)
         ___flsub (ARG)
           ___fladd
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___xxtofl
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
   _configure_ad_conversion_oven
   _configure_ad_conversion_tank
   _get_liters
     ___flmul
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
     ___fltol
       ___fladd (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___flneg (ARG)
       ___flsub (ARG)
         ___fladd
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
     ___xxtofl
       ___awdiv (ARG)
         _abs (ARG)
       _abs (ARG)
   _get_reg_value
   _get_temperature
     ___flmul
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
     ___fltol
       ___fladd (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___flneg (ARG)
       ___flsub (ARG)
         ___fladd
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
     ___xxtofl
       ___awdiv (ARG)
         _abs (ARG)
       _abs (ARG)
   _init_PORTS
   _init_USART
     ___fltol
       ___fladd (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___flneg (ARG)
       ___flsub (ARG)
         ___fladd
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
     _roundf
       ___fladd
       ___flge
         ___fltol (ARG)
           ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
           ___flneg (ARG)
           ___flsub (ARG)
             ___fladd
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
         _get_liters (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
           ___fltol
             ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
             ___flneg (ARG)
             ___flsub (ARG)
               ___fladd
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
           ___xxtofl
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___flneg
       ___flsub
         ___fladd
       ___fltol (ARG)
         ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___flneg (ARG)
         ___flsub (ARG)
           ___fladd
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
   _init_interrupts
   _init_stepper
   _init_timer_0
   _lcd_cmd
     _lcd_wr
   _lcd_init
     _lcd_cmd
       _lcd_wr
   _lcd_str
     ___wmul (ARG)
     _lcd_dat (ARG)
       _lcd_wr
   _lcd_update
     ___wmul
     _lcd_cmd
       _lcd_wr
     _lcd_str
       ___wmul (ARG)
       _lcd_dat (ARG)
         _lcd_wr
   _reach_goal
     _turn_on_current_coil
     _update_current_coil
   _serial_tx_char
   _state_translator_fpga_to_micro
     _lcd_dat
       _lcd_wr
   _state_translator_micro_to_fpga
   _wait_for_zero
     _get_temperature
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___fltol
         ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___flneg (ARG)
         ___flsub (ARG)
           ___fladd
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___xxtofl
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)

 _interrupt_management (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      48       5       56.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     6E      7D       1       99.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C5      15        0.0%
DATA                 0      0      C5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Jun 21 20:20:24 2023

                                           ?_get_reg_value 0001  
                                          ??_wait_for_zero 0040  
                                                       l21 2702  
                                                       l24 2836  
                                                       l27 284A  
                                                       l36 2896  
                                             ___awdiv@sign 000A  
                                      ___wmul@multiplicand 0003  
                                                      l310 231C  
                                                      l152 020A  
                                                      l153 0A96  
                                                      l306 1C32  
                                                      l162 037C  
                                                      l315 2320  
                                                      l155 02A8  
                                                      l252 28BC  
                                                      l164 036E  
                                                      l333 2296  
                                                      l350 2738  
                                                      l342 205A  
                                                      l166 039C  
                                                      l263 28B0  
                                                      l328 282A  
                                                      l272 239E  
                                                      l336 25A4  
                                                      l249 2764  
                                                      l266 27E2  
                                                      l346 2414  
                                                      l372 2868  
                                                      l381 248E  
                                                      l269 278E  
                                                      l285 21EE  
                                                      l630 1F82  
                                                      l278 2552  
                                                      l198 0914  
                                                      l375 241E  
                                                      l391 2808  
                                                      l384 24F2  
                                                      l369 2886  
                                                      l378 2486  
                                                      l395 2130  
                                                      l387 27E8  
                                                      l399 27B8  
                                                      l664 1E42  
                                                      l673 26C2  
                                                      l669 1E90  
                                                      l927 0CE8  
                                                      l696 1D68  
                                                      l944 0E2C  
                                                      l936 1042  
                                                      l928 0CD2  
                                                      l953 0F30  
                                                      l929 0C88  
                                                      l954 0F18  
                                                      l969 263A  
                                        ??_init_interrupts 0001  
                                                      _abs 25A8  
                                init_stepper@register_name 000B  
                                                      wreg 000FE8  
                                             ___flmul@aexp 002C  
                                             ___flmul@bexp 002D  
                                             ___flmul@sign 0027  
                                             ___flmul@temp 0032  
                                             ___flmul@prod 002E  
                                             ___fltol@exp1 003D  
                                                     l1020 1340  
                                                     l1013 1134  
                                                     l1030 149E  
                                                     l1022 13D0  
                                                     l1023 13B8  
                                                     l1017 14E6  
                                                     ?_abs 0001  
                                                     l1061 19DE  
                                                     l1054 1932  
                                                     l1057 1AC4  
                                                     l1074 25E4  
                                                     l2210 0AC0  
                                                     l3010 2820  
                                                     l3002 280E  
                                                     l1068 1A4A  
                                                     l2300 0CC2  
                                                     l2220 0B00  
                                                     l2212 0AC2  
                                                     l3012 2822  
                                                     l3004 281A  
                                                     l2204 28AC  
                                                     l3020 23A4  
                                                     l3100 0204  
                                                     PORTD 000F83  
                                                     l1077 25EE  
                                                     l1085 18CC  
                                                     PORTE 000F84  
                                                     l2302 0CC4  
                                                     l2230 0B3A  
                                                     l2214 0AD8  
                                                     l2222 0B08  
                                                     l2206 0AA2  
                                                     l3014 2824  
                                                     l3006 281C  
                                                     l3022 23D2  
                                                     l3030 23F2  
                                                     l3110 028A  
                                                     l3102 020E  
                                                     l2400 101C  
                                                     l2320 0D66  
                                                     l2312 0D24  
                                                     l2304 0CD0  
                                                     l2240 0B80  
                                                     l2232 0B42  
                                                     l2224 0B1A  
                                                     l2216 0AEC  
                                                     l2208 0AAE  
                                                     l3016 2826  
                                                     l3008 281E  
                                                     l3032 2400  
                                                     l3024 23E6  
                                                     l3200 068C  
                                                     l3120 02F2  
                                                     l3112 028E  
                                                     l3104 0224  
                                                     l2402 102E  
                                                     l2322 0D6C  
                                                     l2314 0D36  
                                                     l2306 0CFC  
                                                     l2330 0D94  
                                                     l2250 0BC6  
                                                     l2242 0B90  
                                                     l2234 0B54  
                                                     l2226 0B22  
                                                     l2218 0AFC  
                                                     l3018 2828  
                                                     l2410 276E  
                                                     l3034 240C  
                                                     l3210 0702  
                                                     l3202 069C  
                                                     l3130 0362  
                                                     l3122 0302  
                                                     l3106 0228  
                                                     l3114 02AE  
                                                     l3050 0090  
                                                     l2500 12F4  
                                                     l2404 1030  
                                                     l2332 0DC0  
                                                     l2340 0E1A  
                                                     l2324 0D80  
                                                     l2316 0D48  
                                                     l2308 0D10  
                                                     l2260 0BEA  
                                                     l2252 0BD8  
                                                     l2244 0B94  
                                                     l2236 0B56  
                                                     l2228 0B38  
                                                     l2420 278C  
                                                     l2412 2774  
                                                     l3220 0760  
                                                     l3212 071A  
                                                     l3204 06B4  
                                                     l3132 036C  
                                                     l3124 031C  
                                                     l3140 03AE  
                                                     l3116 02C6  
                                                     l3108 023E  
                                                     l3060 00D2  
                                                     l3052 0090  
                                                     l3038 2708  
                                                     l2510 1352  
                                                     l2502 1302  
                                                     l2430 1080  
                                                     l2422 104A  
                                                     l2350 0E7C  
                                                     l2342 0E48  
                                                     l2334 0DF4  
                                                     l2326 0D82  
                                                     l2318 0D5A  
                                                     l2270 0BFE  
                                                     l2262 0BEE  
                                                     l2254 0BDC  
                                                     l2238 0B6C  
                                                     l2246 0B9C  
                                                     l2414 2776  
                                                     l3230 07E0  
                                                     l3222 0780  
                                                     l3214 0722  
                                                     l3206 06D4  
                                                     l3150 047E  
                                                     l3142 03C8  
                                                     l3134 0390  
                                                     l3126 0330  
                                                     l3118 02D8  
                                                     l3070 014A  
                                                     l3062 0106  
                                                     l3054 0096  
                                                     l2512 1366  
                                                     l2504 1320  
                                                     l2440 10C6  
                                                     l2432 1094  
                                                     l2424 1056  
                                                     l2600 1CAC  
                                                     l2360 0EB2  
                                                     l2352 0E8E  
                                                     l2344 0E5C  
                                                     l2336 0DF6  
                                                     l2328 0D8E  
                                                     l2280 0C12  
                                                     l2272 0C02  
                                                     l2264 0BF2  
                                                     l2256 0BE2  
                                                     l2248 0BAE  
                                                     l2416 2780  
                                                     l2408 276C  
                                                     l3240 0854  
                                                     l3232 07F2  
                                                     l3224 0798  
                                                     l3208 06EC  
                                                     l3216 0732  
                                                     l3160 04C2  
                                                     l3152 0486  
                                                     l3144 0464  
                                                     l3136 0394  
                                                     l3128 0356  
                                                     l3080 017C  
                                                     l3072 0150  
                                                     l3064 013A  
                                                     l3056 009A  
                                                     l2522 13E6  
                                                     l2530 1432  
                                                     l2514 136A  
                                                     l2506 132C  
                                                     l2450 110A  
                                                     l2442 10CC  
                                                     l2434 10A4  
                                                     l2426 1068  
                                                     l2610 1CDE  
                                                     l2602 1CB0  
                                                     l2370 0EF4  
                                                     l2362 0EC8  
                                                     l2354 0E90  
                                                     l2338 0E0A  
                                                     l2290 0C70  
                                                     l2282 0C16  
                                                     l2274 0C06  
                                                     l2266 0BF6  
                                                     l2258 0BE6  
                                                     l2418 2782  
                                                     l3250 08CA  
                                                     l3242 0870  
                                                     l3234 0808  
                                                     l3226 07AE  
                                                     l3218 074A  
                                                     l3170 0540  
                                                     l3162 04D8  
                                                     l3154 048E  
                                                     l3146 046C  
                                                     l3138 0398  
                                                     l3090 01C0  
                                                     l3082 0190  
                                                     l3074 015C  
                                                     l3066 013E  
                                                     l3058 009E  
                                                     l2540 14B4  
                                                     l2532 1452  
                                                     l2524 13F2  
                                                     l2516 137C  
                                                     l2508 133E  
                                                     l2452 111A  
                                                     l2444 10DE  
                                                     l2436 10AC  
                                                     l2428 106A  
                                                     l2620 1D0E  
                                                     l2612 1CEA  
                                                     l2604 1CC2  
                                                     l2380 0F64  
                                                     l2372 0F0E  
                                                     l2356 0EA4  
                                                     l2348 0E70  
                                                     l2364 0ECA  
                                                     l2292 0C80  
                                                     l2276 0C0A  
                                                     l2268 0BFA  
                                                     l2284 0C1A  
                                                     l2700 17AE  
                                                     l3260 094A  
                                                     l3252 08E4  
                                                     l3236 0824  
                                                     l3228 07C6  
                                                     l3180 05D0  
                                                     l3172 056C  
                                                     l3164 04F4  
                                                     l3148 0476  
                                                     l3156 0496  
                                                     l3084 0196  
                                                     l3092 01C6  
                                                     l3076 015E  
                                                     l3068 0144  
                                                     l2542 14C6  
                                                     l2534 1466  
                                                     l2526 1404  
                                                     l2518 13AE  
                                                     l2470 11AC  
                                                     l2462 1172  
                                                     l2454 1122  
                                                     l2446 10E0  
                                                     l2438 10BE  
                                                     l2622 1D1C  
                                                     l2614 1CF4  
                                                     l2390 0FF2  
                                                     l2382 0FA2  
                                                     l2358 0EAC  
                                                     l2366 0EDC  
                                                     l2294 0C9C  
                                                     l2286 0C20  
                                                     l2278 0C0E  
                                                     l2702 181A  
                                                     l3270 0998  
                                                     l3262 0956  
                                                     l3254 08F8  
                                                     l3238 083C  
                                                     l3246 08A0  
                                                     l3190 0620  
                                                     l3182 05DC  
                                                     l3166 050C  
                                                     l3158 04B0  
                                                     l3174 057C  
                                                     l3094 01D8  
                                                     l3086 01A4  
                                                     l3078 0166  
                                                     l2800 1F5A  
                                                     l2560 1DA2  
                                                     l2640 1960  
                                                     l2632 18D6  
                                                     l2544 14C8  
                                                     l2536 1486  
                                                     l2528 142E  
                                                     l2480 11F6  
                                                     l2472 11C4  
                                                     l2464 1180  
                                                     l2456 114A  
                                                     l2448 10F6  
                                                     l2624 1D30  
                                                     l2392 0FF6  
                                                     l2376 0F46  
                                                     l2384 0FA4  
                                                     l2368 0EE2  
                                                     l2296 0CA8  
                                                     l2288 0C4E  
                                                     l2552 25F6  
                                                     l2704 1850  
                                                     l2720 27D4  
                                                     l2712 27C0  
                                                     l3272 09AA  
                                                     l3264 095C  
                                                     l3256 0928  
                                                     l3248 08BA  
                                                     l3192 063A  
                                                     l3184 05E0  
                                                     l3176 0596  
                                                     l3168 0524  
                                                     l3280 09E2  
                                                     l3096 01E6  
                                                     l3088 01A8  
                                                     l2802 1F70  
                                                     l2570 1E1C  
                                                     l2562 1DB2  
                                                     l2650 19C4  
                                                     l2634 18EA  
                                                     l2538 14A4  
                                                     l2546 14D0  
                                                     l2490 124C  
                                                     l2482 1206  
                                                     l2474 11D0  
                                                     l2466 118A  
                                                     l2458 115C  
                                                     l2626 1D46  
                                                     l2394 100A  
                                                     l2386 0FBA  
                                                     l2378 0F52  
                                                     l2298 0CAE  
                                                     l2554 2606  
                                                     l2706 1896  
                                                     l2810 26F4  
                                                     l2722 27D6  
                                                     l2714 27C2  
                                                     l2730 2520  
                                                     l3290 0A82  
                                                     l3282 09FC  
                                                     l3274 09B2  
                                                     l3266 0976  
                                                     l3258 0930  
                                                     l3194 0656  
                                                     l3186 05FA  
                                                     l3178 05A6  
                                                     l3098 01EA  
                                                     l2804 1F78  
                                                     l2572 1E30  
                                                     l2564 1DE6  
                                                     l2660 1A38  
                                                     l2652 19C8  
                                                     l2644 1974  
                                                     l2636 18FC  
                                                     l2548 14D6  
                                                     l2492 1268  
                                                     l2484 1212  
                                                     l2476 11DC  
                                                     l2468 11A0  
                                                     l2628 1D56  
                                                     l2580 2686  
                                                     l2396 1010  
                                                     l2388 0FCC  
                                                     l2708 18BA  
                                                     l2820 26FE  
                                                     l2812 26F6  
                                                     l2724 27E0  
                                                     l2716 27C8  
                                                     l2732 2522  
                                                     l2740 2558  
                                                     l2900 1B54  
                                                     l3292 0A8E  
                                                     l3284 0A0E  
                                                     l3276 09D4  
                                                     l3268 0978  
                                                     l3196 0662  
                                                     l3188 0610  
                                                     l2574 1E86  
                                                     l2566 1DF6  
                                                     l2558 1D70  
                                                     l2670 1A9E  
                                                     l2662 1A5E  
                                                     l2654 19D4  
                                                     l2646 197E  
                                                     l2638 1944  
                                                     l2494 1274  
                                                     l2486 1222  
                                                     l2478 11EA  
                                                     l2590 1C54  
                                                     l2830 2890  
                                                     l2582 26A0  
                                                     l2398 1014  
                                                     l2822 2700  
                                                     l2814 26F8  
                                                     l2718 27CA  
                                                     l2726 24F8  
                                                     l2750 204A  
                                                     l2910 1BC4  
                                                     l2902 1B6C  
                                                     l2734 241C  
                                                     l3286 0A20  
                                                     l3278 09E0  
                                                     l3198 0672  
                                                     l2576 1E8C  
                                                     l2568 1E0A  
                                                     l2672 1AB0  
                                                     l2664 1A60  
                                                     l2656 1A16  
                                                     l2648 198C  
                                                     l2496 1290  
                                                     l2488 123C  
                                                     l2584 26B0  
                                                     l2680 150E  
                                                     l2816 26FA  
                                                     l2808 26C8  
                                                     l2840 28B6  
                                                     l2760 27B0  
                                                     l2728 2500  
                                                     l2744 1F88  
                                                     l2920 1C20  
                                                     l2912 1BD8  
                                                     l2904 1B80  
                                                     l2736 2432  
                                                     l3288 0A36  
                                                     l2770 1EB6  
                                                     l2674 1AB2  
                                                     l2666 1A66  
                                                     l2658 1A24  
                                                     l2754 25AA  
                                                     l2498 12BA  
                                                     l2594 1C6A  
                                                     l2834 273E  
                                                     l2690 15FE  
                                                     l2682 155E  
                                                     l2818 26FC  
                                                     l2850 2226  
                                                     l2842 21F4  
                                                     l2746 2014  
                                                     l2826 2832  
                                                     l2906 1B98  
                                                     l2930 22E4  
                                                     l2780 1EE4  
                                                     l2772 1EBA  
                                                     l2764 1E98  
                                                     l2668 1A8A  
                                                     l2756 25C8  
                                                     l2596 1C9A  
                                                     l2588 1C3A  
                                                     l2828 288C  
                                                     l2836 2762  
                                                     l2684 1572  
                                                     l2860 2282  
                                                     l2852 222A  
                                                     l2940 2138  
                                                     l2748 2028  
                                                     l2916 1BF4  
                                                     l2908 1BAC  
                                                     l2932 22EC  
                                                     l2924 229C  
                                                     l2790 1F28  
                                                     l2782 1EFA  
                                                     l2774 1ECE  
                                                     l2766 1E9C  
                                                     l2598 1C9C  
                                                     l2694 1636  
                                                     l2686 15B8  
                                                     l2678 14EE  
                                                     l2854 224A  
                                                     l2870 2350  
                                                     l2862 2326  
                                                     l2758 2794  
                                                     l2950 216E  
                                                     l2942 213E  
                                                     l2918 1C0C  
                                                     l2934 230E  
                                                     l2926 22BC  
                                                     l2792 1F42  
                                                     l2784 1F02  
                                                     l2776 1ED6  
                                                     l2768 1EAE  
                                                     l2960 2854  
                                                     l2696 170A  
                                                     l2688 15DC  
                                                     l2856 225A  
                                                     l2848 21FC  
                                                     l2880 238C  
                                                     l2872 2368  
                                                     l2864 2336  
                                                     l2952 2182  
                                                     l2944 2166  
                                                     l2936 2316  
                                                     l2928 22C4  
                                                     l2794 1F4A  
                                                     l2786 1F0C  
                                                     l2778 1EDA  
                                                     l2962 2856  
                                                     l2970 24A2  
                                                     l2698 1776  
                                                     l2858 226E  
                                                     l2882 2392  
                                                     l2874 237A  
                                                     l2866 2348  
                                                     l2954 21CA  
                                                     l2890 1AE8  
                                                     l2796 1F4C  
                                                     l2788 1F20  
                                                     l2964 2858  
                                                     l2884 2398  
                                                     l2876 2380  
                                                     l2868 234A  
                                                     l2956 21CE  
                                                     l2892 1AFC  
                                                     l2798 1F54  
                                                     l2974 2062  
                                                     l2990 2872  
                                                     l2966 285A  
                                                     l2958 2850  
                                                     l2878 2386  
                                                     l2894 1B14  
                                                     l2886 1ACE  
                                                     l2976 20E4  
                                                     l2984 2126  
                                                     l2992 2874  
                                                     l2968 248C  
                                                     l2896 1B28  
                                                     l2888 1AD4  
                                                     l2978 211A  
                                                     l2994 2876  
                                                     l2898 1B40  
                                                     l2996 2878  
                                                     l2988 286E  
                                                     l2998 27EA  
                                                     TRISD 000F95  
                                                     TRISE 000F96  
                                                     STR_1 7FE9  
                                            _state_changed 007B  
                                                     u2000 0EA2  
                                                     u2001 0E9C  
                                                     u2010 0EC6  
                                                     u2011 0EC0  
                                                     u2100 0FCC  
                                                     u2020 0EDC  
                                                     u2101 0FC6  
                                                     u2021 0ED6  
                                                     u2110 0FF0  
                                                     u2030 0EF2  
                                                     u2111 0FEA  
                                                     u2031 0EEC  
                                                     u2200 1148  
                                                     u2120 1008  
                                                     u2040 0F0C  
                                                     u3000 0222  
                                                     u2201 1142  
                                                     u2121 1002  
                                                     u2041 0F06  
                                                     u3001 021C  
                                                     u2210 115C  
                                                     u2130 102C  
                                                     u2050 0F2A  
                                                     u3010 0288  
                                                     u2211 1156  
                                                     u2131 1026  
                                                     u2051 0F24  
                                                     u3011 0282  
                                                     u2300 1450  
                                                     u2220 12DC  
                                                     u2140 1066  
                                                     u2060 0F44  
                                                     u3100 04D6  
                                                     u3020 02C4  
                                                     u2301 144A  
                                                     u2141 1060  
                                                     u2061 0F3E  
                                                     u3101 04D0  
                                                     u3021 02BE  
                                                     _LATA 000F89  
                                                     u2310 1484  
                                                     u2230 133C  
                                                     u2150 107E  
                                                     u2070 0F62  
                                                     u3110 050A  
                                                     u3030 02F0  
                                                     _LATB 000F8A  
                                                     u2311 147E  
                                                     u2231 1336  
                                                     u2151 1078  
                                                     u2071 0F5C  
                                                     u3111 0504  
                                                     u3031 02EA  
                                                     _LATC 000F8B  
                                                     u2320 14C4  
                                                     u2240 1364  
                                                     u2160 1092  
                                                     u2400 1C8E  
                                                     u2080 0FA0  
                                                     u3200 06B2  
                                                     u3120 0522  
                                                     u3040 031A  
                                                     u2321 14BE  
                                                     u2241 135E  
                                                     u2225 12D0  
                                                     u2161 108C  
                                                     u2081 0F9A  
                                                     u3201 06AC  
                                                     u3121 051C  
                                                     u3041 0314  
                                                     u2330 1DA0  
                                                     u2250 137A  
                                                     u2170 10DC  
                                                     u2410 1CC0  
                                                     u2090 0FB8  
                                                     u3210 06EA  
                                                     u3130 056A  
                                                     u3050 032E  
                                                     u2331 1D9A  
                                                     u2251 1374  
                                                     u2171 10D6  
                                                     u2411 1CBA  
                                                     u2091 0FB2  
                                                     u3211 06E4  
                                                     u3131 0564  
                                                     u3051 0328  
                                                     u2340 1DE4  
                                                     u2500 1A10  
                                                     u2260 13AC  
                                                     u2180 10F4  
                                                     u2420 1CD8  
                                                     u3300 0852  
                                                     u3220 0700  
                                                     u3140 0594  
                                                     u3060 0354  
                                                     u2341 1DDE  
                                                     u2501 1A0A  
                                                     u2261 13A6  
                                                     u2181 10EE  
                                                     u2421 1CD2  
                                                     u2405 1C82  
                                                     u3301 084C  
                                                     u3221 06FA  
                                                     u3141 058E  
                                                     u3061 034E  
                                                     u2350 1E08  
                                                     u2510 1A36  
                                                     u2270 13CA  
                                                     u2190 1108  
                                                     u2430 1D08  
                                                     u3310 089A  
                                                     u3230 0748  
                                                     u3150 05CE  
                                                     u3070 038E  
                                                     u2351 1E02  
                                                     u2511 1A30  
                                                     u2271 13C4  
                                                     u2191 1102  
                                                     u2431 1D02  
                                                     u3311 0894  
                                                     u3231 0742  
                                                     u3151 05C8  
                                                     u3071 0388  
                                                     u2360 1E2E  
                                                     u2520 1A4A  
                                                     u2280 13E4  
                                                     u2440 1D30  
                                                     u1800 0B6A  
                                                     u2600 15FC  
                                                     u3400 09FA  
                                                     u3320 08B8  
                                                     u3240 075E  
                                                     u3160 05F8  
                                                     u3080 03C6  
                                                     u2361 1E28  
                                                     u2521 1A44  
                                                     u2281 13DE  
                                                     u2441 1D2A  
                                                     u1801 0B64  
                                                     u2601 15F6  
                                                     u3401 09F4  
                                                     u3321 08B2  
                                                     u3241 0758  
                                                     u3161 05F2  
                                                     u3081 03C0  
                                                     u2370 1E84  
                                                     u2530 1A5C  
                                                     u2290 1402  
                                                     u2450 1D44  
                                                     u1810 0B7E  
                                                     u2610 1708  
                                                     u3410 0A0C  
                                                     u3330 08E2  
                                                     u3250 0796  
                                                     u3170 060E  
                                                     u3090 04AE  
                                                     u2371 1E7E  
                                                     u2531 1A56  
                                                     u2291 13FC  
                                                     u2451 1D3E  
                                                     u1811 0B78  
                                                     u2611 1702  
                                                     u3411 0A06  
                                                     u3331 08DC  
                                                     u3251 0790  
                                                     u3171 0608  
                                                     u3091 04A8  
                                                     u2700 1EAC  
                                                     u2540 1A9C  
                                                     u2460 18E8  
                                                     u2380 269E  
                                                     u1900 0CFA  
                                                     u1820 0BC4  
                                                     u2620 17AC  
                                                     u3420 0A1E  
                                                     u3340 08F6  
                                                     u3260 07AC  
                                                     u3180 0638  
                                                     u2701 1EA6  
                                                     u2541 1A96  
                                                     u2461 18E2  
                                                     u2381 2698  
                                                     u1901 0CF4  
                                                     u1821 0BBE  
                                                     u2621 17A6  
                                                     u3421 0A18  
                                                     u3341 08F0  
                                                     u3261 07A6  
                                                     u3181 0632  
                                                     u2710 1ECC  
                                                     u2550 1AAE  
                                                     u2470 18FA  
                                                     u2390 1C52  
                                                     u1910 0D0E  
                                                     u1830 0BD6  
                                                     u1750 0ABE  
                                                     u2630 1874  
                                                     u3430 0A80  
                                                     u3350 0926  
                                                     u3270 07DE  
                                                     u3190 068A  
                                                     u2711 1EC6  
                                                     u2551 1AA8  
                                                     u2471 18F4  
                                                     u2391 1C4C  
                                                     u1911 0D08  
                                                     u1831 0BD0  
                                                     u1751 0AB8  
                                                     u3431 0A7A  
                                                     u3351 0920  
                                                     u3271 07D8  
                                                     u3191 0684  
                                                     u2720 1EF8  
                                                     u2480 195E  
                                                     u1920 0D46  
                                                     u1840 0C4C  
                                                     u1760 0AD6  
                                                     u2640 1894  
                                                     u2560 1530  
                                                     u2800 1B3E  
                                                     u3360 0948  
                                                     u3280 0806  
                                                     u2721 1EF2  
                                                     u2481 1958  
                                                     u1921 0D40  
                                                     u1841 0C46  
                                                     u1761 0AD0  
                                                     u2641 188E  
                                                     u2801 1B38  
                                                     u3361 0942  
                                                     u3281 0800  
                                                     u2730 1F1E  
                                                     u2490 19BE  
                                                     u1930 0D58  
                                                     u1850 0C68  
                                                     u1770 0AEA  
                                                     u2570 155C  
                                                     u2650 2550  
                                                     u2810 1B6A  
                                                     u3370 0974  
                                                     u3290 083A  
                                                     u2731 1F18  
                                                     u2491 19B8  
                                                     u1931 0D52  
                                                     u1851 0C60  
                                                     u1771 0AE4  
                                                     u2635 1868  
                                                     u2571 1556  
                                                     u3507 2778  
                                                     u2651 254A  
                                                     u2811 1B64  
                                                     u3371 096E  
                                                     u3291 0834  
                                                     u2740 1F40  
                                                     u2900 24A0  
                                                     u1940 0D7E  
                                                     u1860 0C6C  
                                                     u1780 0B36  
                                                     u2580 1596  
                                                     u2820 1B96  
                                                     u2660 2430  
                                                     u3380 0996  
                                                     u2741 1F3A  
                                                     u2901 249A  
                                                     u1941 0D78  
                                                     u1781 0B30  
                                                     u2565 1524  
                                                     u3517 2784  
                                                     u2821 1B90  
                                                     u2661 242A  
                                                     u3381 0990  
                                                     u2750 1F6E  
                                                     u2910 20E2  
                                                     u1950 0DBE  
                                                     u1870 0C9A  
                                                     u1790 0B52  
                                                     u2590 15B6  
                                                     u2670 2012  
                                                     u2830 1BC2  
                                                     u3390 09D2  
                                                     u2751 1F68  
                                                     u2911 20DC  
                                                     u1951 0DB8  
                                                     u1871 0C94  
                                                     u1791 0B4C  
                                                     u2591 15B0  
                                                     u3527 233C  
                                                     u2671 200C  
                                                     u2831 1BBC  
                                                     u3391 09CC  
                                                     u3447 04B6  
                                                     u2920 2118  
                                                     u1960 0E08  
                                                     u1880 0CC0  
                                                     u2680 2048  
                                                     u2760 2848  
                                                     u2840 1BEE  
                                                     u2921 2112  
                                                     u1961 0E02  
                                                     u1881 0CBA  
                                                     u2585 158A  
                                                     u3537 2356  
                                                     u2681 2042  
                                                     u2761 2842  
                                                     u2841 1BE8  
                                                     u3457 059C  
                                                     u2690 25C6  
                                                     u1970 0E46  
                                                     u1890 0CE8  
                                                     u2770 2248  
                                                     u2850 1C0A  
                                                     u2930 2806  
                                                     u2691 25C0  
                                                     u1971 0E40  
                                                     u1891 0CE2  
                                                     u2771 2242  
                                                     u3547 236E  
                                                     u2851 1C04  
                                                     u2931 2800  
                                                     u3467 0692  
                                                     u1980 0E5A  
                                                     u2940 23D0  
                                                     u2780 1AE6  
                                                     u2860 22BA  
                                                     u1981 0E54  
                                                     u3557 27CC  
                                                     u2941 23CA  
                                                     u2781 1AE0  
                                                     u2861 22B4  
                                                     u3477 070C  
                                                     u1990 0E8C  
                                                     u2790 1B12  
                                                     u2870 22E2  
                                                     u1991 0E86  
                                                     u3567 27D8  
                                                     u2791 1B0C  
                                                     u2871 22DC  
                                                     u3487 07E6  
                                                     u2880 230C  
                                                     u2960 017A  
                                                     u2881 2306  
                                                     u3497 099E  
                                                     u2961 0174  
                                                     u2890 21EC  
                                                     u2970 018E  
                                                     u2891 21E6  
                                                     u2971 0188  
                                                     u2980 01BE  
                                                     u2981 01B8  
                                                     u2990 0202  
                                                     u2991 01FC  
                                                     abs@a 0001  
                                              lcd_update@i 0014  
                                                     _main 0090  
                                                     _fosc 7FE5  
                                                     fsr1h 000FE2  
                                                     fsr2h 000FDA  
                                                     indf1 000FE7  
                                                     indf2 000FDF  
                                                     fsr1l 000FE1  
                                                     fsr2l 000FD9  
                                                     _tosc 00BA  
                                                     btemp 007E  
                                              main@rx_char 006A  
                                                     prodh 000FF4  
                                            _trash_counter 0073  
                                                     prodl 000FF3  
                                                     start 008C  
         state_translator_fpga_to_micro@state_machine_code 0005  
                                             ___param_bank 000000  
                                                    ??_abs 0003  
                            __size_of_interrupt_management 0084  
                                            ___fltol@sign1 003C  
                                          __end_of___fladd 1048  
                                                    ?_main 0001  
                                          __end_of___awdiv 1F86  
                                          __end_of___flneg 26C6  
                                          __end_of___flmul 14EC  
                                          __end_of___flsub 263E  
                                          __end_of___fltol 1D6E  
                                                    _T0CON 000FD5  
                                          ___awdiv@divisor 0007  
                                                    i2l220 0084  
                              __end_of_update_current_coil 2060  
                                          ___awdiv@counter 0009  
                                                    _RCREG 000FAE  
                                                    _TMR0H 000FD7  
                                                    _TMR0L 000FD6  
                                                    _SPBRG 000FAF  
                                                    _PORTA 000F80  
                                                    _PORTB 000F81  
                                                    _PORTC 000F82  
                                                    _PORTD 000F83  
                                                    _TRISA 000F92  
                                                    _TRISB 000F93  
                                                    _TRISC 000F94  
                                                    _TXREG 000FAD  
                                         ?_get_temperature 003E  
                                          __end_of_lcd_dat 2792  
                                          __end_of_lcd_cmd 27E6  
                     __end_of_configure_ad_conversion_tank 286C  
                    __size_of_configure_ad_conversion_tank 001E  
                             _configure_ad_conversion_tank 284E  
                     __end_of_configure_ad_conversion_oven 288A  
                    __size_of_configure_ad_conversion_oven 001E  
                             _configure_ad_conversion_oven 286C  
                                          __end_of_lcd_str 2556  
                                                    _state 007C  
                                                    _toint 7B29  
                                                    tablat 000FF5  
                                                    ttemp5 007F  
                                                    ttemp6 0082  
                                                    ttemp7 0086  
                                                    status 000FD8  
                                                    wtemp8 007F  
                                       _end_effector_homed 006F  
                                          ??_get_reg_value 0001  
                                     get_reg_value@rx_char 0001  
                                          __initialization 263E  
                                             __end_of_main 0AA0  
                                             __end_of_fosc 7FE9  
                                    lcd_update@line_select 0010  
                                                   ??_main 0066  
                                            __activetblptr 000002  
                                                   _ADCON0 000FC2  
                                                   _ADCON1 000FC1  
                                         _change_direction 2706  
                                                   _ADRESH 000FC4  
                                                   _ADRESL 000FC3  
                             __end_of_turn_on_current_coil 25A8  
                            ?_configure_ad_conversion_tank 0001  
                                         ___awdiv@dividend 0005  
                            ?_configure_ad_conversion_oven 0001  
                                                   i2l2200 007C  
                                                   i2l2202 0082  
                                                   i2l2190 0032  
                                                   i2l2192 004A  
                                                   i2l2184 000C  
                                                   i2l2186 001E  
                                                   i2l2194 0052  
                                                   i2l2196 0066  
                                                   i2l2188 0030  
                                                   i2l2198 0078  
                                         __end_of___xxtofl 1ACA  
                                            ?_init_timer_0 0001  
                   __end_of_state_translator_fpga_to_micro 1C38  
                  __size_of_state_translator_fpga_to_micro 016E  
                           _state_translator_fpga_to_micro 1ACA  
                                            ?_init_stepper 0001  
                                         __end_of_lcd_init 23A2  
                                                   ___flge 1D6E  
                                                ??___fladd 0009  
                                                   ___wmul 2792  
                                                ??___awdiv 0009  
                                                ??___flneg 0005  
                                                ??___flmul 0023  
                                                ??___flsub 0019  
                                                ??___fltol 0038  
                                                   _lcd_wr 28A8  
                                                   clear_0 2664  
                                                   clear_1 2670  
                                         ___awdiv@quotient 000B  
                                                   _roundf 14EC  
                                                ??_lcd_dat 0002  
                                                ??_lcd_cmd 0002  
                                                ??_lcd_str 0009  
                                             __mediumconst 7B28  
                                                   tblptrh 000FF7  
                                                   tblptrl 000FF6  
                                                   tblptru 000FF8  
                                  reach_goal@goal_to_reach 000B  
                                               ___flge@ff1 0040  
                                               ___flge@ff2 0044  
                         update_current_coil@stepper_motor 0001  
                                             ___xxtofl@arg 0017  
                                             ___xxtofl@exp 0016  
                                             ___xxtofl@val 000D  
                                               __accesstop 0080  
                                  __end_of__initialization 2676  
                                               ___flneg@f1 0001  
                                        serial_tx_char@val 0001  
                                           ??_init_timer_0 0001  
                                            ___rparam_used 000001  
                                               ___fltol@f1 0034  
                                           ??_init_stepper 000D  
                                          _init_interrupts 28B4  
                                           __pcstackCOMRAM 0001  
                                             __pidataBANK0 289A  
                                            __end_of_toint 7B2D  
                                          _temperature_int 0086  
                                  __size_of_serial_tx_char 0020  
                      state_translator_fpga_to_micro@state 0003  
                                         _mix_current_step 0094  
                                               __pbssBANK0 0080  
                           ??_configure_ad_conversion_tank 0001  
                           ??_configure_ad_conversion_oven 0001  
                                                  ?___flge 0040  
                                                  ?___wmul 0001  
                      check_temperature@temp_to_be_checked 004C  
                                                  ?_lcd_wr 0001  
                                     _turn_on_current_coil 2556  
                                    __end_of_wait_for_zero 280C  
                                  _hex_end_effector_values 00C0  
                                            _read_new_char 007A  
                          _grasping_joint_position_reached 0071  
                                                  ?_roundf 004C  
                                       _temperature_scaled 0084  
                                                ?___xxtofl 000D  
                                  reach_goal@stepper_motor 0009  
                                               _get_liters 248A  
                        turn_on_current_coil@stepper_motor 0001  
                                         _desired_baudrate 7B31  
                                               _lcd_update 2136  
                                                ?_lcd_init 0001  
                             __end_of_interrupt_management 008C  
                                  __end_of_init_interrupts 28C0  
                                               _const_msgs 7B35  
                                        _check_temperature 2060  
                            change_direction@stepper_motor 0001  
                                                  __Hparam 0000  
                                       ?_check_temperature 004C  
                                                  __Lparam 0000  
                                               _init_PORTS 273C  
                                               _init_USART 26C6  
                                          __size_of___flge 0128  
                                                  ___fladd 0AA0  
                                                  ___awdiv 1E96  
                                                  ___flneg 2684  
                                                  ___flmul 1048  
                                 __end_of_change_direction 273C  
                                                  ___flsub 25F4  
                                                  ___fltol 1C38  
                                          __size_of___wmul 002A  
                                    ?_turn_on_current_coil 0001  
                                       _state_before_error 00BE  
                                          __size_of_lcd_wr 000C  
                                      ??_check_temperature 004E  
                                                  __pcinit 263E  
                     init_stepper@hex_coil_register_values 0009  
                                                  __ramtop 0600  
                                               _reach_goal 23A2  
                                                  __ptext0 0090  
                                                  __ptext1 27E6  
                                                  __ptext2 241A  
                                                  __ptext3 229A  
                                                  __ptext4 1ACA  
                                                  __ptext5 282E  
                                                  __ptext6 23A2  
                                                  __ptext7 1F86  
                                                  __ptext8 2556  
                                                  __ptext9 2136  
                                                  _lcd_dat 2768  
                                                  _lcd_cmd 27BC  
                                                  _lcd_str 24F6  
                                                _T0CONbits 000FD5  
                                          __size_of_roundf 03E6  
                                             __size_of_abs 004C  
                                               ??___xxtofl 0011  
                                     __end_of_init_timer_0 282E  
                                     __end_of_init_stepper 229A  
                                            _joint_stepper 00AE  
                                               ??_lcd_init 0003  
                             __size_of_update_current_coil 00DA  
                                     end_of_initialization 2676  
                                __end_of_check_temperature 2136  
                                 __size_of_get_temperature 0070  
                                            __Lmediumconst 7B28  
                      state_translator_micro_to_fpga@state 0001  
                                    __end_of_get_reg_value 289A  
                                                _RCSTAbits 000FAB  
                                                  postdec1 000FE5  
                                                  postdec2 000FDD  
                                                  postinc0 000FEE  
                                                  postinc1 000FE6  
                                                  postinc2 000FDE  
                                                  roundf@e 0058  
                                                  roundf@u 005E  
                                                  roundf@x 004C  
                                                  roundf@y 0062  
                                               _timer_done 0079  
                                                _PORTEbits 000F84  
                         ??_state_translator_fpga_to_micro 0005  
                          ?_state_translator_fpga_to_micro 0003  
                                              ___fladd@grs 0010  
                                           _serial_tx_char 282E  
                                            ___xxtofl@sign 0015  
                                                _TRISCbits 000F94  
                                              ?_get_liters 003E  
                                               lcd_dat@val 0002  
                                               lcd_cmd@val 0002  
                                              ?_lcd_update 000C  
                                            _mix_direction 0092  
                                     _end_effector_stepper 00A2  
                                              ___flmul@grs 0028  
                                         ?_init_interrupts 0001  
                                                _TXSTAbits 000FAC  
                                         main@current_temp 0068  
                                               lcd_str@str 0007  
                                              ?_init_PORTS 0001  
                                              ?_init_USART 0001  
                                   ??_turn_on_current_coil 0003  
                                           __end_of___flge 1E96  
                   __end_of_state_translator_micro_to_fpga 2324  
                  __size_of_state_translator_micro_to_fpga 008A  
                           _state_translator_micro_to_fpga 229A  
                             _grasping_ee_position_reached 008E  
                                           __end_of___wmul 27BC  
                                           __end_of_lcd_wr 28B4  
                                              ?_reach_goal 0009  
                                     _interrupt_management 0008  
         state_translator_micro_to_fpga@state_machine_code 0005  
                                   __end_of_serial_tx_char 284E  
                                           __end_of_roundf 18D2  
                                      start_initialization 263E  
                                              __end_of_abs 25F4  
                                         _hex_joint_values 00C4  
                               __size_of_check_temperature 00D6  
                                 init_stepper@current_coil 0003  
                                init_stepper@stepper_motor 0001  
                                        ??_get_temperature 0040  
                                                 ??___flge 0048  
                                 __end_of_desired_baudrate 7B35  
                                      __size_of_get_liters 006C  
                                                 ??___wmul 0005  
                                      __size_of_lcd_update 00BC  
                                                 ??_lcd_wr 0001  
                                              __pdataBANK0 00BA  
                                    check_temperature@grad 004E  
                                    __size_of_init_timer_0 0022  
                                    ?_interrupt_management 0001  
                                    __size_of_init_stepper 00A8  
                                                 ??_roundf 0050  
                                          ?_serial_tx_char 0001  
                                                ___fladd@a 0005  
                                                ___fladd@b 0001  
                                                ___flmul@a 001F  
                                                ___flmul@b 001B  
                                              __pbssCOMRAM 006F  
                                                ___flsub@a 0015  
                                                ___flsub@b 0011  
                                        __size_of___xxtofl 01F8  
                                      __size_of_init_PORTS 002C  
                                      __size_of_init_USART 0040  
                                        __size_of_lcd_init 007E  
                                      __size_of_reach_goal 0078  
                                             _init_timer_0 280C  
                                                _main$1663 006B  
                                             _init_stepper 21F2  
                                    init_stepper@direction 0007  
                                                __pintcode 0008  
                                            __pmediumconst 7B28  
                                                 ?___fladd 0001  
                                                 ?___awdiv 0005  
                                                 ?___flneg 0001  
                                                 ?___flmul 001B  
                                                 ?___flsub 0011  
                                                 ?___fltol 0034  
                                      _update_current_coil 1F86  
                                        ?_change_direction 0001  
                                       ??_change_direction 0003  
                                                 ?_lcd_dat 0001  
                                                 ?_lcd_cmd 0001  
                                                 ?_lcd_str 0007  
                                         _mix_step_counter 0090  
                                     ?_update_current_coil 0001  
                                   __size_of_wait_for_zero 0026  
                                           ___wmul@product 0005  
                                                 _LATAbits 000F89  
                                                 _LATCbits 000F8B  
                                                 _PIE1bits 000F9D  
                                    _joint_dilutor_stepper 0096  
                                                 i2u170_40 001C  
                                                 i2u170_41 0016  
                                                 i2u171_40 002E  
                                                 i2u171_41 0028  
                                                 i2u172_40 0048  
                                                 i2u172_41 0042  
                                                 i2u173_40 0064  
                                                 i2u173_41 005E  
                                                 i2u174_40 0076  
                                                 i2u174_41 0070  
                                                 _PIR1bits 000F9E  
                                   ??_interrupt_management 0001  
                                               _ADCON0bits 000FC2  
                                        ___wmul@multiplier 0001  
                                                lcd_wr@val 0001  
                                             ??_get_liters 0040  
                                             ??_lcd_update 000E  
                                    ??_update_current_coil 0003  
                                                copy_data0 2652  
                                               roundf@F525 0080  
                                                 __Hrparam 0000  
                                             ??_init_PORTS 0001  
                                             ??_init_USART 0066  
                                                 __Lrparam 0000  
                                       __end_of_get_liters 24F6  
                                         __size_of___fladd 05A8  
                                         __size_of___awdiv 00F0  
                                         __size_of___flneg 0042  
                                         __size_of___flmul 04A4  
                                         __size_of___flsub 004A  
                                         __size_of___fltol 0136  
                                       __end_of_lcd_update 21F2  
                                            _wait_for_zero 27E6  
                                             ??_reach_goal 000D  
                                          lcd_update@F2139 7B2D  
                                         __size_of_lcd_dat 002A  
                                         __size_of_lcd_cmd 002A  
                                         __size_of_lcd_str 0060  
                                       __end_of_const_msgs 7FE5  
                                                 ___xxtofl 18D2  
                                                 __ptext10 24F6  
                                                 __ptext11 2768  
                                                 __ptext20 14EC  
                                                 __ptext12 2792  
                                                 __ptext21 25F4  
                                                 __ptext13 2324  
                                                 __ptext30 286C  
                                                 __ptext22 0AA0  
                                                 __ptext14 27BC  
                                                 __ptext31 2060  
                                                 __ptext23 2684  
                                                 __ptext15 28A8  
                                                 __ptext32 25A8  
                                                 __ptext24 273C  
                                                 __ptext16 280C  
                                                 __ptext33 18D2  
                                                 __ptext25 288A  
                                                 __ptext17 21F2  
                                                 __ptext34 1D6E  
                                                 __ptext26 248A  
                                                 __ptext18 28B4  
                                                 __ptext35 1E96  
                                                 __ptext27 1C38  
                                                 __ptext19 26C6  
                                                 __ptext36 2706  
                                                 __ptext28 1048  
                                                 __ptext29 284E  
                         ??_state_translator_micro_to_fpga 0003  
                          ?_state_translator_micro_to_fpga 0001  
                                   __size_of_get_reg_value 0010  
                                       __end_of_init_PORTS 2768  
                                                 _lcd_init 2324  
                                       __end_of_init_USART 2706  
                                          _get_temperature 241A  
                                          lcd_update@state 000C  
                                _diluting_position_reached 008C  
                                            __size_of_main 0A10  
                                              _joint_homed 008A  
                                       __end_of_reach_goal 241A  
                                 __size_of_init_interrupts 000C  
                                                 int$flags 007E  
                                         ??_serial_tx_char 0001  
                            __size_of_turn_on_current_coil 0052  
                                           ?_wait_for_zero 0001  
                                                 lcd_str@i 000B  
                                              _mix_counter 0077  
                                               _INTCONbits 000FF2  
                                                 intlevel2 28C0  
                                      _joint_dilutor_homed 0088  
                                  __end_oflcd_update@F2139 7B31  
                                            _get_reg_value 288A  
                                            init_stepper@i 000F  
                                            _dilution_done 0075  
                                  __end_of_get_temperature 248A  
                                 init_stepper@step_counter 0005  
                                __size_of_change_direction 0036  
                                            ___fladd@signs 000D  
                                             ___fladd@aexp 000E  
                                             ___fladd@bexp 000F  
                                              _roundf$1664 005A  
                                              _roundf$1665 0054  
