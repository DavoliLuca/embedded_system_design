

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Jun 11 01:27:23 2023

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=3
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    82                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    83                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    84                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    85                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    86                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    87  0000                     
    88                           ; Version 2.20
    89                           ; Generated 12/02/2020 GMT
    90                           ; 
    91                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    92                           ; All rights reserved.
    93                           ; 
    94                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    95                           ; 
    96                           ; Redistribution and use in source and binary forms, with or without modification, are
    97                           ; permitted provided that the following conditions are met:
    98                           ; 
    99                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   100                           ;        conditions and the following disclaimer.
   101                           ; 
   102                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   103                           ;        of conditions and the following disclaimer in the documentation and/or other
   104                           ;        materials provided with the distribution.
   105                           ; 
   106                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   107                           ;        software without specific prior written permission.
   108                           ; 
   109                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   110                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   111                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   112                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   113                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   114                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   115                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   116                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   117                           ; 
   118                           ; 
   119                           ; Code-generator required, PIC18F452 Definitions
   120                           ; 
   121                           ; SFR Addresses
   122  0000                     
   123                           	psect	idataBANK0
   124  006503                     __pidataBANK0:
   125                           	callstack 0
   126                           
   127                           ;initializer for stoa@F1152
   128  006503  28                 	db	40
   129  006504  6E                 	db	110
   130  006505  75                 	db	117
   131  006506  6C                 	db	108
   132  006507  6C                 	db	108
   133  006508  29                 	db	41
   134  006509  00                 	db	0
   135                           
   136                           ;initializer for _pwm_period
   137                           ;timer.c: 5: static double const f_osc = 1000000;;timer.c: 6: static double const t_osc 
      +                          = 1/f_osc;;timer.c: 7: static double pwm_period = 20e-3;
   138  00650A  D70A               	dw	55050
   139  00650C  3CA3               	dw	15523
   140                           
   141                           ;initializer for _tosc
   142  00650E  37BD               	dw	14269
   143  006510  3486               	dw	13446
   144                           
   145                           ;initializer for _tmr2_prescaler
   146  006512  0000               	dw	0
   147  006514  4180               	dw	16768
   148                           
   149                           	psect	idataBANK1
   150  006536                     __pidataBANK1:
   151                           	callstack 0
   152                           
   153                           ;initializer for _state_msgs
   154  006536  3B                 	db	low STR_1
   155  006537  7F                 	db	high STR_1
   156  006538  C9                 	db	low STR_2
   157  006539  7E                 	db	high STR_2
   158  00653A  BB                 	db	low STR_3
   159  00653B  7F                 	db	high STR_3
   160  00653C  6C                 	db	low STR_4
   161  00653D  7F                 	db	high STR_4
   162  00653E  A9                 	db	low STR_5
   163  00653F  7F                 	db	high STR_5
   164  006540  C4                 	db	low STR_6
   165  006541  7F                 	db	high STR_6
   166  006542  B2                 	db	low STR_7
   167  006543  7F                 	db	high STR_7
   168  006544  09                 	db	low STR_8
   169  006545  7F                 	db	high STR_8
   170                           
   171                           ;initializer for _hex_end_effector_values
   172  006546  0010               	dw	16
   173  006548  0020               	dw	32
   174  00654A  0040               	dw	64
   175  00654C  0080               	dw	128
   176                           
   177                           ;initializer for _hex_joint_values
   178  00654E  0001               	dw	1
   179  006550  0002               	dw	2
   180  006552  0004               	dw	4
   181  006554  0008               	dw	8
   182                           
   183                           	psect	mediumconst
   184  007EB4                     __pmediumconst:
   185                           	callstack 0
   186  007EB4  00                 	db	0
   187  007EB5  0000               	dw	0
   188  007EB7  4B00               	dw	19200
   189  007EB9                     __end_of_toint:
   190                           	callstack 0
   191  007EB9  0000               	dw	0
   192  007EBB  4616               	dw	17942
   193  007EBD                     __end_of_desired_baudrate:
   194                           	callstack 0
   195  007EBD  37BD               	dw	14269
   196  007EBF  3586               	dw	13702
   197  007EC1                     __end_of_t_osc:
   198                           	callstack 0
   199  007EC1  2400               	dw	9216
   200  007EC3  4974               	dw	18804
   201  007EC5                     __end_of_f_osc:
   202                           	callstack 0
   203  007EC5  2400               	dw	9216
   204  007EC7  4A74               	dw	19060
   205  007EC9                     __end_of_fosc:
   206                           	callstack 0
   207  0000                     _ADCON1	set	4033
   208  0000                     _ADRESL	set	4035
   209  0000                     _ADRESH	set	4036
   210  0000                     _ADCON0bits	set	4034
   211  0000                     _ADCON0	set	4034
   212  0000                     _CCPR1L	set	4030
   213  0000                     _CCP1CONbits	set	4029
   214  0000                     _CCP1CON	set	4029
   215  0000                     _PR2	set	4043
   216  0000                     _T2CONbits	set	4042
   217  0000                     _TMR2	set	4044
   218  0000                     _T2CON	set	4042
   219  0000                     _TMR0H	set	4055
   220  0000                     _TMR0L	set	4054
   221  0000                     _PORTEbits	set	3972
   222  0000                     _PORTD	set	3971
   223  0000                     _TRISCbits	set	3988
   224  0000                     _PORTC	set	3970
   225  0000                     _LATC	set	3979
   226  0000                     _TRISB	set	3987
   227  0000                     _PORTB	set	3969
   228  0000                     _LATB	set	3978
   229  0000                     _TRISA	set	3986
   230  0000                     _PORTA	set	3968
   231  0000                     _LATA	set	3977
   232  0000                     _T0CON	set	4053
   233  0000                     _PIR1bits	set	3998
   234  0000                     _PIE1bits	set	3997
   235  0000                     _T0CONbits	set	4053
   236  0000                     _LATAbits	set	3977
   237  0000                     _INTCONbits	set	4082
   238  0000                     _RCREG	set	4014
   239  0000                     _TXREG	set	4013
   240  0000                     _RCSTAbits	set	4011
   241  0000                     _TXSTAbits	set	4012
   242  0000                     _SPBRG	set	4015
   243  007EC9                     STR_2:
   244  007EC9  49                 	db	73	;'I'
   245  007ECA  4E                 	db	78	;'N'
   246  007ECB  49                 	db	73	;'I'
   247  007ECC  54                 	db	84	;'T'
   248  007ECD  5F                 	db	95	;'_'
   249  007ECE  50                 	db	80	;'P'
   250  007ECF  4F                 	db	79	;'O'
   251  007ED0  53                 	db	83	;'S'
   252  007ED1  3A                 	db	58	;':'
   253  007ED2  20                 	db	32
   254  007ED3  74                 	db	116	;'t'
   255  007ED4  68                 	db	104	;'h'
   256  007ED5  65                 	db	101	;'e'
   257  007ED6  20                 	db	32
   258  007ED7  76                 	db	118	;'v'
   259  007ED8  69                 	db	105	;'i'
   260  007ED9  61                 	db	97	;'a'
   261  007EDA  6C                 	db	108	;'l'
   262  007EDB  20                 	db	32
   263  007EDC  69                 	db	105	;'i'
   264  007EDD  73                 	db	115	;'s'
   265  007EDE  20                 	db	32
   266  007EDF  61                 	db	97	;'a'
   267  007EE0  74                 	db	116	;'t'
   268  007EE1  20                 	db	32
   269  007EE2  74                 	db	116	;'t'
   270  007EE3  68                 	db	104	;'h'
   271  007EE4  65                 	db	101	;'e'
   272  007EE5  20                 	db	32
   273  007EE6  69                 	db	105	;'i'
   274  007EE7  6E                 	db	110	;'n'
   275  007EE8  69                 	db	105	;'i'
   276  007EE9  74                 	db	116	;'t'
   277  007EEA  20                 	db	32
   278  007EEB  70                 	db	112	;'p'
   279  007EEC  6F                 	db	111	;'o'
   280  007EED  73                 	db	115	;'s'
   281  007EEE  69                 	db	105	;'i'
   282  007EEF  74                 	db	116	;'t'
   283  007EF0  69                 	db	105	;'i'
   284  007EF1  6F                 	db	111	;'o'
   285  007EF2  6E                 	db	110	;'n'
   286  007EF3  2C                 	db	44
   287  007EF4  20                 	db	32
   288  007EF5  70                 	db	112	;'p'
   289  007EF6  72                 	db	114	;'r'
   290  007EF7  6F                 	db	111	;'o'
   291  007EF8  63                 	db	99	;'c'
   292  007EF9  65                 	db	101	;'e'
   293  007EFA  73                 	db	115	;'s'
   294  007EFB  73                 	db	115	;'s'
   295  007EFC  20                 	db	32
   296  007EFD  69                 	db	105	;'i'
   297  007EFE  73                 	db	115	;'s'
   298  007EFF  20                 	db	32
   299  007F00  73                 	db	115	;'s'
   300  007F01  74                 	db	116	;'t'
   301  007F02  61                 	db	97	;'a'
   302  007F03  72                 	db	114	;'r'
   303  007F04  74                 	db	116	;'t'
   304  007F05  69                 	db	105	;'i'
   305  007F06  6E                 	db	110	;'n'
   306  007F07  67                 	db	103	;'g'
   307  007F08  00                 	db	0
   308  007F09                     STR_8:
   309  007F09  50                 	db	80	;'P'
   310  007F0A  49                 	db	73	;'I'
   311  007F0B  43                 	db	67	;'C'
   312  007F0C  4B                 	db	75	;'K'
   313  007F0D  5F                 	db	95	;'_'
   314  007F0E  55                 	db	85	;'U'
   315  007F0F  50                 	db	80	;'P'
   316  007F10  3A                 	db	58	;':'
   317  007F11  20                 	db	32
   318  007F12  74                 	db	116	;'t'
   319  007F13  68                 	db	104	;'h'
   320  007F14  65                 	db	101	;'e'
   321  007F15  20                 	db	32
   322  007F16  76                 	db	118	;'v'
   323  007F17  69                 	db	105	;'i'
   324  007F18  61                 	db	97	;'a'
   325  007F19  6C                 	db	108	;'l'
   326  007F1A  20                 	db	32
   327  007F1B  68                 	db	104	;'h'
   328  007F1C  61                 	db	97	;'a'
   329  007F1D  73                 	db	115	;'s'
   330  007F1E  20                 	db	32
   331  007F1F  72                 	db	114	;'r'
   332  007F20  65                 	db	101	;'e'
   333  007F21  61                 	db	97	;'a'
   334  007F22  63                 	db	99	;'c'
   335  007F23  68                 	db	104	;'h'
   336  007F24  65                 	db	101	;'e'
   337  007F25  64                 	db	100	;'d'
   338  007F26  20                 	db	32
   339  007F27  74                 	db	116	;'t'
   340  007F28  68                 	db	104	;'h'
   341  007F29  65                 	db	101	;'e'
   342  007F2A  20                 	db	32
   343  007F2B  70                 	db	112	;'p'
   344  007F2C  69                 	db	105	;'i'
   345  007F2D  63                 	db	99	;'c'
   346  007F2E  6B                 	db	107	;'k'
   347  007F2F  20                 	db	32
   348  007F30  75                 	db	117	;'u'
   349  007F31  70                 	db	112	;'p'
   350  007F32  20                 	db	32
   351  007F33  73                 	db	115	;'s'
   352  007F34  74                 	db	116	;'t'
   353  007F35  61                 	db	97	;'a'
   354  007F36  74                 	db	116	;'t'
   355  007F37  69                 	db	105	;'i'
   356  007F38  6F                 	db	111	;'o'
   357  007F39  6E                 	db	110	;'n'
   358  007F3A  00                 	db	0
   359  007F3B                     STR_1:
   360  007F3B  49                 	db	73	;'I'
   361  007F3C  44                 	db	68	;'D'
   362  007F3D  4C                 	db	76	;'L'
   363  007F3E  45                 	db	69	;'E'
   364  007F3F  3A                 	db	58	;':'
   365  007F40  20                 	db	32
   366  007F41  77                 	db	119	;'w'
   367  007F42  61                 	db	97	;'a'
   368  007F43  69                 	db	105	;'i'
   369  007F44  74                 	db	116	;'t'
   370  007F45  69                 	db	105	;'i'
   371  007F46  6E                 	db	110	;'n'
   372  007F47  67                 	db	103	;'g'
   373  007F48  20                 	db	32
   374  007F49  66                 	db	102	;'f'
   375  007F4A  6F                 	db	111	;'o'
   376  007F4B  72                 	db	114	;'r'
   377  007F4C  20                 	db	32
   378  007F4D  20                 	db	32
   379  007F4E  76                 	db	118	;'v'
   380  007F4F  69                 	db	105	;'i'
   381  007F50  61                 	db	97	;'a'
   382  007F51  6C                 	db	108	;'l'
   383  007F52  20                 	db	32
   384  007F53  74                 	db	116	;'t'
   385  007F54  6F                 	db	111	;'o'
   386  007F55  20                 	db	32
   387  007F56  62                 	db	98	;'b'
   388  007F57  65                 	db	101	;'e'
   389  007F58  20                 	db	32
   390  007F59  70                 	db	112	;'p'
   391  007F5A  6C                 	db	108	;'l'
   392  007F5B  61                 	db	97	;'a'
   393  007F5C  63                 	db	99	;'c'
   394  007F5D  65                 	db	101	;'e'
   395  007F5E  64                 	db	100	;'d'
   396  007F5F  20                 	db	32
   397  007F60  69                 	db	105	;'i'
   398  007F61  6E                 	db	110	;'n'
   399  007F62  20                 	db	32
   400  007F63  69                 	db	105	;'i'
   401  007F64  6E                 	db	110	;'n'
   402  007F65  69                 	db	105	;'i'
   403  007F66  74                 	db	116	;'t'
   404  007F67  20                 	db	32
   405  007F68  70                 	db	112	;'p'
   406  007F69  6F                 	db	111	;'o'
   407  007F6A  73                 	db	115	;'s'
   408  007F6B  00                 	db	0
   409  007F6C                     STR_4:
   410  007F6C  4F                 	db	79	;'O'
   411  007F6D  56                 	db	86	;'V'
   412  007F6E  45                 	db	69	;'E'
   413  007F6F  4E                 	db	78	;'N'
   414  007F70  3A                 	db	58	;':'
   415  007F71  20                 	db	32
   416  007F72  72                 	db	114	;'r'
   417  007F73  65                 	db	101	;'e'
   418  007F74  61                 	db	97	;'a'
   419  007F75  63                 	db	99	;'c'
   420  007F76  68                 	db	104	;'h'
   421  007F77  69                 	db	105	;'i'
   422  007F78  6E                 	db	110	;'n'
   423  007F79  67                 	db	103	;'g'
   424  007F7A  20                 	db	32
   425  007F7B  74                 	db	116	;'t'
   426  007F7C  68                 	db	104	;'h'
   427  007F7D  65                 	db	101	;'e'
   428  007F7E  20                 	db	32
   429  007F7F  63                 	db	99	;'c'
   430  007F80  6F                 	db	111	;'o'
   431  007F81  72                 	db	114	;'r'
   432  007F82  72                 	db	114	;'r'
   433  007F83  65                 	db	101	;'e'
   434  007F84  63                 	db	99	;'c'
   435  007F85  74                 	db	116	;'t'
   436  007F86  20                 	db	32
   437  007F87  74                 	db	116	;'t'
   438  007F88  65                 	db	101	;'e'
   439  007F89  6D                 	db	109	;'m'
   440  007F8A  70                 	db	112	;'p'
   441  007F8B  65                 	db	101	;'e'
   442  007F8C  72                 	db	114	;'r'
   443  007F8D  61                 	db	97	;'a'
   444  007F8E  74                 	db	116	;'t'
   445  007F8F  75                 	db	117	;'u'
   446  007F90  72                 	db	114	;'r'
   447  007F91  65                 	db	101	;'e'
   448  007F92  00                 	db	0
   449  007F93                     STR_9:
   450  007F93  44                 	db	68	;'D'
   451  007F94  65                 	db	101	;'e'
   452  007F95  76                 	db	118	;'v'
   453  007F96  69                 	db	105	;'i'
   454  007F97  63                 	db	99	;'c'
   455  007F98  65                 	db	101	;'e'
   456  007F99  20                 	db	32
   457  007F9A  68                 	db	104	;'h'
   458  007F9B  61                 	db	97	;'a'
   459  007F9C  73                 	db	115	;'s'
   460  007F9D  20                 	db	32
   461  007F9E  62                 	db	98	;'b'
   462  007F9F  65                 	db	101	;'e'
   463  007FA0  65                 	db	101	;'e'
   464  007FA1  6E                 	db	110	;'n'
   465  007FA2  20                 	db	32
   466  007FA3  72                 	db	114	;'r'
   467  007FA4  65                 	db	101	;'e'
   468  007FA5  73                 	db	115	;'s'
   469  007FA6  65                 	db	101	;'e'
   470  007FA7  74                 	db	116	;'t'
   471  007FA8  00                 	db	0
   472  007FA9                     STR_5:
   473  007FA9  47                 	db	71	;'G'
   474  007FAA  52                 	db	82	;'R'
   475  007FAB  41                 	db	65	;'A'
   476  007FAC  53                 	db	83	;'S'
   477  007FAD  50                 	db	80	;'P'
   478  007FAE  49                 	db	73	;'I'
   479  007FAF  4E                 	db	78	;'N'
   480  007FB0  47                 	db	71	;'G'
   481  007FB1  00                 	db	0
   482  007FB2                     STR_7:
   483  007FB2  44                 	db	68	;'D'
   484  007FB3  49                 	db	73	;'I'
   485  007FB4  4C                 	db	76	;'L'
   486  007FB5  55                 	db	85	;'U'
   487  007FB6  54                 	db	84	;'T'
   488  007FB7  49                 	db	73	;'I'
   489  007FB8  4E                 	db	78	;'N'
   490  007FB9  47                 	db	71	;'G'
   491  007FBA  00                 	db	0
   492  007FBB                     STR_3:
   493  007FBB  4D                 	db	77	;'M'
   494  007FBC  4F                 	db	79	;'O'
   495  007FBD  56                 	db	86	;'V'
   496  007FBE  45                 	db	69	;'E'
   497  007FBF  4D                 	db	77	;'M'
   498  007FC0  45                 	db	69	;'E'
   499  007FC1  4E                 	db	78	;'N'
   500  007FC2  54                 	db	84	;'T'
   501  007FC3  00                 	db	0
   502  007FC4                     STR_6:
   503  007FC4  4D                 	db	77	;'M'
   504  007FC5  49                 	db	73	;'I'
   505  007FC6  58                 	db	88	;'X'
   506  007FC7  49                 	db	73	;'I'
   507  007FC8  4E                 	db	78	;'N'
   508  007FC9  47                 	db	71	;'G'
   509  007FCA  00                 	db	0
   510  007FCB                     STR_87:
   511  007FCB  68                 	db	104	;'h'
   512  007FCC  68                 	db	104	;'h'
   513  007FCD  58                 	db	88	;'X'
   514  007FCE  00                 	db	0
   515  007FCF                     STR_11:
   516  007FCF  68                 	db	104	;'h'
   517  007FD0  68                 	db	104	;'h'
   518  007FD1  64                 	db	100	;'d'
   519  007FD2  00                 	db	0
   520  007FD3                     STR_15:
   521  007FD3  68                 	db	104	;'h'
   522  007FD4  68                 	db	104	;'h'
   523  007FD5  69                 	db	105	;'i'
   524  007FD6  00                 	db	0
   525  007FD7                     STR_53:
   526  007FD7  68                 	db	104	;'h'
   527  007FD8  68                 	db	104	;'h'
   528  007FD9  6E                 	db	110	;'n'
   529  007FDA  00                 	db	0
   530  007FDB                     STR_38:
   531  007FDB  68                 	db	104	;'h'
   532  007FDC  68                 	db	104	;'h'
   533  007FDD  6F                 	db	111	;'o'
   534  007FDE  00                 	db	0
   535  007FDF                     STR_68:
   536  007FDF  68                 	db	104	;'h'
   537  007FE0  68                 	db	104	;'h'
   538  007FE1  75                 	db	117	;'u'
   539  007FE2  00                 	db	0
   540  007FE3                     STR_83:
   541  007FE3  68                 	db	104	;'h'
   542  007FE4  68                 	db	104	;'h'
   543  007FE5  78                 	db	120	;'x'
   544  007FE6  00                 	db	0
   545  007FE7                     STR_105:
   546  007FE7  7A                 	db	122	;'z'
   547  007FE8  58                 	db	88	;'X'
   548  007FE9  00                 	db	0
   549  007FEA                     STR_29:
   550  007FEA  7A                 	db	122	;'z'
   551  007FEB  64                 	db	100	;'d'
   552  007FEC  00                 	db	0
   553  007FED                     STR_33:
   554  007FED  7A                 	db	122	;'z'
   555  007FEE  69                 	db	105	;'i'
   556  007FEF  00                 	db	0
   557  007FF0                     STR_63:
   558  007FF0  7A                 	db	122	;'z'
   559  007FF1  6E                 	db	110	;'n'
   560  007FF2  00                 	db	0
   561  007FF3                     STR_48:
   562  007FF3  7A                 	db	122	;'z'
   563  007FF4  6F                 	db	111	;'o'
   564  007FF5  00                 	db	0
   565  007FF6                     STR_78:
   566  007FF6  7A                 	db	122	;'z'
   567  007FF7  75                 	db	117	;'u'
   568  007FF8  00                 	db	0
   569  007FF9                     STR_101:
   570  007FF9  7A                 	db	122	;'z'
   571  007FFA  78                 	db	120	;'x'
   572  007FFB  00                 	db	0
   573  007FFC                     STR_10:
   574  007FFC  25                 	db	37
   575  007FFD  73                 	db	115	;'s'
   576  007FFE  00                 	db	0
   577  007FFF  00                 	db	0	; dummy byte at the end
   578  0000                     
   579                           ; #config settings
   580                           
   581                           	psect	cinit
   582  006AAC                     __pcinit:
   583                           	callstack 0
   584  006AAC                     start_initialization:
   585                           	callstack 0
   586  006AAC                     __initialization:
   587                           	callstack 0
   588                           
   589                           ; Initialize objects allocated to BANK1 (32 bytes)
   590                           ; load TBLPTR registers with __pidataBANK1
   591  006AAC  0E36               	movlw	low __pidataBANK1
   592  006AAE  6EF6               	movwf	tblptrl,c
   593  006AB0  0E65               	movlw	high __pidataBANK1
   594  006AB2  6EF7               	movwf	tblptrh,c
   595  006AB4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   596  006AB6  6EF8               	movwf	tblptru,c
   597  006AB8  EE01  F0CF         	lfsr	0,__pdataBANK1
   598  006ABC  EE10 F020          	lfsr	1,32
   599  006AC0                     copy_data0:
   600  006AC0  0009               	tblrd		*+
   601  006AC2  CFF5 FFEE          	movff	tablat,postinc0
   602  006AC6  50E5               	movf	postdec1,w,c
   603  006AC8  50E1               	movf	fsr1l,w,c
   604  006ACA  E1FA               	bnz	copy_data0
   605                           
   606                           ; Initialize objects allocated to BANK0 (19 bytes)
   607                           ; load TBLPTR registers with __pidataBANK0
   608  006ACC  0E03               	movlw	low __pidataBANK0
   609  006ACE  6EF6               	movwf	tblptrl,c
   610  006AD0  0E65               	movlw	high __pidataBANK0
   611  006AD2  6EF7               	movwf	tblptrh,c
   612  006AD4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   613  006AD6  6EF8               	movwf	tblptru,c
   614  006AD8  EE00  F0DE         	lfsr	0,__pdataBANK0
   615  006ADC  EE10 F013          	lfsr	1,19
   616  006AE0                     copy_data1:
   617  006AE0  0009               	tblrd		*+
   618  006AE2  CFF5 FFEE          	movff	tablat,postinc0
   619  006AE6  50E5               	movf	postdec1,w,c
   620  006AE8  50E1               	movf	fsr1l,w,c
   621  006AEA  E1FA               	bnz	copy_data1
   622                           
   623                           ; Clear objects allocated to BANK1 (44 bytes)
   624  006AEC  EE01  F0A3         	lfsr	0,__pbssBANK1
   625  006AF0  0E2C               	movlw	44
   626  006AF2                     clear_0:
   627  006AF2  6AEE               	clrf	postinc0,c
   628  006AF4  06E8               	decf	wreg,f,c
   629  006AF6  E1FD               	bnz	clear_0
   630                           
   631                           ; Clear objects allocated to BANK0 (56 bytes)
   632  006AF8  EE00  F080         	lfsr	0,__pbssBANK0
   633  006AFC  0E38               	movlw	56
   634  006AFE                     clear_1:
   635  006AFE  6AEE               	clrf	postinc0,c
   636  006B00  06E8               	decf	wreg,f,c
   637  006B02  E1FD               	bnz	clear_1
   638  006B04                     end_of_initialization:
   639                           	callstack 0
   640  006B04                     __end_of__initialization:
   641                           	callstack 0
   642  006B04  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   643  006B06  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   644  006B08  0E00               	movlw	low (__Lmediumconst shr (0+16))
   645  006B0A  6EF8               	movwf	tblptru,c
   646  006B0C  0100               	movlb	0
   647  006B0E  EF31  F00A         	goto	_main	;jump to C main() function
   648                           
   649                           	psect	bssBANK0
   650  000080                     __pbssBANK0:
   651                           	callstack 0
   652  000080                     roundf@F525:
   653                           	callstack 0
   654  000080                     	ds	4
   655  000084                     _nout:
   656                           	callstack 0
   657  000084                     	ds	2
   658  000086                     _width:
   659                           	callstack 0
   660  000086                     	ds	2
   661  000088                     _prec:
   662                           	callstack 0
   663  000088                     	ds	2
   664  00008A                     _flags:
   665                           	callstack 0
   666  00008A                     	ds	2
   667  00008C                     _errno:
   668                           	callstack 0
   669  00008C                     	ds	2
   670  00008E                     _temperature_scaled:
   671                           	callstack 0
   672  00008E                     	ds	2
   673  000090                     _temperature_int:
   674                           	callstack 0
   675  000090                     	ds	2
   676  000092                     _mix_step_counter:
   677                           	callstack 0
   678  000092                     	ds	2
   679  000094                     _mix_direction:
   680                           	callstack 0
   681  000094                     	ds	2
   682  000096                     _mix_current_step:
   683                           	callstack 0
   684  000096                     	ds	2
   685  000098                     _dbuf:
   686                           	callstack 0
   687  000098                     	ds	32
   688                           
   689                           	psect	dataBANK0
   690  0000DE                     __pdataBANK0:
   691                           	callstack 0
   692  0000DE                     stoa@F1152:
   693                           	callstack 0
   694  0000DE                     	ds	7
   695  0000E5                     	ds	4
   696  0000E9                     	ds	4
   697  0000ED                     _tmr2_prescaler:
   698                           	callstack 0
   699  0000ED                     	ds	4
   700                           
   701                           	psect	bssBANK1
   702  0001A3                     __pbssBANK1:
   703                           	callstack 0
   704  0001A3                     _move_to_trash:
   705                           	callstack 0
   706  0001A3                     	ds	2
   707  0001A5                     _trash_counter:
   708                           	callstack 0
   709  0001A5                     	ds	2
   710  0001A7                     _end_effector_homed:
   711                           	callstack 0
   712  0001A7                     	ds	2
   713  0001A9                     _joint_homed:
   714                           	callstack 0
   715  0001A9                     	ds	2
   716  0001AB                     _mix_counter:
   717                           	callstack 0
   718  0001AB                     	ds	2
   719  0001AD                     _timer_done:
   720                           	callstack 0
   721  0001AD                     	ds	1
   722  0001AE                     _read_new_char:
   723                           	callstack 0
   724  0001AE                     	ds	1
   725  0001AF                     _msg_sent:
   726                           	callstack 0
   727  0001AF                     	ds	1
   728  0001B0                     _state_changed:
   729                           	callstack 0
   730  0001B0                     	ds	1
   731  0001B1                     _end_effector_stepper:
   732                           	callstack 0
   733  0001B1                     	ds	14
   734  0001BF                     _joint_stepper:
   735                           	callstack 0
   736  0001BF                     	ds	14
   737  0001CD                     _state:
   738                           	callstack 0
   739  0001CD                     	ds	2
   740                           
   741                           	psect	dataBANK1
   742  0001CF                     __pdataBANK1:
   743                           	callstack 0
   744  0001CF                     _state_msgs:
   745                           	callstack 0
   746  0001CF                     	ds	16
   747  0001DF                     _hex_end_effector_values:
   748                           	callstack 0
   749  0001DF                     	ds	8
   750  0001E7                     _hex_joint_values:
   751                           	callstack 0
   752  0001E7                     	ds	8
   753                           
   754                           	psect	cstackBANK1
   755  000100                     __pcstackBANK1:
   756                           	callstack 0
   757  000100                     main@greet_str:
   758                           	callstack 0
   759                           
   760                           ; 160 bytes @ 0x0
   761  000100                     	ds	160
   762  0001A0                     main@current_temp:
   763                           	callstack 0
   764                           
   765                           ; 2 bytes @ 0xA0
   766  0001A0                     	ds	2
   767  0001A2                     main@rx_char:
   768                           	callstack 0
   769                           
   770                           ; 1 bytes @ 0xA2
   771  0001A2                     	ds	1
   772                           
   773                           	psect	cstackBANK0
   774  0000B8                     __pcstackBANK0:
   775                           	callstack 0
   776  0000B8                     _vsnprintf$1552:
   777                           	callstack 0
   778  0000B8                     _roundf$2138:
   779                           	callstack 0
   780                           
   781                           ; 4 bytes @ 0x0
   782  0000B8                     	ds	2
   783  0000BA                     vsnprintf@cnt:
   784                           	callstack 0
   785                           
   786                           ; 2 bytes @ 0x2
   787  0000BA                     	ds	2
   788  0000BC                     roundf@e:
   789                           	callstack 0
   790  0000BC                     vsnprintf@f:
   791                           	callstack 0
   792                           
   793                           ; 6 bytes @ 0x4
   794  0000BC                     	ds	2
   795  0000BE                     _roundf$2137:
   796                           	callstack 0
   797                           
   798                           ; 4 bytes @ 0x6
   799  0000BE                     	ds	4
   800  0000C2                     ?_snprintf:
   801                           	callstack 0
   802  0000C2                     snprintf@s:
   803                           	callstack 0
   804  0000C2                     roundf@u:
   805                           	callstack 0
   806                           
   807                           ; 4 bytes @ 0xA
   808  0000C2                     	ds	2
   809  0000C4                     snprintf@n:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0xC
   813  0000C4                     	ds	2
   814  0000C6                     snprintf@fmt:
   815                           	callstack 0
   816  0000C6                     roundf@y:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0xE
   820  0000C6                     	ds	4
   821  0000CA                     ?___fltol:
   822                           	callstack 0
   823  0000CA                     ___fltol@f1:
   824                           	callstack 0
   825                           
   826                           ; 4 bytes @ 0x12
   827  0000CA                     	ds	2
   828  0000CC                     snprintf@ap:
   829                           	callstack 0
   830                           
   831                           ; 2 bytes @ 0x14
   832  0000CC                     	ds	2
   833  0000CE                     ??___fltol:
   834                           
   835                           ; 1 bytes @ 0x16
   836  0000CE                     	ds	4
   837  0000D2                     ___fltol@sign1:
   838                           	callstack 0
   839                           
   840                           ; 1 bytes @ 0x1A
   841  0000D2                     	ds	1
   842  0000D3                     ___fltol@exp1:
   843                           	callstack 0
   844                           
   845                           ; 1 bytes @ 0x1B
   846  0000D3                     	ds	1
   847  0000D4                     ?_get_temperature:
   848                           	callstack 0
   849  0000D4                     update_pwm_duty_ccp1@time_up:
   850                           	callstack 0
   851  0000D4                     _init_timer_2$2136:
   852                           	callstack 0
   853                           
   854                           ; 4 bytes @ 0x1C
   855  0000D4                     	ds	2
   856  0000D6                     ?_check_temperature:
   857                           	callstack 0
   858  0000D6                     check_temperature@temp_to_be_checked:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x1E
   862  0000D6                     	ds	2
   863  0000D8                     ??_update_pwm_duty_ccp1:
   864  0000D8                     check_temperature@grad:
   865                           	callstack 0
   866                           
   867                           ; 4 bytes @ 0x20
   868  0000D8                     	ds	2
   869  0000DA                     update_pwm_duty_ccp1@new_duty:
   870                           	callstack 0
   871                           
   872                           ; 2 bytes @ 0x22
   873  0000DA                     	ds	2
   874  0000DC                     update_pwm_duty_ccp1@lsbs_duty:
   875                           	callstack 0
   876                           
   877                           ; 1 bytes @ 0x24
   878  0000DC                     	ds	1
   879  0000DD                     ??_main:
   880                           
   881                           ; 1 bytes @ 0x25
   882  0000DD                     	ds	1
   883                           
   884                           	psect	cstackCOMRAM
   885  000001                     __pcstackCOMRAM:
   886                           	callstack 0
   887  000001                     ?_strlen:
   888                           	callstack 0
   889  000001                     ?_isupper:
   890                           	callstack 0
   891  000001                     ?_isalpha:
   892                           	callstack 0
   893  000001                     ?_isdigit:
   894                           	callstack 0
   895  000001                     ?_strncmp:
   896                           	callstack 0
   897  000001                     ?_isspace:
   898                           	callstack 0
   899  000001                     ?_islower:
   900                           	callstack 0
   901  000001                     ?___wmul:
   902                           	callstack 0
   903  000001                     ?___flneg:
   904                           	callstack 0
   905  000001                     ?___aodiv:
   906                           	callstack 0
   907  000001                     ?___aomod:
   908                           	callstack 0
   909  000001                     ?___lodiv:
   910                           	callstack 0
   911  000001                     ?___lomod:
   912                           	callstack 0
   913  000001                     serial_tx_char@val:
   914                           	callstack 0
   915  000001                     get_reg_value@rx_char:
   916                           	callstack 0
   917  000001                     lcd_wr@val:
   918                           	callstack 0
   919  000001                     state_translator_micro_to_fpga@state:
   920                           	callstack 0
   921  000001                     init_stepper@stepper_motor:
   922                           	callstack 0
   923  000001                     turn_on_current_coil@stepper_motor:
   924                           	callstack 0
   925  000001                     update_current_coil@stepper_motor:
   926                           	callstack 0
   927  000001                     change_direction@stepper_motor:
   928                           	callstack 0
   929  000001                     ___wmul@multiplier:
   930                           	callstack 0
   931  000001                     isalpha@c:
   932                           	callstack 0
   933  000001                     isdigit@c:
   934                           	callstack 0
   935  000001                     isspace@c:
   936                           	callstack 0
   937  000001                     isupper@c:
   938                           	callstack 0
   939  000001                     fputc@c:
   940                           	callstack 0
   941  000001                     strlen@s:
   942                           	callstack 0
   943  000001                     strncmp@_l:
   944                           	callstack 0
   945  000001                     islower@c:
   946                           	callstack 0
   947  000001                     ___flge@ff1:
   948                           	callstack 0
   949  000001                     ___flneg@f1:
   950                           	callstack 0
   951  000001                     ___aodiv@dividend:
   952                           	callstack 0
   953  000001                     ___aomod@dividend:
   954                           	callstack 0
   955  000001                     ___lodiv@dividend:
   956                           	callstack 0
   957  000001                     ___lomod@dividend:
   958                           	callstack 0
   959                           
   960                           ; 8 bytes @ 0x0
   961  000001                     	ds	1
   962  000002                     lcd_cmd@val:
   963                           	callstack 0
   964  000002                     lcd_dat@val:
   965                           	callstack 0
   966                           
   967                           ; 1 bytes @ 0x1
   968  000002                     	ds	1
   969  000003                     ??_lcd_init:
   970  000003                     ??_change_direction:
   971  000003                     ??_isupper:
   972  000003                     ??_isalpha:
   973  000003                     ??_isdigit:
   974  000003                     ??_isspace:
   975  000003                     ??_islower:
   976  000003                     ??_turn_on_current_coil:
   977  000003                     ??_update_current_coil:
   978  000003                     lcd_str@str:
   979                           	callstack 0
   980  000003                     state_translator_fpga_to_micro@state:
   981                           	callstack 0
   982  000003                     init_stepper@current_coil:
   983                           	callstack 0
   984  000003                     ___wmul@multiplicand:
   985                           	callstack 0
   986  000003                     fputc@fp:
   987                           	callstack 0
   988  000003                     strlen@a:
   989                           	callstack 0
   990  000003                     strncmp@_r:
   991                           	callstack 0
   992                           
   993                           ; 2 bytes @ 0x2
   994  000003                     	ds	2
   995  000005                     ??_lcd_str:
   996  000005                     ??_fputc:
   997  000005                     state_translator_fpga_to_micro@state_machine_code:
   998                           	callstack 0
   999  000005                     state_translator_micro_to_fpga@state_machine_code:
  1000                           	callstack 0
  1001  000005                     init_stepper@step_counter:
  1002                           	callstack 0
  1003  000005                     ___wmul@product:
  1004                           	callstack 0
  1005  000005                     strncmp@n:
  1006                           	callstack 0
  1007  000005                     ___flge@ff2:
  1008                           	callstack 0
  1009                           
  1010                           ; 4 bytes @ 0x4
  1011  000005                     	ds	2
  1012  000007                     ??_strncmp:
  1013  000007                     ?_reach_goal:
  1014                           	callstack 0
  1015  000007                     ?_toupper:
  1016                           	callstack 0
  1017  000007                     lcd_str@i:
  1018                           	callstack 0
  1019  000007                     _isspace$1836:
  1020                           	callstack 0
  1021  000007                     init_stepper@direction:
  1022                           	callstack 0
  1023  000007                     reach_goal@stepper_motor:
  1024                           	callstack 0
  1025  000007                     toupper@c:
  1026                           	callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x6
  1029  000007                     	ds	1
  1030  000008                     ?_atoi:
  1031                           	callstack 0
  1032  000008                     atoi@s:
  1033                           	callstack 0
  1034  000008                     strncmp@l:
  1035                           	callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x7
  1038  000008                     	ds	1
  1039  000009                     ??_toupper:
  1040  000009                     ??___flge:
  1041  000009                     init_stepper@hex_coil_register_values:
  1042                           	callstack 0
  1043  000009                     reach_goal@goal_to_reach:
  1044                           	callstack 0
  1045  000009                     ___aodiv@divisor:
  1046                           	callstack 0
  1047  000009                     ___aomod@divisor:
  1048                           	callstack 0
  1049  000009                     ___lodiv@divisor:
  1050                           	callstack 0
  1051  000009                     ___lomod@divisor:
  1052                           	callstack 0
  1053                           
  1054                           ; 8 bytes @ 0x8
  1055  000009                     	ds	1
  1056  00000A                     ??_atoi:
  1057  00000A                     ?_stoa:
  1058                           	callstack 0
  1059  00000A                     stoa@fp:
  1060                           	callstack 0
  1061  00000A                     fputs@s:
  1062                           	callstack 0
  1063  00000A                     strncmp@r:
  1064                           	callstack 0
  1065                           
  1066                           ; 2 bytes @ 0x9
  1067  00000A                     	ds	1
  1068  00000B                     ??_init_stepper:
  1069  00000B                     ??_reach_goal:
  1070                           
  1071                           ; 1 bytes @ 0xA
  1072  00000B                     	ds	1
  1073  00000C                     stoa@s:
  1074                           	callstack 0
  1075  00000C                     fputs@fp:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0xB
  1079  00000C                     	ds	1
  1080  00000D                     _toupper$1896:
  1081                           	callstack 0
  1082                           
  1083                           ; 2 bytes @ 0xC
  1084  00000D                     	ds	1
  1085  00000E                     ??_stoa:
  1086  00000E                     fputs@c:
  1087                           	callstack 0
  1088  00000E                     atoi@neg:
  1089                           	callstack 0
  1090                           
  1091                           ; 2 bytes @ 0xD
  1092  00000E                     	ds	1
  1093  00000F                     init_stepper@i:
  1094                           	callstack 0
  1095  00000F                     fputs@i:
  1096                           	callstack 0
  1097  00000F                     stoa@nuls:
  1098                           	callstack 0
  1099                           
  1100                           ; 7 bytes @ 0xE
  1101  00000F                     	ds	1
  1102  000010                     _atoi$1808:
  1103                           	callstack 0
  1104                           
  1105                           ; 2 bytes @ 0xF
  1106  000010                     	ds	1
  1107  000011                     ?_pad:
  1108                           	callstack 0
  1109  000011                     ___aodiv@counter:
  1110                           	callstack 0
  1111  000011                     ___aomod@counter:
  1112                           	callstack 0
  1113  000011                     ___lomod@counter:
  1114                           	callstack 0
  1115  000011                     pad@fp:
  1116                           	callstack 0
  1117  000011                     ___lodiv@quotient:
  1118                           	callstack 0
  1119                           
  1120                           ; 8 bytes @ 0x10
  1121  000011                     	ds	1
  1122  000012                     ___aodiv@sign:
  1123                           	callstack 0
  1124  000012                     ___aomod@sign:
  1125                           	callstack 0
  1126  000012                     _atoi$1810:
  1127                           	callstack 0
  1128                           
  1129                           ; 2 bytes @ 0x11
  1130  000012                     	ds	1
  1131  000013                     ?_abs:
  1132                           	callstack 0
  1133  000013                     abs@a:
  1134                           	callstack 0
  1135  000013                     pad@buf:
  1136                           	callstack 0
  1137  000013                     ___aodiv@quotient:
  1138                           	callstack 0
  1139                           
  1140                           ; 8 bytes @ 0x12
  1141  000013                     	ds	1
  1142  000014                     _atoi$1809:
  1143                           	callstack 0
  1144                           
  1145                           ; 1 bytes @ 0x13
  1146  000014                     	ds	1
  1147  000015                     ??_abs:
  1148  000015                     pad@p:
  1149                           	callstack 0
  1150  000015                     atoi@n:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x14
  1154  000015                     	ds	1
  1155  000016                     stoa@i:
  1156                           	callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x15
  1159  000016                     	ds	1
  1160  000017                     ??_pad:
  1161  000017                     ?___awdiv:
  1162                           	callstack 0
  1163  000017                     ___awdiv@dividend:
  1164                           	callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x16
  1167  000017                     	ds	1
  1168  000018                     pad@i:
  1169                           	callstack 0
  1170  000018                     stoa@w:
  1171                           	callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x17
  1174  000018                     	ds	1
  1175  000019                     ___lodiv@counter:
  1176                           	callstack 0
  1177  000019                     ___awdiv@divisor:
  1178                           	callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x18
  1181  000019                     	ds	1
  1182  00001A                     pad@w:
  1183                           	callstack 0
  1184  00001A                     stoa@cp:
  1185                           	callstack 0
  1186                           
  1187                           ; 2 bytes @ 0x19
  1188  00001A                     	ds	1
  1189  00001B                     ___awdiv@counter:
  1190                           	callstack 0
  1191                           
  1192                           ; 1 bytes @ 0x1A
  1193  00001B                     	ds	1
  1194  00001C                     ?_ctoa:
  1195                           	callstack 0
  1196  00001C                     ?_dtoa:
  1197                           	callstack 0
  1198  00001C                     ?_otoa:
  1199                           	callstack 0
  1200  00001C                     ?_utoa:
  1201                           	callstack 0
  1202  00001C                     ?_xtoa:
  1203                           	callstack 0
  1204  00001C                     ___awdiv@sign:
  1205                           	callstack 0
  1206  00001C                     ctoa@fp:
  1207                           	callstack 0
  1208  00001C                     dtoa@fp:
  1209                           	callstack 0
  1210  00001C                     otoa@fp:
  1211                           	callstack 0
  1212  00001C                     stoa@p:
  1213                           	callstack 0
  1214  00001C                     utoa@fp:
  1215                           	callstack 0
  1216  00001C                     xtoa@fp:
  1217                           	callstack 0
  1218                           
  1219                           ; 2 bytes @ 0x1B
  1220  00001C                     	ds	1
  1221  00001D                     ___awdiv@quotient:
  1222                           	callstack 0
  1223                           
  1224                           ; 2 bytes @ 0x1C
  1225  00001D                     	ds	1
  1226  00001E                     ctoa@c:
  1227                           	callstack 0
  1228  00001E                     stoa@l:
  1229                           	callstack 0
  1230  00001E                     dtoa@d:
  1231                           	callstack 0
  1232  00001E                     otoa@d:
  1233                           	callstack 0
  1234  00001E                     utoa@d:
  1235                           	callstack 0
  1236  00001E                     xtoa@d:
  1237                           	callstack 0
  1238                           
  1239                           ; 8 bytes @ 0x1D
  1240  00001E                     	ds	1
  1241  00001F                     ?___xxtofl:
  1242                           	callstack 0
  1243  00001F                     ctoa@w:
  1244                           	callstack 0
  1245  00001F                     ___xxtofl@val:
  1246                           	callstack 0
  1247                           
  1248                           ; 4 bytes @ 0x1E
  1249  00001F                     	ds	4
  1250  000023                     ??___xxtofl:
  1251                           
  1252                           ; 1 bytes @ 0x22
  1253  000023                     	ds	3
  1254  000026                     ??_dtoa:
  1255  000026                     ??_otoa:
  1256  000026                     ??_utoa:
  1257  000026                     xtoa@x:
  1258                           	callstack 0
  1259                           
  1260                           ; 1 bytes @ 0x25
  1261  000026                     	ds	1
  1262  000027                     ??_xtoa:
  1263  000027                     ___xxtofl@sign:
  1264                           	callstack 0
  1265                           
  1266                           ; 1 bytes @ 0x26
  1267  000027                     	ds	1
  1268  000028                     ___xxtofl@exp:
  1269                           	callstack 0
  1270                           
  1271                           ; 1 bytes @ 0x27
  1272  000028                     	ds	1
  1273  000029                     ___xxtofl@arg:
  1274                           	callstack 0
  1275                           
  1276                           ; 4 bytes @ 0x28
  1277  000029                     	ds	4
  1278  00002D                     ?___flmul:
  1279                           	callstack 0
  1280  00002D                     ___flmul@b:
  1281                           	callstack 0
  1282                           
  1283                           ; 4 bytes @ 0x2C
  1284  00002D                     	ds	1
  1285  00002E                     _dtoa$1634:
  1286                           	callstack 0
  1287  00002E                     otoa@p:
  1288                           	callstack 0
  1289  00002E                     utoa@p:
  1290                           	callstack 0
  1291                           
  1292                           ; 2 bytes @ 0x2D
  1293  00002E                     	ds	1
  1294  00002F                     _xtoa$1670:
  1295                           	callstack 0
  1296                           
  1297                           ; 2 bytes @ 0x2E
  1298  00002F                     	ds	1
  1299  000030                     dtoa@p:
  1300                           	callstack 0
  1301  000030                     otoa@t:
  1302                           	callstack 0
  1303  000030                     utoa@w:
  1304                           	callstack 0
  1305                           
  1306                           ; 2 bytes @ 0x2F
  1307  000030                     	ds	1
  1308  000031                     _xtoa$1671:
  1309                           	callstack 0
  1310  000031                     ___flmul@a:
  1311                           	callstack 0
  1312                           
  1313                           ; 4 bytes @ 0x30
  1314  000031                     	ds	1
  1315  000032                     dtoa@w:
  1316                           	callstack 0
  1317  000032                     otoa@w:
  1318                           	callstack 0
  1319  000032                     utoa@n:
  1320                           	callstack 0
  1321                           
  1322                           ; 8 bytes @ 0x31
  1323  000032                     	ds	1
  1324  000033                     xtoa@p:
  1325                           	callstack 0
  1326                           
  1327                           ; 2 bytes @ 0x32
  1328  000033                     	ds	1
  1329  000034                     dtoa@s:
  1330                           	callstack 0
  1331  000034                     otoa@n:
  1332                           	callstack 0
  1333                           
  1334                           ; 8 bytes @ 0x33
  1335  000034                     	ds	1
  1336  000035                     ??___flmul:
  1337  000035                     xtoa@w:
  1338                           	callstack 0
  1339                           
  1340                           ; 2 bytes @ 0x34
  1341  000035                     	ds	1
  1342  000036                     dtoa@n:
  1343                           	callstack 0
  1344                           
  1345                           ; 8 bytes @ 0x35
  1346  000036                     	ds	1
  1347  000037                     xtoa@n:
  1348                           	callstack 0
  1349                           
  1350                           ; 8 bytes @ 0x36
  1351  000037                     	ds	2
  1352  000039                     ___flmul@sign:
  1353                           	callstack 0
  1354                           
  1355                           ; 1 bytes @ 0x38
  1356  000039                     	ds	1
  1357  00003A                     utoa@i:
  1358                           	callstack 0
  1359  00003A                     ___flmul@grs:
  1360                           	callstack 0
  1361                           
  1362                           ; 4 bytes @ 0x39
  1363  00003A                     	ds	2
  1364  00003C                     otoa@i:
  1365                           	callstack 0
  1366                           
  1367                           ; 2 bytes @ 0x3B
  1368  00003C                     	ds	2
  1369  00003E                     ___flmul@aexp:
  1370                           	callstack 0
  1371  00003E                     dtoa@i:
  1372                           	callstack 0
  1373                           
  1374                           ; 2 bytes @ 0x3D
  1375  00003E                     	ds	1
  1376  00003F                     ___flmul@bexp:
  1377                           	callstack 0
  1378  00003F                     xtoa@i:
  1379                           	callstack 0
  1380                           
  1381                           ; 2 bytes @ 0x3E
  1382  00003F                     	ds	1
  1383  000040                     ___flmul@prod:
  1384                           	callstack 0
  1385                           
  1386                           ; 4 bytes @ 0x3F
  1387  000040                     	ds	1
  1388  000041                     xtoa@c:
  1389                           	callstack 0
  1390                           
  1391                           ; 2 bytes @ 0x40
  1392  000041                     	ds	2
  1393  000043                     ?_vfpfcnvrt:
  1394                           	callstack 0
  1395  000043                     vfpfcnvrt@fp:
  1396                           	callstack 0
  1397                           
  1398                           ; 2 bytes @ 0x42
  1399  000043                     	ds	1
  1400  000044                     ___flmul@temp:
  1401                           	callstack 0
  1402                           
  1403                           ; 2 bytes @ 0x43
  1404  000044                     	ds	1
  1405  000045                     vfpfcnvrt@fmt:
  1406                           	callstack 0
  1407                           
  1408                           ; 2 bytes @ 0x44
  1409  000045                     	ds	1
  1410  000046                     ?___fldiv:
  1411                           	callstack 0
  1412  000046                     ___fldiv@b:
  1413                           	callstack 0
  1414                           
  1415                           ; 4 bytes @ 0x45
  1416  000046                     	ds	1
  1417  000047                     vfpfcnvrt@ap:
  1418                           	callstack 0
  1419                           
  1420                           ; 2 bytes @ 0x46
  1421  000047                     	ds	2
  1422  000049                     ??_vfpfcnvrt:
  1423                           
  1424                           ; 1 bytes @ 0x48
  1425  000049                     	ds	1
  1426  00004A                     ___fldiv@a:
  1427                           	callstack 0
  1428                           
  1429                           ; 4 bytes @ 0x49
  1430  00004A                     	ds	3
  1431  00004D                     vfpfcnvrt@cp:
  1432                           	callstack 0
  1433                           
  1434                           ; 2 bytes @ 0x4C
  1435  00004D                     	ds	1
  1436  00004E                     ??___fldiv:
  1437                           
  1438                           ; 1 bytes @ 0x4D
  1439  00004E                     	ds	1
  1440  00004F                     vfpfcnvrt@done:
  1441                           	callstack 0
  1442                           
  1443                           ; 2 bytes @ 0x4E
  1444  00004F                     	ds	2
  1445  000051                     _vfpfcnvrt$1685:
  1446                           	callstack 0
  1447                           
  1448                           ; 2 bytes @ 0x50
  1449  000051                     	ds	1
  1450  000052                     ___fldiv@rem:
  1451                           	callstack 0
  1452                           
  1453                           ; 4 bytes @ 0x51
  1454  000052                     	ds	1
  1455  000053                     _vfpfcnvrt$1686:
  1456                           	callstack 0
  1457                           
  1458                           ; 2 bytes @ 0x52
  1459  000053                     	ds	2
  1460  000055                     vfpfcnvrt@ll:
  1461                           	callstack 0
  1462                           
  1463                           ; 8 bytes @ 0x54
  1464  000055                     	ds	1
  1465  000056                     ___fldiv@sign:
  1466                           	callstack 0
  1467                           
  1468                           ; 1 bytes @ 0x55
  1469  000056                     	ds	1
  1470  000057                     ___fldiv@new_exp:
  1471                           	callstack 0
  1472                           
  1473                           ; 2 bytes @ 0x56
  1474  000057                     	ds	2
  1475  000059                     ___fldiv@grs:
  1476                           	callstack 0
  1477                           
  1478                           ; 4 bytes @ 0x58
  1479  000059                     	ds	4
  1480  00005D                     ___fldiv@bexp:
  1481                           	callstack 0
  1482  00005D                     vfpfcnvrt@vp:
  1483                           	callstack 0
  1484                           
  1485                           ; 2 bytes @ 0x5C
  1486  00005D                     	ds	1
  1487  00005E                     ___fldiv@aexp:
  1488                           	callstack 0
  1489                           
  1490                           ; 1 bytes @ 0x5D
  1491  00005E                     	ds	1
  1492  00005F                     ?___fladd:
  1493                           	callstack 0
  1494  00005F                     vfpfcnvrt@c:
  1495                           	callstack 0
  1496  00005F                     ___fladd@b:
  1497                           	callstack 0
  1498                           
  1499                           ; 4 bytes @ 0x5E
  1500  00005F                     	ds	1
  1501  000060                     vfpfcnvrt@llu:
  1502                           	callstack 0
  1503                           
  1504                           ; 8 bytes @ 0x5F
  1505  000060                     	ds	3
  1506  000063                     ___fladd@a:
  1507                           	callstack 0
  1508                           
  1509                           ; 4 bytes @ 0x62
  1510  000063                     	ds	4
  1511  000067                     ??___fladd:
  1512                           
  1513                           ; 1 bytes @ 0x66
  1514  000067                     	ds	1
  1515  000068                     ?_vfprintf:
  1516                           	callstack 0
  1517  000068                     vfprintf@fp:
  1518                           	callstack 0
  1519                           
  1520                           ; 2 bytes @ 0x67
  1521  000068                     	ds	2
  1522  00006A                     vfprintf@fmt:
  1523                           	callstack 0
  1524                           
  1525                           ; 2 bytes @ 0x69
  1526  00006A                     	ds	1
  1527  00006B                     ___fladd@signs:
  1528                           	callstack 0
  1529                           
  1530                           ; 1 bytes @ 0x6A
  1531  00006B                     	ds	1
  1532  00006C                     ___fladd@aexp:
  1533                           	callstack 0
  1534  00006C                     vfprintf@ap:
  1535                           	callstack 0
  1536                           
  1537                           ; 2 bytes @ 0x6B
  1538  00006C                     	ds	1
  1539  00006D                     ___fladd@bexp:
  1540                           	callstack 0
  1541                           
  1542                           ; 1 bytes @ 0x6C
  1543  00006D                     	ds	1
  1544  00006E                     ___fladd@grs:
  1545                           	callstack 0
  1546  00006E                     vfprintf@cfmt:
  1547                           	callstack 0
  1548                           
  1549                           ; 2 bytes @ 0x6D
  1550  00006E                     	ds	1
  1551  00006F                     ?___flsub:
  1552                           	callstack 0
  1553  00006F                     ___flsub@b:
  1554                           	callstack 0
  1555                           
  1556                           ; 4 bytes @ 0x6E
  1557  00006F                     	ds	1
  1558  000070                     ?_vsnprintf:
  1559                           	callstack 0
  1560  000070                     vsnprintf@s:
  1561                           	callstack 0
  1562                           
  1563                           ; 2 bytes @ 0x6F
  1564  000070                     	ds	2
  1565  000072                     vsnprintf@n:
  1566                           	callstack 0
  1567                           
  1568                           ; 2 bytes @ 0x71
  1569  000072                     	ds	1
  1570  000073                     ___flsub@a:
  1571                           	callstack 0
  1572                           
  1573                           ; 4 bytes @ 0x72
  1574  000073                     	ds	1
  1575  000074                     vsnprintf@fmt:
  1576                           	callstack 0
  1577                           
  1578                           ; 2 bytes @ 0x73
  1579  000074                     	ds	2
  1580  000076                     vsnprintf@ap:
  1581                           	callstack 0
  1582                           
  1583                           ; 2 bytes @ 0x75
  1584  000076                     	ds	1
  1585  000077                     ?_roundf:
  1586                           	callstack 0
  1587  000077                     roundf@x:
  1588                           	callstack 0
  1589                           
  1590                           ; 4 bytes @ 0x76
  1591  000077                     	ds	1
  1592  000078                     ??_vsnprintf:
  1593                           
  1594                           ; 1 bytes @ 0x77
  1595  000078                     	ds	3
  1596  00007B                     ??_roundf:
  1597                           
  1598                           ; 1 bytes @ 0x7A
  1599  00007B                     	ds	1
  1600  00007C                     
  1601                           ; 1 bytes @ 0x7B
  1602  00007C                     	ds	3
  1603  00007F                     
  1604                           ; 1 bytes @ 0x7E
  1605 ;;
  1606 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1607 ;;
  1608 ;; *************** function _main *****************
  1609 ;; Defined at:
  1610 ;;		line 54 in file "main.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;		None
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;  current_temp    2  160[BANK1 ] int 
  1615 ;;  greet_str     160    0[BANK1 ] PTR const unsigned char 
  1616 ;;		 -> ?_snprintf(2), STR_8(50), STR_7(9), STR_6(7), 
  1617 ;;		 -> STR_5(9), STR_4(39), STR_3(9), STR_2(64), 
  1618 ;;		 -> STR_1(49), 
  1619 ;;  rx_char         1  162[BANK1 ] unsigned char 
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  1    wreg      void 
  1622 ;; Registers used:
  1623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1629 ;;      Params:         0       0       0       0       0       0       0
  1630 ;;      Locals:         0       0     163       0       0       0       0
  1631 ;;      Temps:          0       1       0       0       0       0       0
  1632 ;;      Totals:         0       1     163       0       0       0       0
  1633 ;;Total ram usage:      164 bytes
  1634 ;; Hardware stack levels required when called:   10
  1635 ;; This function calls:
  1636 ;;		___wmul
  1637 ;;		_change_direction
  1638 ;;		_check_temperature
  1639 ;;		_configure_analog_digital_conversion
  1640 ;;		_get_reg_value
  1641 ;;		_get_temperature
  1642 ;;		_init_PORTS
  1643 ;;		_init_USART
  1644 ;;		_init_ccp1
  1645 ;;		_init_interrupts
  1646 ;;		_init_stepper
  1647 ;;		_init_timer_0
  1648 ;;		_init_timer_2
  1649 ;;		_lcd_cmd
  1650 ;;		_lcd_init
  1651 ;;		_lcd_str
  1652 ;;		_reach_goal
  1653 ;;		_serial_tx_char
  1654 ;;		_snprintf
  1655 ;;		_state_translator_fpga_to_micro
  1656 ;;		_state_translator_micro_to_fpga
  1657 ;;		_wait_for_zero
  1658 ;; This function is called by:
  1659 ;;		Startup code after reset
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           	psect	text0
  1664  001462                     __ptext0:
  1665                           	callstack 0
  1666  001462                     _main:
  1667                           	callstack 21
  1668  001462  FFFF               	dw	65535	; assembler added errata NOP
  1669                           
  1670                           ;main.c: 56:     init_PORTS();
  1671  001464  EC21  F033         	call	_init_PORTS	;wreg free
  1672  001468                     
  1673                           ;main.c: 57:     init_USART();
  1674  001468  ECAB  F033         	call	_init_USART	;wreg free
  1675  00146C                     
  1676                           ;main.c: 58:     init_timer_2();
  1677  00146C  ECAB  F037         	call	_init_timer_2	;wreg free
  1678  001470                     
  1679                           ;main.c: 59:     init_ccp1();
  1680  001470  ECBC  F032         	call	_init_ccp1	;wreg free
  1681  001474                     
  1682                           ;main.c: 60:     init_interrupts();
  1683  001474  EC6D  F032         	call	_init_interrupts	;wreg free
  1684  001478                     
  1685                           ;main.c: 61:     configure_analog_digital_conversion();
  1686  001478  ECCE  F032         	call	_configure_analog_digital_conversion	;wreg free
  1687  00147C                     
  1688                           ;main.c: 62:     init_stepper(&joint_stepper, 0, 0, 1, hex_joint_values);
  1689  00147C  0EBF               	movlw	low _joint_stepper
  1690  00147E  6E01               	movwf	init_stepper@stepper_motor^0,c
  1691  001480  0E01               	movlw	high _joint_stepper
  1692  001482  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  1693  001484  0E00               	movlw	0
  1694  001486  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  1695  001488  0E00               	movlw	0
  1696  00148A  6E03               	movwf	init_stepper@current_coil^0,c
  1697  00148C  0E00               	movlw	0
  1698  00148E  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  1699  001490  0E00               	movlw	0
  1700  001492  6E05               	movwf	init_stepper@step_counter^0,c
  1701  001494  0E00               	movlw	0
  1702  001496  6E08               	movwf	(init_stepper@direction+1)^0,c
  1703  001498  0E01               	movlw	1
  1704  00149A  6E07               	movwf	init_stepper@direction^0,c
  1705  00149C  0EE7               	movlw	low _hex_joint_values
  1706  00149E  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  1707  0014A0  0E01               	movlw	high _hex_joint_values
  1708  0014A2  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  1709  0014A4  ECF1  F036         	call	_init_stepper	;wreg free
  1710  0014A8                     
  1711                           ;main.c: 63:     init_stepper(&end_effector_stepper, 0, 0, 1, hex_end_effector_values);
  1712  0014A8  0EB1               	movlw	low _end_effector_stepper
  1713  0014AA  6E01               	movwf	init_stepper@stepper_motor^0,c
  1714  0014AC  0E01               	movlw	high _end_effector_stepper
  1715  0014AE  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  1716  0014B0  0E00               	movlw	0
  1717  0014B2  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  1718  0014B4  0E00               	movlw	0
  1719  0014B6  6E03               	movwf	init_stepper@current_coil^0,c
  1720  0014B8  0E00               	movlw	0
  1721  0014BA  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  1722  0014BC  0E00               	movlw	0
  1723  0014BE  6E05               	movwf	init_stepper@step_counter^0,c
  1724  0014C0  0E00               	movlw	0
  1725  0014C2  6E08               	movwf	(init_stepper@direction+1)^0,c
  1726  0014C4  0E01               	movlw	1
  1727  0014C6  6E07               	movwf	init_stepper@direction^0,c
  1728  0014C8  0EDF               	movlw	low _hex_end_effector_values
  1729  0014CA  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  1730  0014CC  0E01               	movlw	high _hex_end_effector_values
  1731  0014CE  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  1732  0014D0  ECF1  F036         	call	_init_stepper	;wreg free
  1733  0014D4                     
  1734                           ;main.c: 64:     lcd_init();
  1735  0014D4  EC6E  F036         	call	_lcd_init	;wreg free
  1736  0014D8                     
  1737                           ;main.c: 65:     lcd_cmd(0x0C);
  1738  0014D8  0E0C               	movlw	12
  1739  0014DA  ECE2  F032         	call	_lcd_cmd
  1740  0014DE                     
  1741                           ;main.c: 67:     lcd_cmd(0x01);
  1742  0014DE  0E01               	movlw	1
  1743  0014E0  ECE2  F032         	call	_lcd_cmd
  1744  0014E4                     
  1745                           ;main.c: 68:     lcd_cmd(0x80);
  1746  0014E4  0E80               	movlw	128
  1747  0014E6  ECE2  F032         	call	_lcd_cmd
  1748  0014EA                     
  1749                           ;main.c: 69:     lcd_str("Device has been reset");
  1750  0014EA  0E93               	movlw	low STR_9
  1751  0014EC  6E03               	movwf	lcd_str@str^0,c
  1752  0014EE  0E7F               	movlw	high STR_9
  1753  0014F0  6E04               	movwf	(lcd_str@str+1)^0,c
  1754  0014F2  ECAD  F036         	call	_lcd_str	;wreg free
  1755  0014F6                     
  1756                           ;main.c: 71:     (INTCONbits.GIE = 1);
  1757  0014F6  8EF2               	bsf	242,7,c	;volatile
  1758  0014F8                     
  1759                           ;main.c: 73:     mix_counter = 0;
  1760  0014F8  0E00               	movlw	0
  1761  0014FA  0101               	movlb	1	; () banked
  1762  0014FC  6FAC               	movwf	(_mix_counter+1)& (0+255),b
  1763  0014FE  0E00               	movlw	0
  1764  001500  6FAB               	movwf	_mix_counter& (0+255),b
  1765  001502                     l5546:
  1766  001502  FFFF               	dw	65535	; assembler added errata NOP
  1767                           
  1768                           ;main.c: 76:         if (state_changed){
  1769  001504  0101               	movlb	1	; () banked
  1770  001506  51B0               	movf	_state_changed& (0+255),w,b
  1771  001508  B4D8               	btfsc	status,2,c
  1772  00150A  EF89  F00A         	goto	u6781
  1773  00150E  EF8C  F00A         	goto	u6780
  1774  001512                     u6781:
  1775  001512  FFFF               	dw	65535	; assembler added errata NOP
  1776  001514  EFE6  F00A         	goto	l5570
  1777  001518                     u6780:
  1778  001518  FFFF               	dw	65535	; assembler added errata NOP
  1779  00151A                     
  1780                           ; BSR set to: 1
  1781                           ;main.c: 77:             const char* greet_str[80];;main.c: 78:             if (read_new
      +                          _char){
  1782  00151A  51AE               	movf	_read_new_char& (0+255),w,b
  1783  00151C  B4D8               	btfsc	status,2,c
  1784  00151E  EF93  F00A         	goto	u6791
  1785  001522  EF96  F00A         	goto	u6790
  1786  001526                     u6791:
  1787  001526  FFFF               	dw	65535	; assembler added errata NOP
  1788  001528  EFB9  F00A         	goto	l5560
  1789  00152C                     u6790:
  1790  00152C  FFFF               	dw	65535	; assembler added errata NOP
  1791  00152E                     
  1792                           ; BSR set to: 1
  1793                           ;main.c: 79:                 rx_char = get_reg_value();
  1794  00152E  EC79  F032         	call	_get_reg_value	;wreg free
  1795  001532  0101               	movlb	1	; () banked
  1796  001534  6FA2               	movwf	main@rx_char& (0+255),b
  1797  001536                     
  1798                           ; BSR set to: 1
  1799                           ;main.c: 80:                 if (rx_char == 'u'){
  1800  001536  0E75               	movlw	117
  1801  001538  19A2               	xorwf	main@rx_char& (0+255),w,b
  1802  00153A  A4D8               	btfss	status,2,c
  1803  00153C  EFA2  F00A         	goto	u6801
  1804  001540  EFA5  F00A         	goto	u6800
  1805  001544                     u6801:
  1806  001544  FFFF               	dw	65535	; assembler added errata NOP
  1807  001546  EFA9  F00A         	goto	l136
  1808  00154A                     u6800:
  1809  00154A  FFFF               	dw	65535	; assembler added errata NOP
  1810  00154C                     
  1811                           ; BSR set to: 1
  1812                           ;main.c: 81:                     serial_tx_char(rx_char);
  1813  00154C  51A2               	movf	main@rx_char& (0+255),w,b
  1814  00154E  EC8B  F032         	call	_serial_tx_char
  1815  001552                     l136:
  1816  001552  FFFF               	dw	65535	; assembler added errata NOP
  1817                           
  1818                           ;main.c: 83:                 serial_tx_char(rx_char);
  1819  001554  0101               	movlb	1	; () banked
  1820  001556  51A2               	movf	main@rx_char& (0+255),w,b
  1821  001558  EC8B  F032         	call	_serial_tx_char
  1822  00155C                     
  1823                           ;main.c: 84:                 state_translator_fpga_to_micro(rx_char, &state);
  1824  00155C  0ECD               	movlw	low _state
  1825  00155E  6E03               	movwf	state_translator_fpga_to_micro@state^0,c
  1826  001560  0E01               	movlw	high _state
  1827  001562  6E04               	movwf	(state_translator_fpga_to_micro@state+1)^0,c
  1828  001564  0101               	movlb	1	; () banked
  1829  001566  51A2               	movf	main@rx_char& (0+255),w,b
  1830  001568  ECBE  F03A         	call	_state_translator_fpga_to_micro
  1831  00156C                     
  1832                           ;main.c: 85:                 read_new_char = 0;
  1833  00156C  0E00               	movlw	0
  1834  00156E  0101               	movlb	1	; () banked
  1835  001570  6FAE               	movwf	_read_new_char& (0+255),b
  1836  001572                     l5560:
  1837  001572  FFFF               	dw	65535	; assembler added errata NOP
  1838                           
  1839                           ; BSR set to: 1
  1840                           ;main.c: 87:             snprintf(greet_str, sizeof(greet_str), "%s", state_msgs[state])
      +                          ;
  1841  001574  0E00               	movlw	low main@greet_str
  1842  001576  0100               	movlb	0	; () banked
  1843  001578  6FC2               	movwf	snprintf@s& (0+255),b
  1844  00157A  0E01               	movlw	high main@greet_str
  1845  00157C  6FC3               	movwf	(snprintf@s+1)& (0+255),b
  1846  00157E  0E00               	movlw	0
  1847  001580  6FC5               	movwf	(snprintf@n+1)& (0+255),b
  1848  001582  0EA0               	movlw	160
  1849  001584  6FC4               	movwf	snprintf@n& (0+255),b
  1850  001586  0EFC               	movlw	low STR_10
  1851  001588  6FC6               	movwf	snprintf@fmt& (0+255),b
  1852  00158A  0E7F               	movlw	high STR_10
  1853  00158C  6FC7               	movwf	(snprintf@fmt+1)& (0+255),b
  1854  00158E  90D8               	bcf	status,0,c
  1855  001590  0101               	movlb	1	; () banked
  1856  001592  35CD               	rlcf	_state& (0+255),w,b
  1857  001594  6ED9               	movwf	fsr2l,c
  1858  001596  35CE               	rlcf	(_state+1)& (0+255),w,b
  1859  001598  6EDA               	movwf	fsr2h,c
  1860  00159A  0ECF               	movlw	low _state_msgs
  1861  00159C  26D9               	addwf	fsr2l,f,c
  1862  00159E  0E01               	movlw	high _state_msgs
  1863  0015A0  22DA               	addwfc	fsr2h,f,c
  1864  0015A2  CFDE F0C8          	movff	postinc2,?_snprintf+6
  1865  0015A6  CFDD F0C9          	movff	postdec2,?_snprintf+7
  1866  0015AA  EC37  F033         	call	_snprintf	;wreg free
  1867  0015AE                     
  1868                           ;main.c: 88:             lcd_cmd(0x01);
  1869  0015AE  0E01               	movlw	1
  1870  0015B0  ECE2  F032         	call	_lcd_cmd
  1871  0015B4                     
  1872                           ;main.c: 89:             lcd_cmd(0x80);
  1873  0015B4  0E80               	movlw	128
  1874  0015B6  ECE2  F032         	call	_lcd_cmd
  1875  0015BA                     
  1876                           ;main.c: 90:             lcd_str(greet_str);
  1877  0015BA  0E00               	movlw	low main@greet_str
  1878  0015BC  6E03               	movwf	lcd_str@str^0,c
  1879  0015BE  0E01               	movlw	high main@greet_str
  1880  0015C0  6E04               	movwf	(lcd_str@str+1)^0,c
  1881  0015C2  ECAD  F036         	call	_lcd_str	;wreg free
  1882  0015C6                     
  1883                           ;main.c: 92:             state_changed = 0;
  1884  0015C6  0E00               	movlw	0
  1885  0015C8  0101               	movlb	1	; () banked
  1886  0015CA  6FB0               	movwf	_state_changed& (0+255),b
  1887  0015CC                     l5570:
  1888  0015CC  FFFF               	dw	65535	; assembler added errata NOP
  1889                           
  1890                           ; BSR set to: 1
  1891                           ;main.c: 96:         if (state == 2){
  1892  0015CE  0E02               	movlw	2
  1893  0015D0  19CD               	xorwf	_state& (0+255),w,b
  1894  0015D2  11CE               	iorwf	(_state+1)& (0+255),w,b
  1895  0015D4  A4D8               	btfss	status,2,c
  1896  0015D6  EFEF  F00A         	goto	u6811
  1897  0015DA  EFF2  F00A         	goto	u6810
  1898  0015DE                     u6811:
  1899  0015DE  FFFF               	dw	65535	; assembler added errata NOP
  1900  0015E0  EF35  F00B         	goto	l137
  1901  0015E4                     u6810:
  1902  0015E4  FFFF               	dw	65535	; assembler added errata NOP
  1903  0015E6                     
  1904                           ; BSR set to: 1
  1905                           ;main.c: 97:             LATAbits.LATA1 = 1;
  1906  0015E6  8289               	bsf	137,1,c	;volatile
  1907  0015E8                     
  1908                           ; BSR set to: 1
  1909                           ;main.c: 98:             if (move_to_trash && trash_counter < 100){
  1910  0015E8  51A3               	movf	_move_to_trash& (0+255),w,b
  1911  0015EA  11A4               	iorwf	(_move_to_trash+1)& (0+255),w,b
  1912  0015EC  B4D8               	btfsc	status,2,c
  1913  0015EE  EFFB  F00A         	goto	u6821
  1914  0015F2  EFFE  F00A         	goto	u6820
  1915  0015F6                     u6821:
  1916  0015F6  FFFF               	dw	65535	; assembler added errata NOP
  1917  0015F8  EF13  F00B         	goto	l5580
  1918  0015FC                     u6820:
  1919  0015FC  FFFF               	dw	65535	; assembler added errata NOP
  1920  0015FE                     
  1921                           ; BSR set to: 1
  1922  0015FE  BFA6               	btfsc	(_trash_counter+1)& (0+255),7,b
  1923  001600  EF0E  F00B         	goto	u6830
  1924  001604  51A6               	movf	(_trash_counter+1)& (0+255),w,b
  1925  001606  E107               	bnz	u6831
  1926  001608  0E64               	movlw	100
  1927  00160A  5DA5               	subwf	_trash_counter& (0+255),w,b
  1928  00160C  B0D8               	btfsc	status,0,c
  1929  00160E  EF0B  F00B         	goto	u6831
  1930  001612  EF0E  F00B         	goto	u6830
  1931  001616                     u6831:
  1932  001616  FFFF               	dw	65535	; assembler added errata NOP
  1933  001618  EF13  F00B         	goto	l5580
  1934  00161C                     u6830:
  1935  00161C  FFFF               	dw	65535	; assembler added errata NOP
  1936  00161E                     
  1937                           ; BSR set to: 1
  1938                           ;main.c: 99:                 trash_counter++;
  1939  00161E  4BA5               	infsnz	_trash_counter& (0+255),f,b
  1940  001620  2BA6               	incf	(_trash_counter+1)& (0+255),f,b
  1941                           
  1942                           ;main.c: 100:             } else if (move_to_trash && trash_counter >= 100){
  1943  001622  EF81  F00A         	goto	l5546
  1944  001626                     l5580:
  1945  001626  FFFF               	dw	65535	; assembler added errata NOP
  1946                           
  1947                           ; BSR set to: 1
  1948  001628  51A3               	movf	_move_to_trash& (0+255),w,b
  1949  00162A  11A4               	iorwf	(_move_to_trash+1)& (0+255),w,b
  1950  00162C  B4D8               	btfsc	status,2,c
  1951  00162E  EF1B  F00B         	goto	u6841
  1952  001632  EF1E  F00B         	goto	u6840
  1953  001636                     u6841:
  1954  001636  FFFF               	dw	65535	; assembler added errata NOP
  1955  001638  EF59  F00B         	goto	l143
  1956  00163C                     u6840:
  1957  00163C  FFFF               	dw	65535	; assembler added errata NOP
  1958  00163E                     
  1959                           ; BSR set to: 1
  1960  00163E  BFA6               	btfsc	(_trash_counter+1)& (0+255),7,b
  1961  001640  EF2B  F00B         	goto	u6851
  1962  001644  51A6               	movf	(_trash_counter+1)& (0+255),w,b
  1963  001646  E10A               	bnz	u6850
  1964  001648  0E64               	movlw	100
  1965  00164A  5DA5               	subwf	_trash_counter& (0+255),w,b
  1966  00164C  A0D8               	btfss	status,0,c
  1967  00164E  EF2B  F00B         	goto	u6851
  1968  001652  EF2E  F00B         	goto	u6850
  1969  001656                     u6851:
  1970  001656  FFFF               	dw	65535	; assembler added errata NOP
  1971  001658  EF59  F00B         	goto	l143
  1972  00165C                     u6850:
  1973  00165C  FFFF               	dw	65535	; assembler added errata NOP
  1974  00165E                     
  1975                           ; BSR set to: 1
  1976                           ;main.c: 101:                 state = 0;
  1977  00165E  0E00               	movlw	0
  1978  001660  6FCE               	movwf	(_state+1)& (0+255),b
  1979  001662  0E00               	movlw	0
  1980  001664  6FCD               	movwf	_state& (0+255),b
  1981  001666  EF81  F00A         	goto	l5546
  1982  00166A                     l137:
  1983  00166A  FFFF               	dw	65535	; assembler added errata NOP
  1984                           
  1985                           ; BSR set to: 1
  1986                           ;main.c: 104:             LATAbits.LATA1 = 0;
  1987  00166C  9289               	bcf	137,1,c	;volatile
  1988  00166E                     
  1989                           ; BSR set to: 1
  1990                           ;main.c: 105:             if (state == 0) {
  1991  00166E  51CD               	movf	_state& (0+255),w,b
  1992  001670  11CE               	iorwf	(_state+1)& (0+255),w,b
  1993  001672  A4D8               	btfss	status,2,c
  1994  001674  EF3E  F00B         	goto	u6861
  1995  001678  EF41  F00B         	goto	u6860
  1996  00167C                     u6861:
  1997  00167C  FFFF               	dw	65535	; assembler added errata NOP
  1998  00167E  EF5C  F00B         	goto	l5594
  1999  001682                     u6860:
  2000  001682  FFFF               	dw	65535	; assembler added errata NOP
  2001  001684                     
  2002                           ; BSR set to: 1
  2003                           ;main.c: 106:                 if (!msg_sent){
  2004  001684  51AF               	movf	_msg_sent& (0+255),w,b
  2005  001686  A4D8               	btfss	status,2,c
  2006  001688  EF48  F00B         	goto	u6871
  2007  00168C  EF4B  F00B         	goto	u6870
  2008  001690                     u6871:
  2009  001690  FFFF               	dw	65535	; assembler added errata NOP
  2010  001692  EF81  F00A         	goto	l5546
  2011  001696                     u6870:
  2012  001696  FFFF               	dw	65535	; assembler added errata NOP
  2013  001698                     
  2014                           ; BSR set to: 1
  2015                           ;main.c: 107:                     serial_tx_char(state_translator_micro_to_fpga(&state))
      +                          ;
  2016  001698  0ECD               	movlw	low _state
  2017  00169A  6E01               	movwf	state_translator_micro_to_fpga@state^0,c
  2018  00169C  0E01               	movlw	high _state
  2019  00169E  6E02               	movwf	(state_translator_micro_to_fpga@state+1)^0,c
  2020  0016A0  EC3C  F03B         	call	_state_translator_micro_to_fpga	;wreg free
  2021  0016A4  EC8B  F032         	call	_serial_tx_char
  2022  0016A8                     
  2023                           ;main.c: 108:                     msg_sent = 1;
  2024  0016A8  0E01               	movlw	1
  2025  0016AA  0101               	movlb	1	; () banked
  2026  0016AC  6FAF               	movwf	_msg_sent& (0+255),b
  2027  0016AE  EF81  F00A         	goto	l5546
  2028  0016B2                     l143:
  2029  0016B2  FFFF               	dw	65535	; assembler added errata NOP
  2030                           
  2031                           ;main.c: 110:             } else if (state == 1){
  2032  0016B4  EF81  F00A         	goto	l5546
  2033  0016B8                     l5594:
  2034  0016B8  FFFF               	dw	65535	; assembler added errata NOP
  2035                           
  2036                           ; BSR set to: 1
  2037  0016BA  05CD               	decf	_state& (0+255),w,b
  2038  0016BC  11CE               	iorwf	(_state+1)& (0+255),w,b
  2039  0016BE  A4D8               	btfss	status,2,c
  2040  0016C0  EF64  F00B         	goto	u6881
  2041  0016C4  EF67  F00B         	goto	u6880
  2042  0016C8                     u6881:
  2043  0016C8  FFFF               	dw	65535	; assembler added errata NOP
  2044  0016CA  EF78  F00B         	goto	l5600
  2045  0016CE                     u6880:
  2046  0016CE  FFFF               	dw	65535	; assembler added errata NOP
  2047  0016D0                     
  2048                           ; BSR set to: 1
  2049                           ;main.c: 111:                 state = 2;
  2050  0016D0  0E00               	movlw	0
  2051  0016D2  6FCE               	movwf	(_state+1)& (0+255),b
  2052  0016D4  0E02               	movlw	2
  2053  0016D6  6FCD               	movwf	_state& (0+255),b
  2054                           
  2055                           ;main.c: 112:                 state_changed = 1;
  2056  0016D8  0E01               	movlw	1
  2057  0016DA  6FB0               	movwf	_state_changed& (0+255),b
  2058  0016DC                     
  2059                           ; BSR set to: 1
  2060                           ;main.c: 113:                 serial_tx_char(state_translator_micro_to_fpga(&state));
  2061  0016DC  0ECD               	movlw	low _state
  2062  0016DE  6E01               	movwf	state_translator_micro_to_fpga@state^0,c
  2063  0016E0  0E01               	movlw	high _state
  2064  0016E2  6E02               	movwf	(state_translator_micro_to_fpga@state+1)^0,c
  2065  0016E4  EC3C  F03B         	call	_state_translator_micro_to_fpga	;wreg free
  2066  0016E8  EC8B  F032         	call	_serial_tx_char
  2067                           
  2068                           ;main.c: 114:             } else if (state == 3){
  2069  0016EC  EF81  F00A         	goto	l5546
  2070  0016F0                     l5600:
  2071  0016F0  FFFF               	dw	65535	; assembler added errata NOP
  2072                           
  2073                           ; BSR set to: 1
  2074  0016F2  0E03               	movlw	3
  2075  0016F4  19CD               	xorwf	_state& (0+255),w,b
  2076  0016F6  11CE               	iorwf	(_state+1)& (0+255),w,b
  2077  0016F8  A4D8               	btfss	status,2,c
  2078  0016FA  EF81  F00B         	goto	u6891
  2079  0016FE  EF84  F00B         	goto	u6890
  2080  001702                     u6891:
  2081  001702  FFFF               	dw	65535	; assembler added errata NOP
  2082  001704  EFCD  F00B         	goto	l5616
  2083  001708                     u6890:
  2084  001708  FFFF               	dw	65535	; assembler added errata NOP
  2085  00170A                     
  2086                           ; BSR set to: 1
  2087                           ;main.c: 115:                 if (timer_done){
  2088  00170A  51AD               	movf	_timer_done& (0+255),w,b
  2089  00170C  B4D8               	btfsc	status,2,c
  2090  00170E  EF8B  F00B         	goto	u6901
  2091  001712  EF8E  F00B         	goto	u6900
  2092  001716                     u6901:
  2093  001716  FFFF               	dw	65535	; assembler added errata NOP
  2094  001718  EFB6  F00B         	goto	l148
  2095  00171C                     u6900:
  2096  00171C  FFFF               	dw	65535	; assembler added errata NOP
  2097  00171E                     
  2098                           ; BSR set to: 1
  2099                           ;main.c: 116:                     if(check_temperature(get_temperature())){
  2100  00171E  ECF9  F035         	call	_get_temperature	;wreg free
  2101  001722  C0D4  F0D6         	movff	?_get_temperature,check_temperature@temp_to_be_checked
  2102  001726  C0D5  F0D7         	movff	?_get_temperature+1,check_temperature@temp_to_be_checked+1
  2103  00172A  EC7F  F038         	call	_check_temperature	;wreg free
  2104  00172E  0100               	movlb	0	; () banked
  2105  001730  51D6               	movf	?_check_temperature& (0+255),w,b
  2106  001732  11D7               	iorwf	(?_check_temperature+1)& (0+255),w,b
  2107  001734  B4D8               	btfsc	status,2,c
  2108  001736  EF9F  F00B         	goto	u6911
  2109  00173A  EFA2  F00B         	goto	u6910
  2110  00173E                     u6911:
  2111  00173E  FFFF               	dw	65535	; assembler added errata NOP
  2112  001740  EF59  F00B         	goto	l143
  2113  001744                     u6910:
  2114  001744  FFFF               	dw	65535	; assembler added errata NOP
  2115  001746                     
  2116                           ; BSR set to: 0
  2117                           ;main.c: 117:                         state = 2;
  2118  001746  0E00               	movlw	0
  2119  001748  0101               	movlb	1	; () banked
  2120  00174A  6FCE               	movwf	(_state+1)& (0+255),b
  2121  00174C  0E02               	movlw	2
  2122  00174E  6FCD               	movwf	_state& (0+255),b
  2123                           
  2124                           ;main.c: 118:                         state_changed = 1;
  2125  001750  0E01               	movlw	1
  2126  001752  6FB0               	movwf	_state_changed& (0+255),b
  2127                           
  2128                           ;main.c: 119:                         timer_done = 0;
  2129  001754  0E00               	movlw	0
  2130  001756  6FAD               	movwf	_timer_done& (0+255),b
  2131  001758                     
  2132                           ; BSR set to: 1
  2133                           ;main.c: 120:                         serial_tx_char(state_translator_micro_to_fpga(&sta
      +                          te));
  2134  001758  0ECD               	movlw	low _state
  2135  00175A  6E01               	movwf	state_translator_micro_to_fpga@state^0,c
  2136  00175C  0E01               	movlw	high _state
  2137  00175E  6E02               	movwf	(state_translator_micro_to_fpga@state+1)^0,c
  2138  001760  EC3C  F03B         	call	_state_translator_micro_to_fpga	;wreg free
  2139  001764  EC8B  F032         	call	_serial_tx_char
  2140                           
  2141                           ;main.c: 121:                     } else{
  2142  001768  EF81  F00A         	goto	l5546
  2143  00176C                     l148:
  2144  00176C  FFFF               	dw	65535	; assembler added errata NOP
  2145                           
  2146                           ; BSR set to: 1
  2147                           ;main.c: 126:                     if (T0CONbits.TMR0ON == 0){
  2148  00176E  BED5               	btfsc	213,7,c	;volatile
  2149  001770  EFBC  F00B         	goto	u6921
  2150  001774  EFBF  F00B         	goto	u6920
  2151  001778                     u6921:
  2152  001778  FFFF               	dw	65535	; assembler added errata NOP
  2153  00177A  EFC4  F00B         	goto	l5614
  2154  00177E                     u6920:
  2155  00177E  FFFF               	dw	65535	; assembler added errata NOP
  2156  001780                     
  2157                           ; BSR set to: 1
  2158                           ;main.c: 127:                         wait_for_zero();
  2159  001780  ECEC  F01F         	call	_wait_for_zero	;wreg free
  2160  001784                     
  2161                           ;main.c: 128:                         init_timer_0();
  2162  001784  ECAB  F032         	call	_init_timer_0	;wreg free
  2163  001788                     l5614:
  2164  001788  FFFF               	dw	65535	; assembler added errata NOP
  2165                           
  2166                           ;main.c: 130:                     int current_temp = get_temperature();
  2167  00178A  ECF9  F035         	call	_get_temperature	;wreg free
  2168  00178E  C0D4  F1A0         	movff	?_get_temperature,main@current_temp
  2169  001792  C0D5  F1A1         	movff	?_get_temperature+1,main@current_temp+1
  2170  001796  EF81  F00A         	goto	l5546
  2171  00179A                     l5616:
  2172  00179A  FFFF               	dw	65535	; assembler added errata NOP
  2173                           
  2174                           ; BSR set to: 1
  2175  00179C  0E04               	movlw	4
  2176  00179E  19CD               	xorwf	_state& (0+255),w,b
  2177  0017A0  11CE               	iorwf	(_state+1)& (0+255),w,b
  2178  0017A2  A4D8               	btfss	status,2,c
  2179  0017A4  EFD6  F00B         	goto	u6931
  2180  0017A8  EFD9  F00B         	goto	u6930
  2181  0017AC                     u6931:
  2182  0017AC  FFFF               	dw	65535	; assembler added errata NOP
  2183  0017AE  EF75  F00C         	goto	l5638
  2184  0017B2                     u6930:
  2185  0017B2  FFFF               	dw	65535	; assembler added errata NOP
  2186  0017B4                     
  2187                           ; BSR set to: 1
  2188                           ;main.c: 134:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  2189  0017B4  0E03               	movlw	3
  2190  0017B6  0100               	movlb	0	; () banked
  2191  0017B8  6FDD               	movwf	??_main& (0+255),b
  2192  0017BA  0EEB               	movlw	235
  2193  0017BC                     u7217:
  2194  0017BC  FFFF               	dw	65535	; errata NOP
  2195  0017BE  2EE8               	decfsz	wreg,f,c
  2196  0017C0  D7FD               	bra	u7217
  2197  0017C2  2FDD               	decfsz	??_main& (0+255),f,b
  2198  0017C4  D7FB               	bra	u7217
  2199  0017C6  D000               	nop2	
  2200  0017C8  F000               	nop	
  2201  0017CA                     
  2202                           ;main.c: 135:                 if (joint_homed && reach_goal(&joint_stepper, 50)){
  2203  0017CA  0101               	movlb	1	; () banked
  2204  0017CC  51A9               	movf	_joint_homed& (0+255),w,b
  2205  0017CE  11AA               	iorwf	(_joint_homed+1)& (0+255),w,b
  2206  0017D0  B4D8               	btfsc	status,2,c
  2207  0017D2  EFED  F00B         	goto	u6941
  2208  0017D6  EFF0  F00B         	goto	u6940
  2209  0017DA                     u6941:
  2210  0017DA  FFFF               	dw	65535	; assembler added errata NOP
  2211  0017DC  EF0B  F00C         	goto	l5626
  2212  0017E0                     u6940:
  2213  0017E0  FFFF               	dw	65535	; assembler added errata NOP
  2214  0017E2                     
  2215                           ; BSR set to: 1
  2216  0017E2  0EBF               	movlw	low _joint_stepper
  2217  0017E4  6E07               	movwf	reach_goal@stepper_motor^0,c
  2218  0017E6  0E01               	movlw	high _joint_stepper
  2219  0017E8  6E08               	movwf	(reach_goal@stepper_motor+1)^0,c
  2220  0017EA  0E00               	movlw	0
  2221  0017EC  6E0A               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2222  0017EE  0E32               	movlw	50
  2223  0017F0  6E09               	movwf	reach_goal@goal_to_reach^0,c
  2224  0017F2  EC32  F036         	call	_reach_goal	;wreg free
  2225  0017F6  5007               	movf	?_reach_goal^0,w,c
  2226  0017F8  1008               	iorwf	(?_reach_goal+1)^0,w,c
  2227  0017FA  B4D8               	btfsc	status,2,c
  2228  0017FC  EF02  F00C         	goto	u6951
  2229  001800  EF05  F00C         	goto	u6950
  2230  001804                     u6951:
  2231  001804  FFFF               	dw	65535	; assembler added errata NOP
  2232  001806  EF0B  F00C         	goto	l5626
  2233  00180A                     u6950:
  2234  00180A  FFFF               	dw	65535	; assembler added errata NOP
  2235  00180C                     
  2236                           ;main.c: 136:                     joint_homed = 0;
  2237  00180C  0E00               	movlw	0
  2238  00180E  0101               	movlb	1	; () banked
  2239  001810  6FAA               	movwf	(_joint_homed+1)& (0+255),b
  2240  001812  0E00               	movlw	0
  2241  001814  6FA9               	movwf	_joint_homed& (0+255),b
  2242  001816                     l5626:
  2243  001816  FFFF               	dw	65535	; assembler added errata NOP
  2244                           
  2245                           ;main.c: 138:                 if (!joint_homed && end_effector_homed && reach_goal(&end_
      +                          effector_stepper, 100)){
  2246  001818  0101               	movlb	1	; () banked
  2247  00181A  51A9               	movf	_joint_homed& (0+255),w,b
  2248  00181C  11AA               	iorwf	(_joint_homed+1)& (0+255),w,b
  2249  00181E  A4D8               	btfss	status,2,c
  2250  001820  EF14  F00C         	goto	u6961
  2251  001824  EF17  F00C         	goto	u6960
  2252  001828                     u6961:
  2253  001828  FFFF               	dw	65535	; assembler added errata NOP
  2254  00182A  EF3D  F00C         	goto	l5634
  2255  00182E                     u6960:
  2256  00182E  FFFF               	dw	65535	; assembler added errata NOP
  2257  001830                     
  2258                           ; BSR set to: 1
  2259  001830  51A7               	movf	_end_effector_homed& (0+255),w,b
  2260  001832  11A8               	iorwf	(_end_effector_homed+1)& (0+255),w,b
  2261  001834  B4D8               	btfsc	status,2,c
  2262  001836  EF1F  F00C         	goto	u6971
  2263  00183A  EF22  F00C         	goto	u6970
  2264  00183E                     u6971:
  2265  00183E  FFFF               	dw	65535	; assembler added errata NOP
  2266  001840  EF3D  F00C         	goto	l5634
  2267  001844                     u6970:
  2268  001844  FFFF               	dw	65535	; assembler added errata NOP
  2269  001846                     
  2270                           ; BSR set to: 1
  2271  001846  0EB1               	movlw	low _end_effector_stepper
  2272  001848  6E07               	movwf	reach_goal@stepper_motor^0,c
  2273  00184A  0E01               	movlw	high _end_effector_stepper
  2274  00184C  6E08               	movwf	(reach_goal@stepper_motor+1)^0,c
  2275  00184E  0E00               	movlw	0
  2276  001850  6E0A               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2277  001852  0E64               	movlw	100
  2278  001854  6E09               	movwf	reach_goal@goal_to_reach^0,c
  2279  001856  EC32  F036         	call	_reach_goal	;wreg free
  2280  00185A  5007               	movf	?_reach_goal^0,w,c
  2281  00185C  1008               	iorwf	(?_reach_goal+1)^0,w,c
  2282  00185E  B4D8               	btfsc	status,2,c
  2283  001860  EF34  F00C         	goto	u6981
  2284  001864  EF37  F00C         	goto	u6980
  2285  001868                     u6981:
  2286  001868  FFFF               	dw	65535	; assembler added errata NOP
  2287  00186A  EF3D  F00C         	goto	l5634
  2288  00186E                     u6980:
  2289  00186E  FFFF               	dw	65535	; assembler added errata NOP
  2290  001870                     
  2291                           ;main.c: 139:                     end_effector_homed = 0;
  2292  001870  0E00               	movlw	0
  2293  001872  0101               	movlb	1	; () banked
  2294  001874  6FA8               	movwf	(_end_effector_homed+1)& (0+255),b
  2295  001876  0E00               	movlw	0
  2296  001878  6FA7               	movwf	_end_effector_homed& (0+255),b
  2297  00187A                     l5634:
  2298  00187A  FFFF               	dw	65535	; assembler added errata NOP
  2299                           
  2300                           ;main.c: 141:                 if (!end_effector_homed * !joint_homed){
  2301  00187C  0101               	movlb	1	; () banked
  2302  00187E  51A7               	movf	_end_effector_homed& (0+255),w,b
  2303  001880  11A8               	iorwf	(_end_effector_homed+1)& (0+255),w,b
  2304  001882  B4D8               	btfsc	status,2,c
  2305  001884  EF46  F00C         	goto	u6991
  2306  001888  EF4A  F00C         	goto	u6990
  2307  00188C                     u6991:
  2308  00188C  FFFF               	dw	65535	; assembler added errata NOP
  2309  00188E  0E01               	movlw	1
  2310  001890  EF4C  F00C         	goto	u7000
  2311  001894                     u6990:
  2312  001894  FFFF               	dw	65535	; assembler added errata NOP
  2313  001896  0E00               	movlw	0
  2314  001898                     u7000:
  2315  001898  FFFF               	dw	65535	; assembler added errata NOP
  2316  00189A  6E01               	movwf	___wmul@multiplier^0,c
  2317  00189C  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2318  00189E  51A9               	movf	_joint_homed& (0+255),w,b
  2319  0018A0  11AA               	iorwf	(_joint_homed+1)& (0+255),w,b
  2320  0018A2  B4D8               	btfsc	status,2,c
  2321  0018A4  EF56  F00C         	goto	u7011
  2322  0018A8  EF5A  F00C         	goto	u7010
  2323  0018AC                     u7011:
  2324  0018AC  FFFF               	dw	65535	; assembler added errata NOP
  2325  0018AE  0E01               	movlw	1
  2326  0018B0  EF5C  F00C         	goto	u7020
  2327  0018B4                     u7010:
  2328  0018B4  FFFF               	dw	65535	; assembler added errata NOP
  2329  0018B6  0E00               	movlw	0
  2330  0018B8                     u7020:
  2331  0018B8  FFFF               	dw	65535	; assembler added errata NOP
  2332  0018BA  6E03               	movwf	___wmul@multiplicand^0,c
  2333  0018BC  6A04               	clrf	(___wmul@multiplicand+1)^0,c
  2334  0018BE  EC0C  F033         	call	___wmul	;wreg free
  2335  0018C2  5001               	movf	?___wmul^0,w,c
  2336  0018C4  1002               	iorwf	(?___wmul+1)^0,w,c
  2337  0018C6  B4D8               	btfsc	status,2,c
  2338  0018C8  EF68  F00C         	goto	u7031
  2339  0018CC  EF6B  F00C         	goto	u7030
  2340  0018D0                     u7031:
  2341  0018D0  FFFF               	dw	65535	; assembler added errata NOP
  2342  0018D2  EF81  F00A         	goto	l5546
  2343  0018D6                     u7030:
  2344  0018D6  FFFF               	dw	65535	; assembler added errata NOP
  2345  0018D8                     
  2346                           ;main.c: 142:                     state = 5;
  2347  0018D8  0E00               	movlw	0
  2348  0018DA  0101               	movlb	1	; () banked
  2349  0018DC  6FCE               	movwf	(_state+1)& (0+255),b
  2350  0018DE  0E05               	movlw	5
  2351  0018E0  6FCD               	movwf	_state& (0+255),b
  2352                           
  2353                           ;main.c: 143:                     state_changed = 1;
  2354  0018E2  0E01               	movlw	1
  2355  0018E4  6FB0               	movwf	_state_changed& (0+255),b
  2356  0018E6  EF81  F00A         	goto	l5546
  2357  0018EA                     l5638:
  2358  0018EA  FFFF               	dw	65535	; assembler added errata NOP
  2359                           
  2360                           ; BSR set to: 1
  2361  0018EC  0E05               	movlw	5
  2362  0018EE  19CD               	xorwf	_state& (0+255),w,b
  2363  0018F0  11CE               	iorwf	(_state+1)& (0+255),w,b
  2364  0018F2  A4D8               	btfss	status,2,c
  2365  0018F4  EF7E  F00C         	goto	u7041
  2366  0018F8  EF81  F00C         	goto	u7040
  2367  0018FC                     u7041:
  2368  0018FC  FFFF               	dw	65535	; assembler added errata NOP
  2369  0018FE  EFE9  F00C         	goto	l5658
  2370  001902                     u7040:
  2371  001902  FFFF               	dw	65535	; assembler added errata NOP
  2372  001904                     
  2373                           ; BSR set to: 1
  2374                           ;main.c: 146:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  2375  001904  0E03               	movlw	3
  2376  001906  0100               	movlb	0	; () banked
  2377  001908  6FDD               	movwf	??_main& (0+255),b
  2378  00190A  0EEB               	movlw	235
  2379  00190C                     u7227:
  2380  00190C  FFFF               	dw	65535	; errata NOP
  2381  00190E  2EE8               	decfsz	wreg,f,c
  2382  001910  D7FD               	bra	u7227
  2383  001912  2FDD               	decfsz	??_main& (0+255),f,b
  2384  001914  D7FB               	bra	u7227
  2385  001916  D000               	nop2	
  2386  001918  F000               	nop	
  2387  00191A                     
  2388                           ;main.c: 147:                 if (reach_goal(&joint_stepper, 100)) {
  2389  00191A  0EBF               	movlw	low _joint_stepper
  2390  00191C  6E07               	movwf	reach_goal@stepper_motor^0,c
  2391  00191E  0E01               	movlw	high _joint_stepper
  2392  001920  6E08               	movwf	(reach_goal@stepper_motor+1)^0,c
  2393  001922  0E00               	movlw	0
  2394  001924  6E0A               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2395  001926  0E64               	movlw	100
  2396  001928  6E09               	movwf	reach_goal@goal_to_reach^0,c
  2397  00192A  EC32  F036         	call	_reach_goal	;wreg free
  2398  00192E  5007               	movf	?_reach_goal^0,w,c
  2399  001930  1008               	iorwf	(?_reach_goal+1)^0,w,c
  2400  001932  B4D8               	btfsc	status,2,c
  2401  001934  EF9E  F00C         	goto	u7051
  2402  001938  EFA1  F00C         	goto	u7050
  2403  00193C                     u7051:
  2404  00193C  FFFF               	dw	65535	; assembler added errata NOP
  2405  00193E  EFAB  F00C         	goto	l5648
  2406  001942                     u7050:
  2407  001942  FFFF               	dw	65535	; assembler added errata NOP
  2408  001944                     
  2409                           ;main.c: 148:                     change_direction(&joint_stepper);
  2410  001944  0EBF               	movlw	low _joint_stepper
  2411  001946  6E01               	movwf	change_direction@stepper_motor^0,c
  2412  001948  0E01               	movlw	high _joint_stepper
  2413  00194A  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2414  00194C  EC51  F033         	call	_change_direction	;wreg free
  2415  001950                     
  2416                           ;main.c: 149:                     mix_counter++;
  2417  001950  0101               	movlb	1	; () banked
  2418  001952  4BAB               	infsnz	_mix_counter& (0+255),f,b
  2419  001954  2BAC               	incf	(_mix_counter+1)& (0+255),f,b
  2420  001956                     l5648:
  2421  001956  FFFF               	dw	65535	; assembler added errata NOP
  2422                           
  2423                           ;main.c: 152:                 if (mix_counter >= 20){
  2424  001958  0101               	movlb	1	; () banked
  2425  00195A  BFAC               	btfsc	(_mix_counter+1)& (0+255),7,b
  2426  00195C  EFB9  F00C         	goto	u7061
  2427  001960  51AC               	movf	(_mix_counter+1)& (0+255),w,b
  2428  001962  E10A               	bnz	u7060
  2429  001964  0E14               	movlw	20
  2430  001966  5DAB               	subwf	_mix_counter& (0+255),w,b
  2431  001968  A0D8               	btfss	status,0,c
  2432  00196A  EFB9  F00C         	goto	u7061
  2433  00196E  EFBC  F00C         	goto	u7060
  2434  001972                     u7061:
  2435  001972  FFFF               	dw	65535	; assembler added errata NOP
  2436  001974  EF81  F00A         	goto	l5546
  2437  001978                     u7060:
  2438  001978  FFFF               	dw	65535	; assembler added errata NOP
  2439  00197A                     
  2440                           ; BSR set to: 1
  2441                           ;main.c: 153:                     state = 6;
  2442  00197A  0E00               	movlw	0
  2443  00197C  6FCE               	movwf	(_state+1)& (0+255),b
  2444  00197E  0E06               	movlw	6
  2445  001980  6FCD               	movwf	_state& (0+255),b
  2446                           
  2447                           ;main.c: 154:                     mix_counter = 0;
  2448  001982  0E00               	movlw	0
  2449  001984  6FAC               	movwf	(_mix_counter+1)& (0+255),b
  2450  001986  0E00               	movlw	0
  2451  001988  6FAB               	movwf	_mix_counter& (0+255),b
  2452  00198A                     
  2453                           ; BSR set to: 1
  2454                           ;main.c: 155:                     init_stepper(&joint_stepper, 0, 0, 1, hex_joint_values
      +                          );
  2455  00198A  0EBF               	movlw	low _joint_stepper
  2456  00198C  6E01               	movwf	init_stepper@stepper_motor^0,c
  2457  00198E  0E01               	movlw	high _joint_stepper
  2458  001990  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  2459  001992  0E00               	movlw	0
  2460  001994  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  2461  001996  0E00               	movlw	0
  2462  001998  6E03               	movwf	init_stepper@current_coil^0,c
  2463  00199A  0E00               	movlw	0
  2464  00199C  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  2465  00199E  0E00               	movlw	0
  2466  0019A0  6E05               	movwf	init_stepper@step_counter^0,c
  2467  0019A2  0E00               	movlw	0
  2468  0019A4  6E08               	movwf	(init_stepper@direction+1)^0,c
  2469  0019A6  0E01               	movlw	1
  2470  0019A8  6E07               	movwf	init_stepper@direction^0,c
  2471  0019AA  0EE7               	movlw	low _hex_joint_values
  2472  0019AC  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  2473  0019AE  0E01               	movlw	high _hex_joint_values
  2474  0019B0  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  2475  0019B2  ECF1  F036         	call	_init_stepper	;wreg free
  2476  0019B6                     
  2477                           ;main.c: 156:                     change_direction(&joint_stepper);
  2478  0019B6  0EBF               	movlw	low _joint_stepper
  2479  0019B8  6E01               	movwf	change_direction@stepper_motor^0,c
  2480  0019BA  0E01               	movlw	high _joint_stepper
  2481  0019BC  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2482  0019BE  EC51  F033         	call	_change_direction	;wreg free
  2483  0019C2                     
  2484                           ;main.c: 157:                     change_direction(&end_effector_stepper);
  2485  0019C2  0EB1               	movlw	low _end_effector_stepper
  2486  0019C4  6E01               	movwf	change_direction@stepper_motor^0,c
  2487  0019C6  0E01               	movlw	high _end_effector_stepper
  2488  0019C8  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2489  0019CA  EC51  F033         	call	_change_direction	;wreg free
  2490  0019CE  EF81  F00A         	goto	l5546
  2491  0019D2                     l5658:
  2492  0019D2  FFFF               	dw	65535	; assembler added errata NOP
  2493                           
  2494                           ; BSR set to: 1
  2495  0019D4  0E06               	movlw	6
  2496  0019D6  19CD               	xorwf	_state& (0+255),w,b
  2497  0019D8  11CE               	iorwf	(_state+1)& (0+255),w,b
  2498  0019DA  A4D8               	btfss	status,2,c
  2499  0019DC  EFF2  F00C         	goto	u7071
  2500  0019E0  EFF5  F00C         	goto	u7070
  2501  0019E4                     u7071:
  2502  0019E4  FFFF               	dw	65535	; assembler added errata NOP
  2503  0019E6  EF76  F00D         	goto	l5680
  2504  0019EA                     u7070:
  2505  0019EA  FFFF               	dw	65535	; assembler added errata NOP
  2506  0019EC                     
  2507                           ; BSR set to: 1
  2508                           ;main.c: 160:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  2509  0019EC  0E03               	movlw	3
  2510  0019EE  0100               	movlb	0	; () banked
  2511  0019F0  6FDD               	movwf	??_main& (0+255),b
  2512  0019F2  0EEB               	movlw	235
  2513  0019F4                     u7237:
  2514  0019F4  FFFF               	dw	65535	; errata NOP
  2515  0019F6  2EE8               	decfsz	wreg,f,c
  2516  0019F8  D7FD               	bra	u7237
  2517  0019FA  2FDD               	decfsz	??_main& (0+255),f,b
  2518  0019FC  D7FB               	bra	u7237
  2519  0019FE  D000               	nop2	
  2520  001A00  F000               	nop	
  2521  001A02                     
  2522                           ;main.c: 162:                 if (!end_effector_homed && reach_goal(&end_effector_steppe
      +                          r, 100)){
  2523  001A02  0101               	movlb	1	; () banked
  2524  001A04  51A7               	movf	_end_effector_homed& (0+255),w,b
  2525  001A06  11A8               	iorwf	(_end_effector_homed+1)& (0+255),w,b
  2526  001A08  A4D8               	btfss	status,2,c
  2527  001A0A  EF09  F00D         	goto	u7081
  2528  001A0E  EF0C  F00D         	goto	u7080
  2529  001A12                     u7081:
  2530  001A12  FFFF               	dw	65535	; assembler added errata NOP
  2531  001A14  EF27  F00D         	goto	l5668
  2532  001A18                     u7080:
  2533  001A18  FFFF               	dw	65535	; assembler added errata NOP
  2534  001A1A                     
  2535                           ; BSR set to: 1
  2536  001A1A  0EB1               	movlw	low _end_effector_stepper
  2537  001A1C  6E07               	movwf	reach_goal@stepper_motor^0,c
  2538  001A1E  0E01               	movlw	high _end_effector_stepper
  2539  001A20  6E08               	movwf	(reach_goal@stepper_motor+1)^0,c
  2540  001A22  0E00               	movlw	0
  2541  001A24  6E0A               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2542  001A26  0E64               	movlw	100
  2543  001A28  6E09               	movwf	reach_goal@goal_to_reach^0,c
  2544  001A2A  EC32  F036         	call	_reach_goal	;wreg free
  2545  001A2E  5007               	movf	?_reach_goal^0,w,c
  2546  001A30  1008               	iorwf	(?_reach_goal+1)^0,w,c
  2547  001A32  B4D8               	btfsc	status,2,c
  2548  001A34  EF1E  F00D         	goto	u7091
  2549  001A38  EF21  F00D         	goto	u7090
  2550  001A3C                     u7091:
  2551  001A3C  FFFF               	dw	65535	; assembler added errata NOP
  2552  001A3E  EF27  F00D         	goto	l5668
  2553  001A42                     u7090:
  2554  001A42  FFFF               	dw	65535	; assembler added errata NOP
  2555  001A44                     
  2556                           ;main.c: 163:                     end_effector_homed = 1;
  2557  001A44  0E00               	movlw	0
  2558  001A46  0101               	movlb	1	; () banked
  2559  001A48  6FA8               	movwf	(_end_effector_homed+1)& (0+255),b
  2560  001A4A  0E01               	movlw	1
  2561  001A4C  6FA7               	movwf	_end_effector_homed& (0+255),b
  2562  001A4E                     l5668:
  2563  001A4E  FFFF               	dw	65535	; assembler added errata NOP
  2564                           
  2565                           ;main.c: 166:                 if (end_effector_homed && !joint_homed && reach_goal(&join
      +                          t_stepper, 50)){
  2566  001A50  0101               	movlb	1	; () banked
  2567  001A52  51A7               	movf	_end_effector_homed& (0+255),w,b
  2568  001A54  11A8               	iorwf	(_end_effector_homed+1)& (0+255),w,b
  2569  001A56  B4D8               	btfsc	status,2,c
  2570  001A58  EF30  F00D         	goto	u7101
  2571  001A5C  EF33  F00D         	goto	u7100
  2572  001A60                     u7101:
  2573  001A60  FFFF               	dw	65535	; assembler added errata NOP
  2574  001A62  EF59  F00D         	goto	l5676
  2575  001A66                     u7100:
  2576  001A66  FFFF               	dw	65535	; assembler added errata NOP
  2577  001A68                     
  2578                           ; BSR set to: 1
  2579  001A68  51A9               	movf	_joint_homed& (0+255),w,b
  2580  001A6A  11AA               	iorwf	(_joint_homed+1)& (0+255),w,b
  2581  001A6C  A4D8               	btfss	status,2,c
  2582  001A6E  EF3B  F00D         	goto	u7111
  2583  001A72  EF3E  F00D         	goto	u7110
  2584  001A76                     u7111:
  2585  001A76  FFFF               	dw	65535	; assembler added errata NOP
  2586  001A78  EF59  F00D         	goto	l5676
  2587  001A7C                     u7110:
  2588  001A7C  FFFF               	dw	65535	; assembler added errata NOP
  2589  001A7E                     
  2590                           ; BSR set to: 1
  2591  001A7E  0EBF               	movlw	low _joint_stepper
  2592  001A80  6E07               	movwf	reach_goal@stepper_motor^0,c
  2593  001A82  0E01               	movlw	high _joint_stepper
  2594  001A84  6E08               	movwf	(reach_goal@stepper_motor+1)^0,c
  2595  001A86  0E00               	movlw	0
  2596  001A88  6E0A               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2597  001A8A  0E32               	movlw	50
  2598  001A8C  6E09               	movwf	reach_goal@goal_to_reach^0,c
  2599  001A8E  EC32  F036         	call	_reach_goal	;wreg free
  2600  001A92  5007               	movf	?_reach_goal^0,w,c
  2601  001A94  1008               	iorwf	(?_reach_goal+1)^0,w,c
  2602  001A96  B4D8               	btfsc	status,2,c
  2603  001A98  EF50  F00D         	goto	u7121
  2604  001A9C  EF53  F00D         	goto	u7120
  2605  001AA0                     u7121:
  2606  001AA0  FFFF               	dw	65535	; assembler added errata NOP
  2607  001AA2  EF59  F00D         	goto	l5676
  2608  001AA6                     u7120:
  2609  001AA6  FFFF               	dw	65535	; assembler added errata NOP
  2610  001AA8                     
  2611                           ;main.c: 167:                     joint_homed = 1;
  2612  001AA8  0E00               	movlw	0
  2613  001AAA  0101               	movlb	1	; () banked
  2614  001AAC  6FAA               	movwf	(_joint_homed+1)& (0+255),b
  2615  001AAE  0E01               	movlw	1
  2616  001AB0  6FA9               	movwf	_joint_homed& (0+255),b
  2617  001AB2                     l5676:
  2618  001AB2  FFFF               	dw	65535	; assembler added errata NOP
  2619                           
  2620                           ;main.c: 170:                 if (end_effector_homed * joint_homed){
  2621  001AB4  C1A7  F001         	movff	_end_effector_homed,___wmul@multiplier
  2622  001AB8  C1A8  F002         	movff	_end_effector_homed+1,___wmul@multiplier+1
  2623  001ABC  C1A9  F003         	movff	_joint_homed,___wmul@multiplicand
  2624  001AC0  C1AA  F004         	movff	_joint_homed+1,___wmul@multiplicand+1
  2625  001AC4  EC0C  F033         	call	___wmul	;wreg free
  2626  001AC8  5001               	movf	?___wmul^0,w,c
  2627  001ACA  1002               	iorwf	(?___wmul+1)^0,w,c
  2628  001ACC  B4D8               	btfsc	status,2,c
  2629  001ACE  EF6B  F00D         	goto	u7131
  2630  001AD2  EF6E  F00D         	goto	u7130
  2631  001AD6                     u7131:
  2632  001AD6  FFFF               	dw	65535	; assembler added errata NOP
  2633  001AD8  EF81  F00A         	goto	l5546
  2634  001ADC                     u7130:
  2635  001ADC  FFFF               	dw	65535	; assembler added errata NOP
  2636  001ADE                     
  2637                           ;main.c: 171:                     state = 2;
  2638  001ADE  0E00               	movlw	0
  2639  001AE0  0101               	movlb	1	; () banked
  2640  001AE2  6FCE               	movwf	(_state+1)& (0+255),b
  2641  001AE4  0E02               	movlw	2
  2642  001AE6  6FCD               	movwf	_state& (0+255),b
  2643  001AE8  EF81  F00A         	goto	l5546
  2644  001AEC                     l5680:
  2645  001AEC  FFFF               	dw	65535	; assembler added errata NOP
  2646                           
  2647                           ; BSR set to: 1
  2648  001AEE  0E07               	movlw	7
  2649  001AF0  19CD               	xorwf	_state& (0+255),w,b
  2650  001AF2  11CE               	iorwf	(_state+1)& (0+255),w,b
  2651  001AF4  A4D8               	btfss	status,2,c
  2652  001AF6  EF7F  F00D         	goto	u7141
  2653  001AFA  EF82  F00D         	goto	u7140
  2654  001AFE                     u7141:
  2655  001AFE  FFFF               	dw	65535	; assembler added errata NOP
  2656  001B00  EF59  F00B         	goto	l143
  2657  001B04                     u7140:
  2658  001B04  FFFF               	dw	65535	; assembler added errata NOP
  2659  001B06                     
  2660                           ; BSR set to: 1
  2661                           ;main.c: 174:                 if (timer_done){
  2662  001B06  51AD               	movf	_timer_done& (0+255),w,b
  2663  001B08  B4D8               	btfsc	status,2,c
  2664  001B0A  EF89  F00D         	goto	u7151
  2665  001B0E  EF8C  F00D         	goto	u7150
  2666  001B12                     u7151:
  2667  001B12  FFFF               	dw	65535	; assembler added errata NOP
  2668  001B14  EFA6  F00D         	goto	l169
  2669  001B18                     u7150:
  2670  001B18  FFFF               	dw	65535	; assembler added errata NOP
  2671  001B1A                     
  2672                           ; BSR set to: 1
  2673                           ;main.c: 175:                     state_changed = 1;
  2674  001B1A  0E01               	movlw	1
  2675  001B1C  6FB0               	movwf	_state_changed& (0+255),b
  2676  001B1E                     
  2677                           ; BSR set to: 1
  2678                           ;main.c: 176:                     serial_tx_char(state_translator_micro_to_fpga(&state))
      +                          ;
  2679  001B1E  0ECD               	movlw	low _state
  2680  001B20  6E01               	movwf	state_translator_micro_to_fpga@state^0,c
  2681  001B22  0E01               	movlw	high _state
  2682  001B24  6E02               	movwf	(state_translator_micro_to_fpga@state+1)^0,c
  2683  001B26  EC3C  F03B         	call	_state_translator_micro_to_fpga	;wreg free
  2684  001B2A  EC8B  F032         	call	_serial_tx_char
  2685  001B2E                     
  2686                           ;main.c: 177:                     state = 2;
  2687  001B2E  0E00               	movlw	0
  2688  001B30  0101               	movlb	1	; () banked
  2689  001B32  6FCE               	movwf	(_state+1)& (0+255),b
  2690  001B34  0E02               	movlw	2
  2691  001B36  6FCD               	movwf	_state& (0+255),b
  2692  001B38                     
  2693                           ; BSR set to: 1
  2694                           ;main.c: 178:                     move_to_trash = 1;
  2695  001B38  0E00               	movlw	0
  2696  001B3A  6FA4               	movwf	(_move_to_trash+1)& (0+255),b
  2697  001B3C  0E01               	movlw	1
  2698  001B3E  6FA3               	movwf	_move_to_trash& (0+255),b
  2699  001B40                     
  2700                           ; BSR set to: 1
  2701                           ;main.c: 179:                     trash_counter = 0;
  2702  001B40  0E00               	movlw	0
  2703  001B42  6FA6               	movwf	(_trash_counter+1)& (0+255),b
  2704  001B44  0E00               	movlw	0
  2705  001B46  6FA5               	movwf	_trash_counter& (0+255),b
  2706                           
  2707                           ;main.c: 180:                 } else {
  2708  001B48  EF81  F00A         	goto	l5546
  2709  001B4C                     l169:
  2710  001B4C  FFFF               	dw	65535	; assembler added errata NOP
  2711                           
  2712                           ; BSR set to: 1
  2713                           ;main.c: 181:                     if (T0CONbits.TMR0ON == 0){
  2714  001B4E  BED5               	btfsc	213,7,c	;volatile
  2715  001B50  EFAC  F00D         	goto	u7161
  2716  001B54  EFAF  F00D         	goto	u7160
  2717  001B58                     u7161:
  2718  001B58  FFFF               	dw	65535	; assembler added errata NOP
  2719  001B5A  EF59  F00B         	goto	l143
  2720  001B5E                     u7160:
  2721  001B5E  FFFF               	dw	65535	; assembler added errata NOP
  2722  001B60                     
  2723                           ; BSR set to: 1
  2724                           ;main.c: 182:                         init_timer_0();
  2725  001B60  ECAB  F032         	call	_init_timer_0	;wreg free
  2726  001B64  EF81  F00A         	goto	l5546
  2727  001B68  EF3B  F000         	goto	start
  2728  001B6C                     __end_of_main:
  2729                           	callstack 0
  2730                           
  2731 ;; *************** function _wait_for_zero *****************
  2732 ;; Defined at:
  2733 ;;		line 28 in file "oven.c"
  2734 ;; Parameters:    Size  Location     Type
  2735 ;;		None
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;		None
  2738 ;; Return value:  Size  Location     Type
  2739 ;;                  1    wreg      void 
  2740 ;; Registers used:
  2741 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2742 ;; Tracked objects:
  2743 ;;		On entry : 0/0
  2744 ;;		On exit  : 0/0
  2745 ;;		Unchanged: 0/0
  2746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2747 ;;      Params:         0       0       0       0       0       0       0
  2748 ;;      Locals:         0       0       0       0       0       0       0
  2749 ;;      Temps:          0       0       0       0       0       0       0
  2750 ;;      Totals:         0       0       0       0       0       0       0
  2751 ;;Total ram usage:        0 bytes
  2752 ;; Hardware stack levels used:    1
  2753 ;; Hardware stack levels required when called:    3
  2754 ;; This function calls:
  2755 ;;		_get_temperature
  2756 ;; This function is called by:
  2757 ;;		_main
  2758 ;; This function uses a non-reentrant model
  2759 ;;
  2760                           
  2761                           	psect	text1
  2762  003FD8                     __ptext1:
  2763                           	callstack 0
  2764  003FD8                     _wait_for_zero:
  2765                           	callstack 0
  2766  003FD8  FFFF               	dw	65535	; assembler added errata NOP
  2767  003FDA                     l376:
  2768  003FDA  FFFF               	dw	65535	; assembler added errata NOP
  2769  003FDC                     
  2770                           ;oven.c: 30:         if (get_temperature() == -55){
  2771  003FDC  ECF9  F035         	call	_get_temperature	;wreg free
  2772  003FE0  0EC9               	movlw	201
  2773  003FE2  0100               	movlb	0	; () banked
  2774  003FE4  19D4               	xorwf	?_get_temperature& (0+255),w,b
  2775  003FE6  E106               	bnz	u6751
  2776  003FE8  29D5               	incf	(?_get_temperature+1)& (0+255),w,b
  2777  003FEA  A4D8               	btfss	status,2,c
  2778  003FEC  EFFA  F01F         	goto	u6751
  2779  003FF0  EFFD  F01F         	goto	u6750
  2780  003FF4                     u6751:
  2781  003FF4  FFFF               	dw	65535	; assembler added errata NOP
  2782  003FF6  EFED  F01F         	goto	l376
  2783  003FFA                     u6750:
  2784  003FFA  FFFF               	dw	65535	; assembler added errata NOP
  2785  003FFC                     
  2786                           ; BSR set to: 0
  2787  003FFC  0012               	return		;funcret
  2788  003FFE  FFFF               	dw	65535	; errata NOP
  2789  004000                     __end_of_wait_for_zero:
  2790                           	callstack 0
  2791                           
  2792 ;; *************** function _get_temperature *****************
  2793 ;; Defined at:
  2794 ;;		line 22 in file "oven.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;		None
  2797 ;; Auto vars:     Size  Location     Type
  2798 ;;		None
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  2   28[BANK0 ] int 
  2801 ;; Registers used:
  2802 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2808 ;;      Params:         0       2       0       0       0       0       0
  2809 ;;      Locals:         0       0       0       0       0       0       0
  2810 ;;      Temps:          0       0       0       0       0       0       0
  2811 ;;      Totals:         0       2       0       0       0       0       0
  2812 ;;Total ram usage:        2 bytes
  2813 ;; Hardware stack levels used:    1
  2814 ;; Hardware stack levels required when called:    2
  2815 ;; This function calls:
  2816 ;;		___flmul
  2817 ;;		___fltol
  2818 ;;		___xxtofl
  2819 ;; This function is called by:
  2820 ;;		_main
  2821 ;;		_wait_for_zero
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825                           	psect	text2
  2826  006BF2                     __ptext2:
  2827                           	callstack 0
  2828  006BF2                     _get_temperature:
  2829                           	callstack 0
  2830  006BF2  FFFF               	dw	65535	; assembler added errata NOP
  2831  006BF4                     
  2832                           ;oven.c: 23:     ADCON0bits.GO = 1;
  2833  006BF4  84C2               	bsf	194,2,c	;volatile
  2834  006BF6                     l370:
  2835  006BF6  FFFF               	dw	65535	; assembler added errata NOP
  2836  006BF8  B4C2               	btfsc	194,2,c	;volatile
  2837  006BFA  EF01  F036         	goto	u6411
  2838  006BFE  EF04  F036         	goto	u6410
  2839  006C02                     u6411:
  2840  006C02  FFFF               	dw	65535	; assembler added errata NOP
  2841  006C04  EFFB  F035         	goto	l370
  2842  006C08                     u6410:
  2843  006C08  FFFF               	dw	65535	; assembler added errata NOP
  2844  006C0A                     
  2845                           ;oven.c: 25:     return (int) (ADRESH * 0.25) + -55;
  2846  006C0A  0E00               	movlw	0
  2847  006C0C  6E31               	movwf	___flmul@a^0,c
  2848  006C0E  0E00               	movlw	0
  2849  006C10  6E32               	movwf	(___flmul@a+1)^0,c
  2850  006C12  0E80               	movlw	128
  2851  006C14  6E33               	movwf	(___flmul@a+2)^0,c
  2852  006C16  0E3E               	movlw	62
  2853  006C18  6E34               	movwf	(___flmul@a+3)^0,c
  2854  006C1A  50C4               	movf	196,w,c	;volatile
  2855  006C1C  6E1F               	movwf	___xxtofl@val^0,c
  2856  006C1E  6A20               	clrf	(___xxtofl@val+1)^0,c
  2857  006C20  6A21               	clrf	(___xxtofl@val+2)^0,c
  2858  006C22  6A22               	clrf	(___xxtofl@val+3)^0,c
  2859  006C24  0E01               	movlw	1
  2860  006C26  EC45  F01C         	call	___xxtofl
  2861  006C2A  C01F  F02D         	movff	?___xxtofl,___flmul@b
  2862  006C2E  C020  F02E         	movff	?___xxtofl+1,___flmul@b+1
  2863  006C32  C021  F02F         	movff	?___xxtofl+2,___flmul@b+2
  2864  006C36  C022  F030         	movff	?___xxtofl+3,___flmul@b+3
  2865  006C3A  EC8A  F010         	call	___flmul	;wreg free
  2866  006C3E  C02D  F0CA         	movff	?___flmul,___fltol@f1
  2867  006C42  C02E  F0CB         	movff	?___flmul+1,___fltol@f1+1
  2868  006C46  C02F  F0CC         	movff	?___flmul+2,___fltol@f1+2
  2869  006C4A  C030  F0CD         	movff	?___flmul+3,___fltol@f1+3
  2870  006C4E  EC59  F03D         	call	___fltol	;wreg free
  2871  006C52  0EC9               	movlw	201
  2872  006C54  0100               	movlb	0	; () banked
  2873  006C56  25CA               	addwf	?___fltol& (0+255),w,b
  2874  006C58  6FD4               	movwf	?_get_temperature& (0+255),b
  2875  006C5A  0EFF               	movlw	255
  2876  006C5C  21CB               	addwfc	(?___fltol+1)& (0+255),w,b
  2877  006C5E  6FD5               	movwf	(?_get_temperature+1)& (0+255),b
  2878  006C60                     
  2879                           ; BSR set to: 0
  2880  006C60  0012               	return		;funcret
  2881  006C62  FFFF               	dw	65535	; errata NOP
  2882  006C64                     __end_of_get_temperature:
  2883                           	callstack 0
  2884                           
  2885 ;; *************** function _state_translator_micro_to_fpga *****************
  2886 ;; Defined at:
  2887 ;;		line 19 in file "utils.c"
  2888 ;; Parameters:    Size  Location     Type
  2889 ;;  state           2    0[COMRAM] PTR int 
  2890 ;;		 -> state(2), 
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;  state_machin    1    4[COMRAM] unsigned char 
  2893 ;; Return value:  Size  Location     Type
  2894 ;;                  1    wreg      unsigned char 
  2895 ;; Registers used:
  2896 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2902 ;;      Params:         2       0       0       0       0       0       0
  2903 ;;      Locals:         1       0       0       0       0       0       0
  2904 ;;      Temps:          2       0       0       0       0       0       0
  2905 ;;      Totals:         5       0       0       0       0       0       0
  2906 ;;Total ram usage:        5 bytes
  2907 ;; Hardware stack levels used:    1
  2908 ;; Hardware stack levels required when called:    1
  2909 ;; This function calls:
  2910 ;;		Nothing
  2911 ;; This function is called by:
  2912 ;;		_main
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916                           	psect	text3
  2917  007678                     __ptext3:
  2918                           	callstack 0
  2919  007678                     _state_translator_micro_to_fpga:
  2920                           	callstack 0
  2921  007678  FFFF               	dw	65535	; assembler added errata NOP
  2922  00767A                     
  2923                           ;utils.c: 20:     unsigned char state_machine_code;;utils.c: 21:     if (*state == 0){
  2924  00767A  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  2925  00767E  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  2926  007682  50DE               	movf	postinc2,w,c
  2927  007684  10DE               	iorwf	postinc2,w,c
  2928  007686  A4D8               	btfss	status,2,c
  2929  007688  EF48  F03B         	goto	u6671
  2930  00768C  EF4B  F03B         	goto	u6670
  2931  007690                     u6671:
  2932  007690  FFFF               	dw	65535	; assembler added errata NOP
  2933  007692  EF50  F03B         	goto	l5428
  2934  007696                     u6670:
  2935  007696  FFFF               	dw	65535	; assembler added errata NOP
  2936  007698                     
  2937                           ;utils.c: 22:         state_machine_code = 0;
  2938  007698  0E00               	movlw	0
  2939  00769A  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  2940                           
  2941                           ;utils.c: 23:     } else if (*state == 1){
  2942  00769C  EFB8  F03B         	goto	l258
  2943  0076A0                     l5428:
  2944  0076A0  FFFF               	dw	65535	; assembler added errata NOP
  2945  0076A2  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  2946  0076A6  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  2947  0076AA  04DE               	decf	postinc2,w,c
  2948  0076AC  10DE               	iorwf	postinc2,w,c
  2949  0076AE  A4D8               	btfss	status,2,c
  2950  0076B0  EF5C  F03B         	goto	u6681
  2951  0076B4  EF5F  F03B         	goto	u6680
  2952  0076B8                     u6681:
  2953  0076B8  FFFF               	dw	65535	; assembler added errata NOP
  2954  0076BA  EF64  F03B         	goto	l5432
  2955  0076BE                     u6680:
  2956  0076BE  FFFF               	dw	65535	; assembler added errata NOP
  2957  0076C0                     
  2958                           ;utils.c: 24:         state_machine_code = 'A';
  2959  0076C0  0E41               	movlw	65
  2960  0076C2  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  2961                           
  2962                           ;utils.c: 25:     } else if (*state == 3){
  2963  0076C4  EFB8  F03B         	goto	l258
  2964  0076C8                     l5432:
  2965  0076C8  FFFF               	dw	65535	; assembler added errata NOP
  2966  0076CA  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  2967  0076CE  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  2968  0076D2  0E03               	movlw	3
  2969  0076D4  18DE               	xorwf	postinc2,w,c
  2970  0076D6  10DE               	iorwf	postinc2,w,c
  2971  0076D8  A4D8               	btfss	status,2,c
  2972  0076DA  EF71  F03B         	goto	u6691
  2973  0076DE  EF74  F03B         	goto	u6690
  2974  0076E2                     u6691:
  2975  0076E2  FFFF               	dw	65535	; assembler added errata NOP
  2976  0076E4  EF79  F03B         	goto	l5436
  2977  0076E8                     u6690:
  2978  0076E8  FFFF               	dw	65535	; assembler added errata NOP
  2979  0076EA                     
  2980                           ;utils.c: 26:         state_machine_code = 'B';
  2981  0076EA  0E42               	movlw	66
  2982  0076EC  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  2983                           
  2984                           ;utils.c: 27:     } else if (*state == 4){
  2985  0076EE  EFB8  F03B         	goto	l258
  2986  0076F2                     l5436:
  2987  0076F2  FFFF               	dw	65535	; assembler added errata NOP
  2988  0076F4  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  2989  0076F8  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  2990  0076FC  0E04               	movlw	4
  2991  0076FE  18DE               	xorwf	postinc2,w,c
  2992  007700  10DE               	iorwf	postinc2,w,c
  2993  007702  A4D8               	btfss	status,2,c
  2994  007704  EF86  F03B         	goto	u6701
  2995  007708  EF89  F03B         	goto	u6700
  2996  00770C                     u6701:
  2997  00770C  FFFF               	dw	65535	; assembler added errata NOP
  2998  00770E  EF8E  F03B         	goto	l5440
  2999  007712                     u6700:
  3000  007712  FFFF               	dw	65535	; assembler added errata NOP
  3001  007714                     
  3002                           ;utils.c: 28:         state_machine_code = 'D';
  3003  007714  0E44               	movlw	68
  3004  007716  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  3005                           
  3006                           ;utils.c: 29:     } else if (*state == 5){
  3007  007718  EFB8  F03B         	goto	l258
  3008  00771C                     l5440:
  3009  00771C  FFFF               	dw	65535	; assembler added errata NOP
  3010  00771E  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  3011  007722  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  3012  007726  0E05               	movlw	5
  3013  007728  18DE               	xorwf	postinc2,w,c
  3014  00772A  10DE               	iorwf	postinc2,w,c
  3015  00772C  A4D8               	btfss	status,2,c
  3016  00772E  EF9B  F03B         	goto	u6711
  3017  007732  EF9E  F03B         	goto	u6710
  3018  007736                     u6711:
  3019  007736  FFFF               	dw	65535	; assembler added errata NOP
  3020  007738  EFA3  F03B         	goto	l5444
  3021  00773C                     u6710:
  3022  00773C  FFFF               	dw	65535	; assembler added errata NOP
  3023  00773E                     
  3024                           ;utils.c: 30:         state_machine_code = '@';
  3025  00773E  0E40               	movlw	64
  3026  007740  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  3027                           
  3028                           ;utils.c: 31:     } else if (*state == 2){
  3029  007742  EFB8  F03B         	goto	l258
  3030  007746                     l5444:
  3031  007746  FFFF               	dw	65535	; assembler added errata NOP
  3032  007748  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  3033  00774C  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  3034  007750  0E02               	movlw	2
  3035  007752  18DE               	xorwf	postinc2,w,c
  3036  007754  10DE               	iorwf	postinc2,w,c
  3037  007756  A4D8               	btfss	status,2,c
  3038  007758  EFB0  F03B         	goto	u6721
  3039  00775C  EFB3  F03B         	goto	u6720
  3040  007760                     u6721:
  3041  007760  FFFF               	dw	65535	; assembler added errata NOP
  3042  007762  EFB8  F03B         	goto	l262
  3043  007766                     u6720:
  3044  007766  FFFF               	dw	65535	; assembler added errata NOP
  3045  007768                     
  3046                           ;utils.c: 32:         state_machine_code = 'H';
  3047  007768  0E48               	movlw	72
  3048  00776A  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  3049  00776C  EFB8  F03B         	goto	l258
  3050  007770                     l262:
  3051  007770                     l258:
  3052  007770  FFFF               	dw	65535	; assembler added errata NOP
  3053                           
  3054                           ;utils.c: 34:     return state_machine_code;
  3055  007772  5005               	movf	state_translator_micro_to_fpga@state_machine_code^0,w,c
  3056  007774  0012               	return		;funcret
  3057  007776  FFFF               	dw	65535	; errata NOP
  3058  007778                     __end_of_state_translator_micro_to_fpga:
  3059                           	callstack 0
  3060                           
  3061 ;; *************** function _state_translator_fpga_to_micro *****************
  3062 ;; Defined at:
  3063 ;;		line 2 in file "utils.c"
  3064 ;; Parameters:    Size  Location     Type
  3065 ;;  state_machin    1    wreg     unsigned char 
  3066 ;;  state           2    2[COMRAM] PTR int 
  3067 ;;		 -> state(2), 
  3068 ;; Auto vars:     Size  Location     Type
  3069 ;;  state_machin    1    4[COMRAM] unsigned char 
  3070 ;; Return value:  Size  Location     Type
  3071 ;;                  1    wreg      void 
  3072 ;; Registers used:
  3073 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3074 ;; Tracked objects:
  3075 ;;		On entry : 0/0
  3076 ;;		On exit  : 0/0
  3077 ;;		Unchanged: 0/0
  3078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3079 ;;      Params:         2       0       0       0       0       0       0
  3080 ;;      Locals:         1       0       0       0       0       0       0
  3081 ;;      Temps:          0       0       0       0       0       0       0
  3082 ;;      Totals:         3       0       0       0       0       0       0
  3083 ;;Total ram usage:        3 bytes
  3084 ;; Hardware stack levels used:    1
  3085 ;; Hardware stack levels required when called:    3
  3086 ;; This function calls:
  3087 ;;		_lcd_dat
  3088 ;; This function is called by:
  3089 ;;		_main
  3090 ;; This function uses a non-reentrant model
  3091 ;;
  3092                           
  3093                           	psect	text4
  3094  00757C                     __ptext4:
  3095                           	callstack 0
  3096  00757C                     _state_translator_fpga_to_micro:
  3097                           	callstack 0
  3098  00757C  FFFF               	dw	65535	; assembler added errata NOP
  3099                           
  3100                           ;incstack = 0
  3101                           ;state_translator_fpga_to_micro@state_machine_code stored from wreg
  3102  00757E  6E05               	movwf	state_translator_fpga_to_micro@state_machine_code^0,c
  3103  007580                     
  3104                           ;utils.c: 3:     lcd_dat(state_machine_code);
  3105  007580  5005               	movf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3106  007582  ECF7  F032         	call	_lcd_dat
  3107  007586                     
  3108                           ;utils.c: 4:     if (state_machine_code == 'A'){
  3109  007586  0E41               	movlw	65
  3110  007588  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3111  00758A  A4D8               	btfss	status,2,c
  3112  00758C  EFCA  F03A         	goto	u6621
  3113  007590  EFCD  F03A         	goto	u6620
  3114  007594                     u6621:
  3115  007594  FFFF               	dw	65535	; assembler added errata NOP
  3116  007596  EFD8  F03A         	goto	l5400
  3117  00759A                     u6620:
  3118  00759A  FFFF               	dw	65535	; assembler added errata NOP
  3119  00759C                     
  3120                           ;utils.c: 5:         *state = 1;
  3121  00759C  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3122  0075A0  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3123  0075A4  0E01               	movlw	1
  3124  0075A6  6EDE               	movwf	postinc2,c
  3125  0075A8  0E00               	movlw	0
  3126  0075AA  6EDD               	movwf	postdec2,c
  3127                           
  3128                           ;utils.c: 6:     } else if (state_machine_code == 'B'){
  3129  0075AC  EF39  F03B         	goto	l254
  3130  0075B0                     l5400:
  3131  0075B0  FFFF               	dw	65535	; assembler added errata NOP
  3132  0075B2  0E42               	movlw	66
  3133  0075B4  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3134  0075B6  A4D8               	btfss	status,2,c
  3135  0075B8  EFE0  F03A         	goto	u6631
  3136  0075BC  EFE3  F03A         	goto	u6630
  3137  0075C0                     u6631:
  3138  0075C0  FFFF               	dw	65535	; assembler added errata NOP
  3139  0075C2  EFEE  F03A         	goto	l5404
  3140  0075C6                     u6630:
  3141  0075C6  FFFF               	dw	65535	; assembler added errata NOP
  3142  0075C8                     
  3143                           ;utils.c: 7:         *state = 3;
  3144  0075C8  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3145  0075CC  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3146  0075D0  0E03               	movlw	3
  3147  0075D2  6EDE               	movwf	postinc2,c
  3148  0075D4  0E00               	movlw	0
  3149  0075D6  6EDD               	movwf	postdec2,c
  3150                           
  3151                           ;utils.c: 8:     } else if (state_machine_code == 'D'){
  3152  0075D8  EF39  F03B         	goto	l254
  3153  0075DC                     l5404:
  3154  0075DC  FFFF               	dw	65535	; assembler added errata NOP
  3155  0075DE  0E44               	movlw	68
  3156  0075E0  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3157  0075E2  A4D8               	btfss	status,2,c
  3158  0075E4  EFF6  F03A         	goto	u6641
  3159  0075E8  EFF9  F03A         	goto	u6640
  3160  0075EC                     u6641:
  3161  0075EC  FFFF               	dw	65535	; assembler added errata NOP
  3162  0075EE  EF04  F03B         	goto	l5408
  3163  0075F2                     u6640:
  3164  0075F2  FFFF               	dw	65535	; assembler added errata NOP
  3165  0075F4                     
  3166                           ;utils.c: 9:         *state = 4;
  3167  0075F4  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3168  0075F8  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3169  0075FC  0E04               	movlw	4
  3170  0075FE  6EDE               	movwf	postinc2,c
  3171  007600  0E00               	movlw	0
  3172  007602  6EDD               	movwf	postdec2,c
  3173                           
  3174                           ;utils.c: 10:     } else if (state_machine_code == '@'){
  3175  007604  EF39  F03B         	goto	l254
  3176  007608                     l5408:
  3177  007608  FFFF               	dw	65535	; assembler added errata NOP
  3178  00760A  0E40               	movlw	64
  3179  00760C  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3180  00760E  A4D8               	btfss	status,2,c
  3181  007610  EF0C  F03B         	goto	u6651
  3182  007614  EF0F  F03B         	goto	u6650
  3183  007618                     u6651:
  3184  007618  FFFF               	dw	65535	; assembler added errata NOP
  3185  00761A  EF1A  F03B         	goto	l5412
  3186  00761E                     u6650:
  3187  00761E  FFFF               	dw	65535	; assembler added errata NOP
  3188  007620                     
  3189                           ;utils.c: 11:         *state = 5;
  3190  007620  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3191  007624  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3192  007628  0E05               	movlw	5
  3193  00762A  6EDE               	movwf	postinc2,c
  3194  00762C  0E00               	movlw	0
  3195  00762E  6EDD               	movwf	postdec2,c
  3196                           
  3197                           ;utils.c: 12:     } else if (state_machine_code == 'H'){
  3198  007630  EF39  F03B         	goto	l254
  3199  007634                     l5412:
  3200  007634  FFFF               	dw	65535	; assembler added errata NOP
  3201  007636  0E48               	movlw	72
  3202  007638  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3203  00763A  A4D8               	btfss	status,2,c
  3204  00763C  EF22  F03B         	goto	u6661
  3205  007640  EF25  F03B         	goto	u6660
  3206  007644                     u6661:
  3207  007644  FFFF               	dw	65535	; assembler added errata NOP
  3208  007646  EF30  F03B         	goto	l5416
  3209  00764A                     u6660:
  3210  00764A  FFFF               	dw	65535	; assembler added errata NOP
  3211  00764C                     
  3212                           ;utils.c: 13:         *state = 2;
  3213  00764C  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3214  007650  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3215  007654  0E02               	movlw	2
  3216  007656  6EDE               	movwf	postinc2,c
  3217  007658  0E00               	movlw	0
  3218  00765A  6EDD               	movwf	postdec2,c
  3219                           
  3220                           ;utils.c: 14:     } else {
  3221  00765C  EF39  F03B         	goto	l254
  3222  007660                     l5416:
  3223  007660  FFFF               	dw	65535	; assembler added errata NOP
  3224                           
  3225                           ;utils.c: 15:         *state = 0;
  3226  007662  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3227  007666  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3228  00766A  0E00               	movlw	0
  3229  00766C  6EDE               	movwf	postinc2,c
  3230  00766E  0E00               	movlw	0
  3231  007670  6EDD               	movwf	postdec2,c
  3232  007672                     l254:
  3233  007672  FFFF               	dw	65535	; assembler added errata NOP
  3234  007674  0012               	return		;funcret
  3235  007676  FFFF               	dw	65535	; errata NOP
  3236  007678                     __end_of_state_translator_fpga_to_micro:
  3237                           	callstack 0
  3238                           
  3239 ;; *************** function _snprintf *****************
  3240 ;; Defined at:
  3241 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\snprintf.c"
  3242 ;; Parameters:    Size  Location     Type
  3243 ;;  s               2   10[BANK0 ] PTR unsigned char 
  3244 ;;		 -> main@greet_str(160), 
  3245 ;;  n               2   12[BANK0 ] unsigned int 
  3246 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  3247 ;;		 -> STR_10(3), 
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;  ap              2   20[BANK0 ] PTR void [1]
  3250 ;;		 -> ?_snprintf(2), 
  3251 ;;  ret             2    0        int 
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  2   10[BANK0 ] int 
  3254 ;; Registers used:
  3255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3261 ;;      Params:         0       8       0       0       0       0       0
  3262 ;;      Locals:         0       4       0       0       0       0       0
  3263 ;;      Temps:          0       0       0       0       0       0       0
  3264 ;;      Totals:         0      12       0       0       0       0       0
  3265 ;;Total ram usage:       12 bytes
  3266 ;; Hardware stack levels used:    1
  3267 ;; Hardware stack levels required when called:    9
  3268 ;; This function calls:
  3269 ;;		_vsnprintf
  3270 ;; This function is called by:
  3271 ;;		_main
  3272 ;; This function uses a non-reentrant model
  3273 ;;
  3274                           
  3275                           	psect	text5
  3276  00666E                     __ptext5:
  3277                           	callstack 0
  3278  00666E                     _snprintf:
  3279                           	callstack 0
  3280  00666E  FFFF               	dw	65535	; assembler added errata NOP
  3281  006670  0EC8               	movlw	low (?_snprintf+6)
  3282  006672  0100               	movlb	0	; () banked
  3283  006674  6FCC               	movwf	snprintf@ap& (0+255),b
  3284  006676  0E00               	movlw	high (?_snprintf+6)
  3285  006678  6FCD               	movwf	(snprintf@ap+1)& (0+255),b
  3286  00667A                     
  3287                           ; BSR set to: 0
  3288  00667A  C0C2  F070         	movff	snprintf@s,vsnprintf@s
  3289  00667E  C0C3  F071         	movff	snprintf@s+1,vsnprintf@s+1
  3290  006682  C0C4  F072         	movff	snprintf@n,vsnprintf@n
  3291  006686  C0C5  F073         	movff	snprintf@n+1,vsnprintf@n+1
  3292  00668A  C0C6  F074         	movff	snprintf@fmt,vsnprintf@fmt
  3293  00668E  C0C7  F075         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  3294  006692  0ECC               	movlw	low snprintf@ap
  3295  006694  6E76               	movwf	vsnprintf@ap^0,c
  3296  006696  0E00               	movlw	high snprintf@ap
  3297  006698  6E77               	movwf	(vsnprintf@ap+1)^0,c
  3298  00669A  ECF5  F03D         	call	_vsnprintf	;wreg free
  3299  00669E  0012               	return		;funcret
  3300  0066A0  FFFF               	dw	65535	; errata NOP
  3301  0066A2                     __end_of_snprintf:
  3302                           	callstack 0
  3303                           
  3304 ;; *************** function _vsnprintf *****************
  3305 ;; Defined at:
  3306 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_vsnprintf.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;  s               2  111[COMRAM] PTR unsigned char 
  3309 ;;		 -> main@greet_str(160), 
  3310 ;;  n               2  113[COMRAM] unsigned int 
  3311 ;;  fmt             2  115[COMRAM] PTR const unsigned char 
  3312 ;;		 -> STR_10(3), 
  3313 ;;  ap              2  117[COMRAM] PTR PTR void 
  3314 ;;		 -> snprintf@ap(2), 
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;  f               6    4[BANK0 ] struct _IO_FILE
  3317 ;;  cnt             2    2[BANK0 ] int 
  3318 ;; Return value:  Size  Location     Type
  3319 ;;                  2  111[COMRAM] int 
  3320 ;; Registers used:
  3321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3322 ;; Tracked objects:
  3323 ;;		On entry : 0/0
  3324 ;;		On exit  : 0/0
  3325 ;;		Unchanged: 0/0
  3326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3327 ;;      Params:         8       0       0       0       0       0       0
  3328 ;;      Locals:         0      10       0       0       0       0       0
  3329 ;;      Temps:          4       0       0       0       0       0       0
  3330 ;;      Totals:        12      10       0       0       0       0       0
  3331 ;;Total ram usage:       22 bytes
  3332 ;; Hardware stack levels used:    1
  3333 ;; Hardware stack levels required when called:    8
  3334 ;; This function calls:
  3335 ;;		_vfprintf
  3336 ;; This function is called by:
  3337 ;;		_snprintf
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340                           
  3341                           	psect	text6
  3342  007BEA                     __ptext6:
  3343                           	callstack 0
  3344  007BEA                     _vsnprintf:
  3345                           	callstack 0
  3346  007BEA  FFFF               	dw	65535	; assembler added errata NOP
  3347  007BEC  0E80               	movlw	128
  3348  007BEE  5C73               	subwf	(vsnprintf@n+1)^0,w,c
  3349  007BF0  A0D8               	btfss	status,0,c
  3350  007BF2  EFFD  F03D         	goto	u6521
  3351  007BF6  EF00  F03E         	goto	u6520
  3352  007BFA                     u6521:
  3353  007BFA  FFFF               	dw	65535	; assembler added errata NOP
  3354  007BFC  EF0A  F03E         	goto	l5246
  3355  007C00                     u6520:
  3356  007C00  FFFF               	dw	65535	; assembler added errata NOP
  3357  007C02  0E00               	movlw	0
  3358  007C04  0100               	movlb	0	; () banked
  3359  007C06  6F8D               	movwf	(_errno+1)& (0+255),b
  3360  007C08  0E4B               	movlw	75
  3361  007C0A  6F8C               	movwf	_errno& (0+255),b
  3362  007C0C                     
  3363                           ; BSR set to: 0
  3364  007C0C  6870               	setf	?_vsnprintf^0,c
  3365  007C0E  6871               	setf	(?_vsnprintf+1)^0,c
  3366  007C10  EF8F  F03E         	goto	l1096
  3367  007C14                     l5246:
  3368  007C14  FFFF               	dw	65535	; assembler added errata NOP
  3369  007C16  C070  F0BC         	movff	vsnprintf@s,vsnprintf@f
  3370  007C1A  C071  F0BD         	movff	vsnprintf@s+1,vsnprintf@f+1
  3371  007C1E  5073               	movf	(vsnprintf@n+1)^0,w,c
  3372  007C20  E10A               	bnz	u6530
  3373  007C22  0E02               	movlw	2
  3374  007C24  5C72               	subwf	vsnprintf@n^0,w,c
  3375  007C26  A0D8               	btfss	status,0,c
  3376  007C28  EF18  F03E         	goto	u6531
  3377  007C2C  EF1B  F03E         	goto	u6530
  3378  007C30                     u6531:
  3379  007C30  FFFF               	dw	65535	; assembler added errata NOP
  3380  007C32  EF29  F03E         	goto	l5252
  3381  007C36                     u6530:
  3382  007C36  FFFF               	dw	65535	; assembler added errata NOP
  3383  007C38  0EFF               	movlw	255
  3384  007C3A  2472               	addwf	vsnprintf@n^0,w,c
  3385  007C3C  0100               	movlb	0	; () banked
  3386  007C3E  6FC0               	movwf	(vsnprintf@f+4)& (0+255),b
  3387  007C40  0EFF               	movlw	255
  3388  007C42  2073               	addwfc	(vsnprintf@n+1)^0,w,c
  3389  007C44  6FC1               	movwf	(vsnprintf@f+5)& (0+255),b
  3390  007C46                     
  3391                           ; BSR set to: 0
  3392  007C46  0E00               	movlw	0
  3393  007C48  6FBF               	movwf	(vsnprintf@f+3)& (0+255),b
  3394  007C4A  0E00               	movlw	0
  3395  007C4C  6FBE               	movwf	(vsnprintf@f+2)& (0+255),b
  3396  007C4E  EF33  F03E         	goto	l5254
  3397  007C52                     l5252:
  3398  007C52  FFFF               	dw	65535	; assembler added errata NOP
  3399  007C54  0E00               	movlw	0
  3400  007C56  0100               	movlb	0	; () banked
  3401  007C58  6FC1               	movwf	(vsnprintf@f+5)& (0+255),b
  3402  007C5A  0E01               	movlw	1
  3403  007C5C  6FC0               	movwf	(vsnprintf@f+4)& (0+255),b
  3404  007C5E  0E00               	movlw	0
  3405  007C60  6FBF               	movwf	(vsnprintf@f+3)& (0+255),b
  3406  007C62  0E01               	movlw	1
  3407  007C64  6FBE               	movwf	(vsnprintf@f+2)& (0+255),b
  3408  007C66                     l5254:
  3409  007C66  FFFF               	dw	65535	; assembler added errata NOP
  3410                           
  3411                           ; BSR set to: 0
  3412  007C68  0EBC               	movlw	low vsnprintf@f
  3413  007C6A  6E68               	movwf	vfprintf@fp^0,c
  3414  007C6C  0E00               	movlw	high vsnprintf@f
  3415  007C6E  6E69               	movwf	(vfprintf@fp+1)^0,c
  3416  007C70  C074  F06A         	movff	vsnprintf@fmt,vfprintf@fmt
  3417  007C74  C075  F06B         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  3418  007C78  C076  F06C         	movff	vsnprintf@ap,vfprintf@ap
  3419  007C7C  C077  F06D         	movff	vsnprintf@ap+1,vfprintf@ap+1
  3420  007C80  ECC1  F035         	call	_vfprintf	;wreg free
  3421  007C84  C068  F0BA         	movff	?_vfprintf,vsnprintf@cnt
  3422  007C88  C069  F0BB         	movff	?_vfprintf+1,vsnprintf@cnt+1
  3423  007C8C  5072               	movf	vsnprintf@n^0,w,c
  3424  007C8E  1073               	iorwf	(vsnprintf@n+1)^0,w,c
  3425  007C90  B4D8               	btfsc	status,2,c
  3426  007C92  EF4D  F03E         	goto	u6541
  3427  007C96  EF50  F03E         	goto	u6540
  3428  007C9A                     u6541:
  3429  007C9A  FFFF               	dw	65535	; assembler added errata NOP
  3430  007C9C  EF8A  F03E         	goto	l5266
  3431  007CA0                     u6540:
  3432  007CA0  FFFF               	dw	65535	; assembler added errata NOP
  3433  007CA2  0100               	movlb	0	; () banked
  3434  007CA4  BFBB               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  3435  007CA6  EF57  F03E         	goto	u6551
  3436  007CAA  EF5A  F03E         	goto	u6550
  3437  007CAE                     u6551:
  3438  007CAE  FFFF               	dw	65535	; assembler added errata NOP
  3439  007CB0  EF8A  F03E         	goto	l5266
  3440  007CB4                     u6550:
  3441  007CB4  FFFF               	dw	65535	; assembler added errata NOP
  3442  007CB6                     
  3443                           ; BSR set to: 0
  3444  007CB6  0EFF               	movlw	255
  3445  007CB8  6E78               	movwf	??_vsnprintf^0,c
  3446  007CBA  0EFF               	movlw	255
  3447  007CBC  6E79               	movwf	(??_vsnprintf+1)^0,c
  3448  007CBE  C072  F07A         	movff	vsnprintf@n,??_vsnprintf+2
  3449  007CC2  C073  F07B         	movff	vsnprintf@n+1,??_vsnprintf+3
  3450  007CC6  5078               	movf	??_vsnprintf^0,w,c
  3451  007CC8  267A               	addwf	(??_vsnprintf+2)^0,f,c
  3452  007CCA  5079               	movf	(??_vsnprintf+1)^0,w,c
  3453  007CCC  227B               	addwfc	(??_vsnprintf+3)^0,f,c
  3454  007CCE  507A               	movf	(??_vsnprintf+2)^0,w,c
  3455  007CD0  5DBA               	subwf	vsnprintf@cnt& (0+255),w,b
  3456  007CD2  507B               	movf	(??_vsnprintf+3)^0,w,c
  3457  007CD4  59BB               	subwfb	(vsnprintf@cnt+1)& (0+255),w,b
  3458  007CD6  A0D8               	btfss	status,0,c
  3459  007CD8  EF70  F03E         	goto	u6561
  3460  007CDC  EF73  F03E         	goto	u6560
  3461  007CE0                     u6561:
  3462  007CE0  FFFF               	dw	65535	; assembler added errata NOP
  3463  007CE2  EF7C  F03E         	goto	l1101
  3464  007CE6                     u6560:
  3465  007CE6  FFFF               	dw	65535	; assembler added errata NOP
  3466  007CE8                     
  3467                           ; BSR set to: 0
  3468  007CE8  0EFF               	movlw	255
  3469  007CEA  2472               	addwf	vsnprintf@n^0,w,c
  3470  007CEC  6FB8               	movwf	_vsnprintf$1552& (0+255),b
  3471  007CEE  0EFF               	movlw	255
  3472  007CF0  2073               	addwfc	(vsnprintf@n+1)^0,w,c
  3473  007CF2  6FB9               	movwf	(_vsnprintf$1552+1)& (0+255),b
  3474  007CF4  EF81  F03E         	goto	l5264
  3475  007CF8                     l1101:
  3476  007CF8  FFFF               	dw	65535	; assembler added errata NOP
  3477                           
  3478                           ; BSR set to: 0
  3479  007CFA  C0BA  F0B8         	movff	vsnprintf@cnt,_vsnprintf$1552
  3480  007CFE  C0BB  F0B9         	movff	vsnprintf@cnt+1,_vsnprintf$1552+1
  3481  007D02                     l5264:
  3482  007D02  FFFF               	dw	65535	; assembler added errata NOP
  3483                           
  3484                           ; BSR set to: 0
  3485  007D04  51B8               	movf	_vsnprintf$1552& (0+255),w,b
  3486  007D06  2470               	addwf	vsnprintf@s^0,w,c
  3487  007D08  6ED9               	movwf	fsr2l,c
  3488  007D0A  51B9               	movf	(_vsnprintf$1552+1)& (0+255),w,b
  3489  007D0C  2071               	addwfc	(vsnprintf@s+1)^0,w,c
  3490  007D0E  6EDA               	movwf	fsr2h,c
  3491  007D10  0E00               	movlw	0
  3492  007D12  6EDF               	movwf	indf2,c
  3493  007D14                     l5266:
  3494  007D14  FFFF               	dw	65535	; assembler added errata NOP
  3495  007D16  C0BA  F070         	movff	vsnprintf@cnt,?_vsnprintf
  3496  007D1A  C0BB  F071         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  3497  007D1E                     l1096:
  3498  007D1E  FFFF               	dw	65535	; assembler added errata NOP
  3499  007D20  0012               	return		;funcret
  3500  007D22  FFFF               	dw	65535	; errata NOP
  3501  007D24                     __end_of_vsnprintf:
  3502                           	callstack 0
  3503                           
  3504 ;; *************** function _vfprintf *****************
  3505 ;; Defined at:
  3506 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3507 ;; Parameters:    Size  Location     Type
  3508 ;;  fp              2  103[COMRAM] PTR struct _IO_FILE
  3509 ;;		 -> vsnprintf@f(6), 
  3510 ;;  fmt             2  105[COMRAM] PTR const unsigned char 
  3511 ;;		 -> STR_10(3), 
  3512 ;;  ap              2  107[COMRAM] PTR PTR void 
  3513 ;;		 -> snprintf@ap(2), 
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;  cfmt            2  109[COMRAM] PTR unsigned char 
  3516 ;;		 -> STR_10(3), 
  3517 ;; Return value:  Size  Location     Type
  3518 ;;                  2  103[COMRAM] int 
  3519 ;; Registers used:
  3520 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3521 ;; Tracked objects:
  3522 ;;		On entry : 0/0
  3523 ;;		On exit  : 0/0
  3524 ;;		Unchanged: 0/0
  3525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3526 ;;      Params:         6       0       0       0       0       0       0
  3527 ;;      Locals:         2       0       0       0       0       0       0
  3528 ;;      Temps:          0       0       0       0       0       0       0
  3529 ;;      Totals:         8       0       0       0       0       0       0
  3530 ;;Total ram usage:        8 bytes
  3531 ;; Hardware stack levels used:    1
  3532 ;; Hardware stack levels required when called:    7
  3533 ;; This function calls:
  3534 ;;		_vfpfcnvrt
  3535 ;; This function is called by:
  3536 ;;		_vsnprintf
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           	psect	text7
  3541  006B82                     __ptext7:
  3542                           	callstack 0
  3543  006B82                     _vfprintf:
  3544                           	callstack 0
  3545  006B82  FFFF               	dw	65535	; assembler added errata NOP
  3546  006B84                     
  3547                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3548  006B84  C06A  F06E         	movff	vfprintf@fmt,vfprintf@cfmt
  3549  006B88  C06B  F06F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3550  006B8C                     
  3551                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  3552  006B8C  0E00               	movlw	0
  3553  006B8E  0100               	movlb	0	; () banked
  3554  006B90  6F85               	movwf	(_nout+1)& (0+255),b
  3555  006B92  0E00               	movlw	0
  3556  006B94  6F84               	movwf	_nout& (0+255),b
  3557                           
  3558                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  3559  006B96  EFE1  F035         	goto	l5092
  3560  006B9A                     l5090:
  3561  006B9A  FFFF               	dw	65535	; assembler added errata NOP
  3562                           
  3563                           ; BSR set to: 0
  3564                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3565  006B9C  C068  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  3566  006BA0  C069  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3567  006BA4  0E6E               	movlw	low vfprintf@cfmt
  3568  006BA6  6E45               	movwf	vfpfcnvrt@fmt^0,c
  3569  006BA8  0E00               	movlw	high vfprintf@cfmt
  3570  006BAA  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3571  006BAC  C06C  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  3572  006BB0  C06D  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3573  006BB4  EC3D  F000         	call	_vfpfcnvrt	;wreg free
  3574  006BB8  5043               	movf	?_vfpfcnvrt^0,w,c
  3575  006BBA  0100               	movlb	0	; () banked
  3576  006BBC  2784               	addwf	_nout& (0+255),f,b
  3577  006BBE  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  3578  006BC0  2385               	addwfc	(_nout+1)& (0+255),f,b
  3579  006BC2                     l5092:
  3580  006BC2  FFFF               	dw	65535	; assembler added errata NOP
  3581                           
  3582                           ; BSR set to: 0
  3583                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  3584  006BC4  C06E  FFF6         	movff	vfprintf@cfmt,tblptrl
  3585  006BC8  C06F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3586  006BCC                     	if	0	;tblptru may be non-zero
  3587  006BCC                     	endif
  3588  006BCC                     	if	0	;tblptru may be non-zero
  3589  006BCC                     	endif
  3590  006BCC  0008               	tblrd		*
  3591  006BCE  FFFF               	dw	65535	; errata NOP
  3592  006BD0  50F5               	movf	tablat,w,c
  3593  006BD2  0900               	iorlw	0
  3594  006BD4  A4D8               	btfss	status,2,c
  3595  006BD6  EFEF  F035         	goto	u6311
  3596  006BDA  EFF2  F035         	goto	u6310
  3597  006BDE                     u6311:
  3598  006BDE  FFFF               	dw	65535	; assembler added errata NOP
  3599  006BE0  EFCD  F035         	goto	l5090
  3600  006BE4                     u6310:
  3601  006BE4  FFFF               	dw	65535	; assembler added errata NOP
  3602  006BE6                     
  3603                           ; BSR set to: 0
  3604                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  3605  006BE6  C084  F068         	movff	_nout,?_vfprintf
  3606  006BEA  C085  F069         	movff	_nout+1,?_vfprintf+1
  3607  006BEE                     
  3608                           ; BSR set to: 0
  3609  006BEE  0012               	return		;funcret
  3610  006BF0  FFFF               	dw	65535	; errata NOP
  3611  006BF2                     __end_of_vfprintf:
  3612                           	callstack 0
  3613                           
  3614 ;; *************** function _vfpfcnvrt *****************
  3615 ;; Defined at:
  3616 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3617 ;; Parameters:    Size  Location     Type
  3618 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  3619 ;;		 -> vsnprintf@f(6), 
  3620 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  3621 ;;		 -> vfprintf@cfmt(2), 
  3622 ;;  ap              2   70[COMRAM] PTR PTR void 
  3623 ;;		 -> snprintf@ap(2), 
  3624 ;; Auto vars:     Size  Location     Type
  3625 ;;  llu             8   95[COMRAM] unsigned long long 
  3626 ;;  ll              8   84[COMRAM] long long 
  3627 ;;  f               4    0        long long 
  3628 ;;  ct              3    0        unsigned char [3]
  3629 ;;  vp              2   92[COMRAM] PTR void 
  3630 ;;		 -> ?_snprintf(2), STR_8(50), STR_7(9), STR_6(7), 
  3631 ;;		 -> STR_5(9), STR_4(39), STR_3(9), STR_2(64), 
  3632 ;;		 -> STR_1(49), 
  3633 ;;  done            2   78[COMRAM] int 
  3634 ;;  cp              2   76[COMRAM] PTR unsigned char 
  3635 ;;		 -> ?_snprintf(2), STR_8(50), STR_7(9), STR_6(7), 
  3636 ;;		 -> STR_5(9), STR_4(39), STR_3(9), STR_2(64), 
  3637 ;;		 -> STR_1(49), 
  3638 ;;  i               2    0        int 
  3639 ;;  c               1   94[COMRAM] unsigned char 
  3640 ;; Return value:  Size  Location     Type
  3641 ;;                  2   66[COMRAM] int 
  3642 ;; Registers used:
  3643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3649 ;;      Params:         6       0       0       0       0       0       0
  3650 ;;      Locals:        27       0       0       0       0       0       0
  3651 ;;      Temps:          4       0       0       0       0       0       0
  3652 ;;      Totals:        37       0       0       0       0       0       0
  3653 ;;Total ram usage:       37 bytes
  3654 ;; Hardware stack levels used:    1
  3655 ;; Hardware stack levels required when called:    6
  3656 ;; This function calls:
  3657 ;;		_atoi
  3658 ;;		_ctoa
  3659 ;;		_dtoa
  3660 ;;		_fputc
  3661 ;;		_isdigit
  3662 ;;		_otoa
  3663 ;;		_stoa
  3664 ;;		_strncmp
  3665 ;;		_utoa
  3666 ;;		_xtoa
  3667 ;; This function is called by:
  3668 ;;		_vfprintf
  3669 ;; This function uses a non-reentrant model
  3670 ;;
  3671                           
  3672                           	psect	text8
  3673  00007A                     __ptext8:
  3674                           	callstack 0
  3675  00007A                     _vfpfcnvrt:
  3676                           	callstack 0
  3677  00007A  FFFF               	dw	65535	; assembler added errata NOP
  3678  00007C                     
  3679                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  3680  00007C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3681  000080  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3682  000084  CFDE FFF6          	movff	postinc2,tblptrl
  3683  000088  CFDD FFF7          	movff	postdec2,tblptrh
  3684  00008C                     	if	0	;tblptru may be non-zero
  3685  00008C                     	endif
  3686  00008C                     	if	0	;tblptru may be non-zero
  3687  00008C                     	endif
  3688  00008C  0008               	tblrd		*
  3689  00008E  FFFF               	dw	65535	; errata NOP
  3690  000090  50F5               	movf	tablat,w,c
  3691  000092  0A25               	xorlw	37
  3692  000094  A4D8               	btfss	status,2,c
  3693  000096  EF4F  F000         	goto	u5171
  3694  00009A  EF52  F000         	goto	u5170
  3695  00009E                     u5171:
  3696  00009E  FFFF               	dw	65535	; assembler added errata NOP
  3697  0000A0  EF11  F00A         	goto	l4676
  3698  0000A4                     u5170:
  3699  0000A4  FFFF               	dw	65535	; assembler added errata NOP
  3700  0000A6                     
  3701                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  3702  0000A6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3703  0000AA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3704  0000AE  2ADE               	incf	postinc2,f,c
  3705  0000B0  0E00               	movlw	0
  3706  0000B2  22DD               	addwfc	postdec2,f,c
  3707  0000B4                     
  3708                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  3709  0000B4  0E00               	movlw	0
  3710  0000B6  0100               	movlb	0	; () banked
  3711  0000B8  6F87               	movwf	(_width+1)& (0+255),b
  3712  0000BA  0E00               	movlw	0
  3713  0000BC  6F86               	movwf	_width& (0+255),b
  3714  0000BE  C086  F08A         	movff	_width,_flags
  3715  0000C2  C087  F08B         	movff	_width+1,_flags+1
  3716  0000C6                     
  3717                           ; BSR set to: 0
  3718                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  3719  0000C6  6988               	setf	_prec& (0+255),b
  3720  0000C8  6989               	setf	(_prec+1)& (0+255),b
  3721  0000CA                     
  3722                           ; BSR set to: 0
  3723                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 688:         done
      +                           = 0;
  3724  0000CA  0E00               	movlw	0
  3725  0000CC  6E50               	movwf	(vfpfcnvrt@done+1)^0,c
  3726  0000CE  0E00               	movlw	0
  3727  0000D0  6E4F               	movwf	vfpfcnvrt@done^0,c
  3728                           
  3729                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  3730  0000D2  EFC0  F000         	goto	l4394
  3731  0000D6                     l4368:
  3732  0000D6  FFFF               	dw	65535	; assembler added errata NOP
  3733                           
  3734                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 692:             
      +                                  flags |= (1 << 0);
  3735  0000D8  0100               	movlb	0	; () banked
  3736  0000DA  818A               	bsf	_flags& (0+255),0,b
  3737  0000DC                     l4370:
  3738  0000DC  FFFF               	dw	65535	; assembler added errata NOP
  3739                           
  3740                           ; BSR set to: 0
  3741                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 693:             
      +                                  ++*fmt;
  3742  0000DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3743  0000E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3744  0000E6  2ADE               	incf	postinc2,f,c
  3745  0000E8  0E00               	movlw	0
  3746  0000EA  22DD               	addwfc	postdec2,f,c
  3747                           
  3748                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 694:             
      +                                  break;
  3749  0000EC  EFC0  F000         	goto	l4394
  3750  0000F0                     l4372:
  3751  0000F0  FFFF               	dw	65535	; assembler added errata NOP
  3752                           
  3753                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 696:             
      +                                  flags |= (1 << 1);
  3754  0000F2  0100               	movlb	0	; () banked
  3755  0000F4  838A               	bsf	_flags& (0+255),1,b
  3756  0000F6  EF6E  F000         	goto	l4370
  3757  0000FA                     l4376:
  3758  0000FA  FFFF               	dw	65535	; assembler added errata NOP
  3759                           
  3760                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 700:             
      +                                  flags |= (1 << 2);
  3761  0000FC  0100               	movlb	0	; () banked
  3762  0000FE  858A               	bsf	_flags& (0+255),2,b
  3763  000100  EF6E  F000         	goto	l4370
  3764  000104                     l4380:
  3765  000104  FFFF               	dw	65535	; assembler added errata NOP
  3766                           
  3767                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 704:             
      +                                  flags |= (1 << 3);
  3768  000106  0100               	movlb	0	; () banked
  3769  000108  878A               	bsf	_flags& (0+255),3,b
  3770  00010A  EF6E  F000         	goto	l4370
  3771  00010E                     l4384:
  3772  00010E  FFFF               	dw	65535	; assembler added errata NOP
  3773                           
  3774                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 708:             
      +                                  flags |= (1 << 4);
  3775  000110  0100               	movlb	0	; () banked
  3776  000112  898A               	bsf	_flags& (0+255),4,b
  3777  000114  EF6E  F000         	goto	l4370
  3778  000118                     l4388:
  3779  000118  FFFF               	dw	65535	; assembler added errata NOP
  3780                           
  3781                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 712:             
      +                                  done = 1;
  3782  00011A  0E00               	movlw	0
  3783  00011C  6E50               	movwf	(vfpfcnvrt@done+1)^0,c
  3784  00011E  0E01               	movlw	1
  3785  000120  6E4F               	movwf	vfpfcnvrt@done^0,c
  3786                           
  3787                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 713:             
      +                                  break;
  3788  000122  EFC0  F000         	goto	l4394
  3789  000126                     l4392:
  3790  000126  FFFF               	dw	65535	; assembler added errata NOP
  3791  000128  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3792  00012C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3793  000130  CFDE FFF6          	movff	postinc2,tblptrl
  3794  000134  CFDD FFF7          	movff	postdec2,tblptrh
  3795  000138                     	if	0	;tblptru may be non-zero
  3796  000138                     	endif
  3797  000138                     	if	0	;tblptru may be non-zero
  3798  000138                     	endif
  3799  000138  0008               	tblrd		*
  3800  00013A  FFFF               	dw	65535	; errata NOP
  3801  00013C  50F5               	movf	tablat,w,c
  3802  00013E  6E49               	movwf	??_vfpfcnvrt^0,c
  3803  000140  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  3804                           
  3805                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3806                           ; Switch size 1, requested type "simple"
  3807                           ; Number of cases is 1, Range of values is 0 to 0
  3808                           ; switch strategies available:
  3809                           ; Name         Instructions Cycles
  3810                           ; simple_byte            4     3 (average)
  3811                           ;	Chosen strategy is simple_byte
  3812  000142  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  3813  000144  0A00               	xorlw	0	; case 0
  3814  000146  B4D8               	btfsc	status,2,c
  3815  000148  EFA8  F000         	goto	l5762
  3816  00014C  EF8C  F000         	goto	l4388
  3817  000150                     l5762:
  3818  000150  FFFF               	dw	65535	; assembler added errata NOP
  3819                           
  3820                           ; Switch size 1, requested type "simple"
  3821                           ; Number of cases is 5, Range of values is 32 to 48
  3822                           ; switch strategies available:
  3823                           ; Name         Instructions Cycles
  3824                           ; simple_byte           16     9 (average)
  3825                           ;	Chosen strategy is simple_byte
  3826  000152  5049               	movf	??_vfpfcnvrt^0,w,c
  3827  000154  0A20               	xorlw	32	; case 32
  3828  000156  B4D8               	btfsc	status,2,c
  3829  000158  EF82  F000         	goto	l4380
  3830  00015C  0A03               	xorlw	3	; case 35
  3831  00015E  B4D8               	btfsc	status,2,c
  3832  000160  EF87  F000         	goto	l4384
  3833  000164  0A08               	xorlw	8	; case 43
  3834  000166  B4D8               	btfsc	status,2,c
  3835  000168  EF7D  F000         	goto	l4376
  3836  00016C  0A06               	xorlw	6	; case 45
  3837  00016E  B4D8               	btfsc	status,2,c
  3838  000170  EF6B  F000         	goto	l4368
  3839  000174  0A1D               	xorlw	29	; case 48
  3840  000176  B4D8               	btfsc	status,2,c
  3841  000178  EF78  F000         	goto	l4372
  3842  00017C  EF8C  F000         	goto	l4388
  3843  000180                     l4394:
  3844  000180  FFFF               	dw	65535	; assembler added errata NOP
  3845                           
  3846                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  3847  000182  504F               	movf	vfpfcnvrt@done^0,w,c
  3848  000184  1050               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  3849  000186  B4D8               	btfsc	status,2,c
  3850  000188  EFC8  F000         	goto	u5181
  3851  00018C  EFCB  F000         	goto	u5180
  3852  000190                     u5181:
  3853  000190  FFFF               	dw	65535	; assembler added errata NOP
  3854  000192  EF93  F000         	goto	l4392
  3855  000196                     u5180:
  3856  000196  FFFF               	dw	65535	; assembler added errata NOP
  3857  000198                     
  3858                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 716:         if (
      +                          flags & (1 << 0)) {
  3859  000198  0100               	movlb	0	; () banked
  3860  00019A  A18A               	btfss	_flags& (0+255),0,b
  3861  00019C  EFD2  F000         	goto	u5191
  3862  0001A0  EFD5  F000         	goto	u5190
  3863  0001A4                     u5191:
  3864  0001A4  FFFF               	dw	65535	; assembler added errata NOP
  3865  0001A6  EFD7  F000         	goto	l4398
  3866  0001AA                     u5190:
  3867  0001AA  FFFF               	dw	65535	; assembler added errata NOP
  3868  0001AC                     
  3869                           ; BSR set to: 0
  3870                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 717:             
      +                          flags &= ~(1 << 1);
  3871  0001AC  938A               	bcf	_flags& (0+255),1,b
  3872  0001AE                     l4398:
  3873  0001AE  FFFF               	dw	65535	; assembler added errata NOP
  3874                           
  3875                           ; BSR set to: 0
  3876                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  3877  0001B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3878  0001B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3879  0001B8  CFDE FFF6          	movff	postinc2,tblptrl
  3880  0001BC  CFDD FFF7          	movff	postdec2,tblptrh
  3881  0001C0                     	if	0	;tblptru may be non-zero
  3882  0001C0                     	endif
  3883  0001C0                     	if	0	;tblptru may be non-zero
  3884  0001C0                     	endif
  3885  0001C0  0008               	tblrd		*
  3886  0001C2  FFFF               	dw	65535	; errata NOP
  3887  0001C4  50F5               	movf	tablat,w,c
  3888  0001C6  0A2A               	xorlw	42
  3889  0001C8  A4D8               	btfss	status,2,c
  3890  0001CA  EFE9  F000         	goto	u5201
  3891  0001CE  EFEC  F000         	goto	u5200
  3892  0001D2                     u5201:
  3893  0001D2  FFFF               	dw	65535	; assembler added errata NOP
  3894  0001D4  EF18  F001         	goto	l4406
  3895  0001D8                     u5200:
  3896  0001D8  FFFF               	dw	65535	; assembler added errata NOP
  3897  0001DA                     
  3898                           ; BSR set to: 0
  3899                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  3900  0001DA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3901  0001DE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3902  0001E2  2ADE               	incf	postinc2,f,c
  3903  0001E4  0E00               	movlw	0
  3904  0001E6  22DD               	addwfc	postdec2,f,c
  3905                           
  3906                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3907  0001E8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3908  0001EC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3909  0001F0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3910  0001F4  0E02               	movlw	2
  3911  0001F6  26DE               	addwf	postinc2,f,c
  3912  0001F8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3913  0001FC  0E00               	movlw	0
  3914  0001FE  22DD               	addwfc	postdec2,f,c
  3915  000200  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3916  000204  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3917  000208  CFDE F086          	movff	postinc2,_width
  3918  00020C  CFDD F087          	movff	postdec2,_width+1
  3919  000210                     
  3920                           ; BSR set to: 0
  3921                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  3922  000210  BF87               	btfsc	(_width+1)& (0+255),7,b
  3923  000212  EF10  F001         	goto	u5210
  3924  000216  EF0D  F001         	goto	u5211
  3925  00021A                     u5211:
  3926  00021A  FFFF               	dw	65535	; assembler added errata NOP
  3927  00021C  EF63  F001         	goto	l4416
  3928  000220                     u5210:
  3929  000220  FFFF               	dw	65535	; assembler added errata NOP
  3930  000222                     
  3931                           ; BSR set to: 0
  3932                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  3933  000222  818A               	bsf	_flags& (0+255),0,b
  3934                           
  3935                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  3936  000224  6D86               	negf	_width& (0+255),b
  3937  000226  1F87               	comf	(_width+1)& (0+255),f,b
  3938  000228  B0D8               	btfsc	status,0,c
  3939  00022A  2B87               	incf	(_width+1)& (0+255),f,b
  3940  00022C  EF63  F001         	goto	l4416
  3941  000230                     l4406:
  3942  000230  FFFF               	dw	65535	; assembler added errata NOP
  3943                           
  3944                           ; BSR set to: 0
  3945                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  3946  000232  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3947  000236  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3948  00023A  CFDE F008          	movff	postinc2,atoi@s
  3949  00023E  CFDD F009          	movff	postdec2,atoi@s+1
  3950  000242  EC2B  F01E         	call	_atoi	;wreg free
  3951  000246  C008  F086         	movff	?_atoi,_width
  3952  00024A  C009  F087         	movff	?_atoi+1,_width+1
  3953                           
  3954                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3955  00024E  EF31  F001         	goto	l4410
  3956  000252                     l4408:
  3957  000252  FFFF               	dw	65535	; assembler added errata NOP
  3958                           
  3959                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  3960  000254  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3961  000258  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3962  00025C  2ADE               	incf	postinc2,f,c
  3963  00025E  0E00               	movlw	0
  3964  000260  22DD               	addwfc	postdec2,f,c
  3965  000262                     l4410:
  3966  000262  FFFF               	dw	65535	; assembler added errata NOP
  3967  000264  0ED0               	movlw	208
  3968  000266  6E49               	movwf	??_vfpfcnvrt^0,c
  3969  000268  0EFF               	movlw	255
  3970  00026A  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  3971  00026C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3972  000270  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3973  000274  CFDE FFF6          	movff	postinc2,tblptrl
  3974  000278  CFDD FFF7          	movff	postdec2,tblptrh
  3975  00027C                     	if	0	;tblptru may be non-zero
  3976  00027C                     	endif
  3977  00027C                     	if	0	;tblptru may be non-zero
  3978  00027C                     	endif
  3979  00027C  0008               	tblrd		*
  3980  00027E  FFFF               	dw	65535	; errata NOP
  3981  000280  50F5               	movf	tablat,w,c
  3982  000282  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  3983  000284  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  3984  000286  5049               	movf	??_vfpfcnvrt^0,w,c
  3985  000288  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3986  00028A  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  3987  00028C  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3988  00028E  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  3989  000290  E10B               	bnz	u5220
  3990  000292  0E0A               	movlw	10
  3991  000294  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3992  000296  A0D8               	btfss	status,0,c
  3993  000298  EF50  F001         	goto	u5221
  3994  00029C  EF54  F001         	goto	u5220
  3995  0002A0                     u5221:
  3996  0002A0  FFFF               	dw	65535	; assembler added errata NOP
  3997  0002A2  0E01               	movlw	1
  3998  0002A4  EF56  F001         	goto	u5230
  3999  0002A8                     u5220:
  4000  0002A8  FFFF               	dw	65535	; assembler added errata NOP
  4001  0002AA  0E00               	movlw	0
  4002  0002AC                     u5230:
  4003  0002AC  FFFF               	dw	65535	; assembler added errata NOP
  4004  0002AE  6E51               	movwf	_vfpfcnvrt$1685^0,c
  4005  0002B0  6A52               	clrf	(_vfpfcnvrt$1685+1)^0,c
  4006  0002B2  5051               	movf	_vfpfcnvrt$1685^0,w,c
  4007  0002B4  1052               	iorwf	(_vfpfcnvrt$1685+1)^0,w,c
  4008  0002B6  A4D8               	btfss	status,2,c
  4009  0002B8  EF60  F001         	goto	u5241
  4010  0002BC  EF63  F001         	goto	u5240
  4011  0002C0                     u5241:
  4012  0002C0  FFFF               	dw	65535	; assembler added errata NOP
  4013  0002C2  EF29  F001         	goto	l4408
  4014  0002C6                     u5240:
  4015  0002C6                     l4416:
  4016  0002C6  FFFF               	dw	65535	; assembler added errata NOP
  4017                           
  4018                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  4019  0002C8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4020  0002CC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4021  0002D0  CFDE FFF6          	movff	postinc2,tblptrl
  4022  0002D4  CFDD FFF7          	movff	postdec2,tblptrh
  4023  0002D8                     	if	0	;tblptru may be non-zero
  4024  0002D8                     	endif
  4025  0002D8                     	if	0	;tblptru may be non-zero
  4026  0002D8                     	endif
  4027  0002D8  0008               	tblrd		*
  4028  0002DA  FFFF               	dw	65535	; errata NOP
  4029  0002DC  50F5               	movf	tablat,w,c
  4030  0002DE  0A2E               	xorlw	46
  4031  0002E0  A4D8               	btfss	status,2,c
  4032  0002E2  EF75  F001         	goto	u5251
  4033  0002E6  EF78  F001         	goto	u5250
  4034  0002EA                     u5251:
  4035  0002EA  FFFF               	dw	65535	; assembler added errata NOP
  4036  0002EC  EF02  F002         	goto	l4436
  4037  0002F0                     u5250:
  4038  0002F0  FFFF               	dw	65535	; assembler added errata NOP
  4039  0002F2                     
  4040                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  4041  0002F2  0E00               	movlw	0
  4042  0002F4  0100               	movlb	0	; () banked
  4043  0002F6  6F89               	movwf	(_prec+1)& (0+255),b
  4044  0002F8  0E00               	movlw	0
  4045  0002FA  6F88               	movwf	_prec& (0+255),b
  4046  0002FC                     
  4047                           ; BSR set to: 0
  4048                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  4049  0002FC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4050  000300  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4051  000304  2ADE               	incf	postinc2,f,c
  4052  000306  0E00               	movlw	0
  4053  000308  22DD               	addwfc	postdec2,f,c
  4054  00030A                     
  4055                           ; BSR set to: 0
  4056                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  4057  00030A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4058  00030E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4059  000312  CFDE FFF6          	movff	postinc2,tblptrl
  4060  000316  CFDD FFF7          	movff	postdec2,tblptrh
  4061  00031A                     	if	0	;tblptru may be non-zero
  4062  00031A                     	endif
  4063  00031A                     	if	0	;tblptru may be non-zero
  4064  00031A                     	endif
  4065  00031A  0008               	tblrd		*
  4066  00031C  FFFF               	dw	65535	; errata NOP
  4067  00031E  50F5               	movf	tablat,w,c
  4068  000320  0A2A               	xorlw	42
  4069  000322  A4D8               	btfss	status,2,c
  4070  000324  EF96  F001         	goto	u5261
  4071  000328  EF99  F001         	goto	u5260
  4072  00032C                     u5261:
  4073  00032C  FFFF               	dw	65535	; assembler added errata NOP
  4074  00032E  EFB7  F001         	goto	l4426
  4075  000332                     u5260:
  4076  000332  FFFF               	dw	65535	; assembler added errata NOP
  4077  000334                     
  4078                           ; BSR set to: 0
  4079                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  4080  000334  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4081  000338  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4082  00033C  2ADE               	incf	postinc2,f,c
  4083  00033E  0E00               	movlw	0
  4084  000340  22DD               	addwfc	postdec2,f,c
  4085                           
  4086                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4087  000342  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4088  000346  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4089  00034A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4090  00034E  0E02               	movlw	2
  4091  000350  26DE               	addwf	postinc2,f,c
  4092  000352  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4093  000356  0E00               	movlw	0
  4094  000358  22DD               	addwfc	postdec2,f,c
  4095  00035A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4096  00035E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4097  000362  CFDE F088          	movff	postinc2,_prec
  4098  000366  CFDD F089          	movff	postdec2,_prec+1
  4099                           
  4100                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  4101  00036A  EF02  F002         	goto	l4436
  4102  00036E                     l4426:
  4103  00036E  FFFF               	dw	65535	; assembler added errata NOP
  4104                           
  4105                           ; BSR set to: 0
  4106                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  4107  000370  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4108  000374  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4109  000378  CFDE F008          	movff	postinc2,atoi@s
  4110  00037C  CFDD F009          	movff	postdec2,atoi@s+1
  4111  000380  EC2B  F01E         	call	_atoi	;wreg free
  4112  000384  C008  F088         	movff	?_atoi,_prec
  4113  000388  C009  F089         	movff	?_atoi+1,_prec+1
  4114                           
  4115                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4116  00038C  EFD0  F001         	goto	l4430
  4117  000390                     l4428:
  4118  000390  FFFF               	dw	65535	; assembler added errata NOP
  4119                           
  4120                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  4121  000392  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4122  000396  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4123  00039A  2ADE               	incf	postinc2,f,c
  4124  00039C  0E00               	movlw	0
  4125  00039E  22DD               	addwfc	postdec2,f,c
  4126  0003A0                     l4430:
  4127  0003A0  FFFF               	dw	65535	; assembler added errata NOP
  4128  0003A2  0ED0               	movlw	208
  4129  0003A4  6E49               	movwf	??_vfpfcnvrt^0,c
  4130  0003A6  0EFF               	movlw	255
  4131  0003A8  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  4132  0003AA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4133  0003AE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4134  0003B2  CFDE FFF6          	movff	postinc2,tblptrl
  4135  0003B6  CFDD FFF7          	movff	postdec2,tblptrh
  4136  0003BA                     	if	0	;tblptru may be non-zero
  4137  0003BA                     	endif
  4138  0003BA                     	if	0	;tblptru may be non-zero
  4139  0003BA                     	endif
  4140  0003BA  0008               	tblrd		*
  4141  0003BC  FFFF               	dw	65535	; errata NOP
  4142  0003BE  50F5               	movf	tablat,w,c
  4143  0003C0  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  4144  0003C2  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  4145  0003C4  5049               	movf	??_vfpfcnvrt^0,w,c
  4146  0003C6  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4147  0003C8  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  4148  0003CA  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4149  0003CC  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  4150  0003CE  E10B               	bnz	u5270
  4151  0003D0  0E0A               	movlw	10
  4152  0003D2  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4153  0003D4  A0D8               	btfss	status,0,c
  4154  0003D6  EFEF  F001         	goto	u5271
  4155  0003DA  EFF3  F001         	goto	u5270
  4156  0003DE                     u5271:
  4157  0003DE  FFFF               	dw	65535	; assembler added errata NOP
  4158  0003E0  0E01               	movlw	1
  4159  0003E2  EFF5  F001         	goto	u5280
  4160  0003E6                     u5270:
  4161  0003E6  FFFF               	dw	65535	; assembler added errata NOP
  4162  0003E8  0E00               	movlw	0
  4163  0003EA                     u5280:
  4164  0003EA  FFFF               	dw	65535	; assembler added errata NOP
  4165  0003EC  6E53               	movwf	_vfpfcnvrt$1686^0,c
  4166  0003EE  6A54               	clrf	(_vfpfcnvrt$1686+1)^0,c
  4167  0003F0  5053               	movf	_vfpfcnvrt$1686^0,w,c
  4168  0003F2  1054               	iorwf	(_vfpfcnvrt$1686+1)^0,w,c
  4169  0003F4  A4D8               	btfss	status,2,c
  4170  0003F6  EFFF  F001         	goto	u5291
  4171  0003FA  EF02  F002         	goto	u5290
  4172  0003FE                     u5291:
  4173  0003FE  FFFF               	dw	65535	; assembler added errata NOP
  4174  000400  EFC8  F001         	goto	l4428
  4175  000404                     u5290:
  4176  000404                     l4436:
  4177  000404  FFFF               	dw	65535	; assembler added errata NOP
  4178                           
  4179                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 792:         if (
      +                          *fmt[0] == 'c') {
  4180  000406  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4181  00040A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4182  00040E  CFDE FFF6          	movff	postinc2,tblptrl
  4183  000412  CFDD FFF7          	movff	postdec2,tblptrh
  4184  000416                     	if	0	;tblptru may be non-zero
  4185  000416                     	endif
  4186  000416                     	if	0	;tblptru may be non-zero
  4187  000416                     	endif
  4188  000416  0008               	tblrd		*
  4189  000418  FFFF               	dw	65535	; errata NOP
  4190  00041A  50F5               	movf	tablat,w,c
  4191  00041C  0A63               	xorlw	99
  4192  00041E  A4D8               	btfss	status,2,c
  4193  000420  EF14  F002         	goto	u5301
  4194  000424  EF17  F002         	goto	u5300
  4195  000428                     u5301:
  4196  000428  FFFF               	dw	65535	; assembler added errata NOP
  4197  00042A  EF3F  F002         	goto	l4444
  4198  00042E                     u5300:
  4199  00042E  FFFF               	dw	65535	; assembler added errata NOP
  4200  000430                     
  4201                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 793:             
      +                          ++*fmt;
  4202  000430  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4203  000434  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4204  000438  2ADE               	incf	postinc2,f,c
  4205  00043A  0E00               	movlw	0
  4206  00043C  22DD               	addwfc	postdec2,f,c
  4207                           
  4208                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 794:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4209  00043E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4210  000442  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4211  000446  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4212  00044A  0E02               	movlw	2
  4213  00044C  26DE               	addwf	postinc2,f,c
  4214  00044E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4215  000452  0E00               	movlw	0
  4216  000454  22DD               	addwfc	postdec2,f,c
  4217  000456  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4218  00045A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4219  00045E  50DF               	movf	indf2,w,c
  4220  000460  6E5F               	movwf	vfpfcnvrt@c^0,c
  4221  000462                     
  4222                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 795:             
      +                          return ctoa(fp, c);
  4223  000462  C043  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  4224  000466  C044  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  4225  00046A  C05F  F01E         	movff	vfpfcnvrt@c,ctoa@c
  4226  00046E  EC23  F035         	call	_ctoa	;wreg free
  4227  000472  C01C  F043         	movff	?_ctoa,?_vfpfcnvrt
  4228  000476  C01D  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  4229  00047A  EF2E  F00A         	goto	l1301
  4230  00047E                     l4444:
  4231  00047E  FFFF               	dw	65535	; assembler added errata NOP
  4232                           
  4233                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 802:         if (
      +                          !strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi", ((s
      +                          izeof("hhi")/sizeof("hhi"[0]))-1))) {
  4234  000480  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4235  000484  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4236  000488  CFDE F001          	movff	postinc2,strncmp@_l
  4237  00048C  CFDD F002          	movff	postdec2,strncmp@_l+1
  4238  000490  0ECF               	movlw	low STR_11
  4239  000492  6E03               	movwf	strncmp@_r^0,c
  4240  000494  0E7F               	movlw	high STR_11
  4241  000496  6E04               	movwf	(strncmp@_r+1)^0,c
  4242  000498  0E00               	movlw	0
  4243  00049A  6E06               	movwf	(strncmp@n+1)^0,c
  4244  00049C  0E03               	movlw	3
  4245  00049E  6E05               	movwf	strncmp@n^0,c
  4246  0004A0  ECBC  F03B         	call	_strncmp	;wreg free
  4247  0004A4  5001               	movf	?_strncmp^0,w,c
  4248  0004A6  1002               	iorwf	(?_strncmp+1)^0,w,c
  4249  0004A8  B4D8               	btfsc	status,2,c
  4250  0004AA  EF59  F002         	goto	u5311
  4251  0004AE  EF5C  F002         	goto	u5310
  4252  0004B2                     u5311:
  4253  0004B2  FFFF               	dw	65535	; assembler added errata NOP
  4254  0004B4  EF79  F002         	goto	l4448
  4255  0004B8                     u5310:
  4256  0004B8  FFFF               	dw	65535	; assembler added errata NOP
  4257  0004BA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4258  0004BE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4259  0004C2  CFDE F001          	movff	postinc2,strncmp@_l
  4260  0004C6  CFDD F002          	movff	postdec2,strncmp@_l+1
  4261  0004CA  0ED3               	movlw	low STR_15
  4262  0004CC  6E03               	movwf	strncmp@_r^0,c
  4263  0004CE  0E7F               	movlw	high STR_15
  4264  0004D0  6E04               	movwf	(strncmp@_r+1)^0,c
  4265  0004D2  0E00               	movlw	0
  4266  0004D4  6E06               	movwf	(strncmp@n+1)^0,c
  4267  0004D6  0E03               	movlw	3
  4268  0004D8  6E05               	movwf	strncmp@n^0,c
  4269  0004DA  ECBC  F03B         	call	_strncmp	;wreg free
  4270  0004DE  5001               	movf	?_strncmp^0,w,c
  4271  0004E0  1002               	iorwf	(?_strncmp+1)^0,w,c
  4272  0004E2  A4D8               	btfss	status,2,c
  4273  0004E4  EF76  F002         	goto	u5321
  4274  0004E8  EF79  F002         	goto	u5320
  4275  0004EC                     u5321:
  4276  0004EC  FFFF               	dw	65535	; assembler added errata NOP
  4277  0004EE  EFBB  F002         	goto	l4454
  4278  0004F2                     u5320:
  4279  0004F2                     l4448:
  4280  0004F2  FFFF               	dw	65535	; assembler added errata NOP
  4281                           
  4282                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 803: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 805:             *fmt += ((si
      +                          zeof("hhd")/sizeof("hhd"[0]))-1);
  4283  0004F4  0E03               	movlw	3
  4284  0004F6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4285  0004FA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4286  0004FE  26DE               	addwf	postinc2,f,c
  4287  000500  0E00               	movlw	0
  4288  000502  22DD               	addwfc	postdec2,f,c
  4289                           
  4290                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 806:             
      +                          ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4291  000504  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4292  000508  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4293  00050C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4294  000510  0E02               	movlw	2
  4295  000512  26DE               	addwf	postinc2,f,c
  4296  000514  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4297  000518  0E00               	movlw	0
  4298  00051A  22DD               	addwfc	postdec2,f,c
  4299  00051C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4300  000520  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4301  000524  50DF               	movf	indf2,w,c
  4302  000526  6E55               	movwf	vfpfcnvrt@ll^0,c
  4303  000528  0E00               	movlw	0
  4304  00052A  BE55               	btfsc	vfpfcnvrt@ll^0,7,c
  4305  00052C  0EFF               	movlw	-1
  4306  00052E  6E56               	movwf	(vfpfcnvrt@ll+1)^0,c
  4307  000530  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  4308  000532  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  4309  000534  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  4310  000536  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  4311  000538  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  4312  00053A  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  4313  00053C                     l4450:
  4314  00053C  FFFF               	dw	65535	; assembler added errata NOP
  4315                           
  4316                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 808:             
      +                          return dtoa(fp, ll);
  4317  00053E  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  4318  000542  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4319  000546  C055  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  4320  00054A  C056  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4321  00054E  C057  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4322  000552  C058  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4323  000556  C059  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4324  00055A  C05A  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4325  00055E  C05B  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4326  000562  C05C  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4327  000566  ECEA  F016         	call	_dtoa	;wreg free
  4328  00056A  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  4329  00056E  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4330  000572  EF2E  F00A         	goto	l1301
  4331  000576                     l4454:
  4332  000576  FFFF               	dw	65535	; assembler added errata NOP
  4333                           
  4334                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          !strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", ((sizeo
      +                          f("hi")/sizeof("hi"[0]))-1))) {
  4335  000578  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4336  00057C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4337  000580  CFDE F001          	movff	postinc2,strncmp@_l
  4338  000584  CFDD F002          	movff	postdec2,strncmp@_l+1
  4339  000588  0ED0               	movlw	low (STR_11+1)
  4340  00058A  6E03               	movwf	strncmp@_r^0,c
  4341  00058C  0E7F               	movlw	high (STR_11+1)
  4342  00058E  6E04               	movwf	(strncmp@_r+1)^0,c
  4343  000590  0E00               	movlw	0
  4344  000592  6E06               	movwf	(strncmp@n+1)^0,c
  4345  000594  0E02               	movlw	2
  4346  000596  6E05               	movwf	strncmp@n^0,c
  4347  000598  ECBC  F03B         	call	_strncmp	;wreg free
  4348  00059C  5001               	movf	?_strncmp^0,w,c
  4349  00059E  1002               	iorwf	(?_strncmp+1)^0,w,c
  4350  0005A0  B4D8               	btfsc	status,2,c
  4351  0005A2  EFD5  F002         	goto	u5331
  4352  0005A6  EFD8  F002         	goto	u5330
  4353  0005AA                     u5331:
  4354  0005AA  FFFF               	dw	65535	; assembler added errata NOP
  4355  0005AC  EFF5  F002         	goto	l4458
  4356  0005B0                     u5330:
  4357  0005B0  FFFF               	dw	65535	; assembler added errata NOP
  4358  0005B2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4359  0005B6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4360  0005BA  CFDE F001          	movff	postinc2,strncmp@_l
  4361  0005BE  CFDD F002          	movff	postdec2,strncmp@_l+1
  4362  0005C2  0ED4               	movlw	low (STR_15+1)
  4363  0005C4  6E03               	movwf	strncmp@_r^0,c
  4364  0005C6  0E7F               	movlw	high (STR_15+1)
  4365  0005C8  6E04               	movwf	(strncmp@_r+1)^0,c
  4366  0005CA  0E00               	movlw	0
  4367  0005CC  6E06               	movwf	(strncmp@n+1)^0,c
  4368  0005CE  0E02               	movlw	2
  4369  0005D0  6E05               	movwf	strncmp@n^0,c
  4370  0005D2  ECBC  F03B         	call	_strncmp	;wreg free
  4371  0005D6  5001               	movf	?_strncmp^0,w,c
  4372  0005D8  1002               	iorwf	(?_strncmp+1)^0,w,c
  4373  0005DA  A4D8               	btfss	status,2,c
  4374  0005DC  EFF2  F002         	goto	u5341
  4375  0005E0  EFF5  F002         	goto	u5340
  4376  0005E4                     u5341:
  4377  0005E4  FFFF               	dw	65535	; assembler added errata NOP
  4378  0005E6  EF1D  F003         	goto	l4464
  4379  0005EA                     u5340:
  4380  0005EA                     l4458:
  4381  0005EA  FFFF               	dw	65535	; assembler added errata NOP
  4382                           
  4383                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 815: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 817:             *fmt += ((si
      +                          zeof("hd")/sizeof("hd"[0]))-1);
  4384  0005EC  0E02               	movlw	2
  4385  0005EE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4386  0005F2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4387  0005F6  26DE               	addwf	postinc2,f,c
  4388  0005F8  0E00               	movlw	0
  4389  0005FA  22DD               	addwfc	postdec2,f,c
  4390                           
  4391                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 818:             
      +                          ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4392  0005FC  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4393  000600  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4394  000604  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4395  000608  0E02               	movlw	2
  4396  00060A  26DE               	addwf	postinc2,f,c
  4397  00060C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4398  000610  0E00               	movlw	0
  4399  000612  22DD               	addwfc	postdec2,f,c
  4400  000614  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4401  000618  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4402  00061C  CFDE F055          	movff	postinc2,vfpfcnvrt@ll
  4403  000620  CFDD F056          	movff	postdec2,vfpfcnvrt@ll+1
  4404  000624  0E00               	movlw	0
  4405  000626  BE56               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  4406  000628  0EFF               	movlw	-1
  4407  00062A  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  4408  00062C  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  4409  00062E  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  4410  000630  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  4411  000632  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  4412  000634  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  4413  000636  EF9E  F002         	goto	l4450
  4414  00063A                     l4464:
  4415  00063A  FFFF               	dw	65535	; assembler added errata NOP
  4416                           
  4417                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4418  00063C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4419  000640  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4420  000644  CFDE FFF6          	movff	postinc2,tblptrl
  4421  000648  CFDD FFF7          	movff	postdec2,tblptrh
  4422  00064C                     	if	0	;tblptru may be non-zero
  4423  00064C                     	endif
  4424  00064C                     	if	0	;tblptru may be non-zero
  4425  00064C                     	endif
  4426  00064C  0008               	tblrd		*
  4427  00064E  FFFF               	dw	65535	; errata NOP
  4428  000650  50F5               	movf	tablat,w,c
  4429  000652  0A64               	xorlw	100
  4430  000654  B4D8               	btfsc	status,2,c
  4431  000656  EF2F  F003         	goto	u5351
  4432  00065A  EF32  F003         	goto	u5350
  4433  00065E                     u5351:
  4434  00065E  FFFF               	dw	65535	; assembler added errata NOP
  4435  000660  EF47  F003         	goto	l4468
  4436  000664                     u5350:
  4437  000664  FFFF               	dw	65535	; assembler added errata NOP
  4438  000666  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4439  00066A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4440  00066E  CFDE FFF6          	movff	postinc2,tblptrl
  4441  000672  CFDD FFF7          	movff	postdec2,tblptrh
  4442  000676                     	if	0	;tblptru may be non-zero
  4443  000676                     	endif
  4444  000676                     	if	0	;tblptru may be non-zero
  4445  000676                     	endif
  4446  000676  0008               	tblrd		*
  4447  000678  FFFF               	dw	65535	; errata NOP
  4448  00067A  50F5               	movf	tablat,w,c
  4449  00067C  0A69               	xorlw	105
  4450  00067E  A4D8               	btfss	status,2,c
  4451  000680  EF44  F003         	goto	u5361
  4452  000684  EF47  F003         	goto	u5360
  4453  000688                     u5361:
  4454  000688  FFFF               	dw	65535	; assembler added errata NOP
  4455  00068A  EF6E  F003         	goto	l4474
  4456  00068E                     u5360:
  4457  00068E                     l4468:
  4458  00068E  FFFF               	dw	65535	; assembler added errata NOP
  4459                           
  4460                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  4461  000690  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4462  000694  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4463  000698  2ADE               	incf	postinc2,f,c
  4464  00069A  0E00               	movlw	0
  4465  00069C  22DD               	addwfc	postdec2,f,c
  4466                           
  4467                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4468  00069E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4469  0006A2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4470  0006A6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4471  0006AA  0E02               	movlw	2
  4472  0006AC  26DE               	addwf	postinc2,f,c
  4473  0006AE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4474  0006B2  0E00               	movlw	0
  4475  0006B4  22DD               	addwfc	postdec2,f,c
  4476  0006B6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4477  0006BA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4478  0006BE  CFDE F055          	movff	postinc2,vfpfcnvrt@ll
  4479  0006C2  CFDD F056          	movff	postdec2,vfpfcnvrt@ll+1
  4480  0006C6  0E00               	movlw	0
  4481  0006C8  BE56               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  4482  0006CA  0EFF               	movlw	-1
  4483  0006CC  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  4484  0006CE  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  4485  0006D0  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  4486  0006D2  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  4487  0006D4  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  4488  0006D6  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  4489  0006D8  EF9E  F002         	goto	l4450
  4490  0006DC                     l4474:
  4491  0006DC  FFFF               	dw	65535	; assembler added errata NOP
  4492                           
  4493                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 883:         if (
      +                          !strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", ((sizeo
      +                          f("zi")/sizeof("zi"[0]))-1))) {
  4494  0006DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4495  0006E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4496  0006E6  CFDE F001          	movff	postinc2,strncmp@_l
  4497  0006EA  CFDD F002          	movff	postdec2,strncmp@_l+1
  4498  0006EE  0EEA               	movlw	low STR_29
  4499  0006F0  6E03               	movwf	strncmp@_r^0,c
  4500  0006F2  0E7F               	movlw	high STR_29
  4501  0006F4  6E04               	movwf	(strncmp@_r+1)^0,c
  4502  0006F6  0E00               	movlw	0
  4503  0006F8  6E06               	movwf	(strncmp@n+1)^0,c
  4504  0006FA  0E02               	movlw	2
  4505  0006FC  6E05               	movwf	strncmp@n^0,c
  4506  0006FE  ECBC  F03B         	call	_strncmp	;wreg free
  4507  000702  5001               	movf	?_strncmp^0,w,c
  4508  000704  1002               	iorwf	(?_strncmp+1)^0,w,c
  4509  000706  B4D8               	btfsc	status,2,c
  4510  000708  EF88  F003         	goto	u5371
  4511  00070C  EF8B  F003         	goto	u5370
  4512  000710                     u5371:
  4513  000710  FFFF               	dw	65535	; assembler added errata NOP
  4514  000712  EFA8  F003         	goto	l4478
  4515  000716                     u5370:
  4516  000716  FFFF               	dw	65535	; assembler added errata NOP
  4517  000718  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4518  00071C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4519  000720  CFDE F001          	movff	postinc2,strncmp@_l
  4520  000724  CFDD F002          	movff	postdec2,strncmp@_l+1
  4521  000728  0EED               	movlw	low STR_33
  4522  00072A  6E03               	movwf	strncmp@_r^0,c
  4523  00072C  0E7F               	movlw	high STR_33
  4524  00072E  6E04               	movwf	(strncmp@_r+1)^0,c
  4525  000730  0E00               	movlw	0
  4526  000732  6E06               	movwf	(strncmp@n+1)^0,c
  4527  000734  0E02               	movlw	2
  4528  000736  6E05               	movwf	strncmp@n^0,c
  4529  000738  ECBC  F03B         	call	_strncmp	;wreg free
  4530  00073C  5001               	movf	?_strncmp^0,w,c
  4531  00073E  1002               	iorwf	(?_strncmp+1)^0,w,c
  4532  000740  A4D8               	btfss	status,2,c
  4533  000742  EFA5  F003         	goto	u5381
  4534  000746  EFA8  F003         	goto	u5380
  4535  00074A                     u5381:
  4536  00074A  FFFF               	dw	65535	; assembler added errata NOP
  4537  00074C  EFD1  F003         	goto	l4484
  4538  000750                     u5380:
  4539  000750                     l4478:
  4540  000750  FFFF               	dw	65535	; assembler added errata NOP
  4541                           
  4542                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 884: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 886:             *fmt += ((si
      +                          zeof("zd")/sizeof("zd"[0]))-1);
  4543  000752  0E02               	movlw	2
  4544  000754  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4545  000758  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4546  00075C  26DE               	addwf	postinc2,f,c
  4547  00075E  0E00               	movlw	0
  4548  000760  22DD               	addwfc	postdec2,f,c
  4549                           
  4550                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 887:             
      +                          ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4551  000762  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4552  000766  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4553  00076A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4554  00076E  0E02               	movlw	2
  4555  000770  26DE               	addwf	postinc2,f,c
  4556  000772  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4557  000776  0E00               	movlw	0
  4558  000778  22DD               	addwfc	postdec2,f,c
  4559  00077A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4560  00077E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4561  000782  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4562  000786  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4563  00078A  C04B  F055         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  4564  00078E  C04C  F056         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  4565  000792  6A57               	clrf	(vfpfcnvrt@ll+2)^0,c
  4566  000794  6A58               	clrf	(vfpfcnvrt@ll+3)^0,c
  4567  000796  6A59               	clrf	(vfpfcnvrt@ll+4)^0,c
  4568  000798  6A5A               	clrf	(vfpfcnvrt@ll+5)^0,c
  4569  00079A  6A5B               	clrf	(vfpfcnvrt@ll+6)^0,c
  4570  00079C  6A5C               	clrf	(vfpfcnvrt@ll+7)^0,c
  4571  00079E  EF9E  F002         	goto	l4450
  4572  0007A2                     l4484:
  4573  0007A2  FFFF               	dw	65535	; assembler added errata NOP
  4574                           
  4575                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 969:         if (
      +                          !strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  4576  0007A4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4577  0007A8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4578  0007AC  CFDE F001          	movff	postinc2,strncmp@_l
  4579  0007B0  CFDD F002          	movff	postdec2,strncmp@_l+1
  4580  0007B4  0EDB               	movlw	low STR_38
  4581  0007B6  6E03               	movwf	strncmp@_r^0,c
  4582  0007B8  0E7F               	movlw	high STR_38
  4583  0007BA  6E04               	movwf	(strncmp@_r+1)^0,c
  4584  0007BC  0E00               	movlw	0
  4585  0007BE  6E06               	movwf	(strncmp@n+1)^0,c
  4586  0007C0  0E03               	movlw	3
  4587  0007C2  6E05               	movwf	strncmp@n^0,c
  4588  0007C4  ECBC  F03B         	call	_strncmp	;wreg free
  4589  0007C8  5001               	movf	?_strncmp^0,w,c
  4590  0007CA  1002               	iorwf	(?_strncmp+1)^0,w,c
  4591  0007CC  A4D8               	btfss	status,2,c
  4592  0007CE  EFEB  F003         	goto	u5391
  4593  0007D2  EFEE  F003         	goto	u5390
  4594  0007D6                     u5391:
  4595  0007D6  FFFF               	dw	65535	; assembler added errata NOP
  4596  0007D8  EF2F  F004         	goto	l4492
  4597  0007DC                     u5390:
  4598  0007DC  FFFF               	dw	65535	; assembler added errata NOP
  4599  0007DE                     
  4600                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 971:             
      +                          *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  4601  0007DE  0E03               	movlw	3
  4602  0007E0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4603  0007E4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4604  0007E8  26DE               	addwf	postinc2,f,c
  4605  0007EA  0E00               	movlw	0
  4606  0007EC  22DD               	addwfc	postdec2,f,c
  4607                           
  4608                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 972:             
      +                          llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4609  0007EE  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4610  0007F2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4611  0007F6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4612  0007FA  0E02               	movlw	2
  4613  0007FC  26DE               	addwf	postinc2,f,c
  4614  0007FE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4615  000802  0E00               	movlw	0
  4616  000804  22DD               	addwfc	postdec2,f,c
  4617  000806  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4618  00080A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4619  00080E  50DF               	movf	indf2,w,c
  4620  000810  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  4621  000812  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  4622  000814  6E60               	movwf	vfpfcnvrt@llu^0,c
  4623  000816  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  4624  000818  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4625  00081A  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4626  00081C  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4627  00081E  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4628  000820  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4629  000822  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4630  000824                     l4488:
  4631  000824  FFFF               	dw	65535	; assembler added errata NOP
  4632                           
  4633                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 974:             
      +                          return otoa(fp, llu);
  4634  000826  C043  F01C         	movff	vfpfcnvrt@fp,otoa@fp
  4635  00082A  C044  F01D         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  4636  00082E  C060  F01E         	movff	vfpfcnvrt@llu,otoa@d
  4637  000832  C061  F01F         	movff	vfpfcnvrt@llu+1,otoa@d+1
  4638  000836  C062  F020         	movff	vfpfcnvrt@llu+2,otoa@d+2
  4639  00083A  C063  F021         	movff	vfpfcnvrt@llu+3,otoa@d+3
  4640  00083E  C064  F022         	movff	vfpfcnvrt@llu+4,otoa@d+4
  4641  000842  C065  F023         	movff	vfpfcnvrt@llu+5,otoa@d+5
  4642  000846  C066  F024         	movff	vfpfcnvrt@llu+6,otoa@d+6
  4643  00084A  C067  F025         	movff	vfpfcnvrt@llu+7,otoa@d+7
  4644  00084E  EC32  F01B         	call	_otoa	;wreg free
  4645  000852  C01C  F043         	movff	?_otoa,?_vfpfcnvrt
  4646  000856  C01D  F044         	movff	?_otoa+1,?_vfpfcnvrt+1
  4647  00085A  EF2E  F00A         	goto	l1301
  4648  00085E                     l4492:
  4649  00085E  FFFF               	dw	65535	; assembler added errata NOP
  4650                           
  4651                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 980:         if (
      +                          !strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  4652  000860  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4653  000864  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4654  000868  CFDE F001          	movff	postinc2,strncmp@_l
  4655  00086C  CFDD F002          	movff	postdec2,strncmp@_l+1
  4656  000870  0EDC               	movlw	low (STR_38+1)
  4657  000872  6E03               	movwf	strncmp@_r^0,c
  4658  000874  0E7F               	movlw	high (STR_38+1)
  4659  000876  6E04               	movwf	(strncmp@_r+1)^0,c
  4660  000878  0E00               	movlw	0
  4661  00087A  6E06               	movwf	(strncmp@n+1)^0,c
  4662  00087C  0E02               	movlw	2
  4663  00087E  6E05               	movwf	strncmp@n^0,c
  4664  000880  ECBC  F03B         	call	_strncmp	;wreg free
  4665  000884  5001               	movf	?_strncmp^0,w,c
  4666  000886  1002               	iorwf	(?_strncmp+1)^0,w,c
  4667  000888  A4D8               	btfss	status,2,c
  4668  00088A  EF49  F004         	goto	u5401
  4669  00088E  EF4C  F004         	goto	u5400
  4670  000892                     u5401:
  4671  000892  FFFF               	dw	65535	; assembler added errata NOP
  4672  000894  EF75  F004         	goto	l4500
  4673  000898                     u5400:
  4674  000898  FFFF               	dw	65535	; assembler added errata NOP
  4675  00089A                     
  4676                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 982:             
      +                          *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  4677  00089A  0E02               	movlw	2
  4678  00089C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4679  0008A0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4680  0008A4  26DE               	addwf	postinc2,f,c
  4681  0008A6  0E00               	movlw	0
  4682  0008A8  22DD               	addwfc	postdec2,f,c
  4683                           
  4684                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 983:             
      +                          llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4685  0008AA  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4686  0008AE  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4687  0008B2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4688  0008B6  0E02               	movlw	2
  4689  0008B8  26DE               	addwf	postinc2,f,c
  4690  0008BA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4691  0008BE  0E00               	movlw	0
  4692  0008C0  22DD               	addwfc	postdec2,f,c
  4693  0008C2  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4694  0008C6  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4695  0008CA  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4696  0008CE  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4697  0008D2  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4698  0008D6  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4699  0008DA  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4700  0008DC  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4701  0008DE  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4702  0008E0  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4703  0008E2  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4704  0008E4  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4705  0008E6  EF12  F004         	goto	l4488
  4706  0008EA                     l4500:
  4707  0008EA  FFFF               	dw	65535	; assembler added errata NOP
  4708                           
  4709                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 990:         if (
      +                          *fmt[0] == 'o') {
  4710  0008EC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4711  0008F0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4712  0008F4  CFDE FFF6          	movff	postinc2,tblptrl
  4713  0008F8  CFDD FFF7          	movff	postdec2,tblptrh
  4714  0008FC                     	if	0	;tblptru may be non-zero
  4715  0008FC                     	endif
  4716  0008FC                     	if	0	;tblptru may be non-zero
  4717  0008FC                     	endif
  4718  0008FC  0008               	tblrd		*
  4719  0008FE  FFFF               	dw	65535	; errata NOP
  4720  000900  50F5               	movf	tablat,w,c
  4721  000902  0A6F               	xorlw	111
  4722  000904  A4D8               	btfss	status,2,c
  4723  000906  EF87  F004         	goto	u5411
  4724  00090A  EF8A  F004         	goto	u5410
  4725  00090E                     u5411:
  4726  00090E  FFFF               	dw	65535	; assembler added errata NOP
  4727  000910  EFB2  F004         	goto	l4508
  4728  000914                     u5410:
  4729  000914  FFFF               	dw	65535	; assembler added errata NOP
  4730  000916                     
  4731                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 992:             
      +                          ++*fmt;
  4732  000916  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4733  00091A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4734  00091E  2ADE               	incf	postinc2,f,c
  4735  000920  0E00               	movlw	0
  4736  000922  22DD               	addwfc	postdec2,f,c
  4737                           
  4738                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 993:             
      +                          llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int
      +                          )0));
  4739  000924  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4740  000928  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4741  00092C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4742  000930  0E02               	movlw	2
  4743  000932  26DE               	addwf	postinc2,f,c
  4744  000934  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4745  000938  0E00               	movlw	0
  4746  00093A  22DD               	addwfc	postdec2,f,c
  4747  00093C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4748  000940  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4749  000944  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4750  000948  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4751  00094C  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4752  000950  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4753  000954  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4754  000956  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4755  000958  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4756  00095A  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4757  00095C  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4758  00095E  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4759  000960  EF12  F004         	goto	l4488
  4760  000964                     l4508:
  4761  000964  FFFF               	dw	65535	; assembler added errata NOP
  4762                           
  4763                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1044:         if 
      +                          (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  4764  000966  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4765  00096A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4766  00096E  CFDE F001          	movff	postinc2,strncmp@_l
  4767  000972  CFDD F002          	movff	postdec2,strncmp@_l+1
  4768  000976  0EF3               	movlw	low STR_48
  4769  000978  6E03               	movwf	strncmp@_r^0,c
  4770  00097A  0E7F               	movlw	high STR_48
  4771  00097C  6E04               	movwf	(strncmp@_r+1)^0,c
  4772  00097E  0E00               	movlw	0
  4773  000980  6E06               	movwf	(strncmp@n+1)^0,c
  4774  000982  0E02               	movlw	2
  4775  000984  6E05               	movwf	strncmp@n^0,c
  4776  000986  ECBC  F03B         	call	_strncmp	;wreg free
  4777  00098A  5001               	movf	?_strncmp^0,w,c
  4778  00098C  1002               	iorwf	(?_strncmp+1)^0,w,c
  4779  00098E  A4D8               	btfss	status,2,c
  4780  000990  EFCC  F004         	goto	u5421
  4781  000994  EFCF  F004         	goto	u5420
  4782  000998                     u5421:
  4783  000998  FFFF               	dw	65535	; assembler added errata NOP
  4784  00099A  EFF8  F004         	goto	l4516
  4785  00099E                     u5420:
  4786  00099E  FFFF               	dw	65535	; assembler added errata NOP
  4787  0009A0                     
  4788                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1046:            
      +                           *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  4789  0009A0  0E02               	movlw	2
  4790  0009A2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4791  0009A6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4792  0009AA  26DE               	addwf	postinc2,f,c
  4793  0009AC  0E00               	movlw	0
  4794  0009AE  22DD               	addwfc	postdec2,f,c
  4795                           
  4796                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1047:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4797  0009B0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4798  0009B4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4799  0009B8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4800  0009BC  0E02               	movlw	2
  4801  0009BE  26DE               	addwf	postinc2,f,c
  4802  0009C0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4803  0009C4  0E00               	movlw	0
  4804  0009C6  22DD               	addwfc	postdec2,f,c
  4805  0009C8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4806  0009CC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4807  0009D0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4808  0009D4  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4809  0009D8  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4810  0009DC  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4811  0009E0  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4812  0009E2  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4813  0009E4  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4814  0009E6  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4815  0009E8  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4816  0009EA  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4817  0009EC  EF12  F004         	goto	l4488
  4818  0009F0                     l4516:
  4819  0009F0  FFFF               	dw	65535	; assembler added errata NOP
  4820                           
  4821                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1058:         if 
      +                          (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  4822  0009F2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4823  0009F6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4824  0009FA  CFDE F001          	movff	postinc2,strncmp@_l
  4825  0009FE  CFDD F002          	movff	postdec2,strncmp@_l+1
  4826  000A02  0ED7               	movlw	low STR_53
  4827  000A04  6E03               	movwf	strncmp@_r^0,c
  4828  000A06  0E7F               	movlw	high STR_53
  4829  000A08  6E04               	movwf	(strncmp@_r+1)^0,c
  4830  000A0A  0E00               	movlw	0
  4831  000A0C  6E06               	movwf	(strncmp@n+1)^0,c
  4832  000A0E  0E03               	movlw	3
  4833  000A10  6E05               	movwf	strncmp@n^0,c
  4834  000A12  ECBC  F03B         	call	_strncmp	;wreg free
  4835  000A16  5001               	movf	?_strncmp^0,w,c
  4836  000A18  1002               	iorwf	(?_strncmp+1)^0,w,c
  4837  000A1A  A4D8               	btfss	status,2,c
  4838  000A1C  EF12  F005         	goto	u5431
  4839  000A20  EF15  F005         	goto	u5430
  4840  000A24                     u5431:
  4841  000A24  FFFF               	dw	65535	; assembler added errata NOP
  4842  000A26  EF4B  F005         	goto	l4526
  4843  000A2A                     u5430:
  4844  000A2A  FFFF               	dw	65535	; assembler added errata NOP
  4845  000A2C                     
  4846                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1060:            
      +                           *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  4847  000A2C  0E03               	movlw	3
  4848  000A2E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4849  000A32  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4850  000A36  26DE               	addwf	postinc2,f,c
  4851  000A38  0E00               	movlw	0
  4852  000A3A  22DD               	addwfc	postdec2,f,c
  4853                           
  4854                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1061:            
      +                           vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  4855  000A3C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4856  000A40  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4857  000A44  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4858  000A48  0E02               	movlw	2
  4859  000A4A  26DE               	addwf	postinc2,f,c
  4860  000A4C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4861  000A50  0E00               	movlw	0
  4862  000A52  22DD               	addwfc	postdec2,f,c
  4863  000A54  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4864  000A58  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4865  000A5C  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  4866  000A60  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  4867  000A64                     
  4868                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1062:            
      +                           *(char *)vp = (char)nout;
  4869  000A64  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  4870  000A68  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  4871  000A6C  6AF8               	clrf	tblptru,c
  4872  000A6E  0E05               	movlw	(high __ramtop+-1)
  4873  000A70  64F7               	cpfsgt	tblptrh,c
  4874  000A72  D004               	bra	u5447
  4875  000A74  C084  FFF5         	movff	_nout,tablat
  4876  000A78  000C               	tblwt		*
  4877  000A7A  D006               	bra	u5440
  4878  000A7C                     u5447:
  4879  000A7C  CFF6 FFE1          	movff	tblptrl,fsr1l
  4880  000A80  CFF7 FFE2          	movff	tblptrh,fsr1h
  4881  000A84  C084  FFE7         	movff	_nout,indf1
  4882  000A88                     u5440:
  4883  000A88                     l4522:
  4884  000A88  FFFF               	dw	65535	; assembler added errata NOP
  4885                           
  4886                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1063:            
      +                           return 0;
  4887  000A8A  0E00               	movlw	0
  4888  000A8C  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  4889  000A8E  0E00               	movlw	0
  4890  000A90  6E43               	movwf	?_vfpfcnvrt^0,c
  4891  000A92  EF2E  F00A         	goto	l1301
  4892  000A96                     l4526:
  4893  000A96  FFFF               	dw	65535	; assembler added errata NOP
  4894                           
  4895                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1068:         if 
      +                          (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  4896  000A98  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4897  000A9C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4898  000AA0  CFDE F001          	movff	postinc2,strncmp@_l
  4899  000AA4  CFDD F002          	movff	postdec2,strncmp@_l+1
  4900  000AA8  0ED8               	movlw	low (STR_53+1)
  4901  000AAA  6E03               	movwf	strncmp@_r^0,c
  4902  000AAC  0E7F               	movlw	high (STR_53+1)
  4903  000AAE  6E04               	movwf	(strncmp@_r+1)^0,c
  4904  000AB0  0E00               	movlw	0
  4905  000AB2  6E06               	movwf	(strncmp@n+1)^0,c
  4906  000AB4  0E02               	movlw	2
  4907  000AB6  6E05               	movwf	strncmp@n^0,c
  4908  000AB8  ECBC  F03B         	call	_strncmp	;wreg free
  4909  000ABC  5001               	movf	?_strncmp^0,w,c
  4910  000ABE  1002               	iorwf	(?_strncmp+1)^0,w,c
  4911  000AC0  A4D8               	btfss	status,2,c
  4912  000AC2  EF65  F005         	goto	u5451
  4913  000AC6  EF68  F005         	goto	u5450
  4914  000ACA                     u5451:
  4915  000ACA  FFFF               	dw	65535	; assembler added errata NOP
  4916  000ACC  EF9E  F005         	goto	l4536
  4917  000AD0                     u5450:
  4918  000AD0  FFFF               	dw	65535	; assembler added errata NOP
  4919  000AD2                     
  4920                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1070:            
      +                           *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  4921  000AD2  0E02               	movlw	2
  4922  000AD4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4923  000AD8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4924  000ADC  26DE               	addwf	postinc2,f,c
  4925  000ADE  0E00               	movlw	0
  4926  000AE0  22DD               	addwfc	postdec2,f,c
  4927                           
  4928                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1071:            
      +                           vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  4929  000AE2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4930  000AE6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4931  000AEA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4932  000AEE  0E02               	movlw	2
  4933  000AF0  26DE               	addwf	postinc2,f,c
  4934  000AF2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4935  000AF6  0E00               	movlw	0
  4936  000AF8  22DD               	addwfc	postdec2,f,c
  4937  000AFA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4938  000AFE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4939  000B02  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  4940  000B06  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  4941  000B0A                     
  4942                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1072:            
      +                           *(short *)vp = (short)nout;
  4943  000B0A  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  4944  000B0E  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  4945  000B12  6AF8               	clrf	tblptru,c
  4946  000B14  0E05               	movlw	(high __ramtop+-1)
  4947  000B16  64F7               	cpfsgt	tblptrh,c
  4948  000B18  D007               	bra	u5467
  4949  000B1A  C084  FFF5         	movff	_nout,tablat
  4950  000B1E  000D               	tblwt		*+
  4951  000B20  C085  FFF5         	movff	_nout+1,tablat
  4952  000B24  000C               	tblwt		*
  4953  000B26  D008               	bra	u5460
  4954  000B28                     u5467:
  4955  000B28  CFF6 FFE1          	movff	tblptrl,fsr1l
  4956  000B2C  CFF7 FFE2          	movff	tblptrh,fsr1h
  4957  000B30  C084  FFE6         	movff	_nout,postinc1
  4958  000B34  C085  FFE7         	movff	_nout+1,indf1
  4959  000B38                     u5460:
  4960  000B38  EF44  F005         	goto	l4522
  4961  000B3C                     l4536:
  4962  000B3C  FFFF               	dw	65535	; assembler added errata NOP
  4963                           
  4964                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1077:         if 
      +                          (*fmt[0] == 'n') {
  4965  000B3E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4966  000B42  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4967  000B46  CFDE FFF6          	movff	postinc2,tblptrl
  4968  000B4A  CFDD FFF7          	movff	postdec2,tblptrh
  4969  000B4E                     	if	0	;tblptru may be non-zero
  4970  000B4E                     	endif
  4971  000B4E                     	if	0	;tblptru may be non-zero
  4972  000B4E                     	endif
  4973  000B4E  0008               	tblrd		*
  4974  000B50  FFFF               	dw	65535	; errata NOP
  4975  000B52  50F5               	movf	tablat,w,c
  4976  000B54  0A6E               	xorlw	110
  4977  000B56  A4D8               	btfss	status,2,c
  4978  000B58  EFB0  F005         	goto	u5471
  4979  000B5C  EFB3  F005         	goto	u5470
  4980  000B60                     u5471:
  4981  000B60  FFFF               	dw	65535	; assembler added errata NOP
  4982  000B62  EFE8  F005         	goto	l4546
  4983  000B66                     u5470:
  4984  000B66  FFFF               	dw	65535	; assembler added errata NOP
  4985  000B68                     
  4986                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1078:            
      +                           ++*fmt;
  4987  000B68  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4988  000B6C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4989  000B70  2ADE               	incf	postinc2,f,c
  4990  000B72  0E00               	movlw	0
  4991  000B74  22DD               	addwfc	postdec2,f,c
  4992                           
  4993                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1079:            
      +                           vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  4994  000B76  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4995  000B7A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4996  000B7E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4997  000B82  0E02               	movlw	2
  4998  000B84  26DE               	addwf	postinc2,f,c
  4999  000B86  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5000  000B8A  0E00               	movlw	0
  5001  000B8C  22DD               	addwfc	postdec2,f,c
  5002  000B8E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5003  000B92  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5004  000B96  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  5005  000B9A  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  5006  000B9E                     
  5007                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1080:            
      +                           *(int *)vp = nout;
  5008  000B9E  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  5009  000BA2  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  5010  000BA6  6AF8               	clrf	tblptru,c
  5011  000BA8  0E05               	movlw	(high __ramtop+-1)
  5012  000BAA  64F7               	cpfsgt	tblptrh,c
  5013  000BAC  D007               	bra	u5487
  5014  000BAE  C084  FFF5         	movff	_nout,tablat
  5015  000BB2  000D               	tblwt		*+
  5016  000BB4  C085  FFF5         	movff	_nout+1,tablat
  5017  000BB8  000C               	tblwt		*
  5018  000BBA  D008               	bra	u5480
  5019  000BBC                     u5487:
  5020  000BBC  CFF6 FFE1          	movff	tblptrl,fsr1l
  5021  000BC0  CFF7 FFE2          	movff	tblptrh,fsr1h
  5022  000BC4  C084  FFE6         	movff	_nout,postinc1
  5023  000BC8  C085  FFE7         	movff	_nout+1,indf1
  5024  000BCC                     u5480:
  5025  000BCC  EF44  F005         	goto	l4522
  5026  000BD0                     l4546:
  5027  000BD0  FFFF               	dw	65535	; assembler added errata NOP
  5028                           
  5029                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1125:         if 
      +                          (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  5030  000BD2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5031  000BD6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5032  000BDA  CFDE F001          	movff	postinc2,strncmp@_l
  5033  000BDE  CFDD F002          	movff	postdec2,strncmp@_l+1
  5034  000BE2  0EF0               	movlw	low STR_63
  5035  000BE4  6E03               	movwf	strncmp@_r^0,c
  5036  000BE6  0E7F               	movlw	high STR_63
  5037  000BE8  6E04               	movwf	(strncmp@_r+1)^0,c
  5038  000BEA  0E00               	movlw	0
  5039  000BEC  6E06               	movwf	(strncmp@n+1)^0,c
  5040  000BEE  0E02               	movlw	2
  5041  000BF0  6E05               	movwf	strncmp@n^0,c
  5042  000BF2  ECBC  F03B         	call	_strncmp	;wreg free
  5043  000BF6  5001               	movf	?_strncmp^0,w,c
  5044  000BF8  1002               	iorwf	(?_strncmp+1)^0,w,c
  5045  000BFA  A4D8               	btfss	status,2,c
  5046  000BFC  EF02  F006         	goto	u5491
  5047  000C00  EF05  F006         	goto	u5490
  5048  000C04                     u5491:
  5049  000C04  FFFF               	dw	65535	; assembler added errata NOP
  5050  000C06  EF3B  F006         	goto	l4556
  5051  000C0A                     u5490:
  5052  000C0A  FFFF               	dw	65535	; assembler added errata NOP
  5053  000C0C                     
  5054                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1127:            
      +                           *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  5055  000C0C  0E02               	movlw	2
  5056  000C0E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5057  000C12  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5058  000C16  26DE               	addwf	postinc2,f,c
  5059  000C18  0E00               	movlw	0
  5060  000C1A  22DD               	addwfc	postdec2,f,c
  5061                           
  5062                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1128:            
      +                           vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  5063  000C1C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5064  000C20  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5065  000C24  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5066  000C28  0E02               	movlw	2
  5067  000C2A  26DE               	addwf	postinc2,f,c
  5068  000C2C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5069  000C30  0E00               	movlw	0
  5070  000C32  22DD               	addwfc	postdec2,f,c
  5071  000C34  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5072  000C38  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5073  000C3C  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  5074  000C40  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  5075  000C44                     
  5076                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1129:            
      +                           *(size_t *)vp = (size_t)nout;
  5077  000C44  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  5078  000C48  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  5079  000C4C  6AF8               	clrf	tblptru,c
  5080  000C4E  0E05               	movlw	(high __ramtop+-1)
  5081  000C50  64F7               	cpfsgt	tblptrh,c
  5082  000C52  D007               	bra	u5507
  5083  000C54  C084  FFF5         	movff	_nout,tablat
  5084  000C58  000D               	tblwt		*+
  5085  000C5A  C085  FFF5         	movff	_nout+1,tablat
  5086  000C5E  000C               	tblwt		*
  5087  000C60  D008               	bra	u5500
  5088  000C62                     u5507:
  5089  000C62  CFF6 FFE1          	movff	tblptrl,fsr1l
  5090  000C66  CFF7 FFE2          	movff	tblptrh,fsr1h
  5091  000C6A  C084  FFE6         	movff	_nout,postinc1
  5092  000C6E  C085  FFE7         	movff	_nout+1,indf1
  5093  000C72                     u5500:
  5094  000C72  EF44  F005         	goto	l4522
  5095  000C76                     l4556:
  5096  000C76  FFFF               	dw	65535	; assembler added errata NOP
  5097                           
  5098                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1138:         if 
      +                          (*fmt[0] == 'p') {
  5099  000C78  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5100  000C7C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5101  000C80  CFDE FFF6          	movff	postinc2,tblptrl
  5102  000C84  CFDD FFF7          	movff	postdec2,tblptrh
  5103  000C88                     	if	0	;tblptru may be non-zero
  5104  000C88                     	endif
  5105  000C88                     	if	0	;tblptru may be non-zero
  5106  000C88                     	endif
  5107  000C88  0008               	tblrd		*
  5108  000C8A  FFFF               	dw	65535	; errata NOP
  5109  000C8C  50F5               	movf	tablat,w,c
  5110  000C8E  0A70               	xorlw	112
  5111  000C90  A4D8               	btfss	status,2,c
  5112  000C92  EF4D  F006         	goto	u5511
  5113  000C96  EF50  F006         	goto	u5510
  5114  000C9A                     u5511:
  5115  000C9A  FFFF               	dw	65535	; assembler added errata NOP
  5116  000C9C  EF94  F006         	goto	l4564
  5117  000CA0                     u5510:
  5118  000CA0  FFFF               	dw	65535	; assembler added errata NOP
  5119  000CA2                     
  5120                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1140:            
      +                           ++*fmt;
  5121  000CA2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5122  000CA6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5123  000CAA  2ADE               	incf	postinc2,f,c
  5124  000CAC  0E00               	movlw	0
  5125  000CAE  22DD               	addwfc	postdec2,f,c
  5126                           
  5127                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1141:            
      +                           llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0));
  5128  000CB0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5129  000CB4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5130  000CB8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5131  000CBC  0E02               	movlw	2
  5132  000CBE  26DE               	addwf	postinc2,f,c
  5133  000CC0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5134  000CC4  0E00               	movlw	0
  5135  000CC6  22DD               	addwfc	postdec2,f,c
  5136  000CC8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5137  000CCC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5138  000CD0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5139  000CD4  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5140  000CD8  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5141  000CDC  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5142  000CE0  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5143  000CE2  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5144  000CE4  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5145  000CE6  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5146  000CE8  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5147  000CEA  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5148  000CEC                     
  5149                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1143:            
      +                           return xtoa(fp, llu, 'x');
  5150  000CEC  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  5151  000CF0  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5152  000CF4  C060  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  5153  000CF8  C061  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5154  000CFC  C062  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5155  000D00  C063  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5156  000D04  C064  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5157  000D08  C065  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5158  000D0C  C066  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5159  000D10  C067  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5160  000D14  0E78               	movlw	120
  5161  000D16  6E26               	movwf	xtoa@x^0,c
  5162  000D18  EC84  F018         	call	_xtoa	;wreg free
  5163  000D1C  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  5164  000D20  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5165  000D24  EF2E  F00A         	goto	l1301
  5166  000D28                     l4564:
  5167  000D28  FFFF               	dw	65535	; assembler added errata NOP
  5168                           
  5169                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1149:         if 
      +                          (*fmt[0] == 's') {
  5170  000D2A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5171  000D2E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5172  000D32  CFDE FFF6          	movff	postinc2,tblptrl
  5173  000D36  CFDD FFF7          	movff	postdec2,tblptrh
  5174  000D3A                     	if	0	;tblptru may be non-zero
  5175  000D3A                     	endif
  5176  000D3A                     	if	0	;tblptru may be non-zero
  5177  000D3A                     	endif
  5178  000D3A  0008               	tblrd		*
  5179  000D3C  FFFF               	dw	65535	; errata NOP
  5180  000D3E  50F5               	movf	tablat,w,c
  5181  000D40  0A73               	xorlw	115
  5182  000D42  A4D8               	btfss	status,2,c
  5183  000D44  EFA6  F006         	goto	u5521
  5184  000D48  EFA9  F006         	goto	u5520
  5185  000D4C                     u5521:
  5186  000D4C  FFFF               	dw	65535	; assembler added errata NOP
  5187  000D4E  EFD5  F006         	goto	l4572
  5188  000D52                     u5520:
  5189  000D52  FFFF               	dw	65535	; assembler added errata NOP
  5190  000D54                     
  5191                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1151:            
      +                           ++*fmt;
  5192  000D54  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5193  000D58  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5194  000D5C  2ADE               	incf	postinc2,f,c
  5195  000D5E  0E00               	movlw	0
  5196  000D60  22DD               	addwfc	postdec2,f,c
  5197                           
  5198                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1152:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5199  000D62  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5200  000D66  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5201  000D6A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5202  000D6E  0E02               	movlw	2
  5203  000D70  26DE               	addwf	postinc2,f,c
  5204  000D72  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5205  000D76  0E00               	movlw	0
  5206  000D78  22DD               	addwfc	postdec2,f,c
  5207  000D7A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5208  000D7E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5209  000D82  CFDE F04D          	movff	postinc2,vfpfcnvrt@cp
  5210  000D86  CFDD F04E          	movff	postdec2,vfpfcnvrt@cp+1
  5211  000D8A                     
  5212                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1154:            
      +                           return stoa(fp, cp);
  5213  000D8A  C043  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  5214  000D8E  C044  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  5215  000D92  C04D  F00C         	movff	vfpfcnvrt@cp,stoa@s
  5216  000D96  C04E  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  5217  000D9A  EC41  F01D         	call	_stoa	;wreg free
  5218  000D9E  C00A  F043         	movff	?_stoa,?_vfpfcnvrt
  5219  000DA2  C00B  F044         	movff	?_stoa+1,?_vfpfcnvrt+1
  5220  000DA6  EF2E  F00A         	goto	l1301
  5221  000DAA                     l4572:
  5222  000DAA  FFFF               	dw	65535	; assembler added errata NOP
  5223                           
  5224                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1161:         if 
      +                          (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  5225  000DAC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5226  000DB0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5227  000DB4  CFDE F001          	movff	postinc2,strncmp@_l
  5228  000DB8  CFDD F002          	movff	postdec2,strncmp@_l+1
  5229  000DBC  0EDF               	movlw	low STR_68
  5230  000DBE  6E03               	movwf	strncmp@_r^0,c
  5231  000DC0  0E7F               	movlw	high STR_68
  5232  000DC2  6E04               	movwf	(strncmp@_r+1)^0,c
  5233  000DC4  0E00               	movlw	0
  5234  000DC6  6E06               	movwf	(strncmp@n+1)^0,c
  5235  000DC8  0E03               	movlw	3
  5236  000DCA  6E05               	movwf	strncmp@n^0,c
  5237  000DCC  ECBC  F03B         	call	_strncmp	;wreg free
  5238  000DD0  5001               	movf	?_strncmp^0,w,c
  5239  000DD2  1002               	iorwf	(?_strncmp+1)^0,w,c
  5240  000DD4  A4D8               	btfss	status,2,c
  5241  000DD6  EFEF  F006         	goto	u5531
  5242  000DDA  EFF2  F006         	goto	u5530
  5243  000DDE                     u5531:
  5244  000DDE  FFFF               	dw	65535	; assembler added errata NOP
  5245  000DE0  EF33  F007         	goto	l4580
  5246  000DE4                     u5530:
  5247  000DE4  FFFF               	dw	65535	; assembler added errata NOP
  5248  000DE6                     
  5249                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1163:            
      +                           *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  5250  000DE6  0E03               	movlw	3
  5251  000DE8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5252  000DEC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5253  000DF0  26DE               	addwf	postinc2,f,c
  5254  000DF2  0E00               	movlw	0
  5255  000DF4  22DD               	addwfc	postdec2,f,c
  5256                           
  5257                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1164:            
      +                           llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5258  000DF6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5259  000DFA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5260  000DFE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5261  000E02  0E02               	movlw	2
  5262  000E04  26DE               	addwf	postinc2,f,c
  5263  000E06  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5264  000E0A  0E00               	movlw	0
  5265  000E0C  22DD               	addwfc	postdec2,f,c
  5266  000E0E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5267  000E12  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5268  000E16  50DF               	movf	indf2,w,c
  5269  000E18  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  5270  000E1A  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  5271  000E1C  6E60               	movwf	vfpfcnvrt@llu^0,c
  5272  000E1E  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  5273  000E20  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5274  000E22  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5275  000E24  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5276  000E26  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5277  000E28  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5278  000E2A  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5279  000E2C                     l4576:
  5280  000E2C  FFFF               	dw	65535	; assembler added errata NOP
  5281                           
  5282                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1166:            
      +                           return utoa(fp, llu);
  5283  000E2E  C043  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  5284  000E32  C044  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  5285  000E36  C060  F01E         	movff	vfpfcnvrt@llu,utoa@d
  5286  000E3A  C061  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  5287  000E3E  C062  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  5288  000E42  C063  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  5289  000E46  C064  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  5290  000E4A  C065  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  5291  000E4E  C066  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  5292  000E52  C067  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  5293  000E56  EC1C  F01A         	call	_utoa	;wreg free
  5294  000E5A  C01C  F043         	movff	?_utoa,?_vfpfcnvrt
  5295  000E5E  C01D  F044         	movff	?_utoa+1,?_vfpfcnvrt+1
  5296  000E62  EF2E  F00A         	goto	l1301
  5297  000E66                     l4580:
  5298  000E66  FFFF               	dw	65535	; assembler added errata NOP
  5299                           
  5300                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1172:         if 
      +                          (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  5301  000E68  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5302  000E6C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5303  000E70  CFDE F001          	movff	postinc2,strncmp@_l
  5304  000E74  CFDD F002          	movff	postdec2,strncmp@_l+1
  5305  000E78  0EE0               	movlw	low (STR_68+1)
  5306  000E7A  6E03               	movwf	strncmp@_r^0,c
  5307  000E7C  0E7F               	movlw	high (STR_68+1)
  5308  000E7E  6E04               	movwf	(strncmp@_r+1)^0,c
  5309  000E80  0E00               	movlw	0
  5310  000E82  6E06               	movwf	(strncmp@n+1)^0,c
  5311  000E84  0E02               	movlw	2
  5312  000E86  6E05               	movwf	strncmp@n^0,c
  5313  000E88  ECBC  F03B         	call	_strncmp	;wreg free
  5314  000E8C  5001               	movf	?_strncmp^0,w,c
  5315  000E8E  1002               	iorwf	(?_strncmp+1)^0,w,c
  5316  000E90  A4D8               	btfss	status,2,c
  5317  000E92  EF4D  F007         	goto	u5541
  5318  000E96  EF50  F007         	goto	u5540
  5319  000E9A                     u5541:
  5320  000E9A  FFFF               	dw	65535	; assembler added errata NOP
  5321  000E9C  EF79  F007         	goto	l4588
  5322  000EA0                     u5540:
  5323  000EA0  FFFF               	dw	65535	; assembler added errata NOP
  5324  000EA2                     
  5325                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1174:            
      +                           *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  5326  000EA2  0E02               	movlw	2
  5327  000EA4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5328  000EA8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5329  000EAC  26DE               	addwf	postinc2,f,c
  5330  000EAE  0E00               	movlw	0
  5331  000EB0  22DD               	addwfc	postdec2,f,c
  5332                           
  5333                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1175:            
      +                           llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5334  000EB2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5335  000EB6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5336  000EBA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5337  000EBE  0E02               	movlw	2
  5338  000EC0  26DE               	addwf	postinc2,f,c
  5339  000EC2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5340  000EC6  0E00               	movlw	0
  5341  000EC8  22DD               	addwfc	postdec2,f,c
  5342  000ECA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5343  000ECE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5344  000ED2  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5345  000ED6  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5346  000EDA  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5347  000EDE  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5348  000EE2  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5349  000EE4  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5350  000EE6  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5351  000EE8  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5352  000EEA  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5353  000EEC  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5354  000EEE  EF16  F007         	goto	l4576
  5355  000EF2                     l4588:
  5356  000EF2  FFFF               	dw	65535	; assembler added errata NOP
  5357                           
  5358                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1182:         if 
      +                          (*fmt[0] == 'u') {
  5359  000EF4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5360  000EF8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5361  000EFC  CFDE FFF6          	movff	postinc2,tblptrl
  5362  000F00  CFDD FFF7          	movff	postdec2,tblptrh
  5363  000F04                     	if	0	;tblptru may be non-zero
  5364  000F04                     	endif
  5365  000F04                     	if	0	;tblptru may be non-zero
  5366  000F04                     	endif
  5367  000F04  0008               	tblrd		*
  5368  000F06  FFFF               	dw	65535	; errata NOP
  5369  000F08  50F5               	movf	tablat,w,c
  5370  000F0A  0A75               	xorlw	117
  5371  000F0C  A4D8               	btfss	status,2,c
  5372  000F0E  EF8B  F007         	goto	u5551
  5373  000F12  EF8E  F007         	goto	u5550
  5374  000F16                     u5551:
  5375  000F16  FFFF               	dw	65535	; assembler added errata NOP
  5376  000F18  EFB6  F007         	goto	l4596
  5377  000F1C                     u5550:
  5378  000F1C  FFFF               	dw	65535	; assembler added errata NOP
  5379  000F1E                     
  5380                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1184:            
      +                           ++*fmt;
  5381  000F1E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5382  000F22  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5383  000F26  2ADE               	incf	postinc2,f,c
  5384  000F28  0E00               	movlw	0
  5385  000F2A  22DD               	addwfc	postdec2,f,c
  5386                           
  5387                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1185:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  5388  000F2C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5389  000F30  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5390  000F34  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5391  000F38  0E02               	movlw	2
  5392  000F3A  26DE               	addwf	postinc2,f,c
  5393  000F3C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5394  000F40  0E00               	movlw	0
  5395  000F42  22DD               	addwfc	postdec2,f,c
  5396  000F44  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5397  000F48  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5398  000F4C  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5399  000F50  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5400  000F54  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5401  000F58  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5402  000F5C  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5403  000F5E  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5404  000F60  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5405  000F62  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5406  000F64  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5407  000F66  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5408  000F68  EF16  F007         	goto	l4576
  5409  000F6C                     l4596:
  5410  000F6C  FFFF               	dw	65535	; assembler added errata NOP
  5411                           
  5412                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1236:         if 
      +                          (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  5413  000F6E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5414  000F72  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5415  000F76  CFDE F001          	movff	postinc2,strncmp@_l
  5416  000F7A  CFDD F002          	movff	postdec2,strncmp@_l+1
  5417  000F7E  0EF6               	movlw	low STR_78
  5418  000F80  6E03               	movwf	strncmp@_r^0,c
  5419  000F82  0E7F               	movlw	high STR_78
  5420  000F84  6E04               	movwf	(strncmp@_r+1)^0,c
  5421  000F86  0E00               	movlw	0
  5422  000F88  6E06               	movwf	(strncmp@n+1)^0,c
  5423  000F8A  0E02               	movlw	2
  5424  000F8C  6E05               	movwf	strncmp@n^0,c
  5425  000F8E  ECBC  F03B         	call	_strncmp	;wreg free
  5426  000F92  5001               	movf	?_strncmp^0,w,c
  5427  000F94  1002               	iorwf	(?_strncmp+1)^0,w,c
  5428  000F96  A4D8               	btfss	status,2,c
  5429  000F98  EFD0  F007         	goto	u5561
  5430  000F9C  EFD3  F007         	goto	u5560
  5431  000FA0                     u5561:
  5432  000FA0  FFFF               	dw	65535	; assembler added errata NOP
  5433  000FA2  EFFC  F007         	goto	l4604
  5434  000FA6                     u5560:
  5435  000FA6  FFFF               	dw	65535	; assembler added errata NOP
  5436  000FA8                     
  5437                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1238:            
      +                           *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  5438  000FA8  0E02               	movlw	2
  5439  000FAA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5440  000FAE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5441  000FB2  26DE               	addwf	postinc2,f,c
  5442  000FB4  0E00               	movlw	0
  5443  000FB6  22DD               	addwfc	postdec2,f,c
  5444                           
  5445                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1239:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5446  000FB8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5447  000FBC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5448  000FC0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5449  000FC4  0E02               	movlw	2
  5450  000FC6  26DE               	addwf	postinc2,f,c
  5451  000FC8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5452  000FCC  0E00               	movlw	0
  5453  000FCE  22DD               	addwfc	postdec2,f,c
  5454  000FD0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5455  000FD4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5456  000FD8  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5457  000FDC  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5458  000FE0  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5459  000FE4  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5460  000FE8  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5461  000FEA  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5462  000FEC  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5463  000FEE  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5464  000FF0  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5465  000FF2  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5466  000FF4  EF16  F007         	goto	l4576
  5467  000FF8                     l4604:
  5468  000FF8  FFFF               	dw	65535	; assembler added errata NOP
  5469                           
  5470                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1249:         if 
      +                          (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hhX", ((
      +                          sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  5471  000FFA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5472  000FFE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5473  001002  CFDE F001          	movff	postinc2,strncmp@_l
  5474  001006  CFDD F002          	movff	postdec2,strncmp@_l+1
  5475  00100A  0EE3               	movlw	low STR_83
  5476  00100C  6E03               	movwf	strncmp@_r^0,c
  5477  00100E  0E7F               	movlw	high STR_83
  5478  001010  6E04               	movwf	(strncmp@_r+1)^0,c
  5479  001012  0E00               	movlw	0
  5480  001014  6E06               	movwf	(strncmp@n+1)^0,c
  5481  001016  0E03               	movlw	3
  5482  001018  6E05               	movwf	strncmp@n^0,c
  5483  00101A  ECBC  F03B         	call	_strncmp	;wreg free
  5484  00101E  5001               	movf	?_strncmp^0,w,c
  5485  001020  1002               	iorwf	(?_strncmp+1)^0,w,c
  5486  001022  B4D8               	btfsc	status,2,c
  5487  001024  EF16  F008         	goto	u5571
  5488  001028  EF19  F008         	goto	u5570
  5489  00102C                     u5571:
  5490  00102C  FFFF               	dw	65535	; assembler added errata NOP
  5491  00102E  EF36  F008         	goto	l4608
  5492  001032                     u5570:
  5493  001032  FFFF               	dw	65535	; assembler added errata NOP
  5494  001034  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5495  001038  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5496  00103C  CFDE F001          	movff	postinc2,strncmp@_l
  5497  001040  CFDD F002          	movff	postdec2,strncmp@_l+1
  5498  001044  0ECB               	movlw	low STR_87
  5499  001046  6E03               	movwf	strncmp@_r^0,c
  5500  001048  0E7F               	movlw	high STR_87
  5501  00104A  6E04               	movwf	(strncmp@_r+1)^0,c
  5502  00104C  0E00               	movlw	0
  5503  00104E  6E06               	movwf	(strncmp@n+1)^0,c
  5504  001050  0E03               	movlw	3
  5505  001052  6E05               	movwf	strncmp@n^0,c
  5506  001054  ECBC  F03B         	call	_strncmp	;wreg free
  5507  001058  5001               	movf	?_strncmp^0,w,c
  5508  00105A  1002               	iorwf	(?_strncmp+1)^0,w,c
  5509  00105C  A4D8               	btfss	status,2,c
  5510  00105E  EF33  F008         	goto	u5581
  5511  001062  EF36  F008         	goto	u5580
  5512  001066                     u5581:
  5513  001066  FFFF               	dw	65535	; assembler added errata NOP
  5514  001068  EF8D  F008         	goto	l4618
  5515  00106C                     u5580:
  5516  00106C                     l4608:
  5517  00106C  FFFF               	dw	65535	; assembler added errata NOP
  5518                           
  5519                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1250: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1252:             c = (*fmt)
      +                          [2];
  5520  00106E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5521  001072  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5522  001076  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  5523  00107A  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  5524  00107E  0E02               	movlw	2
  5525  001080  2649               	addwf	??_vfpfcnvrt^0,f,c
  5526  001082  0E00               	movlw	0
  5527  001084  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5528  001086  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5529  00108A  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5530  00108E                     	if	0	;tblptru may be non-zero
  5531  00108E                     	endif
  5532  00108E                     	if	0	;tblptru may be non-zero
  5533  00108E                     	endif
  5534  00108E  0008               	tblrd		*
  5535  001090  FFFF               	dw	65535	; errata NOP
  5536  001092  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  5537  001096                     
  5538                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1253:            
      +                           *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  5539  001096  0E03               	movlw	3
  5540  001098  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5541  00109C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5542  0010A0  26DE               	addwf	postinc2,f,c
  5543  0010A2  0E00               	movlw	0
  5544  0010A4  22DD               	addwfc	postdec2,f,c
  5545  0010A6                     
  5546                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1254:            
      +                           llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5547  0010A6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5548  0010AA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5549  0010AE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5550  0010B2  0E02               	movlw	2
  5551  0010B4  26DE               	addwf	postinc2,f,c
  5552  0010B6  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5553  0010BA  0E00               	movlw	0
  5554  0010BC  22DD               	addwfc	postdec2,f,c
  5555  0010BE  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5556  0010C2  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5557  0010C6  50DF               	movf	indf2,w,c
  5558  0010C8  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  5559  0010CA  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  5560  0010CC  6E60               	movwf	vfpfcnvrt@llu^0,c
  5561  0010CE  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  5562  0010D0  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5563  0010D2  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5564  0010D4  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5565  0010D6  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5566  0010D8  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5567  0010DA  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5568  0010DC                     l4614:
  5569  0010DC  FFFF               	dw	65535	; assembler added errata NOP
  5570                           
  5571                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1256:            
      +                           return xtoa(fp, llu, c);
  5572  0010DE  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  5573  0010E2  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5574  0010E6  C060  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  5575  0010EA  C061  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5576  0010EE  C062  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5577  0010F2  C063  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5578  0010F6  C064  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5579  0010FA  C065  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5580  0010FE  C066  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5581  001102  C067  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5582  001106  C05F  F026         	movff	vfpfcnvrt@c,xtoa@x
  5583  00110A  EC84  F018         	call	_xtoa	;wreg free
  5584  00110E  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  5585  001112  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5586  001116  EF2E  F00A         	goto	l1301
  5587  00111A                     l4618:
  5588  00111A  FFFF               	dw	65535	; assembler added errata NOP
  5589                           
  5590                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1262:         if 
      +                          (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", ((size
      +                          of("hX")/sizeof("hX"[0]))-1))) {
  5591  00111C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5592  001120  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5593  001124  CFDE F001          	movff	postinc2,strncmp@_l
  5594  001128  CFDD F002          	movff	postdec2,strncmp@_l+1
  5595  00112C  0EE4               	movlw	low (STR_83+1)
  5596  00112E  6E03               	movwf	strncmp@_r^0,c
  5597  001130  0E7F               	movlw	high (STR_83+1)
  5598  001132  6E04               	movwf	(strncmp@_r+1)^0,c
  5599  001134  0E00               	movlw	0
  5600  001136  6E06               	movwf	(strncmp@n+1)^0,c
  5601  001138  0E02               	movlw	2
  5602  00113A  6E05               	movwf	strncmp@n^0,c
  5603  00113C  ECBC  F03B         	call	_strncmp	;wreg free
  5604  001140  5001               	movf	?_strncmp^0,w,c
  5605  001142  1002               	iorwf	(?_strncmp+1)^0,w,c
  5606  001144  B4D8               	btfsc	status,2,c
  5607  001146  EFA7  F008         	goto	u5591
  5608  00114A  EFAA  F008         	goto	u5590
  5609  00114E                     u5591:
  5610  00114E  FFFF               	dw	65535	; assembler added errata NOP
  5611  001150  EFC7  F008         	goto	l4622
  5612  001154                     u5590:
  5613  001154  FFFF               	dw	65535	; assembler added errata NOP
  5614  001156  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5615  00115A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5616  00115E  CFDE F001          	movff	postinc2,strncmp@_l
  5617  001162  CFDD F002          	movff	postdec2,strncmp@_l+1
  5618  001166  0ECC               	movlw	low (STR_87+1)
  5619  001168  6E03               	movwf	strncmp@_r^0,c
  5620  00116A  0E7F               	movlw	high (STR_87+1)
  5621  00116C  6E04               	movwf	(strncmp@_r+1)^0,c
  5622  00116E  0E00               	movlw	0
  5623  001170  6E06               	movwf	(strncmp@n+1)^0,c
  5624  001172  0E02               	movlw	2
  5625  001174  6E05               	movwf	strncmp@n^0,c
  5626  001176  ECBC  F03B         	call	_strncmp	;wreg free
  5627  00117A  5001               	movf	?_strncmp^0,w,c
  5628  00117C  1002               	iorwf	(?_strncmp+1)^0,w,c
  5629  00117E  A4D8               	btfss	status,2,c
  5630  001180  EFC4  F008         	goto	u5601
  5631  001184  EFC7  F008         	goto	u5600
  5632  001188                     u5601:
  5633  001188  FFFF               	dw	65535	; assembler added errata NOP
  5634  00118A  EF04  F009         	goto	l4632
  5635  00118E                     u5600:
  5636  00118E                     l4622:
  5637  00118E  FFFF               	dw	65535	; assembler added errata NOP
  5638                           
  5639                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1263: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1265:             c = (*fmt)
      +                          [1];
  5640  001190  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5641  001194  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5642  001198  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  5643  00119C  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  5644  0011A0  0E01               	movlw	1
  5645  0011A2  2649               	addwf	??_vfpfcnvrt^0,f,c
  5646  0011A4  0E00               	movlw	0
  5647  0011A6  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5648  0011A8  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5649  0011AC  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5650  0011B0                     	if	0	;tblptru may be non-zero
  5651  0011B0                     	endif
  5652  0011B0                     	if	0	;tblptru may be non-zero
  5653  0011B0                     	endif
  5654  0011B0  0008               	tblrd		*
  5655  0011B2  FFFF               	dw	65535	; errata NOP
  5656  0011B4  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  5657  0011B8                     
  5658                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1266:            
      +                           *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  5659  0011B8  0E02               	movlw	2
  5660  0011BA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5661  0011BE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5662  0011C2  26DE               	addwf	postinc2,f,c
  5663  0011C4  0E00               	movlw	0
  5664  0011C6  22DD               	addwfc	postdec2,f,c
  5665  0011C8                     
  5666                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1267:            
      +                           llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5667  0011C8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5668  0011CC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5669  0011D0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5670  0011D4  0E02               	movlw	2
  5671  0011D6  26DE               	addwf	postinc2,f,c
  5672  0011D8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5673  0011DC  0E00               	movlw	0
  5674  0011DE  22DD               	addwfc	postdec2,f,c
  5675  0011E0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5676  0011E4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5677  0011E8  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5678  0011EC  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5679  0011F0  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5680  0011F4  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5681  0011F8  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5682  0011FA  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5683  0011FC  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5684  0011FE  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5685  001200  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5686  001202  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5687  001204  EF6E  F008         	goto	l4614
  5688  001208                     l4632:
  5689  001208  FFFF               	dw	65535	; assembler added errata NOP
  5690                           
  5691                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1274:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  5692  00120A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5693  00120E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5694  001212  CFDE FFF6          	movff	postinc2,tblptrl
  5695  001216  CFDD FFF7          	movff	postdec2,tblptrh
  5696  00121A                     	if	0	;tblptru may be non-zero
  5697  00121A                     	endif
  5698  00121A                     	if	0	;tblptru may be non-zero
  5699  00121A                     	endif
  5700  00121A  0008               	tblrd		*
  5701  00121C  FFFF               	dw	65535	; errata NOP
  5702  00121E  50F5               	movf	tablat,w,c
  5703  001220  0A78               	xorlw	120
  5704  001222  B4D8               	btfsc	status,2,c
  5705  001224  EF16  F009         	goto	u5611
  5706  001228  EF19  F009         	goto	u5610
  5707  00122C                     u5611:
  5708  00122C  FFFF               	dw	65535	; assembler added errata NOP
  5709  00122E  EF2E  F009         	goto	l4636
  5710  001232                     u5610:
  5711  001232  FFFF               	dw	65535	; assembler added errata NOP
  5712  001234  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5713  001238  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5714  00123C  CFDE FFF6          	movff	postinc2,tblptrl
  5715  001240  CFDD FFF7          	movff	postdec2,tblptrh
  5716  001244                     	if	0	;tblptru may be non-zero
  5717  001244                     	endif
  5718  001244                     	if	0	;tblptru may be non-zero
  5719  001244                     	endif
  5720  001244  0008               	tblrd		*
  5721  001246  FFFF               	dw	65535	; errata NOP
  5722  001248  50F5               	movf	tablat,w,c
  5723  00124A  0A58               	xorlw	88
  5724  00124C  A4D8               	btfss	status,2,c
  5725  00124E  EF2B  F009         	goto	u5621
  5726  001252  EF2E  F009         	goto	u5620
  5727  001256                     u5621:
  5728  001256  FFFF               	dw	65535	; assembler added errata NOP
  5729  001258  EF62  F009         	goto	l4646
  5730  00125C                     u5620:
  5731  00125C                     l4636:
  5732  00125C  FFFF               	dw	65535	; assembler added errata NOP
  5733                           
  5734                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1276:            
      +                           c = (*fmt)[0];
  5735  00125E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5736  001262  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5737  001266  CFDE FFF6          	movff	postinc2,tblptrl
  5738  00126A  CFDD FFF7          	movff	postdec2,tblptrh
  5739  00126E                     	if	0	;tblptru may be non-zero
  5740  00126E                     	endif
  5741  00126E                     	if	0	;tblptru may be non-zero
  5742  00126E                     	endif
  5743  00126E  0008               	tblrd		*
  5744  001270  FFFF               	dw	65535	; errata NOP
  5745  001272  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  5746  001276                     
  5747                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1277:            
      +                           ++*fmt;
  5748  001276  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5749  00127A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5750  00127E  2ADE               	incf	postinc2,f,c
  5751  001280  0E00               	movlw	0
  5752  001282  22DD               	addwfc	postdec2,f,c
  5753  001284                     
  5754                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1278:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  5755  001284  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5756  001288  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5757  00128C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5758  001290  0E02               	movlw	2
  5759  001292  26DE               	addwf	postinc2,f,c
  5760  001294  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5761  001298  0E00               	movlw	0
  5762  00129A  22DD               	addwfc	postdec2,f,c
  5763  00129C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5764  0012A0  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5765  0012A4  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5766  0012A8  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5767  0012AC  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5768  0012B0  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5769  0012B4  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5770  0012B6  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5771  0012B8  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5772  0012BA  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5773  0012BC  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5774  0012BE  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5775  0012C0  EF6E  F008         	goto	l4614
  5776  0012C4                     l4646:
  5777  0012C4  FFFF               	dw	65535	; assembler added errata NOP
  5778                           
  5779                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1337:         if 
      +                          (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", ((size
      +                          of("zX")/sizeof("zX"[0]))-1))) {
  5780  0012C6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5781  0012CA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5782  0012CE  CFDE F001          	movff	postinc2,strncmp@_l
  5783  0012D2  CFDD F002          	movff	postdec2,strncmp@_l+1
  5784  0012D6  0EF9               	movlw	low STR_101
  5785  0012D8  6E03               	movwf	strncmp@_r^0,c
  5786  0012DA  0E7F               	movlw	high STR_101
  5787  0012DC  6E04               	movwf	(strncmp@_r+1)^0,c
  5788  0012DE  0E00               	movlw	0
  5789  0012E0  6E06               	movwf	(strncmp@n+1)^0,c
  5790  0012E2  0E02               	movlw	2
  5791  0012E4  6E05               	movwf	strncmp@n^0,c
  5792  0012E6  ECBC  F03B         	call	_strncmp	;wreg free
  5793  0012EA  5001               	movf	?_strncmp^0,w,c
  5794  0012EC  1002               	iorwf	(?_strncmp+1)^0,w,c
  5795  0012EE  B4D8               	btfsc	status,2,c
  5796  0012F0  EF7C  F009         	goto	u5631
  5797  0012F4  EF7F  F009         	goto	u5630
  5798  0012F8                     u5631:
  5799  0012F8  FFFF               	dw	65535	; assembler added errata NOP
  5800  0012FA  EF9C  F009         	goto	l4650
  5801  0012FE                     u5630:
  5802  0012FE  FFFF               	dw	65535	; assembler added errata NOP
  5803  001300  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5804  001304  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5805  001308  CFDE F001          	movff	postinc2,strncmp@_l
  5806  00130C  CFDD F002          	movff	postdec2,strncmp@_l+1
  5807  001310  0EE7               	movlw	low STR_105
  5808  001312  6E03               	movwf	strncmp@_r^0,c
  5809  001314  0E7F               	movlw	high STR_105
  5810  001316  6E04               	movwf	(strncmp@_r+1)^0,c
  5811  001318  0E00               	movlw	0
  5812  00131A  6E06               	movwf	(strncmp@n+1)^0,c
  5813  00131C  0E02               	movlw	2
  5814  00131E  6E05               	movwf	strncmp@n^0,c
  5815  001320  ECBC  F03B         	call	_strncmp	;wreg free
  5816  001324  5001               	movf	?_strncmp^0,w,c
  5817  001326  1002               	iorwf	(?_strncmp+1)^0,w,c
  5818  001328  A4D8               	btfss	status,2,c
  5819  00132A  EF99  F009         	goto	u5641
  5820  00132E  EF9C  F009         	goto	u5640
  5821  001332                     u5641:
  5822  001332  FFFF               	dw	65535	; assembler added errata NOP
  5823  001334  EFD9  F009         	goto	l4660
  5824  001338                     u5640:
  5825  001338                     l4650:
  5826  001338  FFFF               	dw	65535	; assembler added errata NOP
  5827                           
  5828                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1338: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1340:             c = (*fmt)
      +                          [1];
  5829  00133A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5830  00133E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5831  001342  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  5832  001346  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  5833  00134A  0E01               	movlw	1
  5834  00134C  2649               	addwf	??_vfpfcnvrt^0,f,c
  5835  00134E  0E00               	movlw	0
  5836  001350  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5837  001352  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5838  001356  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5839  00135A                     	if	0	;tblptru may be non-zero
  5840  00135A                     	endif
  5841  00135A                     	if	0	;tblptru may be non-zero
  5842  00135A                     	endif
  5843  00135A  0008               	tblrd		*
  5844  00135C  FFFF               	dw	65535	; errata NOP
  5845  00135E  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  5846  001362                     
  5847                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1341:            
      +                           *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  5848  001362  0E02               	movlw	2
  5849  001364  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5850  001368  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5851  00136C  26DE               	addwf	postinc2,f,c
  5852  00136E  0E00               	movlw	0
  5853  001370  22DD               	addwfc	postdec2,f,c
  5854  001372                     
  5855                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1342:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5856  001372  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5857  001376  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5858  00137A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5859  00137E  0E02               	movlw	2
  5860  001380  26DE               	addwf	postinc2,f,c
  5861  001382  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5862  001386  0E00               	movlw	0
  5863  001388  22DD               	addwfc	postdec2,f,c
  5864  00138A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5865  00138E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5866  001392  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5867  001396  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5868  00139A  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5869  00139E  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5870  0013A2  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5871  0013A4  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5872  0013A6  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5873  0013A8  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5874  0013AA  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5875  0013AC  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5876  0013AE  EF6E  F008         	goto	l4614
  5877  0013B2                     l4660:
  5878  0013B2  FFFF               	dw	65535	; assembler added errata NOP
  5879                           
  5880                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  5881  0013B4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5882  0013B8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5883  0013BC  CFDE FFF6          	movff	postinc2,tblptrl
  5884  0013C0  CFDD FFF7          	movff	postdec2,tblptrh
  5885  0013C4                     	if	0	;tblptru may be non-zero
  5886  0013C4                     	endif
  5887  0013C4                     	if	0	;tblptru may be non-zero
  5888  0013C4                     	endif
  5889  0013C4  0008               	tblrd		*
  5890  0013C6  FFFF               	dw	65535	; errata NOP
  5891  0013C8  50F5               	movf	tablat,w,c
  5892  0013CA  0A25               	xorlw	37
  5893  0013CC  A4D8               	btfss	status,2,c
  5894  0013CE  EFEB  F009         	goto	u5651
  5895  0013D2  EFEE  F009         	goto	u5650
  5896  0013D6                     u5651:
  5897  0013D6  FFFF               	dw	65535	; assembler added errata NOP
  5898  0013D8  EF07  F00A         	goto	l4670
  5899  0013DC                     u5650:
  5900  0013DC  FFFF               	dw	65535	; assembler added errata NOP
  5901  0013DE                     
  5902                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  5903  0013DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5904  0013E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5905  0013E6  2ADE               	incf	postinc2,f,c
  5906  0013E8  0E00               	movlw	0
  5907  0013EA  22DD               	addwfc	postdec2,f,c
  5908  0013EC                     
  5909                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  5910  0013EC  0E00               	movlw	0
  5911  0013EE  6E02               	movwf	(fputc@c+1)^0,c
  5912  0013F0  0E25               	movlw	37
  5913  0013F2  6E01               	movwf	fputc@c^0,c
  5914  0013F4  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5915  0013F8  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5916  0013FC  ECED  F038         	call	_fputc	;wreg free
  5917  001400                     l4666:
  5918  001400  FFFF               	dw	65535	; assembler added errata NOP
  5919                           
  5920                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  5921  001402  0E00               	movlw	0
  5922  001404  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  5923  001406  0E01               	movlw	1
  5924  001408  6E43               	movwf	?_vfpfcnvrt^0,c
  5925  00140A  EF2E  F00A         	goto	l1301
  5926  00140E                     l4670:
  5927  00140E  FFFF               	dw	65535	; assembler added errata NOP
  5928                           
  5929                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  5930  001410  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5931  001414  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5932  001418  2ADE               	incf	postinc2,f,c
  5933  00141A  0E00               	movlw	0
  5934  00141C  22DD               	addwfc	postdec2,f,c
  5935  00141E  EF44  F005         	goto	l4522
  5936  001422                     l4676:
  5937  001422  FFFF               	dw	65535	; assembler added errata NOP
  5938                           
  5939                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  5940  001424  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5941  001428  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5942  00142C  CFDE FFF6          	movff	postinc2,tblptrl
  5943  001430  CFDD FFF7          	movff	postdec2,tblptrh
  5944  001434                     	if	0	;tblptru may be non-zero
  5945  001434                     	endif
  5946  001434                     	if	0	;tblptru may be non-zero
  5947  001434                     	endif
  5948  001434  0008               	tblrd		*
  5949  001436  FFFF               	dw	65535	; errata NOP
  5950  001438  50F5               	movf	tablat,w,c
  5951  00143A  6E01               	movwf	fputc@c^0,c
  5952  00143C  6A02               	clrf	(fputc@c+1)^0,c
  5953  00143E  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5954  001442  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5955  001446  ECED  F038         	call	_fputc	;wreg free
  5956  00144A                     
  5957                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  5958  00144A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5959  00144E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5960  001452  2ADE               	incf	postinc2,f,c
  5961  001454  0E00               	movlw	0
  5962  001456  22DD               	addwfc	postdec2,f,c
  5963  001458  EF00  F00A         	goto	l4666
  5964  00145C                     l1301:
  5965  00145C  FFFF               	dw	65535	; assembler added errata NOP
  5966  00145E  0012               	return		;funcret
  5967  001460  FFFF               	dw	65535	; errata NOP
  5968  001462                     __end_of_vfpfcnvrt:
  5969                           	callstack 0
  5970                           
  5971 ;; *************** function _xtoa *****************
  5972 ;; Defined at:
  5973 ;;		line 623 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  5974 ;; Parameters:    Size  Location     Type
  5975 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5976 ;;		 -> vsnprintf@f(6), 
  5977 ;;  d               8   29[COMRAM] unsigned long long 
  5978 ;;  x               1   37[COMRAM] unsigned char 
  5979 ;; Auto vars:     Size  Location     Type
  5980 ;;  n               8   54[COMRAM] unsigned long long 
  5981 ;;  c               2   64[COMRAM] int 
  5982 ;;  i               2   62[COMRAM] int 
  5983 ;;  w               2   52[COMRAM] int 
  5984 ;;  p               2   50[COMRAM] int 
  5985 ;; Return value:  Size  Location     Type
  5986 ;;                  2   27[COMRAM] int 
  5987 ;; Registers used:
  5988 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5989 ;; Tracked objects:
  5990 ;;		On entry : 0/0
  5991 ;;		On exit  : 0/0
  5992 ;;		Unchanged: 0/0
  5993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5994 ;;      Params:        11       0       0       0       0       0       0
  5995 ;;      Locals:        20       0       0       0       0       0       0
  5996 ;;      Temps:          8       0       0       0       0       0       0
  5997 ;;      Totals:        39       0       0       0       0       0       0
  5998 ;;Total ram usage:       39 bytes
  5999 ;; Hardware stack levels used:    1
  6000 ;; Hardware stack levels required when called:    5
  6001 ;; This function calls:
  6002 ;;		_isalpha
  6003 ;;		_isupper
  6004 ;;		_pad
  6005 ;;		_toupper
  6006 ;; This function is called by:
  6007 ;;		_vfpfcnvrt
  6008 ;; This function uses a non-reentrant model
  6009 ;;
  6010                           
  6011                           	psect	text9
  6012  003108                     __ptext9:
  6013                           	callstack 0
  6014  003108                     _xtoa:
  6015                           	callstack 0
  6016  003108  FFFF               	dw	65535	; assembler added errata NOP
  6017  00310A                     
  6018                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 623: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 624: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 625:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources
      +                          \c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0)) {
  6019  00310A  0100               	movlb	0	; () banked
  6020  00310C  BF89               	btfsc	(_prec+1)& (0+255),7,b
  6021  00310E  EF8B  F018         	goto	u4491
  6022  003112  EF8E  F018         	goto	u4490
  6023  003116                     u4491:
  6024  003116  FFFF               	dw	65535	; assembler added errata NOP
  6025  003118  EF90  F018         	goto	l4032
  6026  00311C                     u4490:
  6027  00311C  FFFF               	dw	65535	; assembler added errata NOP
  6028  00311E                     
  6029                           ; BSR set to: 0
  6030                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 630:         flag
      +                          s &= ~(1 << 1);
  6031  00311E  938A               	bcf	_flags& (0+255),1,b
  6032  003120                     l4032:
  6033  003120  FFFF               	dw	65535	; assembler added errata NOP
  6034                           
  6035                           ; BSR set to: 0
  6036                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 632:     p = (0 <
      +                           prec) ? prec : 1;
  6037  003122  BF89               	btfsc	(_prec+1)& (0+255),7,b
  6038  003124  EF9F  F018         	goto	u4500
  6039  003128  5189               	movf	(_prec+1)& (0+255),w,b
  6040  00312A  E106               	bnz	u4501
  6041  00312C  0588               	decf	_prec& (0+255),w,b
  6042  00312E  B0D8               	btfsc	status,0,c
  6043  003130  EF9C  F018         	goto	u4501
  6044  003134  EF9F  F018         	goto	u4500
  6045  003138                     u4501:
  6046  003138  FFFF               	dw	65535	; assembler added errata NOP
  6047  00313A  EFA6  F018         	goto	l1239
  6048  00313E                     u4500:
  6049  00313E  FFFF               	dw	65535	; assembler added errata NOP
  6050  003140                     
  6051                           ; BSR set to: 0
  6052  003140  0E00               	movlw	0
  6053  003142  6E34               	movwf	(xtoa@p+1)^0,c
  6054  003144  0E01               	movlw	1
  6055  003146  6E33               	movwf	xtoa@p^0,c
  6056  003148  EFAB  F018         	goto	l1241
  6057  00314C                     l1239:
  6058  00314C  FFFF               	dw	65535	; assembler added errata NOP
  6059                           
  6060                           ; BSR set to: 0
  6061  00314E  C088  F033         	movff	_prec,xtoa@p
  6062  003152  C089  F034         	movff	_prec+1,xtoa@p+1
  6063  003156                     l1241:
  6064  003156  FFFF               	dw	65535	; assembler added errata NOP
  6065                           
  6066                           ; BSR set to: 0
  6067                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 633:     w = widt
      +                          h;
  6068  003158  C086  F035         	movff	_width,xtoa@w
  6069  00315C  C087  F036         	movff	_width+1,xtoa@w+1
  6070                           
  6071                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 634:     if (flag
      +                          s & (1 << 4)) {
  6072  003160  A98A               	btfss	_flags& (0+255),4,b
  6073  003162  EFB5  F018         	goto	u4511
  6074  003166  EFB8  F018         	goto	u4510
  6075  00316A                     u4511:
  6076  00316A  FFFF               	dw	65535	; assembler added errata NOP
  6077  00316C  EFBD  F018         	goto	l4038
  6078  003170                     u4510:
  6079  003170  FFFF               	dw	65535	; assembler added errata NOP
  6080  003172                     
  6081                           ; BSR set to: 0
  6082                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 635:         w -=
      +                           2;
  6083  003172  0EFE               	movlw	254
  6084  003174  2635               	addwf	xtoa@w^0,f,c
  6085  003176  0EFF               	movlw	255
  6086  003178  2236               	addwfc	(xtoa@w+1)^0,f,c
  6087  00317A                     l4038:
  6088  00317A  FFFF               	dw	65535	; assembler added errata NOP
  6089                           
  6090                           ; BSR set to: 0
  6091                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 639:     n = d;
  6092  00317C  C01E  F037         	movff	xtoa@d,xtoa@n
  6093  003180  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  6094  003184  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  6095  003188  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  6096  00318C  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  6097  003190  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  6098  003194  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  6099  003198  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  6100  00319C                     
  6101                           ; BSR set to: 0
  6102                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 640:     i = size
      +                          of(dbuf) - 1;
  6103  00319C  0E00               	movlw	0
  6104  00319E  6E40               	movwf	(xtoa@i+1)^0,c
  6105  0031A0  0E1F               	movlw	31
  6106  0031A2  6E3F               	movwf	xtoa@i^0,c
  6107  0031A4                     
  6108                           ; BSR set to: 0
  6109                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 641:     dbuf[i] 
      +                          = '\0';
  6110  0031A4  0E00               	movlw	0
  6111  0031A6  6FB7               	movwf	(_dbuf+31)& (0+255),b
  6112                           
  6113                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6114  0031A8  EF9B  F019         	goto	l4074
  6115  0031AC                     l4044:
  6116  0031AC  FFFF               	dw	65535	; assembler added errata NOP
  6117                           
  6118                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 643:         --i;
  6119  0031AE  063F               	decf	xtoa@i^0,f,c
  6120  0031B0  A0D8               	btfss	status,0,c
  6121  0031B2  0640               	decf	(xtoa@i+1)^0,f,c
  6122  0031B4                     
  6123                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 644:         c = 
      +                          n & 0x0f;
  6124  0031B4  0E0F               	movlw	15
  6125  0031B6  1437               	andwf	xtoa@n^0,w,c
  6126  0031B8  6E41               	movwf	xtoa@c^0,c
  6127  0031BA  6A42               	clrf	(xtoa@c+1)^0,c
  6128  0031BC                     
  6129                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 645:         c = 
      +                          (c < 10) ? '0' + c : 'a' + (c - 10);
  6130  0031BC  BE42               	btfsc	(xtoa@c+1)^0,7,c
  6131  0031BE  EFEA  F018         	goto	u4521
  6132  0031C2  5042               	movf	(xtoa@c+1)^0,w,c
  6133  0031C4  E10A               	bnz	u4520
  6134  0031C6  0E0A               	movlw	10
  6135  0031C8  5C41               	subwf	xtoa@c^0,w,c
  6136  0031CA  A0D8               	btfss	status,0,c
  6137  0031CC  EFEA  F018         	goto	u4521
  6138  0031D0  EFED  F018         	goto	u4520
  6139  0031D4                     u4521:
  6140  0031D4  FFFF               	dw	65535	; assembler added errata NOP
  6141  0031D6  EFF6  F018         	goto	l4052
  6142  0031DA                     u4520:
  6143  0031DA  FFFF               	dw	65535	; assembler added errata NOP
  6144  0031DC  0E57               	movlw	87
  6145  0031DE  2441               	addwf	xtoa@c^0,w,c
  6146  0031E0  6E41               	movwf	xtoa@c^0,c
  6147  0031E2  0E00               	movlw	0
  6148  0031E4  2042               	addwfc	(xtoa@c+1)^0,w,c
  6149  0031E6  6E42               	movwf	(xtoa@c+1)^0,c
  6150  0031E8  EFFD  F018         	goto	l1248
  6151  0031EC                     l4052:
  6152  0031EC  FFFF               	dw	65535	; assembler added errata NOP
  6153  0031EE  0E30               	movlw	48
  6154  0031F0  2441               	addwf	xtoa@c^0,w,c
  6155  0031F2  6E41               	movwf	xtoa@c^0,c
  6156  0031F4  0E00               	movlw	0
  6157  0031F6  2042               	addwfc	(xtoa@c+1)^0,w,c
  6158  0031F8  6E42               	movwf	(xtoa@c+1)^0,c
  6159  0031FA                     l1248:
  6160  0031FA  FFFF               	dw	65535	; assembler added errata NOP
  6161  0031FC  0EBF               	movlw	191
  6162  0031FE  6E27               	movwf	??_xtoa^0,c
  6163  003200  0EFF               	movlw	255
  6164  003202  6E28               	movwf	(??_xtoa+1)^0,c
  6165  003204  5026               	movf	xtoa@x^0,w,c
  6166  003206  6E29               	movwf	(??_xtoa+2)^0,c
  6167  003208  6A2A               	clrf	(??_xtoa+3)^0,c
  6168  00320A  5027               	movf	??_xtoa^0,w,c
  6169  00320C  2629               	addwf	(??_xtoa+2)^0,f,c
  6170  00320E  5028               	movf	(??_xtoa+1)^0,w,c
  6171  003210  222A               	addwfc	(??_xtoa+3)^0,f,c
  6172  003212  502A               	movf	(??_xtoa+3)^0,w,c
  6173  003214  E10B               	bnz	u4530
  6174  003216  0E1A               	movlw	26
  6175  003218  5C29               	subwf	(??_xtoa+2)^0,w,c
  6176  00321A  A0D8               	btfss	status,0,c
  6177  00321C  EF12  F019         	goto	u4531
  6178  003220  EF16  F019         	goto	u4530
  6179  003224                     u4531:
  6180  003224  FFFF               	dw	65535	; assembler added errata NOP
  6181  003226  0E01               	movlw	1
  6182  003228  EF18  F019         	goto	u4540
  6183  00322C                     u4530:
  6184  00322C  FFFF               	dw	65535	; assembler added errata NOP
  6185  00322E  0E00               	movlw	0
  6186  003230                     u4540:
  6187  003230  FFFF               	dw	65535	; assembler added errata NOP
  6188  003232  6E2F               	movwf	_xtoa$1670^0,c
  6189  003234  6A30               	clrf	(_xtoa$1670+1)^0,c
  6190  003236  502F               	movf	_xtoa$1670^0,w,c
  6191  003238  1030               	iorwf	(_xtoa$1670+1)^0,w,c
  6192  00323A  B4D8               	btfsc	status,2,c
  6193  00323C  EF22  F019         	goto	u4551
  6194  003240  EF25  F019         	goto	u4550
  6195  003244                     u4551:
  6196  003244  FFFF               	dw	65535	; assembler added errata NOP
  6197  003246  EF5B  F019         	goto	l4066
  6198  00324A                     u4550:
  6199  00324A  FFFF               	dw	65535	; assembler added errata NOP
  6200  00324C  0E9F               	movlw	159
  6201  00324E  6E27               	movwf	??_xtoa^0,c
  6202  003250  0EFF               	movlw	255
  6203  003252  6E28               	movwf	(??_xtoa+1)^0,c
  6204  003254  0E20               	movlw	32
  6205  003256  1041               	iorwf	xtoa@c^0,w,c
  6206  003258  6E29               	movwf	(??_xtoa+2)^0,c
  6207  00325A  0E00               	movlw	0
  6208  00325C  1042               	iorwf	(xtoa@c+1)^0,w,c
  6209  00325E  6E2A               	movwf	(??_xtoa+3)^0,c
  6210  003260  5027               	movf	??_xtoa^0,w,c
  6211  003262  2629               	addwf	(??_xtoa+2)^0,f,c
  6212  003264  5028               	movf	(??_xtoa+1)^0,w,c
  6213  003266  222A               	addwfc	(??_xtoa+3)^0,f,c
  6214  003268  502A               	movf	(??_xtoa+3)^0,w,c
  6215  00326A  E10B               	bnz	u4560
  6216  00326C  0E1A               	movlw	26
  6217  00326E  5C29               	subwf	(??_xtoa+2)^0,w,c
  6218  003270  A0D8               	btfss	status,0,c
  6219  003272  EF3D  F019         	goto	u4561
  6220  003276  EF41  F019         	goto	u4560
  6221  00327A                     u4561:
  6222  00327A  FFFF               	dw	65535	; assembler added errata NOP
  6223  00327C  0E01               	movlw	1
  6224  00327E  EF43  F019         	goto	u4570
  6225  003282                     u4560:
  6226  003282  FFFF               	dw	65535	; assembler added errata NOP
  6227  003284  0E00               	movlw	0
  6228  003286                     u4570:
  6229  003286  FFFF               	dw	65535	; assembler added errata NOP
  6230  003288  6E31               	movwf	_xtoa$1671^0,c
  6231  00328A  6A32               	clrf	(_xtoa$1671+1)^0,c
  6232  00328C  5031               	movf	_xtoa$1671^0,w,c
  6233  00328E  1032               	iorwf	(_xtoa$1671+1)^0,w,c
  6234  003290  B4D8               	btfsc	status,2,c
  6235  003292  EF4D  F019         	goto	u4581
  6236  003296  EF50  F019         	goto	u4580
  6237  00329A                     u4581:
  6238  00329A  FFFF               	dw	65535	; assembler added errata NOP
  6239  00329C  EF5B  F019         	goto	l4066
  6240  0032A0                     u4580:
  6241  0032A0  FFFF               	dw	65535	; assembler added errata NOP
  6242  0032A2                     
  6243                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 647:             
      +                          c = toupper(c);
  6244  0032A2  C041  F007         	movff	xtoa@c,toupper@c
  6245  0032A6  C042  F008         	movff	xtoa@c+1,toupper@c+1
  6246  0032AA  EC89  F035         	call	_toupper	;wreg free
  6247  0032AE  C007  F041         	movff	?_toupper,xtoa@c
  6248  0032B2  C008  F042         	movff	?_toupper+1,xtoa@c+1
  6249  0032B6                     l4066:
  6250  0032B6  FFFF               	dw	65535	; assembler added errata NOP
  6251                           
  6252                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 649:         dbuf
      +                          [i] = (char)c;
  6253  0032B8  0E98               	movlw	low _dbuf
  6254  0032BA  243F               	addwf	xtoa@i^0,w,c
  6255  0032BC  6ED9               	movwf	fsr2l,c
  6256  0032BE  0E00               	movlw	high _dbuf
  6257  0032C0  2040               	addwfc	(xtoa@i+1)^0,w,c
  6258  0032C2  6EDA               	movwf	fsr2h,c
  6259  0032C4  C041  FFDF         	movff	xtoa@c,indf2
  6260  0032C8                     
  6261                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 650:         --p;
  6262  0032C8  0633               	decf	xtoa@p^0,f,c
  6263  0032CA  A0D8               	btfss	status,0,c
  6264  0032CC  0634               	decf	(xtoa@p+1)^0,f,c
  6265  0032CE                     
  6266                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 651:         --w;
  6267  0032CE  0635               	decf	xtoa@w^0,f,c
  6268  0032D0  A0D8               	btfss	status,0,c
  6269  0032D2  0636               	decf	(xtoa@w+1)^0,f,c
  6270  0032D4                     
  6271                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 652:         n = 
      +                          n >> 4;
  6272  0032D4  C037  F027         	movff	xtoa@n,??_xtoa
  6273  0032D8  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  6274  0032DC  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  6275  0032E0  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  6276  0032E4  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  6277  0032E8  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  6278  0032EC  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  6279  0032F0  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  6280  0032F4  0E05               	movlw	5
  6281  0032F6  EF87  F019         	goto	u4590
  6282  0032FA                     u4595:
  6283  0032FA  FFFF               	dw	65535	; assembler added errata NOP
  6284  0032FC  90D8               	bcf	status,0,c
  6285  0032FE  322E               	rrcf	(??_xtoa+7)^0,f,c
  6286  003300  322D               	rrcf	(??_xtoa+6)^0,f,c
  6287  003302  322C               	rrcf	(??_xtoa+5)^0,f,c
  6288  003304  322B               	rrcf	(??_xtoa+4)^0,f,c
  6289  003306  322A               	rrcf	(??_xtoa+3)^0,f,c
  6290  003308  3229               	rrcf	(??_xtoa+2)^0,f,c
  6291  00330A  3228               	rrcf	(??_xtoa+1)^0,f,c
  6292  00330C  3227               	rrcf	??_xtoa^0,f,c
  6293  00330E                     u4590:
  6294  00330E  FFFF               	dw	65535	; assembler added errata NOP
  6295  003310  2EE8               	decfsz	wreg,f,c
  6296  003312  EF7D  F019         	goto	u4595
  6297  003316  C027  F037         	movff	??_xtoa,xtoa@n
  6298  00331A  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  6299  00331E  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  6300  003322  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  6301  003326  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  6302  00332A  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  6303  00332E  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  6304  003332  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  6305  003336                     l4074:
  6306  003336  FFFF               	dw	65535	; assembler added errata NOP
  6307                           
  6308                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6309  003338  BE40               	btfsc	(xtoa@i+1)^0,7,c
  6310  00333A  EFA8  F019         	goto	u4601
  6311  00333E  5040               	movf	(xtoa@i+1)^0,w,c
  6312  003340  E10A               	bnz	u4600
  6313  003342  0E02               	movlw	2
  6314  003344  5C3F               	subwf	xtoa@i^0,w,c
  6315  003346  A0D8               	btfss	status,0,c
  6316  003348  EFA8  F019         	goto	u4601
  6317  00334C  EFAB  F019         	goto	u4600
  6318  003350                     u4601:
  6319  003350  FFFF               	dw	65535	; assembler added errata NOP
  6320  003352  EFE4  F019         	goto	l1262
  6321  003356                     u4600:
  6322  003356  FFFF               	dw	65535	; assembler added errata NOP
  6323  003358  5037               	movf	xtoa@n^0,w,c
  6324  00335A  1038               	iorwf	(xtoa@n+1)^0,w,c
  6325  00335C  1039               	iorwf	(xtoa@n+2)^0,w,c
  6326  00335E  103A               	iorwf	(xtoa@n+3)^0,w,c
  6327  003360  103B               	iorwf	(xtoa@n+4)^0,w,c
  6328  003362  103C               	iorwf	(xtoa@n+5)^0,w,c
  6329  003364  103D               	iorwf	(xtoa@n+6)^0,w,c
  6330  003366  103E               	iorwf	(xtoa@n+7)^0,w,c
  6331  003368  A4D8               	btfss	status,2,c
  6332  00336A  EFB9  F019         	goto	u4611
  6333  00336E  EFBC  F019         	goto	u4610
  6334  003372                     u4611:
  6335  003372  FFFF               	dw	65535	; assembler added errata NOP
  6336  003374  EFD6  F018         	goto	l4044
  6337  003378                     u4610:
  6338  003378  FFFF               	dw	65535	; assembler added errata NOP
  6339  00337A  BE34               	btfsc	(xtoa@p+1)^0,7,c
  6340  00337C  EFCB  F019         	goto	u4620
  6341  003380  5034               	movf	(xtoa@p+1)^0,w,c
  6342  003382  E106               	bnz	u4621
  6343  003384  0433               	decf	xtoa@p^0,w,c
  6344  003386  B0D8               	btfsc	status,0,c
  6345  003388  EFC8  F019         	goto	u4621
  6346  00338C  EFCB  F019         	goto	u4620
  6347  003390                     u4621:
  6348  003390  FFFF               	dw	65535	; assembler added errata NOP
  6349  003392  EFD6  F018         	goto	l4044
  6350  003396                     u4620:
  6351  003396  FFFF               	dw	65535	; assembler added errata NOP
  6352  003398  BE36               	btfsc	(xtoa@w+1)^0,7,c
  6353  00339A  EFD7  F019         	goto	u4631
  6354  00339E  5036               	movf	(xtoa@w+1)^0,w,c
  6355  0033A0  E109               	bnz	u4630
  6356  0033A2  0435               	decf	xtoa@w^0,w,c
  6357  0033A4  A0D8               	btfss	status,0,c
  6358  0033A6  EFD7  F019         	goto	u4631
  6359  0033AA  EFDA  F019         	goto	u4630
  6360  0033AE                     u4631:
  6361  0033AE  FFFF               	dw	65535	; assembler added errata NOP
  6362  0033B0  EFE4  F019         	goto	l1262
  6363  0033B4                     u4630:
  6364  0033B4  FFFF               	dw	65535	; assembler added errata NOP
  6365  0033B6  0100               	movlb	0	; () banked
  6366  0033B8  B38A               	btfsc	_flags& (0+255),1,b
  6367  0033BA  EFE1  F019         	goto	u4641
  6368  0033BE  EFE4  F019         	goto	u4640
  6369  0033C2                     u4641:
  6370  0033C2  FFFF               	dw	65535	; assembler added errata NOP
  6371  0033C4  EFD6  F018         	goto	l4044
  6372  0033C8                     u4640:
  6373  0033C8                     l1262:
  6374  0033C8  FFFF               	dw	65535	; assembler added errata NOP
  6375                           
  6376                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  6377  0033CA  0100               	movlb	0	; () banked
  6378  0033CC  A98A               	btfss	_flags& (0+255),4,b
  6379  0033CE  EFEB  F019         	goto	u4651
  6380  0033D2  EFEE  F019         	goto	u4650
  6381  0033D6                     u4651:
  6382  0033D6  FFFF               	dw	65535	; assembler added errata NOP
  6383  0033D8  EF05  F01A         	goto	l4090
  6384  0033DC                     u4650:
  6385  0033DC  FFFF               	dw	65535	; assembler added errata NOP
  6386  0033DE                     
  6387                           ; BSR set to: 0
  6388                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 657:         --i;
  6389  0033DE  063F               	decf	xtoa@i^0,f,c
  6390  0033E0  A0D8               	btfss	status,0,c
  6391  0033E2  0640               	decf	(xtoa@i+1)^0,f,c
  6392  0033E4                     
  6393                           ; BSR set to: 0
  6394                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 658:         dbuf
      +                          [i] = x;
  6395  0033E4  0E98               	movlw	low _dbuf
  6396  0033E6  243F               	addwf	xtoa@i^0,w,c
  6397  0033E8  6ED9               	movwf	fsr2l,c
  6398  0033EA  0E00               	movlw	high _dbuf
  6399  0033EC  2040               	addwfc	(xtoa@i+1)^0,w,c
  6400  0033EE  6EDA               	movwf	fsr2h,c
  6401  0033F0  C026  FFDF         	movff	xtoa@x,indf2
  6402  0033F4                     
  6403                           ; BSR set to: 0
  6404                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 659:         --i;
  6405  0033F4  063F               	decf	xtoa@i^0,f,c
  6406  0033F6  A0D8               	btfss	status,0,c
  6407  0033F8  0640               	decf	(xtoa@i+1)^0,f,c
  6408                           
  6409                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 660:         dbuf
      +                          [i] = '0';
  6410  0033FA  0E98               	movlw	low _dbuf
  6411  0033FC  243F               	addwf	xtoa@i^0,w,c
  6412  0033FE  6ED9               	movwf	fsr2l,c
  6413  003400  0E00               	movlw	high _dbuf
  6414  003402  2040               	addwfc	(xtoa@i+1)^0,w,c
  6415  003404  6EDA               	movwf	fsr2h,c
  6416  003406  0E30               	movlw	48
  6417  003408  6EDF               	movwf	indf2,c
  6418  00340A                     l4090:
  6419  00340A  FFFF               	dw	65535	; assembler added errata NOP
  6420                           
  6421                           ; BSR set to: 0
  6422                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 664:     return p
      +                          ad(fp, &dbuf[i], w);
  6423  00340C  C01C  F011         	movff	xtoa@fp,pad@fp
  6424  003410  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  6425  003414  0E98               	movlw	low _dbuf
  6426  003416  243F               	addwf	xtoa@i^0,w,c
  6427  003418  6E13               	movwf	pad@buf^0,c
  6428  00341A  0E00               	movlw	high _dbuf
  6429  00341C  2040               	addwfc	(xtoa@i+1)^0,w,c
  6430  00341E  6E14               	movwf	(pad@buf+1)^0,c
  6431  003420  C035  F015         	movff	xtoa@w,pad@p
  6432  003424  C036  F016         	movff	xtoa@w+1,pad@p+1
  6433  003428  EC5E  F039         	call	_pad	;wreg free
  6434  00342C  C011  F01C         	movff	?_pad,?_xtoa
  6435  003430  C012  F01D         	movff	?_pad+1,?_xtoa+1
  6436  003434  0012               	return		;funcret
  6437  003436  FFFF               	dw	65535	; errata NOP
  6438  003438                     __end_of_xtoa:
  6439                           	callstack 0
  6440                           
  6441 ;; *************** function _toupper *****************
  6442 ;; Defined at:
  6443 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\toupper.c"
  6444 ;; Parameters:    Size  Location     Type
  6445 ;;  c               2    6[COMRAM] int 
  6446 ;; Auto vars:     Size  Location     Type
  6447 ;;		None
  6448 ;; Return value:  Size  Location     Type
  6449 ;;                  2    6[COMRAM] int 
  6450 ;; Registers used:
  6451 ;;		wreg, status,2, status,0
  6452 ;; Tracked objects:
  6453 ;;		On entry : 0/0
  6454 ;;		On exit  : 0/0
  6455 ;;		Unchanged: 0/0
  6456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6457 ;;      Params:         2       0       0       0       0       0       0
  6458 ;;      Locals:         2       0       0       0       0       0       0
  6459 ;;      Temps:          4       0       0       0       0       0       0
  6460 ;;      Totals:         8       0       0       0       0       0       0
  6461 ;;Total ram usage:        8 bytes
  6462 ;; Hardware stack levels used:    1
  6463 ;; Hardware stack levels required when called:    2
  6464 ;; This function calls:
  6465 ;;		_islower
  6466 ;; This function is called by:
  6467 ;;		_xtoa
  6468 ;; This function uses a non-reentrant model
  6469 ;;
  6470                           
  6471                           	psect	text10
  6472  006B12                     __ptext10:
  6473                           	callstack 0
  6474  006B12                     _toupper:
  6475                           	callstack 0
  6476  006B12  FFFF               	dw	65535	; assembler added errata NOP
  6477  006B14  0E9F               	movlw	159
  6478  006B16  6E09               	movwf	??_toupper^0,c
  6479  006B18  0EFF               	movlw	255
  6480  006B1A  6E0A               	movwf	(??_toupper+1)^0,c
  6481  006B1C  C007  F00B         	movff	toupper@c,??_toupper+2
  6482  006B20  C008  F00C         	movff	toupper@c+1,??_toupper+3
  6483  006B24  5009               	movf	??_toupper^0,w,c
  6484  006B26  260B               	addwf	(??_toupper+2)^0,f,c
  6485  006B28  500A               	movf	(??_toupper+1)^0,w,c
  6486  006B2A  220C               	addwfc	(??_toupper+3)^0,f,c
  6487  006B2C  500C               	movf	(??_toupper+3)^0,w,c
  6488  006B2E  E10B               	bnz	u3990
  6489  006B30  0E1A               	movlw	26
  6490  006B32  5C0B               	subwf	(??_toupper+2)^0,w,c
  6491  006B34  A0D8               	btfss	status,0,c
  6492  006B36  EF9F  F035         	goto	u3991
  6493  006B3A  EFA3  F035         	goto	u3990
  6494  006B3E                     u3991:
  6495  006B3E  FFFF               	dw	65535	; assembler added errata NOP
  6496  006B40  0E01               	movlw	1
  6497  006B42  EFA5  F035         	goto	u4000
  6498  006B46                     u3990:
  6499  006B46  FFFF               	dw	65535	; assembler added errata NOP
  6500  006B48  0E00               	movlw	0
  6501  006B4A                     u4000:
  6502  006B4A  FFFF               	dw	65535	; assembler added errata NOP
  6503  006B4C  6E0D               	movwf	_toupper$1896^0,c
  6504  006B4E  6A0E               	clrf	(_toupper$1896+1)^0,c
  6505  006B50  500D               	movf	_toupper$1896^0,w,c
  6506  006B52  100E               	iorwf	(_toupper$1896+1)^0,w,c
  6507  006B54  B4D8               	btfsc	status,2,c
  6508  006B56  EFAF  F035         	goto	u4011
  6509  006B5A  EFB2  F035         	goto	u4010
  6510  006B5E                     u4011:
  6511  006B5E  FFFF               	dw	65535	; assembler added errata NOP
  6512  006B60  EFB9  F035         	goto	l1448
  6513  006B64                     u4010:
  6514  006B64  FFFF               	dw	65535	; assembler added errata NOP
  6515  006B66  0E5F               	movlw	95
  6516  006B68  1407               	andwf	toupper@c^0,w,c
  6517  006B6A  6E07               	movwf	?_toupper^0,c
  6518  006B6C  6A08               	clrf	(?_toupper+1)^0,c
  6519  006B6E  EFBE  F035         	goto	l1453
  6520  006B72                     l1448:
  6521  006B72  FFFF               	dw	65535	; assembler added errata NOP
  6522  006B74  C007  F007         	movff	toupper@c,?_toupper
  6523  006B78  C008  F008         	movff	toupper@c+1,?_toupper+1
  6524  006B7C                     l1453:
  6525  006B7C  FFFF               	dw	65535	; assembler added errata NOP
  6526  006B7E  0012               	return		;funcret
  6527  006B80  FFFF               	dw	65535	; errata NOP
  6528  006B82                     __end_of_toupper:
  6529                           	callstack 0
  6530                           
  6531 ;; *************** function _islower *****************
  6532 ;; Defined at:
  6533 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\islower.c"
  6534 ;; Parameters:    Size  Location     Type
  6535 ;;  c               2    0[COMRAM] int 
  6536 ;; Auto vars:     Size  Location     Type
  6537 ;;		None
  6538 ;; Return value:  Size  Location     Type
  6539 ;;                  2    0[COMRAM] int 
  6540 ;; Registers used:
  6541 ;;		wreg, status,2, status,0
  6542 ;; Tracked objects:
  6543 ;;		On entry : 0/0
  6544 ;;		On exit  : 0/0
  6545 ;;		Unchanged: 0/0
  6546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6547 ;;      Params:         2       0       0       0       0       0       0
  6548 ;;      Locals:         0       0       0       0       0       0       0
  6549 ;;      Temps:          4       0       0       0       0       0       0
  6550 ;;      Totals:         6       0       0       0       0       0       0
  6551 ;;Total ram usage:        6 bytes
  6552 ;; Hardware stack levels used:    1
  6553 ;; Hardware stack levels required when called:    1
  6554 ;; This function calls:
  6555 ;;		Nothing
  6556 ;; This function is called by:
  6557 ;;		_toupper
  6558 ;; This function uses a non-reentrant model
  6559 ;;
  6560                           
  6561                           	psect	text11
  6562  00681C                     __ptext11:
  6563                           	callstack 0
  6564  00681C                     _islower:
  6565                           	callstack 23
  6566  00681C  FFFF               	dw	65535	; assembler added errata NOP
  6567  00681E  0E9F               	movlw	159
  6568  006820  6E03               	movwf	??_islower^0,c
  6569  006822  0EFF               	movlw	255
  6570  006824  6E04               	movwf	(??_islower+1)^0,c
  6571  006826  C001  F005         	movff	islower@c,??_islower+2
  6572  00682A  C002  F006         	movff	islower@c+1,??_islower+3
  6573  00682E  5003               	movf	??_islower^0,w,c
  6574  006830  2605               	addwf	(??_islower+2)^0,f,c
  6575  006832  5004               	movf	(??_islower+1)^0,w,c
  6576  006834  2206               	addwfc	(??_islower+3)^0,f,c
  6577  006836  5006               	movf	(??_islower+3)^0,w,c
  6578  006838  E10B               	bnz	u3680
  6579  00683A  0E1A               	movlw	26
  6580  00683C  5C05               	subwf	(??_islower+2)^0,w,c
  6581  00683E  A0D8               	btfss	status,0,c
  6582  006840  EF24  F034         	goto	u3681
  6583  006844  EF28  F034         	goto	u3680
  6584  006848                     u3681:
  6585  006848  FFFF               	dw	65535	; assembler added errata NOP
  6586  00684A  0E01               	movlw	1
  6587  00684C  EF2A  F034         	goto	u3690
  6588  006850                     u3680:
  6589  006850  FFFF               	dw	65535	; assembler added errata NOP
  6590  006852  0E00               	movlw	0
  6591  006854                     u3690:
  6592  006854  FFFF               	dw	65535	; assembler added errata NOP
  6593  006856  6E01               	movwf	?_islower^0,c
  6594  006858  6A02               	clrf	(?_islower+1)^0,c
  6595  00685A  0012               	return		;funcret
  6596  00685C  FFFF               	dw	65535	; errata NOP
  6597  00685E                     __end_of_islower:
  6598                           	callstack 0
  6599                           
  6600 ;; *************** function _isupper *****************
  6601 ;; Defined at:
  6602 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  6603 ;; Parameters:    Size  Location     Type
  6604 ;;  c               2    0[COMRAM] int 
  6605 ;; Auto vars:     Size  Location     Type
  6606 ;;		None
  6607 ;; Return value:  Size  Location     Type
  6608 ;;                  2    0[COMRAM] int 
  6609 ;; Registers used:
  6610 ;;		wreg, status,2, status,0
  6611 ;; Tracked objects:
  6612 ;;		On entry : 0/0
  6613 ;;		On exit  : 0/0
  6614 ;;		Unchanged: 0/0
  6615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6616 ;;      Params:         2       0       0       0       0       0       0
  6617 ;;      Locals:         0       0       0       0       0       0       0
  6618 ;;      Temps:          4       0       0       0       0       0       0
  6619 ;;      Totals:         6       0       0       0       0       0       0
  6620 ;;Total ram usage:        6 bytes
  6621 ;; Hardware stack levels used:    1
  6622 ;; Hardware stack levels required when called:    1
  6623 ;; This function calls:
  6624 ;;		Nothing
  6625 ;; This function is called by:
  6626 ;;		_xtoa
  6627 ;; This function uses a non-reentrant model
  6628 ;;
  6629                           
  6630                           	psect	text12
  6631  0067DA                     __ptext12:
  6632                           	callstack 0
  6633  0067DA                     _isupper:
  6634                           	callstack 24
  6635  0067DA  FFFF               	dw	65535	; assembler added errata NOP
  6636  0067DC  0EBF               	movlw	191
  6637  0067DE  6E03               	movwf	??_isupper^0,c
  6638  0067E0  0EFF               	movlw	255
  6639  0067E2  6E04               	movwf	(??_isupper+1)^0,c
  6640  0067E4  C001  F005         	movff	isupper@c,??_isupper+2
  6641  0067E8  C002  F006         	movff	isupper@c+1,??_isupper+3
  6642  0067EC  5003               	movf	??_isupper^0,w,c
  6643  0067EE  2605               	addwf	(??_isupper+2)^0,f,c
  6644  0067F0  5004               	movf	(??_isupper+1)^0,w,c
  6645  0067F2  2206               	addwfc	(??_isupper+3)^0,f,c
  6646  0067F4  5006               	movf	(??_isupper+3)^0,w,c
  6647  0067F6  E10B               	bnz	u3950
  6648  0067F8  0E1A               	movlw	26
  6649  0067FA  5C05               	subwf	(??_isupper+2)^0,w,c
  6650  0067FC  A0D8               	btfss	status,0,c
  6651  0067FE  EF03  F034         	goto	u3951
  6652  006802  EF07  F034         	goto	u3950
  6653  006806                     u3951:
  6654  006806  FFFF               	dw	65535	; assembler added errata NOP
  6655  006808  0E01               	movlw	1
  6656  00680A  EF09  F034         	goto	u3960
  6657  00680E                     u3950:
  6658  00680E  FFFF               	dw	65535	; assembler added errata NOP
  6659  006810  0E00               	movlw	0
  6660  006812                     u3960:
  6661  006812  FFFF               	dw	65535	; assembler added errata NOP
  6662  006814  6E01               	movwf	?_isupper^0,c
  6663  006816  6A02               	clrf	(?_isupper+1)^0,c
  6664  006818  0012               	return		;funcret
  6665  00681A  FFFF               	dw	65535	; errata NOP
  6666  00681C                     __end_of_isupper:
  6667                           	callstack 0
  6668                           
  6669 ;; *************** function _isalpha *****************
  6670 ;; Defined at:
  6671 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isalpha.c"
  6672 ;; Parameters:    Size  Location     Type
  6673 ;;  c               2    0[COMRAM] int 
  6674 ;; Auto vars:     Size  Location     Type
  6675 ;;		None
  6676 ;; Return value:  Size  Location     Type
  6677 ;;                  2    0[COMRAM] int 
  6678 ;; Registers used:
  6679 ;;		wreg, status,2, status,0
  6680 ;; Tracked objects:
  6681 ;;		On entry : 0/0
  6682 ;;		On exit  : 0/0
  6683 ;;		Unchanged: 0/0
  6684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6685 ;;      Params:         2       0       0       0       0       0       0
  6686 ;;      Locals:         0       0       0       0       0       0       0
  6687 ;;      Temps:          4       0       0       0       0       0       0
  6688 ;;      Totals:         6       0       0       0       0       0       0
  6689 ;;Total ram usage:        6 bytes
  6690 ;; Hardware stack levels used:    1
  6691 ;; Hardware stack levels required when called:    1
  6692 ;; This function calls:
  6693 ;;		Nothing
  6694 ;; This function is called by:
  6695 ;;		_xtoa
  6696 ;; This function uses a non-reentrant model
  6697 ;;
  6698                           
  6699                           	psect	text13
  6700  00685E                     __ptext13:
  6701                           	callstack 0
  6702  00685E                     _isalpha:
  6703                           	callstack 24
  6704  00685E  FFFF               	dw	65535	; assembler added errata NOP
  6705  006860  0E9F               	movlw	159
  6706  006862  6E03               	movwf	??_isalpha^0,c
  6707  006864  0EFF               	movlw	255
  6708  006866  6E04               	movwf	(??_isalpha+1)^0,c
  6709  006868  0E20               	movlw	32
  6710  00686A  1001               	iorwf	isalpha@c^0,w,c
  6711  00686C  6E05               	movwf	(??_isalpha+2)^0,c
  6712  00686E  0E00               	movlw	0
  6713  006870  1002               	iorwf	(isalpha@c+1)^0,w,c
  6714  006872  6E06               	movwf	(??_isalpha+3)^0,c
  6715  006874  5003               	movf	??_isalpha^0,w,c
  6716  006876  2605               	addwf	(??_isalpha+2)^0,f,c
  6717  006878  5004               	movf	(??_isalpha+1)^0,w,c
  6718  00687A  2206               	addwfc	(??_isalpha+3)^0,f,c
  6719  00687C  5006               	movf	(??_isalpha+3)^0,w,c
  6720  00687E  E10B               	bnz	u3970
  6721  006880  0E1A               	movlw	26
  6722  006882  5C05               	subwf	(??_isalpha+2)^0,w,c
  6723  006884  A0D8               	btfss	status,0,c
  6724  006886  EF47  F034         	goto	u3971
  6725  00688A  EF4B  F034         	goto	u3970
  6726  00688E                     u3971:
  6727  00688E  FFFF               	dw	65535	; assembler added errata NOP
  6728  006890  0E01               	movlw	1
  6729  006892  EF4D  F034         	goto	u3980
  6730  006896                     u3970:
  6731  006896  FFFF               	dw	65535	; assembler added errata NOP
  6732  006898  0E00               	movlw	0
  6733  00689A                     u3980:
  6734  00689A  FFFF               	dw	65535	; assembler added errata NOP
  6735  00689C  6E01               	movwf	?_isalpha^0,c
  6736  00689E  6A02               	clrf	(?_isalpha+1)^0,c
  6737  0068A0  0012               	return		;funcret
  6738  0068A2  FFFF               	dw	65535	; errata NOP
  6739  0068A4                     __end_of_isalpha:
  6740                           	callstack 0
  6741                           
  6742 ;; *************** function _utoa *****************
  6743 ;; Defined at:
  6744 ;;		line 593 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6745 ;; Parameters:    Size  Location     Type
  6746 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6747 ;;		 -> vsnprintf@f(6), 
  6748 ;;  d               8   29[COMRAM] unsigned long long 
  6749 ;; Auto vars:     Size  Location     Type
  6750 ;;  n               8   49[COMRAM] unsigned long long 
  6751 ;;  i               2   57[COMRAM] int 
  6752 ;;  w               2   47[COMRAM] int 
  6753 ;;  p               2   45[COMRAM] int 
  6754 ;; Return value:  Size  Location     Type
  6755 ;;                  2   27[COMRAM] int 
  6756 ;; Registers used:
  6757 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6758 ;; Tracked objects:
  6759 ;;		On entry : 0/0
  6760 ;;		On exit  : 0/0
  6761 ;;		Unchanged: 0/0
  6762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6763 ;;      Params:        10       0       0       0       0       0       0
  6764 ;;      Locals:        14       0       0       0       0       0       0
  6765 ;;      Temps:          8       0       0       0       0       0       0
  6766 ;;      Totals:        32       0       0       0       0       0       0
  6767 ;;Total ram usage:       32 bytes
  6768 ;; Hardware stack levels used:    1
  6769 ;; Hardware stack levels required when called:    5
  6770 ;; This function calls:
  6771 ;;		___lodiv
  6772 ;;		___lomod
  6773 ;;		_pad
  6774 ;; This function is called by:
  6775 ;;		_vfpfcnvrt
  6776 ;; This function uses a non-reentrant model
  6777 ;;
  6778                           
  6779                           	psect	text14
  6780  003438                     __ptext14:
  6781                           	callstack 0
  6782  003438                     _utoa:
  6783                           	callstack 0
  6784  003438  FFFF               	dw	65535	; assembler added errata NOP
  6785  00343A                     
  6786                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 593: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99
      +                          \common\doprnt.c: 594: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\dop
      +                          rnt.c: 595:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common
      +                          \doprnt.c: 596:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sourc
      +                          es\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  6787  00343A  0100               	movlb	0	; () banked
  6788  00343C  BF89               	btfsc	(_prec+1)& (0+255),7,b
  6789  00343E  EF23  F01A         	goto	u4421
  6790  003442  EF26  F01A         	goto	u4420
  6791  003446                     u4421:
  6792  003446  FFFF               	dw	65535	; assembler added errata NOP
  6793  003448  EF28  F01A         	goto	l3996
  6794  00344C                     u4420:
  6795  00344C  FFFF               	dw	65535	; assembler added errata NOP
  6796  00344E                     
  6797                           ; BSR set to: 0
  6798                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 600:         flag
      +                          s &= ~(1 << 1);
  6799  00344E  938A               	bcf	_flags& (0+255),1,b
  6800  003450                     l3996:
  6801  003450  FFFF               	dw	65535	; assembler added errata NOP
  6802                           
  6803                           ; BSR set to: 0
  6804                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 602:     p = (0 <
      +                           prec) ? prec : 1;
  6805  003452  BF89               	btfsc	(_prec+1)& (0+255),7,b
  6806  003454  EF37  F01A         	goto	u4430
  6807  003458  5189               	movf	(_prec+1)& (0+255),w,b
  6808  00345A  E106               	bnz	u4431
  6809  00345C  0588               	decf	_prec& (0+255),w,b
  6810  00345E  B0D8               	btfsc	status,0,c
  6811  003460  EF34  F01A         	goto	u4431
  6812  003464  EF37  F01A         	goto	u4430
  6813  003468                     u4431:
  6814  003468  FFFF               	dw	65535	; assembler added errata NOP
  6815  00346A  EF3E  F01A         	goto	l1224
  6816  00346E                     u4430:
  6817  00346E  FFFF               	dw	65535	; assembler added errata NOP
  6818  003470                     
  6819                           ; BSR set to: 0
  6820  003470  0E00               	movlw	0
  6821  003472  6E2F               	movwf	(utoa@p+1)^0,c
  6822  003474  0E01               	movlw	1
  6823  003476  6E2E               	movwf	utoa@p^0,c
  6824  003478  EF43  F01A         	goto	l1226
  6825  00347C                     l1224:
  6826  00347C  FFFF               	dw	65535	; assembler added errata NOP
  6827                           
  6828                           ; BSR set to: 0
  6829  00347E  C088  F02E         	movff	_prec,utoa@p
  6830  003482  C089  F02F         	movff	_prec+1,utoa@p+1
  6831  003486                     l1226:
  6832  003486  FFFF               	dw	65535	; assembler added errata NOP
  6833                           
  6834                           ; BSR set to: 0
  6835                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 603:     w = widt
      +                          h;
  6836  003488  C086  F030         	movff	_width,utoa@w
  6837  00348C  C087  F031         	movff	_width+1,utoa@w+1
  6838                           
  6839                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 606:     n = d;
  6840  003490  C01E  F032         	movff	utoa@d,utoa@n
  6841  003494  C01F  F033         	movff	utoa@d+1,utoa@n+1
  6842  003498  C020  F034         	movff	utoa@d+2,utoa@n+2
  6843  00349C  C021  F035         	movff	utoa@d+3,utoa@n+3
  6844  0034A0  C022  F036         	movff	utoa@d+4,utoa@n+4
  6845  0034A4  C023  F037         	movff	utoa@d+5,utoa@n+5
  6846  0034A8  C024  F038         	movff	utoa@d+6,utoa@n+6
  6847  0034AC  C025  F039         	movff	utoa@d+7,utoa@n+7
  6848  0034B0                     
  6849                           ; BSR set to: 0
  6850                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 607:     i = size
      +                          of(dbuf) - 1;
  6851  0034B0  0E00               	movlw	0
  6852  0034B2  6E3B               	movwf	(utoa@i+1)^0,c
  6853  0034B4  0E1F               	movlw	31
  6854  0034B6  6E3A               	movwf	utoa@i^0,c
  6855  0034B8                     
  6856                           ; BSR set to: 0
  6857                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 608:     dbuf[i] 
      +                          = '\0';
  6858  0034B8  0E00               	movlw	0
  6859  0034BA  6FB7               	movwf	(_dbuf+31)& (0+255),b
  6860                           
  6861                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 609:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6862  0034BC  EFD7  F01A         	goto	l4014
  6863  0034C0                     l4004:
  6864  0034C0  FFFF               	dw	65535	; assembler added errata NOP
  6865                           
  6866                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 610:         --i;
  6867  0034C2  063A               	decf	utoa@i^0,f,c
  6868  0034C4  A0D8               	btfss	status,0,c
  6869  0034C6  063B               	decf	(utoa@i+1)^0,f,c
  6870  0034C8                     
  6871                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 611:         dbuf
      +                          [i] = '0' + (n % 10);
  6872  0034C8  0E98               	movlw	low _dbuf
  6873  0034CA  243A               	addwf	utoa@i^0,w,c
  6874  0034CC  6ED9               	movwf	fsr2l,c
  6875  0034CE  0E00               	movlw	high _dbuf
  6876  0034D0  203B               	addwfc	(utoa@i+1)^0,w,c
  6877  0034D2  6EDA               	movwf	fsr2h,c
  6878  0034D4  C032  F001         	movff	utoa@n,___lomod@dividend
  6879  0034D8  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  6880  0034DC  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  6881  0034E0  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  6882  0034E4  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  6883  0034E8  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  6884  0034EC  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  6885  0034F0  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  6886  0034F4  0E0A               	movlw	10
  6887  0034F6  6E09               	movwf	___lomod@divisor^0,c
  6888  0034F8  0E00               	movlw	0
  6889  0034FA  6E0A               	movwf	(___lomod@divisor+1)^0,c
  6890  0034FC  0E00               	movlw	0
  6891  0034FE  6E0B               	movwf	(___lomod@divisor+2)^0,c
  6892  003500  0E00               	movlw	0
  6893  003502  6E0C               	movwf	(___lomod@divisor+3)^0,c
  6894  003504  0E00               	movlw	0
  6895  003506  6E0D               	movwf	(___lomod@divisor+4)^0,c
  6896  003508  0E00               	movlw	0
  6897  00350A  6E0E               	movwf	(___lomod@divisor+5)^0,c
  6898  00350C  0E00               	movlw	0
  6899  00350E  6E0F               	movwf	(___lomod@divisor+6)^0,c
  6900  003510  0E00               	movlw	0
  6901  003512  6E10               	movwf	(___lomod@divisor+7)^0,c
  6902  003514  ECD1  F039         	call	___lomod	;wreg free
  6903  003518  C001  F026         	movff	?___lomod,??_utoa
  6904  00351C  C002  F027         	movff	?___lomod+1,??_utoa+1
  6905  003520  C003  F028         	movff	?___lomod+2,??_utoa+2
  6906  003524  C004  F029         	movff	?___lomod+3,??_utoa+3
  6907  003528  C005  F02A         	movff	?___lomod+4,??_utoa+4
  6908  00352C  C006  F02B         	movff	?___lomod+5,??_utoa+5
  6909  003530  C007  F02C         	movff	?___lomod+6,??_utoa+6
  6910  003534  C008  F02D         	movff	?___lomod+7,??_utoa+7
  6911  003538  5026               	movf	??_utoa^0,w,c
  6912  00353A  0F30               	addlw	48
  6913  00353C  6EDF               	movwf	indf2,c
  6914  00353E                     
  6915                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 612:         --p;
  6916  00353E  062E               	decf	utoa@p^0,f,c
  6917  003540  A0D8               	btfss	status,0,c
  6918  003542  062F               	decf	(utoa@p+1)^0,f,c
  6919  003544                     
  6920                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 613:         --w;
  6921  003544  0630               	decf	utoa@w^0,f,c
  6922  003546  A0D8               	btfss	status,0,c
  6923  003548  0631               	decf	(utoa@w+1)^0,f,c
  6924  00354A                     
  6925                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 614:         n = 
      +                          n / 10;
  6926  00354A  C032  F001         	movff	utoa@n,___lodiv@dividend
  6927  00354E  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  6928  003552  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  6929  003556  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  6930  00355A  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  6931  00355E  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  6932  003562  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  6933  003566  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  6934  00356A  0E0A               	movlw	10
  6935  00356C  6E09               	movwf	___lodiv@divisor^0,c
  6936  00356E  0E00               	movlw	0
  6937  003570  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  6938  003572  0E00               	movlw	0
  6939  003574  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  6940  003576  0E00               	movlw	0
  6941  003578  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  6942  00357A  0E00               	movlw	0
  6943  00357C  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  6944  00357E  0E00               	movlw	0
  6945  003580  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  6946  003582  0E00               	movlw	0
  6947  003584  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  6948  003586  0E00               	movlw	0
  6949  003588  6E10               	movwf	(___lodiv@divisor+7)^0,c
  6950  00358A  EC40  F03C         	call	___lodiv	;wreg free
  6951  00358E  C001  F032         	movff	?___lodiv,utoa@n
  6952  003592  C002  F033         	movff	?___lodiv+1,utoa@n+1
  6953  003596  C003  F034         	movff	?___lodiv+2,utoa@n+2
  6954  00359A  C004  F035         	movff	?___lodiv+3,utoa@n+3
  6955  00359E  C005  F036         	movff	?___lodiv+4,utoa@n+4
  6956  0035A2  C006  F037         	movff	?___lodiv+5,utoa@n+5
  6957  0035A6  C007  F038         	movff	?___lodiv+6,utoa@n+6
  6958  0035AA  C008  F039         	movff	?___lodiv+7,utoa@n+7
  6959  0035AE                     l4014:
  6960  0035AE  FFFF               	dw	65535	; assembler added errata NOP
  6961                           
  6962                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 609:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6963  0035B0  503A               	movf	utoa@i^0,w,c
  6964  0035B2  103B               	iorwf	(utoa@i+1)^0,w,c
  6965  0035B4  B4D8               	btfsc	status,2,c
  6966  0035B6  EFDF  F01A         	goto	u4441
  6967  0035BA  EFE2  F01A         	goto	u4440
  6968  0035BE                     u4441:
  6969  0035BE  FFFF               	dw	65535	; assembler added errata NOP
  6970  0035C0  EF1B  F01B         	goto	l4024
  6971  0035C4                     u4440:
  6972  0035C4  FFFF               	dw	65535	; assembler added errata NOP
  6973  0035C6  5032               	movf	utoa@n^0,w,c
  6974  0035C8  1033               	iorwf	(utoa@n+1)^0,w,c
  6975  0035CA  1034               	iorwf	(utoa@n+2)^0,w,c
  6976  0035CC  1035               	iorwf	(utoa@n+3)^0,w,c
  6977  0035CE  1036               	iorwf	(utoa@n+4)^0,w,c
  6978  0035D0  1037               	iorwf	(utoa@n+5)^0,w,c
  6979  0035D2  1038               	iorwf	(utoa@n+6)^0,w,c
  6980  0035D4  1039               	iorwf	(utoa@n+7)^0,w,c
  6981  0035D6  A4D8               	btfss	status,2,c
  6982  0035D8  EFF0  F01A         	goto	u4451
  6983  0035DC  EFF3  F01A         	goto	u4450
  6984  0035E0                     u4451:
  6985  0035E0  FFFF               	dw	65535	; assembler added errata NOP
  6986  0035E2  EF60  F01A         	goto	l4004
  6987  0035E6                     u4450:
  6988  0035E6  FFFF               	dw	65535	; assembler added errata NOP
  6989  0035E8  BE2F               	btfsc	(utoa@p+1)^0,7,c
  6990  0035EA  EF02  F01B         	goto	u4460
  6991  0035EE  502F               	movf	(utoa@p+1)^0,w,c
  6992  0035F0  E106               	bnz	u4461
  6993  0035F2  042E               	decf	utoa@p^0,w,c
  6994  0035F4  B0D8               	btfsc	status,0,c
  6995  0035F6  EFFF  F01A         	goto	u4461
  6996  0035FA  EF02  F01B         	goto	u4460
  6997  0035FE                     u4461:
  6998  0035FE  FFFF               	dw	65535	; assembler added errata NOP
  6999  003600  EF60  F01A         	goto	l4004
  7000  003604                     u4460:
  7001  003604  FFFF               	dw	65535	; assembler added errata NOP
  7002  003606  BE31               	btfsc	(utoa@w+1)^0,7,c
  7003  003608  EF0E  F01B         	goto	u4471
  7004  00360C  5031               	movf	(utoa@w+1)^0,w,c
  7005  00360E  E109               	bnz	u4470
  7006  003610  0430               	decf	utoa@w^0,w,c
  7007  003612  A0D8               	btfss	status,0,c
  7008  003614  EF0E  F01B         	goto	u4471
  7009  003618  EF11  F01B         	goto	u4470
  7010  00361C                     u4471:
  7011  00361C  FFFF               	dw	65535	; assembler added errata NOP
  7012  00361E  EF1B  F01B         	goto	l4024
  7013  003622                     u4470:
  7014  003622  FFFF               	dw	65535	; assembler added errata NOP
  7015  003624  0100               	movlb	0	; () banked
  7016  003626  B38A               	btfsc	_flags& (0+255),1,b
  7017  003628  EF18  F01B         	goto	u4481
  7018  00362C  EF1B  F01B         	goto	u4480
  7019  003630                     u4481:
  7020  003630  FFFF               	dw	65535	; assembler added errata NOP
  7021  003632  EF60  F01A         	goto	l4004
  7022  003636                     u4480:
  7023  003636                     l4024:
  7024  003636  FFFF               	dw	65535	; assembler added errata NOP
  7025                           
  7026                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 618:     return p
      +                          ad(fp, &dbuf[i], w);
  7027  003638  C01C  F011         	movff	utoa@fp,pad@fp
  7028  00363C  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  7029  003640  0E98               	movlw	low _dbuf
  7030  003642  243A               	addwf	utoa@i^0,w,c
  7031  003644  6E13               	movwf	pad@buf^0,c
  7032  003646  0E00               	movlw	high _dbuf
  7033  003648  203B               	addwfc	(utoa@i+1)^0,w,c
  7034  00364A  6E14               	movwf	(pad@buf+1)^0,c
  7035  00364C  C030  F015         	movff	utoa@w,pad@p
  7036  003650  C031  F016         	movff	utoa@w+1,pad@p+1
  7037  003654  EC5E  F039         	call	_pad	;wreg free
  7038  003658  C011  F01C         	movff	?_pad,?_utoa
  7039  00365C  C012  F01D         	movff	?_pad+1,?_utoa+1
  7040  003660  0012               	return		;funcret
  7041  003662  FFFF               	dw	65535	; errata NOP
  7042  003664                     __end_of_utoa:
  7043                           	callstack 0
  7044                           
  7045 ;; *************** function ___lomod *****************
  7046 ;; Defined at:
  7047 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lomod.c"
  7048 ;; Parameters:    Size  Location     Type
  7049 ;;  dividend        8    0[COMRAM] unsigned long long 
  7050 ;;  divisor         8    8[COMRAM] unsigned long long 
  7051 ;; Auto vars:     Size  Location     Type
  7052 ;;  counter         1   16[COMRAM] unsigned char 
  7053 ;; Return value:  Size  Location     Type
  7054 ;;                  8    0[COMRAM] unsigned long long 
  7055 ;; Registers used:
  7056 ;;		wreg, status,2, status,0
  7057 ;; Tracked objects:
  7058 ;;		On entry : 0/0
  7059 ;;		On exit  : 0/0
  7060 ;;		Unchanged: 0/0
  7061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7062 ;;      Params:        16       0       0       0       0       0       0
  7063 ;;      Locals:         1       0       0       0       0       0       0
  7064 ;;      Temps:          0       0       0       0       0       0       0
  7065 ;;      Totals:        17       0       0       0       0       0       0
  7066 ;;Total ram usage:       17 bytes
  7067 ;; Hardware stack levels used:    1
  7068 ;; Hardware stack levels required when called:    1
  7069 ;; This function calls:
  7070 ;;		Nothing
  7071 ;; This function is called by:
  7072 ;;		_utoa
  7073 ;; This function uses a non-reentrant model
  7074 ;;
  7075                           
  7076                           	psect	text15
  7077  0073A2                     __ptext15:
  7078                           	callstack 0
  7079  0073A2                     ___lomod:
  7080                           	callstack 0
  7081  0073A2  FFFF               	dw	65535	; assembler added errata NOP
  7082  0073A4  5009               	movf	___lomod@divisor^0,w,c
  7083  0073A6  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  7084  0073A8  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  7085  0073AA  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  7086  0073AC  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  7087  0073AE  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  7088  0073B0  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  7089  0073B2  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  7090  0073B4  B4D8               	btfsc	status,2,c
  7091  0073B6  EFDF  F039         	goto	u3881
  7092  0073BA  EFE2  F039         	goto	u3880
  7093  0073BE                     u3881:
  7094  0073BE  FFFF               	dw	65535	; assembler added errata NOP
  7095  0073C0  EF33  F03A         	goto	l836
  7096  0073C4                     u3880:
  7097  0073C4  FFFF               	dw	65535	; assembler added errata NOP
  7098  0073C6  0E01               	movlw	1
  7099  0073C8  6E11               	movwf	___lomod@counter^0,c
  7100  0073CA  EFF2  F039         	goto	l3760
  7101  0073CE                     l3758:
  7102  0073CE  FFFF               	dw	65535	; assembler added errata NOP
  7103  0073D0  90D8               	bcf	status,0,c
  7104  0073D2  3609               	rlcf	___lomod@divisor^0,f,c
  7105  0073D4  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  7106  0073D6  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  7107  0073D8  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  7108  0073DA  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  7109  0073DC  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  7110  0073DE  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  7111  0073E0  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  7112  0073E2  2A11               	incf	___lomod@counter^0,f,c
  7113  0073E4                     l3760:
  7114  0073E4  FFFF               	dw	65535	; assembler added errata NOP
  7115  0073E6  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  7116  0073E8  EFF8  F039         	goto	u3891
  7117  0073EC  EFFB  F039         	goto	u3890
  7118  0073F0                     u3891:
  7119  0073F0  FFFF               	dw	65535	; assembler added errata NOP
  7120  0073F2  EFE7  F039         	goto	l3758
  7121  0073F6                     u3890:
  7122  0073F6  FFFF               	dw	65535	; assembler added errata NOP
  7123  0073F8                     l3762:
  7124  0073F8  FFFF               	dw	65535	; assembler added errata NOP
  7125  0073FA  5009               	movf	___lomod@divisor^0,w,c
  7126  0073FC  5C01               	subwf	___lomod@dividend^0,w,c
  7127  0073FE  500A               	movf	(___lomod@divisor+1)^0,w,c
  7128  007400  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  7129  007402  500B               	movf	(___lomod@divisor+2)^0,w,c
  7130  007404  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  7131  007406  500C               	movf	(___lomod@divisor+3)^0,w,c
  7132  007408  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  7133  00740A  500D               	movf	(___lomod@divisor+4)^0,w,c
  7134  00740C  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  7135  00740E  500E               	movf	(___lomod@divisor+5)^0,w,c
  7136  007410  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  7137  007412  500F               	movf	(___lomod@divisor+6)^0,w,c
  7138  007414  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  7139  007416  5010               	movf	(___lomod@divisor+7)^0,w,c
  7140  007418  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  7141  00741A  A0D8               	btfss	status,0,c
  7142  00741C  EF12  F03A         	goto	u3901
  7143  007420  EF15  F03A         	goto	u3900
  7144  007424                     u3901:
  7145  007424  FFFF               	dw	65535	; assembler added errata NOP
  7146  007426  EF26  F03A         	goto	l3766
  7147  00742A                     u3900:
  7148  00742A  FFFF               	dw	65535	; assembler added errata NOP
  7149  00742C  5009               	movf	___lomod@divisor^0,w,c
  7150  00742E  5E01               	subwf	___lomod@dividend^0,f,c
  7151  007430  500A               	movf	(___lomod@divisor+1)^0,w,c
  7152  007432  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  7153  007434  500B               	movf	(___lomod@divisor+2)^0,w,c
  7154  007436  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  7155  007438  500C               	movf	(___lomod@divisor+3)^0,w,c
  7156  00743A  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  7157  00743C  500D               	movf	(___lomod@divisor+4)^0,w,c
  7158  00743E  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  7159  007440  500E               	movf	(___lomod@divisor+5)^0,w,c
  7160  007442  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  7161  007444  500F               	movf	(___lomod@divisor+6)^0,w,c
  7162  007446  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  7163  007448  5010               	movf	(___lomod@divisor+7)^0,w,c
  7164  00744A  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  7165  00744C                     l3766:
  7166  00744C  FFFF               	dw	65535	; assembler added errata NOP
  7167  00744E  90D8               	bcf	status,0,c
  7168  007450  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  7169  007452  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  7170  007454  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  7171  007456  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  7172  007458  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  7173  00745A  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  7174  00745C  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  7175  00745E  3209               	rrcf	___lomod@divisor^0,f,c
  7176  007460  2E11               	decfsz	___lomod@counter^0,f,c
  7177  007462  EFFC  F039         	goto	l3762
  7178  007466                     l836:
  7179  007466  FFFF               	dw	65535	; assembler added errata NOP
  7180  007468  C001  F001         	movff	___lomod@dividend,?___lomod
  7181  00746C  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  7182  007470  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  7183  007474  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  7184  007478  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  7185  00747C  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  7186  007480  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  7187  007484  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  7188  007488  0012               	return		;funcret
  7189  00748A  FFFF               	dw	65535	; errata NOP
  7190  00748C                     __end_of___lomod:
  7191                           	callstack 0
  7192                           
  7193 ;; *************** function ___lodiv *****************
  7194 ;; Defined at:
  7195 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lodiv.c"
  7196 ;; Parameters:    Size  Location     Type
  7197 ;;  dividend        8    0[COMRAM] unsigned long long 
  7198 ;;  divisor         8    8[COMRAM] unsigned long long 
  7199 ;; Auto vars:     Size  Location     Type
  7200 ;;  quotient        8   16[COMRAM] unsigned long long 
  7201 ;;  counter         1   24[COMRAM] unsigned char 
  7202 ;; Return value:  Size  Location     Type
  7203 ;;                  8    0[COMRAM] unsigned long long 
  7204 ;; Registers used:
  7205 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7206 ;; Tracked objects:
  7207 ;;		On entry : 0/0
  7208 ;;		On exit  : 0/0
  7209 ;;		Unchanged: 0/0
  7210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7211 ;;      Params:        16       0       0       0       0       0       0
  7212 ;;      Locals:         9       0       0       0       0       0       0
  7213 ;;      Temps:          0       0       0       0       0       0       0
  7214 ;;      Totals:        25       0       0       0       0       0       0
  7215 ;;Total ram usage:       25 bytes
  7216 ;; Hardware stack levels used:    1
  7217 ;; Hardware stack levels required when called:    1
  7218 ;; This function calls:
  7219 ;;		Nothing
  7220 ;; This function is called by:
  7221 ;;		_utoa
  7222 ;; This function uses a non-reentrant model
  7223 ;;
  7224                           
  7225                           	psect	text16
  7226  007880                     __ptext16:
  7227                           	callstack 0
  7228  007880                     ___lodiv:
  7229                           	callstack 0
  7230  007880  FFFF               	dw	65535	; assembler added errata NOP
  7231  007882  EE20  F011         	lfsr	2,___lodiv@quotient
  7232  007886  0E07               	movlw	7
  7233  007888                     u3841:
  7234  007888  6ADE               	clrf	postinc2,c
  7235  00788A  06E8               	decf	wreg,f,c
  7236  00788C  E2FD               	bc	u3841
  7237  00788E  5009               	movf	___lodiv@divisor^0,w,c
  7238  007890  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  7239  007892  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  7240  007894  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  7241  007896  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  7242  007898  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  7243  00789A  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  7244  00789C  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  7245  00789E  B4D8               	btfsc	status,2,c
  7246  0078A0  EF54  F03C         	goto	u3851
  7247  0078A4  EF57  F03C         	goto	u3850
  7248  0078A8                     u3851:
  7249  0078A8  FFFF               	dw	65535	; assembler added errata NOP
  7250  0078AA  EFB2  F03C         	goto	l826
  7251  0078AE                     u3850:
  7252  0078AE  FFFF               	dw	65535	; assembler added errata NOP
  7253  0078B0  0E01               	movlw	1
  7254  0078B2  6E19               	movwf	___lodiv@counter^0,c
  7255  0078B4  EF67  F03C         	goto	l3740
  7256  0078B8                     l3738:
  7257  0078B8  FFFF               	dw	65535	; assembler added errata NOP
  7258  0078BA  90D8               	bcf	status,0,c
  7259  0078BC  3609               	rlcf	___lodiv@divisor^0,f,c
  7260  0078BE  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  7261  0078C0  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  7262  0078C2  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  7263  0078C4  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  7264  0078C6  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  7265  0078C8  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  7266  0078CA  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  7267  0078CC  2A19               	incf	___lodiv@counter^0,f,c
  7268  0078CE                     l3740:
  7269  0078CE  FFFF               	dw	65535	; assembler added errata NOP
  7270  0078D0  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  7271  0078D2  EF6D  F03C         	goto	u3861
  7272  0078D6  EF70  F03C         	goto	u3860
  7273  0078DA                     u3861:
  7274  0078DA  FFFF               	dw	65535	; assembler added errata NOP
  7275  0078DC  EF5C  F03C         	goto	l3738
  7276  0078E0                     u3860:
  7277  0078E0  FFFF               	dw	65535	; assembler added errata NOP
  7278  0078E2                     l3742:
  7279  0078E2  FFFF               	dw	65535	; assembler added errata NOP
  7280  0078E4  90D8               	bcf	status,0,c
  7281  0078E6  3611               	rlcf	___lodiv@quotient^0,f,c
  7282  0078E8  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  7283  0078EA  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  7284  0078EC  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  7285  0078EE  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  7286  0078F0  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  7287  0078F2  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  7288  0078F4  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  7289  0078F6  5009               	movf	___lodiv@divisor^0,w,c
  7290  0078F8  5C01               	subwf	___lodiv@dividend^0,w,c
  7291  0078FA  500A               	movf	(___lodiv@divisor+1)^0,w,c
  7292  0078FC  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  7293  0078FE  500B               	movf	(___lodiv@divisor+2)^0,w,c
  7294  007900  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  7295  007902  500C               	movf	(___lodiv@divisor+3)^0,w,c
  7296  007904  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  7297  007906  500D               	movf	(___lodiv@divisor+4)^0,w,c
  7298  007908  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  7299  00790A  500E               	movf	(___lodiv@divisor+5)^0,w,c
  7300  00790C  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  7301  00790E  500F               	movf	(___lodiv@divisor+6)^0,w,c
  7302  007910  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  7303  007912  5010               	movf	(___lodiv@divisor+7)^0,w,c
  7304  007914  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  7305  007916  A0D8               	btfss	status,0,c
  7306  007918  EF90  F03C         	goto	u3871
  7307  00791C  EF93  F03C         	goto	u3870
  7308  007920                     u3871:
  7309  007920  FFFF               	dw	65535	; assembler added errata NOP
  7310  007922  EFA5  F03C         	goto	l3750
  7311  007926                     u3870:
  7312  007926  FFFF               	dw	65535	; assembler added errata NOP
  7313  007928  5009               	movf	___lodiv@divisor^0,w,c
  7314  00792A  5E01               	subwf	___lodiv@dividend^0,f,c
  7315  00792C  500A               	movf	(___lodiv@divisor+1)^0,w,c
  7316  00792E  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  7317  007930  500B               	movf	(___lodiv@divisor+2)^0,w,c
  7318  007932  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  7319  007934  500C               	movf	(___lodiv@divisor+3)^0,w,c
  7320  007936  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  7321  007938  500D               	movf	(___lodiv@divisor+4)^0,w,c
  7322  00793A  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  7323  00793C  500E               	movf	(___lodiv@divisor+5)^0,w,c
  7324  00793E  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  7325  007940  500F               	movf	(___lodiv@divisor+6)^0,w,c
  7326  007942  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  7327  007944  5010               	movf	(___lodiv@divisor+7)^0,w,c
  7328  007946  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  7329  007948  8011               	bsf	___lodiv@quotient^0,0,c
  7330  00794A                     l3750:
  7331  00794A  FFFF               	dw	65535	; assembler added errata NOP
  7332  00794C  90D8               	bcf	status,0,c
  7333  00794E  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  7334  007950  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  7335  007952  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  7336  007954  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  7337  007956  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  7338  007958  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  7339  00795A  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  7340  00795C  3209               	rrcf	___lodiv@divisor^0,f,c
  7341  00795E  2E19               	decfsz	___lodiv@counter^0,f,c
  7342  007960  EF71  F03C         	goto	l3742
  7343  007964                     l826:
  7344  007964  FFFF               	dw	65535	; assembler added errata NOP
  7345  007966  C011  F001         	movff	___lodiv@quotient,?___lodiv
  7346  00796A  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  7347  00796E  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  7348  007972  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  7349  007976  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  7350  00797A  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  7351  00797E  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  7352  007982  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  7353  007986  0012               	return		;funcret
  7354  007988  FFFF               	dw	65535	; errata NOP
  7355  00798A                     __end_of___lodiv:
  7356                           	callstack 0
  7357                           
  7358 ;; *************** function _strncmp *****************
  7359 ;; Defined at:
  7360 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  7361 ;; Parameters:    Size  Location     Type
  7362 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  7363 ;;		 -> STR_10(3), 
  7364 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  7365 ;;		 -> STR_107(3), STR_103(3), STR_98(3), STR_94(3), 
  7366 ;;		 -> STR_89(4), STR_85(4), STR_80(3), STR_75(3), 
  7367 ;;		 -> STR_70(4), STR_65(3), STR_60(3), STR_55(4), 
  7368 ;;		 -> STR_50(3), STR_45(3), STR_40(4), STR_35(3), 
  7369 ;;		 -> STR_31(3), STR_26(3), STR_22(3), STR_17(4), 
  7370 ;;		 -> STR_13(4), 
  7371 ;;  n               2    4[COMRAM] unsigned int 
  7372 ;; Auto vars:     Size  Location     Type
  7373 ;;  r               2    9[COMRAM] PTR const unsigned char 
  7374 ;;		 -> STR_107(3), STR_103(3), STR_98(3), STR_94(3), 
  7375 ;;		 -> STR_89(4), STR_85(4), STR_80(3), STR_75(3), 
  7376 ;;		 -> STR_70(4), STR_65(3), STR_60(3), STR_55(4), 
  7377 ;;		 -> STR_50(3), STR_45(3), STR_40(4), STR_35(3), 
  7378 ;;		 -> STR_31(3), STR_26(3), STR_22(3), STR_17(4), 
  7379 ;;		 -> STR_13(4), 
  7380 ;;  l               2    7[COMRAM] PTR const unsigned char 
  7381 ;;		 -> STR_10(3), 
  7382 ;; Return value:  Size  Location     Type
  7383 ;;                  2    0[COMRAM] int 
  7384 ;; Registers used:
  7385 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  7386 ;; Tracked objects:
  7387 ;;		On entry : 0/0
  7388 ;;		On exit  : 0/0
  7389 ;;		Unchanged: 0/0
  7390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7391 ;;      Params:         6       0       0       0       0       0       0
  7392 ;;      Locals:         4       0       0       0       0       0       0
  7393 ;;      Temps:          1       0       0       0       0       0       0
  7394 ;;      Totals:        11       0       0       0       0       0       0
  7395 ;;Total ram usage:       11 bytes
  7396 ;; Hardware stack levels used:    1
  7397 ;; Hardware stack levels required when called:    1
  7398 ;; This function calls:
  7399 ;;		Nothing
  7400 ;; This function is called by:
  7401 ;;		_vfpfcnvrt
  7402 ;; This function uses a non-reentrant model
  7403 ;;
  7404                           
  7405                           	psect	text17
  7406  007778                     __ptext17:
  7407                           	callstack 0
  7408  007778                     _strncmp:
  7409                           	callstack 0
  7410  007778  FFFF               	dw	65535	; assembler added errata NOP
  7411  00777A  C001  F008         	movff	strncmp@_l,strncmp@l
  7412  00777E  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  7413  007782  C003  F00A         	movff	strncmp@_r,strncmp@r
  7414  007786  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  7415  00778A  0605               	decf	strncmp@n^0,f,c
  7416  00778C  A0D8               	btfss	status,0,c
  7417  00778E  0606               	decf	(strncmp@n+1)^0,f,c
  7418  007790  2805               	incf	strncmp@n^0,w,c
  7419  007792  E106               	bnz	u4731
  7420  007794  2806               	incf	(strncmp@n+1)^0,w,c
  7421  007796  A4D8               	btfss	status,2,c
  7422  007798  EFD0  F03B         	goto	u4731
  7423  00779C  EFD3  F03B         	goto	u4730
  7424  0077A0                     u4731:
  7425  0077A0  FFFF               	dw	65535	; assembler added errata NOP
  7426  0077A2  EFE2  F03B         	goto	l4144
  7427  0077A6                     u4730:
  7428  0077A6  FFFF               	dw	65535	; assembler added errata NOP
  7429  0077A8  0E00               	movlw	0
  7430  0077AA  6E02               	movwf	(?_strncmp+1)^0,c
  7431  0077AC  0E00               	movlw	0
  7432  0077AE  6E01               	movwf	?_strncmp^0,c
  7433  0077B0  EF3D  F03C         	goto	l1438
  7434  0077B4                     l4142:
  7435  0077B4  FFFF               	dw	65535	; assembler added errata NOP
  7436  0077B6  4A08               	infsnz	strncmp@l^0,f,c
  7437  0077B8  2A09               	incf	(strncmp@l+1)^0,f,c
  7438  0077BA  4A0A               	infsnz	strncmp@r^0,f,c
  7439  0077BC  2A0B               	incf	(strncmp@r+1)^0,f,c
  7440  0077BE  0605               	decf	strncmp@n^0,f,c
  7441  0077C0  A0D8               	btfss	status,0,c
  7442  0077C2  0606               	decf	(strncmp@n+1)^0,f,c
  7443  0077C4                     l4144:
  7444  0077C4  FFFF               	dw	65535	; assembler added errata NOP
  7445  0077C6  C008  FFF6         	movff	strncmp@l,tblptrl
  7446  0077CA  C009  FFF7         	movff	strncmp@l+1,tblptrh
  7447  0077CE                     	if	0	;tblptru may be non-zero
  7448  0077CE                     	endif
  7449  0077CE                     	if	0	;tblptru may be non-zero
  7450  0077CE                     	endif
  7451  0077CE  0008               	tblrd		*
  7452  0077D0  FFFF               	dw	65535	; errata NOP
  7453  0077D2  50F5               	movf	tablat,w,c
  7454  0077D4  0900               	iorlw	0
  7455  0077D6  B4D8               	btfsc	status,2,c
  7456  0077D8  EFF0  F03B         	goto	u4741
  7457  0077DC  EFF3  F03B         	goto	u4740
  7458  0077E0                     u4741:
  7459  0077E0  FFFF               	dw	65535	; assembler added errata NOP
  7460  0077E2  EF28  F03C         	goto	l4152
  7461  0077E6                     u4740:
  7462  0077E6  FFFF               	dw	65535	; assembler added errata NOP
  7463  0077E8  C00A  FFF6         	movff	strncmp@r,tblptrl
  7464  0077EC  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7465  0077F0                     	if	0	;tblptru may be non-zero
  7466  0077F0                     	endif
  7467  0077F0                     	if	0	;tblptru may be non-zero
  7468  0077F0                     	endif
  7469  0077F0  0008               	tblrd		*
  7470  0077F2  FFFF               	dw	65535	; errata NOP
  7471  0077F4  50F5               	movf	tablat,w,c
  7472  0077F6  0900               	iorlw	0
  7473  0077F8  B4D8               	btfsc	status,2,c
  7474  0077FA  EF01  F03C         	goto	u4751
  7475  0077FE  EF04  F03C         	goto	u4750
  7476  007802                     u4751:
  7477  007802  FFFF               	dw	65535	; assembler added errata NOP
  7478  007804  EF28  F03C         	goto	l4152
  7479  007808                     u4750:
  7480  007808  FFFF               	dw	65535	; assembler added errata NOP
  7481  00780A  5005               	movf	strncmp@n^0,w,c
  7482  00780C  1006               	iorwf	(strncmp@n+1)^0,w,c
  7483  00780E  B4D8               	btfsc	status,2,c
  7484  007810  EF0C  F03C         	goto	u4761
  7485  007814  EF0F  F03C         	goto	u4760
  7486  007818                     u4761:
  7487  007818  FFFF               	dw	65535	; assembler added errata NOP
  7488  00781A  EF28  F03C         	goto	l4152
  7489  00781E                     u4760:
  7490  00781E  FFFF               	dw	65535	; assembler added errata NOP
  7491  007820  C008  FFF6         	movff	strncmp@l,tblptrl
  7492  007824  C009  FFF7         	movff	strncmp@l+1,tblptrh
  7493  007828                     	if	0	;tblptru may be non-zero
  7494  007828                     	endif
  7495  007828                     	if	0	;tblptru may be non-zero
  7496  007828                     	endif
  7497  007828  0008               	tblrd		*
  7498  00782A  FFFF               	dw	65535	; errata NOP
  7499  00782C  CFF5 F007          	movff	tablat,??_strncmp
  7500  007830  C00A  FFF6         	movff	strncmp@r,tblptrl
  7501  007834  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7502  007838                     	if	0	;tblptru may be non-zero
  7503  007838                     	endif
  7504  007838                     	if	0	;tblptru may be non-zero
  7505  007838                     	endif
  7506  007838  0008               	tblrd		*
  7507  00783A  FFFF               	dw	65535	; errata NOP
  7508  00783C  50F5               	movf	tablat,w,c
  7509  00783E  1807               	xorwf	??_strncmp^0,w,c
  7510  007840  B4D8               	btfsc	status,2,c
  7511  007842  EF25  F03C         	goto	u4771
  7512  007846  EF28  F03C         	goto	u4770
  7513  00784A                     u4771:
  7514  00784A  FFFF               	dw	65535	; assembler added errata NOP
  7515  00784C  EFDA  F03B         	goto	l4142
  7516  007850                     u4770:
  7517  007850                     l4152:
  7518  007850  FFFF               	dw	65535	; assembler added errata NOP
  7519  007852  C008  FFF6         	movff	strncmp@l,tblptrl
  7520  007856  C009  FFF7         	movff	strncmp@l+1,tblptrh
  7521  00785A                     	if	0	;tblptru may be non-zero
  7522  00785A                     	endif
  7523  00785A                     	if	0	;tblptru may be non-zero
  7524  00785A                     	endif
  7525  00785A  0008               	tblrd		*
  7526  00785C  FFFF               	dw	65535	; errata NOP
  7527  00785E  CFF5 F007          	movff	tablat,??_strncmp
  7528  007862  C00A  FFF6         	movff	strncmp@r,tblptrl
  7529  007866  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7530  00786A                     	if	0	;tblptru may be non-zero
  7531  00786A                     	endif
  7532  00786A                     	if	0	;tblptru may be non-zero
  7533  00786A                     	endif
  7534  00786A  0008               	tblrd		*
  7535  00786C  FFFF               	dw	65535	; errata NOP
  7536  00786E  50F5               	movf	tablat,w,c
  7537  007870  5C07               	subwf	??_strncmp^0,w,c
  7538  007872  6E01               	movwf	?_strncmp^0,c
  7539  007874  6A02               	clrf	(?_strncmp+1)^0,c
  7540  007876  A0D8               	btfss	status,0,c
  7541  007878  0602               	decf	(?_strncmp+1)^0,f,c
  7542  00787A                     l1438:
  7543  00787A  FFFF               	dw	65535	; assembler added errata NOP
  7544  00787C  0012               	return		;funcret
  7545  00787E  FFFF               	dw	65535	; errata NOP
  7546  007880                     __end_of_strncmp:
  7547                           	callstack 0
  7548                           
  7549 ;; *************** function _stoa *****************
  7550 ;; Defined at:
  7551 ;;		line 546 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7552 ;; Parameters:    Size  Location     Type
  7553 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  7554 ;;		 -> vsnprintf@f(6), 
  7555 ;;  s               2   11[COMRAM] PTR unsigned char 
  7556 ;;		 -> ?_snprintf(2), STR_8(50), STR_7(9), STR_6(7), 
  7557 ;;		 -> STR_5(9), STR_4(39), STR_3(9), STR_2(64), 
  7558 ;;		 -> STR_1(49), 
  7559 ;; Auto vars:     Size  Location     Type
  7560 ;;  nuls            7   14[COMRAM] unsigned char [7]
  7561 ;;  l               2   29[COMRAM] int 
  7562 ;;  p               2   27[COMRAM] int 
  7563 ;;  cp              2   25[COMRAM] PTR unsigned char 
  7564 ;;		 -> stoa@nuls(7), ?_snprintf(2), STR_8(50), STR_7(9), 
  7565 ;;		 -> STR_6(7), STR_5(9), STR_4(39), STR_3(9), 
  7566 ;;		 -> STR_2(64), STR_1(49), 
  7567 ;;  w               2   23[COMRAM] int 
  7568 ;;  i               2   21[COMRAM] int 
  7569 ;; Return value:  Size  Location     Type
  7570 ;;                  2    9[COMRAM] int 
  7571 ;; Registers used:
  7572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7573 ;; Tracked objects:
  7574 ;;		On entry : 0/0
  7575 ;;		On exit  : 0/0
  7576 ;;		Unchanged: 0/0
  7577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7578 ;;      Params:         4       0       0       0       0       0       0
  7579 ;;      Locals:        17       0       0       0       0       0       0
  7580 ;;      Temps:          1       0       0       0       0       0       0
  7581 ;;      Totals:        22       0       0       0       0       0       0
  7582 ;;Total ram usage:       22 bytes
  7583 ;; Hardware stack levels used:    1
  7584 ;; Hardware stack levels required when called:    3
  7585 ;; This function calls:
  7586 ;;		_fputc
  7587 ;;		_strlen
  7588 ;; This function is called by:
  7589 ;;		_vfpfcnvrt
  7590 ;; This function uses a non-reentrant model
  7591 ;;
  7592                           
  7593                           	psect	text18
  7594  003A82                     __ptext18:
  7595                           	callstack 0
  7596  003A82                     _stoa:
  7597                           	callstack 0
  7598  003A82  FFFF               	dw	65535	; assembler added errata NOP
  7599  003A84                     
  7600                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 546: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 547: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 548:  
      +                             char *cp, nuls[] = "(null)";
  7601  003A84  EE20  F0DE         	lfsr	2,stoa@F1152
  7602  003A88  EE10  F00F         	lfsr	1,stoa@nuls
  7603  003A8C  0E06               	movlw	6
  7604  003A8E                     u4321:
  7605  003A8E  CFDB FFE3          	movff	plusw2,plusw1
  7606  003A92  06E8               	decf	wreg,f,c
  7607  003A94  E2FC               	bc	u4321
  7608  003A96                     
  7609                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 549:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 552:     c
      +                          p = s;
  7610  003A96  C00C  F01A         	movff	stoa@s,stoa@cp
  7611  003A9A  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  7612  003A9E                     
  7613                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 553:     if (!cp)
      +                           {
  7614  003A9E  501A               	movf	stoa@cp^0,w,c
  7615  003AA0  101B               	iorwf	(stoa@cp+1)^0,w,c
  7616  003AA2  A4D8               	btfss	status,2,c
  7617  003AA4  EF56  F01D         	goto	u4331
  7618  003AA8  EF59  F01D         	goto	u4330
  7619  003AAC                     u4331:
  7620  003AAC  FFFF               	dw	65535	; assembler added errata NOP
  7621  003AAE  EF5E  F01D         	goto	l3958
  7622  003AB2                     u4330:
  7623  003AB2  FFFF               	dw	65535	; assembler added errata NOP
  7624  003AB4                     
  7625                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 554:         cp =
      +                           nuls;
  7626  003AB4  0E0F               	movlw	low stoa@nuls
  7627  003AB6  6E1A               	movwf	stoa@cp^0,c
  7628  003AB8  0E00               	movlw	high stoa@nuls
  7629  003ABA  6E1B               	movwf	(stoa@cp+1)^0,c
  7630  003ABC                     l3958:
  7631  003ABC  FFFF               	dw	65535	; assembler added errata NOP
  7632                           
  7633                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 558:     l = strl
      +                          en(cp);
  7634  003ABE  C01A  F001         	movff	stoa@cp,strlen@s
  7635  003AC2  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  7636  003AC6  ECC5  F034         	call	_strlen	;wreg free
  7637  003ACA  C001  F01E         	movff	?_strlen,stoa@l
  7638  003ACE  C002  F01F         	movff	?_strlen+1,stoa@l+1
  7639  003AD2                     
  7640                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 559:     p = prec
      +                          ;
  7641  003AD2  C088  F01C         	movff	_prec,stoa@p
  7642  003AD6  C089  F01D         	movff	_prec+1,stoa@p+1
  7643  003ADA                     
  7644                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 560:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  7645  003ADA  BE1D               	btfsc	(stoa@p+1)^0,7,c
  7646  003ADC  EF72  F01D         	goto	u4341
  7647  003AE0  EF75  F01D         	goto	u4340
  7648  003AE4                     u4341:
  7649  003AE4  FFFF               	dw	65535	; assembler added errata NOP
  7650  003AE6  EF8E  F01D         	goto	l1205
  7651  003AEA                     u4340:
  7652  003AEA  FFFF               	dw	65535	; assembler added errata NOP
  7653  003AEC  501E               	movf	stoa@l^0,w,c
  7654  003AEE  5C1C               	subwf	stoa@p^0,w,c
  7655  003AF0  501D               	movf	(stoa@p+1)^0,w,c
  7656  003AF2  0A80               	xorlw	128
  7657  003AF4  6E0E               	movwf	??_stoa^0,c
  7658  003AF6  501F               	movf	(stoa@l+1)^0,w,c
  7659  003AF8  0A80               	xorlw	128
  7660  003AFA  580E               	subwfb	??_stoa^0,w,c
  7661  003AFC  A0D8               	btfss	status,0,c
  7662  003AFE  EF83  F01D         	goto	u4351
  7663  003B02  EF86  F01D         	goto	u4350
  7664  003B06                     u4351:
  7665  003B06  FFFF               	dw	65535	; assembler added errata NOP
  7666  003B08  EF89  F01D         	goto	l1203
  7667  003B0C                     u4350:
  7668  003B0C  FFFF               	dw	65535	; assembler added errata NOP
  7669  003B0E  EF8E  F01D         	goto	l1205
  7670  003B12                     l1203:
  7671  003B12  FFFF               	dw	65535	; assembler added errata NOP
  7672  003B14  C01C  F01E         	movff	stoa@p,stoa@l
  7673  003B18  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  7674  003B1C                     l1205:
  7675  003B1C  FFFF               	dw	65535	; assembler added errata NOP
  7676                           
  7677                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 561:     p = l;
  7678  003B1E  C01E  F01C         	movff	stoa@l,stoa@p
  7679  003B22  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  7680                           
  7681                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 562:     w = widt
      +                          h;
  7682  003B26  C086  F018         	movff	_width,stoa@w
  7683  003B2A  C087  F019         	movff	_width+1,stoa@w+1
  7684                           
  7685                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 565:     if (!(fl
      +                          ags & (1 << 0))) {
  7686  003B2E  0100               	movlb	0	; () banked
  7687  003B30  B18A               	btfsc	_flags& (0+255),0,b
  7688  003B32  EF9D  F01D         	goto	u4361
  7689  003B36  EFA0  F01D         	goto	u4360
  7690  003B3A                     u4361:
  7691  003B3A  FFFF               	dw	65535	; assembler added errata NOP
  7692  003B3C  EFC1  F01D         	goto	l3974
  7693  003B40                     u4360:
  7694  003B40  FFFF               	dw	65535	; assembler added errata NOP
  7695  003B42  EFB0  F01D         	goto	l3972
  7696  003B46                     l3968:
  7697  003B46  FFFF               	dw	65535	; assembler added errata NOP
  7698                           
  7699                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 567:             
      +                          fputc(' ', fp);
  7700  003B48  0E00               	movlw	0
  7701  003B4A  6E02               	movwf	(fputc@c+1)^0,c
  7702  003B4C  0E20               	movlw	32
  7703  003B4E  6E01               	movwf	fputc@c^0,c
  7704  003B50  C00A  F003         	movff	stoa@fp,fputc@fp
  7705  003B54  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  7706  003B58  ECED  F038         	call	_fputc	;wreg free
  7707  003B5C                     
  7708                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 568:             
      +                          ++l;
  7709  003B5C  4A1E               	infsnz	stoa@l^0,f,c
  7710  003B5E  2A1F               	incf	(stoa@l+1)^0,f,c
  7711  003B60                     l3972:
  7712  003B60  FFFF               	dw	65535	; assembler added errata NOP
  7713                           
  7714                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 566:         whil
      +                          e (l < w) {
  7715  003B62  5018               	movf	stoa@w^0,w,c
  7716  003B64  5C1E               	subwf	stoa@l^0,w,c
  7717  003B66  501F               	movf	(stoa@l+1)^0,w,c
  7718  003B68  0A80               	xorlw	128
  7719  003B6A  6E0E               	movwf	??_stoa^0,c
  7720  003B6C  5019               	movf	(stoa@w+1)^0,w,c
  7721  003B6E  0A80               	xorlw	128
  7722  003B70  580E               	subwfb	??_stoa^0,w,c
  7723  003B72  A0D8               	btfss	status,0,c
  7724  003B74  EFBE  F01D         	goto	u4371
  7725  003B78  EFC1  F01D         	goto	u4370
  7726  003B7C                     u4371:
  7727  003B7C  FFFF               	dw	65535	; assembler added errata NOP
  7728  003B7E  EFA3  F01D         	goto	l3968
  7729  003B82                     u4370:
  7730  003B82                     l3974:
  7731  003B82  FFFF               	dw	65535	; assembler added errata NOP
  7732                           
  7733                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 573:     i = 0;
  7734  003B84  0E00               	movlw	0
  7735  003B86  6E17               	movwf	(stoa@i+1)^0,c
  7736  003B88  0E00               	movlw	0
  7737  003B8A  6E16               	movwf	stoa@i^0,c
  7738                           
  7739                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 574:     while (i
      +                           < p) {
  7740  003B8C  EFE8  F01D         	goto	l3982
  7741  003B90                     l3976:
  7742  003B90  FFFF               	dw	65535	; assembler added errata NOP
  7743                           
  7744                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 575:         fput
      +                          c(*cp, fp);
  7745  003B92  C01A  FFF6         	movff	stoa@cp,tblptrl
  7746  003B96  C01B  FFF7         	movff	stoa@cp+1,tblptrh
  7747  003B9A  6AF8               	clrf	tblptru,c
  7748  003B9C  0E05               	movlw	(high __ramtop+-1)
  7749  003B9E  64F7               	cpfsgt	tblptrh,c
  7750  003BA0  D004               	bra	u4387
  7751  003BA2  0008               	tblrd		*
  7752  003BA4  FFFF               	dw	65535	; errata NOP
  7753  003BA6  50F5               	movf	tablat,w,c
  7754  003BA8  D005               	bra	u4380
  7755  003BAA                     u4387:
  7756  003BAA  CFF6 FFE1          	movff	tblptrl,fsr1l
  7757  003BAE  CFF7 FFE2          	movff	tblptrh,fsr1h
  7758  003BB2  50E7               	movf	indf1,w,c
  7759  003BB4                     u4380:
  7760  003BB4  6E0E               	movwf	??_stoa^0,c
  7761  003BB6  500E               	movf	??_stoa^0,w,c
  7762  003BB8  6E01               	movwf	fputc@c^0,c
  7763  003BBA  6A02               	clrf	(fputc@c+1)^0,c
  7764  003BBC  C00A  F003         	movff	stoa@fp,fputc@fp
  7765  003BC0  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  7766  003BC4  ECED  F038         	call	_fputc	;wreg free
  7767  003BC8                     
  7768                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 576:         ++cp
      +                          ;
  7769  003BC8  4A1A               	infsnz	stoa@cp^0,f,c
  7770  003BCA  2A1B               	incf	(stoa@cp+1)^0,f,c
  7771  003BCC                     
  7772                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 577:         ++i;
  7773  003BCC  4A16               	infsnz	stoa@i^0,f,c
  7774  003BCE  2A17               	incf	(stoa@i+1)^0,f,c
  7775  003BD0                     l3982:
  7776  003BD0  FFFF               	dw	65535	; assembler added errata NOP
  7777                           
  7778                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 574:     while (i
      +                           < p) {
  7779  003BD2  501C               	movf	stoa@p^0,w,c
  7780  003BD4  5C16               	subwf	stoa@i^0,w,c
  7781  003BD6  5017               	movf	(stoa@i+1)^0,w,c
  7782  003BD8  0A80               	xorlw	128
  7783  003BDA  6E0E               	movwf	??_stoa^0,c
  7784  003BDC  501D               	movf	(stoa@p+1)^0,w,c
  7785  003BDE  0A80               	xorlw	128
  7786  003BE0  580E               	subwfb	??_stoa^0,w,c
  7787  003BE2  A0D8               	btfss	status,0,c
  7788  003BE4  EFF6  F01D         	goto	u4391
  7789  003BE8  EFF9  F01D         	goto	u4390
  7790  003BEC                     u4391:
  7791  003BEC  FFFF               	dw	65535	; assembler added errata NOP
  7792  003BEE  EFC8  F01D         	goto	l3976
  7793  003BF2                     u4390:
  7794  003BF2  FFFF               	dw	65535	; assembler added errata NOP
  7795  003BF4                     
  7796                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 581:     if (flag
      +                          s & (1 << 0)) {
  7797  003BF4  0100               	movlb	0	; () banked
  7798  003BF6  A18A               	btfss	_flags& (0+255),0,b
  7799  003BF8  EF00  F01E         	goto	u4401
  7800  003BFC  EF03  F01E         	goto	u4400
  7801  003C00                     u4401:
  7802  003C00  FFFF               	dw	65535	; assembler added errata NOP
  7803  003C02  EF24  F01E         	goto	l1215
  7804  003C06                     u4400:
  7805  003C06  FFFF               	dw	65535	; assembler added errata NOP
  7806  003C08  EF13  F01E         	goto	l3990
  7807  003C0C                     l3986:
  7808  003C0C  FFFF               	dw	65535	; assembler added errata NOP
  7809                           
  7810                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 583:             
      +                          fputc(' ', fp);
  7811  003C0E  0E00               	movlw	0
  7812  003C10  6E02               	movwf	(fputc@c+1)^0,c
  7813  003C12  0E20               	movlw	32
  7814  003C14  6E01               	movwf	fputc@c^0,c
  7815  003C16  C00A  F003         	movff	stoa@fp,fputc@fp
  7816  003C1A  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  7817  003C1E  ECED  F038         	call	_fputc	;wreg free
  7818  003C22                     
  7819                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 584:             
      +                          ++l;
  7820  003C22  4A1E               	infsnz	stoa@l^0,f,c
  7821  003C24  2A1F               	incf	(stoa@l+1)^0,f,c
  7822  003C26                     l3990:
  7823  003C26  FFFF               	dw	65535	; assembler added errata NOP
  7824                           
  7825                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 582:         whil
      +                          e (l < w) {
  7826  003C28  5018               	movf	stoa@w^0,w,c
  7827  003C2A  5C1E               	subwf	stoa@l^0,w,c
  7828  003C2C  501F               	movf	(stoa@l+1)^0,w,c
  7829  003C2E  0A80               	xorlw	128
  7830  003C30  6E0E               	movwf	??_stoa^0,c
  7831  003C32  5019               	movf	(stoa@w+1)^0,w,c
  7832  003C34  0A80               	xorlw	128
  7833  003C36  580E               	subwfb	??_stoa^0,w,c
  7834  003C38  A0D8               	btfss	status,0,c
  7835  003C3A  EF21  F01E         	goto	u4411
  7836  003C3E  EF24  F01E         	goto	u4410
  7837  003C42                     u4411:
  7838  003C42  FFFF               	dw	65535	; assembler added errata NOP
  7839  003C44  EF06  F01E         	goto	l3986
  7840  003C48                     u4410:
  7841  003C48                     l1215:
  7842  003C48  FFFF               	dw	65535	; assembler added errata NOP
  7843                           
  7844                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 588:     return l
      +                          ;
  7845  003C4A  C01E  F00A         	movff	stoa@l,?_stoa
  7846  003C4E  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  7847  003C52  0012               	return		;funcret
  7848  003C54  FFFF               	dw	65535	; errata NOP
  7849  003C56                     __end_of_stoa:
  7850                           	callstack 0
  7851                           
  7852 ;; *************** function _otoa *****************
  7853 ;; Defined at:
  7854 ;;		line 507 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7855 ;; Parameters:    Size  Location     Type
  7856 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7857 ;;		 -> vsnprintf@f(6), 
  7858 ;;  d               8   29[COMRAM] unsigned long long 
  7859 ;; Auto vars:     Size  Location     Type
  7860 ;;  n               8   51[COMRAM] unsigned long long 
  7861 ;;  i               2   59[COMRAM] int 
  7862 ;;  w               2   49[COMRAM] int 
  7863 ;;  t               2   47[COMRAM] int 
  7864 ;;  p               2   45[COMRAM] int 
  7865 ;; Return value:  Size  Location     Type
  7866 ;;                  2   27[COMRAM] int 
  7867 ;; Registers used:
  7868 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7869 ;; Tracked objects:
  7870 ;;		On entry : 0/0
  7871 ;;		On exit  : 0/0
  7872 ;;		Unchanged: 0/0
  7873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7874 ;;      Params:        10       0       0       0       0       0       0
  7875 ;;      Locals:        16       0       0       0       0       0       0
  7876 ;;      Temps:          8       0       0       0       0       0       0
  7877 ;;      Totals:        34       0       0       0       0       0       0
  7878 ;;Total ram usage:       34 bytes
  7879 ;; Hardware stack levels used:    1
  7880 ;; Hardware stack levels required when called:    5
  7881 ;; This function calls:
  7882 ;;		_pad
  7883 ;; This function is called by:
  7884 ;;		_vfpfcnvrt
  7885 ;; This function uses a non-reentrant model
  7886 ;;
  7887                           
  7888                           	psect	text19
  7889  003664                     __ptext19:
  7890                           	callstack 0
  7891  003664                     _otoa:
  7892                           	callstack 0
  7893  003664  FFFF               	dw	65535	; assembler added errata NOP
  7894  003666                     
  7895                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 507: static int o
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99
      +                          \common\doprnt.c: 508: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\dop
      +                          rnt.c: 509:     int i, p, t, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\com
      +                          mon\doprnt.c: 510:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\so
      +                          urces\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  7896  003666  0100               	movlb	0	; () banked
  7897  003668  BF89               	btfsc	(_prec+1)& (0+255),7,b
  7898  00366A  EF39  F01B         	goto	u4221
  7899  00366E  EF3C  F01B         	goto	u4220
  7900  003672                     u4221:
  7901  003672  FFFF               	dw	65535	; assembler added errata NOP
  7902  003674  EF3E  F01B         	goto	l3906
  7903  003678                     u4220:
  7904  003678  FFFF               	dw	65535	; assembler added errata NOP
  7905  00367A                     
  7906                           ; BSR set to: 0
  7907                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 514:         flag
      +                          s &= ~(1 << 1);
  7908  00367A  938A               	bcf	_flags& (0+255),1,b
  7909  00367C                     l3906:
  7910  00367C  FFFF               	dw	65535	; assembler added errata NOP
  7911                           
  7912                           ; BSR set to: 0
  7913                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 516:     p = (0 <
      +                           prec) ? prec : 1;
  7914  00367E  BF89               	btfsc	(_prec+1)& (0+255),7,b
  7915  003680  EF4D  F01B         	goto	u4230
  7916  003684  5189               	movf	(_prec+1)& (0+255),w,b
  7917  003686  E106               	bnz	u4231
  7918  003688  0588               	decf	_prec& (0+255),w,b
  7919  00368A  B0D8               	btfsc	status,0,c
  7920  00368C  EF4A  F01B         	goto	u4231
  7921  003690  EF4D  F01B         	goto	u4230
  7922  003694                     u4231:
  7923  003694  FFFF               	dw	65535	; assembler added errata NOP
  7924  003696  EF54  F01B         	goto	l1185
  7925  00369A                     u4230:
  7926  00369A  FFFF               	dw	65535	; assembler added errata NOP
  7927  00369C                     
  7928                           ; BSR set to: 0
  7929  00369C  0E00               	movlw	0
  7930  00369E  6E2F               	movwf	(otoa@p+1)^0,c
  7931  0036A0  0E01               	movlw	1
  7932  0036A2  6E2E               	movwf	otoa@p^0,c
  7933  0036A4  EF59  F01B         	goto	l1187
  7934  0036A8                     l1185:
  7935  0036A8  FFFF               	dw	65535	; assembler added errata NOP
  7936                           
  7937                           ; BSR set to: 0
  7938  0036AA  C088  F02E         	movff	_prec,otoa@p
  7939  0036AE  C089  F02F         	movff	_prec+1,otoa@p+1
  7940  0036B2                     l1187:
  7941  0036B2  FFFF               	dw	65535	; assembler added errata NOP
  7942                           
  7943                           ; BSR set to: 0
  7944                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 517:     w = widt
      +                          h;
  7945  0036B4  C086  F032         	movff	_width,otoa@w
  7946  0036B8  C087  F033         	movff	_width+1,otoa@w+1
  7947                           
  7948                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 520:     n = d;
  7949  0036BC  C01E  F034         	movff	otoa@d,otoa@n
  7950  0036C0  C01F  F035         	movff	otoa@d+1,otoa@n+1
  7951  0036C4  C020  F036         	movff	otoa@d+2,otoa@n+2
  7952  0036C8  C021  F037         	movff	otoa@d+3,otoa@n+3
  7953  0036CC  C022  F038         	movff	otoa@d+4,otoa@n+4
  7954  0036D0  C023  F039         	movff	otoa@d+5,otoa@n+5
  7955  0036D4  C024  F03A         	movff	otoa@d+6,otoa@n+6
  7956  0036D8  C025  F03B         	movff	otoa@d+7,otoa@n+7
  7957  0036DC                     
  7958                           ; BSR set to: 0
  7959                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 521:     i = size
      +                          of(dbuf) - 1;
  7960  0036DC  0E00               	movlw	0
  7961  0036DE  6E3D               	movwf	(otoa@i+1)^0,c
  7962  0036E0  0E1F               	movlw	31
  7963  0036E2  6E3C               	movwf	otoa@i^0,c
  7964  0036E4                     
  7965                           ; BSR set to: 0
  7966                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 522:     dbuf[i] 
      +                          = '\0';
  7967  0036E4  0E00               	movlw	0
  7968  0036E6  6FB7               	movwf	(_dbuf+31)& (0+255),b
  7969  0036E8                     
  7970                           ; BSR set to: 0
  7971                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 523:     t = 0;
  7972  0036E8  0E00               	movlw	0
  7973  0036EA  6E31               	movwf	(otoa@t+1)^0,c
  7974  0036EC  0E00               	movlw	0
  7975  0036EE  6E30               	movwf	otoa@t^0,c
  7976                           
  7977                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 524:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7978  0036F0  EFC2  F01B         	goto	l3928
  7979  0036F4                     l3916:
  7980  0036F4  FFFF               	dw	65535	; assembler added errata NOP
  7981                           
  7982                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 525:         --i;
  7983  0036F6  063C               	decf	otoa@i^0,f,c
  7984  0036F8  A0D8               	btfss	status,0,c
  7985  0036FA  063D               	decf	(otoa@i+1)^0,f,c
  7986  0036FC                     
  7987                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 526:         t = 
      +                          n & 07;
  7988  0036FC  0E07               	movlw	7
  7989  0036FE  1434               	andwf	otoa@n^0,w,c
  7990  003700  6E30               	movwf	otoa@t^0,c
  7991  003702  6A31               	clrf	(otoa@t+1)^0,c
  7992  003704                     
  7993                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 527:         dbuf
      +                          [i] = '0' + t;
  7994  003704  0E98               	movlw	low _dbuf
  7995  003706  243C               	addwf	otoa@i^0,w,c
  7996  003708  6ED9               	movwf	fsr2l,c
  7997  00370A  0E00               	movlw	high _dbuf
  7998  00370C  203D               	addwfc	(otoa@i+1)^0,w,c
  7999  00370E  6EDA               	movwf	fsr2h,c
  8000  003710  5030               	movf	otoa@t^0,w,c
  8001  003712  0F30               	addlw	48
  8002  003714  6EDF               	movwf	indf2,c
  8003  003716                     
  8004                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 528:         --p;
  8005  003716  062E               	decf	otoa@p^0,f,c
  8006  003718  A0D8               	btfss	status,0,c
  8007  00371A  062F               	decf	(otoa@p+1)^0,f,c
  8008  00371C                     
  8009                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 529:         --w;
  8010  00371C  0632               	decf	otoa@w^0,f,c
  8011  00371E  A0D8               	btfss	status,0,c
  8012  003720  0633               	decf	(otoa@w+1)^0,f,c
  8013  003722                     
  8014                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 530:         n = 
      +                          n >> 3;
  8015  003722  C034  F026         	movff	otoa@n,??_otoa
  8016  003726  C035  F027         	movff	otoa@n+1,??_otoa+1
  8017  00372A  C036  F028         	movff	otoa@n+2,??_otoa+2
  8018  00372E  C037  F029         	movff	otoa@n+3,??_otoa+3
  8019  003732  C038  F02A         	movff	otoa@n+4,??_otoa+4
  8020  003736  C039  F02B         	movff	otoa@n+5,??_otoa+5
  8021  00373A  C03A  F02C         	movff	otoa@n+6,??_otoa+6
  8022  00373E  C03B  F02D         	movff	otoa@n+7,??_otoa+7
  8023  003742  0E04               	movlw	4
  8024  003744  EFAE  F01B         	goto	u4240
  8025  003748                     u4245:
  8026  003748  FFFF               	dw	65535	; assembler added errata NOP
  8027  00374A  90D8               	bcf	status,0,c
  8028  00374C  322D               	rrcf	(??_otoa+7)^0,f,c
  8029  00374E  322C               	rrcf	(??_otoa+6)^0,f,c
  8030  003750  322B               	rrcf	(??_otoa+5)^0,f,c
  8031  003752  322A               	rrcf	(??_otoa+4)^0,f,c
  8032  003754  3229               	rrcf	(??_otoa+3)^0,f,c
  8033  003756  3228               	rrcf	(??_otoa+2)^0,f,c
  8034  003758  3227               	rrcf	(??_otoa+1)^0,f,c
  8035  00375A  3226               	rrcf	??_otoa^0,f,c
  8036  00375C                     u4240:
  8037  00375C  FFFF               	dw	65535	; assembler added errata NOP
  8038  00375E  2EE8               	decfsz	wreg,f,c
  8039  003760  EFA4  F01B         	goto	u4245
  8040  003764  C026  F034         	movff	??_otoa,otoa@n
  8041  003768  C027  F035         	movff	??_otoa+1,otoa@n+1
  8042  00376C  C028  F036         	movff	??_otoa+2,otoa@n+2
  8043  003770  C029  F037         	movff	??_otoa+3,otoa@n+3
  8044  003774  C02A  F038         	movff	??_otoa+4,otoa@n+4
  8045  003778  C02B  F039         	movff	??_otoa+5,otoa@n+5
  8046  00377C  C02C  F03A         	movff	??_otoa+6,otoa@n+6
  8047  003780  C02D  F03B         	movff	??_otoa+7,otoa@n+7
  8048  003784                     l3928:
  8049  003784  FFFF               	dw	65535	; assembler added errata NOP
  8050                           
  8051                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 524:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8052  003786  BE3D               	btfsc	(otoa@i+1)^0,7,c
  8053  003788  EFCE  F01B         	goto	u4251
  8054  00378C  503D               	movf	(otoa@i+1)^0,w,c
  8055  00378E  E109               	bnz	u4250
  8056  003790  043C               	decf	otoa@i^0,w,c
  8057  003792  A0D8               	btfss	status,0,c
  8058  003794  EFCE  F01B         	goto	u4251
  8059  003798  EFD1  F01B         	goto	u4250
  8060  00379C                     u4251:
  8061  00379C  FFFF               	dw	65535	; assembler added errata NOP
  8062  00379E  EF0A  F01C         	goto	l1194
  8063  0037A2                     u4250:
  8064  0037A2  FFFF               	dw	65535	; assembler added errata NOP
  8065  0037A4  5034               	movf	otoa@n^0,w,c
  8066  0037A6  1035               	iorwf	(otoa@n+1)^0,w,c
  8067  0037A8  1036               	iorwf	(otoa@n+2)^0,w,c
  8068  0037AA  1037               	iorwf	(otoa@n+3)^0,w,c
  8069  0037AC  1038               	iorwf	(otoa@n+4)^0,w,c
  8070  0037AE  1039               	iorwf	(otoa@n+5)^0,w,c
  8071  0037B0  103A               	iorwf	(otoa@n+6)^0,w,c
  8072  0037B2  103B               	iorwf	(otoa@n+7)^0,w,c
  8073  0037B4  A4D8               	btfss	status,2,c
  8074  0037B6  EFDF  F01B         	goto	u4261
  8075  0037BA  EFE2  F01B         	goto	u4260
  8076  0037BE                     u4261:
  8077  0037BE  FFFF               	dw	65535	; assembler added errata NOP
  8078  0037C0  EF7A  F01B         	goto	l3916
  8079  0037C4                     u4260:
  8080  0037C4  FFFF               	dw	65535	; assembler added errata NOP
  8081  0037C6  BE2F               	btfsc	(otoa@p+1)^0,7,c
  8082  0037C8  EFF1  F01B         	goto	u4270
  8083  0037CC  502F               	movf	(otoa@p+1)^0,w,c
  8084  0037CE  E106               	bnz	u4271
  8085  0037D0  042E               	decf	otoa@p^0,w,c
  8086  0037D2  B0D8               	btfsc	status,0,c
  8087  0037D4  EFEE  F01B         	goto	u4271
  8088  0037D8  EFF1  F01B         	goto	u4270
  8089  0037DC                     u4271:
  8090  0037DC  FFFF               	dw	65535	; assembler added errata NOP
  8091  0037DE  EF7A  F01B         	goto	l3916
  8092  0037E2                     u4270:
  8093  0037E2  FFFF               	dw	65535	; assembler added errata NOP
  8094  0037E4  BE33               	btfsc	(otoa@w+1)^0,7,c
  8095  0037E6  EFFD  F01B         	goto	u4281
  8096  0037EA  5033               	movf	(otoa@w+1)^0,w,c
  8097  0037EC  E109               	bnz	u4280
  8098  0037EE  0432               	decf	otoa@w^0,w,c
  8099  0037F0  A0D8               	btfss	status,0,c
  8100  0037F2  EFFD  F01B         	goto	u4281
  8101  0037F6  EF00  F01C         	goto	u4280
  8102  0037FA                     u4281:
  8103  0037FA  FFFF               	dw	65535	; assembler added errata NOP
  8104  0037FC  EF0A  F01C         	goto	l1194
  8105  003800                     u4280:
  8106  003800  FFFF               	dw	65535	; assembler added errata NOP
  8107  003802  0100               	movlb	0	; () banked
  8108  003804  B38A               	btfsc	_flags& (0+255),1,b
  8109  003806  EF07  F01C         	goto	u4291
  8110  00380A  EF0A  F01C         	goto	u4290
  8111  00380E                     u4291:
  8112  00380E  FFFF               	dw	65535	; assembler added errata NOP
  8113  003810  EF7A  F01B         	goto	l3916
  8114  003814                     u4290:
  8115  003814                     l1194:
  8116  003814  FFFF               	dw	65535	; assembler added errata NOP
  8117                           
  8118                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 534:     if ((fla
      +                          gs & (1 << 4)) && t) {
  8119  003816  0100               	movlb	0	; () banked
  8120  003818  A98A               	btfss	_flags& (0+255),4,b
  8121  00381A  EF11  F01C         	goto	u4301
  8122  00381E  EF14  F01C         	goto	u4300
  8123  003822                     u4301:
  8124  003822  FFFF               	dw	65535	; assembler added errata NOP
  8125  003824  EF2E  F01C         	goto	l3946
  8126  003828                     u4300:
  8127  003828  FFFF               	dw	65535	; assembler added errata NOP
  8128  00382A                     
  8129                           ; BSR set to: 0
  8130  00382A  5030               	movf	otoa@t^0,w,c
  8131  00382C  1031               	iorwf	(otoa@t+1)^0,w,c
  8132  00382E  B4D8               	btfsc	status,2,c
  8133  003830  EF1C  F01C         	goto	u4311
  8134  003834  EF1F  F01C         	goto	u4310
  8135  003838                     u4311:
  8136  003838  FFFF               	dw	65535	; assembler added errata NOP
  8137  00383A  EF2E  F01C         	goto	l3946
  8138  00383E                     u4310:
  8139  00383E  FFFF               	dw	65535	; assembler added errata NOP
  8140  003840                     
  8141                           ; BSR set to: 0
  8142                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 535:         --i;
  8143  003840  063C               	decf	otoa@i^0,f,c
  8144  003842  A0D8               	btfss	status,0,c
  8145  003844  063D               	decf	(otoa@i+1)^0,f,c
  8146  003846                     
  8147                           ; BSR set to: 0
  8148                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 536:         dbuf
      +                          [i] = '0';
  8149  003846  0E98               	movlw	low _dbuf
  8150  003848  243C               	addwf	otoa@i^0,w,c
  8151  00384A  6ED9               	movwf	fsr2l,c
  8152  00384C  0E00               	movlw	high _dbuf
  8153  00384E  203D               	addwfc	(otoa@i+1)^0,w,c
  8154  003850  6EDA               	movwf	fsr2h,c
  8155  003852  0E30               	movlw	48
  8156  003854  6EDF               	movwf	indf2,c
  8157  003856                     
  8158                           ; BSR set to: 0
  8159                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 537:         --w;
  8160  003856  0632               	decf	otoa@w^0,f,c
  8161  003858  A0D8               	btfss	status,0,c
  8162  00385A  0633               	decf	(otoa@w+1)^0,f,c
  8163  00385C                     l3946:
  8164  00385C  FFFF               	dw	65535	; assembler added errata NOP
  8165                           
  8166                           ; BSR set to: 0
  8167                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 541:     return p
      +                          ad(fp, &dbuf[i], w);
  8168  00385E  C01C  F011         	movff	otoa@fp,pad@fp
  8169  003862  C01D  F012         	movff	otoa@fp+1,pad@fp+1
  8170  003866  0E98               	movlw	low _dbuf
  8171  003868  243C               	addwf	otoa@i^0,w,c
  8172  00386A  6E13               	movwf	pad@buf^0,c
  8173  00386C  0E00               	movlw	high _dbuf
  8174  00386E  203D               	addwfc	(otoa@i+1)^0,w,c
  8175  003870  6E14               	movwf	(pad@buf+1)^0,c
  8176  003872  C032  F015         	movff	otoa@w,pad@p
  8177  003876  C033  F016         	movff	otoa@w+1,pad@p+1
  8178  00387A  EC5E  F039         	call	_pad	;wreg free
  8179  00387E  C011  F01C         	movff	?_pad,?_otoa
  8180  003882  C012  F01D         	movff	?_pad+1,?_otoa+1
  8181  003886  0012               	return		;funcret
  8182  003888  FFFF               	dw	65535	; errata NOP
  8183  00388A                     __end_of_otoa:
  8184                           	callstack 0
  8185                           
  8186 ;; *************** function _dtoa *****************
  8187 ;; Defined at:
  8188 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  8189 ;; Parameters:    Size  Location     Type
  8190 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  8191 ;;		 -> vsnprintf@f(6), 
  8192 ;;  d               8   29[COMRAM] long long 
  8193 ;; Auto vars:     Size  Location     Type
  8194 ;;  n               8   53[COMRAM] long long 
  8195 ;;  i               2   61[COMRAM] int 
  8196 ;;  s               2   51[COMRAM] int 
  8197 ;;  w               2   49[COMRAM] int 
  8198 ;;  p               2   47[COMRAM] int 
  8199 ;; Return value:  Size  Location     Type
  8200 ;;                  2   27[COMRAM] int 
  8201 ;; Registers used:
  8202 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8203 ;; Tracked objects:
  8204 ;;		On entry : 0/0
  8205 ;;		On exit  : 0/0
  8206 ;;		Unchanged: 0/0
  8207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8208 ;;      Params:        10       0       0       0       0       0       0
  8209 ;;      Locals:        18       0       0       0       0       0       0
  8210 ;;      Temps:          8       0       0       0       0       0       0
  8211 ;;      Totals:        36       0       0       0       0       0       0
  8212 ;;Total ram usage:       36 bytes
  8213 ;; Hardware stack levels used:    1
  8214 ;; Hardware stack levels required when called:    5
  8215 ;; This function calls:
  8216 ;;		___aodiv
  8217 ;;		___aomod
  8218 ;;		_abs
  8219 ;;		_pad
  8220 ;; This function is called by:
  8221 ;;		_vfpfcnvrt
  8222 ;; This function uses a non-reentrant model
  8223 ;;
  8224                           
  8225                           	psect	text20
  8226  002DD4                     __ptext20:
  8227                           	callstack 0
  8228  002DD4                     _dtoa:
  8229                           	callstack 0
  8230  002DD4  FFFF               	dw	65535	; assembler added errata NOP
  8231  002DD6                     
  8232                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
  8233  002DD6  C01E  F036         	movff	dtoa@d,dtoa@n
  8234  002DDA  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  8235  002DDE  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  8236  002DE2  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  8237  002DE6  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  8238  002DEA  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  8239  002DEE  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  8240  002DF2  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  8241  002DF6                     
  8242                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
  8243  002DF6  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  8244  002DF8  EF00  F017         	goto	u4071
  8245  002DFC  EF04  F017         	goto	u4070
  8246  002E00                     u4071:
  8247  002E00  FFFF               	dw	65535	; assembler added errata NOP
  8248  002E02  0E01               	movlw	1
  8249  002E04  EF06  F017         	goto	u4080
  8250  002E08                     u4070:
  8251  002E08  FFFF               	dw	65535	; assembler added errata NOP
  8252  002E0A  0E00               	movlw	0
  8253  002E0C                     u4080:
  8254  002E0C  FFFF               	dw	65535	; assembler added errata NOP
  8255  002E0E  6E34               	movwf	dtoa@s^0,c
  8256  002E10  6A35               	clrf	(dtoa@s+1)^0,c
  8257                           
  8258                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  8259  002E12  5034               	movf	dtoa@s^0,w,c
  8260  002E14  1035               	iorwf	(dtoa@s+1)^0,w,c
  8261  002E16  B4D8               	btfsc	status,2,c
  8262  002E18  EF10  F017         	goto	u4091
  8263  002E1C  EF13  F017         	goto	u4090
  8264  002E20                     u4091:
  8265  002E20  FFFF               	dw	65535	; assembler added errata NOP
  8266  002E22  EF24  F017         	goto	l3846
  8267  002E26                     u4090:
  8268  002E26  FFFF               	dw	65535	; assembler added errata NOP
  8269  002E28                     
  8270                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
  8271  002E28  1E3D               	comf	(dtoa@n+7)^0,f,c
  8272  002E2A  1E3C               	comf	(dtoa@n+6)^0,f,c
  8273  002E2C  1E3B               	comf	(dtoa@n+5)^0,f,c
  8274  002E2E  1E3A               	comf	(dtoa@n+4)^0,f,c
  8275  002E30  1E39               	comf	(dtoa@n+3)^0,f,c
  8276  002E32  1E38               	comf	(dtoa@n+2)^0,f,c
  8277  002E34  1E37               	comf	(dtoa@n+1)^0,f,c
  8278  002E36  6C36               	negf	dtoa@n^0,c
  8279  002E38  0E00               	movlw	0
  8280  002E3A  2237               	addwfc	(dtoa@n+1)^0,f,c
  8281  002E3C  2238               	addwfc	(dtoa@n+2)^0,f,c
  8282  002E3E  2239               	addwfc	(dtoa@n+3)^0,f,c
  8283  002E40  223A               	addwfc	(dtoa@n+4)^0,f,c
  8284  002E42  223B               	addwfc	(dtoa@n+5)^0,f,c
  8285  002E44  223C               	addwfc	(dtoa@n+6)^0,f,c
  8286  002E46  223D               	addwfc	(dtoa@n+7)^0,f,c
  8287  002E48                     l3846:
  8288  002E48  FFFF               	dw	65535	; assembler added errata NOP
  8289                           
  8290                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
  8291  002E4A  0100               	movlb	0	; () banked
  8292  002E4C  BF89               	btfsc	(_prec+1)& (0+255),7,b
  8293  002E4E  EF2B  F017         	goto	u4101
  8294  002E52  EF2E  F017         	goto	u4100
  8295  002E56                     u4101:
  8296  002E56  FFFF               	dw	65535	; assembler added errata NOP
  8297  002E58  EF30  F017         	goto	l3850
  8298  002E5C                     u4100:
  8299  002E5C  FFFF               	dw	65535	; assembler added errata NOP
  8300  002E5E                     
  8301                           ; BSR set to: 0
  8302                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
  8303  002E5E  938A               	bcf	_flags& (0+255),1,b
  8304  002E60                     l3850:
  8305  002E60  FFFF               	dw	65535	; assembler added errata NOP
  8306                           
  8307                           ; BSR set to: 0
  8308                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
  8309  002E62  BF89               	btfsc	(_prec+1)& (0+255),7,b
  8310  002E64  EF3F  F017         	goto	u4110
  8311  002E68  5189               	movf	(_prec+1)& (0+255),w,b
  8312  002E6A  E106               	bnz	u4111
  8313  002E6C  0588               	decf	_prec& (0+255),w,b
  8314  002E6E  B0D8               	btfsc	status,0,c
  8315  002E70  EF3C  F017         	goto	u4111
  8316  002E74  EF3F  F017         	goto	u4110
  8317  002E78                     u4111:
  8318  002E78  FFFF               	dw	65535	; assembler added errata NOP
  8319  002E7A  EF46  F017         	goto	l1160
  8320  002E7E                     u4110:
  8321  002E7E  FFFF               	dw	65535	; assembler added errata NOP
  8322  002E80                     
  8323                           ; BSR set to: 0
  8324  002E80  0E00               	movlw	0
  8325  002E82  6E31               	movwf	(dtoa@p+1)^0,c
  8326  002E84  0E01               	movlw	1
  8327  002E86  6E30               	movwf	dtoa@p^0,c
  8328  002E88  EF4B  F017         	goto	l1162
  8329  002E8C                     l1160:
  8330  002E8C  FFFF               	dw	65535	; assembler added errata NOP
  8331                           
  8332                           ; BSR set to: 0
  8333  002E8E  C088  F030         	movff	_prec,dtoa@p
  8334  002E92  C089  F031         	movff	_prec+1,dtoa@p+1
  8335  002E96                     l1162:
  8336  002E96  FFFF               	dw	65535	; assembler added errata NOP
  8337                           
  8338                           ; BSR set to: 0
  8339                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
  8340  002E98  C086  F032         	movff	_width,dtoa@w
  8341  002E9C  C087  F033         	movff	_width+1,dtoa@w+1
  8342  002EA0                     
  8343                           ; BSR set to: 0
  8344                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
  8345  002EA0  5034               	movf	dtoa@s^0,w,c
  8346  002EA2  1035               	iorwf	(dtoa@s+1)^0,w,c
  8347  002EA4  A4D8               	btfss	status,2,c
  8348  002EA6  EF57  F017         	goto	u4121
  8349  002EAA  EF5A  F017         	goto	u4120
  8350  002EAE                     u4121:
  8351  002EAE  FFFF               	dw	65535	; assembler added errata NOP
  8352  002EB0  EF63  F017         	goto	l3858
  8353  002EB4                     u4120:
  8354  002EB4  FFFF               	dw	65535	; assembler added errata NOP
  8355  002EB6                     
  8356                           ; BSR set to: 0
  8357  002EB6  A58A               	btfss	_flags& (0+255),2,b
  8358  002EB8  EF60  F017         	goto	u4131
  8359  002EBC  EF63  F017         	goto	u4130
  8360  002EC0                     u4131:
  8361  002EC0  FFFF               	dw	65535	; assembler added errata NOP
  8362  002EC2  EF67  F017         	goto	l3860
  8363  002EC6                     u4130:
  8364  002EC6                     l3858:
  8365  002EC6  FFFF               	dw	65535	; assembler added errata NOP
  8366                           
  8367                           ; BSR set to: 0
  8368                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
  8369  002EC8  0632               	decf	dtoa@w^0,f,c
  8370  002ECA  A0D8               	btfss	status,0,c
  8371  002ECC  0633               	decf	(dtoa@w+1)^0,f,c
  8372  002ECE                     l3860:
  8373  002ECE  FFFF               	dw	65535	; assembler added errata NOP
  8374                           
  8375                           ; BSR set to: 0
  8376                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
  8377  002ED0  0E00               	movlw	0
  8378  002ED2  6E3F               	movwf	(dtoa@i+1)^0,c
  8379  002ED4  0E1F               	movlw	31
  8380  002ED6  6E3E               	movwf	dtoa@i^0,c
  8381  002ED8                     
  8382                           ; BSR set to: 0
  8383                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
  8384  002ED8  0E00               	movlw	0
  8385  002EDA  6FB7               	movwf	(_dbuf+31)& (0+255),b
  8386                           
  8387                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8388  002EDC  EFED  F017         	goto	l3874
  8389  002EE0                     l3864:
  8390  002EE0  FFFF               	dw	65535	; assembler added errata NOP
  8391                           
  8392                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
  8393  002EE2  063E               	decf	dtoa@i^0,f,c
  8394  002EE4  A0D8               	btfss	status,0,c
  8395  002EE6  063F               	decf	(dtoa@i+1)^0,f,c
  8396  002EE8                     
  8397                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
  8398  002EE8  0E98               	movlw	low _dbuf
  8399  002EEA  243E               	addwf	dtoa@i^0,w,c
  8400  002EEC  6ED9               	movwf	fsr2l,c
  8401  002EEE  0E00               	movlw	high _dbuf
  8402  002EF0  203F               	addwfc	(dtoa@i+1)^0,w,c
  8403  002EF2  6EDA               	movwf	fsr2h,c
  8404  002EF4  C036  F001         	movff	dtoa@n,___aomod@dividend
  8405  002EF8  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  8406  002EFC  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  8407  002F00  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  8408  002F04  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  8409  002F08  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  8410  002F0C  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  8411  002F10  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  8412  002F14  0E0A               	movlw	10
  8413  002F16  6E09               	movwf	___aomod@divisor^0,c
  8414  002F18  0E00               	movlw	0
  8415  002F1A  6E0A               	movwf	(___aomod@divisor+1)^0,c
  8416  002F1C  0E00               	movlw	0
  8417  002F1E  6E0B               	movwf	(___aomod@divisor+2)^0,c
  8418  002F20  0E00               	movlw	0
  8419  002F22  6E0C               	movwf	(___aomod@divisor+3)^0,c
  8420  002F24  0E00               	movlw	0
  8421  002F26  6E0D               	movwf	(___aomod@divisor+4)^0,c
  8422  002F28  0E00               	movlw	0
  8423  002F2A  6E0E               	movwf	(___aomod@divisor+5)^0,c
  8424  002F2C  0E00               	movlw	0
  8425  002F2E  6E0F               	movwf	(___aomod@divisor+6)^0,c
  8426  002F30  0E00               	movlw	0
  8427  002F32  6E10               	movwf	(___aomod@divisor+7)^0,c
  8428  002F34  EC92  F03E         	call	___aomod	;wreg free
  8429  002F38  C001  F026         	movff	?___aomod,??_dtoa
  8430  002F3C  C002  F027         	movff	?___aomod+1,??_dtoa+1
  8431  002F40  C003  F028         	movff	?___aomod+2,??_dtoa+2
  8432  002F44  C004  F029         	movff	?___aomod+3,??_dtoa+3
  8433  002F48  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  8434  002F4C  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  8435  002F50  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  8436  002F54  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  8437  002F58  C026  F013         	movff	??_dtoa,abs@a
  8438  002F5C  C028  F014         	movff	??_dtoa+2,abs@a+1
  8439  002F60  EC77  F034         	call	_abs	;wreg free
  8440  002F64  5013               	movf	?_abs^0,w,c
  8441  002F66  0F30               	addlw	48
  8442  002F68  6EDF               	movwf	indf2,c
  8443  002F6A                     
  8444                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
  8445  002F6A  0630               	decf	dtoa@p^0,f,c
  8446  002F6C  A0D8               	btfss	status,0,c
  8447  002F6E  0631               	decf	(dtoa@p+1)^0,f,c
  8448  002F70                     
  8449                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
  8450  002F70  0632               	decf	dtoa@w^0,f,c
  8451  002F72  A0D8               	btfss	status,0,c
  8452  002F74  0633               	decf	(dtoa@w+1)^0,f,c
  8453  002F76                     
  8454                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
  8455  002F76  C036  F001         	movff	dtoa@n,___aodiv@dividend
  8456  002F7A  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  8457  002F7E  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  8458  002F82  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  8459  002F86  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  8460  002F8A  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  8461  002F8E  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  8462  002F92  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  8463  002F96  0E0A               	movlw	10
  8464  002F98  6E09               	movwf	___aodiv@divisor^0,c
  8465  002F9A  0E00               	movlw	0
  8466  002F9C  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  8467  002F9E  0E00               	movlw	0
  8468  002FA0  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  8469  002FA2  0E00               	movlw	0
  8470  002FA4  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  8471  002FA6  0E00               	movlw	0
  8472  002FA8  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  8473  002FAA  0E00               	movlw	0
  8474  002FAC  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  8475  002FAE  0E00               	movlw	0
  8476  002FB0  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  8477  002FB2  0E00               	movlw	0
  8478  002FB4  6E10               	movwf	(___aodiv@divisor+7)^0,c
  8479  002FB6  EC12  F01F         	call	___aodiv	;wreg free
  8480  002FBA  C001  F036         	movff	?___aodiv,dtoa@n
  8481  002FBE  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  8482  002FC2  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  8483  002FC6  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  8484  002FCA  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  8485  002FCE  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  8486  002FD2  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  8487  002FD6  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  8488  002FDA                     l3874:
  8489  002FDA  FFFF               	dw	65535	; assembler added errata NOP
  8490                           
  8491                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8492  002FDC  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  8493  002FDE  EFF9  F017         	goto	u4141
  8494  002FE2  503F               	movf	(dtoa@i+1)^0,w,c
  8495  002FE4  E109               	bnz	u4140
  8496  002FE6  043E               	decf	dtoa@i^0,w,c
  8497  002FE8  A0D8               	btfss	status,0,c
  8498  002FEA  EFF9  F017         	goto	u4141
  8499  002FEE  EFFC  F017         	goto	u4140
  8500  002FF2                     u4141:
  8501  002FF2  FFFF               	dw	65535	; assembler added errata NOP
  8502  002FF4  EF35  F018         	goto	l3884
  8503  002FF8                     u4140:
  8504  002FF8  FFFF               	dw	65535	; assembler added errata NOP
  8505  002FFA  5036               	movf	dtoa@n^0,w,c
  8506  002FFC  1037               	iorwf	(dtoa@n+1)^0,w,c
  8507  002FFE  1038               	iorwf	(dtoa@n+2)^0,w,c
  8508  003000  1039               	iorwf	(dtoa@n+3)^0,w,c
  8509  003002  103A               	iorwf	(dtoa@n+4)^0,w,c
  8510  003004  103B               	iorwf	(dtoa@n+5)^0,w,c
  8511  003006  103C               	iorwf	(dtoa@n+6)^0,w,c
  8512  003008  103D               	iorwf	(dtoa@n+7)^0,w,c
  8513  00300A  A4D8               	btfss	status,2,c
  8514  00300C  EF0A  F018         	goto	u4151
  8515  003010  EF0D  F018         	goto	u4150
  8516  003014                     u4151:
  8517  003014  FFFF               	dw	65535	; assembler added errata NOP
  8518  003016  EF70  F017         	goto	l3864
  8519  00301A                     u4150:
  8520  00301A  FFFF               	dw	65535	; assembler added errata NOP
  8521  00301C  BE31               	btfsc	(dtoa@p+1)^0,7,c
  8522  00301E  EF1C  F018         	goto	u4160
  8523  003022  5031               	movf	(dtoa@p+1)^0,w,c
  8524  003024  E106               	bnz	u4161
  8525  003026  0430               	decf	dtoa@p^0,w,c
  8526  003028  B0D8               	btfsc	status,0,c
  8527  00302A  EF19  F018         	goto	u4161
  8528  00302E  EF1C  F018         	goto	u4160
  8529  003032                     u4161:
  8530  003032  FFFF               	dw	65535	; assembler added errata NOP
  8531  003034  EF70  F017         	goto	l3864
  8532  003038                     u4160:
  8533  003038  FFFF               	dw	65535	; assembler added errata NOP
  8534  00303A  BE33               	btfsc	(dtoa@w+1)^0,7,c
  8535  00303C  EF28  F018         	goto	u4171
  8536  003040  5033               	movf	(dtoa@w+1)^0,w,c
  8537  003042  E109               	bnz	u4170
  8538  003044  0432               	decf	dtoa@w^0,w,c
  8539  003046  A0D8               	btfss	status,0,c
  8540  003048  EF28  F018         	goto	u4171
  8541  00304C  EF2B  F018         	goto	u4170
  8542  003050                     u4171:
  8543  003050  FFFF               	dw	65535	; assembler added errata NOP
  8544  003052  EF35  F018         	goto	l3884
  8545  003056                     u4170:
  8546  003056  FFFF               	dw	65535	; assembler added errata NOP
  8547  003058  0100               	movlb	0	; () banked
  8548  00305A  B38A               	btfsc	_flags& (0+255),1,b
  8549  00305C  EF32  F018         	goto	u4181
  8550  003060  EF35  F018         	goto	u4180
  8551  003064                     u4181:
  8552  003064  FFFF               	dw	65535	; assembler added errata NOP
  8553  003066  EF70  F017         	goto	l3864
  8554  00306A                     u4180:
  8555  00306A                     l3884:
  8556  00306A  FFFF               	dw	65535	; assembler added errata NOP
  8557                           
  8558                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
  8559  00306C  5034               	movf	dtoa@s^0,w,c
  8560  00306E  1035               	iorwf	(dtoa@s+1)^0,w,c
  8561  003070  A4D8               	btfss	status,2,c
  8562  003072  EF3D  F018         	goto	u4191
  8563  003076  EF40  F018         	goto	u4190
  8564  00307A                     u4191:
  8565  00307A  FFFF               	dw	65535	; assembler added errata NOP
  8566  00307C  EF4A  F018         	goto	l3888
  8567  003080                     u4190:
  8568  003080  FFFF               	dw	65535	; assembler added errata NOP
  8569  003082  0100               	movlb	0	; () banked
  8570  003084  A58A               	btfss	_flags& (0+255),2,b
  8571  003086  EF47  F018         	goto	u4201
  8572  00308A  EF4A  F018         	goto	u4200
  8573  00308E                     u4201:
  8574  00308E  FFFF               	dw	65535	; assembler added errata NOP
  8575  003090  EF6D  F018         	goto	l3898
  8576  003094                     u4200:
  8577  003094                     l3888:
  8578  003094  FFFF               	dw	65535	; assembler added errata NOP
  8579                           
  8580                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
  8581  003096  063E               	decf	dtoa@i^0,f,c
  8582  003098  A0D8               	btfss	status,0,c
  8583  00309A  063F               	decf	(dtoa@i+1)^0,f,c
  8584  00309C                     
  8585                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
  8586  00309C  5034               	movf	dtoa@s^0,w,c
  8587  00309E  1035               	iorwf	(dtoa@s+1)^0,w,c
  8588  0030A0  A4D8               	btfss	status,2,c
  8589  0030A2  EF55  F018         	goto	u4211
  8590  0030A6  EF58  F018         	goto	u4210
  8591  0030AA                     u4211:
  8592  0030AA  FFFF               	dw	65535	; assembler added errata NOP
  8593  0030AC  EF5F  F018         	goto	l3894
  8594  0030B0                     u4210:
  8595  0030B0  FFFF               	dw	65535	; assembler added errata NOP
  8596  0030B2  0E00               	movlw	0
  8597  0030B4  6E2F               	movwf	(_dtoa$1634+1)^0,c
  8598  0030B6  0E2B               	movlw	43
  8599  0030B8  6E2E               	movwf	_dtoa$1634^0,c
  8600  0030BA  EF64  F018         	goto	l3896
  8601  0030BE                     l3894:
  8602  0030BE  FFFF               	dw	65535	; assembler added errata NOP
  8603  0030C0  0E00               	movlw	0
  8604  0030C2  6E2F               	movwf	(_dtoa$1634+1)^0,c
  8605  0030C4  0E2D               	movlw	45
  8606  0030C6  6E2E               	movwf	_dtoa$1634^0,c
  8607  0030C8                     l3896:
  8608  0030C8  FFFF               	dw	65535	; assembler added errata NOP
  8609  0030CA  0E98               	movlw	low _dbuf
  8610  0030CC  243E               	addwf	dtoa@i^0,w,c
  8611  0030CE  6ED9               	movwf	fsr2l,c
  8612  0030D0  0E00               	movlw	high _dbuf
  8613  0030D2  203F               	addwfc	(dtoa@i+1)^0,w,c
  8614  0030D4  6EDA               	movwf	fsr2h,c
  8615  0030D6  C02E  FFDF         	movff	_dtoa$1634,indf2
  8616  0030DA                     l3898:
  8617  0030DA  FFFF               	dw	65535	; assembler added errata NOP
  8618                           
  8619                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
  8620  0030DC  C01C  F011         	movff	dtoa@fp,pad@fp
  8621  0030E0  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  8622  0030E4  0E98               	movlw	low _dbuf
  8623  0030E6  243E               	addwf	dtoa@i^0,w,c
  8624  0030E8  6E13               	movwf	pad@buf^0,c
  8625  0030EA  0E00               	movlw	high _dbuf
  8626  0030EC  203F               	addwfc	(dtoa@i+1)^0,w,c
  8627  0030EE  6E14               	movwf	(pad@buf+1)^0,c
  8628  0030F0  C032  F015         	movff	dtoa@w,pad@p
  8629  0030F4  C033  F016         	movff	dtoa@w+1,pad@p+1
  8630  0030F8  EC5E  F039         	call	_pad	;wreg free
  8631  0030FC  C011  F01C         	movff	?_pad,?_dtoa
  8632  003100  C012  F01D         	movff	?_pad+1,?_dtoa+1
  8633  003104  0012               	return		;funcret
  8634  003106  FFFF               	dw	65535	; errata NOP
  8635  003108                     __end_of_dtoa:
  8636                           	callstack 0
  8637                           
  8638 ;; *************** function ___aomod *****************
  8639 ;; Defined at:
  8640 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
  8641 ;; Parameters:    Size  Location     Type
  8642 ;;  dividend        8    0[COMRAM] long long 
  8643 ;;  divisor         8    8[COMRAM] long long 
  8644 ;; Auto vars:     Size  Location     Type
  8645 ;;  sign            1   17[COMRAM] unsigned char 
  8646 ;;  counter         1   16[COMRAM] unsigned char 
  8647 ;; Return value:  Size  Location     Type
  8648 ;;                  8    0[COMRAM] long long 
  8649 ;; Registers used:
  8650 ;;		wreg, status,2, status,0
  8651 ;; Tracked objects:
  8652 ;;		On entry : 0/0
  8653 ;;		On exit  : 0/0
  8654 ;;		Unchanged: 0/0
  8655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8656 ;;      Params:        16       0       0       0       0       0       0
  8657 ;;      Locals:         2       0       0       0       0       0       0
  8658 ;;      Temps:          0       0       0       0       0       0       0
  8659 ;;      Totals:        18       0       0       0       0       0       0
  8660 ;;Total ram usage:       18 bytes
  8661 ;; Hardware stack levels used:    1
  8662 ;; Hardware stack levels required when called:    1
  8663 ;; This function calls:
  8664 ;;		Nothing
  8665 ;; This function is called by:
  8666 ;;		_dtoa
  8667 ;; This function uses a non-reentrant model
  8668 ;;
  8669                           
  8670                           	psect	text21
  8671  007D24                     __ptext21:
  8672                           	callstack 0
  8673  007D24                     ___aomod:
  8674                           	callstack 0
  8675  007D24  FFFF               	dw	65535	; assembler added errata NOP
  8676  007D26  0E00               	movlw	0
  8677  007D28  6E12               	movwf	___aomod@sign^0,c
  8678  007D2A  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  8679  007D2C  EF9D  F03E         	goto	u3780
  8680  007D30  EF9A  F03E         	goto	u3781
  8681  007D34                     u3781:
  8682  007D34  FFFF               	dw	65535	; assembler added errata NOP
  8683  007D36  EFB0  F03E         	goto	l3704
  8684  007D3A                     u3780:
  8685  007D3A  FFFF               	dw	65535	; assembler added errata NOP
  8686  007D3C  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8687  007D3E  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8688  007D40  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8689  007D42  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8690  007D44  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8691  007D46  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8692  007D48  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8693  007D4A  6C01               	negf	___aomod@dividend^0,c
  8694  007D4C  0E00               	movlw	0
  8695  007D4E  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8696  007D50  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8697  007D52  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8698  007D54  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8699  007D56  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8700  007D58  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8701  007D5A  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8702  007D5C  0E01               	movlw	1
  8703  007D5E  6E12               	movwf	___aomod@sign^0,c
  8704  007D60                     l3704:
  8705  007D60  FFFF               	dw	65535	; assembler added errata NOP
  8706  007D62  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  8707  007D64  EFB9  F03E         	goto	u3790
  8708  007D68  EFB6  F03E         	goto	u3791
  8709  007D6C                     u3791:
  8710  007D6C  FFFF               	dw	65535	; assembler added errata NOP
  8711  007D6E  EFCA  F03E         	goto	l3708
  8712  007D72                     u3790:
  8713  007D72  FFFF               	dw	65535	; assembler added errata NOP
  8714  007D74  1E10               	comf	(___aomod@divisor+7)^0,f,c
  8715  007D76  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  8716  007D78  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  8717  007D7A  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  8718  007D7C  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  8719  007D7E  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  8720  007D80  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  8721  007D82  6C09               	negf	___aomod@divisor^0,c
  8722  007D84  0E00               	movlw	0
  8723  007D86  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  8724  007D88  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  8725  007D8A  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  8726  007D8C  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  8727  007D8E  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  8728  007D90  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  8729  007D92  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  8730  007D94                     l3708:
  8731  007D94  FFFF               	dw	65535	; assembler added errata NOP
  8732  007D96  5009               	movf	___aomod@divisor^0,w,c
  8733  007D98  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  8734  007D9A  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  8735  007D9C  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  8736  007D9E  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  8737  007DA0  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  8738  007DA2  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  8739  007DA4  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  8740  007DA6  B4D8               	btfsc	status,2,c
  8741  007DA8  EFD8  F03E         	goto	u3801
  8742  007DAC  EFDB  F03E         	goto	u3800
  8743  007DB0                     u3801:
  8744  007DB0  FFFF               	dw	65535	; assembler added errata NOP
  8745  007DB2  EF2C  F03F         	goto	l3724
  8746  007DB6                     u3800:
  8747  007DB6  FFFF               	dw	65535	; assembler added errata NOP
  8748  007DB8  0E01               	movlw	1
  8749  007DBA  6E11               	movwf	___aomod@counter^0,c
  8750  007DBC  EFEB  F03E         	goto	l3714
  8751  007DC0                     l3712:
  8752  007DC0  FFFF               	dw	65535	; assembler added errata NOP
  8753  007DC2  90D8               	bcf	status,0,c
  8754  007DC4  3609               	rlcf	___aomod@divisor^0,f,c
  8755  007DC6  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  8756  007DC8  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  8757  007DCA  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  8758  007DCC  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  8759  007DCE  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  8760  007DD0  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  8761  007DD2  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  8762  007DD4  2A11               	incf	___aomod@counter^0,f,c
  8763  007DD6                     l3714:
  8764  007DD6  FFFF               	dw	65535	; assembler added errata NOP
  8765  007DD8  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  8766  007DDA  EFF1  F03E         	goto	u3811
  8767  007DDE  EFF4  F03E         	goto	u3810
  8768  007DE2                     u3811:
  8769  007DE2  FFFF               	dw	65535	; assembler added errata NOP
  8770  007DE4  EFE0  F03E         	goto	l3712
  8771  007DE8                     u3810:
  8772  007DE8  FFFF               	dw	65535	; assembler added errata NOP
  8773  007DEA                     l3716:
  8774  007DEA  FFFF               	dw	65535	; assembler added errata NOP
  8775  007DEC  5009               	movf	___aomod@divisor^0,w,c
  8776  007DEE  5C01               	subwf	___aomod@dividend^0,w,c
  8777  007DF0  500A               	movf	(___aomod@divisor+1)^0,w,c
  8778  007DF2  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  8779  007DF4  500B               	movf	(___aomod@divisor+2)^0,w,c
  8780  007DF6  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  8781  007DF8  500C               	movf	(___aomod@divisor+3)^0,w,c
  8782  007DFA  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  8783  007DFC  500D               	movf	(___aomod@divisor+4)^0,w,c
  8784  007DFE  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  8785  007E00  500E               	movf	(___aomod@divisor+5)^0,w,c
  8786  007E02  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  8787  007E04  500F               	movf	(___aomod@divisor+6)^0,w,c
  8788  007E06  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  8789  007E08  5010               	movf	(___aomod@divisor+7)^0,w,c
  8790  007E0A  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  8791  007E0C  A0D8               	btfss	status,0,c
  8792  007E0E  EF0B  F03F         	goto	u3821
  8793  007E12  EF0E  F03F         	goto	u3820
  8794  007E16                     u3821:
  8795  007E16  FFFF               	dw	65535	; assembler added errata NOP
  8796  007E18  EF1F  F03F         	goto	l3720
  8797  007E1C                     u3820:
  8798  007E1C  FFFF               	dw	65535	; assembler added errata NOP
  8799  007E1E  5009               	movf	___aomod@divisor^0,w,c
  8800  007E20  5E01               	subwf	___aomod@dividend^0,f,c
  8801  007E22  500A               	movf	(___aomod@divisor+1)^0,w,c
  8802  007E24  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  8803  007E26  500B               	movf	(___aomod@divisor+2)^0,w,c
  8804  007E28  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  8805  007E2A  500C               	movf	(___aomod@divisor+3)^0,w,c
  8806  007E2C  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  8807  007E2E  500D               	movf	(___aomod@divisor+4)^0,w,c
  8808  007E30  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  8809  007E32  500E               	movf	(___aomod@divisor+5)^0,w,c
  8810  007E34  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  8811  007E36  500F               	movf	(___aomod@divisor+6)^0,w,c
  8812  007E38  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  8813  007E3A  5010               	movf	(___aomod@divisor+7)^0,w,c
  8814  007E3C  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  8815  007E3E                     l3720:
  8816  007E3E  FFFF               	dw	65535	; assembler added errata NOP
  8817  007E40  90D8               	bcf	status,0,c
  8818  007E42  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  8819  007E44  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  8820  007E46  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  8821  007E48  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  8822  007E4A  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  8823  007E4C  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  8824  007E4E  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  8825  007E50  3209               	rrcf	___aomod@divisor^0,f,c
  8826  007E52  2E11               	decfsz	___aomod@counter^0,f,c
  8827  007E54  EFF5  F03E         	goto	l3716
  8828  007E58                     l3724:
  8829  007E58  FFFF               	dw	65535	; assembler added errata NOP
  8830  007E5A  5012               	movf	___aomod@sign^0,w,c
  8831  007E5C  B4D8               	btfsc	status,2,c
  8832  007E5E  EF33  F03F         	goto	u3831
  8833  007E62  EF36  F03F         	goto	u3830
  8834  007E66                     u3831:
  8835  007E66  FFFF               	dw	65535	; assembler added errata NOP
  8836  007E68  EF47  F03F         	goto	l3728
  8837  007E6C                     u3830:
  8838  007E6C  FFFF               	dw	65535	; assembler added errata NOP
  8839  007E6E  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8840  007E70  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8841  007E72  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8842  007E74  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8843  007E76  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8844  007E78  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8845  007E7A  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8846  007E7C  6C01               	negf	___aomod@dividend^0,c
  8847  007E7E  0E00               	movlw	0
  8848  007E80  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8849  007E82  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8850  007E84  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8851  007E86  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8852  007E88  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8853  007E8A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8854  007E8C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8855  007E8E                     l3728:
  8856  007E8E  FFFF               	dw	65535	; assembler added errata NOP
  8857  007E90  C001  F001         	movff	___aomod@dividend,?___aomod
  8858  007E94  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  8859  007E98  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  8860  007E9C  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  8861  007EA0  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  8862  007EA4  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  8863  007EA8  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  8864  007EAC  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  8865  007EB0  0012               	return		;funcret
  8866  007EB2  FFFF               	dw	65535	; errata NOP
  8867  007EB4                     __end_of___aomod:
  8868                           	callstack 0
  8869                           
  8870 ;; *************** function ___aodiv *****************
  8871 ;; Defined at:
  8872 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
  8873 ;; Parameters:    Size  Location     Type
  8874 ;;  dividend        8    0[COMRAM] long long 
  8875 ;;  divisor         8    8[COMRAM] long long 
  8876 ;; Auto vars:     Size  Location     Type
  8877 ;;  quotient        8   18[COMRAM] long long 
  8878 ;;  sign            1   17[COMRAM] unsigned char 
  8879 ;;  counter         1   16[COMRAM] unsigned char 
  8880 ;; Return value:  Size  Location     Type
  8881 ;;                  8    0[COMRAM] long long 
  8882 ;; Registers used:
  8883 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8884 ;; Tracked objects:
  8885 ;;		On entry : 0/0
  8886 ;;		On exit  : 0/0
  8887 ;;		Unchanged: 0/0
  8888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8889 ;;      Params:        16       0       0       0       0       0       0
  8890 ;;      Locals:        10       0       0       0       0       0       0
  8891 ;;      Temps:          0       0       0       0       0       0       0
  8892 ;;      Totals:        26       0       0       0       0       0       0
  8893 ;;Total ram usage:       26 bytes
  8894 ;; Hardware stack levels used:    1
  8895 ;; Hardware stack levels required when called:    1
  8896 ;; This function calls:
  8897 ;;		Nothing
  8898 ;; This function is called by:
  8899 ;;		_dtoa
  8900 ;; This function uses a non-reentrant model
  8901 ;;
  8902                           
  8903                           	psect	text22
  8904  003E24                     __ptext22:
  8905                           	callstack 0
  8906  003E24                     ___aodiv:
  8907                           	callstack 0
  8908  003E24  FFFF               	dw	65535	; assembler added errata NOP
  8909  003E26  0E00               	movlw	0
  8910  003E28  6E12               	movwf	___aodiv@sign^0,c
  8911  003E2A  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  8912  003E2C  EF1D  F01F         	goto	u3710
  8913  003E30  EF1A  F01F         	goto	u3711
  8914  003E34                     u3711:
  8915  003E34  FFFF               	dw	65535	; assembler added errata NOP
  8916  003E36  EF30  F01F         	goto	l3660
  8917  003E3A                     u3710:
  8918  003E3A  FFFF               	dw	65535	; assembler added errata NOP
  8919  003E3C  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  8920  003E3E  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  8921  003E40  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  8922  003E42  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  8923  003E44  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  8924  003E46  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  8925  003E48  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  8926  003E4A  6C09               	negf	___aodiv@divisor^0,c
  8927  003E4C  0E00               	movlw	0
  8928  003E4E  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  8929  003E50  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  8930  003E52  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  8931  003E54  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  8932  003E56  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  8933  003E58  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  8934  003E5A  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  8935  003E5C  0E01               	movlw	1
  8936  003E5E  6E12               	movwf	___aodiv@sign^0,c
  8937  003E60                     l3660:
  8938  003E60  FFFF               	dw	65535	; assembler added errata NOP
  8939  003E62  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  8940  003E64  EF39  F01F         	goto	u3720
  8941  003E68  EF36  F01F         	goto	u3721
  8942  003E6C                     u3721:
  8943  003E6C  FFFF               	dw	65535	; assembler added errata NOP
  8944  003E6E  EF4C  F01F         	goto	l3666
  8945  003E72                     u3720:
  8946  003E72  FFFF               	dw	65535	; assembler added errata NOP
  8947  003E74  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  8948  003E76  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  8949  003E78  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  8950  003E7A  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  8951  003E7C  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  8952  003E7E  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  8953  003E80  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  8954  003E82  6C01               	negf	___aodiv@dividend^0,c
  8955  003E84  0E00               	movlw	0
  8956  003E86  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  8957  003E88  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  8958  003E8A  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  8959  003E8C  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  8960  003E8E  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  8961  003E90  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  8962  003E92  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  8963  003E94  0E01               	movlw	1
  8964  003E96  1A12               	xorwf	___aodiv@sign^0,f,c
  8965  003E98                     l3666:
  8966  003E98  FFFF               	dw	65535	; assembler added errata NOP
  8967  003E9A  EE20  F013         	lfsr	2,___aodiv@quotient
  8968  003E9E  0E07               	movlw	7
  8969  003EA0                     u3731:
  8970  003EA0  6ADE               	clrf	postinc2,c
  8971  003EA2  06E8               	decf	wreg,f,c
  8972  003EA4  E2FD               	bc	u3731
  8973  003EA6  5009               	movf	___aodiv@divisor^0,w,c
  8974  003EA8  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  8975  003EAA  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  8976  003EAC  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  8977  003EAE  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  8978  003EB0  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  8979  003EB2  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  8980  003EB4  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  8981  003EB6  B4D8               	btfsc	status,2,c
  8982  003EB8  EF60  F01F         	goto	u3741
  8983  003EBC  EF63  F01F         	goto	u3740
  8984  003EC0                     u3741:
  8985  003EC0  FFFF               	dw	65535	; assembler added errata NOP
  8986  003EC2  EFBE  F01F         	goto	l3688
  8987  003EC6                     u3740:
  8988  003EC6  FFFF               	dw	65535	; assembler added errata NOP
  8989  003EC8  0E01               	movlw	1
  8990  003ECA  6E11               	movwf	___aodiv@counter^0,c
  8991  003ECC  EF73  F01F         	goto	l3674
  8992  003ED0                     l3672:
  8993  003ED0  FFFF               	dw	65535	; assembler added errata NOP
  8994  003ED2  90D8               	bcf	status,0,c
  8995  003ED4  3609               	rlcf	___aodiv@divisor^0,f,c
  8996  003ED6  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  8997  003ED8  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  8998  003EDA  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  8999  003EDC  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  9000  003EDE  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  9001  003EE0  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  9002  003EE2  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  9003  003EE4  2A11               	incf	___aodiv@counter^0,f,c
  9004  003EE6                     l3674:
  9005  003EE6  FFFF               	dw	65535	; assembler added errata NOP
  9006  003EE8  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  9007  003EEA  EF79  F01F         	goto	u3751
  9008  003EEE  EF7C  F01F         	goto	u3750
  9009  003EF2                     u3751:
  9010  003EF2  FFFF               	dw	65535	; assembler added errata NOP
  9011  003EF4  EF68  F01F         	goto	l3672
  9012  003EF8                     u3750:
  9013  003EF8  FFFF               	dw	65535	; assembler added errata NOP
  9014  003EFA                     l3676:
  9015  003EFA  FFFF               	dw	65535	; assembler added errata NOP
  9016  003EFC  90D8               	bcf	status,0,c
  9017  003EFE  3613               	rlcf	___aodiv@quotient^0,f,c
  9018  003F00  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  9019  003F02  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  9020  003F04  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  9021  003F06  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  9022  003F08  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  9023  003F0A  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  9024  003F0C  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  9025  003F0E  5009               	movf	___aodiv@divisor^0,w,c
  9026  003F10  5C01               	subwf	___aodiv@dividend^0,w,c
  9027  003F12  500A               	movf	(___aodiv@divisor+1)^0,w,c
  9028  003F14  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  9029  003F16  500B               	movf	(___aodiv@divisor+2)^0,w,c
  9030  003F18  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  9031  003F1A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  9032  003F1C  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  9033  003F1E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  9034  003F20  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  9035  003F22  500E               	movf	(___aodiv@divisor+5)^0,w,c
  9036  003F24  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  9037  003F26  500F               	movf	(___aodiv@divisor+6)^0,w,c
  9038  003F28  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  9039  003F2A  5010               	movf	(___aodiv@divisor+7)^0,w,c
  9040  003F2C  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  9041  003F2E  A0D8               	btfss	status,0,c
  9042  003F30  EF9C  F01F         	goto	u3761
  9043  003F34  EF9F  F01F         	goto	u3760
  9044  003F38                     u3761:
  9045  003F38  FFFF               	dw	65535	; assembler added errata NOP
  9046  003F3A  EFB1  F01F         	goto	l3684
  9047  003F3E                     u3760:
  9048  003F3E  FFFF               	dw	65535	; assembler added errata NOP
  9049  003F40  5009               	movf	___aodiv@divisor^0,w,c
  9050  003F42  5E01               	subwf	___aodiv@dividend^0,f,c
  9051  003F44  500A               	movf	(___aodiv@divisor+1)^0,w,c
  9052  003F46  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  9053  003F48  500B               	movf	(___aodiv@divisor+2)^0,w,c
  9054  003F4A  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  9055  003F4C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  9056  003F4E  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  9057  003F50  500D               	movf	(___aodiv@divisor+4)^0,w,c
  9058  003F52  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  9059  003F54  500E               	movf	(___aodiv@divisor+5)^0,w,c
  9060  003F56  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  9061  003F58  500F               	movf	(___aodiv@divisor+6)^0,w,c
  9062  003F5A  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  9063  003F5C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  9064  003F5E  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  9065  003F60  8013               	bsf	___aodiv@quotient^0,0,c
  9066  003F62                     l3684:
  9067  003F62  FFFF               	dw	65535	; assembler added errata NOP
  9068  003F64  90D8               	bcf	status,0,c
  9069  003F66  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  9070  003F68  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  9071  003F6A  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  9072  003F6C  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  9073  003F6E  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  9074  003F70  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  9075  003F72  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  9076  003F74  3209               	rrcf	___aodiv@divisor^0,f,c
  9077  003F76  2E11               	decfsz	___aodiv@counter^0,f,c
  9078  003F78  EF7D  F01F         	goto	l3676
  9079  003F7C                     l3688:
  9080  003F7C  FFFF               	dw	65535	; assembler added errata NOP
  9081  003F7E  5012               	movf	___aodiv@sign^0,w,c
  9082  003F80  B4D8               	btfsc	status,2,c
  9083  003F82  EFC5  F01F         	goto	u3771
  9084  003F86  EFC8  F01F         	goto	u3770
  9085  003F8A                     u3771:
  9086  003F8A  FFFF               	dw	65535	; assembler added errata NOP
  9087  003F8C  EFD9  F01F         	goto	l3692
  9088  003F90                     u3770:
  9089  003F90  FFFF               	dw	65535	; assembler added errata NOP
  9090  003F92  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  9091  003F94  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  9092  003F96  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  9093  003F98  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  9094  003F9A  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  9095  003F9C  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  9096  003F9E  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  9097  003FA0  6C13               	negf	___aodiv@quotient^0,c
  9098  003FA2  0E00               	movlw	0
  9099  003FA4  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  9100  003FA6  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  9101  003FA8  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  9102  003FAA  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  9103  003FAC  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  9104  003FAE  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  9105  003FB0  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  9106  003FB2                     l3692:
  9107  003FB2  FFFF               	dw	65535	; assembler added errata NOP
  9108  003FB4  C013  F001         	movff	___aodiv@quotient,?___aodiv
  9109  003FB8  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  9110  003FBC  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  9111  003FC0  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  9112  003FC4  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  9113  003FC8  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  9114  003FCC  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  9115  003FD0  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  9116  003FD4  0012               	return		;funcret
  9117  003FD6  FFFF               	dw	65535	; errata NOP
  9118  003FD8                     __end_of___aodiv:
  9119                           	callstack 0
  9120                           
  9121 ;; *************** function _ctoa *****************
  9122 ;; Defined at:
  9123 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  9124 ;; Parameters:    Size  Location     Type
  9125 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  9126 ;;		 -> vsnprintf@f(6), 
  9127 ;;  c               1   29[COMRAM] unsigned char 
  9128 ;; Auto vars:     Size  Location     Type
  9129 ;;  w               2   30[COMRAM] int 
  9130 ;;  l               2    0        int 
  9131 ;; Return value:  Size  Location     Type
  9132 ;;                  2   27[COMRAM] int 
  9133 ;; Registers used:
  9134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9135 ;; Tracked objects:
  9136 ;;		On entry : 0/0
  9137 ;;		On exit  : 0/0
  9138 ;;		Unchanged: 0/0
  9139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9140 ;;      Params:         3       0       0       0       0       0       0
  9141 ;;      Locals:         2       0       0       0       0       0       0
  9142 ;;      Temps:          0       0       0       0       0       0       0
  9143 ;;      Totals:         5       0       0       0       0       0       0
  9144 ;;Total ram usage:        5 bytes
  9145 ;; Hardware stack levels used:    1
  9146 ;; Hardware stack levels required when called:    5
  9147 ;; This function calls:
  9148 ;;		_pad
  9149 ;; This function is called by:
  9150 ;;		_vfpfcnvrt
  9151 ;; This function uses a non-reentrant model
  9152 ;;
  9153                           
  9154                           	psect	text23
  9155  006A46                     __ptext23:
  9156                           	callstack 0
  9157  006A46                     _ctoa:
  9158                           	callstack 0
  9159  006A46  FFFF               	dw	65535	; assembler added errata NOP
  9160  006A48                     
  9161                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  9162  006A48  0100               	movlb	0	; () banked
  9163  006A4A  5186               	movf	_width& (0+255),w,b
  9164  006A4C  1187               	iorwf	(_width+1)& (0+255),w,b
  9165  006A4E  A4D8               	btfss	status,2,c
  9166  006A50  EF2C  F035         	goto	u4061
  9167  006A54  EF2F  F035         	goto	u4060
  9168  006A58                     u4061:
  9169  006A58  FFFF               	dw	65535	; assembler added errata NOP
  9170  006A5A  EF36  F035         	goto	l3830
  9171  006A5E                     u4060:
  9172  006A5E  FFFF               	dw	65535	; assembler added errata NOP
  9173  006A60                     
  9174                           ; BSR set to: 0
  9175  006A60  C086  F01F         	movff	_width,ctoa@w
  9176  006A64  C087  F020         	movff	_width+1,ctoa@w+1
  9177  006A68  EF3D  F035         	goto	l3832
  9178  006A6C                     l3830:
  9179  006A6C  FFFF               	dw	65535	; assembler added errata NOP
  9180                           
  9181                           ; BSR set to: 0
  9182  006A6E  0EFF               	movlw	255
  9183  006A70  2586               	addwf	_width& (0+255),w,b
  9184  006A72  6E1F               	movwf	ctoa@w^0,c
  9185  006A74  0EFF               	movlw	255
  9186  006A76  2187               	addwfc	(_width+1)& (0+255),w,b
  9187  006A78  6E20               	movwf	(ctoa@w+1)^0,c
  9188  006A7A                     l3832:
  9189  006A7A  FFFF               	dw	65535	; assembler added errata NOP
  9190                           
  9191                           ; BSR set to: 0
  9192                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 267:     dbuf[0] 
      +                          = c;
  9193  006A7C  C01E  F098         	movff	ctoa@c,_dbuf
  9194  006A80                     
  9195                           ; BSR set to: 0
  9196                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 268:     dbuf[1] 
      +                          = '\0';
  9197  006A80  0E00               	movlw	0
  9198  006A82  6F99               	movwf	(_dbuf+1)& (0+255),b
  9199  006A84                     
  9200                           ; BSR set to: 0
  9201                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 269:     return p
      +                          ad(fp, &dbuf[0], w);
  9202  006A84  C01C  F011         	movff	ctoa@fp,pad@fp
  9203  006A88  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  9204  006A8C  0E98               	movlw	low _dbuf
  9205  006A8E  6E13               	movwf	pad@buf^0,c
  9206  006A90  0E00               	movlw	high _dbuf
  9207  006A92  6E14               	movwf	(pad@buf+1)^0,c
  9208  006A94  C01F  F015         	movff	ctoa@w,pad@p
  9209  006A98  C020  F016         	movff	ctoa@w+1,pad@p+1
  9210  006A9C  EC5E  F039         	call	_pad	;wreg free
  9211  006AA0  C011  F01C         	movff	?_pad,?_ctoa
  9212  006AA4  C012  F01D         	movff	?_pad+1,?_ctoa+1
  9213  006AA8  0012               	return		;funcret
  9214  006AAA  FFFF               	dw	65535	; errata NOP
  9215  006AAC                     __end_of_ctoa:
  9216                           	callstack 0
  9217                           
  9218 ;; *************** function _pad *****************
  9219 ;; Defined at:
  9220 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  9221 ;; Parameters:    Size  Location     Type
  9222 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  9223 ;;		 -> vsnprintf@f(6), 
  9224 ;;  buf             2   18[COMRAM] PTR unsigned char 
  9225 ;;		 -> dbuf(32), 
  9226 ;;  p               2   20[COMRAM] int 
  9227 ;; Auto vars:     Size  Location     Type
  9228 ;;  w               2   25[COMRAM] int 
  9229 ;;  i               2   23[COMRAM] int 
  9230 ;; Return value:  Size  Location     Type
  9231 ;;                  2   16[COMRAM] int 
  9232 ;; Registers used:
  9233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9234 ;; Tracked objects:
  9235 ;;		On entry : 0/0
  9236 ;;		On exit  : 0/0
  9237 ;;		Unchanged: 0/0
  9238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9239 ;;      Params:         6       0       0       0       0       0       0
  9240 ;;      Locals:         4       0       0       0       0       0       0
  9241 ;;      Temps:          1       0       0       0       0       0       0
  9242 ;;      Totals:        11       0       0       0       0       0       0
  9243 ;;Total ram usage:       11 bytes
  9244 ;; Hardware stack levels used:    1
  9245 ;; Hardware stack levels required when called:    4
  9246 ;; This function calls:
  9247 ;;		_fputc
  9248 ;;		_fputs
  9249 ;;		_strlen
  9250 ;; This function is called by:
  9251 ;;		_ctoa
  9252 ;;		_dtoa
  9253 ;;		_otoa
  9254 ;;		_utoa
  9255 ;;		_xtoa
  9256 ;; This function uses a non-reentrant model
  9257 ;;
  9258                           
  9259                           	psect	text24
  9260  0072BC                     __ptext24:
  9261                           	callstack 0
  9262  0072BC                     _pad:
  9263                           	callstack 0
  9264  0072BC  FFFF               	dw	65535	; assembler added errata NOP
  9265  0072BE                     
  9266                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  9267  0072BE  0100               	movlb	0	; () banked
  9268  0072C0  A18A               	btfss	_flags& (0+255),0,b
  9269  0072C2  EF65  F039         	goto	u3911
  9270  0072C6  EF68  F039         	goto	u3910
  9271  0072CA                     u3911:
  9272  0072CA  FFFF               	dw	65535	; assembler added errata NOP
  9273  0072CC  EF73  F039         	goto	l3774
  9274  0072D0                     u3910:
  9275  0072D0  FFFF               	dw	65535	; assembler added errata NOP
  9276  0072D2                     
  9277                           ; BSR set to: 0
  9278                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  9279  0072D2  C013  F00A         	movff	pad@buf,fputs@s
  9280  0072D6  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9281  0072DA  C011  F00C         	movff	pad@fp,fputs@fp
  9282  0072DE  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9283  0072E2  EC9D  F034         	call	_fputs	;wreg free
  9284  0072E6                     l3774:
  9285  0072E6  FFFF               	dw	65535	; assembler added errata NOP
  9286                           
  9287                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  9288  0072E8  BE16               	btfsc	(pad@p+1)^0,7,c
  9289  0072EA  EF79  F039         	goto	u3921
  9290  0072EE  EF7C  F039         	goto	u3920
  9291  0072F2                     u3921:
  9292  0072F2  FFFF               	dw	65535	; assembler added errata NOP
  9293  0072F4  EF83  F039         	goto	l3778
  9294  0072F8                     u3920:
  9295  0072F8  FFFF               	dw	65535	; assembler added errata NOP
  9296  0072FA  C015  F01A         	movff	pad@p,pad@w
  9297  0072FE  C016  F01B         	movff	pad@p+1,pad@w+1
  9298  007302  EF88  F039         	goto	l1142
  9299  007306                     l3778:
  9300  007306  FFFF               	dw	65535	; assembler added errata NOP
  9301  007308  0E00               	movlw	0
  9302  00730A  6E1B               	movwf	(pad@w+1)^0,c
  9303  00730C  0E00               	movlw	0
  9304  00730E  6E1A               	movwf	pad@w^0,c
  9305  007310                     l1142:
  9306  007310  FFFF               	dw	65535	; assembler added errata NOP
  9307                           
  9308                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  9309  007312  0E00               	movlw	0
  9310  007314  6E19               	movwf	(pad@i+1)^0,c
  9311  007316  0E00               	movlw	0
  9312  007318  6E18               	movwf	pad@i^0,c
  9313                           
  9314                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9315  00731A  EF9C  F039         	goto	l3784
  9316  00731E                     l3780:
  9317  00731E  FFFF               	dw	65535	; assembler added errata NOP
  9318                           
  9319                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  9320  007320  0E00               	movlw	0
  9321  007322  6E02               	movwf	(fputc@c+1)^0,c
  9322  007324  0E20               	movlw	32
  9323  007326  6E01               	movwf	fputc@c^0,c
  9324  007328  C011  F003         	movff	pad@fp,fputc@fp
  9325  00732C  C012  F004         	movff	pad@fp+1,fputc@fp+1
  9326  007330  ECED  F038         	call	_fputc	;wreg free
  9327  007334                     
  9328                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  9329  007334  4A18               	infsnz	pad@i^0,f,c
  9330  007336  2A19               	incf	(pad@i+1)^0,f,c
  9331  007338                     l3784:
  9332  007338  FFFF               	dw	65535	; assembler added errata NOP
  9333                           
  9334                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9335  00733A  501A               	movf	pad@w^0,w,c
  9336  00733C  5C18               	subwf	pad@i^0,w,c
  9337  00733E  5019               	movf	(pad@i+1)^0,w,c
  9338  007340  0A80               	xorlw	128
  9339  007342  6E17               	movwf	??_pad^0,c
  9340  007344  501B               	movf	(pad@w+1)^0,w,c
  9341  007346  0A80               	xorlw	128
  9342  007348  5817               	subwfb	??_pad^0,w,c
  9343  00734A  A0D8               	btfss	status,0,c
  9344  00734C  EFAA  F039         	goto	u3931
  9345  007350  EFAD  F039         	goto	u3930
  9346  007354                     u3931:
  9347  007354  FFFF               	dw	65535	; assembler added errata NOP
  9348  007356  EF8F  F039         	goto	l3780
  9349  00735A                     u3930:
  9350  00735A  FFFF               	dw	65535	; assembler added errata NOP
  9351  00735C                     
  9352                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  9353  00735C  0100               	movlb	0	; () banked
  9354  00735E  B18A               	btfsc	_flags& (0+255),0,b
  9355  007360  EFB4  F039         	goto	u3941
  9356  007364  EFB7  F039         	goto	u3940
  9357  007368                     u3941:
  9358  007368  FFFF               	dw	65535	; assembler added errata NOP
  9359  00736A  EFC2  F039         	goto	l3788
  9360  00736E                     u3940:
  9361  00736E  FFFF               	dw	65535	; assembler added errata NOP
  9362  007370                     
  9363                           ; BSR set to: 0
  9364                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  9365  007370  C013  F00A         	movff	pad@buf,fputs@s
  9366  007374  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9367  007378  C011  F00C         	movff	pad@fp,fputs@fp
  9368  00737C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9369  007380  EC9D  F034         	call	_fputs	;wreg free
  9370  007384                     l3788:
  9371  007384  FFFF               	dw	65535	; assembler added errata NOP
  9372                           
  9373                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  9374  007386  C013  F001         	movff	pad@buf,strlen@s
  9375  00738A  C014  F002         	movff	pad@buf+1,strlen@s+1
  9376  00738E  ECC5  F034         	call	_strlen	;wreg free
  9377  007392  501A               	movf	pad@w^0,w,c
  9378  007394  2401               	addwf	?_strlen^0,w,c
  9379  007396  6E11               	movwf	?_pad^0,c
  9380  007398  501B               	movf	(pad@w+1)^0,w,c
  9381  00739A  2002               	addwfc	(?_strlen+1)^0,w,c
  9382  00739C  6E12               	movwf	(?_pad+1)^0,c
  9383  00739E  0012               	return		;funcret
  9384  0073A0  FFFF               	dw	65535	; errata NOP
  9385  0073A2                     __end_of_pad:
  9386                           	callstack 0
  9387                           
  9388 ;; *************** function _strlen *****************
  9389 ;; Defined at:
  9390 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  9391 ;; Parameters:    Size  Location     Type
  9392 ;;  s               2    0[COMRAM] PTR const unsigned char 
  9393 ;;		 -> stoa@nuls(7), dbuf(32), ?_snprintf(2), STR_8(50), 
  9394 ;;		 -> STR_7(9), STR_6(7), STR_5(9), STR_4(39), 
  9395 ;;		 -> STR_3(9), STR_2(64), STR_1(49), 
  9396 ;; Auto vars:     Size  Location     Type
  9397 ;;  a               2    2[COMRAM] PTR const unsigned char 
  9398 ;;		 -> stoa@nuls(7), dbuf(32), ?_snprintf(2), STR_8(50), 
  9399 ;;		 -> STR_7(9), STR_6(7), STR_5(9), STR_4(39), 
  9400 ;;		 -> STR_3(9), STR_2(64), STR_1(49), 
  9401 ;; Return value:  Size  Location     Type
  9402 ;;                  2    0[COMRAM] unsigned int 
  9403 ;; Registers used:
  9404 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  9405 ;; Tracked objects:
  9406 ;;		On entry : 0/0
  9407 ;;		On exit  : 0/0
  9408 ;;		Unchanged: 0/0
  9409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9410 ;;      Params:         2       0       0       0       0       0       0
  9411 ;;      Locals:         2       0       0       0       0       0       0
  9412 ;;      Temps:          0       0       0       0       0       0       0
  9413 ;;      Totals:         4       0       0       0       0       0       0
  9414 ;;Total ram usage:        4 bytes
  9415 ;; Hardware stack levels used:    1
  9416 ;; Hardware stack levels required when called:    1
  9417 ;; This function calls:
  9418 ;;		Nothing
  9419 ;; This function is called by:
  9420 ;;		_pad
  9421 ;;		_stoa
  9422 ;; This function uses a non-reentrant model
  9423 ;;
  9424                           
  9425                           	psect	text25
  9426  00698A                     __ptext25:
  9427                           	callstack 0
  9428  00698A                     _strlen:
  9429                           	callstack 0
  9430  00698A  FFFF               	dw	65535	; assembler added errata NOP
  9431  00698C  C001  F003         	movff	strlen@s,strlen@a
  9432  006990  C002  F004         	movff	strlen@s+1,strlen@a+1
  9433  006994  EFCF  F034         	goto	l3632
  9434  006998                     l3630:
  9435  006998  FFFF               	dw	65535	; assembler added errata NOP
  9436  00699A  4A01               	infsnz	strlen@s^0,f,c
  9437  00699C  2A02               	incf	(strlen@s+1)^0,f,c
  9438  00699E                     l3632:
  9439  00699E  FFFF               	dw	65535	; assembler added errata NOP
  9440  0069A0  C001  FFF6         	movff	strlen@s,tblptrl
  9441  0069A4  C002  FFF7         	movff	strlen@s+1,tblptrh
  9442  0069A8  6AF8               	clrf	tblptru,c
  9443  0069AA  0E05               	movlw	(high __ramtop+-1)
  9444  0069AC  64F7               	cpfsgt	tblptrh,c
  9445  0069AE  D004               	bra	u3667
  9446  0069B0  0008               	tblrd		*
  9447  0069B2  FFFF               	dw	65535	; errata NOP
  9448  0069B4  50F5               	movf	tablat,w,c
  9449  0069B6  D005               	bra	u3660
  9450  0069B8                     u3667:
  9451  0069B8  CFF6 FFE1          	movff	tblptrl,fsr1l
  9452  0069BC  CFF7 FFE2          	movff	tblptrh,fsr1h
  9453  0069C0  50E7               	movf	indf1,w,c
  9454  0069C2                     u3660:
  9455  0069C2  0900               	iorlw	0
  9456  0069C4  A4D8               	btfss	status,2,c
  9457  0069C6  EFE7  F034         	goto	u3671
  9458  0069CA  EFEA  F034         	goto	u3670
  9459  0069CE                     u3671:
  9460  0069CE  FFFF               	dw	65535	; assembler added errata NOP
  9461  0069D0  EFCC  F034         	goto	l3630
  9462  0069D4                     u3670:
  9463  0069D4  FFFF               	dw	65535	; assembler added errata NOP
  9464  0069D6  5003               	movf	strlen@a^0,w,c
  9465  0069D8  5C01               	subwf	strlen@s^0,w,c
  9466  0069DA  6E01               	movwf	?_strlen^0,c
  9467  0069DC  5004               	movf	(strlen@a+1)^0,w,c
  9468  0069DE  5802               	subwfb	(strlen@s+1)^0,w,c
  9469  0069E0  6E02               	movwf	(?_strlen+1)^0,c
  9470  0069E2  0012               	return		;funcret
  9471  0069E4  FFFF               	dw	65535	; errata NOP
  9472  0069E6                     __end_of_strlen:
  9473                           	callstack 0
  9474                           
  9475 ;; *************** function _fputs *****************
  9476 ;; Defined at:
  9477 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  9478 ;; Parameters:    Size  Location     Type
  9479 ;;  s               2    9[COMRAM] PTR const unsigned char 
  9480 ;;		 -> dbuf(32), 
  9481 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  9482 ;;		 -> vsnprintf@f(6), 
  9483 ;; Auto vars:     Size  Location     Type
  9484 ;;  i               2   14[COMRAM] int 
  9485 ;;  c               1   13[COMRAM] unsigned char 
  9486 ;; Return value:  Size  Location     Type
  9487 ;;                  2    9[COMRAM] int 
  9488 ;; Registers used:
  9489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9490 ;; Tracked objects:
  9491 ;;		On entry : 0/0
  9492 ;;		On exit  : 0/0
  9493 ;;		Unchanged: 0/0
  9494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9495 ;;      Params:         4       0       0       0       0       0       0
  9496 ;;      Locals:         3       0       0       0       0       0       0
  9497 ;;      Temps:          0       0       0       0       0       0       0
  9498 ;;      Totals:         7       0       0       0       0       0       0
  9499 ;;Total ram usage:        7 bytes
  9500 ;; Hardware stack levels used:    1
  9501 ;; Hardware stack levels required when called:    3
  9502 ;; This function calls:
  9503 ;;		_fputc
  9504 ;; This function is called by:
  9505 ;;		_pad
  9506 ;; This function uses a non-reentrant model
  9507 ;;
  9508                           
  9509                           	psect	text26
  9510  00693A                     __ptext26:
  9511                           	callstack 0
  9512  00693A                     _fputs:
  9513                           	callstack 0
  9514  00693A  FFFF               	dw	65535	; assembler added errata NOP
  9515  00693C  0E00               	movlw	0
  9516  00693E  6E10               	movwf	(fputs@i+1)^0,c
  9517  006940  0E00               	movlw	0
  9518  006942  6E0F               	movwf	fputs@i^0,c
  9519  006944  EFB0  F034         	goto	l3626
  9520  006948                     l3622:
  9521  006948  FFFF               	dw	65535	; assembler added errata NOP
  9522  00694A  C00E  F001         	movff	fputs@c,fputc@c
  9523  00694E  6A02               	clrf	(fputc@c+1)^0,c
  9524  006950  C00C  F003         	movff	fputs@fp,fputc@fp
  9525  006954  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  9526  006958  ECED  F038         	call	_fputc	;wreg free
  9527  00695C  4A0F               	infsnz	fputs@i^0,f,c
  9528  00695E  2A10               	incf	(fputs@i+1)^0,f,c
  9529  006960                     l3626:
  9530  006960  FFFF               	dw	65535	; assembler added errata NOP
  9531  006962  500F               	movf	fputs@i^0,w,c
  9532  006964  240A               	addwf	fputs@s^0,w,c
  9533  006966  6ED9               	movwf	fsr2l,c
  9534  006968  5010               	movf	(fputs@i+1)^0,w,c
  9535  00696A  200B               	addwfc	(fputs@s+1)^0,w,c
  9536  00696C  6EDA               	movwf	fsr2h,c
  9537  00696E  50DF               	movf	indf2,w,c
  9538  006970  6E0E               	movwf	fputs@c^0,c
  9539  006972  500E               	movf	fputs@c^0,w,c
  9540  006974  A4D8               	btfss	status,2,c
  9541  006976  EFBF  F034         	goto	u3651
  9542  00697A  EFC2  F034         	goto	u3650
  9543  00697E                     u3651:
  9544  00697E  FFFF               	dw	65535	; assembler added errata NOP
  9545  006980  EFA4  F034         	goto	l3622
  9546  006984                     u3650:
  9547  006984  FFFF               	dw	65535	; assembler added errata NOP
  9548  006986  0012               	return		;funcret
  9549  006988  FFFF               	dw	65535	; errata NOP
  9550  00698A                     __end_of_fputs:
  9551                           	callstack 0
  9552                           
  9553 ;; *************** function _fputc *****************
  9554 ;; Defined at:
  9555 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  9556 ;; Parameters:    Size  Location     Type
  9557 ;;  c               2    0[COMRAM] int 
  9558 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  9559 ;;		 -> vsnprintf@f(6), 
  9560 ;; Auto vars:     Size  Location     Type
  9561 ;;		None
  9562 ;; Return value:  Size  Location     Type
  9563 ;;                  2    0[COMRAM] int 
  9564 ;; Registers used:
  9565 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9566 ;; Tracked objects:
  9567 ;;		On entry : 0/0
  9568 ;;		On exit  : 0/0
  9569 ;;		Unchanged: 0/0
  9570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9571 ;;      Params:         4       0       0       0       0       0       0
  9572 ;;      Locals:         0       0       0       0       0       0       0
  9573 ;;      Temps:          5       0       0       0       0       0       0
  9574 ;;      Totals:         9       0       0       0       0       0       0
  9575 ;;Total ram usage:        9 bytes
  9576 ;; Hardware stack levels used:    1
  9577 ;; Hardware stack levels required when called:    2
  9578 ;; This function calls:
  9579 ;;		_putch
  9580 ;; This function is called by:
  9581 ;;		_pad
  9582 ;;		_stoa
  9583 ;;		_vfpfcnvrt
  9584 ;;		_fputs
  9585 ;; This function uses a non-reentrant model
  9586 ;;
  9587                           
  9588                           	psect	text27
  9589  0071DA                     __ptext27:
  9590                           	callstack 0
  9591  0071DA                     _fputc:
  9592                           	callstack 0
  9593  0071DA  FFFF               	dw	65535	; assembler added errata NOP
  9594  0071DC  5003               	movf	fputc@fp^0,w,c
  9595  0071DE  1004               	iorwf	(fputc@fp+1)^0,w,c
  9596  0071E0  B4D8               	btfsc	status,2,c
  9597  0071E2  EFF5  F038         	goto	u3611
  9598  0071E6  EFF8  F038         	goto	u3610
  9599  0071EA                     u3611:
  9600  0071EA  FFFF               	dw	65535	; assembler added errata NOP
  9601  0071EC  EF03  F039         	goto	l3610
  9602  0071F0                     u3610:
  9603  0071F0  FFFF               	dw	65535	; assembler added errata NOP
  9604  0071F2  5003               	movf	fputc@fp^0,w,c
  9605  0071F4  1004               	iorwf	(fputc@fp+1)^0,w,c
  9606  0071F6  A4D8               	btfss	status,2,c
  9607  0071F8  EF00  F039         	goto	u3621
  9608  0071FC  EF03  F039         	goto	u3620
  9609  007200                     u3621:
  9610  007200  FFFF               	dw	65535	; assembler added errata NOP
  9611  007202  EF09  F039         	goto	l3612
  9612  007206                     u3620:
  9613  007206                     l3610:
  9614  007206  FFFF               	dw	65535	; assembler added errata NOP
  9615  007208  5001               	movf	fputc@c^0,w,c
  9616  00720A  EC6A  F032         	call	_putch
  9617  00720E  EF5B  F039         	goto	l1417
  9618  007212                     l3612:
  9619  007212  FFFF               	dw	65535	; assembler added errata NOP
  9620  007214  EE20 F004          	lfsr	2,4
  9621  007218  5003               	movf	fputc@fp^0,w,c
  9622  00721A  26D9               	addwf	fsr2l,f,c
  9623  00721C  5004               	movf	(fputc@fp+1)^0,w,c
  9624  00721E  22DA               	addwfc	fsr2h,f,c
  9625  007220  50DE               	movf	postinc2,w,c
  9626  007222  10DE               	iorwf	postinc2,w,c
  9627  007224  B4D8               	btfsc	status,2,c
  9628  007226  EF17  F039         	goto	u3631
  9629  00722A  EF1A  F039         	goto	u3630
  9630  00722E                     u3631:
  9631  00722E  FFFF               	dw	65535	; assembler added errata NOP
  9632  007230  EF37  F039         	goto	l3616
  9633  007234                     u3630:
  9634  007234  FFFF               	dw	65535	; assembler added errata NOP
  9635  007236  EE20 F004          	lfsr	2,4
  9636  00723A  5003               	movf	fputc@fp^0,w,c
  9637  00723C  26D9               	addwf	fsr2l,f,c
  9638  00723E  5004               	movf	(fputc@fp+1)^0,w,c
  9639  007240  22DA               	addwfc	fsr2h,f,c
  9640  007242  EE10 F002          	lfsr	1,2
  9641  007246  5003               	movf	fputc@fp^0,w,c
  9642  007248  26E1               	addwf	fsr1l,f,c
  9643  00724A  5004               	movf	(fputc@fp+1)^0,w,c
  9644  00724C  22E2               	addwfc	fsr1h,f,c
  9645  00724E  50DE               	movf	postinc2,w,c
  9646  007250  5CE6               	subwf	postinc1,w,c
  9647  007252  50E6               	movf	postinc1,w,c
  9648  007254  0A80               	xorlw	128
  9649  007256  6E09               	movwf	(??_fputc+4)^0,c
  9650  007258  50DE               	movf	postinc2,w,c
  9651  00725A  0A80               	xorlw	128
  9652  00725C  5809               	subwfb	(??_fputc+4)^0,w,c
  9653  00725E  B0D8               	btfsc	status,0,c
  9654  007260  EF34  F039         	goto	u3641
  9655  007264  EF37  F039         	goto	u3640
  9656  007268                     u3641:
  9657  007268  FFFF               	dw	65535	; assembler added errata NOP
  9658  00726A  EF5B  F039         	goto	l1417
  9659  00726E                     u3640:
  9660  00726E                     l3616:
  9661  00726E  FFFF               	dw	65535	; assembler added errata NOP
  9662  007270  EE20 F002          	lfsr	2,2
  9663  007274  5003               	movf	fputc@fp^0,w,c
  9664  007276  26D9               	addwf	fsr2l,f,c
  9665  007278  5004               	movf	(fputc@fp+1)^0,w,c
  9666  00727A  22DA               	addwfc	fsr2h,f,c
  9667  00727C  CFDE F005          	movff	postinc2,??_fputc
  9668  007280  CFDD F006          	movff	postdec2,??_fputc+1
  9669  007284  C003  FFD9         	movff	fputc@fp,fsr2l
  9670  007288  C004  FFDA         	movff	fputc@fp+1,fsr2h
  9671  00728C  CFDE F007          	movff	postinc2,??_fputc+2
  9672  007290  CFDD F008          	movff	postdec2,??_fputc+3
  9673  007294  5005               	movf	??_fputc^0,w,c
  9674  007296  2407               	addwf	(??_fputc+2)^0,w,c
  9675  007298  6ED9               	movwf	fsr2l,c
  9676  00729A  5006               	movf	(??_fputc+1)^0,w,c
  9677  00729C  2008               	addwfc	(??_fputc+3)^0,w,c
  9678  00729E  6EDA               	movwf	fsr2h,c
  9679  0072A0  C001  FFDF         	movff	fputc@c,indf2
  9680  0072A4  EE20 F002          	lfsr	2,2
  9681  0072A8  5003               	movf	fputc@fp^0,w,c
  9682  0072AA  26D9               	addwf	fsr2l,f,c
  9683  0072AC  5004               	movf	(fputc@fp+1)^0,w,c
  9684  0072AE  22DA               	addwfc	fsr2h,f,c
  9685  0072B0  2ADE               	incf	postinc2,f,c
  9686  0072B2  0E00               	movlw	0
  9687  0072B4  22DD               	addwfc	postdec2,f,c
  9688  0072B6                     l1417:
  9689  0072B6  FFFF               	dw	65535	; assembler added errata NOP
  9690  0072B8  0012               	return		;funcret
  9691  0072BA  FFFF               	dw	65535	; errata NOP
  9692  0072BC                     __end_of_fputc:
  9693                           	callstack 0
  9694                           
  9695 ;; *************** function _putch *****************
  9696 ;; Defined at:
  9697 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
  9698 ;; Parameters:    Size  Location     Type
  9699 ;;  c               1    wreg     unsigned char 
  9700 ;; Auto vars:     Size  Location     Type
  9701 ;;  c               1    0[COMRAM] unsigned char 
  9702 ;; Return value:  Size  Location     Type
  9703 ;;                  1    wreg      void 
  9704 ;; Registers used:
  9705 ;;		wreg
  9706 ;; Tracked objects:
  9707 ;;		On entry : 0/0
  9708 ;;		On exit  : 0/0
  9709 ;;		Unchanged: 0/0
  9710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9711 ;;      Params:         0       0       0       0       0       0       0
  9712 ;;      Locals:         0       0       0       0       0       0       0
  9713 ;;      Temps:          0       0       0       0       0       0       0
  9714 ;;      Totals:         0       0       0       0       0       0       0
  9715 ;;Total ram usage:        0 bytes
  9716 ;; Hardware stack levels used:    1
  9717 ;; Hardware stack levels required when called:    1
  9718 ;; This function calls:
  9719 ;;		Nothing
  9720 ;; This function is called by:
  9721 ;;		_fputc
  9722 ;; This function uses a non-reentrant model
  9723 ;;
  9724                           
  9725                           	psect	text28
  9726  0064D4                     __ptext28:
  9727                           	callstack 0
  9728  0064D4                     _putch:
  9729                           	callstack 0
  9730  0064D4  FFFF               	dw	65535	; assembler added errata NOP
  9731  0064D6  0012               	return		;funcret
  9732  0064D8  FFFF               	dw	65535	; errata NOP
  9733  0064DA                     __end_of_putch:
  9734                           	callstack 0
  9735                           
  9736 ;; *************** function _atoi *****************
  9737 ;; Defined at:
  9738 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
  9739 ;; Parameters:    Size  Location     Type
  9740 ;;  s               2    7[COMRAM] PTR const unsigned char 
  9741 ;;		 -> STR_10(3), 
  9742 ;; Auto vars:     Size  Location     Type
  9743 ;;  n               2   20[COMRAM] int 
  9744 ;;  neg             2   13[COMRAM] int 
  9745 ;; Return value:  Size  Location     Type
  9746 ;;                  2    7[COMRAM] int 
  9747 ;; Registers used:
  9748 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9749 ;; Tracked objects:
  9750 ;;		On entry : 0/0
  9751 ;;		On exit  : 0/0
  9752 ;;		Unchanged: 0/0
  9753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9754 ;;      Params:         2       0       0       0       0       0       0
  9755 ;;      Locals:         9       0       0       0       0       0       0
  9756 ;;      Temps:          4       0       0       0       0       0       0
  9757 ;;      Totals:        15       0       0       0       0       0       0
  9758 ;;Total ram usage:       15 bytes
  9759 ;; Hardware stack levels used:    1
  9760 ;; Hardware stack levels required when called:    2
  9761 ;; This function calls:
  9762 ;;		___wmul
  9763 ;;		_isdigit
  9764 ;;		_isspace
  9765 ;; This function is called by:
  9766 ;;		_vfpfcnvrt
  9767 ;; This function uses a non-reentrant model
  9768 ;;
  9769                           
  9770                           	psect	text29
  9771  003C56                     __ptext29:
  9772                           	callstack 0
  9773  003C56                     _atoi:
  9774                           	callstack 0
  9775  003C56  FFFF               	dw	65535	; assembler added errata NOP
  9776  003C58  0E00               	movlw	0
  9777  003C5A  6E16               	movwf	(atoi@n+1)^0,c
  9778  003C5C  0E00               	movlw	0
  9779  003C5E  6E15               	movwf	atoi@n^0,c
  9780  003C60  0E00               	movlw	0
  9781  003C62  6E0F               	movwf	(atoi@neg+1)^0,c
  9782  003C64  0E00               	movlw	0
  9783  003C66  6E0E               	movwf	atoi@neg^0,c
  9784  003C68  EF39  F01E         	goto	l4098
  9785  003C6C                     l4096:
  9786  003C6C  FFFF               	dw	65535	; assembler added errata NOP
  9787  003C6E  4A08               	infsnz	atoi@s^0,f,c
  9788  003C70  2A09               	incf	(atoi@s+1)^0,f,c
  9789  003C72                     l4098:
  9790  003C72  FFFF               	dw	65535	; assembler added errata NOP
  9791  003C74  0E01               	movlw	1
  9792  003C76  6E14               	movwf	_atoi$1809^0,c
  9793  003C78  C008  FFF6         	movff	atoi@s,tblptrl
  9794  003C7C  C009  FFF7         	movff	atoi@s+1,tblptrh
  9795  003C80                     	if	0	;tblptru may be non-zero
  9796  003C80                     	endif
  9797  003C80                     	if	0	;tblptru may be non-zero
  9798  003C80                     	endif
  9799  003C80  0008               	tblrd		*
  9800  003C82  FFFF               	dw	65535	; errata NOP
  9801  003C84  50F5               	movf	tablat,w,c
  9802  003C86  0A20               	xorlw	32
  9803  003C88  B4D8               	btfsc	status,2,c
  9804  003C8A  EF49  F01E         	goto	u4661
  9805  003C8E  EF4C  F01E         	goto	u4660
  9806  003C92                     u4661:
  9807  003C92  FFFF               	dw	65535	; assembler added errata NOP
  9808  003C94  EF6D  F01E         	goto	l4106
  9809  003C98                     u4660:
  9810  003C98  FFFF               	dw	65535	; assembler added errata NOP
  9811  003C9A  0EF7               	movlw	247
  9812  003C9C  6E0A               	movwf	??_atoi^0,c
  9813  003C9E  0EFF               	movlw	255
  9814  003CA0  6E0B               	movwf	(??_atoi+1)^0,c
  9815  003CA2  C008  FFF6         	movff	atoi@s,tblptrl
  9816  003CA6  C009  FFF7         	movff	atoi@s+1,tblptrh
  9817  003CAA                     	if	0	;tblptru may be non-zero
  9818  003CAA                     	endif
  9819  003CAA                     	if	0	;tblptru may be non-zero
  9820  003CAA                     	endif
  9821  003CAA  0008               	tblrd		*
  9822  003CAC  FFFF               	dw	65535	; errata NOP
  9823  003CAE  50F5               	movf	tablat,w,c
  9824  003CB0  6E0C               	movwf	(??_atoi+2)^0,c
  9825  003CB2  6A0D               	clrf	(??_atoi+3)^0,c
  9826  003CB4  500A               	movf	??_atoi^0,w,c
  9827  003CB6  260C               	addwf	(??_atoi+2)^0,f,c
  9828  003CB8  500B               	movf	(??_atoi+1)^0,w,c
  9829  003CBA  220D               	addwfc	(??_atoi+3)^0,f,c
  9830  003CBC  500D               	movf	(??_atoi+3)^0,w,c
  9831  003CBE  E10A               	bnz	u4670
  9832  003CC0  0E05               	movlw	5
  9833  003CC2  5C0C               	subwf	(??_atoi+2)^0,w,c
  9834  003CC4  A0D8               	btfss	status,0,c
  9835  003CC6  EF67  F01E         	goto	u4671
  9836  003CCA  EF6A  F01E         	goto	u4670
  9837  003CCE                     u4671:
  9838  003CCE  FFFF               	dw	65535	; assembler added errata NOP
  9839  003CD0  EF6D  F01E         	goto	l4106
  9840  003CD4                     u4670:
  9841  003CD4  FFFF               	dw	65535	; assembler added errata NOP
  9842  003CD6  0E00               	movlw	0
  9843  003CD8  6E14               	movwf	_atoi$1809^0,c
  9844  003CDA                     l4106:
  9845  003CDA  FFFF               	dw	65535	; assembler added errata NOP
  9846  003CDC  C014  F010         	movff	_atoi$1809,_atoi$1808
  9847  003CE0  6A11               	clrf	(_atoi$1808+1)^0,c
  9848  003CE2  5010               	movf	_atoi$1808^0,w,c
  9849  003CE4  1011               	iorwf	(_atoi$1808+1)^0,w,c
  9850  003CE6  A4D8               	btfss	status,2,c
  9851  003CE8  EF78  F01E         	goto	u4681
  9852  003CEC  EF7B  F01E         	goto	u4680
  9853  003CF0                     u4681:
  9854  003CF0  FFFF               	dw	65535	; assembler added errata NOP
  9855  003CF2  EF36  F01E         	goto	l4096
  9856  003CF6                     u4680:
  9857  003CF6  FFFF               	dw	65535	; assembler added errata NOP
  9858  003CF8  EF88  F01E         	goto	l4116
  9859  003CFC                     l4112:
  9860  003CFC  FFFF               	dw	65535	; assembler added errata NOP
  9861  003CFE  0E00               	movlw	0
  9862  003D00  6E0F               	movwf	(atoi@neg+1)^0,c
  9863  003D02  0E01               	movlw	1
  9864  003D04  6E0E               	movwf	atoi@neg^0,c
  9865  003D06                     l4114:
  9866  003D06  FFFF               	dw	65535	; assembler added errata NOP
  9867  003D08  4A08               	infsnz	atoi@s^0,f,c
  9868  003D0A  2A09               	incf	(atoi@s+1)^0,f,c
  9869  003D0C  EFC2  F01E         	goto	l4122
  9870  003D10                     l4116:
  9871  003D10  FFFF               	dw	65535	; assembler added errata NOP
  9872  003D12  C008  FFF6         	movff	atoi@s,tblptrl
  9873  003D16  C009  FFF7         	movff	atoi@s+1,tblptrh
  9874  003D1A                     	if	0	;tblptru may be non-zero
  9875  003D1A                     	endif
  9876  003D1A                     	if	0	;tblptru may be non-zero
  9877  003D1A                     	endif
  9878  003D1A  0008               	tblrd		*
  9879  003D1C  FFFF               	dw	65535	; errata NOP
  9880  003D1E  50F5               	movf	tablat,w,c
  9881  003D20  6E0A               	movwf	??_atoi^0,c
  9882  003D22  6A0B               	clrf	(??_atoi+1)^0,c
  9883                           
  9884                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9885                           ; Switch size 1, requested type "simple"
  9886                           ; Number of cases is 1, Range of values is 0 to 0
  9887                           ; switch strategies available:
  9888                           ; Name         Instructions Cycles
  9889                           ; simple_byte            4     3 (average)
  9890                           ;	Chosen strategy is simple_byte
  9891  003D24  500B               	movf	(??_atoi+1)^0,w,c
  9892  003D26  0A00               	xorlw	0	; case 0
  9893  003D28  B4D8               	btfsc	status,2,c
  9894  003D2A  EF99  F01E         	goto	l5764
  9895  003D2E  EFC2  F01E         	goto	l4122
  9896  003D32                     l5764:
  9897  003D32  FFFF               	dw	65535	; assembler added errata NOP
  9898                           
  9899                           ; Switch size 1, requested type "simple"
  9900                           ; Number of cases is 2, Range of values is 43 to 45
  9901                           ; switch strategies available:
  9902                           ; Name         Instructions Cycles
  9903                           ; simple_byte            7     4 (average)
  9904                           ;	Chosen strategy is simple_byte
  9905  003D34  500A               	movf	??_atoi^0,w,c
  9906  003D36  0A2B               	xorlw	43	; case 43
  9907  003D38  B4D8               	btfsc	status,2,c
  9908  003D3A  EF83  F01E         	goto	l4114
  9909  003D3E  0A06               	xorlw	6	; case 45
  9910  003D40  B4D8               	btfsc	status,2,c
  9911  003D42  EF7E  F01E         	goto	l4112
  9912  003D46  EFC2  F01E         	goto	l4122
  9913  003D4A                     l4118:
  9914  003D4A  FFFF               	dw	65535	; assembler added errata NOP
  9915  003D4C  C015  F001         	movff	atoi@n,___wmul@multiplier
  9916  003D50  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  9917  003D54  0E00               	movlw	0
  9918  003D56  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9919  003D58  0E0A               	movlw	10
  9920  003D5A  6E03               	movwf	___wmul@multiplicand^0,c
  9921  003D5C  EC0C  F033         	call	___wmul	;wreg free
  9922  003D60  C008  FFF6         	movff	atoi@s,tblptrl
  9923  003D64  C009  FFF7         	movff	atoi@s+1,tblptrh
  9924  003D68                     	if	0	;tblptru may be non-zero
  9925  003D68                     	endif
  9926  003D68                     	if	0	;tblptru may be non-zero
  9927  003D68                     	endif
  9928  003D68  0008               	tblrd		*
  9929  003D6A  FFFF               	dw	65535	; errata NOP
  9930  003D6C  50F5               	movf	tablat,w,c
  9931  003D6E  5E01               	subwf	?___wmul^0,f,c
  9932  003D70  0E00               	movlw	0
  9933  003D72  5A02               	subwfb	(?___wmul+1)^0,f,c
  9934  003D74  0E30               	movlw	48
  9935  003D76  2401               	addwf	?___wmul^0,w,c
  9936  003D78  6E15               	movwf	atoi@n^0,c
  9937  003D7A  0E00               	movlw	0
  9938  003D7C  2002               	addwfc	(?___wmul+1)^0,w,c
  9939  003D7E  6E16               	movwf	(atoi@n+1)^0,c
  9940  003D80  EF83  F01E         	goto	l4114
  9941  003D84                     l4122:
  9942  003D84  FFFF               	dw	65535	; assembler added errata NOP
  9943  003D86  0ED0               	movlw	208
  9944  003D88  6E0A               	movwf	??_atoi^0,c
  9945  003D8A  0EFF               	movlw	255
  9946  003D8C  6E0B               	movwf	(??_atoi+1)^0,c
  9947  003D8E  C008  FFF6         	movff	atoi@s,tblptrl
  9948  003D92  C009  FFF7         	movff	atoi@s+1,tblptrh
  9949  003D96                     	if	0	;tblptru may be non-zero
  9950  003D96                     	endif
  9951  003D96                     	if	0	;tblptru may be non-zero
  9952  003D96                     	endif
  9953  003D96  0008               	tblrd		*
  9954  003D98  FFFF               	dw	65535	; errata NOP
  9955  003D9A  50F5               	movf	tablat,w,c
  9956  003D9C  6E0C               	movwf	(??_atoi+2)^0,c
  9957  003D9E  6A0D               	clrf	(??_atoi+3)^0,c
  9958  003DA0  500A               	movf	??_atoi^0,w,c
  9959  003DA2  260C               	addwf	(??_atoi+2)^0,f,c
  9960  003DA4  500B               	movf	(??_atoi+1)^0,w,c
  9961  003DA6  220D               	addwfc	(??_atoi+3)^0,f,c
  9962  003DA8  500D               	movf	(??_atoi+3)^0,w,c
  9963  003DAA  E10B               	bnz	u4690
  9964  003DAC  0E0A               	movlw	10
  9965  003DAE  5C0C               	subwf	(??_atoi+2)^0,w,c
  9966  003DB0  A0D8               	btfss	status,0,c
  9967  003DB2  EFDD  F01E         	goto	u4691
  9968  003DB6  EFE1  F01E         	goto	u4690
  9969  003DBA                     u4691:
  9970  003DBA  FFFF               	dw	65535	; assembler added errata NOP
  9971  003DBC  0E01               	movlw	1
  9972  003DBE  EFE3  F01E         	goto	u4700
  9973  003DC2                     u4690:
  9974  003DC2  FFFF               	dw	65535	; assembler added errata NOP
  9975  003DC4  0E00               	movlw	0
  9976  003DC6                     u4700:
  9977  003DC6  FFFF               	dw	65535	; assembler added errata NOP
  9978  003DC8  6E12               	movwf	_atoi$1810^0,c
  9979  003DCA  6A13               	clrf	(_atoi$1810+1)^0,c
  9980  003DCC  5012               	movf	_atoi$1810^0,w,c
  9981  003DCE  1013               	iorwf	(_atoi$1810+1)^0,w,c
  9982  003DD0  A4D8               	btfss	status,2,c
  9983  003DD2  EFED  F01E         	goto	u4711
  9984  003DD6  EFF0  F01E         	goto	u4710
  9985  003DDA                     u4711:
  9986  003DDA  FFFF               	dw	65535	; assembler added errata NOP
  9987  003DDC  EFA5  F01E         	goto	l4118
  9988  003DE0                     u4710:
  9989  003DE0  FFFF               	dw	65535	; assembler added errata NOP
  9990  003DE2  500E               	movf	atoi@neg^0,w,c
  9991  003DE4  100F               	iorwf	(atoi@neg+1)^0,w,c
  9992  003DE6  A4D8               	btfss	status,2,c
  9993  003DE8  EFF8  F01E         	goto	u4721
  9994  003DEC  EFFB  F01E         	goto	u4720
  9995  003DF0                     u4721:
  9996  003DF0  FFFF               	dw	65535	; assembler added errata NOP
  9997  003DF2  EF0A  F01F         	goto	l1374
  9998  003DF6                     u4720:
  9999  003DF6  FFFF               	dw	65535	; assembler added errata NOP
 10000  003DF8  C015  F00A         	movff	atoi@n,??_atoi
 10001  003DFC  C016  F00B         	movff	atoi@n+1,??_atoi+1
 10002  003E00  1E0A               	comf	??_atoi^0,f,c
 10003  003E02  1E0B               	comf	(??_atoi+1)^0,f,c
 10004  003E04  4A0A               	infsnz	??_atoi^0,f,c
 10005  003E06  2A0B               	incf	(??_atoi+1)^0,f,c
 10006  003E08  C00A  F008         	movff	??_atoi,?_atoi
 10007  003E0C  C00B  F009         	movff	??_atoi+1,?_atoi+1
 10008  003E10  EF0F  F01F         	goto	l1377
 10009  003E14                     l1374:
 10010  003E14  FFFF               	dw	65535	; assembler added errata NOP
 10011  003E16  C015  F008         	movff	atoi@n,?_atoi
 10012  003E1A  C016  F009         	movff	atoi@n+1,?_atoi+1
 10013  003E1E                     l1377:
 10014  003E1E  FFFF               	dw	65535	; assembler added errata NOP
 10015  003E20  0012               	return		;funcret
 10016  003E22  FFFF               	dw	65535	; errata NOP
 10017  003E24                     __end_of_atoi:
 10018                           	callstack 0
 10019                           
 10020 ;; *************** function _isspace *****************
 10021 ;; Defined at:
 10022 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
 10023 ;; Parameters:    Size  Location     Type
 10024 ;;  c               2    0[COMRAM] int 
 10025 ;; Auto vars:     Size  Location     Type
 10026 ;;		None
 10027 ;; Return value:  Size  Location     Type
 10028 ;;                  2    0[COMRAM] int 
 10029 ;; Registers used:
 10030 ;;		wreg, status,2, status,0
 10031 ;; Tracked objects:
 10032 ;;		On entry : 0/0
 10033 ;;		On exit  : 0/0
 10034 ;;		Unchanged: 0/0
 10035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10036 ;;      Params:         2       0       0       0       0       0       0
 10037 ;;      Locals:         1       0       0       0       0       0       0
 10038 ;;      Temps:          4       0       0       0       0       0       0
 10039 ;;      Totals:         7       0       0       0       0       0       0
 10040 ;;Total ram usage:        7 bytes
 10041 ;; Hardware stack levels used:    1
 10042 ;; Hardware stack levels required when called:    1
 10043 ;; This function calls:
 10044 ;;		Nothing
 10045 ;; This function is called by:
 10046 ;;		_atoi
 10047 ;; This function uses a non-reentrant model
 10048 ;;
 10049                           
 10050                           	psect	text30
 10051  0069E6                     __ptext30:
 10052                           	callstack 0
 10053  0069E6                     _isspace:
 10054                           	callstack 24
 10055  0069E6  FFFF               	dw	65535	; assembler added errata NOP
 10056  0069E8  0E01               	movlw	1
 10057  0069EA  6E07               	movwf	_isspace$1836^0,c
 10058  0069EC  0E20               	movlw	32
 10059  0069EE  1801               	xorwf	isspace@c^0,w,c
 10060  0069F0  1002               	iorwf	(isspace@c+1)^0,w,c
 10061  0069F2  B4D8               	btfsc	status,2,c
 10062  0069F4  EFFE  F034         	goto	u4041
 10063  0069F8  EF01  F035         	goto	u4040
 10064  0069FC                     u4041:
 10065  0069FC  FFFF               	dw	65535	; assembler added errata NOP
 10066  0069FE  EF1D  F035         	goto	l3822
 10067  006A02                     u4040:
 10068  006A02  FFFF               	dw	65535	; assembler added errata NOP
 10069  006A04  0EF7               	movlw	247
 10070  006A06  6E03               	movwf	??_isspace^0,c
 10071  006A08  0EFF               	movlw	255
 10072  006A0A  6E04               	movwf	(??_isspace+1)^0,c
 10073  006A0C  C001  F005         	movff	isspace@c,??_isspace+2
 10074  006A10  C002  F006         	movff	isspace@c+1,??_isspace+3
 10075  006A14  5003               	movf	??_isspace^0,w,c
 10076  006A16  2605               	addwf	(??_isspace+2)^0,f,c
 10077  006A18  5004               	movf	(??_isspace+1)^0,w,c
 10078  006A1A  2206               	addwfc	(??_isspace+3)^0,f,c
 10079  006A1C  5006               	movf	(??_isspace+3)^0,w,c
 10080  006A1E  E10A               	bnz	u4050
 10081  006A20  0E05               	movlw	5
 10082  006A22  5C05               	subwf	(??_isspace+2)^0,w,c
 10083  006A24  A0D8               	btfss	status,0,c
 10084  006A26  EF17  F035         	goto	u4051
 10085  006A2A  EF1A  F035         	goto	u4050
 10086  006A2E                     u4051:
 10087  006A2E  FFFF               	dw	65535	; assembler added errata NOP
 10088  006A30  EF1D  F035         	goto	l3822
 10089  006A34                     u4050:
 10090  006A34  FFFF               	dw	65535	; assembler added errata NOP
 10091  006A36  0E00               	movlw	0
 10092  006A38  6E07               	movwf	_isspace$1836^0,c
 10093  006A3A                     l3822:
 10094  006A3A  FFFF               	dw	65535	; assembler added errata NOP
 10095  006A3C  C007  F001         	movff	_isspace$1836,?_isspace
 10096  006A40  6A02               	clrf	(?_isspace+1)^0,c
 10097  006A42  0012               	return		;funcret
 10098  006A44  FFFF               	dw	65535	; errata NOP
 10099  006A46                     __end_of_isspace:
 10100                           	callstack 0
 10101                           
 10102 ;; *************** function _isdigit *****************
 10103 ;; Defined at:
 10104 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
 10105 ;; Parameters:    Size  Location     Type
 10106 ;;  c               2    0[COMRAM] int 
 10107 ;; Auto vars:     Size  Location     Type
 10108 ;;		None
 10109 ;; Return value:  Size  Location     Type
 10110 ;;                  2    0[COMRAM] int 
 10111 ;; Registers used:
 10112 ;;		wreg, status,2, status,0
 10113 ;; Tracked objects:
 10114 ;;		On entry : 0/0
 10115 ;;		On exit  : 0/0
 10116 ;;		Unchanged: 0/0
 10117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10118 ;;      Params:         2       0       0       0       0       0       0
 10119 ;;      Locals:         0       0       0       0       0       0       0
 10120 ;;      Temps:          4       0       0       0       0       0       0
 10121 ;;      Totals:         6       0       0       0       0       0       0
 10122 ;;Total ram usage:        6 bytes
 10123 ;; Hardware stack levels used:    1
 10124 ;; Hardware stack levels required when called:    1
 10125 ;; This function calls:
 10126 ;;		Nothing
 10127 ;; This function is called by:
 10128 ;;		_vfpfcnvrt
 10129 ;;		_atoi
 10130 ;; This function uses a non-reentrant model
 10131 ;;
 10132                           
 10133                           	psect	text31
 10134  006798                     __ptext31:
 10135                           	callstack 0
 10136  006798                     _isdigit:
 10137                           	callstack 25
 10138  006798  FFFF               	dw	65535	; assembler added errata NOP
 10139  00679A  0ED0               	movlw	208
 10140  00679C  6E03               	movwf	??_isdigit^0,c
 10141  00679E  0EFF               	movlw	255
 10142  0067A0  6E04               	movwf	(??_isdigit+1)^0,c
 10143  0067A2  C001  F005         	movff	isdigit@c,??_isdigit+2
 10144  0067A6  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 10145  0067AA  5003               	movf	??_isdigit^0,w,c
 10146  0067AC  2605               	addwf	(??_isdigit+2)^0,f,c
 10147  0067AE  5004               	movf	(??_isdigit+1)^0,w,c
 10148  0067B0  2206               	addwfc	(??_isdigit+3)^0,f,c
 10149  0067B2  5006               	movf	(??_isdigit+3)^0,w,c
 10150  0067B4  E10B               	bnz	u4020
 10151  0067B6  0E0A               	movlw	10
 10152  0067B8  5C05               	subwf	(??_isdigit+2)^0,w,c
 10153  0067BA  A0D8               	btfss	status,0,c
 10154  0067BC  EFE2  F033         	goto	u4021
 10155  0067C0  EFE6  F033         	goto	u4020
 10156  0067C4                     u4021:
 10157  0067C4  FFFF               	dw	65535	; assembler added errata NOP
 10158  0067C6  0E01               	movlw	1
 10159  0067C8  EFE8  F033         	goto	u4030
 10160  0067CC                     u4020:
 10161  0067CC  FFFF               	dw	65535	; assembler added errata NOP
 10162  0067CE  0E00               	movlw	0
 10163  0067D0                     u4030:
 10164  0067D0  FFFF               	dw	65535	; assembler added errata NOP
 10165  0067D2  6E01               	movwf	?_isdigit^0,c
 10166  0067D4  6A02               	clrf	(?_isdigit+1)^0,c
 10167  0067D6  0012               	return		;funcret
 10168  0067D8  FFFF               	dw	65535	; errata NOP
 10169  0067DA                     __end_of_isdigit:
 10170                           	callstack 0
 10171                           
 10172 ;; *************** function ___wmul *****************
 10173 ;; Defined at:
 10174 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
 10175 ;; Parameters:    Size  Location     Type
 10176 ;;  multiplier      2    0[COMRAM] unsigned int 
 10177 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10178 ;; Auto vars:     Size  Location     Type
 10179 ;;  product         2    4[COMRAM] unsigned int 
 10180 ;; Return value:  Size  Location     Type
 10181 ;;                  2    0[COMRAM] unsigned int 
 10182 ;; Registers used:
 10183 ;;		wreg, status,2, status,0, prodl, prodh
 10184 ;; Tracked objects:
 10185 ;;		On entry : 0/0
 10186 ;;		On exit  : 0/0
 10187 ;;		Unchanged: 0/0
 10188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10189 ;;      Params:         4       0       0       0       0       0       0
 10190 ;;      Locals:         2       0       0       0       0       0       0
 10191 ;;      Temps:          0       0       0       0       0       0       0
 10192 ;;      Totals:         6       0       0       0       0       0       0
 10193 ;;Total ram usage:        6 bytes
 10194 ;; Hardware stack levels used:    1
 10195 ;; Hardware stack levels required when called:    1
 10196 ;; This function calls:
 10197 ;;		Nothing
 10198 ;; This function is called by:
 10199 ;;		_main
 10200 ;;		_atoi
 10201 ;; This function uses a non-reentrant model
 10202 ;;
 10203                           
 10204                           	psect	text32
 10205  006618                     __ptext32:
 10206                           	callstack 0
 10207  006618                     ___wmul:
 10208                           	callstack 0
 10209  006618  FFFF               	dw	65535	; assembler added errata NOP
 10210  00661A  5001               	movf	___wmul@multiplier^0,w,c
 10211  00661C  0203               	mulwf	___wmul@multiplicand^0,c
 10212  00661E  CFF3 F005          	movff	prodl,___wmul@product
 10213  006622  CFF4 F006          	movff	prodh,___wmul@product+1
 10214  006626  5001               	movf	___wmul@multiplier^0,w,c
 10215  006628  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 10216  00662A  50F3               	movf	243,w,c
 10217  00662C  2606               	addwf	(___wmul@product+1)^0,f,c
 10218  00662E  5002               	movf	(___wmul@multiplier+1)^0,w,c
 10219  006630  0203               	mulwf	___wmul@multiplicand^0,c
 10220  006632  50F3               	movf	243,w,c
 10221  006634  2606               	addwf	(___wmul@product+1)^0,f,c
 10222  006636  C005  F001         	movff	___wmul@product,?___wmul
 10223  00663A  C006  F002         	movff	___wmul@product+1,?___wmul+1
 10224  00663E  0012               	return		;funcret
 10225  006640  FFFF               	dw	65535	; errata NOP
 10226  006642                     __end_of___wmul:
 10227                           	callstack 0
 10228                           
 10229 ;; *************** function _serial_tx_char *****************
 10230 ;; Defined at:
 10231 ;;		line 39 in file "serial_rs232.c"
 10232 ;; Parameters:    Size  Location     Type
 10233 ;;  val             1    wreg     unsigned char 
 10234 ;; Auto vars:     Size  Location     Type
 10235 ;;  val             1    0[COMRAM] unsigned char 
 10236 ;; Return value:  Size  Location     Type
 10237 ;;                  1    wreg      void 
 10238 ;; Registers used:
 10239 ;;		wreg
 10240 ;; Tracked objects:
 10241 ;;		On entry : 0/0
 10242 ;;		On exit  : 0/0
 10243 ;;		Unchanged: 0/0
 10244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10245 ;;      Params:         0       0       0       0       0       0       0
 10246 ;;      Locals:         1       0       0       0       0       0       0
 10247 ;;      Temps:          0       0       0       0       0       0       0
 10248 ;;      Totals:         1       0       0       0       0       0       0
 10249 ;;Total ram usage:        1 bytes
 10250 ;; Hardware stack levels used:    1
 10251 ;; Hardware stack levels required when called:    1
 10252 ;; This function calls:
 10253 ;;		Nothing
 10254 ;; This function is called by:
 10255 ;;		_main
 10256 ;;		_serial_tx_string
 10257 ;; This function uses a non-reentrant model
 10258 ;;
 10259                           
 10260                           	psect	text33
 10261  006516                     __ptext33:
 10262                           	callstack 0
 10263  006516                     _serial_tx_char:
 10264                           	callstack 0
 10265  006516  FFFF               	dw	65535	; assembler added errata NOP
 10266                           
 10267                           ;incstack = 0
 10268                           ;serial_tx_char@val stored from wreg
 10269  006518  6E01               	movwf	serial_tx_char@val^0,c
 10270  00651A                     
 10271                           ;serial_rs232.c: 40:     TXREG = val;
 10272  00651A  C001  FFAD         	movff	serial_tx_char@val,4013	;volatile
 10273  00651E                     l24:
 10274  00651E  FFFF               	dw	65535	; assembler added errata NOP
 10275  006520  A2AC               	btfss	172,1,c	;volatile
 10276  006522  EF95  F032         	goto	u6571
 10277  006526  EF98  F032         	goto	u6570
 10278  00652A                     u6571:
 10279  00652A  FFFF               	dw	65535	; assembler added errata NOP
 10280  00652C  EF8F  F032         	goto	l24
 10281  006530                     u6570:
 10282  006530  FFFF               	dw	65535	; assembler added errata NOP
 10283  006532  0012               	return		;funcret
 10284  006534  FFFF               	dw	65535	; errata NOP
 10285  006536                     __end_of_serial_tx_char:
 10286                           	callstack 0
 10287                           
 10288 ;; *************** function _reach_goal *****************
 10289 ;; Defined at:
 10290 ;;		line 29 in file "stepper_motor.c"
 10291 ;; Parameters:    Size  Location     Type
 10292 ;;  stepper_moto    2    6[COMRAM] PTR struct .
 10293 ;;		 -> end_effector_stepper(14), joint_stepper(14), 
 10294 ;;  goal_to_reac    2    8[COMRAM] int 
 10295 ;; Auto vars:     Size  Location     Type
 10296 ;;		None
 10297 ;; Return value:  Size  Location     Type
 10298 ;;                  2    6[COMRAM] int 
 10299 ;; Registers used:
 10300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10301 ;; Tracked objects:
 10302 ;;		On entry : 0/0
 10303 ;;		On exit  : 0/0
 10304 ;;		Unchanged: 0/0
 10305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10306 ;;      Params:         4       0       0       0       0       0       0
 10307 ;;      Locals:         0       0       0       0       0       0       0
 10308 ;;      Temps:          3       0       0       0       0       0       0
 10309 ;;      Totals:         7       0       0       0       0       0       0
 10310 ;;Total ram usage:        7 bytes
 10311 ;; Hardware stack levels used:    1
 10312 ;; Hardware stack levels required when called:    2
 10313 ;; This function calls:
 10314 ;;		_turn_on_current_coil
 10315 ;;		_update_current_coil
 10316 ;; This function is called by:
 10317 ;;		_main
 10318 ;; This function uses a non-reentrant model
 10319 ;;
 10320                           
 10321                           	psect	text34
 10322  006C64                     __ptext34:
 10323                           	callstack 0
 10324  006C64                     _reach_goal:
 10325                           	callstack 0
 10326  006C64  FFFF               	dw	65535	; assembler added errata NOP
 10327  006C66                     
 10328                           ;stepper_motor.c: 30:     if(stepper_motor -> step_counter >= goal_to_reach){
 10329  006C66  EE20 F002          	lfsr	2,2
 10330  006C6A  5007               	movf	reach_goal@stepper_motor^0,w,c
 10331  006C6C  26D9               	addwf	fsr2l,f,c
 10332  006C6E  5008               	movf	(reach_goal@stepper_motor+1)^0,w,c
 10333  006C70  22DA               	addwfc	fsr2h,f,c
 10334  006C72  5009               	movf	reach_goal@goal_to_reach^0,w,c
 10335  006C74  5CDE               	subwf	postinc2,w,c
 10336  006C76  50DE               	movf	postinc2,w,c
 10337  006C78  0A80               	xorlw	128
 10338  006C7A  6E0D               	movwf	(??_reach_goal+2)^0,c
 10339  006C7C  500A               	movf	(reach_goal@goal_to_reach+1)^0,w,c
 10340  006C7E  0A80               	xorlw	128
 10341  006C80  580D               	subwfb	(??_reach_goal+2)^0,w,c
 10342  006C82  A0D8               	btfss	status,0,c
 10343  006C84  EF46  F036         	goto	u6761
 10344  006C88  EF49  F036         	goto	u6760
 10345  006C8C                     u6761:
 10346  006C8C  FFFF               	dw	65535	; assembler added errata NOP
 10347  006C8E  EF5A  F036         	goto	l5496
 10348  006C92                     u6760:
 10349  006C92  FFFF               	dw	65535	; assembler added errata NOP
 10350  006C94                     
 10351                           ;stepper_motor.c: 31:         stepper_motor -> step_counter = 0;
 10352  006C94  EE20 F002          	lfsr	2,2
 10353  006C98  5007               	movf	reach_goal@stepper_motor^0,w,c
 10354  006C9A  26D9               	addwf	fsr2l,f,c
 10355  006C9C  5008               	movf	(reach_goal@stepper_motor+1)^0,w,c
 10356  006C9E  22DA               	addwfc	fsr2h,f,c
 10357  006CA0  0E00               	movlw	0
 10358  006CA2  6EDE               	movwf	postinc2,c
 10359  006CA4  0E00               	movlw	0
 10360  006CA6  6EDD               	movwf	postdec2,c
 10361  006CA8                     
 10362                           ;stepper_motor.c: 32:         return 1;
 10363  006CA8  0E00               	movlw	0
 10364  006CAA  6E08               	movwf	(?_reach_goal+1)^0,c
 10365  006CAC  0E01               	movlw	1
 10366  006CAE  6E07               	movwf	?_reach_goal^0,c
 10367  006CB0  EF6B  F036         	goto	l338
 10368  006CB4                     l5496:
 10369  006CB4  FFFF               	dw	65535	; assembler added errata NOP
 10370                           
 10371                           ;stepper_motor.c: 34:         turn_on_current_coil(stepper_motor);
 10372  006CB6  C007  F001         	movff	reach_goal@stepper_motor,turn_on_current_coil@stepper_motor
 10373  006CBA  C008  F002         	movff	reach_goal@stepper_motor+1,turn_on_current_coil@stepper_motor+1
 10374  006CBE  EC6C  F033         	call	_turn_on_current_coil	;wreg free
 10375                           
 10376                           ;stepper_motor.c: 35:         update_current_coil(stepper_motor);
 10377  006CC2  C007  F001         	movff	reach_goal@stepper_motor,update_current_coil@stepper_motor
 10378  006CC6  C008  F002         	movff	reach_goal@stepper_motor+1,update_current_coil@stepper_motor+1
 10379  006CCA  EC12  F038         	call	_update_current_coil	;wreg free
 10380  006CCE                     
 10381                           ;stepper_motor.c: 36:         return 0;
 10382  006CCE  0E00               	movlw	0
 10383  006CD0  6E08               	movwf	(?_reach_goal+1)^0,c
 10384  006CD2  0E00               	movlw	0
 10385  006CD4  6E07               	movwf	?_reach_goal^0,c
 10386  006CD6                     l338:
 10387  006CD6  FFFF               	dw	65535	; assembler added errata NOP
 10388  006CD8  0012               	return		;funcret
 10389  006CDA  FFFF               	dw	65535	; errata NOP
 10390  006CDC                     __end_of_reach_goal:
 10391                           	callstack 0
 10392                           
 10393 ;; *************** function _update_current_coil *****************
 10394 ;; Defined at:
 10395 ;;		line 18 in file "stepper_motor.c"
 10396 ;; Parameters:    Size  Location     Type
 10397 ;;  stepper_moto    2    0[COMRAM] PTR struct .
 10398 ;;		 -> end_effector_stepper(14), joint_stepper(14), 
 10399 ;; Auto vars:     Size  Location     Type
 10400 ;;		None
 10401 ;; Return value:  Size  Location     Type
 10402 ;;                  1    wreg      void 
 10403 ;; Registers used:
 10404 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10405 ;; Tracked objects:
 10406 ;;		On entry : 0/0
 10407 ;;		On exit  : 0/0
 10408 ;;		Unchanged: 0/0
 10409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10410 ;;      Params:         2       0       0       0       0       0       0
 10411 ;;      Locals:         0       0       0       0       0       0       0
 10412 ;;      Temps:          4       0       0       0       0       0       0
 10413 ;;      Totals:         6       0       0       0       0       0       0
 10414 ;;Total ram usage:        6 bytes
 10415 ;; Hardware stack levels used:    1
 10416 ;; Hardware stack levels required when called:    1
 10417 ;; This function calls:
 10418 ;;		Nothing
 10419 ;; This function is called by:
 10420 ;;		_reach_goal
 10421 ;; This function uses a non-reentrant model
 10422 ;;
 10423                           
 10424                           	psect	text35
 10425  007024                     __ptext35:
 10426                           	callstack 0
 10427  007024                     _update_current_coil:
 10428                           	callstack 0
 10429  007024  FFFF               	dw	65535	; assembler added errata NOP
 10430  007026                     
 10431                           ;stepper_motor.c: 19:     stepper_motor -> current_coil = stepper_motor -> current_coil 
      +                          + stepper_motor -> direction;
 10432  007026  EE20 F004          	lfsr	2,4
 10433  00702A  5001               	movf	update_current_coil@stepper_motor^0,w,c
 10434  00702C  26D9               	addwf	fsr2l,f,c
 10435  00702E  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
 10436  007030  22DA               	addwfc	fsr2h,f,c
 10437  007032  CFDE F003          	movff	postinc2,??_update_current_coil
 10438  007036  CFDD F004          	movff	postdec2,??_update_current_coil+1
 10439  00703A  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10440  00703E  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10441  007042  CFDE F005          	movff	postinc2,??_update_current_coil+2
 10442  007046  CFDD F006          	movff	postdec2,??_update_current_coil+3
 10443  00704A  5003               	movf	??_update_current_coil^0,w,c
 10444  00704C  2605               	addwf	(??_update_current_coil+2)^0,f,c
 10445  00704E  5004               	movf	(??_update_current_coil+1)^0,w,c
 10446  007050  2206               	addwfc	(??_update_current_coil+3)^0,f,c
 10447  007052  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10448  007056  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10449  00705A  C005  FFDE         	movff	??_update_current_coil+2,postinc2
 10450  00705E  C006  FFDD         	movff	??_update_current_coil+3,postdec2
 10451                           
 10452                           ;stepper_motor.c: 20:     stepper_motor -> step_counter = stepper_motor -> step_counter 
      +                          + 1;
 10453  007062  EE20 F002          	lfsr	2,2
 10454  007066  5001               	movf	update_current_coil@stepper_motor^0,w,c
 10455  007068  26D9               	addwf	fsr2l,f,c
 10456  00706A  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
 10457  00706C  22DA               	addwfc	fsr2h,f,c
 10458  00706E  CFDE F003          	movff	postinc2,??_update_current_coil
 10459  007072  CFDD F004          	movff	postdec2,??_update_current_coil+1
 10460  007076  0E01               	movlw	1
 10461  007078  2603               	addwf	??_update_current_coil^0,f,c
 10462  00707A  0E00               	movlw	0
 10463  00707C  2204               	addwfc	(??_update_current_coil+1)^0,f,c
 10464  00707E  EE20 F002          	lfsr	2,2
 10465  007082  5001               	movf	update_current_coil@stepper_motor^0,w,c
 10466  007084  26D9               	addwf	fsr2l,f,c
 10467  007086  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
 10468  007088  22DA               	addwfc	fsr2h,f,c
 10469  00708A  C003  FFDE         	movff	??_update_current_coil,postinc2
 10470  00708E  C004  FFDD         	movff	??_update_current_coil+1,postdec2
 10471                           
 10472                           ;stepper_motor.c: 21:     if (stepper_motor -> current_coil == -1) {
 10473  007092  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10474  007096  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10475  00709A  28DE               	incf	postinc2,w,c
 10476  00709C  E106               	bnz	u6441
 10477  00709E  28DE               	incf	postinc2,w,c
 10478  0070A0  A4D8               	btfss	status,2,c
 10479  0070A2  EF55  F038         	goto	u6441
 10480  0070A6  EF58  F038         	goto	u6440
 10481  0070AA                     u6441:
 10482  0070AA  FFFF               	dw	65535	; assembler added errata NOP
 10483  0070AC  EF63  F038         	goto	l5188
 10484  0070B0                     u6440:
 10485  0070B0  FFFF               	dw	65535	; assembler added errata NOP
 10486  0070B2                     
 10487                           ;stepper_motor.c: 22:         stepper_motor -> current_coil = 3;
 10488  0070B2  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10489  0070B6  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10490  0070BA  0E03               	movlw	3
 10491  0070BC  6EDE               	movwf	postinc2,c
 10492  0070BE  0E00               	movlw	0
 10493  0070C0  6EDD               	movwf	postdec2,c
 10494                           
 10495                           ;stepper_motor.c: 23:     } else if(stepper_motor -> current_coil == 4) {
 10496  0070C2  EF7C  F038         	goto	l334
 10497  0070C6                     l5188:
 10498  0070C6  FFFF               	dw	65535	; assembler added errata NOP
 10499  0070C8  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10500  0070CC  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10501  0070D0  0E04               	movlw	4
 10502  0070D2  18DE               	xorwf	postinc2,w,c
 10503  0070D4  10DE               	iorwf	postinc2,w,c
 10504  0070D6  A4D8               	btfss	status,2,c
 10505  0070D8  EF70  F038         	goto	u6451
 10506  0070DC  EF73  F038         	goto	u6450
 10507  0070E0                     u6451:
 10508  0070E0  FFFF               	dw	65535	; assembler added errata NOP
 10509  0070E2  EF7C  F038         	goto	l334
 10510  0070E6                     u6450:
 10511  0070E6  FFFF               	dw	65535	; assembler added errata NOP
 10512  0070E8                     
 10513                           ;stepper_motor.c: 24:         stepper_motor -> current_coil = 0;
 10514  0070E8  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10515  0070EC  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10516  0070F0  0E00               	movlw	0
 10517  0070F2  6EDE               	movwf	postinc2,c
 10518  0070F4  0E00               	movlw	0
 10519  0070F6  6EDD               	movwf	postdec2,c
 10520  0070F8                     l334:
 10521  0070F8  FFFF               	dw	65535	; assembler added errata NOP
 10522  0070FA  0012               	return		;funcret
 10523  0070FC  FFFF               	dw	65535	; errata NOP
 10524  0070FE                     __end_of_update_current_coil:
 10525                           	callstack 0
 10526                           
 10527 ;; *************** function _turn_on_current_coil *****************
 10528 ;; Defined at:
 10529 ;;		line 13 in file "stepper_motor.c"
 10530 ;; Parameters:    Size  Location     Type
 10531 ;;  stepper_moto    2    0[COMRAM] PTR struct .
 10532 ;;		 -> end_effector_stepper(14), joint_stepper(14), 
 10533 ;; Auto vars:     Size  Location     Type
 10534 ;;		None
 10535 ;; Return value:  Size  Location     Type
 10536 ;;                  1    wreg      void 
 10537 ;; Registers used:
 10538 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10539 ;; Tracked objects:
 10540 ;;		On entry : 0/0
 10541 ;;		On exit  : 0/0
 10542 ;;		Unchanged: 0/0
 10543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10544 ;;      Params:         2       0       0       0       0       0       0
 10545 ;;      Locals:         0       0       0       0       0       0       0
 10546 ;;      Temps:          4       0       0       0       0       0       0
 10547 ;;      Totals:         6       0       0       0       0       0       0
 10548 ;;Total ram usage:        6 bytes
 10549 ;; Hardware stack levels used:    1
 10550 ;; Hardware stack levels required when called:    1
 10551 ;; This function calls:
 10552 ;;		Nothing
 10553 ;; This function is called by:
 10554 ;;		_reach_goal
 10555 ;; This function uses a non-reentrant model
 10556 ;;
 10557                           
 10558                           	psect	text36
 10559  0066D8                     __ptext36:
 10560                           	callstack 0
 10561  0066D8                     _turn_on_current_coil:
 10562                           	callstack 0
 10563  0066D8  FFFF               	dw	65535	; assembler added errata NOP
 10564  0066DA                     
 10565                           ;stepper_motor.c: 14:     LATB = stepper_motor -> hex_coil_register_values[stepper_motor
      +                           -> current_coil];
 10566  0066DA  C001  FFD9         	movff	turn_on_current_coil@stepper_motor,fsr2l
 10567  0066DE  C002  FFDA         	movff	turn_on_current_coil@stepper_motor+1,fsr2h
 10568  0066E2  CFDE F003          	movff	postinc2,??_turn_on_current_coil
 10569  0066E6  CFDD F004          	movff	postdec2,??_turn_on_current_coil+1
 10570  0066EA  90D8               	bcf	status,0,c
 10571  0066EC  3603               	rlcf	??_turn_on_current_coil^0,f,c
 10572  0066EE  3604               	rlcf	(??_turn_on_current_coil+1)^0,f,c
 10573  0066F0  C001  F005         	movff	turn_on_current_coil@stepper_motor,??_turn_on_current_coil+2
 10574  0066F4  C002  F006         	movff	turn_on_current_coil@stepper_motor+1,??_turn_on_current_coil+3
 10575  0066F8  5003               	movf	??_turn_on_current_coil^0,w,c
 10576  0066FA  2605               	addwf	(??_turn_on_current_coil+2)^0,f,c
 10577  0066FC  5004               	movf	(??_turn_on_current_coil+1)^0,w,c
 10578  0066FE  2206               	addwfc	(??_turn_on_current_coil+3)^0,f,c
 10579  006700  0E06               	movlw	6
 10580  006702  2405               	addwf	(??_turn_on_current_coil+2)^0,w,c
 10581  006704  6ED9               	movwf	fsr2l,c
 10582  006706  0E00               	movlw	0
 10583  006708  2006               	addwfc	(??_turn_on_current_coil+3)^0,w,c
 10584  00670A  6EDA               	movwf	fsr2h,c
 10585  00670C  50DF               	movf	indf2,w,c
 10586  00670E  6E8A               	movwf	138,c	;volatile
 10587  006710  0012               	return		;funcret
 10588  006712  FFFF               	dw	65535	; errata NOP
 10589  006714                     __end_of_turn_on_current_coil:
 10590                           	callstack 0
 10591                           
 10592 ;; *************** function _lcd_str *****************
 10593 ;; Defined at:
 10594 ;;		line 62 in file "lcd.c"
 10595 ;; Parameters:    Size  Location     Type
 10596 ;;  str             2    2[COMRAM] PTR const unsigned char 
 10597 ;;		 -> main@greet_str(160), STR_9(22), 
 10598 ;; Auto vars:     Size  Location     Type
 10599 ;;  i               1    6[COMRAM] unsigned char 
 10600 ;; Return value:  Size  Location     Type
 10601 ;;                  1    wreg      void 
 10602 ;; Registers used:
 10603 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10604 ;; Tracked objects:
 10605 ;;		On entry : 0/0
 10606 ;;		On exit  : 0/0
 10607 ;;		Unchanged: 0/0
 10608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10609 ;;      Params:         2       0       0       0       0       0       0
 10610 ;;      Locals:         1       0       0       0       0       0       0
 10611 ;;      Temps:          2       0       0       0       0       0       0
 10612 ;;      Totals:         5       0       0       0       0       0       0
 10613 ;;Total ram usage:        5 bytes
 10614 ;; Hardware stack levels used:    1
 10615 ;; Hardware stack levels required when called:    3
 10616 ;; This function calls:
 10617 ;;		_lcd_dat
 10618 ;; This function is called by:
 10619 ;;		_main
 10620 ;; This function uses a non-reentrant model
 10621 ;;
 10622                           
 10623                           	psect	text37
 10624  006D5A                     __ptext37:
 10625                           	callstack 0
 10626  006D5A                     _lcd_str:
 10627                           	callstack 0
 10628  006D5A  FFFF               	dw	65535	; assembler added errata NOP
 10629  006D5C                     
 10630                           ;lcd.c: 62: void lcd_str(const char* str);lcd.c: 63: {;lcd.c: 64:     unsigned char i=0;
 10631  006D5C  0E00               	movlw	0
 10632  006D5E  6E07               	movwf	lcd_str@i^0,c
 10633                           
 10634                           ;lcd.c: 66:     while(str[i] != 0 )
 10635  006D60  EFCD  F036         	goto	l5392
 10636  006D64                     l5388:
 10637  006D64  FFFF               	dw	65535	; assembler added errata NOP
 10638                           
 10639                           ;lcd.c: 67:     {;lcd.c: 68:       lcd_dat(str[i]);
 10640  006D66  5007               	movf	lcd_str@i^0,w,c
 10641  006D68  2403               	addwf	lcd_str@str^0,w,c
 10642  006D6A  6E05               	movwf	??_lcd_str^0,c
 10643  006D6C  0E00               	movlw	0
 10644  006D6E  2004               	addwfc	(lcd_str@str+1)^0,w,c
 10645  006D70  6E06               	movwf	(??_lcd_str+1)^0,c
 10646  006D72  C005  FFF6         	movff	??_lcd_str,tblptrl
 10647  006D76  C006  FFF7         	movff	??_lcd_str+1,tblptrh
 10648  006D7A  6AF8               	clrf	tblptru,c
 10649  006D7C  0E05               	movlw	(high __ramtop+-1)
 10650  006D7E  64F7               	cpfsgt	tblptrh,c
 10651  006D80  D004               	bra	u6597
 10652  006D82  0008               	tblrd		*
 10653  006D84  FFFF               	dw	65535	; errata NOP
 10654  006D86  50F5               	movf	tablat,w,c
 10655  006D88  D005               	bra	u6590
 10656  006D8A                     u6597:
 10657  006D8A  CFF6 FFE1          	movff	tblptrl,fsr1l
 10658  006D8E  CFF7 FFE2          	movff	tblptrh,fsr1h
 10659  006D92  50E7               	movf	indf1,w,c
 10660  006D94                     u6590:
 10661  006D94  ECF7  F032         	call	_lcd_dat
 10662  006D98                     
 10663                           ;lcd.c: 69:       i++;
 10664  006D98  2A07               	incf	lcd_str@i^0,f,c
 10665  006D9A                     l5392:
 10666  006D9A  FFFF               	dw	65535	; assembler added errata NOP
 10667                           
 10668                           ;lcd.c: 66:     while(str[i] != 0 )
 10669  006D9C  5007               	movf	lcd_str@i^0,w,c
 10670  006D9E  2403               	addwf	lcd_str@str^0,w,c
 10671  006DA0  6E05               	movwf	??_lcd_str^0,c
 10672  006DA2  0E00               	movlw	0
 10673  006DA4  2004               	addwfc	(lcd_str@str+1)^0,w,c
 10674  006DA6  6E06               	movwf	(??_lcd_str+1)^0,c
 10675  006DA8  C005  FFF6         	movff	??_lcd_str,tblptrl
 10676  006DAC  C006  FFF7         	movff	??_lcd_str+1,tblptrh
 10677  006DB0  6AF8               	clrf	tblptru,c
 10678  006DB2  0E05               	movlw	(high __ramtop+-1)
 10679  006DB4  64F7               	cpfsgt	tblptrh,c
 10680  006DB6  D004               	bra	u6607
 10681  006DB8  0008               	tblrd		*
 10682  006DBA  FFFF               	dw	65535	; errata NOP
 10683  006DBC  50F5               	movf	tablat,w,c
 10684  006DBE  D005               	bra	u6600
 10685  006DC0                     u6607:
 10686  006DC0  CFF6 FFE1          	movff	tblptrl,fsr1l
 10687  006DC4  CFF7 FFE2          	movff	tblptrh,fsr1h
 10688  006DC8  50E7               	movf	indf1,w,c
 10689  006DCA                     u6600:
 10690  006DCA  0900               	iorlw	0
 10691  006DCC  A4D8               	btfss	status,2,c
 10692  006DCE  EFEB  F036         	goto	u6611
 10693  006DD2  EFEE  F036         	goto	u6610
 10694  006DD6                     u6611:
 10695  006DD6  FFFF               	dw	65535	; assembler added errata NOP
 10696  006DD8  EFB2  F036         	goto	l5388
 10697  006DDC                     u6610:
 10698  006DDC  FFFF               	dw	65535	; assembler added errata NOP
 10699  006DDE  0012               	return		;funcret
 10700  006DE0  FFFF               	dw	65535	; errata NOP
 10701  006DE2                     __end_of_lcd_str:
 10702                           	callstack 0
 10703                           
 10704 ;; *************** function _lcd_dat *****************
 10705 ;; Defined at:
 10706 ;;		line 21 in file "lcd.c"
 10707 ;; Parameters:    Size  Location     Type
 10708 ;;  val             1    wreg     unsigned char 
 10709 ;; Auto vars:     Size  Location     Type
 10710 ;;  val             1    1[COMRAM] unsigned char 
 10711 ;; Return value:  Size  Location     Type
 10712 ;;                  1    wreg      void 
 10713 ;; Registers used:
 10714 ;;		wreg, status,2, cstack
 10715 ;; Tracked objects:
 10716 ;;		On entry : 0/0
 10717 ;;		On exit  : 0/0
 10718 ;;		Unchanged: 0/0
 10719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10720 ;;      Params:         0       0       0       0       0       0       0
 10721 ;;      Locals:         1       0       0       0       0       0       0
 10722 ;;      Temps:          0       0       0       0       0       0       0
 10723 ;;      Totals:         1       0       0       0       0       0       0
 10724 ;;Total ram usage:        1 bytes
 10725 ;; Hardware stack levels used:    1
 10726 ;; Hardware stack levels required when called:    2
 10727 ;; This function calls:
 10728 ;;		_lcd_wr
 10729 ;; This function is called by:
 10730 ;;		_lcd_str
 10731 ;;		_state_translator_fpga_to_micro
 10732 ;; This function uses a non-reentrant model
 10733 ;;
 10734                           
 10735                           	psect	text38
 10736  0065EE                     __ptext38:
 10737                           	callstack 0
 10738  0065EE                     _lcd_dat:
 10739                           	callstack 0
 10740  0065EE  FFFF               	dw	65535	; assembler added errata NOP
 10741                           
 10742                           ;incstack = 0
 10743                           ;lcd_dat@val stored from wreg
 10744  0065F0  6E02               	movwf	lcd_dat@val^0,c
 10745  0065F2                     
 10746                           ;lcd.c: 21: void lcd_dat(unsigned char val);lcd.c: 22: {;lcd.c: 23:  PORTEbits.RE1=1;
 10747  0065F2  8284               	bsf	132,1,c	;volatile
 10748  0065F4                     
 10749                           ;lcd.c: 24:     lcd_wr(val);
 10750  0065F4  5002               	movf	lcd_dat@val^0,w,c
 10751  0065F6  EC73  F032         	call	_lcd_wr
 10752  0065FA                     
 10753                           ;lcd.c: 25:     PORTEbits.RE2=1;
 10754  0065FA  8484               	bsf	132,2,c	;volatile
 10755  0065FC                     
 10756                           ;lcd.c: 26:     _delay((unsigned long)((1)*(4000000/4000.0)));
 10757  0065FC  0EC8               	movlw	200
 10758  0065FE                     u7247:
 10759  0065FE  FFFF               	dw	65535	; errata NOP
 10760  006600  F000               	nop	
 10761  006602  2EE8               	decfsz	wreg,f,c
 10762  006604  D7FC               	bra	u7247
 10763  006606                     
 10764                           ;lcd.c: 27:     PORTEbits.RE1=0;
 10765  006606  9284               	bcf	132,1,c	;volatile
 10766  006608                     
 10767                           ;lcd.c: 28:     _delay((unsigned long)((1)*(4000000/4000.0)));
 10768  006608  0EC8               	movlw	200
 10769  00660A                     u7257:
 10770  00660A  FFFF               	dw	65535	; errata NOP
 10771  00660C  F000               	nop	
 10772  00660E  2EE8               	decfsz	wreg,f,c
 10773  006610  D7FC               	bra	u7257
 10774  006612                     
 10775                           ;lcd.c: 29:  PORTEbits.RE1=1;
 10776  006612  8284               	bsf	132,1,c	;volatile
 10777  006614  0012               	return		;funcret
 10778  006616  FFFF               	dw	65535	; errata NOP
 10779  006618                     __end_of_lcd_dat:
 10780                           	callstack 0
 10781                           
 10782 ;; *************** function _lcd_init *****************
 10783 ;; Defined at:
 10784 ;;		line 32 in file "lcd.c"
 10785 ;; Parameters:    Size  Location     Type
 10786 ;;		None
 10787 ;; Auto vars:     Size  Location     Type
 10788 ;;		None
 10789 ;; Return value:  Size  Location     Type
 10790 ;;                  1    wreg      void 
 10791 ;; Registers used:
 10792 ;;		wreg, status,2, cstack
 10793 ;; Tracked objects:
 10794 ;;		On entry : 0/0
 10795 ;;		On exit  : 0/0
 10796 ;;		Unchanged: 0/0
 10797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10798 ;;      Params:         0       0       0       0       0       0       0
 10799 ;;      Locals:         0       0       0       0       0       0       0
 10800 ;;      Temps:          1       0       0       0       0       0       0
 10801 ;;      Totals:         1       0       0       0       0       0       0
 10802 ;;Total ram usage:        1 bytes
 10803 ;; Hardware stack levels used:    1
 10804 ;; Hardware stack levels required when called:    3
 10805 ;; This function calls:
 10806 ;;		_lcd_cmd
 10807 ;; This function is called by:
 10808 ;;		_main
 10809 ;; This function uses a non-reentrant model
 10810 ;;
 10811                           
 10812                           	psect	text39
 10813  006CDC                     __ptext39:
 10814                           	callstack 0
 10815  006CDC                     _lcd_init:
 10816                           	callstack 0
 10817  006CDC  FFFF               	dw	65535	; assembler added errata NOP
 10818  006CDE  6A83               	clrf	3971,c	;# 
 10819  006CE0  0E00               	movlw	0	;# 
 10820  006CE2  6E95               	movwf	3989,c	;# 
 10821  006CE4  6A84               	clrf	3972,c	;# 
 10822  006CE6  0E00               	movlw	0	;# 
 10823  006CE8  6E96               	movwf	3990,c	;# 
 10824                           
 10825                           ;lcd.c: 45:  PORTEbits.RE1=0;
 10826  006CEA  9284               	bcf	132,1,c	;volatile
 10827                           
 10828                           ;lcd.c: 46:  PORTEbits.RE2=0;
 10829  006CEC  9484               	bcf	132,2,c	;volatile
 10830  006CEE                     
 10831                           ;lcd.c: 47:  _delay((unsigned long)((30)*(4000000/4000.0)));
 10832  006CEE  0E1E               	movlw	30
 10833  006CF0  6E03               	movwf	??_lcd_init^0,c
 10834  006CF2  0E3C               	movlw	60
 10835  006CF4                     u7267:
 10836  006CF4  FFFF               	dw	65535	; errata NOP
 10837  006CF6  2EE8               	decfsz	wreg,f,c
 10838  006CF8  D7FD               	bra	u7267
 10839  006CFA  2E03               	decfsz	??_lcd_init^0,f,c
 10840  006CFC  D7FB               	bra	u7267
 10841  006CFE  D000               	nop2	
 10842  006D00                     
 10843                           ;lcd.c: 48:  PORTEbits.RE1=1;
 10844  006D00  8284               	bsf	132,1,c	;volatile
 10845  006D02                     
 10846                           ;lcd.c: 50:  lcd_cmd(0x38);
 10847  006D02  0E38               	movlw	56
 10848  006D04  ECE2  F032         	call	_lcd_cmd
 10849  006D08                     
 10850                           ;lcd.c: 51:  _delay((unsigned long)((30)*(4000000/4000.0)));
 10851  006D08  0E1E               	movlw	30
 10852  006D0A  6E03               	movwf	??_lcd_init^0,c
 10853  006D0C  0E3C               	movlw	60
 10854  006D0E                     u7277:
 10855  006D0E  FFFF               	dw	65535	; errata NOP
 10856  006D10  2EE8               	decfsz	wreg,f,c
 10857  006D12  D7FD               	bra	u7277
 10858  006D14  2E03               	decfsz	??_lcd_init^0,f,c
 10859  006D16  D7FB               	bra	u7277
 10860  006D18  D000               	nop2	
 10861                           
 10862                           ;lcd.c: 52:  lcd_cmd(0x38);
 10863  006D1A  0E38               	movlw	56
 10864  006D1C  ECE2  F032         	call	_lcd_cmd
 10865  006D20                     
 10866                           ;lcd.c: 53:     _delay((unsigned long)((30)*(4000000/4000.0)));
 10867  006D20  0E1E               	movlw	30
 10868  006D22  6E03               	movwf	??_lcd_init^0,c
 10869  006D24  0E3C               	movlw	60
 10870  006D26                     u7287:
 10871  006D26  FFFF               	dw	65535	; errata NOP
 10872  006D28  2EE8               	decfsz	wreg,f,c
 10873  006D2A  D7FD               	bra	u7287
 10874  006D2C  2E03               	decfsz	??_lcd_init^0,f,c
 10875  006D2E  D7FB               	bra	u7287
 10876  006D30  D000               	nop2	
 10877  006D32                     
 10878                           ;lcd.c: 54:  lcd_cmd(0x38);
 10879  006D32  0E38               	movlw	56
 10880  006D34  ECE2  F032         	call	_lcd_cmd
 10881  006D38                     
 10882                           ;lcd.c: 55:  lcd_cmd(0x08);
 10883  006D38  0E08               	movlw	8
 10884  006D3A  ECE2  F032         	call	_lcd_cmd
 10885  006D3E                     
 10886                           ;lcd.c: 56:  lcd_cmd(0x0F);
 10887  006D3E  0E0F               	movlw	15
 10888  006D40  ECE2  F032         	call	_lcd_cmd
 10889  006D44                     
 10890                           ;lcd.c: 57:  lcd_cmd(0x01);
 10891  006D44  0E01               	movlw	1
 10892  006D46  ECE2  F032         	call	_lcd_cmd
 10893  006D4A                     
 10894                           ;lcd.c: 58:  lcd_cmd(0x38);
 10895  006D4A  0E38               	movlw	56
 10896  006D4C  ECE2  F032         	call	_lcd_cmd
 10897  006D50                     
 10898                           ;lcd.c: 59:     lcd_cmd(0x80);
 10899  006D50  0E80               	movlw	128
 10900  006D52  ECE2  F032         	call	_lcd_cmd
 10901  006D56  0012               	return		;funcret
 10902  006D58  FFFF               	dw	65535	; errata NOP
 10903  006D5A                     __end_of_lcd_init:
 10904                           	callstack 0
 10905                           
 10906 ;; *************** function _lcd_cmd *****************
 10907 ;; Defined at:
 10908 ;;		line 10 in file "lcd.c"
 10909 ;; Parameters:    Size  Location     Type
 10910 ;;  val             1    wreg     unsigned char 
 10911 ;; Auto vars:     Size  Location     Type
 10912 ;;  val             1    1[COMRAM] unsigned char 
 10913 ;; Return value:  Size  Location     Type
 10914 ;;                  1    wreg      void 
 10915 ;; Registers used:
 10916 ;;		wreg, status,2, cstack
 10917 ;; Tracked objects:
 10918 ;;		On entry : 0/0
 10919 ;;		On exit  : 0/0
 10920 ;;		Unchanged: 0/0
 10921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10922 ;;      Params:         0       0       0       0       0       0       0
 10923 ;;      Locals:         1       0       0       0       0       0       0
 10924 ;;      Temps:          0       0       0       0       0       0       0
 10925 ;;      Totals:         1       0       0       0       0       0       0
 10926 ;;Total ram usage:        1 bytes
 10927 ;; Hardware stack levels used:    1
 10928 ;; Hardware stack levels required when called:    2
 10929 ;; This function calls:
 10930 ;;		_lcd_wr
 10931 ;; This function is called by:
 10932 ;;		_main
 10933 ;;		_lcd_init
 10934 ;; This function uses a non-reentrant model
 10935 ;;
 10936                           
 10937                           	psect	text40
 10938  0065C4                     __ptext40:
 10939                           	callstack 0
 10940  0065C4                     _lcd_cmd:
 10941                           	callstack 0
 10942  0065C4  FFFF               	dw	65535	; assembler added errata NOP
 10943                           
 10944                           ;incstack = 0
 10945                           ;lcd_cmd@val stored from wreg
 10946  0065C6  6E02               	movwf	lcd_cmd@val^0,c
 10947  0065C8                     
 10948                           ;lcd.c: 10: void lcd_cmd(unsigned char val);lcd.c: 11: {;lcd.c: 12:  PORTEbits.RE1=1;
 10949  0065C8  8284               	bsf	132,1,c	;volatile
 10950  0065CA                     
 10951                           ;lcd.c: 13:     lcd_wr(val);
 10952  0065CA  5002               	movf	lcd_cmd@val^0,w,c
 10953  0065CC  EC73  F032         	call	_lcd_wr
 10954  0065D0                     
 10955                           ;lcd.c: 14:     PORTEbits.RE2=0;
 10956  0065D0  9484               	bcf	132,2,c	;volatile
 10957  0065D2                     
 10958                           ;lcd.c: 15:     _delay((unsigned long)((1)*(4000000/4000.0)));
 10959  0065D2  0EC8               	movlw	200
 10960  0065D4                     u7297:
 10961  0065D4  FFFF               	dw	65535	; errata NOP
 10962  0065D6  F000               	nop	
 10963  0065D8  2EE8               	decfsz	wreg,f,c
 10964  0065DA  D7FC               	bra	u7297
 10965  0065DC                     
 10966                           ;lcd.c: 16:     PORTEbits.RE1=0;
 10967  0065DC  9284               	bcf	132,1,c	;volatile
 10968  0065DE                     
 10969                           ;lcd.c: 17:     _delay((unsigned long)((1)*(4000000/4000.0)));
 10970  0065DE  0EC8               	movlw	200
 10971  0065E0                     u7307:
 10972  0065E0  FFFF               	dw	65535	; errata NOP
 10973  0065E2  F000               	nop	
 10974  0065E4  2EE8               	decfsz	wreg,f,c
 10975  0065E6  D7FC               	bra	u7307
 10976  0065E8                     
 10977                           ;lcd.c: 18:  PORTEbits.RE1=1;
 10978  0065E8  8284               	bsf	132,1,c	;volatile
 10979  0065EA  0012               	return		;funcret
 10980  0065EC  FFFF               	dw	65535	; errata NOP
 10981  0065EE                     __end_of_lcd_cmd:
 10982                           	callstack 0
 10983                           
 10984 ;; *************** function _lcd_wr *****************
 10985 ;; Defined at:
 10986 ;;		line 5 in file "lcd.c"
 10987 ;; Parameters:    Size  Location     Type
 10988 ;;  val             1    wreg     unsigned char 
 10989 ;; Auto vars:     Size  Location     Type
 10990 ;;  val             1    0[COMRAM] unsigned char 
 10991 ;; Return value:  Size  Location     Type
 10992 ;;                  1    wreg      void 
 10993 ;; Registers used:
 10994 ;;		wreg
 10995 ;; Tracked objects:
 10996 ;;		On entry : 0/0
 10997 ;;		On exit  : 0/0
 10998 ;;		Unchanged: 0/0
 10999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11000 ;;      Params:         0       0       0       0       0       0       0
 11001 ;;      Locals:         1       0       0       0       0       0       0
 11002 ;;      Temps:          0       0       0       0       0       0       0
 11003 ;;      Totals:         1       0       0       0       0       0       0
 11004 ;;Total ram usage:        1 bytes
 11005 ;; Hardware stack levels used:    1
 11006 ;; Hardware stack levels required when called:    1
 11007 ;; This function calls:
 11008 ;;		Nothing
 11009 ;; This function is called by:
 11010 ;;		_lcd_cmd
 11011 ;;		_lcd_dat
 11012 ;; This function uses a non-reentrant model
 11013 ;;
 11014                           
 11015                           	psect	text41
 11016  0064E6                     __ptext41:
 11017                           	callstack 0
 11018  0064E6                     _lcd_wr:
 11019                           	callstack 0
 11020  0064E6  FFFF               	dw	65535	; assembler added errata NOP
 11021                           
 11022                           ;incstack = 0
 11023                           ;lcd_wr@val stored from wreg
 11024  0064E8  6E01               	movwf	lcd_wr@val^0,c
 11025  0064EA                     
 11026                           ;lcd.c: 5: void lcd_wr(unsigned char val);lcd.c: 6: {;lcd.c: 7:     PORTD=val;
 11027  0064EA  C001  FF83         	movff	lcd_wr@val,3971	;volatile
 11028  0064EE  0012               	return		;funcret
 11029  0064F0  FFFF               	dw	65535	; errata NOP
 11030  0064F2                     __end_of_lcd_wr:
 11031                           	callstack 0
 11032                           
 11033 ;; *************** function _init_timer_2 *****************
 11034 ;; Defined at:
 11035 ;;		line 27 in file "timer.c"
 11036 ;; Parameters:    Size  Location     Type
 11037 ;;		None
 11038 ;; Auto vars:     Size  Location     Type
 11039 ;;		None
 11040 ;; Return value:  Size  Location     Type
 11041 ;;                  1    wreg      void 
 11042 ;; Registers used:
 11043 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11044 ;; Tracked objects:
 11045 ;;		On entry : 0/0
 11046 ;;		On exit  : 0/0
 11047 ;;		Unchanged: 0/0
 11048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11049 ;;      Params:         0       0       0       0       0       0       0
 11050 ;;      Locals:         0       4       0       0       0       0       0
 11051 ;;      Temps:          0       0       0       0       0       0       0
 11052 ;;      Totals:         0       4       0       0       0       0       0
 11053 ;;Total ram usage:        4 bytes
 11054 ;; Hardware stack levels used:    1
 11055 ;; Hardware stack levels required when called:    2
 11056 ;; This function calls:
 11057 ;;		___fladd
 11058 ;;		___fldiv
 11059 ;;		___flmul
 11060 ;;		___fltol
 11061 ;; This function is called by:
 11062 ;;		_main
 11063 ;; This function uses a non-reentrant model
 11064 ;;
 11065                           
 11066                           	psect	text42
 11067  006F56                     __ptext42:
 11068                           	callstack 0
 11069  006F56                     _init_timer_2:
 11070                           	callstack 0
 11071  006F56  FFFF               	dw	65535	; assembler added errata NOP
 11072  006F58                     
 11073                           ;timer.c: 29:     T2CON = 0;
 11074  006F58  0E00               	movlw	0
 11075  006F5A  6ECA               	movwf	202,c	;volatile
 11076                           
 11077                           ;timer.c: 30:     TMR2 = 0;
 11078  006F5C  0E00               	movlw	0
 11079  006F5E  6ECC               	movwf	204,c	;volatile
 11080  006F60                     
 11081                           ;timer.c: 32:     T2CONbits.TMR2ON = 1;
 11082  006F60  84CA               	bsf	202,2,c	;volatile
 11083  006F62                     
 11084                           ;timer.c: 33:     T2CONbits.T2CKPS0 = 1;
 11085  006F62  80CA               	bsf	202,0,c	;volatile
 11086  006F64                     
 11087                           ;timer.c: 34:     T2CONbits.T2CKPS1 = 1;
 11088  006F64  82CA               	bsf	202,1,c	;volatile
 11089  006F66                     
 11090                           ;timer.c: 36:     PR2 = (uint8_t) (((pwm_period / (4*t_osc*tmr2_prescaler)) - 1)*4);
 11091  006F66  0E00               	movlw	0
 11092  006F68  6E63               	movwf	___fladd@a^0,c
 11093  006F6A  0E00               	movlw	0
 11094  006F6C  6E64               	movwf	(___fladd@a+1)^0,c
 11095  006F6E  0E80               	movlw	128
 11096  006F70  6E65               	movwf	(___fladd@a+2)^0,c
 11097  006F72  0EBF               	movlw	191
 11098  006F74  6E66               	movwf	(___fladd@a+3)^0,c
 11099  006F76  0EBD               	movlw	189
 11100  006F78  6E31               	movwf	___flmul@a^0,c
 11101  006F7A  0E37               	movlw	55
 11102  006F7C  6E32               	movwf	(___flmul@a+1)^0,c
 11103  006F7E  0E86               	movlw	134
 11104  006F80  6E33               	movwf	(___flmul@a+2)^0,c
 11105  006F82  0E36               	movlw	54
 11106  006F84  6E34               	movwf	(___flmul@a+3)^0,c
 11107  006F86  C0ED  F02D         	movff	_tmr2_prescaler,___flmul@b
 11108  006F8A  C0EE  F02E         	movff	_tmr2_prescaler+1,___flmul@b+1
 11109  006F8E  C0EF  F02F         	movff	_tmr2_prescaler+2,___flmul@b+2
 11110  006F92  C0F0  F030         	movff	_tmr2_prescaler+3,___flmul@b+3
 11111  006F96  EC8A  F010         	call	___flmul	;wreg free
 11112  006F9A  C02D  F04A         	movff	?___flmul,___fldiv@a
 11113  006F9E  C02E  F04B         	movff	?___flmul+1,___fldiv@a+1
 11114  006FA2  C02F  F04C         	movff	?___flmul+2,___fldiv@a+2
 11115  006FA6  C030  F04D         	movff	?___flmul+3,___fldiv@a+3
 11116  006FAA  0E0A               	movlw	10
 11117  006FAC  6E46               	movwf	___fldiv@b^0,c
 11118  006FAE  0ED7               	movlw	215
 11119  006FB0  6E47               	movwf	(___fldiv@b+1)^0,c
 11120  006FB2  0EA3               	movlw	163
 11121  006FB4  6E48               	movwf	(___fldiv@b+2)^0,c
 11122  006FB6  0E3C               	movlw	60
 11123  006FB8  6E49               	movwf	(___fldiv@b+3)^0,c
 11124  006FBA  ECDC  F012         	call	___fldiv	;wreg free
 11125  006FBE  C046  F05F         	movff	?___fldiv,___fladd@b
 11126  006FC2  C047  F060         	movff	?___fldiv+1,___fladd@b+1
 11127  006FC6  C048  F061         	movff	?___fldiv+2,___fladd@b+2
 11128  006FCA  C049  F062         	movff	?___fldiv+3,___fladd@b+3
 11129  006FCE  ECB6  F00D         	call	___fladd	;wreg free
 11130  006FD2  C05F  F0D4         	movff	?___fladd,_init_timer_2$2136
 11131  006FD6  C060  F0D5         	movff	?___fladd+1,_init_timer_2$2136+1
 11132  006FDA  C061  F0D6         	movff	?___fladd+2,_init_timer_2$2136+2
 11133  006FDE  C062  F0D7         	movff	?___fladd+3,_init_timer_2$2136+3
 11134  006FE2                     
 11135                           ;timer.c: 36:     PR2 = (uint8_t) (((pwm_period / (4*t_osc*tmr2_prescaler)) - 1)*4);
 11136  006FE2  0E00               	movlw	0
 11137  006FE4  6E31               	movwf	___flmul@a^0,c
 11138  006FE6  0E00               	movlw	0
 11139  006FE8  6E32               	movwf	(___flmul@a+1)^0,c
 11140  006FEA  0E80               	movlw	128
 11141  006FEC  6E33               	movwf	(___flmul@a+2)^0,c
 11142  006FEE  0E40               	movlw	64
 11143  006FF0  6E34               	movwf	(___flmul@a+3)^0,c
 11144  006FF2  C0D4  F02D         	movff	_init_timer_2$2136,___flmul@b
 11145  006FF6  C0D5  F02E         	movff	_init_timer_2$2136+1,___flmul@b+1
 11146  006FFA  C0D6  F02F         	movff	_init_timer_2$2136+2,___flmul@b+2
 11147  006FFE  C0D7  F030         	movff	_init_timer_2$2136+3,___flmul@b+3
 11148  007002  EC8A  F010         	call	___flmul	;wreg free
 11149  007006  C02D  F0CA         	movff	?___flmul,___fltol@f1
 11150  00700A  C02E  F0CB         	movff	?___flmul+1,___fltol@f1+1
 11151  00700E  C02F  F0CC         	movff	?___flmul+2,___fltol@f1+2
 11152  007012  C030  F0CD         	movff	?___flmul+3,___fltol@f1+3
 11153  007016  EC59  F03D         	call	___fltol	;wreg free
 11154  00701A  0100               	movlb	0	; () banked
 11155  00701C  51CA               	movf	?___fltol& (0+255),w,b
 11156  00701E  6ECB               	movwf	203,c	;volatile
 11157  007020                     
 11158                           ; BSR set to: 0
 11159  007020  0012               	return		;funcret
 11160  007022  FFFF               	dw	65535	; errata NOP
 11161  007024                     __end_of_init_timer_2:
 11162                           	callstack 0
 11163                           
 11164 ;; *************** function _init_timer_0 *****************
 11165 ;; Defined at:
 11166 ;;		line 11 in file "timer.c"
 11167 ;; Parameters:    Size  Location     Type
 11168 ;;		None
 11169 ;; Auto vars:     Size  Location     Type
 11170 ;;		None
 11171 ;; Return value:  Size  Location     Type
 11172 ;;                  1    wreg      void 
 11173 ;; Registers used:
 11174 ;;		wreg, status,2
 11175 ;; Tracked objects:
 11176 ;;		On entry : 0/0
 11177 ;;		On exit  : 0/0
 11178 ;;		Unchanged: 0/0
 11179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11180 ;;      Params:         0       0       0       0       0       0       0
 11181 ;;      Locals:         0       0       0       0       0       0       0
 11182 ;;      Temps:          0       0       0       0       0       0       0
 11183 ;;      Totals:         0       0       0       0       0       0       0
 11184 ;;Total ram usage:        0 bytes
 11185 ;; Hardware stack levels used:    1
 11186 ;; Hardware stack levels required when called:    1
 11187 ;; This function calls:
 11188 ;;		Nothing
 11189 ;; This function is called by:
 11190 ;;		_main
 11191 ;; This function uses a non-reentrant model
 11192 ;;
 11193                           
 11194                           	psect	text43
 11195  006556                     __ptext43:
 11196                           	callstack 0
 11197  006556                     _init_timer_0:
 11198                           	callstack 0
 11199  006556  FFFF               	dw	65535	; assembler added errata NOP
 11200  006558                     
 11201                           ;timer.c: 13:     T0CON = 0;
 11202  006558  0E00               	movlw	0
 11203  00655A  6ED5               	movwf	213,c	;volatile
 11204                           
 11205                           ;timer.c: 15:     TMR0L = 0x96;
 11206  00655C  0E96               	movlw	150
 11207  00655E  6ED6               	movwf	214,c	;volatile
 11208                           
 11209                           ;timer.c: 16:     TMR0H = 0x98;
 11210  006560  0E98               	movlw	152
 11211  006562  6ED7               	movwf	215,c	;volatile
 11212  006564                     
 11213                           ;timer.c: 17:     INTCONbits.TMR0IE = 1;
 11214  006564  8AF2               	bsf	242,5,c	;volatile
 11215  006566                     
 11216                           ;timer.c: 18:     T0CONbits.T08BIT = 0;
 11217  006566  9CD5               	bcf	213,6,c	;volatile
 11218  006568                     
 11219                           ;timer.c: 19:     T0CONbits.T0CS = 0;
 11220  006568  9AD5               	bcf	213,5,c	;volatile
 11221  00656A                     
 11222                           ;timer.c: 20:     T0CONbits.PSA = 0;
 11223  00656A  96D5               	bcf	213,3,c	;volatile
 11224  00656C                     
 11225                           ;timer.c: 21:     T0CONbits.T0PS0 = 1;
 11226  00656C  80D5               	bsf	213,0,c	;volatile
 11227  00656E                     
 11228                           ;timer.c: 22:     T0CONbits.T0PS1 = 1;
 11229  00656E  82D5               	bsf	213,1,c	;volatile
 11230  006570                     
 11231                           ;timer.c: 23:     T0CONbits.T0PS2 = 1;
 11232  006570  84D5               	bsf	213,2,c	;volatile
 11233  006572                     
 11234                           ;timer.c: 24:     T0CONbits.TMR0ON = 1;
 11235  006572  8ED5               	bsf	213,7,c	;volatile
 11236  006574  0012               	return		;funcret
 11237  006576  FFFF               	dw	65535	; errata NOP
 11238  006578                     __end_of_init_timer_0:
 11239                           	callstack 0
 11240                           
 11241 ;; *************** function _init_stepper *****************
 11242 ;; Defined at:
 11243 ;;		line 4 in file "stepper_motor.c"
 11244 ;; Parameters:    Size  Location     Type
 11245 ;;  stepper_moto    2    0[COMRAM] PTR struct .
 11246 ;;		 -> end_effector_stepper(14), joint_stepper(14), 
 11247 ;;  current_coil    2    2[COMRAM] int 
 11248 ;;  step_counter    2    4[COMRAM] int 
 11249 ;;  direction       2    6[COMRAM] int 
 11250 ;;  hex_coil_reg    2    8[COMRAM] PTR int 
 11251 ;;		 -> hex_end_effector_values(8), hex_joint_values(8), 
 11252 ;; Auto vars:     Size  Location     Type
 11253 ;;  i               2   14[COMRAM] int 
 11254 ;; Return value:  Size  Location     Type
 11255 ;;                  1    wreg      void 
 11256 ;; Registers used:
 11257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11258 ;; Tracked objects:
 11259 ;;		On entry : 0/0
 11260 ;;		On exit  : 0/0
 11261 ;;		Unchanged: 0/0
 11262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11263 ;;      Params:        10       0       0       0       0       0       0
 11264 ;;      Locals:         2       0       0       0       0       0       0
 11265 ;;      Temps:          4       0       0       0       0       0       0
 11266 ;;      Totals:        16       0       0       0       0       0       0
 11267 ;;Total ram usage:       16 bytes
 11268 ;; Hardware stack levels used:    1
 11269 ;; Hardware stack levels required when called:    1
 11270 ;; This function calls:
 11271 ;;		Nothing
 11272 ;; This function is called by:
 11273 ;;		_main
 11274 ;; This function uses a non-reentrant model
 11275 ;;
 11276                           
 11277                           	psect	text44
 11278  006DE2                     __ptext44:
 11279                           	callstack 0
 11280  006DE2                     _init_stepper:
 11281                           	callstack 0
 11282  006DE2  FFFF               	dw	65535	; assembler added errata NOP
 11283  006DE4                     
 11284                           ;stepper_motor.c: 5:     for (int i = 0; i < 4; i++) {
 11285  006DE4  0E00               	movlw	0
 11286  006DE6  6E10               	movwf	(init_stepper@i+1)^0,c
 11287  006DE8  0E00               	movlw	0
 11288  006DEA  6E0F               	movwf	init_stepper@i^0,c
 11289  006DEC                     l5350:
 11290  006DEC  FFFF               	dw	65535	; assembler added errata NOP
 11291                           
 11292                           ;stepper_motor.c: 6:        stepper_motor -> hex_coil_register_values[i] = hex_coil_regi
      +                          ster_values[i];
 11293  006DEE  90D8               	bcf	status,0,c
 11294  006DF0  340F               	rlcf	init_stepper@i^0,w,c
 11295  006DF2  6ED9               	movwf	fsr2l,c
 11296  006DF4  3410               	rlcf	(init_stepper@i+1)^0,w,c
 11297  006DF6  6EDA               	movwf	fsr2h,c
 11298  006DF8  5009               	movf	init_stepper@hex_coil_register_values^0,w,c
 11299  006DFA  26D9               	addwf	fsr2l,f,c
 11300  006DFC  500A               	movf	(init_stepper@hex_coil_register_values+1)^0,w,c
 11301  006DFE  22DA               	addwfc	fsr2h,f,c
 11302  006E00  C00F  F00B         	movff	init_stepper@i,??_init_stepper
 11303  006E04  C010  F00C         	movff	init_stepper@i+1,??_init_stepper+1
 11304  006E08  90D8               	bcf	status,0,c
 11305  006E0A  360B               	rlcf	??_init_stepper^0,f,c
 11306  006E0C  360C               	rlcf	(??_init_stepper+1)^0,f,c
 11307  006E0E  C001  F00D         	movff	init_stepper@stepper_motor,??_init_stepper+2
 11308  006E12  C002  F00E         	movff	init_stepper@stepper_motor+1,??_init_stepper+3
 11309  006E16  500B               	movf	??_init_stepper^0,w,c
 11310  006E18  260D               	addwf	(??_init_stepper+2)^0,f,c
 11311  006E1A  500C               	movf	(??_init_stepper+1)^0,w,c
 11312  006E1C  220E               	addwfc	(??_init_stepper+3)^0,f,c
 11313  006E1E  0E06               	movlw	6
 11314  006E20  240D               	addwf	(??_init_stepper+2)^0,w,c
 11315  006E22  6EE1               	movwf	fsr1l,c
 11316  006E24  0E00               	movlw	0
 11317  006E26  200E               	addwfc	(??_init_stepper+3)^0,w,c
 11318  006E28  6EE2               	movwf	fsr1h,c
 11319  006E2A  CFDE FFE6          	movff	postinc2,postinc1
 11320  006E2E  CFDD FFE5          	movff	postdec2,postdec1
 11321  006E32                     
 11322                           ;stepper_motor.c: 7:     }
 11323  006E32  4A0F               	infsnz	init_stepper@i^0,f,c
 11324  006E34  2A10               	incf	(init_stepper@i+1)^0,f,c
 11325  006E36  BE10               	btfsc	(init_stepper@i+1)^0,7,c
 11326  006E38  EF27  F037         	goto	u6581
 11327  006E3C  5010               	movf	(init_stepper@i+1)^0,w,c
 11328  006E3E  E10A               	bnz	u6580
 11329  006E40  0E04               	movlw	4
 11330  006E42  5C0F               	subwf	init_stepper@i^0,w,c
 11331  006E44  A0D8               	btfss	status,0,c
 11332  006E46  EF27  F037         	goto	u6581
 11333  006E4A  EF2A  F037         	goto	u6580
 11334  006E4E                     u6581:
 11335  006E4E  FFFF               	dw	65535	; assembler added errata NOP
 11336  006E50  EFF6  F036         	goto	l5350
 11337  006E54                     u6580:
 11338  006E54  FFFF               	dw	65535	; assembler added errata NOP
 11339  006E56                     
 11340                           ;stepper_motor.c: 8:     stepper_motor -> current_coil = current_coil;
 11341  006E56  C001  FFD9         	movff	init_stepper@stepper_motor,fsr2l
 11342  006E5A  C002  FFDA         	movff	init_stepper@stepper_motor+1,fsr2h
 11343  006E5E  C003  FFDE         	movff	init_stepper@current_coil,postinc2
 11344  006E62  C004  FFDD         	movff	init_stepper@current_coil+1,postdec2
 11345  006E66                     
 11346                           ;stepper_motor.c: 9:     stepper_motor -> step_counter = step_counter;
 11347  006E66  EE20 F002          	lfsr	2,2
 11348  006E6A  5001               	movf	init_stepper@stepper_motor^0,w,c
 11349  006E6C  26D9               	addwf	fsr2l,f,c
 11350  006E6E  5002               	movf	(init_stepper@stepper_motor+1)^0,w,c
 11351  006E70  22DA               	addwfc	fsr2h,f,c
 11352  006E72  C005  FFDE         	movff	init_stepper@step_counter,postinc2
 11353  006E76  C006  FFDD         	movff	init_stepper@step_counter+1,postdec2
 11354  006E7A                     
 11355                           ;stepper_motor.c: 10:     stepper_motor -> direction = direction;
 11356  006E7A  EE20 F004          	lfsr	2,4
 11357  006E7E  5001               	movf	init_stepper@stepper_motor^0,w,c
 11358  006E80  26D9               	addwf	fsr2l,f,c
 11359  006E82  5002               	movf	(init_stepper@stepper_motor+1)^0,w,c
 11360  006E84  22DA               	addwfc	fsr2h,f,c
 11361  006E86  C007  FFDE         	movff	init_stepper@direction,postinc2
 11362  006E8A  C008  FFDD         	movff	init_stepper@direction+1,postdec2
 11363  006E8E  0012               	return		;funcret
 11364  006E90  FFFF               	dw	65535	; errata NOP
 11365  006E92                     __end_of_init_stepper:
 11366                           	callstack 0
 11367                           
 11368 ;; *************** function _init_interrupts *****************
 11369 ;; Defined at:
 11370 ;;		line 81 in file "init_PIC.c"
 11371 ;; Parameters:    Size  Location     Type
 11372 ;;		None
 11373 ;; Auto vars:     Size  Location     Type
 11374 ;;		None
 11375 ;; Return value:  Size  Location     Type
 11376 ;;                  1    wreg      void 
 11377 ;; Registers used:
 11378 ;;		None
 11379 ;; Tracked objects:
 11380 ;;		On entry : 0/0
 11381 ;;		On exit  : 0/0
 11382 ;;		Unchanged: 0/0
 11383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11384 ;;      Params:         0       0       0       0       0       0       0
 11385 ;;      Locals:         0       0       0       0       0       0       0
 11386 ;;      Temps:          0       0       0       0       0       0       0
 11387 ;;      Totals:         0       0       0       0       0       0       0
 11388 ;;Total ram usage:        0 bytes
 11389 ;; Hardware stack levels used:    1
 11390 ;; Hardware stack levels required when called:    1
 11391 ;; This function calls:
 11392 ;;		Nothing
 11393 ;; This function is called by:
 11394 ;;		_main
 11395 ;; This function uses a non-reentrant model
 11396 ;;
 11397                           
 11398                           	psect	text45
 11399  0064DA                     __ptext45:
 11400                           	callstack 0
 11401  0064DA                     _init_interrupts:
 11402                           	callstack 0
 11403  0064DA  FFFF               	dw	65535	; assembler added errata NOP
 11404  0064DC                     
 11405                           ;init_PIC.c: 83:     PIR1bits.RCIF = 0;
 11406  0064DC  9A9E               	bcf	158,5,c	;volatile
 11407                           
 11408                           ;init_PIC.c: 84:     PIE1bits.RCIE = 1;
 11409  0064DE  8A9D               	bsf	157,5,c	;volatile
 11410                           
 11411                           ;init_PIC.c: 85:     INTCONbits.PEIE = 1;
 11412  0064E0  8CF2               	bsf	242,6,c	;volatile
 11413  0064E2  0012               	return		;funcret
 11414  0064E4  FFFF               	dw	65535	; errata NOP
 11415  0064E6                     __end_of_init_interrupts:
 11416                           	callstack 0
 11417                           
 11418 ;; *************** function _init_ccp1 *****************
 11419 ;; Defined at:
 11420 ;;		line 41 in file "timer.c"
 11421 ;; Parameters:    Size  Location     Type
 11422 ;;		None
 11423 ;; Auto vars:     Size  Location     Type
 11424 ;;		None
 11425 ;; Return value:  Size  Location     Type
 11426 ;;                  1    wreg      void 
 11427 ;; Registers used:
 11428 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11429 ;; Tracked objects:
 11430 ;;		On entry : 0/0
 11431 ;;		On exit  : 0/0
 11432 ;;		Unchanged: 0/0
 11433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11434 ;;      Params:         0       0       0       0       0       0       0
 11435 ;;      Locals:         0       0       0       0       0       0       0
 11436 ;;      Temps:          0       0       0       0       0       0       0
 11437 ;;      Totals:         0       0       0       0       0       0       0
 11438 ;;Total ram usage:        0 bytes
 11439 ;; Hardware stack levels used:    1
 11440 ;; Hardware stack levels required when called:    3
 11441 ;; This function calls:
 11442 ;;		_update_pwm_duty_ccp1
 11443 ;; This function is called by:
 11444 ;;		_main
 11445 ;; This function uses a non-reentrant model
 11446 ;;
 11447                           
 11448                           	psect	text46
 11449  006578                     __ptext46:
 11450                           	callstack 0
 11451  006578                     _init_ccp1:
 11452                           	callstack 0
 11453  006578  FFFF               	dw	65535	; assembler added errata NOP
 11454  00657A                     
 11455                           ;timer.c: 42:     CCP1CON = 0x00;
 11456  00657A  0E00               	movlw	0
 11457  00657C  6EBD               	movwf	189,c	;volatile
 11458  00657E                     
 11459                           ;timer.c: 45:     update_pwm_duty_ccp1(5e-3);
 11460  00657E  0E0A               	movlw	10
 11461  006580  0100               	movlb	0	; () banked
 11462  006582  6FD4               	movwf	update_pwm_duty_ccp1@time_up& (0+255),b
 11463  006584  0ED7               	movlw	215
 11464  006586  6FD5               	movwf	(update_pwm_duty_ccp1@time_up+1)& (0+255),b
 11465  006588  0EA3               	movlw	163
 11466  00658A  6FD6               	movwf	(update_pwm_duty_ccp1@time_up+2)& (0+255),b
 11467  00658C  0E3B               	movlw	59
 11468  00658E  6FD7               	movwf	(update_pwm_duty_ccp1@time_up+3)& (0+255),b
 11469  006590  EC49  F037         	call	_update_pwm_duty_ccp1	;wreg free
 11470  006594                     
 11471                           ;timer.c: 48:     CCP1CONbits.CCP1M3 = 1;
 11472  006594  86BD               	bsf	189,3,c	;volatile
 11473  006596                     
 11474                           ;timer.c: 49:     CCP1CONbits.CCP1M2 = 1;
 11475  006596  84BD               	bsf	189,2,c	;volatile
 11476  006598  0012               	return		;funcret
 11477  00659A  FFFF               	dw	65535	; errata NOP
 11478  00659C                     __end_of_init_ccp1:
 11479                           	callstack 0
 11480                           
 11481 ;; *************** function _update_pwm_duty_ccp1 *****************
 11482 ;; Defined at:
 11483 ;;		line 53 in file "timer.c"
 11484 ;; Parameters:    Size  Location     Type
 11485 ;;  time_up         4   28[BANK0 ] void 
 11486 ;; Auto vars:     Size  Location     Type
 11487 ;;  new_duty        2   34[BANK0 ] unsigned short 
 11488 ;;  lsbs_duty       1   36[BANK0 ] unsigned char 
 11489 ;; Return value:  Size  Location     Type
 11490 ;;                  1    wreg      void 
 11491 ;; Registers used:
 11492 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11493 ;; Tracked objects:
 11494 ;;		On entry : 0/0
 11495 ;;		On exit  : 0/0
 11496 ;;		Unchanged: 0/0
 11497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11498 ;;      Params:         0       4       0       0       0       0       0
 11499 ;;      Locals:         0       3       0       0       0       0       0
 11500 ;;      Temps:          0       2       0       0       0       0       0
 11501 ;;      Totals:         0       9       0       0       0       0       0
 11502 ;;Total ram usage:        9 bytes
 11503 ;; Hardware stack levels used:    1
 11504 ;; Hardware stack levels required when called:    2
 11505 ;; This function calls:
 11506 ;;		___fldiv
 11507 ;;		___flmul
 11508 ;;		___fltol
 11509 ;; This function is called by:
 11510 ;;		_init_ccp1
 11511 ;; This function uses a non-reentrant model
 11512 ;;
 11513                           
 11514                           	psect	text47
 11515  006E92                     __ptext47:
 11516                           	callstack 0
 11517  006E92                     _update_pwm_duty_ccp1:
 11518                           	callstack 0
 11519  006E92  FFFF               	dw	65535	; assembler added errata NOP
 11520  006E94                     
 11521                           ;timer.c: 56:     uint16_t new_duty;;timer.c: 57:     uint8_t lsbs_duty;;timer.c: 59:   
      +                            new_duty = (0.001) / (t_osc * tmr2_prescaler);
 11522  006E94  0EBD               	movlw	189
 11523  006E96  6E31               	movwf	___flmul@a^0,c
 11524  006E98  0E37               	movlw	55
 11525  006E9A  6E32               	movwf	(___flmul@a+1)^0,c
 11526  006E9C  0E86               	movlw	134
 11527  006E9E  6E33               	movwf	(___flmul@a+2)^0,c
 11528  006EA0  0E35               	movlw	53
 11529  006EA2  6E34               	movwf	(___flmul@a+3)^0,c
 11530  006EA4  C0ED  F02D         	movff	_tmr2_prescaler,___flmul@b
 11531  006EA8  C0EE  F02E         	movff	_tmr2_prescaler+1,___flmul@b+1
 11532  006EAC  C0EF  F02F         	movff	_tmr2_prescaler+2,___flmul@b+2
 11533  006EB0  C0F0  F030         	movff	_tmr2_prescaler+3,___flmul@b+3
 11534  006EB4  EC8A  F010         	call	___flmul	;wreg free
 11535  006EB8  C02D  F04A         	movff	?___flmul,___fldiv@a
 11536  006EBC  C02E  F04B         	movff	?___flmul+1,___fldiv@a+1
 11537  006EC0  C02F  F04C         	movff	?___flmul+2,___fldiv@a+2
 11538  006EC4  C030  F04D         	movff	?___flmul+3,___fldiv@a+3
 11539  006EC8  0E6F               	movlw	111
 11540  006ECA  6E46               	movwf	___fldiv@b^0,c
 11541  006ECC  0E12               	movlw	18
 11542  006ECE  6E47               	movwf	(___fldiv@b+1)^0,c
 11543  006ED0  0E83               	movlw	131
 11544  006ED2  6E48               	movwf	(___fldiv@b+2)^0,c
 11545  006ED4  0E3A               	movlw	58
 11546  006ED6  6E49               	movwf	(___fldiv@b+3)^0,c
 11547  006ED8  ECDC  F012         	call	___fldiv	;wreg free
 11548  006EDC  C046  F0CA         	movff	?___fldiv,___fltol@f1
 11549  006EE0  C047  F0CB         	movff	?___fldiv+1,___fltol@f1+1
 11550  006EE4  C048  F0CC         	movff	?___fldiv+2,___fltol@f1+2
 11551  006EE8  C049  F0CD         	movff	?___fldiv+3,___fltol@f1+3
 11552  006EEC  EC59  F03D         	call	___fltol	;wreg free
 11553  006EF0  C0CA  F0DA         	movff	?___fltol,update_pwm_duty_ccp1@new_duty
 11554  006EF4  C0CB  F0DB         	movff	?___fltol+1,update_pwm_duty_ccp1@new_duty+1
 11555  006EF8                     
 11556                           ;timer.c: 60:     lsbs_duty = (uint8_t) new_duty;
 11557  006EF8  C0DA  F0DC         	movff	update_pwm_duty_ccp1@new_duty,update_pwm_duty_ccp1@lsbs_duty
 11558  006EFC                     
 11559                           ;timer.c: 64:     if (lsbs_duty & 0x01) CCP1CON |= (1u << 4);
 11560  006EFC  0100               	movlb	0	; () banked
 11561  006EFE  A1DC               	btfss	update_pwm_duty_ccp1@lsbs_duty& (0+255),0,b
 11562  006F00  EF84  F037         	goto	u6421
 11563  006F04  EF87  F037         	goto	u6420
 11564  006F08                     u6421:
 11565  006F08  FFFF               	dw	65535	; assembler added errata NOP
 11566  006F0A  EF8B  F037         	goto	l5170
 11567  006F0E                     u6420:
 11568  006F0E  FFFF               	dw	65535	; assembler added errata NOP
 11569  006F10                     
 11570                           ; BSR set to: 0
 11571  006F10  88BD               	bsf	189,4,c	;volatile
 11572  006F12  EF8D  F037         	goto	l5172
 11573  006F16                     l5170:
 11574  006F16  FFFF               	dw	65535	; assembler added errata NOP
 11575                           
 11576                           ; BSR set to: 0
 11577  006F18  98BD               	bcf	189,4,c	;volatile
 11578  006F1A                     l5172:
 11579  006F1A  FFFF               	dw	65535	; assembler added errata NOP
 11580                           
 11581                           ; BSR set to: 0
 11582                           ;timer.c: 67:     if (lsbs_duty & 0x02) CCP1CON |= (1u << 5);
 11583  006F1C  A3DC               	btfss	update_pwm_duty_ccp1@lsbs_duty& (0+255),1,b
 11584  006F1E  EF93  F037         	goto	u6431
 11585  006F22  EF96  F037         	goto	u6430
 11586  006F26                     u6431:
 11587  006F26  FFFF               	dw	65535	; assembler added errata NOP
 11588  006F28  EF9A  F037         	goto	l5176
 11589  006F2C                     u6430:
 11590  006F2C  FFFF               	dw	65535	; assembler added errata NOP
 11591  006F2E                     
 11592                           ; BSR set to: 0
 11593  006F2E  8ABD               	bsf	189,5,c	;volatile
 11594  006F30  EF9C  F037         	goto	l5178
 11595  006F34                     l5176:
 11596  006F34  FFFF               	dw	65535	; assembler added errata NOP
 11597                           
 11598                           ; BSR set to: 0
 11599  006F36  9ABD               	bcf	189,5,c	;volatile
 11600  006F38                     l5178:
 11601  006F38  FFFF               	dw	65535	; assembler added errata NOP
 11602                           
 11603                           ; BSR set to: 0
 11604                           ;timer.c: 71:     CCPR1L = (uint8_t) (new_duty >> 2);
 11605  006F3A  C0DA  F0D8         	movff	update_pwm_duty_ccp1@new_duty,??_update_pwm_duty_ccp1
 11606  006F3E  C0DB  F0D9         	movff	update_pwm_duty_ccp1@new_duty+1,??_update_pwm_duty_ccp1+1
 11607  006F42  90D8               	bcf	status,0,c
 11608  006F44  33D9               	rrcf	(??_update_pwm_duty_ccp1+1)& (0+255),f,b
 11609  006F46  33D8               	rrcf	??_update_pwm_duty_ccp1& (0+255),f,b
 11610  006F48  90D8               	bcf	status,0,c
 11611  006F4A  33D9               	rrcf	(??_update_pwm_duty_ccp1+1)& (0+255),f,b
 11612  006F4C  33D8               	rrcf	??_update_pwm_duty_ccp1& (0+255),f,b
 11613  006F4E  51D8               	movf	??_update_pwm_duty_ccp1& (0+255),w,b
 11614  006F50  6EBE               	movwf	190,c	;volatile
 11615  006F52                     
 11616                           ; BSR set to: 0
 11617  006F52  0012               	return		;funcret
 11618  006F54  FFFF               	dw	65535	; errata NOP
 11619  006F56                     __end_of_update_pwm_duty_ccp1:
 11620                           	callstack 0
 11621                           
 11622 ;; *************** function ___fldiv *****************
 11623 ;; Defined at:
 11624 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
 11625 ;; Parameters:    Size  Location     Type
 11626 ;;  b               4   69[COMRAM] void 
 11627 ;;  a               4   73[COMRAM] void 
 11628 ;; Auto vars:     Size  Location     Type
 11629 ;;  grs             4   88[COMRAM] unsigned long 
 11630 ;;  rem             4   81[COMRAM] unsigned long 
 11631 ;;  new_exp         2   86[COMRAM] short 
 11632 ;;  aexp            1   93[COMRAM] unsigned char 
 11633 ;;  bexp            1   92[COMRAM] unsigned char 
 11634 ;;  sign            1   85[COMRAM] unsigned char 
 11635 ;; Return value:  Size  Location     Type
 11636 ;;                  4   69[COMRAM] unsigned char 
 11637 ;; Registers used:
 11638 ;;		wreg, status,2, status,0
 11639 ;; Tracked objects:
 11640 ;;		On entry : 0/0
 11641 ;;		On exit  : 0/0
 11642 ;;		Unchanged: 0/0
 11643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11644 ;;      Params:         8       0       0       0       0       0       0
 11645 ;;      Locals:        13       0       0       0       0       0       0
 11646 ;;      Temps:          4       0       0       0       0       0       0
 11647 ;;      Totals:        25       0       0       0       0       0       0
 11648 ;;Total ram usage:       25 bytes
 11649 ;; Hardware stack levels used:    1
 11650 ;; Hardware stack levels required when called:    1
 11651 ;; This function calls:
 11652 ;;		Nothing
 11653 ;; This function is called by:
 11654 ;;		_init_timer_2
 11655 ;;		_update_pwm_duty_ccp1
 11656 ;; This function uses a non-reentrant model
 11657 ;;
 11658                           
 11659                           	psect	text48
 11660  0025B8                     __ptext48:
 11661                           	callstack 0
 11662  0025B8                     ___fldiv:
 11663                           	callstack 0
 11664  0025B8  FFFF               	dw	65535	; assembler added errata NOP
 11665  0025BA  5049               	movf	(___fldiv@b+3)^0,w,c
 11666  0025BC  0B80               	andlw	128
 11667  0025BE  6E56               	movwf	___fldiv@sign^0,c
 11668  0025C0  5049               	movf	(___fldiv@b+3)^0,w,c
 11669  0025C2  2449               	addwf	(___fldiv@b+3)^0,w,c
 11670  0025C4  6E5D               	movwf	___fldiv@bexp^0,c
 11671  0025C6  AE48               	btfss	(___fldiv@b+2)^0,7,c
 11672  0025C8  EFE8  F012         	goto	u5661
 11673  0025CC  EFEB  F012         	goto	u5660
 11674  0025D0                     u5661:
 11675  0025D0  FFFF               	dw	65535	; assembler added errata NOP
 11676  0025D2  EFED  F012         	goto	l4698
 11677  0025D6                     u5660:
 11678  0025D6  FFFF               	dw	65535	; assembler added errata NOP
 11679  0025D8  805D               	bsf	___fldiv@bexp^0,0,c
 11680  0025DA                     l4698:
 11681  0025DA  FFFF               	dw	65535	; assembler added errata NOP
 11682  0025DC  505D               	movf	___fldiv@bexp^0,w,c
 11683  0025DE  B4D8               	btfsc	status,2,c
 11684  0025E0  EFF4  F012         	goto	u5671
 11685  0025E4  EFF7  F012         	goto	u5670
 11686  0025E8                     u5671:
 11687  0025E8  FFFF               	dw	65535	; assembler added errata NOP
 11688  0025EA  EF10  F013         	goto	l4708
 11689  0025EE                     u5670:
 11690  0025EE  FFFF               	dw	65535	; assembler added errata NOP
 11691  0025F0  285D               	incf	___fldiv@bexp^0,w,c
 11692  0025F2  A4D8               	btfss	status,2,c
 11693  0025F4  EFFE  F012         	goto	u5681
 11694  0025F8  EF01  F013         	goto	u5680
 11695  0025FC                     u5681:
 11696  0025FC  FFFF               	dw	65535	; assembler added errata NOP
 11697  0025FE  EF0A  F013         	goto	l4704
 11698  002602                     u5680:
 11699  002602  FFFF               	dw	65535	; assembler added errata NOP
 11700  002604  0E00               	movlw	0
 11701  002606  6E46               	movwf	___fldiv@b^0,c
 11702  002608  0E00               	movlw	0
 11703  00260A  6E47               	movwf	(___fldiv@b+1)^0,c
 11704  00260C  0E00               	movlw	0
 11705  00260E  6E48               	movwf	(___fldiv@b+2)^0,c
 11706  002610  0E00               	movlw	0
 11707  002612  6E49               	movwf	(___fldiv@b+3)^0,c
 11708  002614                     l4704:
 11709  002614  FFFF               	dw	65535	; assembler added errata NOP
 11710  002616  8E48               	bsf	(___fldiv@b+2)^0,7,c
 11711  002618  0E00               	movlw	0
 11712  00261A  6E49               	movwf	(___fldiv@b+3)^0,c
 11713  00261C  EF19  F013         	goto	l4710
 11714  002620                     l4708:
 11715  002620  FFFF               	dw	65535	; assembler added errata NOP
 11716  002622  0E00               	movlw	0
 11717  002624  6E46               	movwf	___fldiv@b^0,c
 11718  002626  0E00               	movlw	0
 11719  002628  6E47               	movwf	(___fldiv@b+1)^0,c
 11720  00262A  0E00               	movlw	0
 11721  00262C  6E48               	movwf	(___fldiv@b+2)^0,c
 11722  00262E  0E00               	movlw	0
 11723  002630  6E49               	movwf	(___fldiv@b+3)^0,c
 11724  002632                     l4710:
 11725  002632  FFFF               	dw	65535	; assembler added errata NOP
 11726  002634  504D               	movf	(___fldiv@a+3)^0,w,c
 11727  002636  0B80               	andlw	128
 11728  002638  1A56               	xorwf	___fldiv@sign^0,f,c
 11729  00263A  504D               	movf	(___fldiv@a+3)^0,w,c
 11730  00263C  244D               	addwf	(___fldiv@a+3)^0,w,c
 11731  00263E  6E5E               	movwf	___fldiv@aexp^0,c
 11732  002640  AE4C               	btfss	(___fldiv@a+2)^0,7,c
 11733  002642  EF25  F013         	goto	u5691
 11734  002646  EF28  F013         	goto	u5690
 11735  00264A                     u5691:
 11736  00264A  FFFF               	dw	65535	; assembler added errata NOP
 11737  00264C  EF2A  F013         	goto	l4718
 11738  002650                     u5690:
 11739  002650  FFFF               	dw	65535	; assembler added errata NOP
 11740  002652  805E               	bsf	___fldiv@aexp^0,0,c
 11741  002654                     l4718:
 11742  002654  FFFF               	dw	65535	; assembler added errata NOP
 11743  002656  505E               	movf	___fldiv@aexp^0,w,c
 11744  002658  B4D8               	btfsc	status,2,c
 11745  00265A  EF31  F013         	goto	u5701
 11746  00265E  EF34  F013         	goto	u5700
 11747  002662                     u5701:
 11748  002662  FFFF               	dw	65535	; assembler added errata NOP
 11749  002664  EF4D  F013         	goto	l4728
 11750  002668                     u5700:
 11751  002668  FFFF               	dw	65535	; assembler added errata NOP
 11752  00266A  285E               	incf	___fldiv@aexp^0,w,c
 11753  00266C  A4D8               	btfss	status,2,c
 11754  00266E  EF3B  F013         	goto	u5711
 11755  002672  EF3E  F013         	goto	u5710
 11756  002676                     u5711:
 11757  002676  FFFF               	dw	65535	; assembler added errata NOP
 11758  002678  EF47  F013         	goto	l4724
 11759  00267C                     u5710:
 11760  00267C  FFFF               	dw	65535	; assembler added errata NOP
 11761  00267E  0E00               	movlw	0
 11762  002680  6E4A               	movwf	___fldiv@a^0,c
 11763  002682  0E00               	movlw	0
 11764  002684  6E4B               	movwf	(___fldiv@a+1)^0,c
 11765  002686  0E00               	movlw	0
 11766  002688  6E4C               	movwf	(___fldiv@a+2)^0,c
 11767  00268A  0E00               	movlw	0
 11768  00268C  6E4D               	movwf	(___fldiv@a+3)^0,c
 11769  00268E                     l4724:
 11770  00268E  FFFF               	dw	65535	; assembler added errata NOP
 11771  002690  8E4C               	bsf	(___fldiv@a+2)^0,7,c
 11772  002692  0E00               	movlw	0
 11773  002694  6E4D               	movwf	(___fldiv@a+3)^0,c
 11774  002696  EF56  F013         	goto	l4730
 11775  00269A                     l4728:
 11776  00269A  FFFF               	dw	65535	; assembler added errata NOP
 11777  00269C  0E00               	movlw	0
 11778  00269E  6E4A               	movwf	___fldiv@a^0,c
 11779  0026A0  0E00               	movlw	0
 11780  0026A2  6E4B               	movwf	(___fldiv@a+1)^0,c
 11781  0026A4  0E00               	movlw	0
 11782  0026A6  6E4C               	movwf	(___fldiv@a+2)^0,c
 11783  0026A8  0E00               	movlw	0
 11784  0026AA  6E4D               	movwf	(___fldiv@a+3)^0,c
 11785  0026AC                     l4730:
 11786  0026AC  FFFF               	dw	65535	; assembler added errata NOP
 11787  0026AE  504A               	movf	___fldiv@a^0,w,c
 11788  0026B0  104B               	iorwf	(___fldiv@a+1)^0,w,c
 11789  0026B2  104C               	iorwf	(___fldiv@a+2)^0,w,c
 11790  0026B4  104D               	iorwf	(___fldiv@a+3)^0,w,c
 11791  0026B6  A4D8               	btfss	status,2,c
 11792  0026B8  EF60  F013         	goto	u5721
 11793  0026BC  EF63  F013         	goto	u5720
 11794  0026C0                     u5721:
 11795  0026C0  FFFF               	dw	65535	; assembler added errata NOP
 11796  0026C2  EF7D  F013         	goto	l4742
 11797  0026C6                     u5720:
 11798  0026C6  FFFF               	dw	65535	; assembler added errata NOP
 11799  0026C8  0E00               	movlw	0
 11800  0026CA  6E46               	movwf	___fldiv@b^0,c
 11801  0026CC  0E00               	movlw	0
 11802  0026CE  6E47               	movwf	(___fldiv@b+1)^0,c
 11803  0026D0  0E00               	movlw	0
 11804  0026D2  6E48               	movwf	(___fldiv@b+2)^0,c
 11805  0026D4  0E00               	movlw	0
 11806  0026D6  6E49               	movwf	(___fldiv@b+3)^0,c
 11807  0026D8  0E80               	movlw	128
 11808  0026DA  1248               	iorwf	(___fldiv@b+2)^0,f,c
 11809  0026DC  0E7F               	movlw	127
 11810  0026DE  1249               	iorwf	(___fldiv@b+3)^0,f,c
 11811  0026E0                     l4736:
 11812  0026E0  FFFF               	dw	65535	; assembler added errata NOP
 11813  0026E2  5056               	movf	___fldiv@sign^0,w,c
 11814  0026E4  1249               	iorwf	(___fldiv@b+3)^0,f,c
 11815  0026E6  C046  F046         	movff	___fldiv@b,?___fldiv
 11816  0026EA  C047  F047         	movff	___fldiv@b+1,?___fldiv+1
 11817  0026EE  C048  F048         	movff	___fldiv@b+2,?___fldiv+2
 11818  0026F2  C049  F049         	movff	___fldiv@b+3,?___fldiv+3
 11819  0026F6  EFF2  F014         	goto	l970
 11820  0026FA                     l4742:
 11821  0026FA  FFFF               	dw	65535	; assembler added errata NOP
 11822  0026FC  505D               	movf	___fldiv@bexp^0,w,c
 11823  0026FE  A4D8               	btfss	status,2,c
 11824  002700  EF84  F013         	goto	u5731
 11825  002704  EF87  F013         	goto	u5730
 11826  002708                     u5731:
 11827  002708  FFFF               	dw	65535	; assembler added errata NOP
 11828  00270A  EF92  F013         	goto	l4750
 11829  00270E                     u5730:
 11830  00270E  FFFF               	dw	65535	; assembler added errata NOP
 11831  002710  0E00               	movlw	0
 11832  002712  6E46               	movwf	?___fldiv^0,c
 11833  002714  0E00               	movlw	0
 11834  002716  6E47               	movwf	(?___fldiv+1)^0,c
 11835  002718  0E00               	movlw	0
 11836  00271A  6E48               	movwf	(?___fldiv+2)^0,c
 11837  00271C  0E00               	movlw	0
 11838  00271E  6E49               	movwf	(?___fldiv+3)^0,c
 11839  002720  EFF2  F014         	goto	l970
 11840  002724                     l4750:
 11841  002724  FFFF               	dw	65535	; assembler added errata NOP
 11842  002726  505E               	movf	___fldiv@aexp^0,w,c
 11843  002728  C05D  F04E         	movff	___fldiv@bexp,??___fldiv
 11844  00272C  6A4F               	clrf	(??___fldiv+1)^0,c
 11845  00272E  5E4E               	subwf	??___fldiv^0,f,c
 11846  002730  0E00               	movlw	0
 11847  002732  5A4F               	subwfb	(??___fldiv+1)^0,f,c
 11848  002734  0E7F               	movlw	127
 11849  002736  244E               	addwf	??___fldiv^0,w,c
 11850  002738  6E57               	movwf	___fldiv@new_exp^0,c
 11851  00273A  0E00               	movlw	0
 11852  00273C  204F               	addwfc	(??___fldiv+1)^0,w,c
 11853  00273E  6E58               	movwf	(___fldiv@new_exp+1)^0,c
 11854  002740  C046  F052         	movff	___fldiv@b,___fldiv@rem
 11855  002744  C047  F053         	movff	___fldiv@b+1,___fldiv@rem+1
 11856  002748  C048  F054         	movff	___fldiv@b+2,___fldiv@rem+2
 11857  00274C  C049  F055         	movff	___fldiv@b+3,___fldiv@rem+3
 11858  002750  0E00               	movlw	0
 11859  002752  6E46               	movwf	___fldiv@b^0,c
 11860  002754  0E00               	movlw	0
 11861  002756  6E47               	movwf	(___fldiv@b+1)^0,c
 11862  002758  0E00               	movlw	0
 11863  00275A  6E48               	movwf	(___fldiv@b+2)^0,c
 11864  00275C  0E00               	movlw	0
 11865  00275E  6E49               	movwf	(___fldiv@b+3)^0,c
 11866  002760  0E00               	movlw	0
 11867  002762  6E59               	movwf	___fldiv@grs^0,c
 11868  002764  0E00               	movlw	0
 11869  002766  6E5A               	movwf	(___fldiv@grs+1)^0,c
 11870  002768  0E00               	movlw	0
 11871  00276A  6E5B               	movwf	(___fldiv@grs+2)^0,c
 11872  00276C  0E00               	movlw	0
 11873  00276E  6E5C               	movwf	(___fldiv@grs+3)^0,c
 11874  002770  0E00               	movlw	0
 11875  002772  6E5E               	movwf	___fldiv@aexp^0,c
 11876  002774  EFFE  F013         	goto	l972
 11877  002778                     l4760:
 11878  002778  FFFF               	dw	65535	; assembler added errata NOP
 11879  00277A  505E               	movf	___fldiv@aexp^0,w,c
 11880  00277C  B4D8               	btfsc	status,2,c
 11881  00277E  EFC3  F013         	goto	u5741
 11882  002782  EFC6  F013         	goto	u5740
 11883  002786                     u5741:
 11884  002786  FFFF               	dw	65535	; assembler added errata NOP
 11885  002788  EFE1  F013         	goto	l4768
 11886  00278C                     u5740:
 11887  00278C  FFFF               	dw	65535	; assembler added errata NOP
 11888  00278E  90D8               	bcf	status,0,c
 11889  002790  3652               	rlcf	___fldiv@rem^0,f,c
 11890  002792  3653               	rlcf	(___fldiv@rem+1)^0,f,c
 11891  002794  3654               	rlcf	(___fldiv@rem+2)^0,f,c
 11892  002796  3655               	rlcf	(___fldiv@rem+3)^0,f,c
 11893  002798  90D8               	bcf	status,0,c
 11894  00279A  3646               	rlcf	___fldiv@b^0,f,c
 11895  00279C  3647               	rlcf	(___fldiv@b+1)^0,f,c
 11896  00279E  3648               	rlcf	(___fldiv@b+2)^0,f,c
 11897  0027A0  3649               	rlcf	(___fldiv@b+3)^0,f,c
 11898  0027A2  AE5C               	btfss	(___fldiv@grs+3)^0,7,c
 11899  0027A4  EFD6  F013         	goto	u5751
 11900  0027A8  EFD9  F013         	goto	u5750
 11901  0027AC                     u5751:
 11902  0027AC  FFFF               	dw	65535	; assembler added errata NOP
 11903  0027AE  EFDB  F013         	goto	l975
 11904  0027B2                     u5750:
 11905  0027B2  FFFF               	dw	65535	; assembler added errata NOP
 11906  0027B4  8046               	bsf	___fldiv@b^0,0,c
 11907  0027B6                     l975:
 11908  0027B6  FFFF               	dw	65535	; assembler added errata NOP
 11909  0027B8  90D8               	bcf	status,0,c
 11910  0027BA  3659               	rlcf	___fldiv@grs^0,f,c
 11911  0027BC  365A               	rlcf	(___fldiv@grs+1)^0,f,c
 11912  0027BE  365B               	rlcf	(___fldiv@grs+2)^0,f,c
 11913  0027C0  365C               	rlcf	(___fldiv@grs+3)^0,f,c
 11914  0027C2                     l4768:
 11915  0027C2  FFFF               	dw	65535	; assembler added errata NOP
 11916  0027C4  504A               	movf	___fldiv@a^0,w,c
 11917  0027C6  5C52               	subwf	___fldiv@rem^0,w,c
 11918  0027C8  504B               	movf	(___fldiv@a+1)^0,w,c
 11919  0027CA  5853               	subwfb	(___fldiv@rem+1)^0,w,c
 11920  0027CC  504C               	movf	(___fldiv@a+2)^0,w,c
 11921  0027CE  5854               	subwfb	(___fldiv@rem+2)^0,w,c
 11922  0027D0  504D               	movf	(___fldiv@a+3)^0,w,c
 11923  0027D2  5855               	subwfb	(___fldiv@rem+3)^0,w,c
 11924  0027D4  A0D8               	btfss	status,0,c
 11925  0027D6  EFEF  F013         	goto	u5761
 11926  0027DA  EFF2  F013         	goto	u5760
 11927  0027DE                     u5761:
 11928  0027DE  FFFF               	dw	65535	; assembler added errata NOP
 11929  0027E0  EFFC  F013         	goto	l4774
 11930  0027E4                     u5760:
 11931  0027E4  FFFF               	dw	65535	; assembler added errata NOP
 11932  0027E6  8C5C               	bsf	(___fldiv@grs+3)^0,6,c
 11933  0027E8  504A               	movf	___fldiv@a^0,w,c
 11934  0027EA  5E52               	subwf	___fldiv@rem^0,f,c
 11935  0027EC  504B               	movf	(___fldiv@a+1)^0,w,c
 11936  0027EE  5A53               	subwfb	(___fldiv@rem+1)^0,f,c
 11937  0027F0  504C               	movf	(___fldiv@a+2)^0,w,c
 11938  0027F2  5A54               	subwfb	(___fldiv@rem+2)^0,f,c
 11939  0027F4  504D               	movf	(___fldiv@a+3)^0,w,c
 11940  0027F6  5A55               	subwfb	(___fldiv@rem+3)^0,f,c
 11941  0027F8                     l4774:
 11942  0027F8  FFFF               	dw	65535	; assembler added errata NOP
 11943  0027FA  2A5E               	incf	___fldiv@aexp^0,f,c
 11944  0027FC                     l972:
 11945  0027FC  FFFF               	dw	65535	; assembler added errata NOP
 11946  0027FE  0E19               	movlw	25
 11947  002800  645E               	cpfsgt	___fldiv@aexp^0,c
 11948  002802  EF05  F014         	goto	u5771
 11949  002806  EF08  F014         	goto	u5770
 11950  00280A                     u5771:
 11951  00280A  FFFF               	dw	65535	; assembler added errata NOP
 11952  00280C  EFBC  F013         	goto	l4760
 11953  002810                     u5770:
 11954  002810  FFFF               	dw	65535	; assembler added errata NOP
 11955  002812  5052               	movf	___fldiv@rem^0,w,c
 11956  002814  1053               	iorwf	(___fldiv@rem+1)^0,w,c
 11957  002816  1054               	iorwf	(___fldiv@rem+2)^0,w,c
 11958  002818  1055               	iorwf	(___fldiv@rem+3)^0,w,c
 11959  00281A  B4D8               	btfsc	status,2,c
 11960  00281C  EF12  F014         	goto	u5781
 11961  002820  EF15  F014         	goto	u5780
 11962  002824                     u5781:
 11963  002824  FFFF               	dw	65535	; assembler added errata NOP
 11964  002826  EF32  F014         	goto	l4786
 11965  00282A                     u5780:
 11966  00282A  FFFF               	dw	65535	; assembler added errata NOP
 11967  00282C  8059               	bsf	___fldiv@grs^0,0,c
 11968  00282E  EF32  F014         	goto	l4786
 11969  002832                     l4780:
 11970  002832  FFFF               	dw	65535	; assembler added errata NOP
 11971  002834  90D8               	bcf	status,0,c
 11972  002836  3646               	rlcf	___fldiv@b^0,f,c
 11973  002838  3647               	rlcf	(___fldiv@b+1)^0,f,c
 11974  00283A  3648               	rlcf	(___fldiv@b+2)^0,f,c
 11975  00283C  3649               	rlcf	(___fldiv@b+3)^0,f,c
 11976  00283E  AE5C               	btfss	(___fldiv@grs+3)^0,7,c
 11977  002840  EF24  F014         	goto	u5791
 11978  002844  EF27  F014         	goto	u5790
 11979  002848                     u5791:
 11980  002848  FFFF               	dw	65535	; assembler added errata NOP
 11981  00284A  EF29  F014         	goto	l981
 11982  00284E                     u5790:
 11983  00284E  FFFF               	dw	65535	; assembler added errata NOP
 11984  002850  8046               	bsf	___fldiv@b^0,0,c
 11985  002852                     l981:
 11986  002852  FFFF               	dw	65535	; assembler added errata NOP
 11987  002854  90D8               	bcf	status,0,c
 11988  002856  3659               	rlcf	___fldiv@grs^0,f,c
 11989  002858  365A               	rlcf	(___fldiv@grs+1)^0,f,c
 11990  00285A  365B               	rlcf	(___fldiv@grs+2)^0,f,c
 11991  00285C  365C               	rlcf	(___fldiv@grs+3)^0,f,c
 11992  00285E  0657               	decf	___fldiv@new_exp^0,f,c
 11993  002860  A0D8               	btfss	status,0,c
 11994  002862  0658               	decf	(___fldiv@new_exp+1)^0,f,c
 11995  002864                     l4786:
 11996  002864  FFFF               	dw	65535	; assembler added errata NOP
 11997  002866  AE48               	btfss	(___fldiv@b+2)^0,7,c
 11998  002868  EF38  F014         	goto	u5801
 11999  00286C  EF3B  F014         	goto	u5800
 12000  002870                     u5801:
 12001  002870  FFFF               	dw	65535	; assembler added errata NOP
 12002  002872  EF19  F014         	goto	l4780
 12003  002876                     u5800:
 12004  002876  FFFF               	dw	65535	; assembler added errata NOP
 12005  002878  0E00               	movlw	0
 12006  00287A  6E5E               	movwf	___fldiv@aexp^0,c
 12007  00287C  AE5C               	btfss	(___fldiv@grs+3)^0,7,c
 12008  00287E  EF43  F014         	goto	u5811
 12009  002882  EF46  F014         	goto	u5810
 12010  002886                     u5811:
 12011  002886  FFFF               	dw	65535	; assembler added errata NOP
 12012  002888  EF71  F014         	goto	l983
 12013  00288C                     u5810:
 12014  00288C  FFFF               	dw	65535	; assembler added errata NOP
 12015  00288E  0EFF               	movlw	255
 12016  002890  1459               	andwf	___fldiv@grs^0,w,c
 12017  002892  6E4E               	movwf	??___fldiv^0,c
 12018  002894  0EFF               	movlw	255
 12019  002896  145A               	andwf	(___fldiv@grs+1)^0,w,c
 12020  002898  6E4F               	movwf	(??___fldiv+1)^0,c
 12021  00289A  0EFF               	movlw	255
 12022  00289C  145B               	andwf	(___fldiv@grs+2)^0,w,c
 12023  00289E  6E50               	movwf	(??___fldiv+2)^0,c
 12024  0028A0  0E7F               	movlw	127
 12025  0028A2  145C               	andwf	(___fldiv@grs+3)^0,w,c
 12026  0028A4  6E51               	movwf	(??___fldiv+3)^0,c
 12027  0028A6  504E               	movf	??___fldiv^0,w,c
 12028  0028A8  104F               	iorwf	(??___fldiv+1)^0,w,c
 12029  0028AA  1050               	iorwf	(??___fldiv+2)^0,w,c
 12030  0028AC  1051               	iorwf	(??___fldiv+3)^0,w,c
 12031  0028AE  B4D8               	btfsc	status,2,c
 12032  0028B0  EF5C  F014         	goto	u5821
 12033  0028B4  EF5F  F014         	goto	u5820
 12034  0028B8                     u5821:
 12035  0028B8  FFFF               	dw	65535	; assembler added errata NOP
 12036  0028BA  EF65  F014         	goto	l984
 12037  0028BE                     u5820:
 12038  0028BE  FFFF               	dw	65535	; assembler added errata NOP
 12039  0028C0                     l4794:
 12040  0028C0  FFFF               	dw	65535	; assembler added errata NOP
 12041  0028C2  0E01               	movlw	1
 12042  0028C4  6E5E               	movwf	___fldiv@aexp^0,c
 12043  0028C6  EF71  F014         	goto	l983
 12044  0028CA                     l984:
 12045  0028CA  FFFF               	dw	65535	; assembler added errata NOP
 12046  0028CC  A046               	btfss	___fldiv@b^0,0,c
 12047  0028CE  EF6B  F014         	goto	u5831
 12048  0028D2  EF6E  F014         	goto	u5830
 12049  0028D6                     u5831:
 12050  0028D6  FFFF               	dw	65535	; assembler added errata NOP
 12051  0028D8  EF71  F014         	goto	l983
 12052  0028DC                     u5830:
 12053  0028DC  FFFF               	dw	65535	; assembler added errata NOP
 12054  0028DE  EF60  F014         	goto	l4794
 12055  0028E2                     l983:
 12056  0028E2  FFFF               	dw	65535	; assembler added errata NOP
 12057  0028E4  505E               	movf	___fldiv@aexp^0,w,c
 12058  0028E6  B4D8               	btfsc	status,2,c
 12059  0028E8  EF78  F014         	goto	u5841
 12060  0028EC  EF7B  F014         	goto	u5840
 12061  0028F0                     u5841:
 12062  0028F0  FFFF               	dw	65535	; assembler added errata NOP
 12063  0028F2  EFA2  F014         	goto	l4806
 12064  0028F6                     u5840:
 12065  0028F6  FFFF               	dw	65535	; assembler added errata NOP
 12066  0028F8  0E01               	movlw	1
 12067  0028FA  2646               	addwf	___fldiv@b^0,f,c
 12068  0028FC  0E00               	movlw	0
 12069  0028FE  2247               	addwfc	(___fldiv@b+1)^0,f,c
 12070  002900  2248               	addwfc	(___fldiv@b+2)^0,f,c
 12071  002902  2249               	addwfc	(___fldiv@b+3)^0,f,c
 12072  002904  A049               	btfss	(___fldiv@b+3)^0,0,c
 12073  002906  EF87  F014         	goto	u5851
 12074  00290A  EF8A  F014         	goto	u5850
 12075  00290E                     u5851:
 12076  00290E  FFFF               	dw	65535	; assembler added errata NOP
 12077  002910  EFA2  F014         	goto	l4806
 12078  002914                     u5850:
 12079  002914  FFFF               	dw	65535	; assembler added errata NOP
 12080  002916  C046  F04E         	movff	___fldiv@b,??___fldiv
 12081  00291A  C047  F04F         	movff	___fldiv@b+1,??___fldiv+1
 12082  00291E  C048  F050         	movff	___fldiv@b+2,??___fldiv+2
 12083  002922  C049  F051         	movff	___fldiv@b+3,??___fldiv+3
 12084  002926  3451               	rlcf	(??___fldiv+3)^0,w,c
 12085  002928  3251               	rrcf	(??___fldiv+3)^0,f,c
 12086  00292A  3250               	rrcf	(??___fldiv+2)^0,f,c
 12087  00292C  324F               	rrcf	(??___fldiv+1)^0,f,c
 12088  00292E  324E               	rrcf	??___fldiv^0,f,c
 12089  002930  C04E  F046         	movff	??___fldiv,___fldiv@b
 12090  002934  C04F  F047         	movff	??___fldiv+1,___fldiv@b+1
 12091  002938  C050  F048         	movff	??___fldiv+2,___fldiv@b+2
 12092  00293C  C051  F049         	movff	??___fldiv+3,___fldiv@b+3
 12093  002940  4A57               	infsnz	___fldiv@new_exp^0,f,c
 12094  002942  2A58               	incf	(___fldiv@new_exp+1)^0,f,c
 12095  002944                     l4806:
 12096  002944  FFFF               	dw	65535	; assembler added errata NOP
 12097  002946  BE58               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12098  002948  EFAE  F014         	goto	u5861
 12099  00294C  5058               	movf	(___fldiv@new_exp+1)^0,w,c
 12100  00294E  E109               	bnz	u5860
 12101  002950  2857               	incf	___fldiv@new_exp^0,w,c
 12102  002952  A0D8               	btfss	status,0,c
 12103  002954  EFAE  F014         	goto	u5861
 12104  002958  EFB1  F014         	goto	u5860
 12105  00295C                     u5861:
 12106  00295C  FFFF               	dw	65535	; assembler added errata NOP
 12107  00295E  EFBD  F014         	goto	l4810
 12108  002962                     u5860:
 12109  002962  FFFF               	dw	65535	; assembler added errata NOP
 12110  002964  0E00               	movlw	0
 12111  002966  6E58               	movwf	(___fldiv@new_exp+1)^0,c
 12112  002968  6857               	setf	___fldiv@new_exp^0,c
 12113  00296A  0E00               	movlw	0
 12114  00296C  6E46               	movwf	___fldiv@b^0,c
 12115  00296E  0E00               	movlw	0
 12116  002970  6E47               	movwf	(___fldiv@b+1)^0,c
 12117  002972  0E00               	movlw	0
 12118  002974  6E48               	movwf	(___fldiv@b+2)^0,c
 12119  002976  0E00               	movlw	0
 12120  002978  6E49               	movwf	(___fldiv@b+3)^0,c
 12121  00297A                     l4810:
 12122  00297A  FFFF               	dw	65535	; assembler added errata NOP
 12123  00297C  BE58               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12124  00297E  EFCC  F014         	goto	u5870
 12125  002982  5058               	movf	(___fldiv@new_exp+1)^0,w,c
 12126  002984  E106               	bnz	u5871
 12127  002986  0457               	decf	___fldiv@new_exp^0,w,c
 12128  002988  B0D8               	btfsc	status,0,c
 12129  00298A  EFC9  F014         	goto	u5871
 12130  00298E  EFCC  F014         	goto	u5870
 12131  002992                     u5871:
 12132  002992  FFFF               	dw	65535	; assembler added errata NOP
 12133  002994  EFDB  F014         	goto	l4814
 12134  002998                     u5870:
 12135  002998  FFFF               	dw	65535	; assembler added errata NOP
 12136  00299A  0E00               	movlw	0
 12137  00299C  6E58               	movwf	(___fldiv@new_exp+1)^0,c
 12138  00299E  0E00               	movlw	0
 12139  0029A0  6E57               	movwf	___fldiv@new_exp^0,c
 12140  0029A2  0E00               	movlw	0
 12141  0029A4  6E46               	movwf	___fldiv@b^0,c
 12142  0029A6  0E00               	movlw	0
 12143  0029A8  6E47               	movwf	(___fldiv@b+1)^0,c
 12144  0029AA  0E00               	movlw	0
 12145  0029AC  6E48               	movwf	(___fldiv@b+2)^0,c
 12146  0029AE  0E00               	movlw	0
 12147  0029B0  6E49               	movwf	(___fldiv@b+3)^0,c
 12148  0029B2  0E00               	movlw	0
 12149  0029B4  6E56               	movwf	___fldiv@sign^0,c
 12150  0029B6                     l4814:
 12151  0029B6  FFFF               	dw	65535	; assembler added errata NOP
 12152  0029B8  C057  F05D         	movff	___fldiv@new_exp,___fldiv@bexp
 12153  0029BC  A05D               	btfss	___fldiv@bexp^0,0,c
 12154  0029BE  EFE3  F014         	goto	u5881
 12155  0029C2  EFE6  F014         	goto	u5880
 12156  0029C6                     u5881:
 12157  0029C6  FFFF               	dw	65535	; assembler added errata NOP
 12158  0029C8  EFEA  F014         	goto	l4820
 12159  0029CC                     u5880:
 12160  0029CC  FFFF               	dw	65535	; assembler added errata NOP
 12161  0029CE  8E48               	bsf	(___fldiv@b+2)^0,7,c
 12162  0029D0  EFEC  F014         	goto	l4822
 12163  0029D4                     l4820:
 12164  0029D4  FFFF               	dw	65535	; assembler added errata NOP
 12165  0029D6  9E48               	bcf	(___fldiv@b+2)^0,7,c
 12166  0029D8                     l4822:
 12167  0029D8  FFFF               	dw	65535	; assembler added errata NOP
 12168  0029DA  90D8               	bcf	status,0,c
 12169  0029DC  305D               	rrcf	___fldiv@bexp^0,w,c
 12170  0029DE  6E49               	movwf	(___fldiv@b+3)^0,c
 12171  0029E0  EF70  F013         	goto	l4736
 12172  0029E4                     l970:
 12173  0029E4  FFFF               	dw	65535	; assembler added errata NOP
 12174  0029E6  0012               	return		;funcret
 12175  0029E8  FFFF               	dw	65535	; errata NOP
 12176  0029EA                     __end_of___fldiv:
 12177                           	callstack 0
 12178                           
 12179 ;; *************** function _init_USART *****************
 12180 ;; Defined at:
 12181 ;;		line 13 in file "serial_rs232.c"
 12182 ;; Parameters:    Size  Location     Type
 12183 ;;		None
 12184 ;; Auto vars:     Size  Location     Type
 12185 ;;		None
 12186 ;; Return value:  Size  Location     Type
 12187 ;;                  1    wreg      void 
 12188 ;; Registers used:
 12189 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12190 ;; Tracked objects:
 12191 ;;		On entry : 0/0
 12192 ;;		On exit  : 0/0
 12193 ;;		Unchanged: 0/0
 12194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12195 ;;      Params:         0       0       0       0       0       0       0
 12196 ;;      Locals:         0       0       0       0       0       0       0
 12197 ;;      Temps:          0       0       0       0       0       0       0
 12198 ;;      Totals:         0       0       0       0       0       0       0
 12199 ;;Total ram usage:        0 bytes
 12200 ;; Hardware stack levels used:    1
 12201 ;; Hardware stack levels required when called:    4
 12202 ;; This function calls:
 12203 ;;		___fltol
 12204 ;;		_roundf
 12205 ;; This function is called by:
 12206 ;;		_main
 12207 ;; This function uses a non-reentrant model
 12208 ;;
 12209                           
 12210                           	psect	text49
 12211  006756                     __ptext49:
 12212                           	callstack 0
 12213  006756                     _init_USART:
 12214                           	callstack 0
 12215  006756  FFFF               	dw	65535	; assembler added errata NOP
 12216  006758                     
 12217                           ;serial_rs232.c: 24:     SPBRG = roundf(((fosc / desired_baudrate) / 16) - 1);
 12218  006758  0E55               	movlw	85
 12219  00675A  6E77               	movwf	roundf@x^0,c
 12220  00675C  0E55               	movlw	85
 12221  00675E  6E78               	movwf	(roundf@x+1)^0,c
 12222  006760  0EC8               	movlw	200
 12223  006762  6E79               	movwf	(roundf@x+2)^0,c
 12224  006764  0E41               	movlw	65
 12225  006766  6E7A               	movwf	(roundf@x+3)^0,c
 12226  006768  ECF5  F014         	call	_roundf	;wreg free
 12227  00676C  C077  F0CA         	movff	?_roundf,___fltol@f1
 12228  006770  C078  F0CB         	movff	?_roundf+1,___fltol@f1+1
 12229  006774  C079  F0CC         	movff	?_roundf+2,___fltol@f1+2
 12230  006778  C07A  F0CD         	movff	?_roundf+3,___fltol@f1+3
 12231  00677C  EC59  F03D         	call	___fltol	;wreg free
 12232  006780  0100               	movlb	0	; () banked
 12233  006782  51CA               	movf	?___fltol& (0+255),w,b
 12234  006784  6EAF               	movwf	175,c	;volatile
 12235  006786                     
 12236                           ; BSR set to: 0
 12237                           ;serial_rs232.c: 28:     TXSTAbits.TX9 = 0;
 12238  006786  9CAC               	bcf	172,6,c	;volatile
 12239  006788                     
 12240                           ; BSR set to: 0
 12241                           ;serial_rs232.c: 29:     TXSTAbits.TXEN = 1;
 12242  006788  8AAC               	bsf	172,5,c	;volatile
 12243  00678A                     
 12244                           ; BSR set to: 0
 12245                           ;serial_rs232.c: 30:     TXSTAbits.SYNC =0;
 12246  00678A  98AC               	bcf	172,4,c	;volatile
 12247  00678C                     
 12248                           ; BSR set to: 0
 12249                           ;serial_rs232.c: 31:     TXSTAbits.BRGH = 1;
 12250  00678C  84AC               	bsf	172,2,c	;volatile
 12251  00678E                     
 12252                           ; BSR set to: 0
 12253                           ;serial_rs232.c: 33:     RCSTAbits.SPEN = 1;
 12254  00678E  8EAB               	bsf	171,7,c	;volatile
 12255  006790                     
 12256                           ; BSR set to: 0
 12257                           ;serial_rs232.c: 34:     RCSTAbits.RX9 = 0;
 12258  006790  9CAB               	bcf	171,6,c	;volatile
 12259  006792                     
 12260                           ; BSR set to: 0
 12261                           ;serial_rs232.c: 35:     RCSTAbits.CREN = 1;
 12262  006792  88AB               	bsf	171,4,c	;volatile
 12263  006794                     
 12264                           ; BSR set to: 0
 12265  006794  0012               	return		;funcret
 12266  006796  FFFF               	dw	65535	; errata NOP
 12267  006798                     __end_of_init_USART:
 12268                           	callstack 0
 12269                           
 12270 ;; *************** function _roundf *****************
 12271 ;; Defined at:
 12272 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\roundf.c"
 12273 ;; Parameters:    Size  Location     Type
 12274 ;;  x               4  118[COMRAM] float 
 12275 ;; Auto vars:     Size  Location     Type
 12276 ;;  y               4   14[BANK0 ] float 
 12277 ;;  u               4   10[BANK0 ] struct .
 12278 ;;  e               2    4[BANK0 ] int 
 12279 ;; Return value:  Size  Location     Type
 12280 ;;                  4  118[COMRAM] float 
 12281 ;; Registers used:
 12282 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12283 ;; Tracked objects:
 12284 ;;		On entry : 0/0
 12285 ;;		On exit  : 0/0
 12286 ;;		Unchanged: 0/0
 12287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12288 ;;      Params:         4       0       0       0       0       0       0
 12289 ;;      Locals:         0      18       0       0       0       0       0
 12290 ;;      Temps:          4       0       0       0       0       0       0
 12291 ;;      Totals:         8      18       0       0       0       0       0
 12292 ;;Total ram usage:       26 bytes
 12293 ;; Hardware stack levels used:    1
 12294 ;; Hardware stack levels required when called:    3
 12295 ;; This function calls:
 12296 ;;		___fladd
 12297 ;;		___flge
 12298 ;;		___flmul
 12299 ;;		___flneg
 12300 ;;		___flsub
 12301 ;; This function is called by:
 12302 ;;		_init_USART
 12303 ;; This function uses a non-reentrant model
 12304 ;;
 12305                           
 12306                           	psect	text50
 12307  0029EA                     __ptext50:
 12308                           	callstack 0
 12309  0029EA                     _roundf:
 12310                           	callstack 0
 12311  0029EA  FFFF               	dw	65535	; assembler added errata NOP
 12312  0029EC  C080  F0C2         	movff	roundf@F525,roundf@u
 12313  0029F0  C081  F0C3         	movff	roundf@F525+1,roundf@u+1
 12314  0029F4  C082  F0C4         	movff	roundf@F525+2,roundf@u+2
 12315  0029F8  C083  F0C5         	movff	roundf@F525+3,roundf@u+3
 12316  0029FC  C077  F0C2         	movff	roundf@x,roundf@u
 12317  002A00  C078  F0C3         	movff	roundf@x+1,roundf@u+1
 12318  002A04  C079  F0C4         	movff	roundf@x+2,roundf@u+2
 12319  002A08  C07A  F0C5         	movff	roundf@x+3,roundf@u+3
 12320  002A0C  C0C2  F07B         	movff	roundf@u,??_roundf
 12321  002A10  C0C3  F07C         	movff	roundf@u+1,??_roundf+1
 12322  002A14  C0C4  F07D         	movff	roundf@u+2,??_roundf+2
 12323  002A18  C0C5  F07E         	movff	roundf@u+3,??_roundf+3
 12324  002A1C  0E18               	movlw	24
 12325  002A1E  EF17  F015         	goto	u6320
 12326  002A22                     u6325:
 12327  002A22  FFFF               	dw	65535	; assembler added errata NOP
 12328  002A24  90D8               	bcf	status,0,c
 12329  002A26  327E               	rrcf	(??_roundf+3)^0,f,c
 12330  002A28  327D               	rrcf	(??_roundf+2)^0,f,c
 12331  002A2A  327C               	rrcf	(??_roundf+1)^0,f,c
 12332  002A2C  327B               	rrcf	??_roundf^0,f,c
 12333  002A2E                     u6320:
 12334  002A2E  FFFF               	dw	65535	; assembler added errata NOP
 12335  002A30  2EE8               	decfsz	wreg,f,c
 12336  002A32  EF11  F015         	goto	u6325
 12337  002A36  507B               	movf	??_roundf^0,w,c
 12338  002A38  0100               	movlb	0	; () banked
 12339  002A3A  6FBC               	movwf	roundf@e& (0+255),b
 12340  002A3C  6BBD               	clrf	(roundf@e+1)& (0+255),b
 12341  002A3E  BFBD               	btfsc	(roundf@e+1)& (0+255),7,b
 12342  002A40  EF2B  F015         	goto	u6331
 12343  002A44  51BD               	movf	(roundf@e+1)& (0+255),w,b
 12344  002A46  E10A               	bnz	u6330
 12345  002A48  0E96               	movlw	150
 12346  002A4A  5DBC               	subwf	roundf@e& (0+255),w,b
 12347  002A4C  A0D8               	btfss	status,0,c
 12348  002A4E  EF2B  F015         	goto	u6331
 12349  002A52  EF2E  F015         	goto	u6330
 12350  002A56                     u6331:
 12351  002A56  FFFF               	dw	65535	; assembler added errata NOP
 12352  002A58  EF39  F015         	goto	l5100
 12353  002A5C                     u6330:
 12354  002A5C  FFFF               	dw	65535	; assembler added errata NOP
 12355  002A5E                     
 12356                           ; BSR set to: 0
 12357  002A5E  C077  F077         	movff	roundf@x,?_roundf
 12358  002A62  C078  F078         	movff	roundf@x+1,?_roundf+1
 12359  002A66  C079  F079         	movff	roundf@x+2,?_roundf+2
 12360  002A6A  C07A  F07A         	movff	roundf@x+3,?_roundf+3
 12361  002A6E  EFE7  F016         	goto	l1074
 12362  002A72                     l5100:
 12363  002A72  FFFF               	dw	65535	; assembler added errata NOP
 12364                           
 12365                           ; BSR set to: 0
 12366  002A74  C0C2  F07B         	movff	roundf@u,??_roundf
 12367  002A78  C0C3  F07C         	movff	roundf@u+1,??_roundf+1
 12368  002A7C  C0C4  F07D         	movff	roundf@u+2,??_roundf+2
 12369  002A80  C0C5  F07E         	movff	roundf@u+3,??_roundf+3
 12370  002A84  0E20               	movlw	32
 12371  002A86  EF4B  F015         	goto	u6340
 12372  002A8A                     u6345:
 12373  002A8A  FFFF               	dw	65535	; assembler added errata NOP
 12374  002A8C  90D8               	bcf	status,0,c
 12375  002A8E  327E               	rrcf	(??_roundf+3)^0,f,c
 12376  002A90  327D               	rrcf	(??_roundf+2)^0,f,c
 12377  002A92  327C               	rrcf	(??_roundf+1)^0,f,c
 12378  002A94  327B               	rrcf	??_roundf^0,f,c
 12379  002A96                     u6340:
 12380  002A96  FFFF               	dw	65535	; assembler added errata NOP
 12381  002A98  2EE8               	decfsz	wreg,f,c
 12382  002A9A  EF45  F015         	goto	u6345
 12383  002A9E  507B               	movf	??_roundf^0,w,c
 12384  002AA0  107C               	iorwf	(??_roundf+1)^0,w,c
 12385  002AA2  107D               	iorwf	(??_roundf+2)^0,w,c
 12386  002AA4  107E               	iorwf	(??_roundf+3)^0,w,c
 12387  002AA6  B4D8               	btfsc	status,2,c
 12388  002AA8  EF58  F015         	goto	u6351
 12389  002AAC  EF5B  F015         	goto	u6350
 12390  002AB0                     u6351:
 12391  002AB0  FFFF               	dw	65535	; assembler added errata NOP
 12392  002AB2  EF6E  F015         	goto	l5104
 12393  002AB6                     u6350:
 12394  002AB6  FFFF               	dw	65535	; assembler added errata NOP
 12395  002AB8                     
 12396                           ; BSR set to: 0
 12397  002AB8  C077  F001         	movff	roundf@x,___flneg@f1
 12398  002ABC  C078  F002         	movff	roundf@x+1,___flneg@f1+1
 12399  002AC0  C079  F003         	movff	roundf@x+2,___flneg@f1+2
 12400  002AC4  C07A  F004         	movff	roundf@x+3,___flneg@f1+3
 12401  002AC8  EC8A  F033         	call	___flneg	;wreg free
 12402  002ACC  C001  F077         	movff	?___flneg,roundf@x
 12403  002AD0  C002  F078         	movff	?___flneg+1,roundf@x+1
 12404  002AD4  C003  F079         	movff	?___flneg+2,roundf@x+2
 12405  002AD8  C004  F07A         	movff	?___flneg+3,roundf@x+3
 12406  002ADC                     l5104:
 12407  002ADC  FFFF               	dw	65535	; assembler added errata NOP
 12408  002ADE  0100               	movlb	0	; () banked
 12409  002AE0  BFBD               	btfsc	(roundf@e+1)& (0+255),7,b
 12410  002AE2  EF7F  F015         	goto	u6360
 12411  002AE6  51BD               	movf	(roundf@e+1)& (0+255),w,b
 12412  002AE8  E107               	bnz	u6361
 12413  002AEA  0E7E               	movlw	126
 12414  002AEC  5DBC               	subwf	roundf@e& (0+255),w,b
 12415  002AEE  B0D8               	btfsc	status,0,c
 12416  002AF0  EF7C  F015         	goto	u6361
 12417  002AF4  EF7F  F015         	goto	u6360
 12418  002AF8                     u6361:
 12419  002AF8  FFFF               	dw	65535	; assembler added errata NOP
 12420  002AFA  EF9C  F015         	goto	l5110
 12421  002AFE                     u6360:
 12422  002AFE  FFFF               	dw	65535	; assembler added errata NOP
 12423  002B00                     
 12424                           ; BSR set to: 0
 12425  002B00  C0C2  F02D         	movff	roundf@u,___flmul@b
 12426  002B04  C0C3  F02E         	movff	roundf@u+1,___flmul@b+1
 12427  002B08  C0C4  F02F         	movff	roundf@u+2,___flmul@b+2
 12428  002B0C  C0C5  F030         	movff	roundf@u+3,___flmul@b+3
 12429  002B10  0E00               	movlw	0
 12430  002B12  6E31               	movwf	___flmul@a^0,c
 12431  002B14  0E00               	movlw	0
 12432  002B16  6E32               	movwf	(___flmul@a+1)^0,c
 12433  002B18  0E00               	movlw	0
 12434  002B1A  6E33               	movwf	(___flmul@a+2)^0,c
 12435  002B1C  0E00               	movlw	0
 12436  002B1E  6E34               	movwf	(___flmul@a+3)^0,c
 12437  002B20  EC8A  F010         	call	___flmul	;wreg free
 12438  002B24  C02D  F077         	movff	?___flmul,?_roundf
 12439  002B28  C02E  F078         	movff	?___flmul+1,?_roundf+1
 12440  002B2C  C02F  F079         	movff	?___flmul+2,?_roundf+2
 12441  002B30  C030  F07A         	movff	?___flmul+3,?_roundf+3
 12442  002B34  EFE7  F016         	goto	l1074
 12443  002B38                     l5110:
 12444  002B38  FFFF               	dw	65535	; assembler added errata NOP
 12445                           
 12446                           ; BSR set to: 0
 12447  002B3A  0E00               	movlw	0
 12448  002B3C  6E63               	movwf	___fladd@a^0,c
 12449  002B3E  0E00               	movlw	0
 12450  002B40  6E64               	movwf	(___fladd@a+1)^0,c
 12451  002B42  0E00               	movlw	0
 12452  002B44  6E65               	movwf	(___fladd@a+2)^0,c
 12453  002B46  0E4B               	movlw	75
 12454  002B48  6E66               	movwf	(___fladd@a+3)^0,c
 12455  002B4A  C077  F05F         	movff	roundf@x,___fladd@b
 12456  002B4E  C078  F060         	movff	roundf@x+1,___fladd@b+1
 12457  002B52  C079  F061         	movff	roundf@x+2,___fladd@b+2
 12458  002B56  C07A  F062         	movff	roundf@x+3,___fladd@b+3
 12459  002B5A  ECB6  F00D         	call	___fladd	;wreg free
 12460  002B5E  C05F  F0BE         	movff	?___fladd,_roundf$2137
 12461  002B62  C060  F0BF         	movff	?___fladd+1,_roundf$2137+1
 12462  002B66  C061  F0C0         	movff	?___fladd+2,_roundf$2137+2
 12463  002B6A  C062  F0C1         	movff	?___fladd+3,_roundf$2137+3
 12464  002B6E  0E00               	movlw	0
 12465  002B70  6E63               	movwf	___fladd@a^0,c
 12466  002B72  0E00               	movlw	0
 12467  002B74  6E64               	movwf	(___fladd@a+1)^0,c
 12468  002B76  0E00               	movlw	0
 12469  002B78  6E65               	movwf	(___fladd@a+2)^0,c
 12470  002B7A  0ECB               	movlw	203
 12471  002B7C  6E66               	movwf	(___fladd@a+3)^0,c
 12472  002B7E  C0BE  F05F         	movff	_roundf$2137,___fladd@b
 12473  002B82  C0BF  F060         	movff	_roundf$2137+1,___fladd@b+1
 12474  002B86  C0C0  F061         	movff	_roundf$2137+2,___fladd@b+2
 12475  002B8A  C0C1  F062         	movff	_roundf$2137+3,___fladd@b+3
 12476  002B8E  ECB6  F00D         	call	___fladd	;wreg free
 12477  002B92  C05F  F0B8         	movff	?___fladd,_roundf$2138
 12478  002B96  C060  F0B9         	movff	?___fladd+1,_roundf$2138+1
 12479  002B9A  C061  F0BA         	movff	?___fladd+2,_roundf$2138+2
 12480  002B9E  C062  F0BB         	movff	?___fladd+3,_roundf$2138+3
 12481  002BA2  C0B8  F06F         	movff	_roundf$2138,___flsub@b
 12482  002BA6  C0B9  F070         	movff	_roundf$2138+1,___flsub@b+1
 12483  002BAA  C0BA  F071         	movff	_roundf$2138+2,___flsub@b+2
 12484  002BAE  C0BB  F072         	movff	_roundf$2138+3,___flsub@b+3
 12485  002BB2  C077  F073         	movff	roundf@x,___flsub@a
 12486  002BB6  C078  F074         	movff	roundf@x+1,___flsub@a+1
 12487  002BBA  C079  F075         	movff	roundf@x+2,___flsub@a+2
 12488  002BBE  C07A  F076         	movff	roundf@x+3,___flsub@a+3
 12489  002BC2  EC52  F034         	call	___flsub	;wreg free
 12490  002BC6  C06F  F0C6         	movff	?___flsub,roundf@y
 12491  002BCA  C070  F0C7         	movff	?___flsub+1,roundf@y+1
 12492  002BCE  C071  F0C8         	movff	?___flsub+2,roundf@y+2
 12493  002BD2  C072  F0C9         	movff	?___flsub+3,roundf@y+3
 12494  002BD6  0E00               	movlw	0
 12495  002BD8  6E01               	movwf	___flge@ff1^0,c
 12496  002BDA  0E00               	movlw	0
 12497  002BDC  6E02               	movwf	(___flge@ff1+1)^0,c
 12498  002BDE  0E00               	movlw	0
 12499  002BE0  6E03               	movwf	(___flge@ff1+2)^0,c
 12500  002BE2  0E3F               	movlw	63
 12501  002BE4  6E04               	movwf	(___flge@ff1+3)^0,c
 12502  002BE6  C0C6  F005         	movff	roundf@y,___flge@ff2
 12503  002BEA  C0C7  F006         	movff	roundf@y+1,___flge@ff2+1
 12504  002BEE  C0C8  F007         	movff	roundf@y+2,___flge@ff2+2
 12505  002BF2  C0C9  F008         	movff	roundf@y+3,___flge@ff2+3
 12506  002BF6  ECC5  F03C         	call	___flge	;wreg free
 12507  002BFA  B0D8               	btfsc	status,0,c
 12508  002BFC  EF02  F016         	goto	u6371
 12509  002C00  EF05  F016         	goto	u6370
 12510  002C04                     u6371:
 12511  002C04  FFFF               	dw	65535	; assembler added errata NOP
 12512  002C06  EF3C  F016         	goto	l5114
 12513  002C0A                     u6370:
 12514  002C0A  FFFF               	dw	65535	; assembler added errata NOP
 12515  002C0C  C077  F063         	movff	roundf@x,___fladd@a
 12516  002C10  C078  F064         	movff	roundf@x+1,___fladd@a+1
 12517  002C14  C079  F065         	movff	roundf@x+2,___fladd@a+2
 12518  002C18  C07A  F066         	movff	roundf@x+3,___fladd@a+3
 12519  002C1C  C0C6  F05F         	movff	roundf@y,___fladd@b
 12520  002C20  C0C7  F060         	movff	roundf@y+1,___fladd@b+1
 12521  002C24  C0C8  F061         	movff	roundf@y+2,___fladd@b+2
 12522  002C28  C0C9  F062         	movff	roundf@y+3,___fladd@b+3
 12523  002C2C  ECB6  F00D         	call	___fladd	;wreg free
 12524  002C30  C05F  F0BE         	movff	?___fladd,_roundf$2137
 12525  002C34  C060  F0BF         	movff	?___fladd+1,_roundf$2137+1
 12526  002C38  C061  F0C0         	movff	?___fladd+2,_roundf$2137+2
 12527  002C3C  C062  F0C1         	movff	?___fladd+3,_roundf$2137+3
 12528  002C40  C0BE  F05F         	movff	_roundf$2137,___fladd@b
 12529  002C44  C0BF  F060         	movff	_roundf$2137+1,___fladd@b+1
 12530  002C48  C0C0  F061         	movff	_roundf$2137+2,___fladd@b+2
 12531  002C4C  C0C1  F062         	movff	_roundf$2137+3,___fladd@b+3
 12532  002C50  0E00               	movlw	0
 12533  002C52  6E63               	movwf	___fladd@a^0,c
 12534  002C54  0E00               	movlw	0
 12535  002C56  6E64               	movwf	(___fladd@a+1)^0,c
 12536  002C58  0E80               	movlw	128
 12537  002C5A  6E65               	movwf	(___fladd@a+2)^0,c
 12538  002C5C  0EBF               	movlw	191
 12539  002C5E  6E66               	movwf	(___fladd@a+3)^0,c
 12540  002C60  ECB6  F00D         	call	___fladd	;wreg free
 12541  002C64  C05F  F0C6         	movff	?___fladd,roundf@y
 12542  002C68  C060  F0C7         	movff	?___fladd+1,roundf@y+1
 12543  002C6C  C061  F0C8         	movff	?___fladd+2,roundf@y+2
 12544  002C70  C062  F0C9         	movff	?___fladd+3,roundf@y+3
 12545  002C74  EFA9  F016         	goto	l5120
 12546  002C78                     l5114:
 12547  002C78  FFFF               	dw	65535	; assembler added errata NOP
 12548  002C7A  0E00               	movlw	0
 12549  002C7C  6E01               	movwf	___flge@ff1^0,c
 12550  002C7E  0E00               	movlw	0
 12551  002C80  6E02               	movwf	(___flge@ff1+1)^0,c
 12552  002C82  0E00               	movlw	0
 12553  002C84  6E03               	movwf	(___flge@ff1+2)^0,c
 12554  002C86  0EBF               	movlw	191
 12555  002C88  6E04               	movwf	(___flge@ff1+3)^0,c
 12556  002C8A  C0C6  F005         	movff	roundf@y,___flge@ff2
 12557  002C8E  C0C7  F006         	movff	roundf@y+1,___flge@ff2+1
 12558  002C92  C0C8  F007         	movff	roundf@y+2,___flge@ff2+2
 12559  002C96  C0C9  F008         	movff	roundf@y+3,___flge@ff2+3
 12560  002C9A  ECC5  F03C         	call	___flge	;wreg free
 12561  002C9E  A0D8               	btfss	status,0,c
 12562  002CA0  EF54  F016         	goto	u6381
 12563  002CA4  EF57  F016         	goto	u6380
 12564  002CA8                     u6381:
 12565  002CA8  FFFF               	dw	65535	; assembler added errata NOP
 12566  002CAA  EF8E  F016         	goto	l5118
 12567  002CAE                     u6380:
 12568  002CAE  FFFF               	dw	65535	; assembler added errata NOP
 12569  002CB0  C077  F063         	movff	roundf@x,___fladd@a
 12570  002CB4  C078  F064         	movff	roundf@x+1,___fladd@a+1
 12571  002CB8  C079  F065         	movff	roundf@x+2,___fladd@a+2
 12572  002CBC  C07A  F066         	movff	roundf@x+3,___fladd@a+3
 12573  002CC0  C0C6  F05F         	movff	roundf@y,___fladd@b
 12574  002CC4  C0C7  F060         	movff	roundf@y+1,___fladd@b+1
 12575  002CC8  C0C8  F061         	movff	roundf@y+2,___fladd@b+2
 12576  002CCC  C0C9  F062         	movff	roundf@y+3,___fladd@b+3
 12577  002CD0  ECB6  F00D         	call	___fladd	;wreg free
 12578  002CD4  C05F  F0BE         	movff	?___fladd,_roundf$2137
 12579  002CD8  C060  F0BF         	movff	?___fladd+1,_roundf$2137+1
 12580  002CDC  C061  F0C0         	movff	?___fladd+2,_roundf$2137+2
 12581  002CE0  C062  F0C1         	movff	?___fladd+3,_roundf$2137+3
 12582  002CE4  C0BE  F05F         	movff	_roundf$2137,___fladd@b
 12583  002CE8  C0BF  F060         	movff	_roundf$2137+1,___fladd@b+1
 12584  002CEC  C0C0  F061         	movff	_roundf$2137+2,___fladd@b+2
 12585  002CF0  C0C1  F062         	movff	_roundf$2137+3,___fladd@b+3
 12586  002CF4  0E00               	movlw	0
 12587  002CF6  6E63               	movwf	___fladd@a^0,c
 12588  002CF8  0E00               	movlw	0
 12589  002CFA  6E64               	movwf	(___fladd@a+1)^0,c
 12590  002CFC  0E80               	movlw	128
 12591  002CFE  6E65               	movwf	(___fladd@a+2)^0,c
 12592  002D00  0E3F               	movlw	63
 12593  002D02  6E66               	movwf	(___fladd@a+3)^0,c
 12594  002D04  ECB6  F00D         	call	___fladd	;wreg free
 12595  002D08  C05F  F0C6         	movff	?___fladd,roundf@y
 12596  002D0C  C060  F0C7         	movff	?___fladd+1,roundf@y+1
 12597  002D10  C061  F0C8         	movff	?___fladd+2,roundf@y+2
 12598  002D14  C062  F0C9         	movff	?___fladd+3,roundf@y+3
 12599  002D18  EFA9  F016         	goto	l5120
 12600  002D1C                     l5118:
 12601  002D1C  FFFF               	dw	65535	; assembler added errata NOP
 12602  002D1E  C0C6  F05F         	movff	roundf@y,___fladd@b
 12603  002D22  C0C7  F060         	movff	roundf@y+1,___fladd@b+1
 12604  002D26  C0C8  F061         	movff	roundf@y+2,___fladd@b+2
 12605  002D2A  C0C9  F062         	movff	roundf@y+3,___fladd@b+3
 12606  002D2E  C077  F063         	movff	roundf@x,___fladd@a
 12607  002D32  C078  F064         	movff	roundf@x+1,___fladd@a+1
 12608  002D36  C079  F065         	movff	roundf@x+2,___fladd@a+2
 12609  002D3A  C07A  F066         	movff	roundf@x+3,___fladd@a+3
 12610  002D3E  ECB6  F00D         	call	___fladd	;wreg free
 12611  002D42  C05F  F0C6         	movff	?___fladd,roundf@y
 12612  002D46  C060  F0C7         	movff	?___fladd+1,roundf@y+1
 12613  002D4A  C061  F0C8         	movff	?___fladd+2,roundf@y+2
 12614  002D4E  C062  F0C9         	movff	?___fladd+3,roundf@y+3
 12615  002D52                     l5120:
 12616  002D52  FFFF               	dw	65535	; assembler added errata NOP
 12617  002D54  C0C2  F07B         	movff	roundf@u,??_roundf
 12618  002D58  C0C3  F07C         	movff	roundf@u+1,??_roundf+1
 12619  002D5C  C0C4  F07D         	movff	roundf@u+2,??_roundf+2
 12620  002D60  C0C5  F07E         	movff	roundf@u+3,??_roundf+3
 12621  002D64  0E20               	movlw	32
 12622  002D66  EFBB  F016         	goto	u6390
 12623  002D6A                     u6395:
 12624  002D6A  FFFF               	dw	65535	; assembler added errata NOP
 12625  002D6C  90D8               	bcf	status,0,c
 12626  002D6E  327E               	rrcf	(??_roundf+3)^0,f,c
 12627  002D70  327D               	rrcf	(??_roundf+2)^0,f,c
 12628  002D72  327C               	rrcf	(??_roundf+1)^0,f,c
 12629  002D74  327B               	rrcf	??_roundf^0,f,c
 12630  002D76                     u6390:
 12631  002D76  FFFF               	dw	65535	; assembler added errata NOP
 12632  002D78  2EE8               	decfsz	wreg,f,c
 12633  002D7A  EFB5  F016         	goto	u6395
 12634  002D7E  507B               	movf	??_roundf^0,w,c
 12635  002D80  107C               	iorwf	(??_roundf+1)^0,w,c
 12636  002D82  107D               	iorwf	(??_roundf+2)^0,w,c
 12637  002D84  107E               	iorwf	(??_roundf+3)^0,w,c
 12638  002D86  B4D8               	btfsc	status,2,c
 12639  002D88  EFC8  F016         	goto	u6401
 12640  002D8C  EFCB  F016         	goto	u6400
 12641  002D90                     u6401:
 12642  002D90  FFFF               	dw	65535	; assembler added errata NOP
 12643  002D92  EFDE  F016         	goto	l5124
 12644  002D96                     u6400:
 12645  002D96  FFFF               	dw	65535	; assembler added errata NOP
 12646  002D98  C0C6  F001         	movff	roundf@y,___flneg@f1
 12647  002D9C  C0C7  F002         	movff	roundf@y+1,___flneg@f1+1
 12648  002DA0  C0C8  F003         	movff	roundf@y+2,___flneg@f1+2
 12649  002DA4  C0C9  F004         	movff	roundf@y+3,___flneg@f1+3
 12650  002DA8  EC8A  F033         	call	___flneg	;wreg free
 12651  002DAC  C001  F0C6         	movff	?___flneg,roundf@y
 12652  002DB0  C002  F0C7         	movff	?___flneg+1,roundf@y+1
 12653  002DB4  C003  F0C8         	movff	?___flneg+2,roundf@y+2
 12654  002DB8  C004  F0C9         	movff	?___flneg+3,roundf@y+3
 12655  002DBC                     l5124:
 12656  002DBC  FFFF               	dw	65535	; assembler added errata NOP
 12657  002DBE  C0C6  F077         	movff	roundf@y,?_roundf
 12658  002DC2  C0C7  F078         	movff	roundf@y+1,?_roundf+1
 12659  002DC6  C0C8  F079         	movff	roundf@y+2,?_roundf+2
 12660  002DCA  C0C9  F07A         	movff	roundf@y+3,?_roundf+3
 12661  002DCE                     l1074:
 12662  002DCE  FFFF               	dw	65535	; assembler added errata NOP
 12663  002DD0  0012               	return		;funcret
 12664  002DD2  FFFF               	dw	65535	; errata NOP
 12665  002DD4                     __end_of_roundf:
 12666                           	callstack 0
 12667                           
 12668 ;; *************** function ___flsub *****************
 12669 ;; Defined at:
 12670 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
 12671 ;; Parameters:    Size  Location     Type
 12672 ;;  b               4  110[COMRAM] float 
 12673 ;;  a               4  114[COMRAM] float 
 12674 ;; Auto vars:     Size  Location     Type
 12675 ;;		None
 12676 ;; Return value:  Size  Location     Type
 12677 ;;                  4  110[COMRAM] float 
 12678 ;; Registers used:
 12679 ;;		wreg, status,2, status,0, cstack
 12680 ;; Tracked objects:
 12681 ;;		On entry : 0/0
 12682 ;;		On exit  : 0/0
 12683 ;;		Unchanged: 0/0
 12684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12685 ;;      Params:         8       0       0       0       0       0       0
 12686 ;;      Locals:         0       0       0       0       0       0       0
 12687 ;;      Temps:          0       0       0       0       0       0       0
 12688 ;;      Totals:         8       0       0       0       0       0       0
 12689 ;;Total ram usage:        8 bytes
 12690 ;; Hardware stack levels used:    1
 12691 ;; Hardware stack levels required when called:    2
 12692 ;; This function calls:
 12693 ;;		___fladd
 12694 ;; This function is called by:
 12695 ;;		_roundf
 12696 ;; This function uses a non-reentrant model
 12697 ;;
 12698                           
 12699                           	psect	text51
 12700  0068A4                     __ptext51:
 12701                           	callstack 0
 12702  0068A4                     ___flsub:
 12703                           	callstack 0
 12704  0068A4  FFFF               	dw	65535	; assembler added errata NOP
 12705  0068A6  0E00               	movlw	0
 12706  0068A8  1A73               	xorwf	___flsub@a^0,f,c
 12707  0068AA  0E00               	movlw	0
 12708  0068AC  1A74               	xorwf	(___flsub@a+1)^0,f,c
 12709  0068AE  0E00               	movlw	0
 12710  0068B0  1A75               	xorwf	(___flsub@a+2)^0,f,c
 12711  0068B2  0E80               	movlw	128
 12712  0068B4  1A76               	xorwf	(___flsub@a+3)^0,f,c
 12713  0068B6  C06F  F05F         	movff	___flsub@b,___fladd@b
 12714  0068BA  C070  F060         	movff	___flsub@b+1,___fladd@b+1
 12715  0068BE  C071  F061         	movff	___flsub@b+2,___fladd@b+2
 12716  0068C2  C072  F062         	movff	___flsub@b+3,___fladd@b+3
 12717  0068C6  C073  F063         	movff	___flsub@a,___fladd@a
 12718  0068CA  C074  F064         	movff	___flsub@a+1,___fladd@a+1
 12719  0068CE  C075  F065         	movff	___flsub@a+2,___fladd@a+2
 12720  0068D2  C076  F066         	movff	___flsub@a+3,___fladd@a+3
 12721  0068D6  ECB6  F00D         	call	___fladd	;wreg free
 12722  0068DA  C05F  F06F         	movff	?___fladd,?___flsub
 12723  0068DE  C060  F070         	movff	?___fladd+1,?___flsub+1
 12724  0068E2  C061  F071         	movff	?___fladd+2,?___flsub+2
 12725  0068E6  C062  F072         	movff	?___fladd+3,?___flsub+3
 12726  0068EA  0012               	return		;funcret
 12727  0068EC  FFFF               	dw	65535	; errata NOP
 12728  0068EE                     __end_of___flsub:
 12729                           	callstack 0
 12730                           
 12731 ;; *************** function ___fladd *****************
 12732 ;; Defined at:
 12733 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
 12734 ;; Parameters:    Size  Location     Type
 12735 ;;  b               4   94[COMRAM] float 
 12736 ;;  a               4   98[COMRAM] float 
 12737 ;; Auto vars:     Size  Location     Type
 12738 ;;  grs             1  109[COMRAM] unsigned char 
 12739 ;;  bexp            1  108[COMRAM] unsigned char 
 12740 ;;  aexp            1  107[COMRAM] unsigned char 
 12741 ;;  signs           1  106[COMRAM] unsigned char 
 12742 ;; Return value:  Size  Location     Type
 12743 ;;                  4   94[COMRAM] unsigned char 
 12744 ;; Registers used:
 12745 ;;		wreg, status,2, status,0
 12746 ;; Tracked objects:
 12747 ;;		On entry : 0/0
 12748 ;;		On exit  : 0/0
 12749 ;;		Unchanged: 0/0
 12750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12751 ;;      Params:         8       0       0       0       0       0       0
 12752 ;;      Locals:         4       0       0       0       0       0       0
 12753 ;;      Temps:          4       0       0       0       0       0       0
 12754 ;;      Totals:        16       0       0       0       0       0       0
 12755 ;;Total ram usage:       16 bytes
 12756 ;; Hardware stack levels used:    1
 12757 ;; Hardware stack levels required when called:    1
 12758 ;; This function calls:
 12759 ;;		Nothing
 12760 ;; This function is called by:
 12761 ;;		_init_timer_2
 12762 ;;		___flsub
 12763 ;;		_roundf
 12764 ;; This function uses a non-reentrant model
 12765 ;;
 12766                           
 12767                           	psect	text52
 12768  001B6C                     __ptext52:
 12769                           	callstack 0
 12770  001B6C                     ___fladd:
 12771                           	callstack 0
 12772  001B6C  FFFF               	dw	65535	; assembler added errata NOP
 12773  001B6E  5062               	movf	(___fladd@b+3)^0,w,c
 12774  001B70  0B80               	andlw	128
 12775  001B72  6E6B               	movwf	___fladd@signs^0,c
 12776  001B74  5062               	movf	(___fladd@b+3)^0,w,c
 12777  001B76  2462               	addwf	(___fladd@b+3)^0,w,c
 12778  001B78  6E6D               	movwf	___fladd@bexp^0,c
 12779  001B7A  AE61               	btfss	(___fladd@b+2)^0,7,c
 12780  001B7C  EFC2  F00D         	goto	u4781
 12781  001B80  EFC5  F00D         	goto	u4780
 12782  001B84                     u4781:
 12783  001B84  FFFF               	dw	65535	; assembler added errata NOP
 12784  001B86  EFC7  F00D         	goto	l4162
 12785  001B8A                     u4780:
 12786  001B8A  FFFF               	dw	65535	; assembler added errata NOP
 12787  001B8C  806D               	bsf	___fladd@bexp^0,0,c
 12788  001B8E                     l4162:
 12789  001B8E  FFFF               	dw	65535	; assembler added errata NOP
 12790  001B90  506D               	movf	___fladd@bexp^0,w,c
 12791  001B92  B4D8               	btfsc	status,2,c
 12792  001B94  EFCE  F00D         	goto	u4791
 12793  001B98  EFD1  F00D         	goto	u4790
 12794  001B9C                     u4791:
 12795  001B9C  FFFF               	dw	65535	; assembler added errata NOP
 12796  001B9E  EFEA  F00D         	goto	l4172
 12797  001BA2                     u4790:
 12798  001BA2  FFFF               	dw	65535	; assembler added errata NOP
 12799  001BA4  286D               	incf	___fladd@bexp^0,w,c
 12800  001BA6  A4D8               	btfss	status,2,c
 12801  001BA8  EFD8  F00D         	goto	u4801
 12802  001BAC  EFDB  F00D         	goto	u4800
 12803  001BB0                     u4801:
 12804  001BB0  FFFF               	dw	65535	; assembler added errata NOP
 12805  001BB2  EFE4  F00D         	goto	l4168
 12806  001BB6                     u4800:
 12807  001BB6  FFFF               	dw	65535	; assembler added errata NOP
 12808  001BB8  0E00               	movlw	0
 12809  001BBA  6E5F               	movwf	___fladd@b^0,c
 12810  001BBC  0E00               	movlw	0
 12811  001BBE  6E60               	movwf	(___fladd@b+1)^0,c
 12812  001BC0  0E00               	movlw	0
 12813  001BC2  6E61               	movwf	(___fladd@b+2)^0,c
 12814  001BC4  0E00               	movlw	0
 12815  001BC6  6E62               	movwf	(___fladd@b+3)^0,c
 12816  001BC8                     l4168:
 12817  001BC8  FFFF               	dw	65535	; assembler added errata NOP
 12818  001BCA  8E61               	bsf	(___fladd@b+2)^0,7,c
 12819  001BCC  0E00               	movlw	0
 12820  001BCE  6E62               	movwf	(___fladd@b+3)^0,c
 12821  001BD0  EFF3  F00D         	goto	l4174
 12822  001BD4                     l4172:
 12823  001BD4  FFFF               	dw	65535	; assembler added errata NOP
 12824  001BD6  0E00               	movlw	0
 12825  001BD8  6E5F               	movwf	___fladd@b^0,c
 12826  001BDA  0E00               	movlw	0
 12827  001BDC  6E60               	movwf	(___fladd@b+1)^0,c
 12828  001BDE  0E00               	movlw	0
 12829  001BE0  6E61               	movwf	(___fladd@b+2)^0,c
 12830  001BE2  0E00               	movlw	0
 12831  001BE4  6E62               	movwf	(___fladd@b+3)^0,c
 12832  001BE6                     l4174:
 12833  001BE6  FFFF               	dw	65535	; assembler added errata NOP
 12834  001BE8  5066               	movf	(___fladd@a+3)^0,w,c
 12835  001BEA  0B80               	andlw	128
 12836  001BEC  6E6C               	movwf	___fladd@aexp^0,c
 12837  001BEE  506B               	movf	___fladd@signs^0,w,c
 12838  001BF0  186C               	xorwf	___fladd@aexp^0,w,c
 12839  001BF2  B4D8               	btfsc	status,2,c
 12840  001BF4  EFFE  F00D         	goto	u4811
 12841  001BF8  EF01  F00E         	goto	u4810
 12842  001BFC                     u4811:
 12843  001BFC  FFFF               	dw	65535	; assembler added errata NOP
 12844  001BFE  EF03  F00E         	goto	l4180
 12845  001C02                     u4810:
 12846  001C02  FFFF               	dw	65535	; assembler added errata NOP
 12847  001C04  8C6B               	bsf	___fladd@signs^0,6,c
 12848  001C06                     l4180:
 12849  001C06  FFFF               	dw	65535	; assembler added errata NOP
 12850  001C08  5066               	movf	(___fladd@a+3)^0,w,c
 12851  001C0A  2466               	addwf	(___fladd@a+3)^0,w,c
 12852  001C0C  6E6C               	movwf	___fladd@aexp^0,c
 12853  001C0E  AE65               	btfss	(___fladd@a+2)^0,7,c
 12854  001C10  EF0C  F00E         	goto	u4821
 12855  001C14  EF0F  F00E         	goto	u4820
 12856  001C18                     u4821:
 12857  001C18  FFFF               	dw	65535	; assembler added errata NOP
 12858  001C1A  EF11  F00E         	goto	l4186
 12859  001C1E                     u4820:
 12860  001C1E  FFFF               	dw	65535	; assembler added errata NOP
 12861  001C20  806C               	bsf	___fladd@aexp^0,0,c
 12862  001C22                     l4186:
 12863  001C22  FFFF               	dw	65535	; assembler added errata NOP
 12864  001C24  506C               	movf	___fladd@aexp^0,w,c
 12865  001C26  B4D8               	btfsc	status,2,c
 12866  001C28  EF18  F00E         	goto	u4831
 12867  001C2C  EF1B  F00E         	goto	u4830
 12868  001C30                     u4831:
 12869  001C30  FFFF               	dw	65535	; assembler added errata NOP
 12870  001C32  EF34  F00E         	goto	l4196
 12871  001C36                     u4830:
 12872  001C36  FFFF               	dw	65535	; assembler added errata NOP
 12873  001C38  286C               	incf	___fladd@aexp^0,w,c
 12874  001C3A  A4D8               	btfss	status,2,c
 12875  001C3C  EF22  F00E         	goto	u4841
 12876  001C40  EF25  F00E         	goto	u4840
 12877  001C44                     u4841:
 12878  001C44  FFFF               	dw	65535	; assembler added errata NOP
 12879  001C46  EF2E  F00E         	goto	l4192
 12880  001C4A                     u4840:
 12881  001C4A  FFFF               	dw	65535	; assembler added errata NOP
 12882  001C4C  0E00               	movlw	0
 12883  001C4E  6E63               	movwf	___fladd@a^0,c
 12884  001C50  0E00               	movlw	0
 12885  001C52  6E64               	movwf	(___fladd@a+1)^0,c
 12886  001C54  0E00               	movlw	0
 12887  001C56  6E65               	movwf	(___fladd@a+2)^0,c
 12888  001C58  0E00               	movlw	0
 12889  001C5A  6E66               	movwf	(___fladd@a+3)^0,c
 12890  001C5C                     l4192:
 12891  001C5C  FFFF               	dw	65535	; assembler added errata NOP
 12892  001C5E  8E65               	bsf	(___fladd@a+2)^0,7,c
 12893  001C60  0E00               	movlw	0
 12894  001C62  6E66               	movwf	(___fladd@a+3)^0,c
 12895  001C64  EF3D  F00E         	goto	l4198
 12896  001C68                     l4196:
 12897  001C68  FFFF               	dw	65535	; assembler added errata NOP
 12898  001C6A  0E00               	movlw	0
 12899  001C6C  6E63               	movwf	___fladd@a^0,c
 12900  001C6E  0E00               	movlw	0
 12901  001C70  6E64               	movwf	(___fladd@a+1)^0,c
 12902  001C72  0E00               	movlw	0
 12903  001C74  6E65               	movwf	(___fladd@a+2)^0,c
 12904  001C76  0E00               	movlw	0
 12905  001C78  6E66               	movwf	(___fladd@a+3)^0,c
 12906  001C7A                     l4198:
 12907  001C7A  FFFF               	dw	65535	; assembler added errata NOP
 12908  001C7C  506D               	movf	___fladd@bexp^0,w,c
 12909  001C7E  5C6C               	subwf	___fladd@aexp^0,w,c
 12910  001C80  B0D8               	btfsc	status,0,c
 12911  001C82  EF45  F00E         	goto	u4851
 12912  001C86  EF48  F00E         	goto	u4850
 12913  001C8A                     u4851:
 12914  001C8A  FFFF               	dw	65535	; assembler added errata NOP
 12915  001C8C  EF73  F00E         	goto	l4234
 12916  001C90                     u4850:
 12917  001C90  FFFF               	dw	65535	; assembler added errata NOP
 12918  001C92  AC6B               	btfss	___fladd@signs^0,6,c
 12919  001C94  EF4E  F00E         	goto	u4861
 12920  001C98  EF51  F00E         	goto	u4860
 12921  001C9C                     u4861:
 12922  001C9C  FFFF               	dw	65535	; assembler added errata NOP
 12923  001C9E  EF54  F00E         	goto	l4204
 12924  001CA2                     u4860:
 12925  001CA2  FFFF               	dw	65535	; assembler added errata NOP
 12926  001CA4  0E80               	movlw	128
 12927  001CA6  1A6B               	xorwf	___fladd@signs^0,f,c
 12928  001CA8                     l4204:
 12929  001CA8  FFFF               	dw	65535	; assembler added errata NOP
 12930  001CAA  C06D  F06E         	movff	___fladd@bexp,___fladd@grs
 12931  001CAE  C06C  F06D         	movff	___fladd@aexp,___fladd@bexp
 12932  001CB2  C06E  F06C         	movff	___fladd@grs,___fladd@aexp
 12933  001CB6  C05F  F06E         	movff	___fladd@b,___fladd@grs
 12934  001CBA  C063  F05F         	movff	___fladd@a,___fladd@b
 12935  001CBE  C06E  F063         	movff	___fladd@grs,___fladd@a
 12936  001CC2  C060  F06E         	movff	___fladd@b+1,___fladd@grs
 12937  001CC6  C064  F060         	movff	___fladd@a+1,___fladd@b+1
 12938  001CCA  C06E  F064         	movff	___fladd@grs,___fladd@a+1
 12939  001CCE  C061  F06E         	movff	___fladd@b+2,___fladd@grs
 12940  001CD2  C065  F061         	movff	___fladd@a+2,___fladd@b+2
 12941  001CD6  C06E  F065         	movff	___fladd@grs,___fladd@a+2
 12942  001CDA  C062  F06E         	movff	___fladd@b+3,___fladd@grs
 12943  001CDE  C066  F062         	movff	___fladd@a+3,___fladd@b+3
 12944  001CE2  C06E  F066         	movff	___fladd@grs,___fladd@a+3
 12945  001CE6                     l4234:
 12946  001CE6  FFFF               	dw	65535	; assembler added errata NOP
 12947  001CE8  0E00               	movlw	0
 12948  001CEA  6E6E               	movwf	___fladd@grs^0,c
 12949  001CEC  506D               	movf	___fladd@bexp^0,w,c
 12950  001CEE  C06C  F067         	movff	___fladd@aexp,??___fladd
 12951  001CF2  6A68               	clrf	(??___fladd+1)^0,c
 12952  001CF4  5E67               	subwf	??___fladd^0,f,c
 12953  001CF6  0E00               	movlw	0
 12954  001CF8  5A68               	subwfb	(??___fladd+1)^0,f,c
 12955  001CFA  BE68               	btfsc	(??___fladd+1)^0,7,c
 12956  001CFC  EF89  F00E         	goto	u4871
 12957  001D00  5068               	movf	(??___fladd+1)^0,w,c
 12958  001D02  E10A               	bnz	u4870
 12959  001D04  0E1A               	movlw	26
 12960  001D06  5C67               	subwf	??___fladd^0,w,c
 12961  001D08  A0D8               	btfss	status,0,c
 12962  001D0A  EF89  F00E         	goto	u4871
 12963  001D0E  EF8C  F00E         	goto	u4870
 12964  001D12                     u4871:
 12965  001D12  FFFF               	dw	65535	; assembler added errata NOP
 12966  001D14  EFCF  F00E         	goto	l917
 12967  001D18                     u4870:
 12968  001D18  FFFF               	dw	65535	; assembler added errata NOP
 12969  001D1A  505F               	movf	___fladd@b^0,w,c
 12970  001D1C  1060               	iorwf	(___fladd@b+1)^0,w,c
 12971  001D1E  1061               	iorwf	(___fladd@b+2)^0,w,c
 12972  001D20  1062               	iorwf	(___fladd@b+3)^0,w,c
 12973  001D22  A4D8               	btfss	status,2,c
 12974  001D24  EF96  F00E         	goto	u4881
 12975  001D28  EF9A  F00E         	goto	u4880
 12976  001D2C                     u4881:
 12977  001D2C  FFFF               	dw	65535	; assembler added errata NOP
 12978  001D2E  0E01               	movlw	1
 12979  001D30  EF9C  F00E         	goto	u4890
 12980  001D34                     u4880:
 12981  001D34  FFFF               	dw	65535	; assembler added errata NOP
 12982  001D36  0E00               	movlw	0
 12983  001D38                     u4890:
 12984  001D38  FFFF               	dw	65535	; assembler added errata NOP
 12985  001D3A  6E6E               	movwf	___fladd@grs^0,c
 12986  001D3C  0E00               	movlw	0
 12987  001D3E  6E5F               	movwf	___fladd@b^0,c
 12988  001D40  0E00               	movlw	0
 12989  001D42  6E60               	movwf	(___fladd@b+1)^0,c
 12990  001D44  0E00               	movlw	0
 12991  001D46  6E61               	movwf	(___fladd@b+2)^0,c
 12992  001D48  0E00               	movlw	0
 12993  001D4A  6E62               	movwf	(___fladd@b+3)^0,c
 12994  001D4C  C06C  F06D         	movff	___fladd@aexp,___fladd@bexp
 12995  001D50  EFDA  F00E         	goto	l916
 12996  001D54                     l918:
 12997  001D54  FFFF               	dw	65535	; assembler added errata NOP
 12998  001D56  A06E               	btfss	___fladd@grs^0,0,c
 12999  001D58  EFB0  F00E         	goto	u4901
 13000  001D5C  EFB3  F00E         	goto	u4900
 13001  001D60                     u4901:
 13002  001D60  FFFF               	dw	65535	; assembler added errata NOP
 13003  001D62  EFBA  F00E         	goto	l4246
 13004  001D66                     u4900:
 13005  001D66  FFFF               	dw	65535	; assembler added errata NOP
 13006  001D68  90D8               	bcf	status,0,c
 13007  001D6A  306E               	rrcf	___fladd@grs^0,w,c
 13008  001D6C  0901               	iorlw	1
 13009  001D6E  6E6E               	movwf	___fladd@grs^0,c
 13010  001D70  EFBD  F00E         	goto	l4248
 13011  001D74                     l4246:
 13012  001D74  FFFF               	dw	65535	; assembler added errata NOP
 13013  001D76  90D8               	bcf	status,0,c
 13014  001D78  326E               	rrcf	___fladd@grs^0,f,c
 13015  001D7A                     l4248:
 13016  001D7A  FFFF               	dw	65535	; assembler added errata NOP
 13017  001D7C  A05F               	btfss	___fladd@b^0,0,c
 13018  001D7E  EFC3  F00E         	goto	u4911
 13019  001D82  EFC6  F00E         	goto	u4910
 13020  001D86                     u4911:
 13021  001D86  FFFF               	dw	65535	; assembler added errata NOP
 13022  001D88  EFC8  F00E         	goto	l4252
 13023  001D8C                     u4910:
 13024  001D8C  FFFF               	dw	65535	; assembler added errata NOP
 13025  001D8E  8E6E               	bsf	___fladd@grs^0,7,c
 13026  001D90                     l4252:
 13027  001D90  FFFF               	dw	65535	; assembler added errata NOP
 13028  001D92  3462               	rlcf	(___fladd@b+3)^0,w,c
 13029  001D94  3262               	rrcf	(___fladd@b+3)^0,f,c
 13030  001D96  3261               	rrcf	(___fladd@b+2)^0,f,c
 13031  001D98  3260               	rrcf	(___fladd@b+1)^0,f,c
 13032  001D9A  325F               	rrcf	___fladd@b^0,f,c
 13033  001D9C  2A6D               	incf	___fladd@bexp^0,f,c
 13034  001D9E                     l917:
 13035  001D9E  FFFF               	dw	65535	; assembler added errata NOP
 13036  001DA0  506C               	movf	___fladd@aexp^0,w,c
 13037  001DA2  5C6D               	subwf	___fladd@bexp^0,w,c
 13038  001DA4  A0D8               	btfss	status,0,c
 13039  001DA6  EFD7  F00E         	goto	u4921
 13040  001DAA  EFDA  F00E         	goto	u4920
 13041  001DAE                     u4921:
 13042  001DAE  FFFF               	dw	65535	; assembler added errata NOP
 13043  001DB0  EFAA  F00E         	goto	l918
 13044  001DB4                     u4920:
 13045  001DB4                     l916:
 13046  001DB4  FFFF               	dw	65535	; assembler added errata NOP
 13047  001DB6  BC6B               	btfsc	___fladd@signs^0,6,c
 13048  001DB8  EFE0  F00E         	goto	u4931
 13049  001DBC  EFE3  F00E         	goto	u4930
 13050  001DC0                     u4931:
 13051  001DC0  FFFF               	dw	65535	; assembler added errata NOP
 13052  001DC2  EF30  F00F         	goto	l4280
 13053  001DC6                     u4930:
 13054  001DC6  FFFF               	dw	65535	; assembler added errata NOP
 13055  001DC8  506D               	movf	___fladd@bexp^0,w,c
 13056  001DCA  A4D8               	btfss	status,2,c
 13057  001DCC  EFEA  F00E         	goto	u4941
 13058  001DD0  EFED  F00E         	goto	u4940
 13059  001DD4                     u4941:
 13060  001DD4  FFFF               	dw	65535	; assembler added errata NOP
 13061  001DD6  EFF8  F00E         	goto	l4262
 13062  001DDA                     u4940:
 13063  001DDA  FFFF               	dw	65535	; assembler added errata NOP
 13064  001DDC  0E00               	movlw	0
 13065  001DDE  6E5F               	movwf	?___fladd^0,c
 13066  001DE0  0E00               	movlw	0
 13067  001DE2  6E60               	movwf	(?___fladd+1)^0,c
 13068  001DE4  0E00               	movlw	0
 13069  001DE6  6E61               	movwf	(?___fladd+2)^0,c
 13070  001DE8  0E00               	movlw	0
 13071  001DEA  6E62               	movwf	(?___fladd+3)^0,c
 13072  001DEC  EF87  F010         	goto	l925
 13073  001DF0                     l4262:
 13074  001DF0  FFFF               	dw	65535	; assembler added errata NOP
 13075  001DF2  5063               	movf	___fladd@a^0,w,c
 13076  001DF4  265F               	addwf	___fladd@b^0,f,c
 13077  001DF6  5064               	movf	(___fladd@a+1)^0,w,c
 13078  001DF8  2260               	addwfc	(___fladd@b+1)^0,f,c
 13079  001DFA  5065               	movf	(___fladd@a+2)^0,w,c
 13080  001DFC  2261               	addwfc	(___fladd@b+2)^0,f,c
 13081  001DFE  5066               	movf	(___fladd@a+3)^0,w,c
 13082  001E00  2262               	addwfc	(___fladd@b+3)^0,f,c
 13083  001E02  A062               	btfss	(___fladd@b+3)^0,0,c
 13084  001E04  EF06  F00F         	goto	u4951
 13085  001E08  EF09  F00F         	goto	u4950
 13086  001E0C                     u4951:
 13087  001E0C  FFFF               	dw	65535	; assembler added errata NOP
 13088  001E0E  EFD4  F00F         	goto	l4316
 13089  001E12                     u4950:
 13090  001E12  FFFF               	dw	65535	; assembler added errata NOP
 13091  001E14  A06E               	btfss	___fladd@grs^0,0,c
 13092  001E16  EF0F  F00F         	goto	u4961
 13093  001E1A  EF12  F00F         	goto	u4960
 13094  001E1E                     u4961:
 13095  001E1E  FFFF               	dw	65535	; assembler added errata NOP
 13096  001E20  EF19  F00F         	goto	l4270
 13097  001E24                     u4960:
 13098  001E24  FFFF               	dw	65535	; assembler added errata NOP
 13099  001E26  90D8               	bcf	status,0,c
 13100  001E28  306E               	rrcf	___fladd@grs^0,w,c
 13101  001E2A  0901               	iorlw	1
 13102  001E2C  6E6E               	movwf	___fladd@grs^0,c
 13103  001E2E  EF1C  F00F         	goto	l4272
 13104  001E32                     l4270:
 13105  001E32  FFFF               	dw	65535	; assembler added errata NOP
 13106  001E34  90D8               	bcf	status,0,c
 13107  001E36  326E               	rrcf	___fladd@grs^0,f,c
 13108  001E38                     l4272:
 13109  001E38  FFFF               	dw	65535	; assembler added errata NOP
 13110  001E3A  A05F               	btfss	___fladd@b^0,0,c
 13111  001E3C  EF22  F00F         	goto	u4971
 13112  001E40  EF25  F00F         	goto	u4970
 13113  001E44                     u4971:
 13114  001E44  FFFF               	dw	65535	; assembler added errata NOP
 13115  001E46  EF27  F00F         	goto	l4276
 13116  001E4A                     u4970:
 13117  001E4A  FFFF               	dw	65535	; assembler added errata NOP
 13118  001E4C  8E6E               	bsf	___fladd@grs^0,7,c
 13119  001E4E                     l4276:
 13120  001E4E  FFFF               	dw	65535	; assembler added errata NOP
 13121  001E50  3462               	rlcf	(___fladd@b+3)^0,w,c
 13122  001E52  3262               	rrcf	(___fladd@b+3)^0,f,c
 13123  001E54  3261               	rrcf	(___fladd@b+2)^0,f,c
 13124  001E56  3260               	rrcf	(___fladd@b+1)^0,f,c
 13125  001E58  325F               	rrcf	___fladd@b^0,f,c
 13126  001E5A  2A6D               	incf	___fladd@bexp^0,f,c
 13127  001E5C  EFD4  F00F         	goto	l4316
 13128  001E60                     l4280:
 13129  001E60  FFFF               	dw	65535	; assembler added errata NOP
 13130  001E62  5063               	movf	___fladd@a^0,w,c
 13131  001E64  5C5F               	subwf	___fladd@b^0,w,c
 13132  001E66  5064               	movf	(___fladd@a+1)^0,w,c
 13133  001E68  5860               	subwfb	(___fladd@b+1)^0,w,c
 13134  001E6A  5065               	movf	(___fladd@a+2)^0,w,c
 13135  001E6C  5861               	subwfb	(___fladd@b+2)^0,w,c
 13136  001E6E  5062               	movf	(___fladd@b+3)^0,w,c
 13137  001E70  0A80               	xorlw	128
 13138  001E72  6E67               	movwf	??___fladd^0,c
 13139  001E74  5066               	movf	(___fladd@a+3)^0,w,c
 13140  001E76  0A80               	xorlw	128
 13141  001E78  5867               	subwfb	??___fladd^0,w,c
 13142  001E7A  B0D8               	btfsc	status,0,c
 13143  001E7C  EF42  F00F         	goto	u4981
 13144  001E80  EF45  F00F         	goto	u4980
 13145  001E84                     u4981:
 13146  001E84  FFFF               	dw	65535	; assembler added errata NOP
 13147  001E86  EF73  F00F         	goto	l4290
 13148  001E8A                     u4980:
 13149  001E8A  FFFF               	dw	65535	; assembler added errata NOP
 13150  001E8C  505F               	movf	___fladd@b^0,w,c
 13151  001E8E  5C63               	subwf	___fladd@a^0,w,c
 13152  001E90  6E67               	movwf	??___fladd^0,c
 13153  001E92  5060               	movf	(___fladd@b+1)^0,w,c
 13154  001E94  5864               	subwfb	(___fladd@a+1)^0,w,c
 13155  001E96  6E68               	movwf	(??___fladd+1)^0,c
 13156  001E98  5061               	movf	(___fladd@b+2)^0,w,c
 13157  001E9A  5865               	subwfb	(___fladd@a+2)^0,w,c
 13158  001E9C  6E69               	movwf	(??___fladd+2)^0,c
 13159  001E9E  5062               	movf	(___fladd@b+3)^0,w,c
 13160  001EA0  5866               	subwfb	(___fladd@a+3)^0,w,c
 13161  001EA2  6E6A               	movwf	(??___fladd+3)^0,c
 13162  001EA4  0EFF               	movlw	255
 13163  001EA6  2467               	addwf	??___fladd^0,w,c
 13164  001EA8  6E5F               	movwf	___fladd@b^0,c
 13165  001EAA  0EFF               	movlw	255
 13166  001EAC  2068               	addwfc	(??___fladd+1)^0,w,c
 13167  001EAE  6E60               	movwf	(___fladd@b+1)^0,c
 13168  001EB0  0EFF               	movlw	255
 13169  001EB2  2069               	addwfc	(??___fladd+2)^0,w,c
 13170  001EB4  6E61               	movwf	(___fladd@b+2)^0,c
 13171  001EB6  0EFF               	movlw	255
 13172  001EB8  206A               	addwfc	(??___fladd+3)^0,w,c
 13173  001EBA  6E62               	movwf	(___fladd@b+3)^0,c
 13174  001EBC  0E80               	movlw	128
 13175  001EBE  1A6B               	xorwf	___fladd@signs^0,f,c
 13176  001EC0  6C6E               	negf	___fladd@grs^0,c
 13177  001EC2  506E               	movf	___fladd@grs^0,w,c
 13178  001EC4  A4D8               	btfss	status,2,c
 13179  001EC6  EF67  F00F         	goto	u4991
 13180  001ECA  EF6A  F00F         	goto	u4990
 13181  001ECE                     u4991:
 13182  001ECE  FFFF               	dw	65535	; assembler added errata NOP
 13183  001ED0  EF7C  F00F         	goto	l933
 13184  001ED4                     u4990:
 13185  001ED4  FFFF               	dw	65535	; assembler added errata NOP
 13186  001ED6  0E01               	movlw	1
 13187  001ED8  265F               	addwf	___fladd@b^0,f,c
 13188  001EDA  0E00               	movlw	0
 13189  001EDC  2260               	addwfc	(___fladd@b+1)^0,f,c
 13190  001EDE  2261               	addwfc	(___fladd@b+2)^0,f,c
 13191  001EE0  2262               	addwfc	(___fladd@b+3)^0,f,c
 13192  001EE2  EF7C  F00F         	goto	l933
 13193  001EE6                     l4290:
 13194  001EE6  FFFF               	dw	65535	; assembler added errata NOP
 13195  001EE8  5063               	movf	___fladd@a^0,w,c
 13196  001EEA  5E5F               	subwf	___fladd@b^0,f,c
 13197  001EEC  5064               	movf	(___fladd@a+1)^0,w,c
 13198  001EEE  5A60               	subwfb	(___fladd@b+1)^0,f,c
 13199  001EF0  5065               	movf	(___fladd@a+2)^0,w,c
 13200  001EF2  5A61               	subwfb	(___fladd@b+2)^0,f,c
 13201  001EF4  5066               	movf	(___fladd@a+3)^0,w,c
 13202  001EF6  5A62               	subwfb	(___fladd@b+3)^0,f,c
 13203  001EF8                     l933:
 13204  001EF8  FFFF               	dw	65535	; assembler added errata NOP
 13205  001EFA  505F               	movf	___fladd@b^0,w,c
 13206  001EFC  1060               	iorwf	(___fladd@b+1)^0,w,c
 13207  001EFE  1061               	iorwf	(___fladd@b+2)^0,w,c
 13208  001F00  1062               	iorwf	(___fladd@b+3)^0,w,c
 13209  001F02  A4D8               	btfss	status,2,c
 13210  001F04  EF86  F00F         	goto	u5001
 13211  001F08  EF89  F00F         	goto	u5000
 13212  001F0C                     u5001:
 13213  001F0C  FFFF               	dw	65535	; assembler added errata NOP
 13214  001F0E  EFCB  F00F         	goto	l4314
 13215  001F12                     u5000:
 13216  001F12  FFFF               	dw	65535	; assembler added errata NOP
 13217  001F14  506E               	movf	___fladd@grs^0,w,c
 13218  001F16  A4D8               	btfss	status,2,c
 13219  001F18  EF90  F00F         	goto	u5011
 13220  001F1C  EF93  F00F         	goto	u5010
 13221  001F20                     u5011:
 13222  001F20  FFFF               	dw	65535	; assembler added errata NOP
 13223  001F22  EFCB  F00F         	goto	l4314
 13224  001F26                     u5010:
 13225  001F26  FFFF               	dw	65535	; assembler added errata NOP
 13226  001F28  0E00               	movlw	0
 13227  001F2A  6E5F               	movwf	?___fladd^0,c
 13228  001F2C  0E00               	movlw	0
 13229  001F2E  6E60               	movwf	(?___fladd+1)^0,c
 13230  001F30  0E00               	movlw	0
 13231  001F32  6E61               	movwf	(?___fladd+2)^0,c
 13232  001F34  0E00               	movlw	0
 13233  001F36  6E62               	movwf	(?___fladd+3)^0,c
 13234  001F38  EF87  F010         	goto	l925
 13235  001F3C                     l4298:
 13236  001F3C  FFFF               	dw	65535	; assembler added errata NOP
 13237  001F3E  90D8               	bcf	status,0,c
 13238  001F40  365F               	rlcf	___fladd@b^0,f,c
 13239  001F42  3660               	rlcf	(___fladd@b+1)^0,f,c
 13240  001F44  3661               	rlcf	(___fladd@b+2)^0,f,c
 13241  001F46  3662               	rlcf	(___fladd@b+3)^0,f,c
 13242  001F48  AE6E               	btfss	___fladd@grs^0,7,c
 13243  001F4A  EFA9  F00F         	goto	u5021
 13244  001F4E  EFAC  F00F         	goto	u5020
 13245  001F52                     u5021:
 13246  001F52  FFFF               	dw	65535	; assembler added errata NOP
 13247  001F54  EFAE  F00F         	goto	l4304
 13248  001F58                     u5020:
 13249  001F58  FFFF               	dw	65535	; assembler added errata NOP
 13250  001F5A  805F               	bsf	___fladd@b^0,0,c
 13251  001F5C                     l4304:
 13252  001F5C  FFFF               	dw	65535	; assembler added errata NOP
 13253  001F5E  A06E               	btfss	___fladd@grs^0,0,c
 13254  001F60  EFB4  F00F         	goto	u5031
 13255  001F64  EFB7  F00F         	goto	u5030
 13256  001F68                     u5031:
 13257  001F68  FFFF               	dw	65535	; assembler added errata NOP
 13258  001F6A  EFBC  F00F         	goto	l4308
 13259  001F6E                     u5030:
 13260  001F6E  FFFF               	dw	65535	; assembler added errata NOP
 13261  001F70  80D8               	bsf	status,0,c
 13262  001F72  366E               	rlcf	___fladd@grs^0,f,c
 13263  001F74  EFBF  F00F         	goto	l4310
 13264  001F78                     l4308:
 13265  001F78  FFFF               	dw	65535	; assembler added errata NOP
 13266  001F7A  90D8               	bcf	status,0,c
 13267  001F7C  366E               	rlcf	___fladd@grs^0,f,c
 13268  001F7E                     l4310:
 13269  001F7E  FFFF               	dw	65535	; assembler added errata NOP
 13270  001F80  506D               	movf	___fladd@bexp^0,w,c
 13271  001F82  B4D8               	btfsc	status,2,c
 13272  001F84  EFC6  F00F         	goto	u5041
 13273  001F88  EFC9  F00F         	goto	u5040
 13274  001F8C                     u5041:
 13275  001F8C  FFFF               	dw	65535	; assembler added errata NOP
 13276  001F8E  EFCB  F00F         	goto	l4314
 13277  001F92                     u5040:
 13278  001F92  FFFF               	dw	65535	; assembler added errata NOP
 13279  001F94  066D               	decf	___fladd@bexp^0,f,c
 13280  001F96                     l4314:
 13281  001F96  FFFF               	dw	65535	; assembler added errata NOP
 13282  001F98  AE61               	btfss	(___fladd@b+2)^0,7,c
 13283  001F9A  EFD1  F00F         	goto	u5051
 13284  001F9E  EFD4  F00F         	goto	u5050
 13285  001FA2                     u5051:
 13286  001FA2  FFFF               	dw	65535	; assembler added errata NOP
 13287  001FA4  EF9E  F00F         	goto	l4298
 13288  001FA8                     u5050:
 13289  001FA8                     l4316:
 13290  001FA8  FFFF               	dw	65535	; assembler added errata NOP
 13291  001FAA  0E00               	movlw	0
 13292  001FAC  6E6C               	movwf	___fladd@aexp^0,c
 13293  001FAE  AE6E               	btfss	___fladd@grs^0,7,c
 13294  001FB0  EFDC  F00F         	goto	u5061
 13295  001FB4  EFDF  F00F         	goto	u5060
 13296  001FB8                     u5061:
 13297  001FB8  FFFF               	dw	65535	; assembler added errata NOP
 13298  001FBA  EFFE  F00F         	goto	l942
 13299  001FBE                     u5060:
 13300  001FBE  FFFF               	dw	65535	; assembler added errata NOP
 13301  001FC0  C06E  F067         	movff	___fladd@grs,??___fladd
 13302  001FC4  0E7F               	movlw	127
 13303  001FC6  1667               	andwf	??___fladd^0,f,c
 13304  001FC8  B4D8               	btfsc	status,2,c
 13305  001FCA  EFE9  F00F         	goto	u5071
 13306  001FCE  EFEC  F00F         	goto	u5070
 13307  001FD2                     u5071:
 13308  001FD2  FFFF               	dw	65535	; assembler added errata NOP
 13309  001FD4  EFF2  F00F         	goto	l943
 13310  001FD8                     u5070:
 13311  001FD8  FFFF               	dw	65535	; assembler added errata NOP
 13312  001FDA                     l4322:
 13313  001FDA  FFFF               	dw	65535	; assembler added errata NOP
 13314  001FDC  0E01               	movlw	1
 13315  001FDE  6E6C               	movwf	___fladd@aexp^0,c
 13316  001FE0  EFFE  F00F         	goto	l942
 13317  001FE4                     l943:
 13318  001FE4  FFFF               	dw	65535	; assembler added errata NOP
 13319  001FE6  A05F               	btfss	___fladd@b^0,0,c
 13320  001FE8  EFF8  F00F         	goto	u5081
 13321  001FEC  EFFB  F00F         	goto	u5080
 13322  001FF0                     u5081:
 13323  001FF0  FFFF               	dw	65535	; assembler added errata NOP
 13324  001FF2  EFFE  F00F         	goto	l942
 13325  001FF6                     u5080:
 13326  001FF6  FFFF               	dw	65535	; assembler added errata NOP
 13327  001FF8  EFED  F00F         	goto	l4322
 13328  001FFC                     l942:
 13329  001FFC  FFFF               	dw	65535	; assembler added errata NOP
 13330  001FFE  506C               	movf	___fladd@aexp^0,w,c
 13331  002000  B4D8               	btfsc	status,2,c
 13332  002002  EF05  F010         	goto	u5091
 13333  002006  EF08  F010         	goto	u5090
 13334  00200A                     u5091:
 13335  00200A  FFFF               	dw	65535	; assembler added errata NOP
 13336  00200C  EF38  F010         	goto	l4334
 13337  002010                     u5090:
 13338  002010  FFFF               	dw	65535	; assembler added errata NOP
 13339  002012  0E01               	movlw	1
 13340  002014  265F               	addwf	___fladd@b^0,f,c
 13341  002016  0E00               	movlw	0
 13342  002018  2260               	addwfc	(___fladd@b+1)^0,f,c
 13343  00201A  2261               	addwfc	(___fladd@b+2)^0,f,c
 13344  00201C  2262               	addwfc	(___fladd@b+3)^0,f,c
 13345  00201E  A062               	btfss	(___fladd@b+3)^0,0,c
 13346  002020  EF14  F010         	goto	u5101
 13347  002024  EF17  F010         	goto	u5100
 13348  002028                     u5101:
 13349  002028  FFFF               	dw	65535	; assembler added errata NOP
 13350  00202A  EF38  F010         	goto	l4334
 13351  00202E                     u5100:
 13352  00202E  FFFF               	dw	65535	; assembler added errata NOP
 13353  002030  C05F  F067         	movff	___fladd@b,??___fladd
 13354  002034  C060  F068         	movff	___fladd@b+1,??___fladd+1
 13355  002038  C061  F069         	movff	___fladd@b+2,??___fladd+2
 13356  00203C  C062  F06A         	movff	___fladd@b+3,??___fladd+3
 13357  002040  346A               	rlcf	(??___fladd+3)^0,w,c
 13358  002042  326A               	rrcf	(??___fladd+3)^0,f,c
 13359  002044  3269               	rrcf	(??___fladd+2)^0,f,c
 13360  002046  3268               	rrcf	(??___fladd+1)^0,f,c
 13361  002048  3267               	rrcf	??___fladd^0,f,c
 13362  00204A  C067  F05F         	movff	??___fladd,___fladd@b
 13363  00204E  C068  F060         	movff	??___fladd+1,___fladd@b+1
 13364  002052  C069  F061         	movff	??___fladd+2,___fladd@b+2
 13365  002056  C06A  F062         	movff	??___fladd+3,___fladd@b+3
 13366  00205A  286D               	incf	___fladd@bexp^0,w,c
 13367  00205C  B4D8               	btfsc	status,2,c
 13368  00205E  EF33  F010         	goto	u5111
 13369  002062  EF36  F010         	goto	u5110
 13370  002066                     u5111:
 13371  002066  FFFF               	dw	65535	; assembler added errata NOP
 13372  002068  EF38  F010         	goto	l4334
 13373  00206C                     u5110:
 13374  00206C  FFFF               	dw	65535	; assembler added errata NOP
 13375  00206E  2A6D               	incf	___fladd@bexp^0,f,c
 13376  002070                     l4334:
 13377  002070  FFFF               	dw	65535	; assembler added errata NOP
 13378  002072  286D               	incf	___fladd@bexp^0,w,c
 13379  002074  B4D8               	btfsc	status,2,c
 13380  002076  EF3F  F010         	goto	u5121
 13381  00207A  EF42  F010         	goto	u5120
 13382  00207E                     u5121:
 13383  00207E  FFFF               	dw	65535	; assembler added errata NOP
 13384  002080  EF4C  F010         	goto	l4338
 13385  002084                     u5120:
 13386  002084  FFFF               	dw	65535	; assembler added errata NOP
 13387  002086  506D               	movf	___fladd@bexp^0,w,c
 13388  002088  A4D8               	btfss	status,2,c
 13389  00208A  EF49  F010         	goto	u5131
 13390  00208E  EF4C  F010         	goto	u5130
 13391  002092                     u5131:
 13392  002092  FFFF               	dw	65535	; assembler added errata NOP
 13393  002094  EF61  F010         	goto	l4342
 13394  002098                     u5130:
 13395  002098                     l4338:
 13396  002098  FFFF               	dw	65535	; assembler added errata NOP
 13397  00209A  0E00               	movlw	0
 13398  00209C  6E5F               	movwf	___fladd@b^0,c
 13399  00209E  0E00               	movlw	0
 13400  0020A0  6E60               	movwf	(___fladd@b+1)^0,c
 13401  0020A2  0E00               	movlw	0
 13402  0020A4  6E61               	movwf	(___fladd@b+2)^0,c
 13403  0020A6  0E00               	movlw	0
 13404  0020A8  6E62               	movwf	(___fladd@b+3)^0,c
 13405  0020AA  506D               	movf	___fladd@bexp^0,w,c
 13406  0020AC  A4D8               	btfss	status,2,c
 13407  0020AE  EF5B  F010         	goto	u5141
 13408  0020B2  EF5E  F010         	goto	u5140
 13409  0020B6                     u5141:
 13410  0020B6  FFFF               	dw	65535	; assembler added errata NOP
 13411  0020B8  EF61  F010         	goto	l4342
 13412  0020BC                     u5140:
 13413  0020BC  FFFF               	dw	65535	; assembler added errata NOP
 13414  0020BE  0E00               	movlw	0
 13415  0020C0  6E6B               	movwf	___fladd@signs^0,c
 13416  0020C2                     l4342:
 13417  0020C2  FFFF               	dw	65535	; assembler added errata NOP
 13418  0020C4  A06D               	btfss	___fladd@bexp^0,0,c
 13419  0020C6  EF67  F010         	goto	u5151
 13420  0020CA  EF6A  F010         	goto	u5150
 13421  0020CE                     u5151:
 13422  0020CE  FFFF               	dw	65535	; assembler added errata NOP
 13423  0020D0  EF6E  F010         	goto	l4346
 13424  0020D4                     u5150:
 13425  0020D4  FFFF               	dw	65535	; assembler added errata NOP
 13426  0020D6  8E61               	bsf	(___fladd@b+2)^0,7,c
 13427  0020D8  EF70  F010         	goto	l4348
 13428  0020DC                     l4346:
 13429  0020DC  FFFF               	dw	65535	; assembler added errata NOP
 13430  0020DE  9E61               	bcf	(___fladd@b+2)^0,7,c
 13431  0020E0                     l4348:
 13432  0020E0  FFFF               	dw	65535	; assembler added errata NOP
 13433  0020E2  90D8               	bcf	status,0,c
 13434  0020E4  306D               	rrcf	___fladd@bexp^0,w,c
 13435  0020E6  6E62               	movwf	(___fladd@b+3)^0,c
 13436  0020E8  AE6B               	btfss	___fladd@signs^0,7,c
 13437  0020EA  EF79  F010         	goto	u5161
 13438  0020EE  EF7C  F010         	goto	u5160
 13439  0020F2                     u5161:
 13440  0020F2  FFFF               	dw	65535	; assembler added errata NOP
 13441  0020F4  EF7E  F010         	goto	l4354
 13442  0020F8                     u5160:
 13443  0020F8  FFFF               	dw	65535	; assembler added errata NOP
 13444  0020FA  8E62               	bsf	(___fladd@b+3)^0,7,c
 13445  0020FC                     l4354:
 13446  0020FC  FFFF               	dw	65535	; assembler added errata NOP
 13447  0020FE  C05F  F05F         	movff	___fladd@b,?___fladd
 13448  002102  C060  F060         	movff	___fladd@b+1,?___fladd+1
 13449  002106  C061  F061         	movff	___fladd@b+2,?___fladd+2
 13450  00210A  C062  F062         	movff	___fladd@b+3,?___fladd+3
 13451  00210E                     l925:
 13452  00210E  FFFF               	dw	65535	; assembler added errata NOP
 13453  002110  0012               	return		;funcret
 13454  002112  FFFF               	dw	65535	; errata NOP
 13455  002114                     __end_of___fladd:
 13456                           	callstack 0
 13457                           
 13458 ;; *************** function ___flneg *****************
 13459 ;; Defined at:
 13460 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
 13461 ;; Parameters:    Size  Location     Type
 13462 ;;  f1              4    0[COMRAM] unsigned char 
 13463 ;; Auto vars:     Size  Location     Type
 13464 ;;		None
 13465 ;; Return value:  Size  Location     Type
 13466 ;;                  4    0[COMRAM] unsigned char 
 13467 ;; Registers used:
 13468 ;;		wreg, status,2, status,0
 13469 ;; Tracked objects:
 13470 ;;		On entry : 0/0
 13471 ;;		On exit  : 0/0
 13472 ;;		Unchanged: 0/0
 13473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13474 ;;      Params:         4       0       0       0       0       0       0
 13475 ;;      Locals:         0       0       0       0       0       0       0
 13476 ;;      Temps:          0       0       0       0       0       0       0
 13477 ;;      Totals:         4       0       0       0       0       0       0
 13478 ;;Total ram usage:        4 bytes
 13479 ;; Hardware stack levels used:    1
 13480 ;; Hardware stack levels required when called:    1
 13481 ;; This function calls:
 13482 ;;		Nothing
 13483 ;; This function is called by:
 13484 ;;		_roundf
 13485 ;; This function uses a non-reentrant model
 13486 ;;
 13487                           
 13488                           	psect	text53
 13489  006714                     __ptext53:
 13490                           	callstack 0
 13491  006714                     ___flneg:
 13492                           	callstack 0
 13493  006714  FFFF               	dw	65535	; assembler added errata NOP
 13494  006716  5001               	movf	___flneg@f1^0,w,c
 13495  006718  1002               	iorwf	(___flneg@f1+1)^0,w,c
 13496  00671A  1003               	iorwf	(___flneg@f1+2)^0,w,c
 13497  00671C  1004               	iorwf	(___flneg@f1+3)^0,w,c
 13498  00671E  B4D8               	btfsc	status,2,c
 13499  006720  EF94  F033         	goto	u6131
 13500  006724  EF97  F033         	goto	u6130
 13501  006728                     u6131:
 13502  006728  FFFF               	dw	65535	; assembler added errata NOP
 13503  00672A  EFA0  F033         	goto	l4992
 13504  00672E                     u6130:
 13505  00672E  FFFF               	dw	65535	; assembler added errata NOP
 13506  006730  0E00               	movlw	0
 13507  006732  1A01               	xorwf	___flneg@f1^0,f,c
 13508  006734  0E00               	movlw	0
 13509  006736  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 13510  006738  0E00               	movlw	0
 13511  00673A  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 13512  00673C  0E80               	movlw	128
 13513  00673E  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 13514  006740                     l4992:
 13515  006740  FFFF               	dw	65535	; assembler added errata NOP
 13516  006742  C001  F001         	movff	___flneg@f1,?___flneg
 13517  006746  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 13518  00674A  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 13519  00674E  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 13520  006752  0012               	return		;funcret
 13521  006754  FFFF               	dw	65535	; errata NOP
 13522  006756                     __end_of___flneg:
 13523                           	callstack 0
 13524                           
 13525 ;; *************** function ___flmul *****************
 13526 ;; Defined at:
 13527 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
 13528 ;; Parameters:    Size  Location     Type
 13529 ;;  b               4   44[COMRAM] unsigned char 
 13530 ;;  a               4   48[COMRAM] unsigned char 
 13531 ;; Auto vars:     Size  Location     Type
 13532 ;;  prod            4   63[COMRAM] struct .
 13533 ;;  grs             4   57[COMRAM] unsigned long 
 13534 ;;  temp            2   67[COMRAM] struct .
 13535 ;;  bexp            1   62[COMRAM] unsigned char 
 13536 ;;  aexp            1   61[COMRAM] unsigned char 
 13537 ;;  sign            1   56[COMRAM] unsigned char 
 13538 ;; Return value:  Size  Location     Type
 13539 ;;                  4   44[COMRAM] unsigned char 
 13540 ;; Registers used:
 13541 ;;		wreg, status,2, status,0, prodl, prodh
 13542 ;; Tracked objects:
 13543 ;;		On entry : 0/0
 13544 ;;		On exit  : 0/0
 13545 ;;		Unchanged: 0/0
 13546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13547 ;;      Params:         8       0       0       0       0       0       0
 13548 ;;      Locals:        13       0       0       0       0       0       0
 13549 ;;      Temps:          4       0       0       0       0       0       0
 13550 ;;      Totals:        25       0       0       0       0       0       0
 13551 ;;Total ram usage:       25 bytes
 13552 ;; Hardware stack levels used:    1
 13553 ;; Hardware stack levels required when called:    1
 13554 ;; This function calls:
 13555 ;;		Nothing
 13556 ;; This function is called by:
 13557 ;;		_init_timer_2
 13558 ;;		_update_pwm_duty_ccp1
 13559 ;;		_get_temperature
 13560 ;;		_roundf
 13561 ;; This function uses a non-reentrant model
 13562 ;;
 13563                           
 13564                           	psect	text54
 13565  002114                     __ptext54:
 13566                           	callstack 0
 13567  002114                     ___flmul:
 13568                           	callstack 0
 13569  002114  FFFF               	dw	65535	; assembler added errata NOP
 13570  002116  5030               	movf	(___flmul@b+3)^0,w,c
 13571  002118  0B80               	andlw	128
 13572  00211A  6E39               	movwf	___flmul@sign^0,c
 13573  00211C  5030               	movf	(___flmul@b+3)^0,w,c
 13574  00211E  2430               	addwf	(___flmul@b+3)^0,w,c
 13575  002120  6E3F               	movwf	___flmul@bexp^0,c
 13576  002122  AE2F               	btfss	(___flmul@b+2)^0,7,c
 13577  002124  EF96  F010         	goto	u5891
 13578  002128  EF99  F010         	goto	u5890
 13579  00212C                     u5891:
 13580  00212C  FFFF               	dw	65535	; assembler added errata NOP
 13581  00212E  EF9B  F010         	goto	l4836
 13582  002132                     u5890:
 13583  002132  FFFF               	dw	65535	; assembler added errata NOP
 13584  002134  803F               	bsf	___flmul@bexp^0,0,c
 13585  002136                     l4836:
 13586  002136  FFFF               	dw	65535	; assembler added errata NOP
 13587  002138  503F               	movf	___flmul@bexp^0,w,c
 13588  00213A  B4D8               	btfsc	status,2,c
 13589  00213C  EFA2  F010         	goto	u5901
 13590  002140  EFA5  F010         	goto	u5900
 13591  002144                     u5901:
 13592  002144  FFFF               	dw	65535	; assembler added errata NOP
 13593  002146  EFBC  F010         	goto	l4844
 13594  00214A                     u5900:
 13595  00214A  FFFF               	dw	65535	; assembler added errata NOP
 13596  00214C  283F               	incf	___flmul@bexp^0,w,c
 13597  00214E  A4D8               	btfss	status,2,c
 13598  002150  EFAC  F010         	goto	u5911
 13599  002154  EFAF  F010         	goto	u5910
 13600  002158                     u5911:
 13601  002158  FFFF               	dw	65535	; assembler added errata NOP
 13602  00215A  EFB8  F010         	goto	l4842
 13603  00215E                     u5910:
 13604  00215E  FFFF               	dw	65535	; assembler added errata NOP
 13605  002160  0E00               	movlw	0
 13606  002162  6E2D               	movwf	___flmul@b^0,c
 13607  002164  0E00               	movlw	0
 13608  002166  6E2E               	movwf	(___flmul@b+1)^0,c
 13609  002168  0E00               	movlw	0
 13610  00216A  6E2F               	movwf	(___flmul@b+2)^0,c
 13611  00216C  0E00               	movlw	0
 13612  00216E  6E30               	movwf	(___flmul@b+3)^0,c
 13613  002170                     l4842:
 13614  002170  FFFF               	dw	65535	; assembler added errata NOP
 13615  002172  8E2F               	bsf	(___flmul@b+2)^0,7,c
 13616  002174  EFC5  F010         	goto	l4846
 13617  002178                     l4844:
 13618  002178  FFFF               	dw	65535	; assembler added errata NOP
 13619  00217A  0E00               	movlw	0
 13620  00217C  6E2D               	movwf	___flmul@b^0,c
 13621  00217E  0E00               	movlw	0
 13622  002180  6E2E               	movwf	(___flmul@b+1)^0,c
 13623  002182  0E00               	movlw	0
 13624  002184  6E2F               	movwf	(___flmul@b+2)^0,c
 13625  002186  0E00               	movlw	0
 13626  002188  6E30               	movwf	(___flmul@b+3)^0,c
 13627  00218A                     l4846:
 13628  00218A  FFFF               	dw	65535	; assembler added errata NOP
 13629  00218C  5034               	movf	(___flmul@a+3)^0,w,c
 13630  00218E  0B80               	andlw	128
 13631  002190  1A39               	xorwf	___flmul@sign^0,f,c
 13632  002192  5034               	movf	(___flmul@a+3)^0,w,c
 13633  002194  2434               	addwf	(___flmul@a+3)^0,w,c
 13634  002196  6E3E               	movwf	___flmul@aexp^0,c
 13635  002198  AE33               	btfss	(___flmul@a+2)^0,7,c
 13636  00219A  EFD1  F010         	goto	u5921
 13637  00219E  EFD4  F010         	goto	u5920
 13638  0021A2                     u5921:
 13639  0021A2  FFFF               	dw	65535	; assembler added errata NOP
 13640  0021A4  EFD6  F010         	goto	l4854
 13641  0021A8                     u5920:
 13642  0021A8  FFFF               	dw	65535	; assembler added errata NOP
 13643  0021AA  803E               	bsf	___flmul@aexp^0,0,c
 13644  0021AC                     l4854:
 13645  0021AC  FFFF               	dw	65535	; assembler added errata NOP
 13646  0021AE  503E               	movf	___flmul@aexp^0,w,c
 13647  0021B0  B4D8               	btfsc	status,2,c
 13648  0021B2  EFDD  F010         	goto	u5931
 13649  0021B6  EFE0  F010         	goto	u5930
 13650  0021BA                     u5931:
 13651  0021BA  FFFF               	dw	65535	; assembler added errata NOP
 13652  0021BC  EFF7  F010         	goto	l4862
 13653  0021C0                     u5930:
 13654  0021C0  FFFF               	dw	65535	; assembler added errata NOP
 13655  0021C2  283E               	incf	___flmul@aexp^0,w,c
 13656  0021C4  A4D8               	btfss	status,2,c
 13657  0021C6  EFE7  F010         	goto	u5941
 13658  0021CA  EFEA  F010         	goto	u5940
 13659  0021CE                     u5941:
 13660  0021CE  FFFF               	dw	65535	; assembler added errata NOP
 13661  0021D0  EFF3  F010         	goto	l4860
 13662  0021D4                     u5940:
 13663  0021D4  FFFF               	dw	65535	; assembler added errata NOP
 13664  0021D6  0E00               	movlw	0
 13665  0021D8  6E31               	movwf	___flmul@a^0,c
 13666  0021DA  0E00               	movlw	0
 13667  0021DC  6E32               	movwf	(___flmul@a+1)^0,c
 13668  0021DE  0E00               	movlw	0
 13669  0021E0  6E33               	movwf	(___flmul@a+2)^0,c
 13670  0021E2  0E00               	movlw	0
 13671  0021E4  6E34               	movwf	(___flmul@a+3)^0,c
 13672  0021E6                     l4860:
 13673  0021E6  FFFF               	dw	65535	; assembler added errata NOP
 13674  0021E8  8E33               	bsf	(___flmul@a+2)^0,7,c
 13675  0021EA  EF00  F011         	goto	l1002
 13676  0021EE                     l4862:
 13677  0021EE  FFFF               	dw	65535	; assembler added errata NOP
 13678  0021F0  0E00               	movlw	0
 13679  0021F2  6E31               	movwf	___flmul@a^0,c
 13680  0021F4  0E00               	movlw	0
 13681  0021F6  6E32               	movwf	(___flmul@a+1)^0,c
 13682  0021F8  0E00               	movlw	0
 13683  0021FA  6E33               	movwf	(___flmul@a+2)^0,c
 13684  0021FC  0E00               	movlw	0
 13685  0021FE  6E34               	movwf	(___flmul@a+3)^0,c
 13686  002200                     l1002:
 13687  002200  FFFF               	dw	65535	; assembler added errata NOP
 13688  002202  503E               	movf	___flmul@aexp^0,w,c
 13689  002204  B4D8               	btfsc	status,2,c
 13690  002206  EF07  F011         	goto	u5951
 13691  00220A  EF0A  F011         	goto	u5950
 13692  00220E                     u5951:
 13693  00220E  FFFF               	dw	65535	; assembler added errata NOP
 13694  002210  EF14  F011         	goto	l4866
 13695  002214                     u5950:
 13696  002214  FFFF               	dw	65535	; assembler added errata NOP
 13697  002216  503F               	movf	___flmul@bexp^0,w,c
 13698  002218  A4D8               	btfss	status,2,c
 13699  00221A  EF11  F011         	goto	u5961
 13700  00221E  EF14  F011         	goto	u5960
 13701  002222                     u5961:
 13702  002222  FFFF               	dw	65535	; assembler added errata NOP
 13703  002224  EF1F  F011         	goto	l4870
 13704  002228                     u5960:
 13705  002228                     l4866:
 13706  002228  FFFF               	dw	65535	; assembler added errata NOP
 13707  00222A  0E00               	movlw	0
 13708  00222C  6E2D               	movwf	?___flmul^0,c
 13709  00222E  0E00               	movlw	0
 13710  002230  6E2E               	movwf	(?___flmul+1)^0,c
 13711  002232  0E00               	movlw	0
 13712  002234  6E2F               	movwf	(?___flmul+2)^0,c
 13713  002236  0E00               	movlw	0
 13714  002238  6E30               	movwf	(?___flmul+3)^0,c
 13715  00223A  EFD9  F012         	goto	l1006
 13716  00223E                     l4870:
 13717  00223E  FFFF               	dw	65535	; assembler added errata NOP
 13718  002240  5033               	movf	(___flmul@a+2)^0,w,c
 13719  002242  022D               	mulwf	___flmul@b^0,c
 13720  002244  CFF3 F044          	movff	prodl,___flmul@temp
 13721  002248  CFF4 F045          	movff	prodh,___flmul@temp+1
 13722  00224C  5044               	movf	___flmul@temp^0,w,c
 13723  00224E  6E3A               	movwf	___flmul@grs^0,c
 13724  002250  6A3B               	clrf	(___flmul@grs+1)^0,c
 13725  002252  6A3C               	clrf	(___flmul@grs+2)^0,c
 13726  002254  6A3D               	clrf	(___flmul@grs+3)^0,c
 13727  002256  5045               	movf	(___flmul@temp+1)^0,w,c
 13728  002258  6E40               	movwf	___flmul@prod^0,c
 13729  00225A  6A41               	clrf	(___flmul@prod+1)^0,c
 13730  00225C  6A42               	clrf	(___flmul@prod+2)^0,c
 13731  00225E  6A43               	clrf	(___flmul@prod+3)^0,c
 13732  002260  5032               	movf	(___flmul@a+1)^0,w,c
 13733  002262  022E               	mulwf	(___flmul@b+1)^0,c
 13734  002264  CFF3 F044          	movff	prodl,___flmul@temp
 13735  002268  CFF4 F045          	movff	prodh,___flmul@temp+1
 13736  00226C  5044               	movf	___flmul@temp^0,w,c
 13737  00226E  263A               	addwf	___flmul@grs^0,f,c
 13738  002270  0E00               	movlw	0
 13739  002272  223B               	addwfc	(___flmul@grs+1)^0,f,c
 13740  002274  223C               	addwfc	(___flmul@grs+2)^0,f,c
 13741  002276  223D               	addwfc	(___flmul@grs+3)^0,f,c
 13742  002278  5045               	movf	(___flmul@temp+1)^0,w,c
 13743  00227A  2640               	addwf	___flmul@prod^0,f,c
 13744  00227C  0E00               	movlw	0
 13745  00227E  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13746  002280  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13747  002282  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13748  002284  5031               	movf	___flmul@a^0,w,c
 13749  002286  022F               	mulwf	(___flmul@b+2)^0,c
 13750  002288  CFF3 F044          	movff	prodl,___flmul@temp
 13751  00228C  CFF4 F045          	movff	prodh,___flmul@temp+1
 13752  002290  5044               	movf	___flmul@temp^0,w,c
 13753  002292  263A               	addwf	___flmul@grs^0,f,c
 13754  002294  0E00               	movlw	0
 13755  002296  223B               	addwfc	(___flmul@grs+1)^0,f,c
 13756  002298  223C               	addwfc	(___flmul@grs+2)^0,f,c
 13757  00229A  223D               	addwfc	(___flmul@grs+3)^0,f,c
 13758  00229C  5045               	movf	(___flmul@temp+1)^0,w,c
 13759  00229E  2640               	addwf	___flmul@prod^0,f,c
 13760  0022A0  0E00               	movlw	0
 13761  0022A2  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13762  0022A4  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13763  0022A6  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13764  0022A8  C03C  F03D         	movff	___flmul@grs+2,___flmul@grs+3
 13765  0022AC  C03B  F03C         	movff	___flmul@grs+1,___flmul@grs+2
 13766  0022B0  C03A  F03B         	movff	___flmul@grs,___flmul@grs+1
 13767  0022B4  6A3A               	clrf	___flmul@grs^0,c
 13768  0022B6  5031               	movf	___flmul@a^0,w,c
 13769  0022B8  022E               	mulwf	(___flmul@b+1)^0,c
 13770  0022BA  CFF3 F044          	movff	prodl,___flmul@temp
 13771  0022BE  CFF4 F045          	movff	prodh,___flmul@temp+1
 13772  0022C2  5044               	movf	___flmul@temp^0,w,c
 13773  0022C4  263A               	addwf	___flmul@grs^0,f,c
 13774  0022C6  5045               	movf	(___flmul@temp+1)^0,w,c
 13775  0022C8  223B               	addwfc	(___flmul@grs+1)^0,f,c
 13776  0022CA  0E00               	movlw	0
 13777  0022CC  223C               	addwfc	(___flmul@grs+2)^0,f,c
 13778  0022CE  0E00               	movlw	0
 13779  0022D0  223D               	addwfc	(___flmul@grs+3)^0,f,c
 13780  0022D2  5032               	movf	(___flmul@a+1)^0,w,c
 13781  0022D4  022D               	mulwf	___flmul@b^0,c
 13782  0022D6  CFF3 F044          	movff	prodl,___flmul@temp
 13783  0022DA  CFF4 F045          	movff	prodh,___flmul@temp+1
 13784  0022DE  5044               	movf	___flmul@temp^0,w,c
 13785  0022E0  263A               	addwf	___flmul@grs^0,f,c
 13786  0022E2  5045               	movf	(___flmul@temp+1)^0,w,c
 13787  0022E4  223B               	addwfc	(___flmul@grs+1)^0,f,c
 13788  0022E6  0E00               	movlw	0
 13789  0022E8  223C               	addwfc	(___flmul@grs+2)^0,f,c
 13790  0022EA  0E00               	movlw	0
 13791  0022EC  223D               	addwfc	(___flmul@grs+3)^0,f,c
 13792  0022EE  C03C  F03D         	movff	___flmul@grs+2,___flmul@grs+3
 13793  0022F2  C03B  F03C         	movff	___flmul@grs+1,___flmul@grs+2
 13794  0022F6  C03A  F03B         	movff	___flmul@grs,___flmul@grs+1
 13795  0022FA  6A3A               	clrf	___flmul@grs^0,c
 13796  0022FC  5031               	movf	___flmul@a^0,w,c
 13797  0022FE  022D               	mulwf	___flmul@b^0,c
 13798  002300  CFF3 F044          	movff	prodl,___flmul@temp
 13799  002304  CFF4 F045          	movff	prodh,___flmul@temp+1
 13800  002308  5044               	movf	___flmul@temp^0,w,c
 13801  00230A  263A               	addwf	___flmul@grs^0,f,c
 13802  00230C  5045               	movf	(___flmul@temp+1)^0,w,c
 13803  00230E  223B               	addwfc	(___flmul@grs+1)^0,f,c
 13804  002310  0E00               	movlw	0
 13805  002312  223C               	addwfc	(___flmul@grs+2)^0,f,c
 13806  002314  0E00               	movlw	0
 13807  002316  223D               	addwfc	(___flmul@grs+3)^0,f,c
 13808  002318  5033               	movf	(___flmul@a+2)^0,w,c
 13809  00231A  022E               	mulwf	(___flmul@b+1)^0,c
 13810  00231C  CFF3 F044          	movff	prodl,___flmul@temp
 13811  002320  CFF4 F045          	movff	prodh,___flmul@temp+1
 13812  002324  5044               	movf	___flmul@temp^0,w,c
 13813  002326  2640               	addwf	___flmul@prod^0,f,c
 13814  002328  5045               	movf	(___flmul@temp+1)^0,w,c
 13815  00232A  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13816  00232C  0E00               	movlw	0
 13817  00232E  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13818  002330  0E00               	movlw	0
 13819  002332  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13820  002334  5032               	movf	(___flmul@a+1)^0,w,c
 13821  002336  022F               	mulwf	(___flmul@b+2)^0,c
 13822  002338  CFF3 F044          	movff	prodl,___flmul@temp
 13823  00233C  CFF4 F045          	movff	prodh,___flmul@temp+1
 13824  002340  5044               	movf	___flmul@temp^0,w,c
 13825  002342  2640               	addwf	___flmul@prod^0,f,c
 13826  002344  5045               	movf	(___flmul@temp+1)^0,w,c
 13827  002346  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13828  002348  0E00               	movlw	0
 13829  00234A  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13830  00234C  0E00               	movlw	0
 13831  00234E  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13832  002350  5033               	movf	(___flmul@a+2)^0,w,c
 13833  002352  022F               	mulwf	(___flmul@b+2)^0,c
 13834  002354  CFF3 F044          	movff	prodl,___flmul@temp
 13835  002358  CFF4 F045          	movff	prodh,___flmul@temp+1
 13836  00235C  5044               	movf	___flmul@temp^0,w,c
 13837  00235E  6E35               	movwf	??___flmul^0,c
 13838  002360  5045               	movf	(___flmul@temp+1)^0,w,c
 13839  002362  6E36               	movwf	(??___flmul+1)^0,c
 13840  002364  6A37               	clrf	(??___flmul+2)^0,c
 13841  002366  6A38               	clrf	(??___flmul+3)^0,c
 13842  002368  C037  F038         	movff	??___flmul+2,??___flmul+3
 13843  00236C  C036  F037         	movff	??___flmul+1,??___flmul+2
 13844  002370  C035  F036         	movff	??___flmul,??___flmul+1
 13845  002374  6A35               	clrf	??___flmul^0,c
 13846  002376  5035               	movf	??___flmul^0,w,c
 13847  002378  2640               	addwf	___flmul@prod^0,f,c
 13848  00237A  5036               	movf	(??___flmul+1)^0,w,c
 13849  00237C  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13850  00237E  5037               	movf	(??___flmul+2)^0,w,c
 13851  002380  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13852  002382  5038               	movf	(??___flmul+3)^0,w,c
 13853  002384  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13854  002386  C03A  F035         	movff	___flmul@grs,??___flmul
 13855  00238A  C03B  F036         	movff	___flmul@grs+1,??___flmul+1
 13856  00238E  C03C  F037         	movff	___flmul@grs+2,??___flmul+2
 13857  002392  C03D  F038         	movff	___flmul@grs+3,??___flmul+3
 13858  002396  0E19               	movlw	25
 13859  002398  EFD4  F011         	goto	u5970
 13860  00239C                     u5975:
 13861  00239C  FFFF               	dw	65535	; assembler added errata NOP
 13862  00239E  90D8               	bcf	status,0,c
 13863  0023A0  3238               	rrcf	(??___flmul+3)^0,f,c
 13864  0023A2  3237               	rrcf	(??___flmul+2)^0,f,c
 13865  0023A4  3236               	rrcf	(??___flmul+1)^0,f,c
 13866  0023A6  3235               	rrcf	??___flmul^0,f,c
 13867  0023A8                     u5970:
 13868  0023A8  FFFF               	dw	65535	; assembler added errata NOP
 13869  0023AA  2EE8               	decfsz	wreg,f,c
 13870  0023AC  EFCE  F011         	goto	u5975
 13871  0023B0  5035               	movf	??___flmul^0,w,c
 13872  0023B2  2640               	addwf	___flmul@prod^0,f,c
 13873  0023B4  5036               	movf	(??___flmul+1)^0,w,c
 13874  0023B6  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13875  0023B8  5037               	movf	(??___flmul+2)^0,w,c
 13876  0023BA  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13877  0023BC  5038               	movf	(??___flmul+3)^0,w,c
 13878  0023BE  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13879  0023C0  C03C  F03D         	movff	___flmul@grs+2,___flmul@grs+3
 13880  0023C4  C03B  F03C         	movff	___flmul@grs+1,___flmul@grs+2
 13881  0023C8  C03A  F03B         	movff	___flmul@grs,___flmul@grs+1
 13882  0023CC  6A3A               	clrf	___flmul@grs^0,c
 13883  0023CE  503E               	movf	___flmul@aexp^0,w,c
 13884  0023D0  C03F  F035         	movff	___flmul@bexp,??___flmul
 13885  0023D4  6A36               	clrf	(??___flmul+1)^0,c
 13886  0023D6  2635               	addwf	??___flmul^0,f,c
 13887  0023D8  0E00               	movlw	0
 13888  0023DA  2236               	addwfc	(??___flmul+1)^0,f,c
 13889  0023DC  0E82               	movlw	130
 13890  0023DE  2435               	addwf	??___flmul^0,w,c
 13891  0023E0  6E44               	movwf	___flmul@temp^0,c
 13892  0023E2  0EFF               	movlw	255
 13893  0023E4  2036               	addwfc	(??___flmul+1)^0,w,c
 13894  0023E6  6E45               	movwf	(___flmul@temp+1)^0,c
 13895  0023E8  EF0F  F012         	goto	l4918
 13896  0023EC                     l4912:
 13897  0023EC  FFFF               	dw	65535	; assembler added errata NOP
 13898  0023EE  90D8               	bcf	status,0,c
 13899  0023F0  3640               	rlcf	___flmul@prod^0,f,c
 13900  0023F2  3641               	rlcf	(___flmul@prod+1)^0,f,c
 13901  0023F4  3642               	rlcf	(___flmul@prod+2)^0,f,c
 13902  0023F6  3643               	rlcf	(___flmul@prod+3)^0,f,c
 13903  0023F8  AE3D               	btfss	(___flmul@grs+3)^0,7,c
 13904  0023FA  EF01  F012         	goto	u5981
 13905  0023FE  EF04  F012         	goto	u5980
 13906  002402                     u5981:
 13907  002402  FFFF               	dw	65535	; assembler added errata NOP
 13908  002404  EF06  F012         	goto	l1009
 13909  002408                     u5980:
 13910  002408  FFFF               	dw	65535	; assembler added errata NOP
 13911  00240A  8040               	bsf	___flmul@prod^0,0,c
 13912  00240C                     l1009:
 13913  00240C  FFFF               	dw	65535	; assembler added errata NOP
 13914  00240E  90D8               	bcf	status,0,c
 13915  002410  363A               	rlcf	___flmul@grs^0,f,c
 13916  002412  363B               	rlcf	(___flmul@grs+1)^0,f,c
 13917  002414  363C               	rlcf	(___flmul@grs+2)^0,f,c
 13918  002416  363D               	rlcf	(___flmul@grs+3)^0,f,c
 13919  002418  0644               	decf	___flmul@temp^0,f,c
 13920  00241A  A0D8               	btfss	status,0,c
 13921  00241C  0645               	decf	(___flmul@temp+1)^0,f,c
 13922  00241E                     l4918:
 13923  00241E  FFFF               	dw	65535	; assembler added errata NOP
 13924  002420  AE42               	btfss	(___flmul@prod+2)^0,7,c
 13925  002422  EF15  F012         	goto	u5991
 13926  002426  EF18  F012         	goto	u5990
 13927  00242A                     u5991:
 13928  00242A  FFFF               	dw	65535	; assembler added errata NOP
 13929  00242C  EFF6  F011         	goto	l4912
 13930  002430                     u5990:
 13931  002430  FFFF               	dw	65535	; assembler added errata NOP
 13932  002432  0E00               	movlw	0
 13933  002434  6E3E               	movwf	___flmul@aexp^0,c
 13934  002436  AE3D               	btfss	(___flmul@grs+3)^0,7,c
 13935  002438  EF20  F012         	goto	u6001
 13936  00243C  EF23  F012         	goto	u6000
 13937  002440                     u6001:
 13938  002440  FFFF               	dw	65535	; assembler added errata NOP
 13939  002442  EF4E  F012         	goto	l1011
 13940  002446                     u6000:
 13941  002446  FFFF               	dw	65535	; assembler added errata NOP
 13942  002448  0EFF               	movlw	255
 13943  00244A  143A               	andwf	___flmul@grs^0,w,c
 13944  00244C  6E35               	movwf	??___flmul^0,c
 13945  00244E  0EFF               	movlw	255
 13946  002450  143B               	andwf	(___flmul@grs+1)^0,w,c
 13947  002452  6E36               	movwf	(??___flmul+1)^0,c
 13948  002454  0EFF               	movlw	255
 13949  002456  143C               	andwf	(___flmul@grs+2)^0,w,c
 13950  002458  6E37               	movwf	(??___flmul+2)^0,c
 13951  00245A  0E7F               	movlw	127
 13952  00245C  143D               	andwf	(___flmul@grs+3)^0,w,c
 13953  00245E  6E38               	movwf	(??___flmul+3)^0,c
 13954  002460  5035               	movf	??___flmul^0,w,c
 13955  002462  1036               	iorwf	(??___flmul+1)^0,w,c
 13956  002464  1037               	iorwf	(??___flmul+2)^0,w,c
 13957  002466  1038               	iorwf	(??___flmul+3)^0,w,c
 13958  002468  B4D8               	btfsc	status,2,c
 13959  00246A  EF39  F012         	goto	u6011
 13960  00246E  EF3C  F012         	goto	u6010
 13961  002472                     u6011:
 13962  002472  FFFF               	dw	65535	; assembler added errata NOP
 13963  002474  EF42  F012         	goto	l1012
 13964  002478                     u6010:
 13965  002478  FFFF               	dw	65535	; assembler added errata NOP
 13966  00247A                     l4926:
 13967  00247A  FFFF               	dw	65535	; assembler added errata NOP
 13968  00247C  0E01               	movlw	1
 13969  00247E  6E3E               	movwf	___flmul@aexp^0,c
 13970  002480  EF4E  F012         	goto	l1011
 13971  002484                     l1012:
 13972  002484  FFFF               	dw	65535	; assembler added errata NOP
 13973  002486  A040               	btfss	___flmul@prod^0,0,c
 13974  002488  EF48  F012         	goto	u6021
 13975  00248C  EF4B  F012         	goto	u6020
 13976  002490                     u6021:
 13977  002490  FFFF               	dw	65535	; assembler added errata NOP
 13978  002492  EF4E  F012         	goto	l1011
 13979  002496                     u6020:
 13980  002496  FFFF               	dw	65535	; assembler added errata NOP
 13981  002498  EF3D  F012         	goto	l4926
 13982  00249C                     l1011:
 13983  00249C  FFFF               	dw	65535	; assembler added errata NOP
 13984  00249E  503E               	movf	___flmul@aexp^0,w,c
 13985  0024A0  B4D8               	btfsc	status,2,c
 13986  0024A2  EF55  F012         	goto	u6031
 13987  0024A6  EF58  F012         	goto	u6030
 13988  0024AA                     u6031:
 13989  0024AA  FFFF               	dw	65535	; assembler added errata NOP
 13990  0024AC  EF7F  F012         	goto	l4938
 13991  0024B0                     u6030:
 13992  0024B0  FFFF               	dw	65535	; assembler added errata NOP
 13993  0024B2  0E01               	movlw	1
 13994  0024B4  2640               	addwf	___flmul@prod^0,f,c
 13995  0024B6  0E00               	movlw	0
 13996  0024B8  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13997  0024BA  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13998  0024BC  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13999  0024BE  A043               	btfss	(___flmul@prod+3)^0,0,c
 14000  0024C0  EF64  F012         	goto	u6041
 14001  0024C4  EF67  F012         	goto	u6040
 14002  0024C8                     u6041:
 14003  0024C8  FFFF               	dw	65535	; assembler added errata NOP
 14004  0024CA  EF7F  F012         	goto	l4938
 14005  0024CE                     u6040:
 14006  0024CE  FFFF               	dw	65535	; assembler added errata NOP
 14007  0024D0  C040  F035         	movff	___flmul@prod,??___flmul
 14008  0024D4  C041  F036         	movff	___flmul@prod+1,??___flmul+1
 14009  0024D8  C042  F037         	movff	___flmul@prod+2,??___flmul+2
 14010  0024DC  C043  F038         	movff	___flmul@prod+3,??___flmul+3
 14011  0024E0  3438               	rlcf	(??___flmul+3)^0,w,c
 14012  0024E2  3238               	rrcf	(??___flmul+3)^0,f,c
 14013  0024E4  3237               	rrcf	(??___flmul+2)^0,f,c
 14014  0024E6  3236               	rrcf	(??___flmul+1)^0,f,c
 14015  0024E8  3235               	rrcf	??___flmul^0,f,c
 14016  0024EA  C035  F040         	movff	??___flmul,___flmul@prod
 14017  0024EE  C036  F041         	movff	??___flmul+1,___flmul@prod+1
 14018  0024F2  C037  F042         	movff	??___flmul+2,___flmul@prod+2
 14019  0024F6  C038  F043         	movff	??___flmul+3,___flmul@prod+3
 14020  0024FA  4A44               	infsnz	___flmul@temp^0,f,c
 14021  0024FC  2A45               	incf	(___flmul@temp+1)^0,f,c
 14022  0024FE                     l4938:
 14023  0024FE  FFFF               	dw	65535	; assembler added errata NOP
 14024  002500  BE45               	btfsc	(___flmul@temp+1)^0,7,c
 14025  002502  EF8B  F012         	goto	u6051
 14026  002506  5045               	movf	(___flmul@temp+1)^0,w,c
 14027  002508  E109               	bnz	u6050
 14028  00250A  2844               	incf	___flmul@temp^0,w,c
 14029  00250C  A0D8               	btfss	status,0,c
 14030  00250E  EF8B  F012         	goto	u6051
 14031  002512  EF8E  F012         	goto	u6050
 14032  002516                     u6051:
 14033  002516  FFFF               	dw	65535	; assembler added errata NOP
 14034  002518  EF99  F012         	goto	l4942
 14035  00251C                     u6050:
 14036  00251C  FFFF               	dw	65535	; assembler added errata NOP
 14037  00251E  0E00               	movlw	0
 14038  002520  6E40               	movwf	___flmul@prod^0,c
 14039  002522  0E00               	movlw	0
 14040  002524  6E41               	movwf	(___flmul@prod+1)^0,c
 14041  002526  0E80               	movlw	128
 14042  002528  6E42               	movwf	(___flmul@prod+2)^0,c
 14043  00252A  0E7F               	movlw	127
 14044  00252C  6E43               	movwf	(___flmul@prod+3)^0,c
 14045  00252E  EFCE  F012         	goto	l4954
 14046  002532                     l4942:
 14047  002532  FFFF               	dw	65535	; assembler added errata NOP
 14048  002534  BE45               	btfsc	(___flmul@temp+1)^0,7,c
 14049  002536  EFA8  F012         	goto	u6060
 14050  00253A  5045               	movf	(___flmul@temp+1)^0,w,c
 14051  00253C  E106               	bnz	u6061
 14052  00253E  0444               	decf	___flmul@temp^0,w,c
 14053  002540  B0D8               	btfsc	status,0,c
 14054  002542  EFA5  F012         	goto	u6061
 14055  002546  EFA8  F012         	goto	u6060
 14056  00254A                     u6061:
 14057  00254A  FFFF               	dw	65535	; assembler added errata NOP
 14058  00254C  EFB5  F012         	goto	l1019
 14059  002550                     u6060:
 14060  002550  FFFF               	dw	65535	; assembler added errata NOP
 14061  002552  0E00               	movlw	0
 14062  002554  6E40               	movwf	___flmul@prod^0,c
 14063  002556  0E00               	movlw	0
 14064  002558  6E41               	movwf	(___flmul@prod+1)^0,c
 14065  00255A  0E00               	movlw	0
 14066  00255C  6E42               	movwf	(___flmul@prod+2)^0,c
 14067  00255E  0E00               	movlw	0
 14068  002560  6E43               	movwf	(___flmul@prod+3)^0,c
 14069  002562  0E00               	movlw	0
 14070  002564  6E39               	movwf	___flmul@sign^0,c
 14071  002566  EFCE  F012         	goto	l4954
 14072  00256A                     l1019:
 14073  00256A  FFFF               	dw	65535	; assembler added errata NOP
 14074  00256C  C044  F03F         	movff	___flmul@temp,___flmul@bexp
 14075  002570  0EFF               	movlw	255
 14076  002572  1640               	andwf	___flmul@prod^0,f,c
 14077  002574  0EFF               	movlw	255
 14078  002576  1641               	andwf	(___flmul@prod+1)^0,f,c
 14079  002578  0E7F               	movlw	127
 14080  00257A  1642               	andwf	(___flmul@prod+2)^0,f,c
 14081  00257C  0E00               	movlw	0
 14082  00257E  1643               	andwf	(___flmul@prod+3)^0,f,c
 14083  002580  A03F               	btfss	___flmul@bexp^0,0,c
 14084  002582  EFC5  F012         	goto	u6071
 14085  002586  EFC8  F012         	goto	u6070
 14086  00258A                     u6071:
 14087  00258A  FFFF               	dw	65535	; assembler added errata NOP
 14088  00258C  EFCA  F012         	goto	l4952
 14089  002590                     u6070:
 14090  002590  FFFF               	dw	65535	; assembler added errata NOP
 14091  002592  8E42               	bsf	(___flmul@prod+2)^0,7,c
 14092  002594                     l4952:
 14093  002594  FFFF               	dw	65535	; assembler added errata NOP
 14094  002596  90D8               	bcf	status,0,c
 14095  002598  303F               	rrcf	___flmul@bexp^0,w,c
 14096  00259A  6E43               	movwf	(___flmul@prod+3)^0,c
 14097  00259C                     l4954:
 14098  00259C  FFFF               	dw	65535	; assembler added errata NOP
 14099  00259E  5039               	movf	___flmul@sign^0,w,c
 14100  0025A0  1243               	iorwf	(___flmul@prod+3)^0,f,c
 14101  0025A2  C040  F02D         	movff	___flmul@prod,?___flmul
 14102  0025A6  C041  F02E         	movff	___flmul@prod+1,?___flmul+1
 14103  0025AA  C042  F02F         	movff	___flmul@prod+2,?___flmul+2
 14104  0025AE  C043  F030         	movff	___flmul@prod+3,?___flmul+3
 14105  0025B2                     l1006:
 14106  0025B2  FFFF               	dw	65535	; assembler added errata NOP
 14107  0025B4  0012               	return		;funcret
 14108  0025B6  FFFF               	dw	65535	; errata NOP
 14109  0025B8                     __end_of___flmul:
 14110                           	callstack 0
 14111                           
 14112 ;; *************** function ___fltol *****************
 14113 ;; Defined at:
 14114 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
 14115 ;; Parameters:    Size  Location     Type
 14116 ;;  f1              4   18[BANK0 ] unsigned char 
 14117 ;; Auto vars:     Size  Location     Type
 14118 ;;  exp1            1   27[BANK0 ] unsigned char 
 14119 ;;  sign1           1   26[BANK0 ] unsigned char 
 14120 ;; Return value:  Size  Location     Type
 14121 ;;                  4   18[BANK0 ] long 
 14122 ;; Registers used:
 14123 ;;		wreg, status,2, status,0
 14124 ;; Tracked objects:
 14125 ;;		On entry : 0/0
 14126 ;;		On exit  : 0/0
 14127 ;;		Unchanged: 0/0
 14128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14129 ;;      Params:         0       4       0       0       0       0       0
 14130 ;;      Locals:         0       2       0       0       0       0       0
 14131 ;;      Temps:          0       4       0       0       0       0       0
 14132 ;;      Totals:         0      10       0       0       0       0       0
 14133 ;;Total ram usage:       10 bytes
 14134 ;; Hardware stack levels used:    1
 14135 ;; Hardware stack levels required when called:    1
 14136 ;; This function calls:
 14137 ;;		Nothing
 14138 ;; This function is called by:
 14139 ;;		_init_USART
 14140 ;;		_init_timer_2
 14141 ;;		_update_pwm_duty_ccp1
 14142 ;;		_get_temperature
 14143 ;; This function uses a non-reentrant model
 14144 ;;
 14145                           
 14146                           	psect	text55
 14147  007AB2                     __ptext55:
 14148                           	callstack 0
 14149  007AB2                     ___fltol:
 14150                           	callstack 0
 14151  007AB2  FFFF               	dw	65535	; assembler added errata NOP
 14152  007AB4  0100               	movlb	0	; () banked
 14153  007AB6  35CC               	rlcf	(___fltol@f1+2)& (0+255),w,b
 14154  007AB8  35CD               	rlcf	(___fltol@f1+3)& (0+255),w,b
 14155  007ABA  6FD3               	movwf	___fltol@exp1& (0+255),b
 14156  007ABC  51D3               	movf	___fltol@exp1& (0+255),w,b
 14157  007ABE  A4D8               	btfss	status,2,c
 14158  007AC0  EF64  F03D         	goto	u6141
 14159  007AC4  EF67  F03D         	goto	u6140
 14160  007AC8                     u6141:
 14161  007AC8  FFFF               	dw	65535	; assembler added errata NOP
 14162  007ACA  EF73  F03D         	goto	l5002
 14163  007ACE                     u6140:
 14164  007ACE  FFFF               	dw	65535	; assembler added errata NOP
 14165  007AD0                     l4998:
 14166  007AD0  FFFF               	dw	65535	; assembler added errata NOP
 14167                           
 14168                           ; BSR set to: 0
 14169  007AD2  0E00               	movlw	0
 14170  007AD4  6FCA               	movwf	?___fltol& (0+255),b
 14171  007AD6  0E00               	movlw	0
 14172  007AD8  6FCB               	movwf	(?___fltol+1)& (0+255),b
 14173  007ADA  0E00               	movlw	0
 14174  007ADC  6FCC               	movwf	(?___fltol+2)& (0+255),b
 14175  007ADE  0E00               	movlw	0
 14176  007AE0  6FCD               	movwf	(?___fltol+3)& (0+255),b
 14177  007AE2  EFF2  F03D         	goto	l685
 14178  007AE6                     l5002:
 14179  007AE6  FFFF               	dw	65535	; assembler added errata NOP
 14180                           
 14181                           ; BSR set to: 0
 14182  007AE8  C0CA  F0CE         	movff	___fltol@f1,??___fltol
 14183  007AEC  C0CB  F0CF         	movff	___fltol@f1+1,??___fltol+1
 14184  007AF0  C0CC  F0D0         	movff	___fltol@f1+2,??___fltol+2
 14185  007AF4  C0CD  F0D1         	movff	___fltol@f1+3,??___fltol+3
 14186  007AF8  0E20               	movlw	32
 14187  007AFA  EF85  F03D         	goto	u6150
 14188  007AFE                     u6155:
 14189  007AFE  FFFF               	dw	65535	; assembler added errata NOP
 14190  007B00  90D8               	bcf	status,0,c
 14191  007B02  33D1               	rrcf	(??___fltol+3)& (0+255),f,b
 14192  007B04  33D0               	rrcf	(??___fltol+2)& (0+255),f,b
 14193  007B06  33CF               	rrcf	(??___fltol+1)& (0+255),f,b
 14194  007B08  33CE               	rrcf	??___fltol& (0+255),f,b
 14195  007B0A                     u6150:
 14196  007B0A  FFFF               	dw	65535	; assembler added errata NOP
 14197  007B0C  2EE8               	decfsz	wreg,f,c
 14198  007B0E  EF7F  F03D         	goto	u6155
 14199  007B12  51CE               	movf	??___fltol& (0+255),w,b
 14200  007B14  6FD2               	movwf	___fltol@sign1& (0+255),b
 14201  007B16                     
 14202                           ; BSR set to: 0
 14203  007B16  8FCC               	bsf	(___fltol@f1+2)& (0+255),7,b
 14204  007B18                     
 14205                           ; BSR set to: 0
 14206  007B18  0EFF               	movlw	255
 14207  007B1A  17CA               	andwf	___fltol@f1& (0+255),f,b
 14208  007B1C  0EFF               	movlw	255
 14209  007B1E  17CB               	andwf	(___fltol@f1+1)& (0+255),f,b
 14210  007B20  0EFF               	movlw	255
 14211  007B22  17CC               	andwf	(___fltol@f1+2)& (0+255),f,b
 14212  007B24  0E00               	movlw	0
 14213  007B26  17CD               	andwf	(___fltol@f1+3)& (0+255),f,b
 14214  007B28                     
 14215                           ; BSR set to: 0
 14216  007B28  0E96               	movlw	150
 14217  007B2A  5FD3               	subwf	___fltol@exp1& (0+255),f,b
 14218  007B2C                     
 14219                           ; BSR set to: 0
 14220  007B2C  BFD3               	btfsc	___fltol@exp1& (0+255),7,b
 14221  007B2E  EF9E  F03D         	goto	u6160
 14222  007B32  EF9B  F03D         	goto	u6161
 14223  007B36                     u6161:
 14224  007B36  FFFF               	dw	65535	; assembler added errata NOP
 14225  007B38  EFB8  F03D         	goto	l5022
 14226  007B3C                     u6160:
 14227  007B3C  FFFF               	dw	65535	; assembler added errata NOP
 14228  007B3E                     
 14229                           ; BSR set to: 0
 14230  007B3E  51D3               	movf	___fltol@exp1& (0+255),w,b
 14231  007B40  0A80               	xorlw	128
 14232  007B42  0F97               	addlw	151
 14233  007B44  B0D8               	btfsc	status,0,c
 14234  007B46  EFA7  F03D         	goto	u6171
 14235  007B4A  EFAA  F03D         	goto	u6170
 14236  007B4E                     u6171:
 14237  007B4E  FFFF               	dw	65535	; assembler added errata NOP
 14238  007B50  EFAD  F03D         	goto	l5018
 14239  007B54                     u6170:
 14240  007B54  FFFF               	dw	65535	; assembler added errata NOP
 14241  007B56  EF68  F03D         	goto	l4998
 14242  007B5A                     l5018:
 14243  007B5A  FFFF               	dw	65535	; assembler added errata NOP
 14244                           
 14245                           ; BSR set to: 0
 14246  007B5C  90D8               	bcf	status,0,c
 14247  007B5E  33CD               	rrcf	(___fltol@f1+3)& (0+255),f,b
 14248  007B60  33CC               	rrcf	(___fltol@f1+2)& (0+255),f,b
 14249  007B62  33CB               	rrcf	(___fltol@f1+1)& (0+255),f,b
 14250  007B64  33CA               	rrcf	___fltol@f1& (0+255),f,b
 14251  007B66                     
 14252                           ; BSR set to: 0
 14253  007B66  3FD3               	incfsz	___fltol@exp1& (0+255),f,b
 14254  007B68  EFAD  F03D         	goto	l5018
 14255  007B6C  EFD6  F03D         	goto	l5032
 14256  007B70                     l5022:
 14257  007B70  FFFF               	dw	65535	; assembler added errata NOP
 14258                           
 14259                           ; BSR set to: 0
 14260  007B72  0E1F               	movlw	31
 14261  007B74  65D3               	cpfsgt	___fltol@exp1& (0+255),b
 14262  007B76  EFBF  F03D         	goto	u6181
 14263  007B7A  EFC2  F03D         	goto	u6180
 14264  007B7E                     u6181:
 14265  007B7E  FFFF               	dw	65535	; assembler added errata NOP
 14266  007B80  EFCC  F03D         	goto	l5030
 14267  007B84                     u6180:
 14268  007B84  FFFF               	dw	65535	; assembler added errata NOP
 14269  007B86  EF68  F03D         	goto	l4998
 14270  007B8A                     l5028:
 14271  007B8A  FFFF               	dw	65535	; assembler added errata NOP
 14272                           
 14273                           ; BSR set to: 0
 14274  007B8C  90D8               	bcf	status,0,c
 14275  007B8E  37CA               	rlcf	___fltol@f1& (0+255),f,b
 14276  007B90  37CB               	rlcf	(___fltol@f1+1)& (0+255),f,b
 14277  007B92  37CC               	rlcf	(___fltol@f1+2)& (0+255),f,b
 14278  007B94  37CD               	rlcf	(___fltol@f1+3)& (0+255),f,b
 14279  007B96  07D3               	decf	___fltol@exp1& (0+255),f,b
 14280  007B98                     l5030:
 14281  007B98  FFFF               	dw	65535	; assembler added errata NOP
 14282                           
 14283                           ; BSR set to: 0
 14284  007B9A  51D3               	movf	___fltol@exp1& (0+255),w,b
 14285  007B9C  A4D8               	btfss	status,2,c
 14286  007B9E  EFD3  F03D         	goto	u6191
 14287  007BA2  EFD6  F03D         	goto	u6190
 14288  007BA6                     u6191:
 14289  007BA6  FFFF               	dw	65535	; assembler added errata NOP
 14290  007BA8  EFC5  F03D         	goto	l5028
 14291  007BAC                     u6190:
 14292  007BAC                     l5032:
 14293  007BAC  FFFF               	dw	65535	; assembler added errata NOP
 14294                           
 14295                           ; BSR set to: 0
 14296  007BAE  51D2               	movf	___fltol@sign1& (0+255),w,b
 14297  007BB0  B4D8               	btfsc	status,2,c
 14298  007BB2  EFDD  F03D         	goto	u6201
 14299  007BB6  EFE0  F03D         	goto	u6200
 14300  007BBA                     u6201:
 14301  007BBA  FFFF               	dw	65535	; assembler added errata NOP
 14302  007BBC  EFE9  F03D         	goto	l5036
 14303  007BC0                     u6200:
 14304  007BC0  FFFF               	dw	65535	; assembler added errata NOP
 14305  007BC2                     
 14306                           ; BSR set to: 0
 14307  007BC2  1FCD               	comf	(___fltol@f1+3)& (0+255),f,b
 14308  007BC4  1FCC               	comf	(___fltol@f1+2)& (0+255),f,b
 14309  007BC6  1FCB               	comf	(___fltol@f1+1)& (0+255),f,b
 14310  007BC8  6DCA               	negf	___fltol@f1& (0+255),b
 14311  007BCA  0E00               	movlw	0
 14312  007BCC  23CB               	addwfc	(___fltol@f1+1)& (0+255),f,b
 14313  007BCE  23CC               	addwfc	(___fltol@f1+2)& (0+255),f,b
 14314  007BD0  23CD               	addwfc	(___fltol@f1+3)& (0+255),f,b
 14315  007BD2                     l5036:
 14316  007BD2  FFFF               	dw	65535	; assembler added errata NOP
 14317                           
 14318                           ; BSR set to: 0
 14319  007BD4  C0CA  F0CA         	movff	___fltol@f1,?___fltol
 14320  007BD8  C0CB  F0CB         	movff	___fltol@f1+1,?___fltol+1
 14321  007BDC  C0CC  F0CC         	movff	___fltol@f1+2,?___fltol+2
 14322  007BE0  C0CD  F0CD         	movff	___fltol@f1+3,?___fltol+3
 14323  007BE4                     l685:
 14324  007BE4  FFFF               	dw	65535	; assembler added errata NOP
 14325                           
 14326                           ; BSR set to: 0
 14327  007BE6  0012               	return		;funcret
 14328  007BE8  FFFF               	dw	65535	; errata NOP
 14329  007BEA                     __end_of___fltol:
 14330                           	callstack 0
 14331                           
 14332 ;; *************** function _init_PORTS *****************
 14333 ;; Defined at:
 14334 ;;		line 61 in file "init_PIC.c"
 14335 ;; Parameters:    Size  Location     Type
 14336 ;;		None
 14337 ;; Auto vars:     Size  Location     Type
 14338 ;;		None
 14339 ;; Return value:  Size  Location     Type
 14340 ;;                  1    wreg      void 
 14341 ;; Registers used:
 14342 ;;		wreg, status,2
 14343 ;; Tracked objects:
 14344 ;;		On entry : 0/0
 14345 ;;		On exit  : 0/0
 14346 ;;		Unchanged: 0/0
 14347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14348 ;;      Params:         0       0       0       0       0       0       0
 14349 ;;      Locals:         0       0       0       0       0       0       0
 14350 ;;      Temps:          0       0       0       0       0       0       0
 14351 ;;      Totals:         0       0       0       0       0       0       0
 14352 ;;Total ram usage:        0 bytes
 14353 ;; Hardware stack levels used:    1
 14354 ;; Hardware stack levels required when called:    1
 14355 ;; This function calls:
 14356 ;;		Nothing
 14357 ;; This function is called by:
 14358 ;;		_main
 14359 ;; This function uses a non-reentrant model
 14360 ;;
 14361                           
 14362                           	psect	text56
 14363  006642                     __ptext56:
 14364                           	callstack 0
 14365  006642                     _init_PORTS:
 14366                           	callstack 0
 14367  006642  FFFF               	dw	65535	; assembler added errata NOP
 14368  006644                     
 14369                           ;init_PIC.c: 63:     LATA = 0;
 14370  006644  0E00               	movlw	0
 14371  006646  6E89               	movwf	137,c	;volatile
 14372                           
 14373                           ;init_PIC.c: 64:     PORTA = 0;
 14374  006648  0E00               	movlw	0
 14375  00664A  6E80               	movwf	128,c	;volatile
 14376                           
 14377                           ;init_PIC.c: 65:     TRISA = 0xF0;
 14378  00664C  0EF0               	movlw	240
 14379  00664E  6E92               	movwf	146,c	;volatile
 14380                           
 14381                           ;init_PIC.c: 67:     LATB = 0;
 14382  006650  0E00               	movlw	0
 14383  006652  6E8A               	movwf	138,c	;volatile
 14384                           
 14385                           ;init_PIC.c: 68:     PORTB = 0;
 14386  006654  0E00               	movlw	0
 14387  006656  6E81               	movwf	129,c	;volatile
 14388                           
 14389                           ;init_PIC.c: 69:     TRISB = 0x00;
 14390  006658  0E00               	movlw	0
 14391  00665A  6E93               	movwf	147,c	;volatile
 14392                           
 14393                           ;init_PIC.c: 72:     LATC = 0;
 14394  00665C  0E00               	movlw	0
 14395  00665E  6E8B               	movwf	139,c	;volatile
 14396                           
 14397                           ;init_PIC.c: 73:     PORTC = 0;
 14398  006660  0E00               	movlw	0
 14399  006662  6E82               	movwf	130,c	;volatile
 14400  006664                     
 14401                           ;init_PIC.c: 74:     TRISCbits.RC2 = 0;
 14402  006664  9494               	bcf	148,2,c	;volatile
 14403  006666                     
 14404                           ;init_PIC.c: 75:     TRISCbits.RC7 = 1;
 14405  006666  8E94               	bsf	148,7,c	;volatile
 14406  006668                     
 14407                           ;init_PIC.c: 76:     TRISCbits.RC6 = 0;
 14408  006668  9C94               	bcf	148,6,c	;volatile
 14409  00666A  0012               	return		;funcret
 14410  00666C  FFFF               	dw	65535	; errata NOP
 14411  00666E                     __end_of_init_PORTS:
 14412                           	callstack 0
 14413                           
 14414 ;; *************** function _get_reg_value *****************
 14415 ;; Defined at:
 14416 ;;		line 51 in file "serial_rs232.c"
 14417 ;; Parameters:    Size  Location     Type
 14418 ;;		None
 14419 ;; Auto vars:     Size  Location     Type
 14420 ;;  rx_char         1    0[COMRAM] unsigned char 
 14421 ;; Return value:  Size  Location     Type
 14422 ;;                  1    wreg      unsigned char 
 14423 ;; Registers used:
 14424 ;;		wreg, status,2
 14425 ;; Tracked objects:
 14426 ;;		On entry : 0/0
 14427 ;;		On exit  : 0/0
 14428 ;;		Unchanged: 0/0
 14429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14430 ;;      Params:         0       0       0       0       0       0       0
 14431 ;;      Locals:         1       0       0       0       0       0       0
 14432 ;;      Temps:          0       0       0       0       0       0       0
 14433 ;;      Totals:         1       0       0       0       0       0       0
 14434 ;;Total ram usage:        1 bytes
 14435 ;; Hardware stack levels used:    1
 14436 ;; Hardware stack levels required when called:    1
 14437 ;; This function calls:
 14438 ;;		Nothing
 14439 ;; This function is called by:
 14440 ;;		_main
 14441 ;; This function uses a non-reentrant model
 14442 ;;
 14443                           
 14444                           	psect	text57
 14445  0064F2                     __ptext57:
 14446                           	callstack 0
 14447  0064F2                     _get_reg_value:
 14448                           	callstack 0
 14449  0064F2  FFFF               	dw	65535	; assembler added errata NOP
 14450  0064F4                     
 14451                           ;serial_rs232.c: 52:     unsigned char rx_char = RCREG;
 14452  0064F4  CFAE F001          	movff	4014,get_reg_value@rx_char	;volatile
 14453  0064F8                     
 14454                           ;serial_rs232.c: 53:     RCREG = 0;
 14455  0064F8  0E00               	movlw	0
 14456  0064FA  6EAE               	movwf	174,c	;volatile
 14457                           
 14458                           ;serial_rs232.c: 54:     return rx_char;
 14459  0064FC  5001               	movf	get_reg_value@rx_char^0,w,c
 14460  0064FE  0012               	return		;funcret
 14461  006500  FFFF               	dw	65535	; errata NOP
 14462  006502                     __end_of_get_reg_value:
 14463                           	callstack 0
 14464                           
 14465 ;; *************** function _configure_analog_digital_conversion *****************
 14466 ;; Defined at:
 14467 ;;		line 8 in file "oven.c"
 14468 ;; Parameters:    Size  Location     Type
 14469 ;;		None
 14470 ;; Auto vars:     Size  Location     Type
 14471 ;;		None
 14472 ;; Return value:  Size  Location     Type
 14473 ;;                  1    wreg      void 
 14474 ;; Registers used:
 14475 ;;		wreg, status,2
 14476 ;; Tracked objects:
 14477 ;;		On entry : 0/0
 14478 ;;		On exit  : 0/0
 14479 ;;		Unchanged: 0/0
 14480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14481 ;;      Params:         0       0       0       0       0       0       0
 14482 ;;      Locals:         0       0       0       0       0       0       0
 14483 ;;      Temps:          0       0       0       0       0       0       0
 14484 ;;      Totals:         0       0       0       0       0       0       0
 14485 ;;Total ram usage:        0 bytes
 14486 ;; Hardware stack levels used:    1
 14487 ;; Hardware stack levels required when called:    1
 14488 ;; This function calls:
 14489 ;;		Nothing
 14490 ;; This function is called by:
 14491 ;;		_main
 14492 ;; This function uses a non-reentrant model
 14493 ;;
 14494                           
 14495                           	psect	text58
 14496  00659C                     __ptext58:
 14497                           	callstack 0
 14498  00659C                     _configure_analog_digital_conversion:
 14499                           	callstack 0
 14500  00659C  FFFF               	dw	65535	; assembler added errata NOP
 14501  00659E                     
 14502                           ;oven.c: 9:     LATA = 0;
 14503  00659E  0E00               	movlw	0
 14504  0065A0  6E89               	movwf	137,c	;volatile
 14505                           
 14506                           ;oven.c: 10:     PORTA = 0;
 14507  0065A2  0E00               	movlw	0
 14508  0065A4  6E80               	movwf	128,c	;volatile
 14509  0065A6                     
 14510                           ;oven.c: 11:     TRISA = 0xFF;
 14511  0065A6  6892               	setf	146,c	;volatile
 14512                           
 14513                           ;oven.c: 12:     ADCON0 = 0;
 14514  0065A8  0E00               	movlw	0
 14515  0065AA  6EC2               	movwf	194,c	;volatile
 14516  0065AC                     
 14517                           ;oven.c: 13:     ADCON0bits.CHS0 = 0;
 14518  0065AC  96C2               	bcf	194,3,c	;volatile
 14519  0065AE                     
 14520                           ;oven.c: 14:     ADCON0bits.CHS1 = 0;
 14521  0065AE  98C2               	bcf	194,4,c	;volatile
 14522  0065B0                     
 14523                           ;oven.c: 15:     ADCON0bits.CHS2 = 1;
 14524  0065B0  8AC2               	bsf	194,5,c	;volatile
 14525  0065B2                     
 14526                           ;oven.c: 16:     ADCON0bits.ADON = 1;
 14527  0065B2  80C2               	bsf	194,0,c	;volatile
 14528                           
 14529                           ;oven.c: 17:     ADRESH = 0;
 14530  0065B4  0E00               	movlw	0
 14531  0065B6  6EC4               	movwf	196,c	;volatile
 14532                           
 14533                           ;oven.c: 18:     ADRESL = 0;
 14534  0065B8  0E00               	movlw	0
 14535  0065BA  6EC3               	movwf	195,c	;volatile
 14536                           
 14537                           ;oven.c: 19:     ADCON1 = 0;
 14538  0065BC  0E00               	movlw	0
 14539  0065BE  6EC1               	movwf	193,c	;volatile
 14540  0065C0  0012               	return		;funcret
 14541  0065C2  FFFF               	dw	65535	; errata NOP
 14542  0065C4                     __end_of_configure_analog_digital_conversion:
 14543                           	callstack 0
 14544                           
 14545 ;; *************** function _check_temperature *****************
 14546 ;; Defined at:
 14547 ;;		line 36 in file "oven.c"
 14548 ;; Parameters:    Size  Location     Type
 14549 ;;  temp_to_be_c    2   30[BANK0 ] int 
 14550 ;; Auto vars:     Size  Location     Type
 14551 ;;  grad            4   32[BANK0 ] float 
 14552 ;; Return value:  Size  Location     Type
 14553 ;;                  2   30[BANK0 ] int 
 14554 ;; Registers used:
 14555 ;;		wreg, status,2, status,0, cstack
 14556 ;; Tracked objects:
 14557 ;;		On entry : 0/0
 14558 ;;		On exit  : 0/0
 14559 ;;		Unchanged: 0/0
 14560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14561 ;;      Params:         0       2       0       0       0       0       0
 14562 ;;      Locals:         0       4       0       0       0       0       0
 14563 ;;      Temps:          0       0       0       0       0       0       0
 14564 ;;      Totals:         0       6       0       0       0       0       0
 14565 ;;Total ram usage:        6 bytes
 14566 ;; Hardware stack levels used:    1
 14567 ;; Hardware stack levels required when called:    2
 14568 ;; This function calls:
 14569 ;;		___awdiv
 14570 ;;		___flge
 14571 ;;		___xxtofl
 14572 ;;		_abs
 14573 ;; This function is called by:
 14574 ;;		_main
 14575 ;; This function uses a non-reentrant model
 14576 ;;
 14577                           
 14578                           	psect	text59
 14579  0070FE                     __ptext59:
 14580                           	callstack 0
 14581  0070FE                     _check_temperature:
 14582                           	callstack 0
 14583  0070FE  FFFF               	dw	65535	; assembler added errata NOP
 14584  007100                     
 14585                           ;oven.c: 37:     float grad = abs(temp_to_be_checked - (-63))/5;
 14586  007100  0E00               	movlw	0
 14587  007102  6E1A               	movwf	(___awdiv@divisor+1)^0,c
 14588  007104  0E05               	movlw	5
 14589  007106  6E19               	movwf	___awdiv@divisor^0,c
 14590  007108  0E3F               	movlw	63
 14591  00710A  0100               	movlb	0	; () banked
 14592  00710C  25D6               	addwf	check_temperature@temp_to_be_checked& (0+255),w,b
 14593  00710E  6E13               	movwf	abs@a^0,c
 14594  007110  0E00               	movlw	0
 14595  007112  21D7               	addwfc	(check_temperature@temp_to_be_checked+1)& (0+255),w,b
 14596  007114  6E14               	movwf	(abs@a+1)^0,c
 14597  007116  EC77  F034         	call	_abs	;wreg free
 14598  00711A  C013  F017         	movff	?_abs,___awdiv@dividend
 14599  00711E  C014  F018         	movff	?_abs+1,___awdiv@dividend+1
 14600  007122  EC46  F03A         	call	___awdiv	;wreg free
 14601  007126  C017  F01F         	movff	?___awdiv,___xxtofl@val
 14602  00712A  C018  F020         	movff	?___awdiv+1,___xxtofl@val+1
 14603  00712E  0E00               	movlw	0
 14604  007130  BE20               	btfsc	(___xxtofl@val+1)^0,7,c
 14605  007132  0EFF               	movlw	-1
 14606  007134  6E21               	movwf	(___xxtofl@val+2)^0,c
 14607  007136  6E22               	movwf	(___xxtofl@val+3)^0,c
 14608  007138  0E01               	movlw	1
 14609  00713A  EC45  F01C         	call	___xxtofl
 14610  00713E  C01F  F0D8         	movff	?___xxtofl,check_temperature@grad
 14611  007142  C020  F0D9         	movff	?___xxtofl+1,check_temperature@grad+1
 14612  007146  C021  F0DA         	movff	?___xxtofl+2,check_temperature@grad+2
 14613  00714A  C022  F0DB         	movff	?___xxtofl+3,check_temperature@grad+3
 14614                           
 14615                           ;oven.c: 38:     if (grad >= 12 && grad <= 13){
 14616  00714E  C0D8  F001         	movff	check_temperature@grad,___flge@ff1
 14617  007152  C0D9  F002         	movff	check_temperature@grad+1,___flge@ff1+1
 14618  007156  C0DA  F003         	movff	check_temperature@grad+2,___flge@ff1+2
 14619  00715A  C0DB  F004         	movff	check_temperature@grad+3,___flge@ff1+3
 14620  00715E  0E00               	movlw	0
 14621  007160  6E05               	movwf	___flge@ff2^0,c
 14622  007162  0E00               	movlw	0
 14623  007164  6E06               	movwf	(___flge@ff2+1)^0,c
 14624  007166  0E40               	movlw	64
 14625  007168  6E07               	movwf	(___flge@ff2+2)^0,c
 14626  00716A  0E41               	movlw	65
 14627  00716C  6E08               	movwf	(___flge@ff2+3)^0,c
 14628  00716E  ECC5  F03C         	call	___flge	;wreg free
 14629  007172  A0D8               	btfss	status,0,c
 14630  007174  EFBE  F038         	goto	u6731
 14631  007178  EFC1  F038         	goto	u6730
 14632  00717C                     u6731:
 14633  00717C  FFFF               	dw	65535	; assembler added errata NOP
 14634  00717E  EFE4  F038         	goto	l5460
 14635  007182                     u6730:
 14636  007182  FFFF               	dw	65535	; assembler added errata NOP
 14637  007184  0E00               	movlw	0
 14638  007186  6E01               	movwf	___flge@ff1^0,c
 14639  007188  0E00               	movlw	0
 14640  00718A  6E02               	movwf	(___flge@ff1+1)^0,c
 14641  00718C  0E50               	movlw	80
 14642  00718E  6E03               	movwf	(___flge@ff1+2)^0,c
 14643  007190  0E41               	movlw	65
 14644  007192  6E04               	movwf	(___flge@ff1+3)^0,c
 14645  007194  C0D8  F005         	movff	check_temperature@grad,___flge@ff2
 14646  007198  C0D9  F006         	movff	check_temperature@grad+1,___flge@ff2+1
 14647  00719C  C0DA  F007         	movff	check_temperature@grad+2,___flge@ff2+2
 14648  0071A0  C0DB  F008         	movff	check_temperature@grad+3,___flge@ff2+3
 14649  0071A4  ECC5  F03C         	call	___flge	;wreg free
 14650  0071A8  A0D8               	btfss	status,0,c
 14651  0071AA  EFD9  F038         	goto	u6741
 14652  0071AE  EFDC  F038         	goto	u6740
 14653  0071B2                     u6741:
 14654  0071B2  FFFF               	dw	65535	; assembler added errata NOP
 14655  0071B4  EFE4  F038         	goto	l5460
 14656  0071B8                     u6740:
 14657  0071B8  FFFF               	dw	65535	; assembler added errata NOP
 14658  0071BA                     
 14659                           ;oven.c: 39:         return 1;
 14660  0071BA  0E00               	movlw	0
 14661  0071BC  0100               	movlb	0	; () banked
 14662  0071BE  6FD7               	movwf	(?_check_temperature+1)& (0+255),b
 14663  0071C0  0E01               	movlw	1
 14664  0071C2  6FD6               	movwf	?_check_temperature& (0+255),b
 14665  0071C4  EFEA  F038         	goto	l384
 14666  0071C8                     l5460:
 14667  0071C8  FFFF               	dw	65535	; assembler added errata NOP
 14668                           
 14669                           ;oven.c: 41:         return 0;
 14670  0071CA  0E00               	movlw	0
 14671  0071CC  0100               	movlb	0	; () banked
 14672  0071CE  6FD7               	movwf	(?_check_temperature+1)& (0+255),b
 14673  0071D0  0E00               	movlw	0
 14674  0071D2  6FD6               	movwf	?_check_temperature& (0+255),b
 14675  0071D4                     l384:
 14676  0071D4  FFFF               	dw	65535	; assembler added errata NOP
 14677                           
 14678                           ; BSR set to: 0
 14679  0071D6  0012               	return		;funcret
 14680  0071D8  FFFF               	dw	65535	; errata NOP
 14681  0071DA                     __end_of_check_temperature:
 14682                           	callstack 0
 14683                           
 14684 ;; *************** function _abs *****************
 14685 ;; Defined at:
 14686 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
 14687 ;; Parameters:    Size  Location     Type
 14688 ;;  a               2   18[COMRAM] int 
 14689 ;; Auto vars:     Size  Location     Type
 14690 ;;		None
 14691 ;; Return value:  Size  Location     Type
 14692 ;;                  2   18[COMRAM] int 
 14693 ;; Registers used:
 14694 ;;		wreg, status,2, status,0
 14695 ;; Tracked objects:
 14696 ;;		On entry : 0/0
 14697 ;;		On exit  : 0/0
 14698 ;;		Unchanged: 0/0
 14699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14700 ;;      Params:         2       0       0       0       0       0       0
 14701 ;;      Locals:         0       0       0       0       0       0       0
 14702 ;;      Temps:          2       0       0       0       0       0       0
 14703 ;;      Totals:         4       0       0       0       0       0       0
 14704 ;;Total ram usage:        4 bytes
 14705 ;; Hardware stack levels used:    1
 14706 ;; Hardware stack levels required when called:    1
 14707 ;; This function calls:
 14708 ;;		Nothing
 14709 ;; This function is called by:
 14710 ;;		_check_temperature
 14711 ;;		_dtoa
 14712 ;; This function uses a non-reentrant model
 14713 ;;
 14714                           
 14715                           	psect	text60
 14716  0068EE                     __ptext60:
 14717                           	callstack 0
 14718  0068EE                     _abs:
 14719                           	callstack 0
 14720  0068EE  FFFF               	dw	65535	; assembler added errata NOP
 14721  0068F0  BE14               	btfsc	(abs@a+1)^0,7,c
 14722  0068F2  EF86  F034         	goto	u3700
 14723  0068F6  5014               	movf	(abs@a+1)^0,w,c
 14724  0068F8  E106               	bnz	u3701
 14725  0068FA  0413               	decf	abs@a^0,w,c
 14726  0068FC  B0D8               	btfsc	status,0,c
 14727  0068FE  EF83  F034         	goto	u3701
 14728  006902  EF86  F034         	goto	u3700
 14729  006906                     u3701:
 14730  006906  FFFF               	dw	65535	; assembler added errata NOP
 14731  006908  EF95  F034         	goto	l1063
 14732  00690C                     u3700:
 14733  00690C  FFFF               	dw	65535	; assembler added errata NOP
 14734  00690E  C013  F015         	movff	abs@a,??_abs
 14735  006912  C014  F016         	movff	abs@a+1,??_abs+1
 14736  006916  1E15               	comf	??_abs^0,f,c
 14737  006918  1E16               	comf	(??_abs+1)^0,f,c
 14738  00691A  4A15               	infsnz	??_abs^0,f,c
 14739  00691C  2A16               	incf	(??_abs+1)^0,f,c
 14740  00691E  C015  F013         	movff	??_abs,?_abs
 14741  006922  C016  F014         	movff	??_abs+1,?_abs+1
 14742  006926  EF9A  F034         	goto	l1066
 14743  00692A                     l1063:
 14744  00692A  FFFF               	dw	65535	; assembler added errata NOP
 14745  00692C  C013  F013         	movff	abs@a,?_abs
 14746  006930  C014  F014         	movff	abs@a+1,?_abs+1
 14747  006934                     l1066:
 14748  006934  FFFF               	dw	65535	; assembler added errata NOP
 14749  006936  0012               	return		;funcret
 14750  006938  FFFF               	dw	65535	; errata NOP
 14751  00693A                     __end_of_abs:
 14752                           	callstack 0
 14753                           
 14754 ;; *************** function ___xxtofl *****************
 14755 ;; Defined at:
 14756 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
 14757 ;; Parameters:    Size  Location     Type
 14758 ;;  sign            1    wreg     unsigned char 
 14759 ;;  val             4   30[COMRAM] long 
 14760 ;; Auto vars:     Size  Location     Type
 14761 ;;  sign            1   38[COMRAM] unsigned char 
 14762 ;;  arg             4   40[COMRAM] unsigned long 
 14763 ;;  exp             1   39[COMRAM] unsigned char 
 14764 ;; Return value:  Size  Location     Type
 14765 ;;                  4   30[COMRAM] unsigned char 
 14766 ;; Registers used:
 14767 ;;		wreg, status,2, status,0
 14768 ;; Tracked objects:
 14769 ;;		On entry : 0/0
 14770 ;;		On exit  : 0/0
 14771 ;;		Unchanged: 0/0
 14772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14773 ;;      Params:         4       0       0       0       0       0       0
 14774 ;;      Locals:         6       0       0       0       0       0       0
 14775 ;;      Temps:          4       0       0       0       0       0       0
 14776 ;;      Totals:        14       0       0       0       0       0       0
 14777 ;;Total ram usage:       14 bytes
 14778 ;; Hardware stack levels used:    1
 14779 ;; Hardware stack levels required when called:    1
 14780 ;; This function calls:
 14781 ;;		Nothing
 14782 ;; This function is called by:
 14783 ;;		_get_temperature
 14784 ;;		_check_temperature
 14785 ;; This function uses a non-reentrant model
 14786 ;;
 14787                           
 14788                           	psect	text61
 14789  00388A                     __ptext61:
 14790                           	callstack 0
 14791  00388A                     ___xxtofl:
 14792                           	callstack 0
 14793  00388A  FFFF               	dw	65535	; assembler added errata NOP
 14794                           
 14795                           ;incstack = 0
 14796                           ;___xxtofl@sign stored from wreg
 14797  00388C  6E27               	movwf	___xxtofl@sign^0,c
 14798  00388E  5027               	movf	___xxtofl@sign^0,w,c
 14799  003890  B4D8               	btfsc	status,2,c
 14800  003892  EF4D  F01C         	goto	u6211
 14801  003896  EF50  F01C         	goto	u6210
 14802  00389A                     u6211:
 14803  00389A  FFFF               	dw	65535	; assembler added errata NOP
 14804  00389C  EF75  F01C         	goto	l1043
 14805  0038A0                     u6210:
 14806  0038A0  FFFF               	dw	65535	; assembler added errata NOP
 14807  0038A2  BE22               	btfsc	(___xxtofl@val+3)^0,7,c
 14808  0038A4  EF59  F01C         	goto	u6220
 14809  0038A8  EF56  F01C         	goto	u6221
 14810  0038AC                     u6221:
 14811  0038AC  FFFF               	dw	65535	; assembler added errata NOP
 14812  0038AE  EF75  F01C         	goto	l1043
 14813  0038B2                     u6220:
 14814  0038B2  FFFF               	dw	65535	; assembler added errata NOP
 14815  0038B4  C01F  F023         	movff	___xxtofl@val,??___xxtofl
 14816  0038B8  C020  F024         	movff	___xxtofl@val+1,??___xxtofl+1
 14817  0038BC  C021  F025         	movff	___xxtofl@val+2,??___xxtofl+2
 14818  0038C0  C022  F026         	movff	___xxtofl@val+3,??___xxtofl+3
 14819  0038C4  1E23               	comf	??___xxtofl^0,f,c
 14820  0038C6  1E24               	comf	(??___xxtofl+1)^0,f,c
 14821  0038C8  1E25               	comf	(??___xxtofl+2)^0,f,c
 14822  0038CA  1E26               	comf	(??___xxtofl+3)^0,f,c
 14823  0038CC  2A23               	incf	??___xxtofl^0,f,c
 14824  0038CE  0E00               	movlw	0
 14825  0038D0  2224               	addwfc	(??___xxtofl+1)^0,f,c
 14826  0038D2  2225               	addwfc	(??___xxtofl+2)^0,f,c
 14827  0038D4  2226               	addwfc	(??___xxtofl+3)^0,f,c
 14828  0038D6  C023  F029         	movff	??___xxtofl,___xxtofl@arg
 14829  0038DA  C024  F02A         	movff	??___xxtofl+1,___xxtofl@arg+1
 14830  0038DE  C025  F02B         	movff	??___xxtofl+2,___xxtofl@arg+2
 14831  0038E2  C026  F02C         	movff	??___xxtofl+3,___xxtofl@arg+3
 14832  0038E6  EF7E  F01C         	goto	l5046
 14833  0038EA                     l1043:
 14834  0038EA  FFFF               	dw	65535	; assembler added errata NOP
 14835  0038EC  C01F  F029         	movff	___xxtofl@val,___xxtofl@arg
 14836  0038F0  C020  F02A         	movff	___xxtofl@val+1,___xxtofl@arg+1
 14837  0038F4  C021  F02B         	movff	___xxtofl@val+2,___xxtofl@arg+2
 14838  0038F8  C022  F02C         	movff	___xxtofl@val+3,___xxtofl@arg+3
 14839  0038FC                     l5046:
 14840  0038FC  FFFF               	dw	65535	; assembler added errata NOP
 14841  0038FE  501F               	movf	___xxtofl@val^0,w,c
 14842  003900  1020               	iorwf	(___xxtofl@val+1)^0,w,c
 14843  003902  1021               	iorwf	(___xxtofl@val+2)^0,w,c
 14844  003904  1022               	iorwf	(___xxtofl@val+3)^0,w,c
 14845  003906  A4D8               	btfss	status,2,c
 14846  003908  EF88  F01C         	goto	u6231
 14847  00390C  EF8B  F01C         	goto	u6230
 14848  003910                     u6231:
 14849  003910  FFFF               	dw	65535	; assembler added errata NOP
 14850  003912  EF96  F01C         	goto	l5052
 14851  003916                     u6230:
 14852  003916  FFFF               	dw	65535	; assembler added errata NOP
 14853  003918  0E00               	movlw	0
 14854  00391A  6E1F               	movwf	?___xxtofl^0,c
 14855  00391C  0E00               	movlw	0
 14856  00391E  6E20               	movwf	(?___xxtofl+1)^0,c
 14857  003920  0E00               	movlw	0
 14858  003922  6E21               	movwf	(?___xxtofl+2)^0,c
 14859  003924  0E00               	movlw	0
 14860  003926  6E22               	movwf	(?___xxtofl+3)^0,c
 14861  003928  EF3E  F01D         	goto	l1046
 14862  00392C                     l5052:
 14863  00392C  FFFF               	dw	65535	; assembler added errata NOP
 14864  00392E  0E96               	movlw	150
 14865  003930  6E28               	movwf	___xxtofl@exp^0,c
 14866  003932  EFA2  F01C         	goto	l5056
 14867  003936                     l5054:
 14868  003936  FFFF               	dw	65535	; assembler added errata NOP
 14869  003938  2A28               	incf	___xxtofl@exp^0,f,c
 14870  00393A  90D8               	bcf	status,0,c
 14871  00393C  322C               	rrcf	(___xxtofl@arg+3)^0,f,c
 14872  00393E  322B               	rrcf	(___xxtofl@arg+2)^0,f,c
 14873  003940  322A               	rrcf	(___xxtofl@arg+1)^0,f,c
 14874  003942  3229               	rrcf	___xxtofl@arg^0,f,c
 14875  003944                     l5056:
 14876  003944  FFFF               	dw	65535	; assembler added errata NOP
 14877  003946  0E00               	movlw	0
 14878  003948  1429               	andwf	___xxtofl@arg^0,w,c
 14879  00394A  6E23               	movwf	??___xxtofl^0,c
 14880  00394C  0E00               	movlw	0
 14881  00394E  142A               	andwf	(___xxtofl@arg+1)^0,w,c
 14882  003950  6E24               	movwf	(??___xxtofl+1)^0,c
 14883  003952  0E00               	movlw	0
 14884  003954  142B               	andwf	(___xxtofl@arg+2)^0,w,c
 14885  003956  6E25               	movwf	(??___xxtofl+2)^0,c
 14886  003958  0EFE               	movlw	254
 14887  00395A  142C               	andwf	(___xxtofl@arg+3)^0,w,c
 14888  00395C  6E26               	movwf	(??___xxtofl+3)^0,c
 14889  00395E  5023               	movf	??___xxtofl^0,w,c
 14890  003960  1024               	iorwf	(??___xxtofl+1)^0,w,c
 14891  003962  1025               	iorwf	(??___xxtofl+2)^0,w,c
 14892  003964  1026               	iorwf	(??___xxtofl+3)^0,w,c
 14893  003966  A4D8               	btfss	status,2,c
 14894  003968  EFB8  F01C         	goto	u6241
 14895  00396C  EFBB  F01C         	goto	u6240
 14896  003970                     u6241:
 14897  003970  FFFF               	dw	65535	; assembler added errata NOP
 14898  003972  EF9B  F01C         	goto	l5054
 14899  003976                     u6240:
 14900  003976  FFFF               	dw	65535	; assembler added errata NOP
 14901  003978  EFCB  F01C         	goto	l1050
 14902  00397C                     l5058:
 14903  00397C  FFFF               	dw	65535	; assembler added errata NOP
 14904  00397E  2A28               	incf	___xxtofl@exp^0,f,c
 14905  003980  0E01               	movlw	1
 14906  003982  2629               	addwf	___xxtofl@arg^0,f,c
 14907  003984  0E00               	movlw	0
 14908  003986  222A               	addwfc	(___xxtofl@arg+1)^0,f,c
 14909  003988  222B               	addwfc	(___xxtofl@arg+2)^0,f,c
 14910  00398A  222C               	addwfc	(___xxtofl@arg+3)^0,f,c
 14911  00398C  90D8               	bcf	status,0,c
 14912  00398E  322C               	rrcf	(___xxtofl@arg+3)^0,f,c
 14913  003990  322B               	rrcf	(___xxtofl@arg+2)^0,f,c
 14914  003992  322A               	rrcf	(___xxtofl@arg+1)^0,f,c
 14915  003994  3229               	rrcf	___xxtofl@arg^0,f,c
 14916  003996                     l1050:
 14917  003996  FFFF               	dw	65535	; assembler added errata NOP
 14918  003998  0E00               	movlw	0
 14919  00399A  1429               	andwf	___xxtofl@arg^0,w,c
 14920  00399C  6E23               	movwf	??___xxtofl^0,c
 14921  00399E  0E00               	movlw	0
 14922  0039A0  142A               	andwf	(___xxtofl@arg+1)^0,w,c
 14923  0039A2  6E24               	movwf	(??___xxtofl+1)^0,c
 14924  0039A4  0E00               	movlw	0
 14925  0039A6  142B               	andwf	(___xxtofl@arg+2)^0,w,c
 14926  0039A8  6E25               	movwf	(??___xxtofl+2)^0,c
 14927  0039AA  0EFF               	movlw	255
 14928  0039AC  142C               	andwf	(___xxtofl@arg+3)^0,w,c
 14929  0039AE  6E26               	movwf	(??___xxtofl+3)^0,c
 14930  0039B0  5023               	movf	??___xxtofl^0,w,c
 14931  0039B2  1024               	iorwf	(??___xxtofl+1)^0,w,c
 14932  0039B4  1025               	iorwf	(??___xxtofl+2)^0,w,c
 14933  0039B6  1026               	iorwf	(??___xxtofl+3)^0,w,c
 14934  0039B8  A4D8               	btfss	status,2,c
 14935  0039BA  EFE1  F01C         	goto	u6251
 14936  0039BE  EFE4  F01C         	goto	u6250
 14937  0039C2                     u6251:
 14938  0039C2  FFFF               	dw	65535	; assembler added errata NOP
 14939  0039C4  EFBE  F01C         	goto	l5058
 14940  0039C8                     u6250:
 14941  0039C8  FFFF               	dw	65535	; assembler added errata NOP
 14942  0039CA  EFEE  F01C         	goto	l5066
 14943  0039CE                     l5064:
 14944  0039CE  FFFF               	dw	65535	; assembler added errata NOP
 14945  0039D0  0628               	decf	___xxtofl@exp^0,f,c
 14946  0039D2  90D8               	bcf	status,0,c
 14947  0039D4  3629               	rlcf	___xxtofl@arg^0,f,c
 14948  0039D6  362A               	rlcf	(___xxtofl@arg+1)^0,f,c
 14949  0039D8  362B               	rlcf	(___xxtofl@arg+2)^0,f,c
 14950  0039DA  362C               	rlcf	(___xxtofl@arg+3)^0,f,c
 14951  0039DC                     l5066:
 14952  0039DC  FFFF               	dw	65535	; assembler added errata NOP
 14953  0039DE  BE2B               	btfsc	(___xxtofl@arg+2)^0,7,c
 14954  0039E0  EFF4  F01C         	goto	u6261
 14955  0039E4  EFF7  F01C         	goto	u6260
 14956  0039E8                     u6261:
 14957  0039E8  FFFF               	dw	65535	; assembler added errata NOP
 14958  0039EA  EF01  F01D         	goto	l1057
 14959  0039EE                     u6260:
 14960  0039EE  FFFF               	dw	65535	; assembler added errata NOP
 14961  0039F0  0E02               	movlw	2
 14962  0039F2  6028               	cpfslt	___xxtofl@exp^0,c
 14963  0039F4  EFFE  F01C         	goto	u6271
 14964  0039F8  EF01  F01D         	goto	u6270
 14965  0039FC                     u6271:
 14966  0039FC  FFFF               	dw	65535	; assembler added errata NOP
 14967  0039FE  EFE7  F01C         	goto	l5064
 14968  003A02                     u6270:
 14969  003A02                     l1057:
 14970  003A02  FFFF               	dw	65535	; assembler added errata NOP
 14971  003A04  B028               	btfsc	___xxtofl@exp^0,0,c
 14972  003A06  EF07  F01D         	goto	u6281
 14973  003A0A  EF0A  F01D         	goto	u6280
 14974  003A0E                     u6281:
 14975  003A0E  FFFF               	dw	65535	; assembler added errata NOP
 14976  003A10  EF0C  F01D         	goto	l5072
 14977  003A14                     u6280:
 14978  003A14  FFFF               	dw	65535	; assembler added errata NOP
 14979  003A16  9E2B               	bcf	(___xxtofl@arg+2)^0,7,c
 14980  003A18                     l5072:
 14981  003A18  FFFF               	dw	65535	; assembler added errata NOP
 14982  003A1A  90D8               	bcf	status,0,c
 14983  003A1C  3228               	rrcf	___xxtofl@exp^0,f,c
 14984  003A1E  C028  F023         	movff	___xxtofl@exp,??___xxtofl
 14985  003A22  6A24               	clrf	(??___xxtofl+1)^0,c
 14986  003A24  6A25               	clrf	(??___xxtofl+2)^0,c
 14987  003A26  6A26               	clrf	(??___xxtofl+3)^0,c
 14988  003A28  C023  F026         	movff	??___xxtofl,??___xxtofl+3
 14989  003A2C  6A25               	clrf	(??___xxtofl+2)^0,c
 14990  003A2E  6A24               	clrf	(??___xxtofl+1)^0,c
 14991  003A30  6A23               	clrf	??___xxtofl^0,c
 14992  003A32  5023               	movf	??___xxtofl^0,w,c
 14993  003A34  1229               	iorwf	___xxtofl@arg^0,f,c
 14994  003A36  5024               	movf	(??___xxtofl+1)^0,w,c
 14995  003A38  122A               	iorwf	(___xxtofl@arg+1)^0,f,c
 14996  003A3A  5025               	movf	(??___xxtofl+2)^0,w,c
 14997  003A3C  122B               	iorwf	(___xxtofl@arg+2)^0,f,c
 14998  003A3E  5026               	movf	(??___xxtofl+3)^0,w,c
 14999  003A40  122C               	iorwf	(___xxtofl@arg+3)^0,f,c
 15000  003A42  5027               	movf	___xxtofl@sign^0,w,c
 15001  003A44  B4D8               	btfsc	status,2,c
 15002  003A46  EF27  F01D         	goto	u6291
 15003  003A4A  EF2A  F01D         	goto	u6290
 15004  003A4E                     u6291:
 15005  003A4E  FFFF               	dw	65535	; assembler added errata NOP
 15006  003A50  EF35  F01D         	goto	l5082
 15007  003A54                     u6290:
 15008  003A54  FFFF               	dw	65535	; assembler added errata NOP
 15009  003A56  BE22               	btfsc	(___xxtofl@val+3)^0,7,c
 15010  003A58  EF33  F01D         	goto	u6300
 15011  003A5C  EF30  F01D         	goto	u6301
 15012  003A60                     u6301:
 15013  003A60  FFFF               	dw	65535	; assembler added errata NOP
 15014  003A62  EF35  F01D         	goto	l5082
 15015  003A66                     u6300:
 15016  003A66  FFFF               	dw	65535	; assembler added errata NOP
 15017  003A68  8E2C               	bsf	(___xxtofl@arg+3)^0,7,c
 15018  003A6A                     l5082:
 15019  003A6A  FFFF               	dw	65535	; assembler added errata NOP
 15020  003A6C  C029  F01F         	movff	___xxtofl@arg,?___xxtofl
 15021  003A70  C02A  F020         	movff	___xxtofl@arg+1,?___xxtofl+1
 15022  003A74  C02B  F021         	movff	___xxtofl@arg+2,?___xxtofl+2
 15023  003A78  C02C  F022         	movff	___xxtofl@arg+3,?___xxtofl+3
 15024  003A7C                     l1046:
 15025  003A7C  FFFF               	dw	65535	; assembler added errata NOP
 15026  003A7E  0012               	return		;funcret
 15027  003A80  FFFF               	dw	65535	; errata NOP
 15028  003A82                     __end_of___xxtofl:
 15029                           	callstack 0
 15030                           
 15031 ;; *************** function ___flge *****************
 15032 ;; Defined at:
 15033 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
 15034 ;; Parameters:    Size  Location     Type
 15035 ;;  ff1             4    0[COMRAM] unsigned char 
 15036 ;;  ff2             4    4[COMRAM] unsigned char 
 15037 ;; Auto vars:     Size  Location     Type
 15038 ;;		None
 15039 ;; Return value:  Size  Location     Type
 15040 ;;		None               void
 15041 ;; Registers used:
 15042 ;;		wreg, status,2, status,0
 15043 ;; Tracked objects:
 15044 ;;		On entry : 0/0
 15045 ;;		On exit  : 0/0
 15046 ;;		Unchanged: 0/0
 15047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15048 ;;      Params:         8       0       0       0       0       0       0
 15049 ;;      Locals:         0       0       0       0       0       0       0
 15050 ;;      Temps:          4       0       0       0       0       0       0
 15051 ;;      Totals:        12       0       0       0       0       0       0
 15052 ;;Total ram usage:       12 bytes
 15053 ;; Hardware stack levels used:    1
 15054 ;; Hardware stack levels required when called:    1
 15055 ;; This function calls:
 15056 ;;		Nothing
 15057 ;; This function is called by:
 15058 ;;		_check_temperature
 15059 ;;		_roundf
 15060 ;; This function uses a non-reentrant model
 15061 ;;
 15062                           
 15063                           	psect	text62
 15064  00798A                     __ptext62:
 15065                           	callstack 0
 15066  00798A                     ___flge:
 15067                           	callstack 0
 15068  00798A  FFFF               	dw	65535	; assembler added errata NOP
 15069  00798C  0E00               	movlw	0
 15070  00798E  1401               	andwf	___flge@ff1^0,w,c
 15071  007990  6E09               	movwf	??___flge^0,c
 15072  007992  0E00               	movlw	0
 15073  007994  1402               	andwf	(___flge@ff1+1)^0,w,c
 15074  007996  6E0A               	movwf	(??___flge+1)^0,c
 15075  007998  0E80               	movlw	128
 15076  00799A  1403               	andwf	(___flge@ff1+2)^0,w,c
 15077  00799C  6E0B               	movwf	(??___flge+2)^0,c
 15078  00799E  0E7F               	movlw	127
 15079  0079A0  1404               	andwf	(___flge@ff1+3)^0,w,c
 15080  0079A2  6E0C               	movwf	(??___flge+3)^0,c
 15081  0079A4  5009               	movf	??___flge^0,w,c
 15082  0079A6  100A               	iorwf	(??___flge+1)^0,w,c
 15083  0079A8  100B               	iorwf	(??___flge+2)^0,w,c
 15084  0079AA  100C               	iorwf	(??___flge+3)^0,w,c
 15085  0079AC  A4D8               	btfss	status,2,c
 15086  0079AE  EFDB  F03C         	goto	u6081
 15087  0079B2  EFDE  F03C         	goto	u6080
 15088  0079B6                     u6081:
 15089  0079B6  FFFF               	dw	65535	; assembler added errata NOP
 15090  0079B8  EFE7  F03C         	goto	l4970
 15091  0079BC                     u6080:
 15092  0079BC  FFFF               	dw	65535	; assembler added errata NOP
 15093  0079BE  0E00               	movlw	0
 15094  0079C0  6E01               	movwf	___flge@ff1^0,c
 15095  0079C2  0E00               	movlw	0
 15096  0079C4  6E02               	movwf	(___flge@ff1+1)^0,c
 15097  0079C6  0E00               	movlw	0
 15098  0079C8  6E03               	movwf	(___flge@ff1+2)^0,c
 15099  0079CA  0E00               	movlw	0
 15100  0079CC  6E04               	movwf	(___flge@ff1+3)^0,c
 15101  0079CE                     l4970:
 15102  0079CE  FFFF               	dw	65535	; assembler added errata NOP
 15103  0079D0  0E00               	movlw	0
 15104  0079D2  1405               	andwf	___flge@ff2^0,w,c
 15105  0079D4  6E09               	movwf	??___flge^0,c
 15106  0079D6  0E00               	movlw	0
 15107  0079D8  1406               	andwf	(___flge@ff2+1)^0,w,c
 15108  0079DA  6E0A               	movwf	(??___flge+1)^0,c
 15109  0079DC  0E80               	movlw	128
 15110  0079DE  1407               	andwf	(___flge@ff2+2)^0,w,c
 15111  0079E0  6E0B               	movwf	(??___flge+2)^0,c
 15112  0079E2  0E7F               	movlw	127
 15113  0079E4  1408               	andwf	(___flge@ff2+3)^0,w,c
 15114  0079E6  6E0C               	movwf	(??___flge+3)^0,c
 15115  0079E8  5009               	movf	??___flge^0,w,c
 15116  0079EA  100A               	iorwf	(??___flge+1)^0,w,c
 15117  0079EC  100B               	iorwf	(??___flge+2)^0,w,c
 15118  0079EE  100C               	iorwf	(??___flge+3)^0,w,c
 15119  0079F0  A4D8               	btfss	status,2,c
 15120  0079F2  EFFD  F03C         	goto	u6091
 15121  0079F6  EF00  F03D         	goto	u6090
 15122  0079FA                     u6091:
 15123  0079FA  FFFF               	dw	65535	; assembler added errata NOP
 15124  0079FC  EF09  F03D         	goto	l4974
 15125  007A00                     u6090:
 15126  007A00  FFFF               	dw	65535	; assembler added errata NOP
 15127  007A02  0E00               	movlw	0
 15128  007A04  6E05               	movwf	___flge@ff2^0,c
 15129  007A06  0E00               	movlw	0
 15130  007A08  6E06               	movwf	(___flge@ff2+1)^0,c
 15131  007A0A  0E00               	movlw	0
 15132  007A0C  6E07               	movwf	(___flge@ff2+2)^0,c
 15133  007A0E  0E00               	movlw	0
 15134  007A10  6E08               	movwf	(___flge@ff2+3)^0,c
 15135  007A12                     l4974:
 15136  007A12  FFFF               	dw	65535	; assembler added errata NOP
 15137  007A14  AE04               	btfss	(___flge@ff1+3)^0,7,c
 15138  007A16  EF0F  F03D         	goto	u6101
 15139  007A1A  EF12  F03D         	goto	u6100
 15140  007A1E                     u6101:
 15141  007A1E  FFFF               	dw	65535	; assembler added errata NOP
 15142  007A20  EF1C  F03D         	goto	l4978
 15143  007A24                     u6100:
 15144  007A24  FFFF               	dw	65535	; assembler added errata NOP
 15145  007A26  6C01               	negf	___flge@ff1^0,c
 15146  007A28  1E02               	comf	(___flge@ff1+1)^0,f,c
 15147  007A2A  B0D8               	btfsc	status,0,c
 15148  007A2C  2A02               	incf	(___flge@ff1+1)^0,f,c
 15149  007A2E  1E03               	comf	(___flge@ff1+2)^0,f,c
 15150  007A30  B0D8               	btfsc	status,0,c
 15151  007A32  2A03               	incf	(___flge@ff1+2)^0,f,c
 15152  007A34  0E80               	movlw	128
 15153  007A36  5604               	subfwb	(___flge@ff1+3)^0,f,c
 15154  007A38                     l4978:
 15155  007A38  FFFF               	dw	65535	; assembler added errata NOP
 15156  007A3A  AE08               	btfss	(___flge@ff2+3)^0,7,c
 15157  007A3C  EF22  F03D         	goto	u6111
 15158  007A40  EF25  F03D         	goto	u6110
 15159  007A44                     u6111:
 15160  007A44  FFFF               	dw	65535	; assembler added errata NOP
 15161  007A46  EF2F  F03D         	goto	l653
 15162  007A4A                     u6110:
 15163  007A4A  FFFF               	dw	65535	; assembler added errata NOP
 15164  007A4C  6C05               	negf	___flge@ff2^0,c
 15165  007A4E  1E06               	comf	(___flge@ff2+1)^0,f,c
 15166  007A50  B0D8               	btfsc	status,0,c
 15167  007A52  2A06               	incf	(___flge@ff2+1)^0,f,c
 15168  007A54  1E07               	comf	(___flge@ff2+2)^0,f,c
 15169  007A56  B0D8               	btfsc	status,0,c
 15170  007A58  2A07               	incf	(___flge@ff2+2)^0,f,c
 15171  007A5A  0E80               	movlw	128
 15172  007A5C  5608               	subfwb	(___flge@ff2+3)^0,f,c
 15173  007A5E                     l653:
 15174  007A5E  FFFF               	dw	65535	; assembler added errata NOP
 15175  007A60  0E00               	movlw	0
 15176  007A62  1A01               	xorwf	___flge@ff1^0,f,c
 15177  007A64  0E00               	movlw	0
 15178  007A66  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 15179  007A68  0E00               	movlw	0
 15180  007A6A  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 15181  007A6C  0E80               	movlw	128
 15182  007A6E  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 15183  007A70  0E00               	movlw	0
 15184  007A72  1A05               	xorwf	___flge@ff2^0,f,c
 15185  007A74  0E00               	movlw	0
 15186  007A76  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 15187  007A78  0E00               	movlw	0
 15188  007A7A  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 15189  007A7C  0E80               	movlw	128
 15190  007A7E  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 15191  007A80  5005               	movf	___flge@ff2^0,w,c
 15192  007A82  5C01               	subwf	___flge@ff1^0,w,c
 15193  007A84  5006               	movf	(___flge@ff2+1)^0,w,c
 15194  007A86  5802               	subwfb	(___flge@ff1+1)^0,w,c
 15195  007A88  5007               	movf	(___flge@ff2+2)^0,w,c
 15196  007A8A  5803               	subwfb	(___flge@ff1+2)^0,w,c
 15197  007A8C  5008               	movf	(___flge@ff2+3)^0,w,c
 15198  007A8E  5804               	subwfb	(___flge@ff1+3)^0,w,c
 15199  007A90  B0D8               	btfsc	status,0,c
 15200  007A92  EF4D  F03D         	goto	u6121
 15201  007A96  EF50  F03D         	goto	u6120
 15202  007A9A                     u6121:
 15203  007A9A  FFFF               	dw	65535	; assembler added errata NOP
 15204  007A9C  EF54  F03D         	goto	l4984
 15205  007AA0                     u6120:
 15206  007AA0  FFFF               	dw	65535	; assembler added errata NOP
 15207  007AA2  90D8               	bcf	status,0,c
 15208  007AA4  EF56  F03D         	goto	l658
 15209  007AA8                     l4984:
 15210  007AA8  FFFF               	dw	65535	; assembler added errata NOP
 15211  007AAA  80D8               	bsf	status,0,c
 15212  007AAC                     l658:
 15213  007AAC  FFFF               	dw	65535	; assembler added errata NOP
 15214  007AAE  0012               	return		;funcret
 15215  007AB0  FFFF               	dw	65535	; errata NOP
 15216  007AB2                     __end_of___flge:
 15217                           	callstack 0
 15218                           
 15219 ;; *************** function ___awdiv *****************
 15220 ;; Defined at:
 15221 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
 15222 ;; Parameters:    Size  Location     Type
 15223 ;;  dividend        2   22[COMRAM] int 
 15224 ;;  divisor         2   24[COMRAM] int 
 15225 ;; Auto vars:     Size  Location     Type
 15226 ;;  quotient        2   28[COMRAM] int 
 15227 ;;  sign            1   27[COMRAM] unsigned char 
 15228 ;;  counter         1   26[COMRAM] unsigned char 
 15229 ;; Return value:  Size  Location     Type
 15230 ;;                  2   22[COMRAM] int 
 15231 ;; Registers used:
 15232 ;;		wreg, status,2, status,0
 15233 ;; Tracked objects:
 15234 ;;		On entry : 0/0
 15235 ;;		On exit  : 0/0
 15236 ;;		Unchanged: 0/0
 15237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15238 ;;      Params:         4       0       0       0       0       0       0
 15239 ;;      Locals:         4       0       0       0       0       0       0
 15240 ;;      Temps:          0       0       0       0       0       0       0
 15241 ;;      Totals:         8       0       0       0       0       0       0
 15242 ;;Total ram usage:        8 bytes
 15243 ;; Hardware stack levels used:    1
 15244 ;; Hardware stack levels required when called:    1
 15245 ;; This function calls:
 15246 ;;		Nothing
 15247 ;; This function is called by:
 15248 ;;		_check_temperature
 15249 ;; This function uses a non-reentrant model
 15250 ;;
 15251                           
 15252                           	psect	text63
 15253  00748C                     __ptext63:
 15254                           	callstack 0
 15255  00748C                     ___awdiv:
 15256                           	callstack 0
 15257  00748C  FFFF               	dw	65535	; assembler added errata NOP
 15258  00748E  0E00               	movlw	0
 15259  007490  6E1C               	movwf	___awdiv@sign^0,c
 15260  007492  BE1A               	btfsc	(___awdiv@divisor+1)^0,7,c
 15261  007494  EF51  F03A         	goto	u6460
 15262  007498  EF4E  F03A         	goto	u6461
 15263  00749C                     u6461:
 15264  00749C  FFFF               	dw	65535	; assembler added errata NOP
 15265  00749E  EF58  F03A         	goto	l5202
 15266  0074A2                     u6460:
 15267  0074A2  FFFF               	dw	65535	; assembler added errata NOP
 15268  0074A4  6C19               	negf	___awdiv@divisor^0,c
 15269  0074A6  1E1A               	comf	(___awdiv@divisor+1)^0,f,c
 15270  0074A8  B0D8               	btfsc	status,0,c
 15271  0074AA  2A1A               	incf	(___awdiv@divisor+1)^0,f,c
 15272  0074AC  0E01               	movlw	1
 15273  0074AE  6E1C               	movwf	___awdiv@sign^0,c
 15274  0074B0                     l5202:
 15275  0074B0  FFFF               	dw	65535	; assembler added errata NOP
 15276  0074B2  BE18               	btfsc	(___awdiv@dividend+1)^0,7,c
 15277  0074B4  EF61  F03A         	goto	u6470
 15278  0074B8  EF5E  F03A         	goto	u6471
 15279  0074BC                     u6471:
 15280  0074BC  FFFF               	dw	65535	; assembler added errata NOP
 15281  0074BE  EF68  F03A         	goto	l5208
 15282  0074C2                     u6470:
 15283  0074C2  FFFF               	dw	65535	; assembler added errata NOP
 15284  0074C4  6C17               	negf	___awdiv@dividend^0,c
 15285  0074C6  1E18               	comf	(___awdiv@dividend+1)^0,f,c
 15286  0074C8  B0D8               	btfsc	status,0,c
 15287  0074CA  2A18               	incf	(___awdiv@dividend+1)^0,f,c
 15288  0074CC  0E01               	movlw	1
 15289  0074CE  1A1C               	xorwf	___awdiv@sign^0,f,c
 15290  0074D0                     l5208:
 15291  0074D0  FFFF               	dw	65535	; assembler added errata NOP
 15292  0074D2  0E00               	movlw	0
 15293  0074D4  6E1E               	movwf	(___awdiv@quotient+1)^0,c
 15294  0074D6  0E00               	movlw	0
 15295  0074D8  6E1D               	movwf	___awdiv@quotient^0,c
 15296  0074DA  5019               	movf	___awdiv@divisor^0,w,c
 15297  0074DC  101A               	iorwf	(___awdiv@divisor+1)^0,w,c
 15298  0074DE  B4D8               	btfsc	status,2,c
 15299  0074E0  EF74  F03A         	goto	u6481
 15300  0074E4  EF77  F03A         	goto	u6480
 15301  0074E8                     u6481:
 15302  0074E8  FFFF               	dw	65535	; assembler added errata NOP
 15303  0074EA  EFA8  F03A         	goto	l5230
 15304  0074EE                     u6480:
 15305  0074EE  FFFF               	dw	65535	; assembler added errata NOP
 15306  0074F0  0E01               	movlw	1
 15307  0074F2  6E1B               	movwf	___awdiv@counter^0,c
 15308  0074F4  EF81  F03A         	goto	l5216
 15309  0074F8                     l5214:
 15310  0074F8  FFFF               	dw	65535	; assembler added errata NOP
 15311  0074FA  90D8               	bcf	status,0,c
 15312  0074FC  3619               	rlcf	___awdiv@divisor^0,f,c
 15313  0074FE  361A               	rlcf	(___awdiv@divisor+1)^0,f,c
 15314  007500  2A1B               	incf	___awdiv@counter^0,f,c
 15315  007502                     l5216:
 15316  007502  FFFF               	dw	65535	; assembler added errata NOP
 15317  007504  AE1A               	btfss	(___awdiv@divisor+1)^0,7,c
 15318  007506  EF87  F03A         	goto	u6491
 15319  00750A  EF8A  F03A         	goto	u6490
 15320  00750E                     u6491:
 15321  00750E  FFFF               	dw	65535	; assembler added errata NOP
 15322  007510  EF7C  F03A         	goto	l5214
 15323  007514                     u6490:
 15324  007514  FFFF               	dw	65535	; assembler added errata NOP
 15325  007516                     l5218:
 15326  007516  FFFF               	dw	65535	; assembler added errata NOP
 15327  007518  90D8               	bcf	status,0,c
 15328  00751A  361D               	rlcf	___awdiv@quotient^0,f,c
 15329  00751C  361E               	rlcf	(___awdiv@quotient+1)^0,f,c
 15330  00751E  5019               	movf	___awdiv@divisor^0,w,c
 15331  007520  5C17               	subwf	___awdiv@dividend^0,w,c
 15332  007522  501A               	movf	(___awdiv@divisor+1)^0,w,c
 15333  007524  5818               	subwfb	(___awdiv@dividend+1)^0,w,c
 15334  007526  A0D8               	btfss	status,0,c
 15335  007528  EF98  F03A         	goto	u6501
 15336  00752C  EF9B  F03A         	goto	u6500
 15337  007530                     u6501:
 15338  007530  FFFF               	dw	65535	; assembler added errata NOP
 15339  007532  EFA1  F03A         	goto	l5226
 15340  007536                     u6500:
 15341  007536  FFFF               	dw	65535	; assembler added errata NOP
 15342  007538  5019               	movf	___awdiv@divisor^0,w,c
 15343  00753A  5E17               	subwf	___awdiv@dividend^0,f,c
 15344  00753C  501A               	movf	(___awdiv@divisor+1)^0,w,c
 15345  00753E  5A18               	subwfb	(___awdiv@dividend+1)^0,f,c
 15346  007540  801D               	bsf	___awdiv@quotient^0,0,c
 15347  007542                     l5226:
 15348  007542  FFFF               	dw	65535	; assembler added errata NOP
 15349  007544  90D8               	bcf	status,0,c
 15350  007546  321A               	rrcf	(___awdiv@divisor+1)^0,f,c
 15351  007548  3219               	rrcf	___awdiv@divisor^0,f,c
 15352  00754A  2E1B               	decfsz	___awdiv@counter^0,f,c
 15353  00754C  EF8B  F03A         	goto	l5218
 15354  007550                     l5230:
 15355  007550  FFFF               	dw	65535	; assembler added errata NOP
 15356  007552  501C               	movf	___awdiv@sign^0,w,c
 15357  007554  B4D8               	btfsc	status,2,c
 15358  007556  EFAF  F03A         	goto	u6511
 15359  00755A  EFB2  F03A         	goto	u6510
 15360  00755E                     u6511:
 15361  00755E  FFFF               	dw	65535	; assembler added errata NOP
 15362  007560  EFB7  F03A         	goto	l5234
 15363  007564                     u6510:
 15364  007564  FFFF               	dw	65535	; assembler added errata NOP
 15365  007566  6C1D               	negf	___awdiv@quotient^0,c
 15366  007568  1E1E               	comf	(___awdiv@quotient+1)^0,f,c
 15367  00756A  B0D8               	btfsc	status,0,c
 15368  00756C  2A1E               	incf	(___awdiv@quotient+1)^0,f,c
 15369  00756E                     l5234:
 15370  00756E  FFFF               	dw	65535	; assembler added errata NOP
 15371  007570  C01D  F017         	movff	___awdiv@quotient,?___awdiv
 15372  007574  C01E  F018         	movff	___awdiv@quotient+1,?___awdiv+1
 15373  007578  0012               	return		;funcret
 15374  00757A  FFFF               	dw	65535	; errata NOP
 15375  00757C                     __end_of___awdiv:
 15376                           	callstack 0
 15377                           
 15378 ;; *************** function _change_direction *****************
 15379 ;; Defined at:
 15380 ;;		line 40 in file "stepper_motor.c"
 15381 ;; Parameters:    Size  Location     Type
 15382 ;;  stepper_moto    2    0[COMRAM] PTR struct .
 15383 ;;		 -> end_effector_stepper(14), joint_stepper(14), 
 15384 ;; Auto vars:     Size  Location     Type
 15385 ;;		None
 15386 ;; Return value:  Size  Location     Type
 15387 ;;                  1    wreg      void 
 15388 ;; Registers used:
 15389 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15390 ;; Tracked objects:
 15391 ;;		On entry : 0/0
 15392 ;;		On exit  : 0/0
 15393 ;;		Unchanged: 0/0
 15394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15395 ;;      Params:         2       0       0       0       0       0       0
 15396 ;;      Locals:         0       0       0       0       0       0       0
 15397 ;;      Temps:          2       0       0       0       0       0       0
 15398 ;;      Totals:         4       0       0       0       0       0       0
 15399 ;;Total ram usage:        4 bytes
 15400 ;; Hardware stack levels used:    1
 15401 ;; Hardware stack levels required when called:    1
 15402 ;; This function calls:
 15403 ;;		Nothing
 15404 ;; This function is called by:
 15405 ;;		_main
 15406 ;; This function uses a non-reentrant model
 15407 ;;
 15408                           
 15409                           	psect	text64
 15410  0066A2                     __ptext64:
 15411                           	callstack 0
 15412  0066A2                     _change_direction:
 15413                           	callstack 0
 15414  0066A2  FFFF               	dw	65535	; assembler added errata NOP
 15415  0066A4                     
 15416                           ;stepper_motor.c: 41:     stepper_motor -> direction = stepper_motor -> direction*(-1);
 15417  0066A4  EE20 F004          	lfsr	2,4
 15418  0066A8  5001               	movf	change_direction@stepper_motor^0,w,c
 15419  0066AA  26D9               	addwf	fsr2l,f,c
 15420  0066AC  5002               	movf	(change_direction@stepper_motor+1)^0,w,c
 15421  0066AE  22DA               	addwfc	fsr2h,f,c
 15422  0066B0  CFDE F003          	movff	postinc2,??_change_direction
 15423  0066B4  CFDD F004          	movff	postdec2,??_change_direction+1
 15424  0066B8  1E03               	comf	??_change_direction^0,f,c
 15425  0066BA  1E04               	comf	(??_change_direction+1)^0,f,c
 15426  0066BC  4A03               	infsnz	??_change_direction^0,f,c
 15427  0066BE  2A04               	incf	(??_change_direction+1)^0,f,c
 15428  0066C0  EE20 F004          	lfsr	2,4
 15429  0066C4  5001               	movf	change_direction@stepper_motor^0,w,c
 15430  0066C6  26D9               	addwf	fsr2l,f,c
 15431  0066C8  5002               	movf	(change_direction@stepper_motor+1)^0,w,c
 15432  0066CA  22DA               	addwfc	fsr2h,f,c
 15433  0066CC  C003  FFDE         	movff	??_change_direction,postinc2
 15434  0066D0  C004  FFDD         	movff	??_change_direction+1,postdec2
 15435  0066D4  0012               	return		;funcret
 15436  0066D6  FFFF               	dw	65535	; errata NOP
 15437  0066D8                     __end_of_change_direction:
 15438                           	callstack 0
 15439                           
 15440 ;; *************** function _rx_char_usart *****************
 15441 ;; Defined at:
 15442 ;;		line 197 in file "main.c"
 15443 ;; Parameters:    Size  Location     Type
 15444 ;;		None
 15445 ;; Auto vars:     Size  Location     Type
 15446 ;;		None
 15447 ;; Return value:  Size  Location     Type
 15448 ;;                  1    wreg      void 
 15449 ;; Registers used:
 15450 ;;		wreg, status,2
 15451 ;; Tracked objects:
 15452 ;;		On entry : 0/0
 15453 ;;		On exit  : 0/0
 15454 ;;		Unchanged: 0/0
 15455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15456 ;;      Params:         0       0       0       0       0       0       0
 15457 ;;      Locals:         0       0       0       0       0       0       0
 15458 ;;      Temps:          0       0       0       0       0       0       0
 15459 ;;      Totals:         0       0       0       0       0       0       0
 15460 ;;Total ram usage:        0 bytes
 15461 ;; Hardware stack levels used:    1
 15462 ;; This function calls:
 15463 ;;		Nothing
 15464 ;; This function is called by:
 15465 ;;		Interrupt level 2
 15466 ;; This function uses a non-reentrant model
 15467 ;;
 15468                           
 15469                           	psect	intcode
 15470  000008                     __pintcode:
 15471                           	callstack 0
 15472  000008                     _rx_char_usart:
 15473                           	callstack 0
 15474  000008  FFFF               	dw	65535	; assembler added errata NOP
 15475                           
 15476                           ;incstack = 0
 15477  00000A  827F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15478  00000C                     
 15479                           ;main.c: 198:     if(PIE1bits.RCIE && PIR1bits.RCIF){
 15480  00000C  AA9D               	btfss	157,5,c	;volatile
 15481  00000E  EF0B  F000         	goto	i2u717_41
 15482  000012  EF0E  F000         	goto	i2u717_40
 15483  000016                     i2u717_41:
 15484  000016  FFFF               	dw	65535	; assembler added errata NOP
 15485  000018  EF1E  F000         	goto	i2l5704
 15486  00001C                     i2u717_40:
 15487  00001C  FFFF               	dw	65535	; assembler added errata NOP
 15488  00001E  AA9E               	btfss	158,5,c	;volatile
 15489  000020  EF14  F000         	goto	i2u718_41
 15490  000024  EF17  F000         	goto	i2u718_40
 15491  000028                     i2u718_41:
 15492  000028  FFFF               	dw	65535	; assembler added errata NOP
 15493  00002A  EF1E  F000         	goto	i2l5704
 15494  00002E                     i2u718_40:
 15495  00002E  FFFF               	dw	65535	; assembler added errata NOP
 15496  000030                     
 15497                           ;main.c: 199:         PIR1bits.RCIF = 0;
 15498  000030  9A9E               	bcf	158,5,c	;volatile
 15499  000032                     
 15500                           ;main.c: 200:         state_changed = 1;
 15501  000032  0E01               	movlw	1
 15502  000034  0101               	movlb	1	; () banked
 15503  000036  6FB0               	movwf	_state_changed& (0+255),b
 15504                           
 15505                           ;main.c: 201:         read_new_char = 1;
 15506  000038  0E01               	movlw	1
 15507  00003A  6FAE               	movwf	_read_new_char& (0+255),b
 15508  00003C                     i2l5704:
 15509  00003C  FFFF               	dw	65535	; assembler added errata NOP
 15510                           
 15511                           ;main.c: 203:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF){
 15512  00003E  AAF2               	btfss	242,5,c	;volatile
 15513  000040  EF24  F000         	goto	i2u719_41
 15514  000044  EF27  F000         	goto	i2u719_40
 15515  000048                     i2u719_41:
 15516  000048  FFFF               	dw	65535	; assembler added errata NOP
 15517  00004A  EF37  F000         	goto	i2l185
 15518  00004E                     i2u719_40:
 15519  00004E  FFFF               	dw	65535	; assembler added errata NOP
 15520  000050  A4F2               	btfss	242,2,c	;volatile
 15521  000052  EF2D  F000         	goto	i2u720_41
 15522  000056  EF30  F000         	goto	i2u720_40
 15523  00005A                     i2u720_41:
 15524  00005A  FFFF               	dw	65535	; assembler added errata NOP
 15525  00005C  EF37  F000         	goto	i2l185
 15526  000060                     i2u720_40:
 15527  000060  FFFF               	dw	65535	; assembler added errata NOP
 15528  000062                     
 15529                           ;main.c: 204:         T0CON = 0;
 15530  000062  0E00               	movlw	0
 15531  000064  6ED5               	movwf	213,c	;volatile
 15532  000066                     
 15533                           ;main.c: 205:         INTCONbits.TMR0IF = 0;
 15534  000066  94F2               	bcf	242,2,c	;volatile
 15535                           
 15536                           ;main.c: 206:         timer_done = 1;
 15537  000068  0E01               	movlw	1
 15538  00006A  0101               	movlb	1	; () banked
 15539  00006C  6FAD               	movwf	_timer_done& (0+255),b
 15540  00006E                     i2l185:
 15541  00006E  FFFF               	dw	65535	; assembler added errata NOP
 15542  000070  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15543  000072  0011               	retfie		f
 15544  000074  FFFF               	dw	65535	; errata NOP
 15545  000076                     __end_of_rx_char_usart:
 15546                           	callstack 0
 15547                           
 15548                           	psect	rparam
 15549  0000                     
 15550                           	psect	temp
 15551  00007F                     btemp:
 15552                           	callstack 0
 15553  00007F                     	ds	1
 15554  0000                     int$flags	set	btemp
 15555  0000                     wtemp8	set	btemp+1
 15556  0000                     ttemp5	set	btemp+1
 15557  0000                     ttemp6	set	btemp+4
 15558  0000                     ttemp7	set	btemp+8
 15559                           
 15560                           	psect	idloc
 15561                           
 15562                           ;Config register IDLOC0 @ 0x200000
 15563                           ;	unspecified, using default values
 15564  200000                     	org	2097152
 15565  200000  FF                 	db	255
 15566                           
 15567                           ;Config register IDLOC1 @ 0x200001
 15568                           ;	unspecified, using default values
 15569  200001                     	org	2097153
 15570  200001  FF                 	db	255
 15571                           
 15572                           ;Config register IDLOC2 @ 0x200002
 15573                           ;	unspecified, using default values
 15574  200002                     	org	2097154
 15575  200002  FF                 	db	255
 15576                           
 15577                           ;Config register IDLOC3 @ 0x200003
 15578                           ;	unspecified, using default values
 15579  200003                     	org	2097155
 15580  200003  FF                 	db	255
 15581                           
 15582                           ;Config register IDLOC4 @ 0x200004
 15583                           ;	unspecified, using default values
 15584  200004                     	org	2097156
 15585  200004  FF                 	db	255
 15586                           
 15587                           ;Config register IDLOC5 @ 0x200005
 15588                           ;	unspecified, using default values
 15589  200005                     	org	2097157
 15590  200005  FF                 	db	255
 15591                           
 15592                           ;Config register IDLOC6 @ 0x200006
 15593                           ;	unspecified, using default values
 15594  200006                     	org	2097158
 15595  200006  FF                 	db	255
 15596                           
 15597                           ;Config register IDLOC7 @ 0x200007
 15598                           ;	unspecified, using default values
 15599  200007                     	org	2097159
 15600  200007  FF                 	db	255
 15601                           
 15602                           	psect	config
 15603                           
 15604                           ; Padding undefined space
 15605  300000                     	org	3145728
 15606  300000  FF                 	db	255
 15607                           
 15608                           ;Config register CONFIG1H @ 0x300001
 15609                           ;	Oscillator Selection bits
 15610                           ;	OSC = RCIO, RC oscillator w/ OSC2 configured as RA6
 15611                           ;	Oscillator System Clock Switch Enable bit
 15612                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
 15613  300001                     	org	3145729
 15614  300001  27                 	db	39
 15615                           
 15616                           ;Config register CONFIG2L @ 0x300002
 15617                           ;	Power-up Timer Enable bit
 15618                           ;	PWRT = OFF, PWRT disabled
 15619                           ;	Brown-out Reset Enable bit
 15620                           ;	BOR = ON, Brown-out Reset enabled
 15621                           ;	Brown-out Reset Voltage bits
 15622                           ;	BORV = 20, VBOR set to 2.0V
 15623  300002                     	org	3145730
 15624  300002  0F                 	db	15
 15625                           
 15626                           ;Config register CONFIG2H @ 0x300003
 15627                           ;	Watchdog Timer Enable bit
 15628                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 15629                           ;	Watchdog Timer Postscale Select bits
 15630                           ;	WDTPS = 128, 1:128
 15631  300003                     	org	3145731
 15632  300003  0E                 	db	14
 15633                           
 15634                           ; Padding undefined space
 15635  300004                     	org	3145732
 15636  300004  FF                 	db	255
 15637                           
 15638                           ;Config register CONFIG3H @ 0x300005
 15639                           ;	CCP2 Mux bit
 15640                           ;	CCP2MUX = ON, CCP2 input/output is multiplexed with RC1
 15641  300005                     	org	3145733
 15642  300005  01                 	db	1
 15643                           
 15644                           ;Config register CONFIG4L @ 0x300006
 15645                           ;	Stack Full/Underflow Reset Enable bit
 15646                           ;	STVR = ON, Stack Full/Underflow will cause RESET
 15647                           ;	Low Voltage ICSP Enable bit
 15648                           ;	LVP = ON, Low Voltage ICSP enabled
 15649                           ;	Background Debugger Enable bit
 15650                           ;	DEBUG = 0x1, unprogrammed default
 15651  300006                     	org	3145734
 15652  300006  85                 	db	133
 15653                           
 15654                           ; Padding undefined space
 15655  300007                     	org	3145735
 15656  300007  FF                 	db	255
 15657                           
 15658                           ;Config register CONFIG5L @ 0x300008
 15659                           ;	Code Protection bit
 15660                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
 15661                           ;	Code Protection bit
 15662                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
 15663                           ;	Code Protection bit
 15664                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
 15665                           ;	Code Protection bit
 15666                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
 15667  300008                     	org	3145736
 15668  300008  0F                 	db	15
 15669                           
 15670                           ;Config register CONFIG5H @ 0x300009
 15671                           ;	Boot Block Code Protection bit
 15672                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
 15673                           ;	Data EEPROM Code Protection bit
 15674                           ;	CPD = OFF, Data EEPROM not code protected
 15675  300009                     	org	3145737
 15676  300009  C0                 	db	192
 15677                           
 15678                           ;Config register CONFIG6L @ 0x30000A
 15679                           ;	Write Protection bit
 15680                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
 15681                           ;	Write Protection bit
 15682                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
 15683                           ;	Write Protection bit
 15684                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
 15685                           ;	Write Protection bit
 15686                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
 15687  30000A                     	org	3145738
 15688  30000A  0F                 	db	15
 15689                           
 15690                           ;Config register CONFIG6H @ 0x30000B
 15691                           ;	Configuration Register Write Protection bit
 15692                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
 15693                           ;	Boot Block Write Protection bit
 15694                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
 15695                           ;	Data EEPROM Write Protection bit
 15696                           ;	WRTD = OFF, Data EEPROM not write protected
 15697  30000B                     	org	3145739
 15698  30000B  E0                 	db	224
 15699                           
 15700                           ;Config register CONFIG7L @ 0x30000C
 15701                           ;	Table Read Protection bit
 15702                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
 15703                           ;	Table Read Protection bit
 15704                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
 15705                           ;	Table Read Protection bit
 15706                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
 15707                           ;	Table Read Protection bit
 15708                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
 15709  30000C                     	org	3145740
 15710  30000C  0F                 	db	15
 15711                           
 15712                           ;Config register CONFIG7H @ 0x30000D
 15713                           ;	Boot Block Table Read Protection bit
 15714                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
 15715  30000D                     	org	3145741
 15716  30000D  40                 	db	64
 15717                           tosu	equ	0xFFF
 15718                           tosh	equ	0xFFE
 15719                           tosl	equ	0xFFD
 15720                           stkptr	equ	0xFFC
 15721                           pclatu	equ	0xFFB
 15722                           pclath	equ	0xFFA
 15723                           pcl	equ	0xFF9
 15724                           tblptru	equ	0xFF8
 15725                           tblptrh	equ	0xFF7
 15726                           tblptrl	equ	0xFF6
 15727                           tablat	equ	0xFF5
 15728                           prodh	equ	0xFF4
 15729                           prodl	equ	0xFF3
 15730                           indf0	equ	0xFEF
 15731                           postinc0	equ	0xFEE
 15732                           postdec0	equ	0xFED
 15733                           preinc0	equ	0xFEC
 15734                           plusw0	equ	0xFEB
 15735                           fsr0h	equ	0xFEA
 15736                           fsr0l	equ	0xFE9
 15737                           wreg	equ	0xFE8
 15738                           indf1	equ	0xFE7
 15739                           postinc1	equ	0xFE6
 15740                           postdec1	equ	0xFE5
 15741                           preinc1	equ	0xFE4
 15742                           plusw1	equ	0xFE3
 15743                           fsr1h	equ	0xFE2
 15744                           fsr1l	equ	0xFE1
 15745                           bsr	equ	0xFE0
 15746                           indf2	equ	0xFDF
 15747                           postinc2	equ	0xFDE
 15748                           postdec2	equ	0xFDD
 15749                           preinc2	equ	0xFDC
 15750                           plusw2	equ	0xFDB
 15751                           fsr2h	equ	0xFDA
 15752                           fsr2l	equ	0xFD9
 15753                           status	equ	0xFD8

Data Sizes:
    Strings     310
    Constant    20
    Data        51
    BSS         100
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    126     126
    BANK0           128     38     113
    BANK1           256    163     239
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    main$2135	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[9]), 
		 -> STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), STR_1(CODE[49]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_107(CODE[3]), STR_103(CODE[3]), STR_98(CODE[3]), STR_94(CODE[3]), 
		 -> STR_89(CODE[4]), STR_85(CODE[4]), STR_80(CODE[3]), STR_75(CODE[3]), 
		 -> STR_70(CODE[4]), STR_65(CODE[3]), STR_60(CODE[3]), STR_55(CODE[4]), 
		 -> STR_50(CODE[3]), STR_45(CODE[3]), STR_40(CODE[4]), STR_35(CODE[3]), 
		 -> STR_31(CODE[3]), STR_26(CODE[3]), STR_22(CODE[3]), STR_17(CODE[4]), 
		 -> STR_13(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_107(CODE[3]), STR_103(CODE[3]), STR_98(CODE[3]), STR_94(CODE[3]), 
		 -> STR_89(CODE[4]), STR_85(CODE[4]), STR_80(CODE[3]), STR_75(CODE[3]), 
		 -> STR_70(CODE[4]), STR_65(CODE[3]), STR_60(CODE[3]), STR_55(CODE[4]), 
		 -> STR_50(CODE[3]), STR_45(CODE[3]), STR_40(CODE[4]), STR_35(CODE[3]), 
		 -> STR_31(CODE[3]), STR_26(CODE[3]), STR_22(CODE[3]), STR_17(CODE[4]), 
		 -> STR_13(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), ?_snprintf(BANK0[2]), STR_8(CODE[50]), 
		 -> STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[39]), 
		 -> STR_3(CODE[9]), STR_2(CODE[64]), STR_1(CODE[49]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), ?_snprintf(BANK0[2]), STR_8(CODE[50]), 
		 -> STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[39]), 
		 -> STR_3(CODE[9]), STR_2(CODE[64]), STR_1(CODE[49]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), 
		 -> STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), 
		 -> STR_1(CODE[49]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), 
		 -> STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), 
		 -> STR_1(CODE[49]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), 
		 -> STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), 
		 -> STR_1(CODE[49]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_snprintf(BANK0[2]), STR_8(CODE[50]), STR_7(CODE[9]), 
		 -> STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), 
		 -> STR_2(CODE[64]), STR_1(CODE[49]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    S1528_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    change_direction@stepper_motor	PTR struct . size(2) Largest target is 14
		 -> end_effector_stepper(BANK1[14]), joint_stepper(BANK1[14]), 

    reach_goal@stepper_motor	PTR struct . size(2) Largest target is 14
		 -> end_effector_stepper(BANK1[14]), joint_stepper(BANK1[14]), 

    update_current_coil@stepper_motor	PTR struct . size(2) Largest target is 14
		 -> end_effector_stepper(BANK1[14]), joint_stepper(BANK1[14]), 

    turn_on_current_coil@stepper_motor	PTR struct . size(2) Largest target is 14
		 -> end_effector_stepper(BANK1[14]), joint_stepper(BANK1[14]), 

    init_stepper@hex_coil_register_values	PTR int  size(2) Largest target is 8
		 -> hex_end_effector_values(BANK1[8]), hex_joint_values(BANK1[8]), 

    init_stepper@stepper_motor	PTR struct . size(2) Largest target is 14
		 -> end_effector_stepper(BANK1[14]), joint_stepper(BANK1[14]), 

    state_translator_micro_to_fpga@state	PTR int  size(2) Largest target is 2
		 -> state(BANK1[2]), 

    state_translator_fpga_to_micro@state	PTR int  size(2) Largest target is 2
		 -> state(BANK1[2]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), STR_9(CODE[22]), 

    main@greet_str	PTR const unsigned char [80] size(2) Largest target is 64
		 -> ?_snprintf(BANK0[2]), STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), 
		 -> STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), 
		 -> STR_1(CODE[49]), 

    state_msgs	PTR const unsigned char [8] size(2) Largest target is 64
		 -> STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[9]), 
		 -> STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), STR_1(CODE[49]), 


Critical Paths under _main in COMRAM

    _state_translator_fpga_to_micro->_lcd_dat
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _reach_goal->_turn_on_current_coil
    _reach_goal->_update_current_coil
    _lcd_str->_lcd_dat
    _lcd_dat->_lcd_wr
    _lcd_init->_lcd_cmd
    _lcd_cmd->_lcd_wr
    ___fldiv->___flmul
    _init_USART->_roundf
    _roundf->___flsub
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flmul->___xxtofl
    ___fltol->_roundf
    _abs->___aomod
    ___xxtofl->___awdiv
    ___awdiv->_abs

Critical Paths under _rx_char_usart in COMRAM

    None.

Critical Paths under _main in BANK0

    _wait_for_zero->_get_temperature
    _get_temperature->___fltol
    _snprintf->_vsnprintf
    _init_timer_2->___fltol
    _init_ccp1->_update_pwm_duty_ccp1
    _update_pwm_duty_ccp1->___fltol
    _init_USART->___fltol
    ___fltol->_roundf
    _check_temperature->_get_temperature

Critical Paths under _rx_char_usart in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rx_char_usart in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rx_char_usart in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rx_char_usart in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _rx_char_usart in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _rx_char_usart in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               164   164      0   85342
                                             37 BANK0      1     1      0
                                              0 BANK1    163   163      0
                             ___wmul
                   _change_direction
                  _check_temperature
_configure_analog_digital_conversion
                      _get_reg_value
                    _get_temperature
                         _init_PORTS
                         _init_USART
                          _init_ccp1
                    _init_interrupts
                       _init_stepper
                       _init_timer_0
                       _init_timer_2
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                         _reach_goal
                     _serial_tx_char
                           _snprintf
     _state_translator_fpga_to_micro
     _state_translator_micro_to_fpga
                      _wait_for_zero
 ---------------------------------------------------------------------------------
 (1) _wait_for_zero                                        0     0      0    3359
                    _get_temperature
 ---------------------------------------------------------------------------------
 (2) _get_temperature                                      2     0      2    3359
                                             28 BANK0      2     0      2
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _state_translator_micro_to_fpga                       5     3      2     464
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _state_translator_fpga_to_micro                       3     1      2     384
                                              2 COMRAM     3     1      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            12     4      8   46693
                                             10 BANK0     12     4      8
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (2) _vsnprintf                                           22    14      8   46319
                                            111 COMRAM    12     4      8
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   45556
                                            103 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   45095
                                             66 COMRAM    37    31      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    7075
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    6115
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    5013
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    5560
                                             27 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6790
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    4829
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4609
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    2168
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1175
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _serial_tx_char                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _reach_goal                                           7     3      4    1264
                                              6 COMRAM     7     3      4
               _turn_on_current_coil
                _update_current_coil
 ---------------------------------------------------------------------------------
 (2) _update_current_coil                                  6     4      2     274
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _turn_on_current_coil                                 6     4      2     120
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              5     3      2     286
                                              2 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              1     1      0      44
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0      44
                                              2 COMRAM     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0      44
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_timer_2                                         4     4      0    7937
                                             28 BANK0      4     4      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _init_timer_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_stepper                                        16     6     10    1406
                                              0 COMRAM    16     6     10
 ---------------------------------------------------------------------------------
 (1) _init_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ccp1                                            0     0      0    4602
               _update_pwm_duty_ccp1
 ---------------------------------------------------------------------------------
 (2) _update_pwm_duty_ccp1                                 9     5      4    4602
                                             28 BANK0      9     5      4
                            ___fldiv
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1551
                                             69 COMRAM    25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_USART                                           0     0      0   11790
                            ___fltol
                             _roundf
 ---------------------------------------------------------------------------------
 (2) _roundf                                              26    22      4   11257
                                            118 COMRAM     8     4      4
                                              0 BANK0     18    18      0
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3801
                                            110 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    3478
                                             94 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2352
                                             44 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     533
                                             18 BANK0     10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_PORTS                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_reg_value                                        1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _configure_analog_digital_conversion                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_temperature                                    6     4      2    2077
                                             30 BANK0      6     4      2
                            ___awdiv
                             ___flge
                           ___xxtofl
                                _abs
                    _get_temperature (ARG)
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     218
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     474
                                             30 COMRAM    14    10      4
                            ___awdiv (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     790
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                             22 COMRAM     8     4      4
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (1) _change_direction                                     4     2      2     272
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _rx_char_usart                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul
   _change_direction
   _check_temperature
     ___awdiv
       _abs (ARG)
         ___aomod (ARG)
     ___flge
     ___xxtofl
       ___awdiv (ARG)
         _abs (ARG)
           ___aomod (ARG)
       _abs (ARG)
         ___aomod (ARG)
     _abs
       ___aomod (ARG)
     _get_temperature (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _roundf (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flge
           ___flmul
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       _abs (ARG)
                         ___aomod (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
       ___xxtofl
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
   _configure_analog_digital_conversion
   _get_reg_value
   _get_temperature
     ___flmul
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
       _roundf (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flge
         ___flmul
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
     ___xxtofl
       ___awdiv (ARG)
         _abs (ARG)
           ___aomod (ARG)
       _abs (ARG)
         ___aomod (ARG)
   _init_PORTS
   _init_USART
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
       _roundf (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flge
         ___flmul
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
     _roundf
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flge
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___flneg
       ___flsub
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
   _init_ccp1
     _update_pwm_duty_ccp1
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _roundf (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flge
           ___flmul
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       _abs (ARG)
                         ___aomod (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
   _init_interrupts
   _init_stepper
   _init_timer_0
   _init_timer_2
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
     ___fldiv
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
     ___flmul
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
       _roundf (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flge
         ___flmul
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
   _lcd_cmd
     _lcd_wr
   _lcd_init
     _lcd_cmd
       _lcd_wr
   _lcd_str
     _lcd_dat
       _lcd_wr
   _reach_goal
     _turn_on_current_coil
     _update_current_coil
   _serial_tx_char
   _snprintf
     _vsnprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _state_translator_fpga_to_micro
     _lcd_dat
       _lcd_wr
   _state_translator_micro_to_fpga
   _wait_for_zero
     _get_temperature
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _roundf (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flge
           ___flmul
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       _abs (ARG)
                         ___aomod (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
       ___xxtofl
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)

 _rx_char_usart (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     A3      EF       7       93.4%
BITBANK0            80      0       0       4        0.0%
BANK0               80     26      71       5       88.3%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7E      7E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1DE      15        0.0%
DATA                 0      0     1DE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Jun 11 01:27:23 2023

                                           ?_get_reg_value 0001  
                                          ??_wait_for_zero 007F  
                                             ___fldiv@aexp 005E  
                                             ___fldiv@bexp 005D  
                                             ___fldiv@sign 0056  
                                                       l21 6794  
                                                       l24 651E  
                                                       l27 6532  
                                                       l36 64FE  
                                             ___awdiv@sign 001C  
                                      ___wmul@multiplicand 0003  
                                                      l212 666A  
                                                      l230 6614  
                                                      l311 6598  
                                                      l215 64E2  
                                                      l143 16B2  
                                                      l224 64EE  
                                                      l136 1552  
                                                      l305 6574  
                                                      l233 6D56  
                                                      l137 166A  
                                                      l227 65EA  
                                                      l308 7020  
                                                      l148 176C  
                                                      l325 6E8E  
                                                      l342 66D4  
                                                      l318 6F52  
                                                      l334 70F8  
                                                      l502 3FD4  
                                                      l254 7672  
                                                      l262 7770  
                                                      l239 6DDE  
                                                      l328 6710  
                                                      l169 1B4C  
                                                      l338 6CD6  
                                                      l258 7770  
                                                      l370 6BF6  
                                                      l515 7EB0  
                                                      l268 7774  
                                                      l380 3FFC  
                                                      l373 6C60  
                                                      l367 65C0  
                                                      l384 71D4  
                                                      l376 3FDA  
                                                      l619 7578  
                                                      l388 663E  
                                                      l653 7A5E  
                                                      l662 6752  
                                                      l833 7986  
                                                      l658 7AAC  
                                                      l826 7964  
                                                      l843 7488  
                                                      l916 1DB4  
                                                      l836 7466  
                                                      l685 7BE4  
                                                      l933 1EF8  
                                                      l925 210E  
                                                      l917 1D9E  
                                                      l942 1FFC  
                                                      l918 1D54  
                                                      l943 1FE4  
                                                      l970 29E4  
                                                      l972 27FC  
                                                      l981 2852  
                                                      l958 68EA  
                                                      l983 28E2  
                                                      l975 27B6  
                                                      l984 28CA  
                                        ??_init_interrupts 0001  
                                                      _PR2 000FCB  
                                                      _abs 68EE  
                                                      _pad 72BC  
                                                      wreg 000FE8  
                                           ?_rx_char_usart 0001  
                                             ___flmul@aexp 003E  
                                             ___flmul@bexp 003F  
                                             ___flmul@sign 0039  
                                             ___flmul@temp 0044  
                                             ___flmul@prod 0040  
                                             ___fltol@exp1 00D3  
                                                     l1002 2200  
                                                     l1011 249C  
                                                     l1012 2484  
                                                     l1101 7CF8  
                                                     l1006 25B2  
                                                     l1009 240C  
                                                     l1050 3996  
                                                     l1043 38EA  
                                                     l1019 256A  
                                                     l1203 3B12  
                                                     ?_abs 0013  
                                                     l1205 3B1C  
                                                     l1301 145C  
                                                     l1046 3A7C  
                                                     l1142 7310  
                                                     l1214 3BF4  
                                                     l1063 692A  
                                                     l1215 3C48  
                                                     l1160 2E8C  
                                                     l1224 347C  
                                                     l1057 3A02  
                                                     l1145 735C  
                                                     l1241 3156  
                                                     l1066 6934  
                                                     l1074 2DCE  
                                                     l1154 6AA8  
                                                     l1162 2E96  
                                                     l1234 3660  
                                                     l1226 3486  
                                                     l1402 6818  
                                                     l1147 739E  
                                                     l1219 3C52  
                                                     l1180 3104  
                                                     PORTD 000F83  
                                                     PORTE 000F84  
                                                     l1262 33C8  
                                                     l1239 314C  
                                                     l4000 34B0  
                                                     l1264 3434  
                                                     l1248 31FA  
                                                     l1096 7D1E  
                                                     l1088 669E  
                                                     l1417 72B6  
                                                     l1425 6986  
                                                     l1185 36A8  
                                                     l1345 6BE6  
                                                     l1434 69E2  
                                                     l1194 3814  
                                                     l4010 3544  
                                                     l4002 34B8  
                                                     l1346 6BEE  
                                                     l1187 36B2  
                                                     l4100 3C78  
                                                     l1428 64D6  
                                                     l1196 3886  
                                                     l4020 3606  
                                                     l4012 354A  
                                                     l4004 34C0  
                                                     l1453 6B7C  
                                                     l1374 3E14  
                                                     l4110 3CE2  
                                                     l4102 3C9A  
                                                     l1438 787A  
                                                     l4022 3624  
                                                     l4006 34C8  
                                                     l4014 35AE  
                                                     l1382 68A0  
                                                     l4030 311E  
                                                     l1278 0198  
                                                     l4200 1C92  
                                                     l4112 3CFC  
                                                     l4104 3CD6  
                                                     l4016 35C6  
                                                     l4024 3636  
                                                     l4008 353E  
                                                     l1448 6B72  
                                                     l4040 319C  
                                                     l4032 3120  
                                                     l1377 3E1E  
                                                     l5010 7B2C  
                                                     l5002 7AE6  
                                                     l4210 1CB6  
                                                     l4202 1CA4  
                                                     l4130 3DF8  
                                                     l4122 3D84  
                                                     l4114 3D06  
                                                     l4106 3CDA  
                                                     l4018 35E8  
                                                     l4050 31DC  
                                                     l4042 31A4  
                                                     l4034 3140  
                                                     l1459 685A  
                                                     l5020 7B66  
                                                     l5012 7B3E  
                                                     l5004 7B16  
                                                     l4300 1F48  
                                                     l4220 1CCA  
                                                     l4212 1CBA  
                                                     l4204 1CA8  
                                                     l5100 2A72  
                                                     l1388 67D6  
                                                     l1396 6A42  
                                                     l4116 3D10  
                                                     l4052 31EC  
                                                     l4044 31AC  
                                                     l4036 3172  
                                                     l4028 310A  
                                                     l5030 7B98  
                                                     l5022 7B70  
                                                     l5006 7B18  
                                                     l4310 1F7E  
                                                     l4302 1F5A  
                                                     l4230 1CDE  
                                                     l4222 1CCE  
                                                     l4214 1CBE  
                                                     l4206 1CAE  
                                                     l5110 2B38  
                                                     l5102 2AB8  
                                                     l4126 3DCC  
                                                     l4118 3D4A  
                                                     l4150 7820  
                                                     l4142 77B4  
                                                     l4070 32CE  
                                                     l4062 328C  
                                                     l4046 31B4  
                                                     l4038 317A  
                                                     l5200 74AC  
                                                     l5040 388E  
                                                     l5032 7BAC  
                                                     l5008 7B28  
                                                     l4320 1FC0  
                                                     l4312 1F94  
                                                     l4304 1F5C  
                                                     l4240 1D3C  
                                                     l4232 1CE2  
                                                     l4224 1CD2  
                                                     l4216 1CC2  
                                                     l4208 1CB2  
                                                     l4160 1B8C  
                                                     l5120 2D52  
                                                     l5112 2C0C  
                                                     l5104 2ADC  
                                                     l4128 3DE2  
                                                     l4152 7850  
                                                     l4144 77C4  
                                                     l4136 777A  
                                                     l4080 3398  
                                                     l4072 32D4  
                                                     l4064 32A2  
                                                     l4056 3236  
                                                     l4048 31BC  
                                                     l4400 01DA  
                                                     l5210 74DA  
                                                     l5202 74B0  
                                                     l5042 38A2  
                                                     l5034 7BC2  
                                                     l5018 7B5A  
                                                     l4330 2030  
                                                     l4322 1FDA  
                                                     l4306 1F70  
                                                     l4314 1F96  
                                                     l4250 1D8E  
                                                     l4242 1D4C  
                                                     l4226 1CD6  
                                                     l4218 1CC6  
                                                     l4234 1CE6  
                                                     l4170 1BCC  
                                                     l4162 1B8E  
                                                     l5122 2D98  
                                                     l5114 2C78  
                                                     l5106 2B00  
                                                     l5130 65CA  
                                                     l3610 7206  
                                                     l4146 77E8  
                                                     l4138 77A8  
                                                     l4090 340A  
                                                     l4082 33B6  
                                                     l4058 324C  
                                                     l4066 32B6  
                                                     l4074 3336  
                                                     l4410 0262  
                                                     l4402 0210  
                                                     l5220 751E  
                                                     l5212 74F0  
                                                     l5204 74C4  
                                                     l5060 3980  
                                                     l5052 392C  
                                                     l5044 38B4  
                                                     l5300 6666  
                                                     l5036 7BD2  
                                                     l5028 7B8A  
                                                     l4340 20BE  
                                                     l4332 206E  
                                                     l4308 1F78  
                                                     l4316 1FA8  
                                                     l4252 1D90  
                                                     l4244 1D68  
                                                     l4236 1CEC  
                                                     l4228 1CDA  
                                                     l4180 1C06  
                                                     l4164 1BA4  
                                                     l4172 1BD4  
                                                     l4156 1B6E  
                                                     l5124 2DBC  
                                                     l5116 2CB0  
                                                     l5140 65E8  
                                                     l5132 65D0  
                                                     l3612 7212  
                                                     l3620 693C  
                                                     l3700 7D3C  
                                                     l4148 780A  
                                                     l4084 33DE  
                                                     l4076 3358  
                                                     l4068 32C8  
                                                     l4500 08EA  
                                                     l4420 02FC  
                                                     l4404 0222  
                                                     l5222 7538  
                                                     l5214 74F8  
                                                     l5230 7550  
                                                     l5206 74CC  
                                                     l5070 3A16  
                                                     l5062 398C  
                                                     l5054 3936  
                                                     l5046 38FC  
                                                     l5302 6668  
                                                     l4350 20E8  
                                                     l4342 20C2  
                                                     l4326 2012  
                                                     l4334 2070  
                                                     l4318 1FAE  
                                                     l4270 1E32  
                                                     l4262 1DF0  
                                                     l4254 1D9C  
                                                     l4246 1D74  
                                                     l4238 1D1A  
                                                     l4190 1C4C  
                                                     l4182 1C0E  
                                                     l4174 1BE6  
                                                     l4166 1BB8  
                                                     l4158 1B7A  
                                                     l5118 2D1C  
                                                     l5310 6F62  
                                                     l5134 65D2  
                                                     l5150 65F4  
                                                     l4094 3C58  
                                                     l3614 7236  
                                                     l3606 71DC  
                                                     l3622 6948  
                                                     l3630 6998  
                                                     l3710 7DB8  
                                                     l3702 7D5C  
                                                     l4086 33E4  
                                                     l4078 337A  
                                                     l4510 09A0  
                                                     l4502 0916  
                                                     l4430 03A0  
                                                     l4422 030A  
                                                     l4414 02B2  
                                                     l4406 0230  
                                                     l5142 6BF4  
                                                     l5232 7566  
                                                     l5224 7540  
                                                     l5216 7502  
                                                     l5208 74D0  
                                                     l5080 3A68  
                                                     l5072 3A18  
                                                     l5064 39CE  
                                                     l5056 3944  
                                                     l5048 3918  
                                                     l4352 20FA  
                                                     l4344 20D6  
                                                     l4336 2086  
                                                     l4328 201E  
                                                     l4272 1E38  
                                                     l4264 1E02  
                                                     l4256 1DC8  
                                                     l4280 1E60  
                                                     l4248 1D7A  
                                                     l4192 1C5C  
                                                     l4184 1C20  
                                                     l4176 1BEE  
                                                     l4168 1BC8  
                                                     l5320 657A  
                                                     l5312 6F64  
                                                     l5136 65DC  
                                                     l5128 65C8  
                                                     l5160 6612  
                                                     l5152 65FA  
                                                     l4096 3C6C  
                                                     l3616 726E  
                                                     l3608 71F2  
                                                     l3624 695C  
                                                     l3632 699E  
                                                     l3720 7E3E  
                                                     l3712 7DC0  
                                                     l3704 7D60  
                                                     l3800 6B14  
                                                     l4088 33F4  
                                                     l4520 0A64  
                                                     l4440 0462  
                                                     l4424 0334  
                                                     l4408 0252  
                                                     l4416 02C6  
                                                     l4360 00A6  
                                                     l5240 7C02  
                                                     l5400 75B0  
                                                     l5144 6C0A  
                                                     l5234 756E  
                                                     l5226 7542  
                                                     l5218 7516  
                                                     l5082 3A6A  
                                                     l5074 3A1E  
                                                     l5066 39DC  
                                                     l5058 397C  
                                                     l3642 68F0  
                                                     l4354 20FC  
                                                     l4346 20DC  
                                                     l4338 2098  
                                                     l4282 1E8C  
                                                     l4290 1EE6  
                                                     l4274 1E4C  
                                                     l4266 1E14  
                                                     l4258 1DDC  
                                                     l4194 1C60  
                                                     l4186 1C22  
                                                     l4178 1C04  
                                                     l5170 6F16  
                                                     l5162 6E94  
                                                     l5322 657E  
                                                     l5330 64DC  
                                                     l5314 6F66  
                                                     l5306 6F58  
                                                     l5138 65DE  
                                                     l5154 65FC  
                                                     l3810 6798  
                                                     l4098 3C72  
                                                     l3626 6960  
                                                     l3634 69D6  
                                                     l3722 7E52  
                                                     l3714 7DD6  
                                                     l3706 7D74  
                                                     l4610 1096  
                                                     l4530 0B0A  
                                                     l4522 0A88  
                                                     l4450 053C  
                                                     l4434 03F0  
                                                     l4426 036E  
                                                     l4418 02F2  
                                                     l4370 00DC  
                                                     l4362 00B4  
                                                     l5090 6B9A  
                                                     l5250 7C46  
                                                     l5242 7C0C  
                                                     l5410 7620  
                                                     l5402 75C8  
                                                     l5228 754A  
                                                     l5076 3A42  
                                                     l5068 39F0  
                                                     l3644 690E  
                                                     l5340 65B0  
                                                     l5332 659E  
                                                     l4348 20E0  
                                                     l4292 1F14  
                                                     l4284 1EC0  
                                                     l4276 1E4E  
                                                     l4268 1E26  
                                                     l4188 1C38  
                                                     l4196 1C68  
                                                     l4700 25F0  
                                                     l5172 6F1A  
                                                     l5164 6EF8  
                                                     l5324 6594  
                                                     l5316 6FE2  
                                                     l5308 6F60  
                                                     l5156 6606  
                                                     l5148 65F2  
                                                     l5180 66DA  
                                                     l3820 6A36  
                                                     l3628 698C  
                                                     l3660 3E60  
                                                     l3652 3E26  
                                                     l3716 7DEA  
                                                     l3724 7E58  
                                                     l3708 7D94  
                                                     l3740 78CE  
                                                     l3732 7882  
                                                     l3804 6B50  
                                                     l4620 1156  
                                                     l4612 10A6  
                                                     l4604 0FF8  
                                                     l4540 0B9E  
                                                     l4516 09F0  
                                                     l4508 0964  
                                                     l4444 047E  
                                                     l4428 0390  
                                                     l4436 0404  
                                                     l4380 0104  
                                                     l4372 00F0  
                                                     l4364 00C6  
                                                     l5092 6BC2  
                                                     l5260 7CB6  
                                                     l5252 7C52  
                                                     l5420 667A  
                                                     l5412 7634  
                                                     l5404 75DC  
                                                     l5502 66A4  
                                                     l5078 3A56  
                                                     l5342 65B2  
                                                     l5334 65A6  
                                                     l4294 1F28  
                                                     l4286 1EC2  
                                                     l4278 1E5A  
                                                     l4198 1C7A  
                                                     l5094 29EC  
                                                     l5270 6758  
                                                     l4710 2632  
                                                     l4702 2604  
                                                     l5174 6F2E  
                                                     l5166 6EFC  
                                                     l5326 6596  
                                                     l5350 6DEC  
                                                     l5158 6608  
                                                     l5190 70E8  
                                                     l3646 661A  
                                                     l3822 6A3A  
                                                     l3814 69E6  
                                                     l3830 6A6C  
                                                     l3670 3EC8  
                                                     l3662 3E74  
                                                     l3654 3E2A  
                                                     l3726 7E6E  
                                                     l3718 7E1E  
                                                     l3910 36DC  
                                                     l3902 3666  
                                                     l3750 794A  
                                                     l3742 78E2  
                                                     l3734 788E  
                                                     l3638 681C  
                                                     l3806 6B66  
                                                     l4622 118E  
                                                     l4614 10DC  
                                                     l4606 1034  
                                                     l4550 0C44  
                                                     l4518 0A2C  
                                                     l4526 0A96  
                                                     l4454 0576  
                                                     l4446 04BA  
                                                     l4438 0430  
                                                     l4366 00CA  
                                                     l4358 007C  
                                                     l5086 6B84  
                                                     l5262 7CE8  
                                                     l5254 7C66  
                                                     l5246 7C14  
                                                     l5238 7BEC  
                                                     l5414 764C  
                                                     l5406 75F4  
                                                     l5430 76C0  
                                                     ?_pad 0011  
                                                     l5336 65AC  
                                                     l4288 1ED6  
                                                     l5096 2A0C  
                                                     l5280 678E  
                                                     l5272 6786  
                                                     l4800 2904  
                                                     l4720 266A  
                                                     l4712 263A  
                                                     l4704 2614  
                                                     l5176 6F34  
                                                     l5168 6F10  
                                                     l5360 6E7A  
                                                     l5352 6E32  
                                                     l5344 6DE4  
                                                     l5184 7026  
                                                     l3648 6636  
                                                     l3816 69EC  
                                                     l3832 6A7A  
                                                     l3680 3F40  
                                                     l3672 3ED0  
                                                     l3664 3E94  
                                                     l3656 3E3C  
                                                     l3728 7E8E  
                                                     l3840 2DD6  
                                                     l3920 3704  
                                                     l3912 36E4  
                                                     l3904 367A  
                                                     l3752 795E  
                                                     l3744 78F6  
                                                     l3736 78B0  
                                                     l3760 73E4  
                                                     l4640 1284  
                                                     l4624 11B8  
                                                     l4632 1208  
                                                     l4608 106C  
                                                     l4560 0CEC  
                                                     l4528 0AD2  
                                                     l4536 0B3C  
                                                     l4464 063A  
                                                     l4456 05B2  
                                                     l4448 04F2  
                                                     l4392 0126  
                                                     l4384 010E  
                                                     l4376 00FA  
                                                     l4368 00D6  
                                                     l5088 6B8C  
                                                     l5264 7D02  
                                                     l5256 7C8C  
                                                     l5248 7C38  
                                                     l5416 7660  
                                                     l5408 7608  
                                                     l5440 771C  
                                                     l5432 76C8  
                                                     l5424 767A  
                                                     l5600 16F0  
                                                     l5520 146C  
                                                     l5194 748E  
                                                     l5450 7100  
                                                     l5338 65AE  
                                                     l5290 64F4  
                                                     l4298 1F3C  
                                                     l5098 2A5E  
                                                     l5282 6790  
                                                     l5274 6788  
                                                     l4810 297A  
                                                     l4802 2916  
                                                     l4730 26AC  
                                                     l4722 267E  
                                                     l4714 2640  
                                                     l4706 2618  
                                                     l5178 6F38  
                                                     l5354 6E36  
                                                     l5370 6D08  
                                                     l5362 6CDE  
                                                     l5186 70B2  
                                                     l3818 6A04  
                                                     l3770 72BE  
                                                     l3834 6A80  
                                                     l3826 6A48  
                                                     l3690 3F92  
                                                     l3682 3F60  
                                                     l3674 3EE6  
                                                     l3666 3E98  
                                                     l3658 3E5C  
                                                     l3850 2E60  
                                                     l3842 2DF6  
                                                     l3930 37A4  
                                                     l3922 3716  
                                                     l3914 36E8  
                                                     l3906 367C  
                                                     l3746 7928  
                                                     l3738 78B8  
                                                     l3762 73F8  
                                                     l3754 73A4  
                                                     l4650 1338  
                                                     l4634 1234  
                                                     l4626 11C8  
                                                     l4618 111A  
                                                     l4538 0B68  
                                                     l4546 0BD0  
                                                     l4474 06DC  
                                                     l4466 0666  
                                                     l4458 05EA  
                                                     l4394 0180  
                                                     l5258 7CA2  
                                                     l5266 7D14  
                                                     l5418 6670  
                                                     l5442 773E  
                                                     l5434 76EA  
                                                     l5426 7698  
                                                     l5610 1780  
                                                     l5602 170A  
                                                     l5530 14A8  
                                                     l5522 1470  
                                                     l5514 1462  
                                                     l5196 7492  
                                                     l5452 7184  
                                                     l5460 71C8  
                                                     l5292 64F8  
                                                     l4900 2334  
                                                     l5284 6792  
                                                     l5276 678A  
                                                     l4820 29D4  
                                                     l4812 299A  
                                                     l4804 2940  
                                                     l4732 26C8  
                                                     l4724 268E  
                                                     l4716 2652  
                                                     l4708 2620  
                                                     l5356 6E56  
                                                     l5380 6D44  
                                                     l5372 6D20  
                                                     l5364 6CEE  
                                                     l5188 70C6  
                                                     l3780 731E  
                                                     l3772 72D2  
                                                     l3836 6A84  
                                                     l3828 6A60  
                                                     l3692 3FB2  
                                                     l3684 3F62  
                                                     l3676 3EFA  
                                                     l3668 3EA6  
                                                     l3860 2ECE  
                                                     l3852 2E80  
                                                     l3844 2E28  
                                                     l3940 3840  
                                                     l3932 37C6  
                                                     l3924 371C  
                                                     l3916 36F4  
                                                     l3908 369C  
                                                     l3748 7948  
                                                     l3764 742C  
                                                     l3756 73C6  
                                                     l4652 1362  
                                                     l4660 13B2  
                                                     l4636 125C  
                                                     l4580 0E66  
                                                     l4572 0DAA  
                                                     l4564 0D28  
                                                     l4548 0C0C  
                                                     l4556 0C76  
                                                     l4492 085E  
                                                     l4484 07A2  
                                                     l4476 0718  
                                                     l4468 068E  
                                                     l4396 01AC  
                                                     l4388 0118  
                                                     l5444 7746  
                                                     l5436 76F2  
                                                     l5428 76A0  
                                                     l5620 17CA  
                                                     l5612 1784  
                                                     l5604 171E  
                                                     l5540 14EA  
                                                     l5532 14D4  
                                                     l5524 1474  
                                                     l5516 1462  
                                                     l5198 74A4  
                                                     l5454 71BA  
                                                     l4910 23CE  
                                                     l4902 2340  
                                                     l4830 2116  
                                                     l5278 678C  
                                                     l4822 29D8  
                                                     l4814 29B6  
                                                     l4806 2944  
                                                     l4750 2724  
                                                     l4734 26D8  
                                                     l4742 26FA  
                                                     l4726 2692  
                                                     l4718 2654  
                                                     l5358 6E66  
                                                     l5470 6564  
                                                     l5382 6D4A  
                                                     l5374 6D32  
                                                     l5366 6D00  
                                                     l5390 6D98  
                                                     l3782 7334  
                                                     l3774 72E6  
                                                     l3686 3F76  
                                                     l3678 3F0E  
                                                     l3870 2F70  
                                                     l3862 2ED8  
                                                     l3854 2EA0  
                                                     l3846 2E48  
                                                     l3942 3846  
                                                     l3934 37E4  
                                                     l3926 3722  
                                                     l3918 36FC  
                                                     l3950 3A84  
                                                     l3766 744C  
                                                     l3758 73CE  
                                                     l4662 13DE  
                                                     l4670 140E  
                                                     l4654 1372  
                                                     l4638 1276  
                                                     l4646 12C4  
                                                     l4590 0F1E  
                                                     l4582 0EA2  
                                                     l4574 0DE6  
                                                     l4566 0D54  
                                                     l4558 0CA2  
                                                     l4494 089A  
                                                     l4486 07DE  
                                                     l4478 0750  
                                                     l4398 01AE  
                                                     l5446 7768  
                                                     l5438 7714  
                                                     l5630 1846  
                                                     l5622 17E2  
                                                     l5614 1788  
                                                     l5606 1746  
                                                     l5550 152E  
                                                     l5542 14F6  
                                                     l5534 14D8  
                                                     l5526 1478  
                                                     l5518 1468  
                                                     l5296 6644  
                                                     l4920 2432  
                                                     l4912 23EC  
                                                     l4904 235C  
                                                     l4840 2160  
                                                     l4832 2122  
                                                     l4816 29BC  
                                                     l4808 2964  
                                                     l4760 2778  
                                                     l4752 2740  
                                                     l4744 2710  
                                                     l4736 26E0  
                                                     l4728 269A  
                                                     l5480 656E  
                                                     l5472 6566  
                                                     l5384 6D50  
                                                     l5376 6D38  
                                                     l5368 6D02  
                                                     l5392 6D9A  
                                                     l5288 651A  
                                                     l3784 7338  
                                                     l3776 72FA  
                                                     l3688 3F7C  
                                                     l3696 7D26  
                                                     l3880 303A  
                                                     l3872 2F76  
                                                     l3864 2EE0  
                                                     l3856 2EB6  
                                                     l3848 2E5E  
                                                     l3944 3856  
                                                     l3936 3802  
                                                     l3928 3784  
                                                     l3960 3AD2  
                                                     l3952 3A96  
                                                     l3768 7460  
                                                     l3792 67DA  
                                                     l4664 13EC  
                                                     l4648 1300  
                                                     l4576 0E2C  
                                                     l4568 0D8A  
                                                     l4488 0824  
                                                     l5464 3FDC  
                                                     l5640 1904  
                                                     l5632 1870  
                                                     l5624 180C  
                                                     l5608 1758  
                                                     l5616 179A  
                                                     l5552 1536  
                                                     l5560 1572  
                                                     l5544 14F8  
                                                     l5536 14DE  
                                                     l5528 147C  
                                                     l5298 6664  
                                                     l4930 24B2  
                                                     l4922 2436  
                                                     l4914 23F8  
                                                     l4906 2386  
                                                     l4850 2198  
                                                     l4842 2170  
                                                     l4834 2134  
                                                     l4818 29CE  
                                                     l4770 27E6  
                                                     l4762 278E  
                                                     l4754 2750  
                                                     l4746 2710  
                                                     l4738 26E6  
                                                     l5482 6570  
                                                     l5474 6568  
                                                     l4690 64EA  
                                                     l5378 6D3E  
                                                     l5386 6D5C  
                                                     l5490 6CA8  
                                                     l3786 7370  
                                                     l3778 7306  
                                                     l3698 7D2A  
                                                     l3890 309C  
                                                     l3882 3058  
                                                     l3866 2EE8  
                                                     l3874 2FDA  
                                                     l3858 2EC6  
                                                     l3938 382A  
                                                     l3946 385C  
                                                     l3970 3B5C  
                                                     l3962 3ADA  
                                                     l3954 3A9E  
                                                     l4666 1400  
                                                     l5394 7580  
                                                     l5650 197A  
                                                     l5642 191A  
                                                     l5634 187A  
                                                     l5626 1816  
                                                     l5618 17B4  
                                                     l5562 15AE  
                                                     l5554 154C  
                                                     l5570 15CC  
                                                     l5546 1502  
                                                     l5538 14E4  
                                                     l4940 251E  
                                                     l4932 24BE  
                                                     l4924 2448  
                                                     l4916 240A  
                                                     l4908 23C0  
                                                     l4860 21E6  
                                                     l4852 21AA  
                                                     l4844 2178  
                                                     l4836 2136  
                                                     l4780 2832  
                                                     l4772 27E8  
                                                     l4764 27A2  
                                                     l4756 2760  
                                                     l4692 25BA  
                                                     l5484 6572  
                                                     l5476 656A  
                                                     l5468 6558  
                                                     l5388 6D64  
                                                     l3788 7384  
                                                     l3892 30B2  
                                                     l3876 2FFA  
                                                     l3884 306A  
                                                     l3868 2F6A  
                                                     l3980 3BCC  
                                                     l3972 3B60  
                                                     l3964 3AEC  
                                                     l3956 3AB4  
                                                     l3796 685E  
                                                     l4596 0F6C  
                                                     l4588 0EF2  
                                                     l4676 1422  
                                                     l5396 7586  
                                                     l5660 19EC  
                                                     l5652 198A  
                                                     l5644 1944  
                                                     l5636 18D8  
                                                     l5628 1830  
                                                     l5580 1626  
                                                     l5572 15E6  
                                                     l5564 15B4  
                                                     l5556 155C  
                                                     l5548 151A  
                                                     l4950 2592  
                                                     l4942 2532  
                                                     l4934 24D0  
                                                     l4926 247A  
                                                     l4918 241E  
                                                     l4870 223E  
                                                     l4862 21EE  
                                                     l4854 21AC  
                                                     l4846 218A  
                                                     l4838 214C  
                                                     l4790 287C  
                                                     l4782 283E  
                                                     l4774 27F8  
                                                     l4766 27B4  
                                                     l4758 2770  
                                                     l4694 25C6  
                                                     l5478 656C  
                                                     l5486 6C66  
                                                     l3894 30BE  
                                                     l3886 3082  
                                                     l3878 301C  
                                                     l3990 3C26  
                                                     l3982 3BD0  
                                                     l3974 3B82  
                                                     l3958 3ABC  
                                                     l4678 144A  
                                                     l4598 0FA8  
                                                     l5398 759C  
                                                     l5670 1A68  
                                                     l5662 1A02  
                                                     l5654 19B6  
                                                     l5646 1950  
                                                     l5638 18EA  
                                                     l5590 1698  
                                                     l5582 163E  
                                                     l5574 15E8  
                                                     l5566 15BA  
                                                     l5558 156C  
                                                     TRISD 000F95  
                                                     TRISE 000F96  
                                                     l4952 2594  
                                                     l4944 2552  
                                                     l4936 24FA  
                                                     l4880 2290  
                                                     l4872 224C  
                                                     l4864 2216  
                                                     l4856 21C2  
                                                     l4848 2192  
                                                     l4960 68A6  
                                                     l4792 288E  
                                                     l4784 2850  
                                                     l4776 2812  
                                                     l4768 27C2  
                                                     l4696 25D8  
                                                     l5488 6C94  
                                                     l5496 6CB4  
                                                     l3896 30C8  
                                                     l3888 3094  
                                                     l3976 3B90  
                                                     l3968 3B46  
                                                     l3992 343A  
                                                     l5672 1A7E  
                                                     l5664 1A1A  
                                                     l5680 1AEC  
                                                     l5656 19C2  
                                                     l5648 1956  
                                                     l5592 16A8  
                                                     l5584 165E  
                                                     l5576 15FE  
                                                     l5568 15C6  
                                                     l4970 79CE  
                                                     l4946 2570  
                                                     l4954 259C  
                                                     l4938 24FE  
                                                     l4890 22D2  
                                                     l4882 229C  
                                                     l4874 2256  
                                                     l4866 2228  
                                                     l4858 21D6  
                                                     l4962 68B6  
                                                     l4794 28C0  
                                                     l4778 282C  
                                                     l4786 2864  
                                                     l4698 25DA  
                                                     l5498 6CCE  
                                                     l3898 30DA  
                                                     l3986 3C0C  
                                                     l3978 3BC8  
                                                     l3994 344E  
                                                     l5762 0150  
                                                     l5690 1B38  
                                                     l5682 1B06  
                                                     l5674 1AA8  
                                                     l5666 1A44  
                                                     l5658 19D2  
                                                     l5594 16B8  
                                                     l5586 166E  
                                                     l5578 161E  
                                                     l4980 7A4C  
                                                     l4972 7A02  
                                                     l4956 25A2  
                                                     l4948 2580  
                                                     l4892 22DE  
                                                     l4884 22A8  
                                                     l4876 226C  
                                                     l4788 2878  
                                                     l5764 3D32  
                                                     l3988 3C22  
                                                     l3996 3450  
                                                     l5692 1B40  
                                                     l5684 1B1A  
                                                     l5676 1AB2  
                                                     l5668 1A4E  
                                                     l5596 16D0  
                                                     l5588 1684  
                                                     l4982 7AA2  
                                                     l4974 7A12  
                                                     l4966 798C  
                                                     l4894 22EE  
                                                     l4886 22B6  
                                                     l4878 2278  
                                                     l4990 6730  
                                                     l4798 28F8  
                                                     l3998 3470  
                                                     l5694 1B60  
                                                     l5686 1B1E  
                                                     l5678 1ADE  
                                                     l5598 16DC  
                                                     l4984 7AA8  
                                                     l4976 7A26  
                                                     l4968 79BE  
                                                     l4896 2308  
                                                     l4888 22C2  
                                                     l4992 6740  
                                                     l5688 1B2E  
                                                     l4978 7A38  
                                                     l4898 2318  
                                                     l4996 7AB4  
                                                     l4988 6716  
                                                     l4998 7AD0  
                                                     STR_1 7F3B  
                                                     STR_2 7EC9  
                                                     STR_3 7FBB  
                                                     STR_4 7F6C  
                                                     STR_5 7FA9  
                                                     STR_6 7FC4  
                                                     STR_7 7FB2  
                                                     STR_8 7F09  
                                                     STR_9 7F93  
                                            _state_changed 01B0  
                                                     _LATA 000F89  
                                                     _LATB 000F8A  
                                                     _LATC 000F8B  
                                                     u4000 6B4A  
                                                     u4010 6B64  
                                                     u4011 6B5E  
                                                     u4020 67CC  
                                                     u4100 2E5C  
                                                     u4021 67C4  
                                                     u4101 2E56  
                                                     u4030 67D0  
                                                     u4110 2E7E  
                                                     u4111 2E78  
                                                     u5000 1F12  
                                                     u4040 6A02  
                                                     u4200 3094  
                                                     u4120 2EB4  
                                                     u5001 1F0C  
                                                     u4041 69FC  
                                                     u4201 308E  
                                                     u4121 2EAE  
                                                     u5010 1F26  
                                                     u4050 6A34  
                                                     u4210 30B0  
                                                     u4130 2EC6  
                                                     u5011 1F20  
                                                     u4051 6A2E  
                                                     u4211 30AA  
                                                     u4131 2EC0  
                                                     u5100 202E  
                                                     u5020 1F58  
                                                     u4060 6A5E  
                                                     u4140 2FF8  
                                                     u4300 3828  
                                                     u4220 3678  
                                                     u5101 2028  
                                                     u5021 1F52  
                                                     u4061 6A58  
                                                     u4141 2FF2  
                                                     u4301 3822  
                                                     u4221 3672  
                                                     u5110 206C  
                                                     u5030 1F6E  
                                                     u4150 301A  
                                                     u4070 2E08  
                                                     u4310 383E  
                                                     u4230 369A  
                                                     u5111 2066  
                                                     u5031 1F68  
                                                     u4151 3014  
                                                     u4071 2E00  
                                                     u4311 3838  
                                                     u4231 3694  
                                                     u6000 2446  
                                                     u5120 2084  
                                                     u5040 1F92  
                                                     u4160 3038  
                                                     u4080 2E0C  
                                                     u4240 375C  
                                                     u4400 3C06  
                                                     u5200 01D8  
                                                     u6001 2440  
                                                     u5121 207E  
                                                     u5041 1F8C  
                                                     u4161 3032  
                                                     u4401 3C00  
                                                     u4321 3A8E  
                                                     u5201 01D2  
                                                     u6010 2478  
                                                     u5130 2098  
                                                     u5050 1FA8  
                                                     u3610 71F0  
                                                     u4170 3056  
                                                     u4090 2E26  
                                                     u4250 37A2  
                                                     u4410 3C48  
                                                     u4330 3AB2  
                                                     u5210 0220  
                                                     u6011 2472  
                                                     u5131 2092  
                                                     u5051 1FA2  
                                                     u3611 71EA  
                                                     u4171 3050  
                                                     u4091 2E20  
                                                     u4251 379C  
                                                     u4411 3C42  
                                                     u4331 3AAC  
                                                     u5211 021A  
                                                     u6100 7A24  
                                                     u3700 690C  
                                                     u6020 2496  
                                                     u5140 20BC  
                                                     u5060 1FBE  
                                                     u3620 7206  
                                                     u4180 306A  
                                                     u4260 37C4  
                                                     u4340 3AEA  
                                                     u4420 344C  
                                                     u4500 313E  
                                                     u5300 042E  
                                                     u5220 02A8  
                                                     u6101 7A1E  
                                                     u3701 6906  
                                                     u6021 2490  
                                                     u5141 20B6  
                                                     u5061 1FB8  
                                                     u3621 7200  
                                                     u4181 3064  
                                                     u4261 37BE  
                                                     u4245 3748  
                                                     u4341 3AE4  
                                                     u4421 3446  
                                                     u4501 3138  
                                                     u5301 0428  
                                                     u5221 02A0  
                                                     u6110 7A4A  
                                                     u6030 24B0  
                                                     u5150 20D4  
                                                     u5070 1FD8  
                                                     u3630 7234  
                                                     u3710 3E3A  
                                                     u4190 3080  
                                                     u4270 37E2  
                                                     u4350 3B0C  
                                                     u4430 346E  
                                                     u4510 3170  
                                                     u5310 04B8  
                                                     u5230 02AC  
                                                     u6111 7A44  
                                                     u6031 24AA  
                                                     u5151 20CE  
                                                     u5071 1FD2  
                                                     u3631 722E  
                                                     u3711 3E34  
                                                     u4191 307A  
                                                     u4271 37DC  
                                                     u4351 3B06  
                                                     u4431 3468  
                                                     u4511 316A  
                                                     u5311 04B2  
                                                     u6120 7AA0  
                                                     u6200 7BC0  
                                                     u6040 24CE  
                                                     u5160 20F8  
                                                     u5080 1FF6  
                                                     u3640 726E  
                                                     u3720 3E72  
                                                     u3800 7DB6  
                                                     u4280 3800  
                                                     u4360 3B40  
                                                     u4440 35C4  
                                                     u4600 3356  
                                                     u4520 31DA  
                                                     u5400 0898  
                                                     u5320 04F2  
                                                     u5240 02C6  
                                                     u7000 1898  
                                                     u6121 7A9A  
                                                     u6201 7BBA  
                                                     u6041 24C8  
                                                     u5161 20F2  
                                                     u5081 1FF0  
                                                     u3641 7268  
                                                     u3721 3E6C  
                                                     u3801 7DB0  
                                                     u4281 37FA  
                                                     u4361 3B3A  
                                                     u4441 35BE  
                                                     u4601 3350  
                                                     u4521 31D4  
                                                     u5401 0892  
                                                     u5321 04EC  
                                                     u5241 02C0  
                                                     u6210 38A0  
                                                     u6050 251C  
                                                     u6130 672E  
                                                     u5090 2010  
                                                     u3650 6984  
                                                     u3810 7DE8  
                                                     u4290 3814  
                                                     u4370 3B82  
                                                     u4450 35E6  
                                                     u4610 3378  
                                                     u4530 322C  
                                                     u5410 0914  
                                                     u5330 05B0  
                                                     u5250 02F0  
                                                     u5170 00A4  
                                                     u7010 18B4  
                                                     u6211 389A  
                                                     u6051 2516  
                                                     u6131 6728  
                                                     u5091 200A  
                                                     u3651 697E  
                                                     u3731 3EA0  
                                                     u3811 7DE2  
                                                     u4291 380E  
                                                     u4371 3B7C  
                                                     u4451 35E0  
                                                     u4611 3372  
                                                     u4531 3224  
                                                     u5411 090E  
                                                     u5331 05AA  
                                                     u5251 02EA  
                                                     u5171 009E  
                                                     u7011 18AC  
                                                     u6300 3A66  
                                                     u6220 38B2  
                                                     u6140 7ACE  
                                                     u6060 2550  
                                                     u4700 3DC6  
                                                     u3660 69C2  
                                                     u3740 3EC6  
                                                     u3820 7E1C  
                                                     u4380 3BB4  
                                                     u3900 742A  
                                                     u4460 3604  
                                                     u4620 3396  
                                                     u4540 3230  
                                                     u5500 0C72  
                                                     u5420 099E  
                                                     u5340 05EA  
                                                     u5260 0332  
                                                     u5180 0196  
                                                     u7100 1A66  
                                                     u7020 18B8  
                                                     u6301 3A60  
                                                     u6221 38AC  
                                                     u6141 7AC8  
                                                     u6061 254A  
                                                     u3741 3EC0  
                                                     u3821 7E16  
                                                     u3901 7424  
                                                     u4461 35FE  
                                                     u4621 3390  
                                                     u5421 0998  
                                                     u5341 05E4  
                                                     u5261 032C  
                                                     u5181 0190  
                                                     u7101 1A60  
                                                     u6230 3916  
                                                     u6150 7B0A  
                                                     u6070 2590  
                                                     u4710 3DE0  
                                                     u3670 69D4  
                                                     u3910 72D0  
                                                     u3750 3EF8  
                                                     u3830 7E6C  
                                                     u4390 3BF2  
                                                     u4470 3622  
                                                     u4630 33B4  
                                                     u4550 324A  
                                                     u5510 0CA0  
                                                     u5430 0A2A  
                                                     u5350 0664  
                                                     u5270 03E6  
                                                     u5190 01AA  
                                                     u6310 6BE4  
                                                     u7110 1A7C  
                                                     u7030 18D6  
                                                     u6231 3910  
                                                     u6071 258A  
                                                     u4711 3DDA  
                                                     u3671 69CE  
                                                     u3911 72CA  
                                                     u3751 3EF2  
                                                     u3831 7E66  
                                                     u4391 3BEC  
                                                     u4471 361C  
                                                     u4631 33AE  
                                                     u4551 3244  
                                                     u5511 0C9A  
                                                     u5431 0A24  
                                                     u5351 065E  
                                                     u5271 03DE  
                                                     u5191 01A4  
                                                     u6311 6BDE  
                                                     u7111 1A76  
                                                     u7031 18D0  
                                                     u6080 79BC  
                                                     u6240 3976  
                                                     u6160 7B3C  
                                                     u4800 1BB6  
                                                     u6400 2D96  
                                                     u6320 2A2E  
                                                     u4720 3DF6  
                                                     u3920 72F8  
                                                     u3760 3F3E  
                                                     u4480 3636  
                                                     u3680 6850  
                                                     u4640 33C8  
                                                     u4560 3282  
                                                     u5600 118E  
                                                     u5520 0D52  
                                                     u5440 0A88  
                                                     u5360 068E  
                                                     u5280 03EA  
                                                     u7120 1AA6  
                                                     u7040 1902  
                                                     u6081 79B6  
                                                     u6241 3970  
                                                     u6161 7B36  
                                                     u4801 1BB0  
                                                     u6401 2D90  
                                                     u4721 3DF0  
                                                     u3921 72F2  
                                                     u3761 3F38  
                                                     u3841 7888  
                                                     u4481 3630  
                                                     u3681 6848  
                                                     u4641 33C2  
                                                     u4561 327A  
                                                     u5601 1188  
                                                     u5521 0D4C  
                                                     u5361 0688  
                                                     u7121 1AA0  
                                                     u7041 18FC  
                                                     u6090 7A00  
                                                     u6250 39C8  
                                                     u6170 7B54  
                                                     u4810 1C02  
                                                     u6330 2A5C  
                                                     u3930 735A  
                                                     u3770 3F90  
                                                     u4730 77A6  
                                                     u3850 78AE  
                                                     u3690 6854  
                                                     u4650 33DC  
                                                     u4570 3286  
                                                     u4490 311C  
                                                     u5610 1232  
                                                     u5530 0DE4  
                                                     u5450 0AD0  
                                                     u5370 0716  
                                                     u5290 0404  
                                                     u6410 6C08  
                                                     u7130 1ADC  
                                                     u7050 1942  
                                                     u6091 79FA  
                                                     u6251 39C2  
                                                     u6171 7B4E  
                                                     u6155 7AFE  
                                                     u4811 1BFC  
                                                     u6331 2A56  
                                                     u3667 69B8  
                                                     u3931 7354  
                                                     u3771 3F8A  
                                                     u4387 3BAA  
                                                     u4731 77A0  
                                                     u3851 78A8  
                                                     u4651 33D6  
                                                     u4491 3116  
                                                     u5611 122C  
                                                     u5531 0DDE  
                                                     u5507 0C62  
                                                     u5451 0ACA  
                                                     u5371 0710  
                                                     u5291 03FE  
                                                     u6411 6C02  
                                                     u7131 1AD6  
                                                     u7051 193C  
                                                     u6500 7536  
                                                     u6260 39EE  
                                                     u6180 7B84  
                                                     u4900 1D66  
                                                     u4820 1C1E  
                                                     u6340 2A96  
                                                     u5700 2668  
                                                     u6420 6F0E  
                                                     u4660 3C98  
                                                     u3940 736E  
                                                     u3780 7D3A  
                                                     u4740 77E6  
                                                     u3860 78E0  
                                                     u4580 32A0  
                                                     u5620 125C  
                                                     u5540 0EA0  
                                                     u5460 0B38  
                                                     u5380 0750  
                                                     u7140 1B04  
                                                     u7060 1978  
                                                     u6501 7530  
                                                     u6261 39E8  
                                                     u6181 7B7E  
                                                     u4901 1D60  
                                                     u4821 1C18  
                                                     u6325 2A22  
                                                     u5701 2662  
                                                     u6421 6F08  
                                                     u4661 3C92  
                                                     u3941 7368  
                                                     u3781 7D34  
                                                     u4741 77E0  
                                                     u3861 78DA  
                                                     u4581 329A  
                                                     u5621 1256  
                                                     u5541 0E9A  
                                                     u5381 074A  
                                                     u7141 1AFE  
                                                     u7061 1972  
                                                     u6510 7564  
                                                     u6270 3A02  
                                                     u6190 7BAC  
                                                     u4910 1D8C  
                                                     u4830 1C36  
                                                     u6350 2AB6  
                                                     u5710 267C  
                                                     u6430 6F2C  
                                                     u4670 3CD4  
                                                     u3790 7D72  
                                                     u4750 7808  
                                                     u3870 7926  
                                                     u3950 680E  
                                                     u4590 330E  
                                                     u5630 12FE  
                                                     u5550 0F1C  
                                                     u5470 0B66  
                                                     u5390 07DC  
                                                     u7150 1B18  
                                                     u7070 19EA  
                                                     u6511 755E  
                                                     u6271 39FC  
                                                     u6191 7BA6  
                                                     u4911 1D86  
                                                     u4831 1C30  
                                                     u6351 2AB0  
                                                     u5711 2676  
                                                     u6431 6F26  
                                                     u4671 3CCE  
                                                     u3791 7D6C  
                                                     u4751 7802  
                                                     u3871 7920  
                                                     u3951 6806  
                                                     u5631 12F8  
                                                     u5551 0F16  
                                                     u5471 0B60  
                                                     u5447 0A7C  
                                                     u5391 07D6  
                                                     u7151 1B12  
                                                     u7071 19E4  
                                                     u6280 3A14  
                                                     u4920 1DB4  
                                                     u4840 1C4A  
                                                     u6360 2AFE  
                                                     u5800 2876  
                                                     u5720 26C6  
                                                     u6600 6DCA  
                                                     u6440 70B0  
                                                     u4680 3CF6  
                                                     u4760 781E  
                                                     u3880 73C4  
                                                     u3960 6812  
                                                     u5640 1338  
                                                     u5560 0FA6  
                                                     u5480 0BCC  
                                                     u6520 7C00  
                                                     u7160 1B5E  
                                                     u7080 1A18  
                                                     u6281 3A0E  
                                                     u4921 1DAE  
                                                     u4841 1C44  
                                                     u6361 2AF8  
                                                     u6345 2A8A  
                                                     u5801 2870  
                                                     u5721 26C0  
                                                     u6441 70AA  
                                                     u4681 3CF0  
                                                     u4761 7818  
                                                     u3881 73BE  
                                                     u5641 1332  
                                                     u5561 0FA0  
                                                     u6521 7BFA  
                                                     u7161 1B58  
                                                     u7081 1A12  
                                                     u7217 17BC  
                                                     u6290 3A54  
                                                     u4930 1DC6  
                                                     u4850 1C90  
                                                     u6370 2C0A  
                                                     u5810 288C  
                                                     u5730 270E  
                                                     u6610 6DDC  
                                                     u6450 70E6  
                                                     u4690 3DC2  
                                                     u4770 7850  
                                                     u3890 73F6  
                                                     u3970 6896  
                                                     u5650 13DC  
                                                     u5570 1032  
                                                     u5490 0C0A  
                                                     u6530 7C36  
                                                     u7090 1A42  
                                                     u6291 3A4E  
                                                     u4931 1DC0  
                                                     u4851 1C8A  
                                                     u6371 2C04  
                                                     u5811 2886  
                                                     u5731 2708  
                                                     u7307 65E0  
                                                     u6611 6DD6  
                                                     u6451 70E0  
                                                     u4691 3DBA  
                                                     u4771 784A  
                                                     u3891 73F0  
                                                     u3971 688E  
                                                     u4595 32FA  
                                                     u5651 13D6  
                                                     u5571 102C  
                                                     u5491 0C04  
                                                     u5467 0B28  
                                                     u6531 7C30  
                                                     u7091 1A3C  
                                                     u7227 190C  
                                                     u6460 74A2  
                                                     u5900 214A  
                                                     u4940 1DDA  
                                                     u4860 1CA2  
                                                     u4780 1B8A  
                                                     u6380 2CAE  
                                                     u5820 28BE  
                                                     u5740 278C  
                                                     u5660 25D6  
                                                     u3980 689A  
                                                     u5580 106C  
                                                     u6540 7CA0  
                                                     u6620 759A  
                                                     u6700 7712  
                                                     u6461 749C  
                                                     u5901 2144  
                                                     u4941 1DD4  
                                                     u4861 1C9C  
                                                     u4781 1B84  
                                                     u6381 2CA8  
                                                     u5821 28B8  
                                                     u5741 2786  
                                                     u5661 25D0  
                                                     u5581 1066  
                                                     u6541 7C9A  
                                                     u6621 7594  
                                                     u6701 770C  
                                                     u7237 19F4  
                                                     u6470 74C2  
                                                     u5910 215E  
                                                     u4950 1E12  
                                                     u4870 1D18  
                                                     u4790 1BA2  
                                                     u6390 2D76  
                                                     u5830 28DC  
                                                     u5750 27B2  
                                                     u5670 25EE  
                                                     u3990 6B46  
                                                     u5590 1154  
                                                     u6550 7CB4  
                                                     u6630 75C6  
                                                     u6710 773C  
                                                     u6471 74BC  
                                                     u5911 2158  
                                                     u4951 1E0C  
                                                     u4871 1D12  
                                                     u4791 1B9C  
                                                     u5831 28D6  
                                                     u5751 27AC  
                                                     u5671 25E8  
                                                     u7247 65FE  
                                                     u6607 6DC0  
                                                     u3991 6B3E  
                                                     u5591 114E  
                                                     u5487 0BBC  
                                                     u6551 7CAE  
                                                     u6631 75C0  
                                                     u6711 7736  
                                                     u6480 74EE  
                                                     u5920 21A8  
                                                     u4960 1E24  
                                                     u4880 1D34  
                                                     u5840 28F6  
                                                     u5760 27E4  
                                                     u5680 2602  
                                                     u6560 7CE6  
                                                     u6640 75F2  
                                                     u6720 7766  
                                                     u6800 154A  
                                                     u6481 74E8  
                                                     u5921 21A2  
                                                     u4961 1E1E  
                                                     u4881 1D2C  
                                                     u5841 28F0  
                                                     u5761 27DE  
                                                     u5681 25FC  
                                                     u7257 660A  
                                                     u6561 7CE0  
                                                     u6641 75EC  
                                                     u6721 7760  
                                                     u6801 1544  
                                                     u6490 7514  
                                                     u6730 7182  
                                                     u5930 21C0  
                                                     u4970 1E4A  
                                                     u4890 1D38  
                                                     u5850 2914  
                                                     u5770 2810  
                                                     u5690 2650  
                                                     u6570 6530  
                                                     u6650 761E  
                                                     u6810 15E4  
                                                     u6491 750E  
                                                     u6731 717C  
                                                     u5931 21BA  
                                                     u4971 1E44  
                                                     u6395 2D6A  
                                                     u5851 290E  
                                                     u5771 280A  
                                                     u5691 264A  
                                                     u7267 6CF4  
                                                     u6571 652A  
                                                     u6651 7618  
                                                     u6811 15DE  
                                                     u6740 71B8  
                                                     u5940 21D4  
                                                     u4980 1E8A  
                                                     u5860 2962  
                                                     u5780 282A  
                                                     u6580 6E54  
                                                     u6660 764A  
                                                     u6900 171C  
                                                     u6820 15FC  
                                                     u6741 71B2  
                                                     u5941 21CE  
                                                     u4981 1E84  
                                                     u5861 295C  
                                                     u5781 2824  
                                                     u6581 6E4E  
                                                     u7277 6D0E  
                                                     u6661 7644  
                                                     u6901 1716  
                                                     u6821 15F6  
                                                     u5950 2214  
                                                     u4990 1ED4  
                                                     u5870 2998  
                                                     u5790 284E  
                                                     u6590 6D94  
                                                     u6670 7696  
                                                     u6750 3FFA  
                                                     u6910 1744  
                                                     u6830 161C  
                                                     u5951 220E  
                                                     u4991 1ECE  
                                                     u5871 2992  
                                                     u5791 2848  
                                                     u7287 6D26  
                                                     u6671 7690  
                                                     u6751 3FF4  
                                                     u6911 173E  
                                                     u6831 1616  
                                                     u5960 2228  
                                                     u5880 29CC  
                                                     u6760 6C92  
                                                     u6680 76BE  
                                                     u6920 177E  
                                                     u6840 163C  
                                                     u5961 2222  
                                                     u5881 29C6  
                                                     u7297 65D4  
                                                     u6761 6C8C  
                                                     u6681 76B8  
                                                     u6921 1778  
                                                     u6841 1636  
                                                     u5970 23A8  
                                                     u5890 2132  
                                                     u6690 76E8  
                                                     u6930 17B2  
                                                     u6850 165C  
                                                     u5891 212C  
                                                     u6691 76E2  
                                                     u6931 17AC  
                                                     u6851 1656  
                                                     u5980 2408  
                                                     u6940 17E0  
                                                     u6860 1682  
                                                     u6780 1518  
                                                     u5981 2402  
                                                     u6597 6D8A  
                                                     u6941 17DA  
                                                     u6861 167C  
                                                     u6781 1512  
                                                     u5990 2430  
                                                     u6950 180A  
                                                     u6870 1696  
                                                     u6790 152C  
                                                     u5991 242A  
                                                     u5975 239C  
                                                     u6951 1804  
                                                     u6871 1690  
                                                     u6791 1526  
                                                     u6960 182E  
                                                     u6880 16CE  
                                                     u6961 1828  
                                                     u6881 16C8  
                                                     u6970 1844  
                                                     u6890 1708  
                                                     u6971 183E  
                                                     u6891 1702  
                                                     u6980 186E  
                                                     u6981 1868  
                                                     u6990 1894  
                                                     u6991 188C  
                                                     _TMR2 000FCC  
                                                     abs@a 0013  
                                                     _dbuf 0098  
                                                     _atoi 3C56  
                                                     _ctoa 6A46  
                                                     _main 1462  
                                                     _dtoa 2DD4  
                                                     _fosc 7EC5  
                                                     _prec 0088  
                                                     _otoa 3664  
                                                     _nout 0084  
                                                     pad@i 0018  
                                                     pad@p 0015  
                                                     fsr1h 000FE2  
                                                     fsr2h 000FDA  
                                                     indf1 000FE7  
                                                     indf2 000FDF  
                                                     fsr1l 000FE1  
                                                     pad@w 001A  
                                                     fsr2l 000FD9  
                                                     _tosc 00E9  
                                                     _stoa 3A82  
                                                     btemp 007F  
                                                     _utoa 3438  
                                                     _xtoa 3108  
                              update_pwm_duty_ccp1@time_up 00D4  
                                              main@rx_char 01A2  
                                                     prodh 000FF4  
                                            _trash_counter 01A5  
                                                     prodl 000FF3  
                                                     start 0076  
                                          ___fldiv@new_exp 0057  
         state_translator_fpga_to_micro@state_machine_code 0005  
                                             ___param_bank 000000  
                                                    ??_abs 0015  
                                     _update_pwm_duty_ccp1 6E92  
                                                    ??_pad 0017  
                                            ___fltol@sign1 00D2  
                                          __end_of___aodiv 3FD8  
                                                    ?_atoi 0008  
                                                    ?_ctoa 001C  
                                          __end_of___fladd 2114  
                                                    ?_main 0001  
                                                    ?_dtoa 001C  
                                          __end_of___aomod 7EB4  
                                          __end_of___fldiv 29EA  
                                          __end_of___awdiv 757C  
                                          __end_of___flneg 6756  
                                                    STR_10 7FFC  
                                                    STR_11 7FCF  
                                                    STR_13 7FCF  
                                                    STR_22 7FD0  
                                                    STR_31 7FEA  
                                                    STR_15 7FD3  
                                                    STR_40 7FDB  
                                                    STR_17 7FD3  
                                                    STR_33 7FED  
                                                    STR_26 7FD4  
                                                    STR_50 7FF3  
                                                    STR_35 7FED  
                                                    STR_60 7FD8  
                                                    STR_45 7FDC  
                                                    STR_29 7FEA  
                                                    STR_53 7FD7  
                                                    STR_70 7FDF  
                                                    STR_38 7FDB  
                                                    STR_55 7FD7  
                                                    STR_63 7FF0  
                                                    STR_80 7FF6  
                                                    STR_48 7FF3  
                                                    STR_65 7FF0  
                                                    STR_75 7FE0  
                                                    STR_83 7FE3  
                                                    STR_68 7FDF  
                                                    STR_85 7FE3  
                                                    STR_94 7FE4  
                                                    STR_78 7FF6  
                                                    STR_87 7FCB  
                                          __end_of___flmul 25B8  
                                                    STR_89 7FCB  
                                                    STR_98 7FCC  
                                                    ?_otoa 001C  
                                          __end_of___flsub 68EE  
                                          __end_of___fltol 7BEA  
                                                    ?_stoa 000A  
                                                    ?_utoa 001C  
                                                    _T0CON 000FD5  
                                          __end_of___lodiv 798A  
                                          ___awdiv@divisor 0019  
                                                    ?_xtoa 001C  
                                                    _T2CON 000FCA  
                                          __end_of___lomod 748C  
                                                    i2l185 006E  
                              __end_of_update_current_coil 70FE  
                                          ___awdiv@counter 001B  
                                                    _RCREG 000FAE  
                                             vfpfcnvrt@fmt 0045  
                                                    _TMR0H 000FD7  
                                             vfpfcnvrt@llu 0060  
                                                    _TMR0L 000FD6  
                                                    _SPBRG 000FAF  
                                                    _PORTA 000F80  
                                                    _PORTB 000F81  
                                                    _PORTC 000F82  
                                                    _PORTD 000F83  
                                                    _TRISA 000F92  
                                                    _TRISB 000F93  
                                                    _TXREG 000FAD  
                                         ?_get_temperature 00D4  
                                          __end_of_lcd_dat 6618  
                                          __end_of_lcd_cmd 65EE  
                                          __end_of_lcd_str 6DE2  
                                                    _f_osc 7EC1  
                                                    _flags 008A  
                                                    _errno 008C  
                                                    _fputc 71DA  
                                          __end_of_isalpha 68A4  
                                                    _fputs 693A  
                                          __end_of_isdigit 67DA  
                                                    _t_osc 7EBD  
                                                    atoi@n 0015  
                                                    pad@fp 0011  
                                                    atoi@s 0008  
                                                    _width 0086  
                                                    ctoa@c 001E  
                                                    _state 01CD  
                                                    _putch 64D4  
                                                    _toint 7EB5  
                                                    ctoa@w 001F  
                                                    dtoa@d 001E  
                                                    dtoa@i 003E  
                                                    dtoa@n 0036  
                                                    dtoa@p 0030  
                                                    dtoa@s 0034  
                                                    dtoa@w 0032  
                                          __end_of_islower 685E  
                                          __end_of_isspace 6A46  
                                          __end_of_isupper 681C  
                                                    tablat 000FF5  
                                                    otoa@d 001E  
                                                    otoa@i 003C  
                                                    otoa@n 0034  
                                                    otoa@p 002E  
                                                    otoa@t 0030  
                                                    otoa@w 0032  
                                                    plusw1 000FE3  
                                                    plusw2 000FDB  
                                                    stoa@i 0016  
                                                    stoa@l 001E  
                                                    stoa@p 001C  
                                                    stoa@s 000C  
                                                    stoa@w 0018  
                                                    ttemp5 0080  
                                                    ttemp6 0083  
                                                    ttemp7 0087  
                                                    utoa@d 001E  
                                                    utoa@i 003A  
                                                    utoa@n 0032  
                                                    utoa@p 002E  
                                                    utoa@w 0030  
                                                    status 000FD8  
                                                    wtemp8 0080  
                                                    xtoa@c 0041  
                                                    xtoa@d 001E  
                                                    xtoa@i 003F  
                                                    xtoa@n 0037  
                                                    xtoa@p 0033  
                                                    xtoa@w 0035  
                                                    xtoa@x 0026  
                                          __end_of_strncmp 7880  
                                          __end_of_toupper 6B82  
                                         ___lodiv@dividend 0001  
                                       _end_effector_homed 01A7  
                                          ??_get_reg_value 0001  
                                             _toupper$1896 000D  
                                     get_reg_value@rx_char 0001  
                                          __initialization 6AAC  
                                             __end_of_atoi 3E24  
                                             __end_of_ctoa 6AAC  
                                             __end_of_main 1B6C  
                                             __end_of_dtoa 3108  
                                             __end_of_fosc 7EC9  
                                             __end_of_otoa 388A  
                                             __end_of_stoa 3C56  
                                             __end_of_utoa 3664  
                                    ?_update_pwm_duty_ccp1 00D4  
                                             __end_of_xtoa 3438  
                                                   ??_atoi 000A  
                                                   ??_ctoa 001F  
                                                   ??_main 00DD  
                                                   ??_dtoa 0026  
                                                   ??_otoa 0026  
                                                   ??_stoa 000E  
                                                   ??_utoa 0026  
                                                   ??_xtoa 0027  
                                            __activetblptr 000002  
                                          ??_rx_char_usart 0001  
                                         ___lodiv@quotient 0011  
                                                   _ADCON0 000FC2  
                                                   _ADCON1 000FC1  
                                         _change_direction 66A2  
                                                   ?_fputc 0001  
                                                   STR_101 7FF9  
                                                   ?_fputs 000A  
                                                   STR_103 7FF9  
                                                   STR_105 7FE7  
                                                   _ADRESH 000FC4  
                                                   STR_107 7FE7  
                                                   _ADRESL 000FC3  
                             __end_of_turn_on_current_coil 6714  
                                                   _CCPR1L 000FBE  
                                         ___awdiv@dividend 0017  
                                                   ?_putch 0001  
                                                   i2l5700 0030  
                                                   i2l5710 0066  
                                                   i2l5702 0032  
                                                   i2l5704 003C  
                                                   i2l5706 0050  
                                                   i2l5708 0062  
                                                   i2l5696 000C  
                                                   i2l5698 001E  
                                            main@greet_str 0100  
                                            vfpfcnvrt@done 004F  
                                         __end_of___xxtofl 3A82  
                                            ?_init_timer_0 0001  
                                            ?_init_timer_2 0001  
                   __end_of_state_translator_fpga_to_micro 7678  
                  __size_of_state_translator_fpga_to_micro 00FC  
                           _state_translator_fpga_to_micro 757C  
                                            ?_init_stepper 0001  
                                             vfprintf@cfmt 006E  
                                         __end_of_lcd_init 6D5A  
                                                   ___flge 798A  
                                        _init_timer_2$2136 00D4  
                                                ??___aodiv 0011  
                                                ??___fladd 0067  
                                                ??___aomod 0011  
                                                   ___wmul 6618  
                                                ??___fldiv 004E  
                                                ??___awdiv 001B  
                                                ??___flneg 0005  
                                                ??___flmul 0035  
                                                ??___flsub 0077  
                                                ??___fltol 00CE  
                                                ??___lodiv 0011  
                                                ??___lomod 0011  
                                                   _lcd_wr 64E6  
                                                   clear_0 6AF2  
                                                   clear_1 6AFE  
                                         ___awdiv@quotient 001D  
                                                   pad@buf 0013  
                                                   ctoa@fp 001C  
                                                   _roundf 29EA  
                                                ??_lcd_dat 0002  
                                                ??_lcd_cmd 0002  
                                                   dtoa@fp 001C  
                                                   _strlen 698A  
                                                ??_lcd_str 0005  
                                                   fputc@c 0001  
                                                   fputs@c 000E  
                                                   fputs@i 000F  
                                                   fputs@s 000A  
                                                ??_isalpha 0003  
                                                ??_isdigit 0003  
                                                ??_islower 0003  
                                             __mediumconst 7EB4  
                                                ??_isspace 0003  
                                                   otoa@fp 001C  
                                                   tblptrh 000FF7  
                                                ??_isupper 0003  
                                                   tblptrl 000FF6  
                                                   tblptru 000FF8  
                                  reach_goal@goal_to_reach 0009  
                                                   stoa@cp 001A  
                                                   stoa@fp 000A  
                                                   putch@c 0001  
                                         __end_of_vfprintf 6BF2  
                                                   utoa@fp 001C  
                                         __end_of_snprintf 66A2  
                                                   xtoa@fp 001C  
                                                ??_strncmp 0007  
                                                ??_toupper 0009  
                                               ___flge@ff1 0001  
                                               ___flge@ff2 0005  
                         update_current_coil@stepper_motor 0001  
                                             ___xxtofl@arg 0029  
                                             ___xxtofl@exp 0028  
                                             ___xxtofl@val 001F  
                                               __accesstop 0080  
                                  __end_of__initialization 6B04  
                                               ___flneg@f1 0001  
                                        serial_tx_char@val 0001  
                                           ??_init_timer_0 0001  
                                           ??_init_timer_2 007F  
                                            ___rparam_used 000001  
                                               ___fltol@f1 00CA  
                                           ??_init_stepper 000B  
                                           _tmr2_prescaler 00ED  
                                          _init_interrupts 64DA  
                                   ??_update_pwm_duty_ccp1 00D8  
                                           __pcstackCOMRAM 0001  
                                             __pidataBANK0 6503  
                                             __pidataBANK1 6536  
                                            __end_of_f_osc 7EC5  
                                            __end_of_fputc 72BC  
                                            __end_of_fputs 698A  
                                            __end_of_t_osc 7EC1  
                                            __end_of_putch 64DA  
                                            __end_of_toint 7EB9  
                                          _temperature_int 0090  
                                  __size_of_serial_tx_char 0020  
                      state_translator_fpga_to_micro@state 0003  
                                                  ??_fputc 0005  
                                                  ??_fputs 000E  
                                                  ??_putch 0001  
                                         _mix_current_step 0096  
                                               __pbssBANK0 0080  
                                               __pbssBANK1 01A3  
                                       __size_of_init_ccp1 0024  
                                                  ?___flge 0001  
                                                  ?___wmul 0001  
                      check_temperature@temp_to_be_checked 00D6  
                                                  ?_lcd_wr 0001  
                                                  _CCP1CON 000FBD  
                                     _turn_on_current_coil 66D8  
                                    __end_of_wait_for_zero 4000  
                                  _hex_end_effector_values 01DF  
                                            _read_new_char 01AE  
                                                  ?_roundf 0077  
                                                  ?_strlen 0001  
                                       _temperature_scaled 008E  
                                                ?___xxtofl 001F  
                                  reach_goal@stepper_motor 0007  
                                       __size_of_vfpfcnvrt 13E8  
                        turn_on_current_coil@stepper_motor 0001  
                                         _desired_baudrate 7EB9  
                                                ?_lcd_init 0001  
                                         ___lomod@dividend 0001  
                                  __end_of_init_interrupts 64E6  
                                        _check_temperature 70FE  
                            change_direction@stepper_motor 0001  
                                                  __Hparam 0000  
                                       ?_check_temperature 00D6  
                                                  __Lparam 0000  
                                       __size_of_vsnprintf 013A  
                                               _init_PORTS 6642  
                                               _init_USART 6756  
                                          __size_of___flge 0128  
                                                  ___aodiv 3E24  
                                                  ___fladd 1B6C  
                                                  ___aomod 7D24  
                                                  ___fldiv 25B8  
                                                  ___awdiv 748C  
                                                  ___flneg 6714  
                                                  ___flmul 2114  
                                 __end_of_change_direction 66D8  
                                                  ___flsub 68A4  
                                                  ___fltol 7AB2  
                                          __size_of___wmul 002A  
                                                  ___lodiv 7880  
                                    ?_turn_on_current_coil 0001  
                                                  ___lomod 73A2  
                                                ?_vfprintf 0068  
                                                ?_snprintf 00C2  
                                          __size_of_lcd_wr 000C  
                                      ??_check_temperature 007F  
                                                  __pcinit 6AAC  
                     init_stepper@hex_coil_register_values 0009  
                                                  __ramtop 0600  
                                               _reach_goal 6C64  
                                                  __ptext0 1462  
                                                  __ptext1 3FD8  
                                                  __ptext2 6BF2  
                                                  __ptext3 7678  
                                                  __ptext4 757C  
                                                  __ptext5 666E  
                                                  __ptext6 7BEA  
                                                  __ptext7 6B82  
                                                  __ptext8 007A  
                                                  __ptext9 3108  
                                                  _lcd_dat 65EE  
                                                  _lcd_cmd 65C4  
                                                  _lcd_str 6D5A  
                                                _T0CONbits 000FD5  
                                          __size_of_roundf 03EA  
                                          __size_of_strlen 005C  
                                        __end_of_init_ccp1 659C  
                                                _T2CONbits 000FCA  
                                             __size_of_abs 004C  
                                             __size_of_pad 00E6  
                                                  _isalpha 685E  
                                                  _isdigit 6798  
                                               ??___xxtofl 0023  
                                     __end_of_init_timer_0 6578  
                                     __end_of_init_timer_2 7024  
                                                  _islower 681C  
                                                  _isspace 69E6  
                                                  _isupper 67DA  
                                     __end_of_init_stepper 6E92  
                                                  atoi@neg 000E  
                                            _joint_stepper 01BF  
                                               ??_lcd_init 0003  
                                                  _strncmp 7778  
                                                  _toupper 6B12  
                             __size_of_update_current_coil 00DA  
                                     end_of_initialization 6B04  
                                __end_of_check_temperature 71DA  
                                 __size_of_get_temperature 0072  
                                                  fputc@fp 0003  
                                            __Lmediumconst 7EB4  
                                                  fputs@fp 000C  
                      state_translator_micro_to_fpga@state 0001  
                                        __end_of_vfpfcnvrt 1462  
                                    __end_of_get_reg_value 6502  
                                                _RCSTAbits 000FAB  
                                                  postdec1 000FE5  
                                                  postdec2 000FDD  
                                                  postinc0 000FEE  
                                                  postinc1 000FE6  
                                                  postinc2 000FDE  
                                                  roundf@e 00BC  
                                                  roundf@u 00C2  
                                                  roundf@x 0077  
                                                  roundf@y 00C6  
                                               ??_vfprintf 006E  
                                               ??_snprintf 007C  
                                                  strlen@a 0003  
                                                  strlen@s 0001  
                                               _timer_done 01AD  
                                                _PORTEbits 000F84  
                         ??_state_translator_fpga_to_micro 0005  
                          ?_state_translator_fpga_to_micro 0003  
                                              ___fladd@grs 006E  
                                           _serial_tx_char 6516  
                                            ___xxtofl@sign 0027  
                                    __end_of_rx_char_usart 0076  
                                                _TRISCbits 000F94  
                                               lcd_dat@val 0002  
                                        __end_of_vsnprintf 7D24  
                                               lcd_cmd@val 0002  
                                              ___fldiv@grs 0059  
                                              ___fldiv@rem 0052  
                                               _pwm_period 00E5  
                                               _state_msgs 01CF  
                                            _mix_direction 0094  
                                     _end_effector_stepper 01B1  
                                              ___flmul@grs 003A  
                                         ?_init_interrupts 0001  
                                              _CCP1CONbits 000FBD  
                                                _TXSTAbits 000FAC  
                                         main@current_temp 01A0  
                                               lcd_str@str 0003  
              __end_of_configure_analog_digital_conversion 65C4  
             __size_of_configure_analog_digital_conversion 0028  
                    ??_configure_analog_digital_conversion 0001  
                     ?_configure_analog_digital_conversion 0001  
                      _configure_analog_digital_conversion 659C  
                                              ?_init_PORTS 0001  
                                              ?_init_USART 0001  
                                   ??_turn_on_current_coil 0003  
                                           __end_of___flge 7AB2  
                   __end_of_state_translator_micro_to_fpga 7778  
                  __size_of_state_translator_micro_to_fpga 0100  
                           _state_translator_micro_to_fpga 7678  
                                              vfpfcnvrt@ap 0047  
                                              vfpfcnvrt@cp 004D  
                                              vfpfcnvrt@fp 0043  
                                              vfpfcnvrt@ll 0055  
                                           __end_of___wmul 6642  
                                              vfpfcnvrt@vp 005D  
                                           __end_of_lcd_wr 64F2  
                                              ?_reach_goal 0007  
         state_translator_micro_to_fpga@state_machine_code 0005  
                                   __end_of_serial_tx_char 6536  
                                           __end_of_roundf 2DD4  
                                           __end_of_strlen 69E6  
                                      start_initialization 6AAC  
                                          ___lodiv@divisor 0009  
                                          ___lodiv@counter 0019  
                                              __end_of_abs 693A  
                                              __end_of_pad 73A2  
                                         _hex_joint_values 01E7  
                               __size_of_check_temperature 00DC  
                                 init_stepper@current_coil 0003  
                                init_stepper@stepper_motor 0001  
                                        ??_get_temperature 007F  
                                              vfprintf@fmt 006A  
                                                 ??___flge 0009  
                                 __end_of_desired_baudrate 7EBD  
                                                 ??___wmul 0005  
                            __size_of_update_pwm_duty_ccp1 00C4  
                                                 ??_lcd_wr 0001  
                                              __pdataBANK0 00DE  
                                              __pdataBANK1 01CF  
                                    check_temperature@grad 00D8  
                                    __size_of_init_timer_0 0022  
                                    __size_of_init_timer_2 00CE  
                                    __size_of_init_stepper 00B0  
                                                 ??_roundf 007B  
                                                 ??_strlen 0003  
                                          ?_serial_tx_char 0001  
                                                ___fladd@a 0063  
                                                ___fladd@b 005F  
                                             vsnprintf@cnt 00BA  
                                             vsnprintf@fmt 0074  
                                                ___fldiv@a 004A  
                                                ___fldiv@b 0046  
                                                ___flmul@a 0031  
                                                ___flmul@b 002D  
                                                ___flsub@a 0073  
                                                ___flsub@b 006F  
                                            __pcstackBANK0 00B8  
                                            __pcstackBANK1 0100  
                                         ___aodiv@dividend 0001  
                                              snprintf@fmt 00C6  
                                        __size_of___xxtofl 01F8  
                                      __size_of_init_PORTS 002C  
                                      __size_of_init_USART 0042  
                                        __size_of_lcd_init 007E  
                                      __size_of_reach_goal 0078  
                                                _atoi$1810 0012  
                                                _atoi$1808 0010  
                                                _atoi$1809 0014  
                                             _init_timer_0 6556  
                                             _init_timer_2 6F56  
                                                _dtoa$1634 002E  
                                             _init_stepper 6DE2  
                                    init_stepper@direction 0007  
                                                __pintcode 0008  
                                            __pmediumconst 7EB4  
                                                 ?___aodiv 0001  
                                                 ?___fladd 005F  
                                                 ?___aomod 0001  
                                                 ?___fldiv 0046  
                                                 ?___awdiv 0017  
                                         ___aodiv@quotient 0013  
                                                 ?___flneg 0001  
                                                 ?___flmul 002D  
                                                 ?___flsub 006F  
                                                 ?___fltol 00CA  
                                                 ?___lodiv 0001  
                                                 ?___lomod 0001  
                                      _update_current_coil 7024  
                                        ?_change_direction 0001  
                                       ??_change_direction 0003  
                                                 ?_lcd_dat 0001  
                                                 ?_lcd_cmd 0001  
                                        __size_of_vfprintf 0070  
                                                 ?_lcd_str 0003  
                                        __size_of_snprintf 0034  
                                          ___lomod@divisor 0009  
                             update_pwm_duty_ccp1@new_duty 00DA  
                                          ___lomod@counter 0011  
                                                 ?_isalpha 0001  
                                                 ?_isdigit 0001  
                                         _mix_step_counter 0092  
                                                 ?_islower 0001  
                                                 ?_isspace 0001  
                                                 ?_isupper 0001  
                                                _init_ccp1 6578  
                                           __size_of_fputc 00E2  
                                           __size_of_fputs 0050  
                                     ?_update_current_coil 0001  
                                                 ?_strncmp 0001  
                                                 ?_toupper 0007  
                                           __size_of_putch 0006  
                                   __size_of_wait_for_zero 0028  
                                           ___wmul@product 0005  
                                                 _LATAbits 000F89  
                                                 _PIE1bits 000F9D  
                                            _move_to_trash 01A3  
                                                 _PIR1bits 000F9E  
                                                 i2u720_40 0060  
                                                 i2u720_41 005A  
                                                 i2u717_40 001C  
                                                 i2u717_41 0016  
                                                 i2u718_40 002E  
                                                 i2u718_41 0028  
                                                 i2u719_40 004E  
                                                 i2u719_41 0048  
                                                _vfpfcnvrt 007A  
                                                _xtoa$1670 002F  
                                                _xtoa$1671 0031  
                                               _ADCON0bits 000FC2  
                                        ___wmul@multiplier 0001  
                                                lcd_wr@val 0001  
                                             _isspace$1836 0007  
                                               ?_init_ccp1 0001  
                                    ??_update_current_coil 0003  
                                               vfpfcnvrt@c 005F  
                                                copy_data0 6AC0  
                                                copy_data1 6AE0  
                                                _vsnprintf 7BEA  
                                               roundf@F525 0080  
                                                 __Hrparam 0000  
                                             ??_init_PORTS 0001  
                                             ??_init_USART 007F  
                                               vfprintf@ap 006C  
                                                 __Lrparam 0000  
                                               vfprintf@fp 0068  
                                         __size_of___aodiv 01B4  
                                         __size_of___fladd 05A8  
                                         __size_of___aomod 0190  
                                         __size_of___fldiv 0432  
                                         __size_of___awdiv 00F0  
                                         __size_of___flneg 0042  
                                              vsnprintf@ap 0076  
                                         __size_of___flmul 04A4  
                                         __size_of___flsub 004A  
                                         __size_of___fltol 0138  
                                         __size_of___lodiv 010A  
                                         __size_of___lomod 00EA  
                                               ?_vfpfcnvrt 0043  
                                            _wait_for_zero 3FD8  
                                             ??_reach_goal 000B  
                                               snprintf@ap 00CC  
                                          ___aodiv@divisor 0009  
                                          ___aodiv@counter 0011  
                                         __size_of_lcd_dat 002A  
                                         __size_of_lcd_cmd 002A  
                                         __size_of_lcd_str 0088  
                                                 ___xxtofl 388A  
                                         __size_of_isalpha 0046  
                                         __size_of_isdigit 0042  
                                         __size_of_islower 0042  
                                         __size_of_isspace 0060  
                                                 __ptext10 6B12  
                                                 __ptext11 681C  
                                                 __ptext20 2DD4  
                                                 __ptext12 67DA  
                                                 __ptext21 7D24  
                                                 __ptext13 685E  
                                                 __ptext30 69E6  
                                                 __ptext22 3E24  
                                                 __ptext14 3438  
                                                 __ptext31 6798  
                                                 __ptext23 6A46  
                                                 __ptext15 73A2  
                                                 __ptext40 65C4  
                                                 __ptext32 6618  
                                                 __ptext24 72BC  
                                                 __ptext16 7880  
                                                 __ptext41 64E6  
                                                 __ptext33 6516  
                                                 __ptext25 698A  
                                                 __ptext17 7778  
                                                 __ptext50 29EA  
                                                 __ptext42 6F56  
                                                 __ptext34 6C64  
                                                 __ptext26 693A  
                                                 __ptext18 3A82  
                                                 __ptext51 68A4  
                                                 __ptext43 6556  
                                                 __ptext35 7024  
                                                 __ptext27 71DA  
                                                 __ptext19 3664  
                                                 __ptext60 68EE  
                                                 __ptext52 1B6C  
                                                 __ptext44 6DE2  
                                                 __ptext36 66D8  
                                                 __ptext28 64D4  
                                                 __ptext61 388A  
                                                 __ptext53 6714  
                                                 __ptext45 64DA  
                                                 __ptext37 6D5A  
                                                 __ptext29 3C56  
                                                 __ptext62 798A  
                                                 __ptext54 2114  
                                                 __ptext46 6578  
                                                 __ptext38 65EE  
                                                 __ptext63 748C  
                                                 __ptext55 7AB2  
                                                 __ptext47 6E92  
                                                 __ptext39 6CDC  
                                                 __ptext64 66A2  
                                                 __ptext56 6642  
                                                 __ptext48 25B8  
                                                 __ptext57 64F2  
                                                 __ptext49 6756  
                                                 __ptext58 659C  
                                                 __ptext59 70FE  
                                         __size_of_isupper 0042  
                         ??_state_translator_micro_to_fpga 0003  
                          ?_state_translator_micro_to_fpga 0001  
                                   __size_of_get_reg_value 0010  
                                       __end_of_init_PORTS 666E  
                                                 _lcd_init 6CDC  
                                       __end_of_init_USART 6798  
                                          _get_temperature 6BF2  
                                         __size_of_strncmp 0108  
                                         __size_of_toupper 0070  
                                               ?_vsnprintf 0070  
                                            __size_of_atoi 01CE  
                                            __size_of_ctoa 0066  
                                            __size_of_main 070A  
                                            __size_of_dtoa 0334  
                                            __size_of_otoa 0226  
                                            __size_of_stoa 01D4  
                                            __size_of_utoa 022C  
                                              _joint_homed 01A9  
                                            __size_of_xtoa 0330  
                                       __end_of_reach_goal 6CDC  
                                                 _msg_sent 01AF  
                                                stoa@F1152 00DE  
                                   __size_of_rx_char_usart 006E  
                                 __size_of_init_interrupts 000C  
                                                 int$flags 007F  
                                         ??_serial_tx_char 0001  
                                                 _vfprintf 6B82  
                            __size_of_turn_on_current_coil 003C  
                                           ?_wait_for_zero 0001  
                                                 _snprintf 666E  
                                                 lcd_str@i 0007  
                                              _mix_counter 01AB  
                                         ___aomod@dividend 0001  
                                           _vfpfcnvrt$1685 0051  
                                           _vfpfcnvrt$1686 0053  
                                               _INTCONbits 000FF2  
                                                 isalpha@c 0001  
                                                 isdigit@c 0001  
                                              ??_init_ccp1 007F  
                             __end_of_update_pwm_duty_ccp1 6F56  
                                               vsnprintf@f 00BC  
                                               vsnprintf@n 0072  
                                               vsnprintf@s 0070  
                                                snprintf@n 00C4  
                                                snprintf@s 00C2  
                                                 intlevel2 0006  
                                                 islower@c 0001  
                                                 isspace@c 0001  
                                                 isupper@c 0001  
                                                strncmp@_l 0001  
                                                strncmp@_r 0003  
                                            _get_reg_value 64F2  
                                            init_stepper@i 000F  
                                          ___aomod@divisor 0009  
                                              ??_vfpfcnvrt 0049  
                                                 stoa@nuls 000F  
                                          ___aomod@counter 0011  
                                           _vsnprintf$1552 00B8  
                                  __end_of_get_temperature 6C64  
                                                 strncmp@l 0008  
                                                 strncmp@n 0005  
                                                 strncmp@r 000A  
                                                 toupper@c 0007  
                                 init_stepper@step_counter 0005  
                                            _rx_char_usart 0008  
                                __size_of_change_direction 0036  
                                            ___fladd@signs 006B  
                            update_pwm_duty_ccp1@lsbs_duty 00DC  
                                             ___aodiv@sign 0012  
                                              ??_vsnprintf 0078  
                                             ___fladd@aexp 006C  
                                             ___fladd@bexp 006D  
                                             ___aomod@sign 0012  
                                              _roundf$2137 00BE  
                                              _roundf$2138 00B8  
