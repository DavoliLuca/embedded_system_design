

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Jun 20 00:57:22 2023

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    53                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    55  0000                     
    56                           ; Version 2.20
    57                           ; Generated 12/02/2020 GMT
    58                           ; 
    59                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F452 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     
    91                           	psect	idataBANK0
    92  0027C6                     __pidataBANK0:
    93                           	callstack 0
    94                           
    95                           ;initializer for _tosc
    96  0027C6  37BD               	dw	14269
    97  0027C8  3486               	dw	13446
    98                           
    99                           ;initializer for _state_before_error
   100  0027CA  0008               	dw	8
   101                           
   102                           ;initializer for _hex_end_effector_values
   103  0027CC  10                 	db	16
   104  0027CD  20                 	db	32
   105  0027CE  40                 	db	64
   106  0027CF  80                 	db	128
   107                           
   108                           ;initializer for _hex_joint_values
   109  0027D0  01                 	db	1
   110  0027D1  02                 	db	2
   111  0027D2  04                 	db	4
   112  0027D3  08                 	db	8
   113                           
   114                           	psect	mediumconst
   115  007B28                     __pmediumconst:
   116                           	callstack 0
   117  007B28  00                 	db	0
   118  007B29  0000               	dw	0
   119  007B2B  4B00               	dw	19200
   120  007B2D                     __end_of_toint:
   121                           	callstack 0
   122  007B2D                     lcd_update@F2151:
   123                           	callstack 0
   124  007B2D  80                 	db	128
   125  007B2E  C0                 	db	192
   126  007B2F  94                 	db	148
   127  007B30  D4                 	db	212
   128  007B31                     __end_oflcd_update@F2151:
   129                           	callstack 0
   130  007B31  0000               	dw	0
   131  007B33  4616               	dw	17942
   132  007B35                     __end_of_desired_baudrate:
   133                           	callstack 0
   134  007B35                     _const_msgs:
   135                           	callstack 0
   136  007B35  49                 	db	73
   137  007B36  44                 	db	68
   138  007B37  4C                 	db	76
   139  007B38  45                 	db	69
   140  007B39  3A                 	db	58
   141  007B3A  20                 	db	32
   142  007B3B  77                 	db	119
   143  007B3C  61                 	db	97
   144  007B3D  69                 	db	105
   145  007B3E  74                 	db	116
   146  007B3F  69                 	db	105
   147  007B40  6E                 	db	110
   148  007B41  67                 	db	103
   149  007B42  20                 	db	32
   150  007B43  66                 	db	102
   151  007B44  6F                 	db	111
   152  007B45  72                 	db	114
   153  007B46  00                 	db	0
   154  007B47  00                 	db	0
   155  007B48  00                 	db	0
   156  007B49  76                 	db	118
   157  007B4A  69                 	db	105
   158  007B4B  61                 	db	97
   159  007B4C  6C                 	db	108
   160  007B4D  20                 	db	32
   161  007B4E  74                 	db	116
   162  007B4F  6F                 	db	111
   163  007B50  20                 	db	32
   164  007B51  62                 	db	98
   165  007B52  65                 	db	101
   166  007B53  20                 	db	32
   167  007B54  70                 	db	112
   168  007B55  6C                 	db	108
   169  007B56  61                 	db	97
   170  007B57  63                 	db	99
   171  007B58  65                 	db	101
   172  007B59  64                 	db	100
   173  007B5A  00                 	db	0
   174  007B5B  00                 	db	0
   175  007B5C  00                 	db	0
   176  007B5D  69                 	db	105
   177  007B5E  6E                 	db	110
   178  007B5F  20                 	db	32
   179  007B60  69                 	db	105
   180  007B61  6E                 	db	110
   181  007B62  69                 	db	105
   182  007B63  74                 	db	116
   183  007B64  20                 	db	32
   184  007B65  70                 	db	112
   185  007B66  6F                 	db	111
   186  007B67  73                 	db	115
   187  007B68  00                 	db	0
   188  007B69  00                 	db	0
   189  007B6A  00                 	db	0
   190  007B6B  00                 	db	0
   191  007B6C  00                 	db	0
   192  007B6D  00                 	db	0
   193  007B6E  00                 	db	0
   194  007B6F  00                 	db	0
   195  007B70  00                 	db	0
   196  007B71  00                 	db	0
   197  007B72  00                 	db	0
   198  007B73  00                 	db	0
   199  007B74  00                 	db	0
   200  007B75  00                 	db	0
   201  007B76  00                 	db	0
   202  007B77  00                 	db	0
   203  007B78  00                 	db	0
   204  007B79  00                 	db	0
   205  007B7A  00                 	db	0
   206  007B7B  00                 	db	0
   207  007B7C  00                 	db	0
   208  007B7D  00                 	db	0
   209  007B7E  00                 	db	0
   210  007B7F  00                 	db	0
   211  007B80  00                 	db	0
   212  007B81  00                 	db	0
   213  007B82  00                 	db	0
   214  007B83  00                 	db	0
   215  007B84  00                 	db	0
   216  007B85  49                 	db	73
   217  007B86  4E                 	db	78
   218  007B87  49                 	db	73
   219  007B88  54                 	db	84
   220  007B89  5F                 	db	95
   221  007B8A  50                 	db	80
   222  007B8B  4F                 	db	79
   223  007B8C  53                 	db	83
   224  007B8D  3A                 	db	58
   225  007B8E  20                 	db	32
   226  007B8F  74                 	db	116
   227  007B90  68                 	db	104
   228  007B91  65                 	db	101
   229  007B92  20                 	db	32
   230  007B93  76                 	db	118
   231  007B94  69                 	db	105
   232  007B95  61                 	db	97
   233  007B96  6C                 	db	108
   234  007B97  00                 	db	0
   235  007B98  00                 	db	0
   236  007B99  69                 	db	105
   237  007B9A  73                 	db	115
   238  007B9B  20                 	db	32
   239  007B9C  61                 	db	97
   240  007B9D  74                 	db	116
   241  007B9E  20                 	db	32
   242  007B9F  74                 	db	116
   243  007BA0  68                 	db	104
   244  007BA1  65                 	db	101
   245  007BA2  20                 	db	32
   246  007BA3  69                 	db	105
   247  007BA4  6E                 	db	110
   248  007BA5  69                 	db	105
   249  007BA6  74                 	db	116
   250  007BA7  20                 	db	32
   251  007BA8  70                 	db	112
   252  007BA9  6F                 	db	111
   253  007BAA  73                 	db	115
   254  007BAB  00                 	db	0
   255  007BAC  00                 	db	0
   256  007BAD  70                 	db	112
   257  007BAE  72                 	db	114
   258  007BAF  6F                 	db	111
   259  007BB0  63                 	db	99
   260  007BB1  65                 	db	101
   261  007BB2  73                 	db	115
   262  007BB3  73                 	db	115
   263  007BB4  20                 	db	32
   264  007BB5  69                 	db	105
   265  007BB6  73                 	db	115
   266  007BB7  20                 	db	32
   267  007BB8  73                 	db	115
   268  007BB9  74                 	db	116
   269  007BBA  61                 	db	97
   270  007BBB  72                 	db	114
   271  007BBC  74                 	db	116
   272  007BBD  69                 	db	105
   273  007BBE  6E                 	db	110
   274  007BBF  67                 	db	103
   275  007BC0  00                 	db	0
   276  007BC1  00                 	db	0
   277  007BC2  00                 	db	0
   278  007BC3  00                 	db	0
   279  007BC4  00                 	db	0
   280  007BC5  00                 	db	0
   281  007BC6  00                 	db	0
   282  007BC7  00                 	db	0
   283  007BC8  00                 	db	0
   284  007BC9  00                 	db	0
   285  007BCA  00                 	db	0
   286  007BCB  00                 	db	0
   287  007BCC  00                 	db	0
   288  007BCD  00                 	db	0
   289  007BCE  00                 	db	0
   290  007BCF  00                 	db	0
   291  007BD0  00                 	db	0
   292  007BD1  00                 	db	0
   293  007BD2  00                 	db	0
   294  007BD3  00                 	db	0
   295  007BD4  00                 	db	0
   296  007BD5  4D                 	db	77
   297  007BD6  4F                 	db	79
   298  007BD7  56                 	db	86
   299  007BD8  45                 	db	69
   300  007BD9  4D                 	db	77
   301  007BDA  45                 	db	69
   302  007BDB  4E                 	db	78
   303  007BDC  54                 	db	84
   304  007BDD  00                 	db	0
   305  007BDE  00                 	db	0
   306  007BDF  00                 	db	0
   307  007BE0  00                 	db	0
   308  007BE1  00                 	db	0
   309  007BE2  00                 	db	0
   310  007BE3  00                 	db	0
   311  007BE4  00                 	db	0
   312  007BE5  00                 	db	0
   313  007BE6  00                 	db	0
   314  007BE7  00                 	db	0
   315  007BE8  00                 	db	0
   316  007BE9  00                 	db	0
   317  007BEA  00                 	db	0
   318  007BEB  00                 	db	0
   319  007BEC  00                 	db	0
   320  007BED  00                 	db	0
   321  007BEE  00                 	db	0
   322  007BEF  00                 	db	0
   323  007BF0  00                 	db	0
   324  007BF1  00                 	db	0
   325  007BF2  00                 	db	0
   326  007BF3  00                 	db	0
   327  007BF4  00                 	db	0
   328  007BF5  00                 	db	0
   329  007BF6  00                 	db	0
   330  007BF7  00                 	db	0
   331  007BF8  00                 	db	0
   332  007BF9  00                 	db	0
   333  007BFA  00                 	db	0
   334  007BFB  00                 	db	0
   335  007BFC  00                 	db	0
   336  007BFD  00                 	db	0
   337  007BFE  00                 	db	0
   338  007BFF  00                 	db	0
   339  007C00  00                 	db	0
   340  007C01  00                 	db	0
   341  007C02  00                 	db	0
   342  007C03  00                 	db	0
   343  007C04  00                 	db	0
   344  007C05  00                 	db	0
   345  007C06  00                 	db	0
   346  007C07  00                 	db	0
   347  007C08  00                 	db	0
   348  007C09  00                 	db	0
   349  007C0A  00                 	db	0
   350  007C0B  00                 	db	0
   351  007C0C  00                 	db	0
   352  007C0D  00                 	db	0
   353  007C0E  00                 	db	0
   354  007C0F  00                 	db	0
   355  007C10  00                 	db	0
   356  007C11  00                 	db	0
   357  007C12  00                 	db	0
   358  007C13  00                 	db	0
   359  007C14  00                 	db	0
   360  007C15  00                 	db	0
   361  007C16  00                 	db	0
   362  007C17  00                 	db	0
   363  007C18  00                 	db	0
   364  007C19  00                 	db	0
   365  007C1A  00                 	db	0
   366  007C1B  00                 	db	0
   367  007C1C  00                 	db	0
   368  007C1D  00                 	db	0
   369  007C1E  00                 	db	0
   370  007C1F  00                 	db	0
   371  007C20  00                 	db	0
   372  007C21  00                 	db	0
   373  007C22  00                 	db	0
   374  007C23  00                 	db	0
   375  007C24  00                 	db	0
   376  007C25  4F                 	db	79
   377  007C26  56                 	db	86
   378  007C27  45                 	db	69
   379  007C28  4E                 	db	78
   380  007C29  3A                 	db	58
   381  007C2A  00                 	db	0
   382  007C2B  00                 	db	0
   383  007C2C  00                 	db	0
   384  007C2D  00                 	db	0
   385  007C2E  00                 	db	0
   386  007C2F  00                 	db	0
   387  007C30  00                 	db	0
   388  007C31  00                 	db	0
   389  007C32  00                 	db	0
   390  007C33  00                 	db	0
   391  007C34  00                 	db	0
   392  007C35  00                 	db	0
   393  007C36  00                 	db	0
   394  007C37  00                 	db	0
   395  007C38  00                 	db	0
   396  007C39  76                 	db	118
   397  007C3A  69                 	db	105
   398  007C3B  61                 	db	97
   399  007C3C  6C                 	db	108
   400  007C3D  20                 	db	32
   401  007C3E  68                 	db	104
   402  007C3F  61                 	db	97
   403  007C40  73                 	db	115
   404  007C41  20                 	db	32
   405  007C42  72                 	db	114
   406  007C43  65                 	db	101
   407  007C44  61                 	db	97
   408  007C45  63                 	db	99
   409  007C46  68                 	db	104
   410  007C47  65                 	db	101
   411  007C48  64                 	db	100
   412  007C49  00                 	db	0
   413  007C4A  00                 	db	0
   414  007C4B  00                 	db	0
   415  007C4C  00                 	db	0
   416  007C4D  74                 	db	116
   417  007C4E  68                 	db	104
   418  007C4F  65                 	db	101
   419  007C50  20                 	db	32
   420  007C51  6F                 	db	111
   421  007C52  76                 	db	118
   422  007C53  65                 	db	101
   423  007C54  6E                 	db	110
   424  007C55  00                 	db	0
   425  007C56  00                 	db	0
   426  007C57  00                 	db	0
   427  007C58  00                 	db	0
   428  007C59  00                 	db	0
   429  007C5A  00                 	db	0
   430  007C5B  00                 	db	0
   431  007C5C  00                 	db	0
   432  007C5D  00                 	db	0
   433  007C5E  00                 	db	0
   434  007C5F  00                 	db	0
   435  007C60  00                 	db	0
   436  007C61  00                 	db	0
   437  007C62  00                 	db	0
   438  007C63  00                 	db	0
   439  007C64  00                 	db	0
   440  007C65  00                 	db	0
   441  007C66  00                 	db	0
   442  007C67  00                 	db	0
   443  007C68  00                 	db	0
   444  007C69  00                 	db	0
   445  007C6A  00                 	db	0
   446  007C6B  00                 	db	0
   447  007C6C  00                 	db	0
   448  007C6D  00                 	db	0
   449  007C6E  00                 	db	0
   450  007C6F  00                 	db	0
   451  007C70  00                 	db	0
   452  007C71  00                 	db	0
   453  007C72  00                 	db	0
   454  007C73  00                 	db	0
   455  007C74  00                 	db	0
   456  007C75  4F                 	db	79
   457  007C76  56                 	db	86
   458  007C77  45                 	db	69
   459  007C78  4E                 	db	78
   460  007C79  3A                 	db	58
   461  007C7A  20                 	db	32
   462  007C7B  72                 	db	114
   463  007C7C  65                 	db	101
   464  007C7D  61                 	db	97
   465  007C7E  63                 	db	99
   466  007C7F  68                 	db	104
   467  007C80  69                 	db	105
   468  007C81  6E                 	db	110
   469  007C82  67                 	db	103
   470  007C83  20                 	db	32
   471  007C84  74                 	db	116
   472  007C85  68                 	db	104
   473  007C86  65                 	db	101
   474  007C87  00                 	db	0
   475  007C88  00                 	db	0
   476  007C89  63                 	db	99
   477  007C8A  6F                 	db	111
   478  007C8B  72                 	db	114
   479  007C8C  72                 	db	114
   480  007C8D  65                 	db	101
   481  007C8E  63                 	db	99
   482  007C8F  74                 	db	116
   483  007C90  20                 	db	32
   484  007C91  74                 	db	116
   485  007C92  65                 	db	101
   486  007C93  6D                 	db	109
   487  007C94  70                 	db	112
   488  007C95  65                 	db	101
   489  007C96  72                 	db	114
   490  007C97  61                 	db	97
   491  007C98  74                 	db	116
   492  007C99  75                 	db	117
   493  007C9A  72                 	db	114
   494  007C9B  65                 	db	101
   495  007C9C  00                 	db	0
   496  007C9D  00                 	db	0
   497  007C9E  00                 	db	0
   498  007C9F  00                 	db	0
   499  007CA0  00                 	db	0
   500  007CA1  00                 	db	0
   501  007CA2  00                 	db	0
   502  007CA3  00                 	db	0
   503  007CA4  00                 	db	0
   504  007CA5  00                 	db	0
   505  007CA6  00                 	db	0
   506  007CA7  00                 	db	0
   507  007CA8  00                 	db	0
   508  007CA9  00                 	db	0
   509  007CAA  00                 	db	0
   510  007CAB  00                 	db	0
   511  007CAC  00                 	db	0
   512  007CAD  00                 	db	0
   513  007CAE  00                 	db	0
   514  007CAF  00                 	db	0
   515  007CB0  00                 	db	0
   516  007CB1  00                 	db	0
   517  007CB2  00                 	db	0
   518  007CB3  00                 	db	0
   519  007CB4  00                 	db	0
   520  007CB5  00                 	db	0
   521  007CB6  00                 	db	0
   522  007CB7  00                 	db	0
   523  007CB8  00                 	db	0
   524  007CB9  00                 	db	0
   525  007CBA  00                 	db	0
   526  007CBB  00                 	db	0
   527  007CBC  00                 	db	0
   528  007CBD  00                 	db	0
   529  007CBE  00                 	db	0
   530  007CBF  00                 	db	0
   531  007CC0  00                 	db	0
   532  007CC1  00                 	db	0
   533  007CC2  00                 	db	0
   534  007CC3  00                 	db	0
   535  007CC4  00                 	db	0
   536  007CC5  47                 	db	71
   537  007CC6  52                 	db	82
   538  007CC7  41                 	db	65
   539  007CC8  53                 	db	83
   540  007CC9  50                 	db	80
   541  007CCA  49                 	db	73
   542  007CCB  4E                 	db	78
   543  007CCC  47                 	db	71
   544  007CCD  3A                 	db	58
   545  007CCE  20                 	db	32
   546  007CCF  74                 	db	116
   547  007CD0  68                 	db	104
   548  007CD1  65                 	db	101
   549  007CD2  20                 	db	32
   550  007CD3  76                 	db	118
   551  007CD4  69                 	db	105
   552  007CD5  61                 	db	97
   553  007CD6  6C                 	db	108
   554  007CD7  00                 	db	0
   555  007CD8  00                 	db	0
   556  007CD9  68                 	db	104
   557  007CDA  61                 	db	97
   558  007CDB  73                 	db	115
   559  007CDC  20                 	db	32
   560  007CDD  72                 	db	114
   561  007CDE  65                 	db	101
   562  007CDF  61                 	db	97
   563  007CE0  63                 	db	99
   564  007CE1  68                 	db	104
   565  007CE2  65                 	db	101
   566  007CE3  64                 	db	100
   567  007CE4  20                 	db	32
   568  007CE5  74                 	db	116
   569  007CE6  68                 	db	104
   570  007CE7  65                 	db	101
   571  007CE8  00                 	db	0
   572  007CE9  00                 	db	0
   573  007CEA  00                 	db	0
   574  007CEB  00                 	db	0
   575  007CEC  00                 	db	0
   576  007CED  6D                 	db	109
   577  007CEE  69                 	db	105
   578  007CEF  78                 	db	120
   579  007CF0  69                 	db	105
   580  007CF1  6E                 	db	110
   581  007CF2  67                 	db	103
   582  007CF3  20                 	db	32
   583  007CF4  73                 	db	115
   584  007CF5  74                 	db	116
   585  007CF6  61                 	db	97
   586  007CF7  74                 	db	116
   587  007CF8  69                 	db	105
   588  007CF9  6F                 	db	111
   589  007CFA  6E                 	db	110
   590  007CFB  00                 	db	0
   591  007CFC  00                 	db	0
   592  007CFD  00                 	db	0
   593  007CFE  00                 	db	0
   594  007CFF  00                 	db	0
   595  007D00  00                 	db	0
   596  007D01  00                 	db	0
   597  007D02  00                 	db	0
   598  007D03  00                 	db	0
   599  007D04  00                 	db	0
   600  007D05  00                 	db	0
   601  007D06  00                 	db	0
   602  007D07  00                 	db	0
   603  007D08  00                 	db	0
   604  007D09  00                 	db	0
   605  007D0A  00                 	db	0
   606  007D0B  00                 	db	0
   607  007D0C  00                 	db	0
   608  007D0D  00                 	db	0
   609  007D0E  00                 	db	0
   610  007D0F  00                 	db	0
   611  007D10  00                 	db	0
   612  007D11  00                 	db	0
   613  007D12  00                 	db	0
   614  007D13  00                 	db	0
   615  007D14  00                 	db	0
   616  007D15  47                 	db	71
   617  007D16  52                 	db	82
   618  007D17  41                 	db	65
   619  007D18  53                 	db	83
   620  007D19  50                 	db	80
   621  007D1A  49                 	db	73
   622  007D1B  4E                 	db	78
   623  007D1C  47                 	db	71
   624  007D1D  3A                 	db	58
   625  007D1E  00                 	db	0
   626  007D1F  00                 	db	0
   627  007D20  00                 	db	0
   628  007D21  00                 	db	0
   629  007D22  00                 	db	0
   630  007D23  00                 	db	0
   631  007D24  00                 	db	0
   632  007D25  00                 	db	0
   633  007D26  00                 	db	0
   634  007D27  00                 	db	0
   635  007D28  00                 	db	0
   636  007D29  67                 	db	103
   637  007D2A  72                 	db	114
   638  007D2B  61                 	db	97
   639  007D2C  73                 	db	115
   640  007D2D  70                 	db	112
   641  007D2E  69                 	db	105
   642  007D2F  6E                 	db	110
   643  007D30  67                 	db	103
   644  007D31  20                 	db	32
   645  007D32  68                 	db	104
   646  007D33  61                 	db	97
   647  007D34  73                 	db	115
   648  007D35  00                 	db	0
   649  007D36  00                 	db	0
   650  007D37  00                 	db	0
   651  007D38  00                 	db	0
   652  007D39  00                 	db	0
   653  007D3A  00                 	db	0
   654  007D3B  00                 	db	0
   655  007D3C  00                 	db	0
   656  007D3D  73                 	db	115
   657  007D3E  74                 	db	116
   658  007D3F  61                 	db	97
   659  007D40  72                 	db	114
   660  007D41  74                 	db	116
   661  007D42  65                 	db	101
   662  007D43  64                 	db	100
   663  007D44  00                 	db	0
   664  007D45  00                 	db	0
   665  007D46  00                 	db	0
   666  007D47  00                 	db	0
   667  007D48  00                 	db	0
   668  007D49  00                 	db	0
   669  007D4A  00                 	db	0
   670  007D4B  00                 	db	0
   671  007D4C  00                 	db	0
   672  007D4D  00                 	db	0
   673  007D4E  00                 	db	0
   674  007D4F  00                 	db	0
   675  007D50  00                 	db	0
   676  007D51  00                 	db	0
   677  007D52  00                 	db	0
   678  007D53  00                 	db	0
   679  007D54  00                 	db	0
   680  007D55  00                 	db	0
   681  007D56  00                 	db	0
   682  007D57  00                 	db	0
   683  007D58  00                 	db	0
   684  007D59  00                 	db	0
   685  007D5A  00                 	db	0
   686  007D5B  00                 	db	0
   687  007D5C  00                 	db	0
   688  007D5D  00                 	db	0
   689  007D5E  00                 	db	0
   690  007D5F  00                 	db	0
   691  007D60  00                 	db	0
   692  007D61  00                 	db	0
   693  007D62  00                 	db	0
   694  007D63  00                 	db	0
   695  007D64  00                 	db	0
   696  007D65  4D                 	db	77
   697  007D66  49                 	db	73
   698  007D67  58                 	db	88
   699  007D68  49                 	db	73
   700  007D69  4E                 	db	78
   701  007D6A  47                 	db	71
   702  007D6B  3A                 	db	58
   703  007D6C  20                 	db	32
   704  007D6D  74                 	db	116
   705  007D6E  68                 	db	104
   706  007D6F  65                 	db	101
   707  007D70  20                 	db	32
   708  007D71  76                 	db	118
   709  007D72  69                 	db	105
   710  007D73  61                 	db	97
   711  007D74  6C                 	db	108
   712  007D75  00                 	db	0
   713  007D76  00                 	db	0
   714  007D77  00                 	db	0
   715  007D78  00                 	db	0
   716  007D79  77                 	db	119
   717  007D7A  69                 	db	105
   718  007D7B  6C                 	db	108
   719  007D7C  6C                 	db	108
   720  007D7D  20                 	db	32
   721  007D7E  6E                 	db	110
   722  007D7F  6F                 	db	111
   723  007D80  77                 	db	119
   724  007D81  20                 	db	32
   725  007D82  62                 	db	98
   726  007D83  65                 	db	101
   727  007D84  00                 	db	0
   728  007D85  00                 	db	0
   729  007D86  00                 	db	0
   730  007D87  00                 	db	0
   731  007D88  00                 	db	0
   732  007D89  00                 	db	0
   733  007D8A  00                 	db	0
   734  007D8B  00                 	db	0
   735  007D8C  00                 	db	0
   736  007D8D  74                 	db	116
   737  007D8E  69                 	db	105
   738  007D8F  6C                 	db	108
   739  007D90  74                 	db	116
   740  007D91  65                 	db	101
   741  007D92  64                 	db	100
   742  007D93  20                 	db	32
   743  007D94  31                 	db	49
   744  007D95  30                 	db	48
   745  007D96  20                 	db	32
   746  007D97  74                 	db	116
   747  007D98  69                 	db	105
   748  007D99  6D                 	db	109
   749  007D9A  65                 	db	101
   750  007D9B  73                 	db	115
   751  007D9C  00                 	db	0
   752  007D9D  00                 	db	0
   753  007D9E  00                 	db	0
   754  007D9F  00                 	db	0
   755  007DA0  00                 	db	0
   756  007DA1  00                 	db	0
   757  007DA2  00                 	db	0
   758  007DA3  00                 	db	0
   759  007DA4  00                 	db	0
   760  007DA5  00                 	db	0
   761  007DA6  00                 	db	0
   762  007DA7  00                 	db	0
   763  007DA8  00                 	db	0
   764  007DA9  00                 	db	0
   765  007DAA  00                 	db	0
   766  007DAB  00                 	db	0
   767  007DAC  00                 	db	0
   768  007DAD  00                 	db	0
   769  007DAE  00                 	db	0
   770  007DAF  00                 	db	0
   771  007DB0  00                 	db	0
   772  007DB1  00                 	db	0
   773  007DB2  00                 	db	0
   774  007DB3  00                 	db	0
   775  007DB4  00                 	db	0
   776  007DB5  44                 	db	68
   777  007DB6  49                 	db	73
   778  007DB7  4C                 	db	76
   779  007DB8  55                 	db	85
   780  007DB9  54                 	db	84
   781  007DBA  49                 	db	73
   782  007DBB  4E                 	db	78
   783  007DBC  47                 	db	71
   784  007DBD  3A                 	db	58
   785  007DBE  20                 	db	32
   786  007DBF  74                 	db	116
   787  007DC0  68                 	db	104
   788  007DC1  65                 	db	101
   789  007DC2  00                 	db	0
   790  007DC3  00                 	db	0
   791  007DC4  00                 	db	0
   792  007DC5  00                 	db	0
   793  007DC6  00                 	db	0
   794  007DC7  00                 	db	0
   795  007DC8  00                 	db	0
   796  007DC9  76                 	db	118
   797  007DCA  61                 	db	97
   798  007DCB  63                 	db	99
   799  007DCC  63                 	db	99
   800  007DCD  69                 	db	105
   801  007DCE  6E                 	db	110
   802  007DCF  65                 	db	101
   803  007DD0  20                 	db	32
   804  007DD1  77                 	db	119
   805  007DD2  69                 	db	105
   806  007DD3  6C                 	db	108
   807  007DD4  6C                 	db	108
   808  007DD5  20                 	db	32
   809  007DD6  6E                 	db	110
   810  007DD7  6F                 	db	111
   811  007DD8  77                 	db	119
   812  007DD9  00                 	db	0
   813  007DDA  00                 	db	0
   814  007DDB  00                 	db	0
   815  007DDC  00                 	db	0
   816  007DDD  62                 	db	98
   817  007DDE  65                 	db	101
   818  007DDF  20                 	db	32
   819  007DE0  64                 	db	100
   820  007DE1  69                 	db	105
   821  007DE2  6C                 	db	108
   822  007DE3  75                 	db	117
   823  007DE4  74                 	db	116
   824  007DE5  65                 	db	101
   825  007DE6  64                 	db	100
   826  007DE7  00                 	db	0
   827  007DE8  00                 	db	0
   828  007DE9  00                 	db	0
   829  007DEA  00                 	db	0
   830  007DEB  00                 	db	0
   831  007DEC  00                 	db	0
   832  007DED  00                 	db	0
   833  007DEE  00                 	db	0
   834  007DEF  00                 	db	0
   835  007DF0  00                 	db	0
   836  007DF1  00                 	db	0
   837  007DF2  00                 	db	0
   838  007DF3  00                 	db	0
   839  007DF4  00                 	db	0
   840  007DF5  00                 	db	0
   841  007DF6  00                 	db	0
   842  007DF7  00                 	db	0
   843  007DF8  00                 	db	0
   844  007DF9  00                 	db	0
   845  007DFA  00                 	db	0
   846  007DFB  00                 	db	0
   847  007DFC  00                 	db	0
   848  007DFD  00                 	db	0
   849  007DFE  00                 	db	0
   850  007DFF  00                 	db	0
   851  007E00  00                 	db	0
   852  007E01  00                 	db	0
   853  007E02  00                 	db	0
   854  007E03  00                 	db	0
   855  007E04  00                 	db	0
   856  007E05  52                 	db	82
   857  007E06  45                 	db	69
   858  007E07  4C                 	db	76
   859  007E08  45                 	db	69
   860  007E09  41                 	db	65
   861  007E0A  53                 	db	83
   862  007E0B  49                 	db	73
   863  007E0C  4E                 	db	78
   864  007E0D  47                 	db	71
   865  007E0E  3A                 	db	58
   866  007E0F  00                 	db	0
   867  007E10  00                 	db	0
   868  007E11  00                 	db	0
   869  007E12  00                 	db	0
   870  007E13  00                 	db	0
   871  007E14  00                 	db	0
   872  007E15  00                 	db	0
   873  007E16  00                 	db	0
   874  007E17  00                 	db	0
   875  007E18  00                 	db	0
   876  007E19  72                 	db	114
   877  007E1A  65                 	db	101
   878  007E1B  6C                 	db	108
   879  007E1C  65                 	db	101
   880  007E1D  61                 	db	97
   881  007E1E  73                 	db	115
   882  007E1F  69                 	db	105
   883  007E20  6E                 	db	110
   884  007E21  67                 	db	103
   885  007E22  20                 	db	32
   886  007E23  68                 	db	104
   887  007E24  61                 	db	97
   888  007E25  73                 	db	115
   889  007E26  00                 	db	0
   890  007E27  00                 	db	0
   891  007E28  00                 	db	0
   892  007E29  00                 	db	0
   893  007E2A  00                 	db	0
   894  007E2B  00                 	db	0
   895  007E2C  00                 	db	0
   896  007E2D  73                 	db	115
   897  007E2E  74                 	db	116
   898  007E2F  61                 	db	97
   899  007E30  72                 	db	114
   900  007E31  74                 	db	116
   901  007E32  65                 	db	101
   902  007E33  64                 	db	100
   903  007E34  00                 	db	0
   904  007E35  00                 	db	0
   905  007E36  00                 	db	0
   906  007E37  00                 	db	0
   907  007E38  00                 	db	0
   908  007E39  00                 	db	0
   909  007E3A  00                 	db	0
   910  007E3B  00                 	db	0
   911  007E3C  00                 	db	0
   912  007E3D  00                 	db	0
   913  007E3E  00                 	db	0
   914  007E3F  00                 	db	0
   915  007E40  00                 	db	0
   916  007E41  00                 	db	0
   917  007E42  00                 	db	0
   918  007E43  00                 	db	0
   919  007E44  00                 	db	0
   920  007E45  00                 	db	0
   921  007E46  00                 	db	0
   922  007E47  00                 	db	0
   923  007E48  00                 	db	0
   924  007E49  00                 	db	0
   925  007E4A  00                 	db	0
   926  007E4B  00                 	db	0
   927  007E4C  00                 	db	0
   928  007E4D  00                 	db	0
   929  007E4E  00                 	db	0
   930  007E4F  00                 	db	0
   931  007E50  00                 	db	0
   932  007E51  00                 	db	0
   933  007E52  00                 	db	0
   934  007E53  00                 	db	0
   935  007E54  00                 	db	0
   936  007E55  50                 	db	80
   937  007E56  49                 	db	73
   938  007E57  43                 	db	67
   939  007E58  4B                 	db	75
   940  007E59  5F                 	db	95
   941  007E5A  55                 	db	85
   942  007E5B  50                 	db	80
   943  007E5C  3A                 	db	58
   944  007E5D  20                 	db	32
   945  007E5E  74                 	db	116
   946  007E5F  68                 	db	104
   947  007E60  65                 	db	101
   948  007E61  20                 	db	32
   949  007E62  76                 	db	118
   950  007E63  69                 	db	105
   951  007E64  61                 	db	97
   952  007E65  6C                 	db	108
   953  007E66  00                 	db	0
   954  007E67  00                 	db	0
   955  007E68  00                 	db	0
   956  007E69  68                 	db	104
   957  007E6A  61                 	db	97
   958  007E6B  73                 	db	115
   959  007E6C  20                 	db	32
   960  007E6D  72                 	db	114
   961  007E6E  65                 	db	101
   962  007E6F  61                 	db	97
   963  007E70  63                 	db	99
   964  007E71  68                 	db	104
   965  007E72  65                 	db	101
   966  007E73  64                 	db	100
   967  007E74  20                 	db	32
   968  007E75  74                 	db	116
   969  007E76  68                 	db	104
   970  007E77  65                 	db	101
   971  007E78  00                 	db	0
   972  007E79  00                 	db	0
   973  007E7A  00                 	db	0
   974  007E7B  00                 	db	0
   975  007E7C  00                 	db	0
   976  007E7D  70                 	db	112
   977  007E7E  69                 	db	105
   978  007E7F  63                 	db	99
   979  007E80  6B                 	db	107
   980  007E81  20                 	db	32
   981  007E82  75                 	db	117
   982  007E83  70                 	db	112
   983  007E84  20                 	db	32
   984  007E85  73                 	db	115
   985  007E86  74                 	db	116
   986  007E87  61                 	db	97
   987  007E88  74                 	db	116
   988  007E89  69                 	db	105
   989  007E8A  6F                 	db	111
   990  007E8B  6E                 	db	110
   991  007E8C  00                 	db	0
   992  007E8D  00                 	db	0
   993  007E8E  00                 	db	0
   994  007E8F  00                 	db	0
   995  007E90  00                 	db	0
   996  007E91  00                 	db	0
   997  007E92  00                 	db	0
   998  007E93  00                 	db	0
   999  007E94  00                 	db	0
  1000  007E95  00                 	db	0
  1001  007E96  00                 	db	0
  1002  007E97  00                 	db	0
  1003  007E98  00                 	db	0
  1004  007E99  00                 	db	0
  1005  007E9A  00                 	db	0
  1006  007E9B  00                 	db	0
  1007  007E9C  00                 	db	0
  1008  007E9D  00                 	db	0
  1009  007E9E  00                 	db	0
  1010  007E9F  00                 	db	0
  1011  007EA0  00                 	db	0
  1012  007EA1  00                 	db	0
  1013  007EA2  00                 	db	0
  1014  007EA3  00                 	db	0
  1015  007EA4  00                 	db	0
  1016  007EA5  50                 	db	80
  1017  007EA6  49                 	db	73
  1018  007EA7  43                 	db	67
  1019  007EA8  4B                 	db	75
  1020  007EA9  5F                 	db	95
  1021  007EAA  55                 	db	85
  1022  007EAB  50                 	db	80
  1023  007EAC  3A                 	db	58
  1024  007EAD  20                 	db	32
  1025  007EAE  70                 	db	112
  1026  007EAF  6C                 	db	108
  1027  007EB0  65                 	db	101
  1028  007EB1  61                 	db	97
  1029  007EB2  73                 	db	115
  1030  007EB3  65                 	db	101
  1031  007EB4  00                 	db	0
  1032  007EB5  00                 	db	0
  1033  007EB6  00                 	db	0
  1034  007EB7  00                 	db	0
  1035  007EB8  00                 	db	0
  1036  007EB9  70                 	db	112
  1037  007EBA  69                 	db	105
  1038  007EBB  63                 	db	99
  1039  007EBC  6B                 	db	107
  1040  007EBD  20                 	db	32
  1041  007EBE  75                 	db	117
  1042  007EBF  70                 	db	112
  1043  007EC0  20                 	db	32
  1044  007EC1  74                 	db	116
  1045  007EC2  68                 	db	104
  1046  007EC3  65                 	db	101
  1047  007EC4  00                 	db	0
  1048  007EC5  00                 	db	0
  1049  007EC6  00                 	db	0
  1050  007EC7  00                 	db	0
  1051  007EC8  00                 	db	0
  1052  007EC9  00                 	db	0
  1053  007ECA  00                 	db	0
  1054  007ECB  00                 	db	0
  1055  007ECC  00                 	db	0
  1056  007ECD  76                 	db	118
  1057  007ECE  69                 	db	105
  1058  007ECF  61                 	db	97
  1059  007ED0  6C                 	db	108
  1060  007ED1  20                 	db	32
  1061  007ED2  62                 	db	98
  1062  007ED3  65                 	db	101
  1063  007ED4  66                 	db	102
  1064  007ED5  6F                 	db	111
  1065  007ED6  72                 	db	114
  1066  007ED7  65                 	db	101
  1067  007ED8  00                 	db	0
  1068  007ED9  00                 	db	0
  1069  007EDA  00                 	db	0
  1070  007EDB  00                 	db	0
  1071  007EDC  00                 	db	0
  1072  007EDD  00                 	db	0
  1073  007EDE  00                 	db	0
  1074  007EDF  00                 	db	0
  1075  007EE0  00                 	db	0
  1076  007EE1  74                 	db	116
  1077  007EE2  69                 	db	105
  1078  007EE3  6D                 	db	109
  1079  007EE4  65                 	db	101
  1080  007EE5  6F                 	db	111
  1081  007EE6  75                 	db	117
  1082  007EE7  74                 	db	116
  1083  007EE8  00                 	db	0
  1084  007EE9  00                 	db	0
  1085  007EEA  00                 	db	0
  1086  007EEB  00                 	db	0
  1087  007EEC  00                 	db	0
  1088  007EED  00                 	db	0
  1089  007EEE  00                 	db	0
  1090  007EEF  00                 	db	0
  1091  007EF0  00                 	db	0
  1092  007EF1  00                 	db	0
  1093  007EF2  00                 	db	0
  1094  007EF3  00                 	db	0
  1095  007EF4  00                 	db	0
  1096  007EF5  50                 	db	80
  1097  007EF6  49                 	db	73
  1098  007EF7  43                 	db	67
  1099  007EF8  4B                 	db	75
  1100  007EF9  5F                 	db	95
  1101  007EFA  55                 	db	85
  1102  007EFB  50                 	db	80
  1103  007EFC  3A                 	db	58
  1104  007EFD  20                 	db	32
  1105  007EFE  74                 	db	116
  1106  007EFF  68                 	db	104
  1107  007F00  65                 	db	101
  1108  007F01  20                 	db	32
  1109  007F02  76                 	db	118
  1110  007F03  69                 	db	105
  1111  007F04  61                 	db	97
  1112  007F05  6C                 	db	108
  1113  007F06  00                 	db	0
  1114  007F07  00                 	db	0
  1115  007F08  00                 	db	0
  1116  007F09  68                 	db	104
  1117  007F0A  61                 	db	97
  1118  007F0B  73                 	db	115
  1119  007F0C  20                 	db	32
  1120  007F0D  62                 	db	98
  1121  007F0E  65                 	db	101
  1122  007F0F  65                 	db	101
  1123  007F10  6E                 	db	110
  1124  007F11  20                 	db	32
  1125  007F12  70                 	db	112
  1126  007F13  69                 	db	105
  1127  007F14  63                 	db	99
  1128  007F15  6B                 	db	107
  1129  007F16  65                 	db	101
  1130  007F17  64                 	db	100
  1131  007F18  00                 	db	0
  1132  007F19  00                 	db	0
  1133  007F1A  00                 	db	0
  1134  007F1B  00                 	db	0
  1135  007F1C  00                 	db	0
  1136  007F1D  67                 	db	103
  1137  007F1E  6F                 	db	111
  1138  007F1F  69                 	db	105
  1139  007F20  6E                 	db	110
  1140  007F21  67                 	db	103
  1141  007F22  20                 	db	32
  1142  007F23  62                 	db	98
  1143  007F24  61                 	db	97
  1144  007F25  63                 	db	99
  1145  007F26  6B                 	db	107
  1146  007F27  20                 	db	32
  1147  007F28  74                 	db	116
  1148  007F29  6F                 	db	111
  1149  007F2A  00                 	db	0
  1150  007F2B  00                 	db	0
  1151  007F2C  00                 	db	0
  1152  007F2D  00                 	db	0
  1153  007F2E  00                 	db	0
  1154  007F2F  00                 	db	0
  1155  007F30  00                 	db	0
  1156  007F31  69                 	db	105
  1157  007F32  64                 	db	100
  1158  007F33  6C                 	db	108
  1159  007F34  65                 	db	101
  1160  007F35  00                 	db	0
  1161  007F36  00                 	db	0
  1162  007F37  00                 	db	0
  1163  007F38  00                 	db	0
  1164  007F39  00                 	db	0
  1165  007F3A  00                 	db	0
  1166  007F3B  00                 	db	0
  1167  007F3C  00                 	db	0
  1168  007F3D  00                 	db	0
  1169  007F3E  00                 	db	0
  1170  007F3F  00                 	db	0
  1171  007F40  00                 	db	0
  1172  007F41  00                 	db	0
  1173  007F42  00                 	db	0
  1174  007F43  00                 	db	0
  1175  007F44  00                 	db	0
  1176  007F45  54                 	db	84
  1177  007F46  52                 	db	82
  1178  007F47  41                 	db	65
  1179  007F48  53                 	db	83
  1180  007F49  48                 	db	72
  1181  007F4A  3A                 	db	58
  1182  007F4B  20                 	db	32
  1183  007F4C  74                 	db	116
  1184  007F4D  69                 	db	105
  1185  007F4E  6D                 	db	109
  1186  007F4F  65                 	db	101
  1187  007F50  6F                 	db	111
  1188  007F51  75                 	db	117
  1189  007F52  74                 	db	116
  1190  007F53  00                 	db	0
  1191  007F54  00                 	db	0
  1192  007F55  00                 	db	0
  1193  007F56  00                 	db	0
  1194  007F57  00                 	db	0
  1195  007F58  00                 	db	0
  1196  007F59  65                 	db	101
  1197  007F5A  78                 	db	120
  1198  007F5B  63                 	db	99
  1199  007F5C  65                 	db	101
  1200  007F5D  65                 	db	101
  1201  007F5E  64                 	db	100
  1202  007F5F  65                 	db	101
  1203  007F60  64                 	db	100
  1204  007F61  20                 	db	32
  1205  007F62  74                 	db	116
  1206  007F63  68                 	db	104
  1207  007F64  65                 	db	101
  1208  007F65  00                 	db	0
  1209  007F66  00                 	db	0
  1210  007F67  00                 	db	0
  1211  007F68  00                 	db	0
  1212  007F69  00                 	db	0
  1213  007F6A  00                 	db	0
  1214  007F6B  00                 	db	0
  1215  007F6C  00                 	db	0
  1216  007F6D  76                 	db	118
  1217  007F6E  69                 	db	105
  1218  007F6F  61                 	db	97
  1219  007F70  6C                 	db	108
  1220  007F71  20                 	db	32
  1221  007F72  77                 	db	119
  1222  007F73  69                 	db	105
  1223  007F74  6C                 	db	108
  1224  007F75  6C                 	db	108
  1225  007F76  20                 	db	32
  1226  007F77  62                 	db	98
  1227  007F78  65                 	db	101
  1228  007F79  00                 	db	0
  1229  007F7A  00                 	db	0
  1230  007F7B  00                 	db	0
  1231  007F7C  00                 	db	0
  1232  007F7D  00                 	db	0
  1233  007F7E  00                 	db	0
  1234  007F7F  00                 	db	0
  1235  007F80  00                 	db	0
  1236  007F81  74                 	db	116
  1237  007F82  72                 	db	114
  1238  007F83  61                 	db	97
  1239  007F84  73                 	db	115
  1240  007F85  68                 	db	104
  1241  007F86  65                 	db	101
  1242  007F87  64                 	db	100
  1243  007F88  00                 	db	0
  1244  007F89  00                 	db	0
  1245  007F8A  00                 	db	0
  1246  007F8B  00                 	db	0
  1247  007F8C  00                 	db	0
  1248  007F8D  00                 	db	0
  1249  007F8E  00                 	db	0
  1250  007F8F  00                 	db	0
  1251  007F90  00                 	db	0
  1252  007F91  00                 	db	0
  1253  007F92  00                 	db	0
  1254  007F93  00                 	db	0
  1255  007F94  00                 	db	0
  1256  007F95  45                 	db	69
  1257  007F96  52                 	db	82
  1258  007F97  52                 	db	82
  1259  007F98  4F                 	db	79
  1260  007F99  52                 	db	82
  1261  007F9A  00                 	db	0
  1262  007F9B  00                 	db	0
  1263  007F9C  00                 	db	0
  1264  007F9D  00                 	db	0
  1265  007F9E  00                 	db	0
  1266  007F9F  00                 	db	0
  1267  007FA0  00                 	db	0
  1268  007FA1  00                 	db	0
  1269  007FA2  00                 	db	0
  1270  007FA3  00                 	db	0
  1271  007FA4  00                 	db	0
  1272  007FA5  00                 	db	0
  1273  007FA6  00                 	db	0
  1274  007FA7  00                 	db	0
  1275  007FA8  00                 	db	0
  1276  007FA9  00                 	db	0
  1277  007FAA  00                 	db	0
  1278  007FAB  00                 	db	0
  1279  007FAC  00                 	db	0
  1280  007FAD  00                 	db	0
  1281  007FAE  00                 	db	0
  1282  007FAF  00                 	db	0
  1283  007FB0  00                 	db	0
  1284  007FB1  00                 	db	0
  1285  007FB2  00                 	db	0
  1286  007FB3  00                 	db	0
  1287  007FB4  00                 	db	0
  1288  007FB5  00                 	db	0
  1289  007FB6  00                 	db	0
  1290  007FB7  00                 	db	0
  1291  007FB8  00                 	db	0
  1292  007FB9  00                 	db	0
  1293  007FBA  00                 	db	0
  1294  007FBB  00                 	db	0
  1295  007FBC  00                 	db	0
  1296  007FBD  00                 	db	0
  1297  007FBE  00                 	db	0
  1298  007FBF  00                 	db	0
  1299  007FC0  00                 	db	0
  1300  007FC1  00                 	db	0
  1301  007FC2  00                 	db	0
  1302  007FC3  00                 	db	0
  1303  007FC4  00                 	db	0
  1304  007FC5  00                 	db	0
  1305  007FC6  00                 	db	0
  1306  007FC7  00                 	db	0
  1307  007FC8  00                 	db	0
  1308  007FC9  00                 	db	0
  1309  007FCA  00                 	db	0
  1310  007FCB  00                 	db	0
  1311  007FCC  00                 	db	0
  1312  007FCD  00                 	db	0
  1313  007FCE  00                 	db	0
  1314  007FCF  00                 	db	0
  1315  007FD0  00                 	db	0
  1316  007FD1  00                 	db	0
  1317  007FD2  00                 	db	0
  1318  007FD3  00                 	db	0
  1319  007FD4  00                 	db	0
  1320  007FD5  00                 	db	0
  1321  007FD6  00                 	db	0
  1322  007FD7  00                 	db	0
  1323  007FD8  00                 	db	0
  1324  007FD9  00                 	db	0
  1325  007FDA  00                 	db	0
  1326  007FDB  00                 	db	0
  1327  007FDC  00                 	db	0
  1328  007FDD  00                 	db	0
  1329  007FDE  00                 	db	0
  1330  007FDF  00                 	db	0
  1331  007FE0  00                 	db	0
  1332  007FE1  00                 	db	0
  1333  007FE2  00                 	db	0
  1334  007FE3  00                 	db	0
  1335  007FE4  00                 	db	0
  1336  007FE5                     __end_of_const_msgs:
  1337                           	callstack 0
  1338  007FE5  2400               	dw	9216
  1339  007FE7  4A74               	dw	19060
  1340  007FE9                     __end_of_fosc:
  1341                           	callstack 0
  1342  0000                     _ADCON1	set	4033
  1343  0000                     _ADRESL	set	4035
  1344  0000                     _ADRESH	set	4036
  1345  0000                     _ADCON0bits	set	4034
  1346  0000                     _ADCON0	set	4034
  1347  0000                     _TMR0H	set	4055
  1348  0000                     _TMR0L	set	4054
  1349  0000                     _PORTEbits	set	3972
  1350  0000                     _PORTD	set	3971
  1351  0000                     _TRISCbits	set	3988
  1352  0000                     _TRISC	set	3988
  1353  0000                     _PORTC	set	3970
  1354  0000                     _TRISB	set	3987
  1355  0000                     _PORTB	set	3969
  1356  0000                     _TRISA	set	3986
  1357  0000                     _PORTA	set	3968
  1358  0000                     _LATA	set	3977
  1359  0000                     _T0CON	set	4053
  1360  0000                     _PIR1bits	set	3998
  1361  0000                     _PIE1bits	set	3997
  1362  0000                     _T0CONbits	set	4053
  1363  0000                     _LATAbits	set	3977
  1364  0000                     _LATCbits	set	3979
  1365  0000                     _INTCONbits	set	4082
  1366  0000                     _RCREG	set	4014
  1367  0000                     _TXREG	set	4013
  1368  0000                     _RCSTAbits	set	4011
  1369  0000                     _TXSTAbits	set	4012
  1370  0000                     _SPBRG	set	4015
  1371  0000                     _LATC	set	3979
  1372  0000                     _LATB	set	3978
  1373  007FE9                     STR_1:
  1374  007FE9  44                 	db	68	;'D'
  1375  007FEA  65                 	db	101	;'e'
  1376  007FEB  76                 	db	118	;'v'
  1377  007FEC  69                 	db	105	;'i'
  1378  007FED  63                 	db	99	;'c'
  1379  007FEE  65                 	db	101	;'e'
  1380  007FEF  20                 	db	32
  1381  007FF0  68                 	db	104	;'h'
  1382  007FF1  61                 	db	97	;'a'
  1383  007FF2  73                 	db	115	;'s'
  1384  007FF3  20                 	db	32
  1385  007FF4  62                 	db	98	;'b'
  1386  007FF5  65                 	db	101	;'e'
  1387  007FF6  65                 	db	101	;'e'
  1388  007FF7  6E                 	db	110	;'n'
  1389  007FF8  20                 	db	32
  1390  007FF9  72                 	db	114	;'r'
  1391  007FFA  65                 	db	101	;'e'
  1392  007FFB  73                 	db	115	;'s'
  1393  007FFC  65                 	db	101	;'e'
  1394  007FFD  74                 	db	116	;'t'
  1395  007FFE  00                 	db	0
  1396  007FFF  00                 	db	0	; dummy byte at the end
  1397  0000                     
  1398                           ; #config settings
  1399                           
  1400                           	psect	cinit
  1401  00256A                     __pcinit:
  1402                           	callstack 0
  1403  00256A                     start_initialization:
  1404                           	callstack 0
  1405  00256A                     __initialization:
  1406                           	callstack 0
  1407                           
  1408                           ; Initialize objects allocated to BANK0 (14 bytes)
  1409                           ; load TBLPTR registers with __pidataBANK0
  1410  00256A  0EC6               	movlw	low __pidataBANK0
  1411  00256C  6EF6               	movwf	tblptrl,c
  1412  00256E  0E27               	movlw	high __pidataBANK0
  1413  002570  6EF7               	movwf	tblptrh,c
  1414  002572  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1415  002574  6EF8               	movwf	tblptru,c
  1416  002576  EE00  F0BA         	lfsr	0,__pdataBANK0
  1417  00257A  EE10 F00E          	lfsr	1,14
  1418  00257E                     copy_data0:
  1419  00257E  0009               	tblrd		*+
  1420  002580  CFF5 FFEE          	movff	tablat,postinc0
  1421  002584  50E5               	movf	postdec1,w,c
  1422  002586  50E1               	movf	fsr1l,w,c
  1423  002588  E1FA               	bnz	copy_data0
  1424                           
  1425                           ; Clear objects allocated to BANK0 (58 bytes)
  1426  00258A  EE00  F080         	lfsr	0,__pbssBANK0
  1427  00258E  0E3A               	movlw	58
  1428  002590                     clear_0:
  1429  002590  6AEE               	clrf	postinc0,c
  1430  002592  06E8               	decf	wreg,f,c
  1431  002594  E1FD               	bnz	clear_0
  1432                           
  1433                           ; Clear objects allocated to COMRAM (16 bytes)
  1434  002596  EE00  F06F         	lfsr	0,__pbssCOMRAM
  1435  00259A  0E10               	movlw	16
  1436  00259C                     clear_1:
  1437  00259C  6AEE               	clrf	postinc0,c
  1438  00259E  06E8               	decf	wreg,f,c
  1439  0025A0  E1FD               	bnz	clear_1
  1440  0025A2                     end_of_initialization:
  1441                           	callstack 0
  1442  0025A2                     __end_of__initialization:
  1443                           	callstack 0
  1444  0025A2  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1445  0025A4  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1446  0025A6  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1447  0025A8  6EF8               	movwf	tblptru,c
  1448  0025AA  0100               	movlb	0
  1449  0025AC  EF3C  F000         	goto	_main	;jump to C main() function
  1450                           
  1451                           	psect	bssCOMRAM
  1452  00006F                     __pbssCOMRAM:
  1453                           	callstack 0
  1454  00006F                     _end_effector_homed:
  1455                           	callstack 0
  1456  00006F                     	ds	2
  1457  000071                     _grasping_joint_position_reached:
  1458                           	callstack 0
  1459  000071                     	ds	2
  1460  000073                     _trash_counter:
  1461                           	callstack 0
  1462  000073                     	ds	2
  1463  000075                     _dilution_done:
  1464                           	callstack 0
  1465  000075                     	ds	2
  1466  000077                     _mix_counter:
  1467                           	callstack 0
  1468  000077                     	ds	2
  1469  000079                     _timer_done:
  1470                           	callstack 0
  1471  000079                     	ds	1
  1472  00007A                     _read_new_char:
  1473                           	callstack 0
  1474  00007A                     	ds	1
  1475  00007B                     _idle_msg_sent:
  1476                           	callstack 0
  1477  00007B                     	ds	1
  1478  00007C                     _state_changed:
  1479                           	callstack 0
  1480  00007C                     	ds	1
  1481  00007D                     _state:
  1482                           	callstack 0
  1483  00007D                     	ds	2
  1484                           
  1485                           	psect	bssBANK0
  1486  000080                     __pbssBANK0:
  1487                           	callstack 0
  1488  000080                     roundf@F525:
  1489                           	callstack 0
  1490  000080                     	ds	4
  1491  000084                     _temperature_scaled:
  1492                           	callstack 0
  1493  000084                     	ds	2
  1494  000086                     _temperature_int:
  1495                           	callstack 0
  1496  000086                     	ds	2
  1497  000088                     _joint_dilutor_homed:
  1498                           	callstack 0
  1499  000088                     	ds	2
  1500  00008A                     _joint_homed:
  1501                           	callstack 0
  1502  00008A                     	ds	2
  1503  00008C                     _diluting_position_reached:
  1504                           	callstack 0
  1505  00008C                     	ds	2
  1506  00008E                     _grasping_ee_position_reached:
  1507                           	callstack 0
  1508  00008E                     	ds	2
  1509  000090                     _mix_step_counter:
  1510                           	callstack 0
  1511  000090                     	ds	2
  1512  000092                     _mix_direction:
  1513                           	callstack 0
  1514  000092                     	ds	2
  1515  000094                     _mix_current_step:
  1516                           	callstack 0
  1517  000094                     	ds	2
  1518  000096                     _joint_dilutor_stepper:
  1519                           	callstack 0
  1520  000096                     	ds	12
  1521  0000A2                     _end_effector_stepper:
  1522                           	callstack 0
  1523  0000A2                     	ds	12
  1524  0000AE                     _joint_stepper:
  1525                           	callstack 0
  1526  0000AE                     	ds	12
  1527                           
  1528                           	psect	dataBANK0
  1529  0000BA                     __pdataBANK0:
  1530                           	callstack 0
  1531  0000BA                     	ds	4
  1532  0000BE                     _state_before_error:
  1533                           	callstack 0
  1534  0000BE                     	ds	2
  1535  0000C0                     _hex_end_effector_values:
  1536                           	callstack 0
  1537  0000C0                     	ds	4
  1538  0000C4                     _hex_joint_values:
  1539                           	callstack 0
  1540  0000C4                     	ds	4
  1541                           
  1542                           	psect	cstackCOMRAM
  1543  000001                     __pcstackCOMRAM:
  1544                           	callstack 0
  1545  000001                     ?_abs:
  1546                           	callstack 0
  1547  000001                     ?___wmul:
  1548                           	callstack 0
  1549  000001                     ?___fladd:
  1550                           	callstack 0
  1551  000001                     ?___flneg:
  1552                           	callstack 0
  1553  000001                     serial_tx_char@val:
  1554                           	callstack 0
  1555  000001                     get_reg_value@rx_char:
  1556                           	callstack 0
  1557  000001                     lcd_wr@val:
  1558                           	callstack 0
  1559  000001                     state_translator_micro_to_fpga@state:
  1560                           	callstack 0
  1561  000001                     init_stepper@stepper_motor:
  1562                           	callstack 0
  1563  000001                     turn_on_current_coil@stepper_motor:
  1564                           	callstack 0
  1565  000001                     update_current_coil@stepper_motor:
  1566                           	callstack 0
  1567  000001                     change_direction@stepper_motor:
  1568                           	callstack 0
  1569  000001                     ___wmul@multiplier:
  1570                           	callstack 0
  1571  000001                     abs@a:
  1572                           	callstack 0
  1573  000001                     ___flneg@f1:
  1574                           	callstack 0
  1575  000001                     ___fladd@b:
  1576                           	callstack 0
  1577                           
  1578                           ; 4 bytes @ 0x0
  1579  000001                     	ds	1
  1580  000002                     lcd_cmd@val:
  1581                           	callstack 0
  1582  000002                     lcd_dat@val:
  1583                           	callstack 0
  1584                           
  1585                           ; 1 bytes @ 0x1
  1586  000002                     	ds	1
  1587  000003                     ??_lcd_init:
  1588  000003                     ??_change_direction:
  1589  000003                     ??_abs:
  1590  000003                     ??_turn_on_current_coil:
  1591  000003                     ??_update_current_coil:
  1592  000003                     state_translator_fpga_to_micro@state:
  1593                           	callstack 0
  1594  000003                     init_stepper@current_coil:
  1595                           	callstack 0
  1596  000003                     ___wmul@multiplicand:
  1597                           	callstack 0
  1598                           
  1599                           ; 2 bytes @ 0x2
  1600  000003                     	ds	2
  1601  000005                     ?___awdiv:
  1602                           	callstack 0
  1603  000005                     state_translator_fpga_to_micro@state_machine_code:
  1604                           	callstack 0
  1605  000005                     state_translator_micro_to_fpga@state_machine_code:
  1606                           	callstack 0
  1607  000005                     init_stepper@step_counter:
  1608                           	callstack 0
  1609  000005                     ___wmul@product:
  1610                           	callstack 0
  1611  000005                     ___awdiv@dividend:
  1612                           	callstack 0
  1613  000005                     ___fladd@a:
  1614                           	callstack 0
  1615                           
  1616                           ; 4 bytes @ 0x4
  1617  000005                     	ds	2
  1618  000007                     lcd_str@str:
  1619                           	callstack 0
  1620  000007                     init_stepper@direction:
  1621                           	callstack 0
  1622  000007                     ___awdiv@divisor:
  1623                           	callstack 0
  1624                           
  1625                           ; 2 bytes @ 0x6
  1626  000007                     	ds	2
  1627  000009                     ??_lcd_str:
  1628  000009                     ??___fladd:
  1629  000009                     ?_reach_goal:
  1630                           	callstack 0
  1631  000009                     ___awdiv@counter:
  1632                           	callstack 0
  1633  000009                     init_stepper@hex_coil_register_values:
  1634                           	callstack 0
  1635  000009                     reach_goal@stepper_motor:
  1636                           	callstack 0
  1637                           
  1638                           ; 2 bytes @ 0x8
  1639  000009                     	ds	1
  1640  00000A                     ___awdiv@sign:
  1641                           	callstack 0
  1642                           
  1643                           ; 1 bytes @ 0x9
  1644  00000A                     	ds	1
  1645  00000B                     lcd_str@i:
  1646                           	callstack 0
  1647  00000B                     init_stepper@register_name:
  1648                           	callstack 0
  1649  00000B                     reach_goal@goal_to_reach:
  1650                           	callstack 0
  1651  00000B                     ___awdiv@quotient:
  1652                           	callstack 0
  1653                           
  1654                           ; 2 bytes @ 0xA
  1655  00000B                     	ds	1
  1656  00000C                     lcd_update@state:
  1657                           	callstack 0
  1658                           
  1659                           ; 2 bytes @ 0xB
  1660  00000C                     	ds	1
  1661  00000D                     ??_init_stepper:
  1662  00000D                     ??_reach_goal:
  1663  00000D                     ?___xxtofl:
  1664                           	callstack 0
  1665  00000D                     ___fladd@signs:
  1666                           	callstack 0
  1667  00000D                     ___xxtofl@val:
  1668                           	callstack 0
  1669                           
  1670                           ; 4 bytes @ 0xC
  1671  00000D                     	ds	1
  1672  00000E                     ??_lcd_update:
  1673  00000E                     ___fladd@aexp:
  1674                           	callstack 0
  1675                           
  1676                           ; 1 bytes @ 0xD
  1677  00000E                     	ds	1
  1678  00000F                     ___fladd@bexp:
  1679                           	callstack 0
  1680  00000F                     init_stepper@i:
  1681                           	callstack 0
  1682                           
  1683                           ; 2 bytes @ 0xE
  1684  00000F                     	ds	1
  1685  000010                     ___fladd@grs:
  1686                           	callstack 0
  1687  000010                     lcd_update@line_select:
  1688                           	callstack 0
  1689                           
  1690                           ; 4 bytes @ 0xF
  1691  000010                     	ds	1
  1692  000011                     ??___xxtofl:
  1693  000011                     ?___flsub:
  1694                           	callstack 0
  1695  000011                     ___flsub@b:
  1696                           	callstack 0
  1697                           
  1698                           ; 4 bytes @ 0x10
  1699  000011                     	ds	3
  1700  000014                     lcd_update@i:
  1701                           	callstack 0
  1702                           
  1703                           ; 2 bytes @ 0x13
  1704  000014                     	ds	1
  1705  000015                     ___xxtofl@sign:
  1706                           	callstack 0
  1707  000015                     ___flsub@a:
  1708                           	callstack 0
  1709                           
  1710                           ; 4 bytes @ 0x14
  1711  000015                     	ds	1
  1712  000016                     ___xxtofl@exp:
  1713                           	callstack 0
  1714                           
  1715                           ; 1 bytes @ 0x15
  1716  000016                     	ds	1
  1717  000017                     ___xxtofl@arg:
  1718                           	callstack 0
  1719                           
  1720                           ; 4 bytes @ 0x16
  1721  000017                     	ds	2
  1722  000019                     
  1723                           ; 1 bytes @ 0x18
  1724  000019                     	ds	2
  1725  00001B                     ?___flmul:
  1726                           	callstack 0
  1727  00001B                     ___flmul@b:
  1728                           	callstack 0
  1729                           
  1730                           ; 4 bytes @ 0x1A
  1731  00001B                     	ds	4
  1732  00001F                     ___flmul@a:
  1733                           	callstack 0
  1734                           
  1735                           ; 4 bytes @ 0x1E
  1736  00001F                     	ds	4
  1737  000023                     ??___flmul:
  1738                           
  1739                           ; 1 bytes @ 0x22
  1740  000023                     	ds	4
  1741  000027                     ___flmul@sign:
  1742                           	callstack 0
  1743                           
  1744                           ; 1 bytes @ 0x26
  1745  000027                     	ds	1
  1746  000028                     ___flmul@grs:
  1747                           	callstack 0
  1748                           
  1749                           ; 4 bytes @ 0x27
  1750  000028                     	ds	4
  1751  00002C                     ___flmul@aexp:
  1752                           	callstack 0
  1753                           
  1754                           ; 1 bytes @ 0x2B
  1755  00002C                     	ds	1
  1756  00002D                     ___flmul@bexp:
  1757                           	callstack 0
  1758                           
  1759                           ; 1 bytes @ 0x2C
  1760  00002D                     	ds	1
  1761  00002E                     ___flmul@prod:
  1762                           	callstack 0
  1763                           
  1764                           ; 4 bytes @ 0x2D
  1765  00002E                     	ds	4
  1766  000032                     ___flmul@temp:
  1767                           	callstack 0
  1768                           
  1769                           ; 2 bytes @ 0x31
  1770  000032                     	ds	2
  1771  000034                     ?___fltol:
  1772                           	callstack 0
  1773  000034                     ___fltol@f1:
  1774                           	callstack 0
  1775                           
  1776                           ; 4 bytes @ 0x33
  1777  000034                     	ds	4
  1778  000038                     ??___fltol:
  1779                           
  1780                           ; 1 bytes @ 0x37
  1781  000038                     	ds	4
  1782  00003C                     ___fltol@sign1:
  1783                           	callstack 0
  1784                           
  1785                           ; 1 bytes @ 0x3B
  1786  00003C                     	ds	1
  1787  00003D                     ___fltol@exp1:
  1788                           	callstack 0
  1789                           
  1790                           ; 1 bytes @ 0x3C
  1791  00003D                     	ds	1
  1792  00003E                     ?_get_liters:
  1793                           	callstack 0
  1794  00003E                     ?_get_temperature:
  1795                           	callstack 0
  1796                           
  1797                           ; 2 bytes @ 0x3D
  1798  00003E                     	ds	2
  1799  000040                     ___flge@ff1:
  1800                           	callstack 0
  1801                           
  1802                           ; 4 bytes @ 0x3F
  1803  000040                     	ds	4
  1804  000044                     ___flge@ff2:
  1805                           	callstack 0
  1806                           
  1807                           ; 4 bytes @ 0x43
  1808  000044                     	ds	4
  1809  000048                     ??___flge:
  1810                           
  1811                           ; 1 bytes @ 0x47
  1812  000048                     	ds	4
  1813  00004C                     ?_check_temperature:
  1814                           	callstack 0
  1815  00004C                     ?_roundf:
  1816                           	callstack 0
  1817  00004C                     check_temperature@temp_to_be_checked:
  1818                           	callstack 0
  1819  00004C                     roundf@x:
  1820                           	callstack 0
  1821                           
  1822                           ; 4 bytes @ 0x4B
  1823  00004C                     	ds	2
  1824  00004E                     check_temperature@grad:
  1825                           	callstack 0
  1826                           
  1827                           ; 4 bytes @ 0x4D
  1828  00004E                     	ds	2
  1829  000050                     ??_roundf:
  1830                           
  1831                           ; 1 bytes @ 0x4F
  1832  000050                     	ds	4
  1833  000054                     _roundf$1679:
  1834                           	callstack 0
  1835                           
  1836                           ; 4 bytes @ 0x53
  1837  000054                     	ds	4
  1838  000058                     roundf@e:
  1839                           	callstack 0
  1840                           
  1841                           ; 2 bytes @ 0x57
  1842  000058                     	ds	2
  1843  00005A                     _roundf$1678:
  1844                           	callstack 0
  1845                           
  1846                           ; 4 bytes @ 0x59
  1847  00005A                     	ds	4
  1848  00005E                     roundf@u:
  1849                           	callstack 0
  1850                           
  1851                           ; 4 bytes @ 0x5D
  1852  00005E                     	ds	4
  1853  000062                     roundf@y:
  1854                           	callstack 0
  1855                           
  1856                           ; 4 bytes @ 0x61
  1857  000062                     	ds	4
  1858  000066                     ??_main:
  1859                           
  1860                           ; 1 bytes @ 0x65
  1861  000066                     	ds	2
  1862  000068                     main@current_temp:
  1863                           	callstack 0
  1864                           
  1865                           ; 2 bytes @ 0x67
  1866  000068                     	ds	2
  1867  00006A                     main@rx_char:
  1868                           	callstack 0
  1869                           
  1870                           ; 1 bytes @ 0x69
  1871  00006A                     	ds	1
  1872  00006B                     _main$1677:
  1873                           	callstack 0
  1874                           
  1875                           ; 4 bytes @ 0x6A
  1876  00006B                     	ds	4
  1877                           
  1878 ;;
  1879 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1880 ;;
  1881 ;; *************** function _main *****************
  1882 ;; Defined at:
  1883 ;;		line 56 in file "main.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;		None
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;  current_temp    2  103[COMRAM] int 
  1888 ;;  greet_str     240    0        PTR const unsigned char 
  1889 ;;  rx_char         1  105[COMRAM] unsigned char 
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  1    wreg      void 
  1892 ;; Registers used:
  1893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1899 ;;      Params:         0       0       0       0       0       0       0
  1900 ;;      Locals:         7       0       0       0       0       0       0
  1901 ;;      Temps:          2       0       0       0       0       0       0
  1902 ;;      Totals:         9       0       0       0       0       0       0
  1903 ;;Total ram usage:        9 bytes
  1904 ;; Hardware stack levels required when called:    5
  1905 ;; This function calls:
  1906 ;;		___flge
  1907 ;;		___wmul
  1908 ;;		___xxtofl
  1909 ;;		_change_direction
  1910 ;;		_check_temperature
  1911 ;;		_configure_ad_conversion_oven
  1912 ;;		_configure_ad_conversion_tank
  1913 ;;		_get_liters
  1914 ;;		_get_reg_value
  1915 ;;		_get_temperature
  1916 ;;		_init_PORTS
  1917 ;;		_init_USART
  1918 ;;		_init_interrupts
  1919 ;;		_init_stepper
  1920 ;;		_init_timer_0
  1921 ;;		_lcd_cmd
  1922 ;;		_lcd_init
  1923 ;;		_lcd_str
  1924 ;;		_lcd_update
  1925 ;;		_reach_goal
  1926 ;;		_serial_tx_char
  1927 ;;		_state_translator_fpga_to_micro
  1928 ;;		_state_translator_micro_to_fpga
  1929 ;;		_wait_for_zero
  1930 ;; This function is called by:
  1931 ;;		Startup code after reset
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           	psect	text0
  1936  000078                     __ptext0:
  1937                           	callstack 0
  1938  000078                     _main:
  1939                           	callstack 26
  1940  000078  FFFF               	dw	65535	; assembler added errata NOP
  1941                           
  1942                           ;main.c: 58:     init_PORTS();
  1943  00007A  EC34  F013         	call	_init_PORTS	;wreg free
  1944  00007E                     
  1945                           ;main.c: 59:     init_USART();
  1946  00007E  ECF9  F012         	call	_init_USART	;wreg free
  1947  000082                     
  1948                           ;main.c: 60:     init_interrupts();
  1949  000082  ECF0  F013         	call	_init_interrupts	;wreg free
  1950  000086                     
  1951                           ;main.c: 62:     init_stepper(&joint_stepper, 0, 0, 1, hex_joint_values, &LATB);
  1952  000086  0EAE               	movlw	low _joint_stepper
  1953  000088  6E01               	movwf	init_stepper@stepper_motor^0,c
  1954  00008A  0E00               	movlw	high _joint_stepper
  1955  00008C  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  1956  00008E  0E00               	movlw	0
  1957  000090  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  1958  000092  0E00               	movlw	0
  1959  000094  6E03               	movwf	init_stepper@current_coil^0,c
  1960  000096  0E00               	movlw	0
  1961  000098  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  1962  00009A  0E00               	movlw	0
  1963  00009C  6E05               	movwf	init_stepper@step_counter^0,c
  1964  00009E  0E00               	movlw	0
  1965  0000A0  6E08               	movwf	(init_stepper@direction+1)^0,c
  1966  0000A2  0E01               	movlw	1
  1967  0000A4  6E07               	movwf	init_stepper@direction^0,c
  1968  0000A6  0EC4               	movlw	low _hex_joint_values
  1969  0000A8  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  1970  0000AA  0E00               	movlw	high _hex_joint_values
  1971  0000AC  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  1972  0000AE  0E8A               	movlw	138
  1973  0000B0  6E0B               	movwf	init_stepper@register_name^0,c
  1974  0000B2  0E0F               	movlw	15
  1975  0000B4  6E0C               	movwf	(init_stepper@register_name+1)^0,c
  1976  0000B6  EC8F  F010         	call	_init_stepper	;wreg free
  1977  0000BA                     
  1978                           ;main.c: 63:     init_stepper(&end_effector_stepper, 0, 0, 1, hex_end_effector_values, &
      +                          LATB);
  1979  0000BA  0EA2               	movlw	low _end_effector_stepper
  1980  0000BC  6E01               	movwf	init_stepper@stepper_motor^0,c
  1981  0000BE  0E00               	movlw	high _end_effector_stepper
  1982  0000C0  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  1983  0000C2  0E00               	movlw	0
  1984  0000C4  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  1985  0000C6  0E00               	movlw	0
  1986  0000C8  6E03               	movwf	init_stepper@current_coil^0,c
  1987  0000CA  0E00               	movlw	0
  1988  0000CC  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  1989  0000CE  0E00               	movlw	0
  1990  0000D0  6E05               	movwf	init_stepper@step_counter^0,c
  1991  0000D2  0E00               	movlw	0
  1992  0000D4  6E08               	movwf	(init_stepper@direction+1)^0,c
  1993  0000D6  0E01               	movlw	1
  1994  0000D8  6E07               	movwf	init_stepper@direction^0,c
  1995  0000DA  0EC0               	movlw	low _hex_end_effector_values
  1996  0000DC  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  1997  0000DE  0E00               	movlw	high _hex_end_effector_values
  1998  0000E0  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  1999  0000E2  0E8A               	movlw	138
  2000  0000E4  6E0B               	movwf	init_stepper@register_name^0,c
  2001  0000E6  0E0F               	movlw	15
  2002  0000E8  6E0C               	movwf	(init_stepper@register_name+1)^0,c
  2003  0000EA  EC8F  F010         	call	_init_stepper	;wreg free
  2004  0000EE                     
  2005                           ;main.c: 64:     init_stepper(&joint_dilutor_stepper, 0, 0, 1, hex_joint_values, &LATC);
  2006  0000EE  0E96               	movlw	low _joint_dilutor_stepper
  2007  0000F0  6E01               	movwf	init_stepper@stepper_motor^0,c
  2008  0000F2  0E00               	movlw	high _joint_dilutor_stepper
  2009  0000F4  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  2010  0000F6  0E00               	movlw	0
  2011  0000F8  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  2012  0000FA  0E00               	movlw	0
  2013  0000FC  6E03               	movwf	init_stepper@current_coil^0,c
  2014  0000FE  0E00               	movlw	0
  2015  000100  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  2016  000102  0E00               	movlw	0
  2017  000104  6E05               	movwf	init_stepper@step_counter^0,c
  2018  000106  0E00               	movlw	0
  2019  000108  6E08               	movwf	(init_stepper@direction+1)^0,c
  2020  00010A  0E01               	movlw	1
  2021  00010C  6E07               	movwf	init_stepper@direction^0,c
  2022  00010E  0EC4               	movlw	low _hex_joint_values
  2023  000110  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  2024  000112  0E00               	movlw	high _hex_joint_values
  2025  000114  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  2026  000116  0E8B               	movlw	139
  2027  000118  6E0B               	movwf	init_stepper@register_name^0,c
  2028  00011A  0E0F               	movlw	15
  2029  00011C  6E0C               	movwf	(init_stepper@register_name+1)^0,c
  2030  00011E  EC8F  F010         	call	_init_stepper	;wreg free
  2031  000122                     
  2032                           ;main.c: 66:     lcd_init();
  2033  000122  EC28  F011         	call	_lcd_init	;wreg free
  2034  000126                     
  2035                           ;main.c: 67:     lcd_cmd(0x0C);
  2036  000126  0E0C               	movlw	12
  2037  000128  EC74  F013         	call	_lcd_cmd
  2038  00012C                     
  2039                           ;main.c: 69:     lcd_cmd(0x01);
  2040  00012C  0E01               	movlw	1
  2041  00012E  EC74  F013         	call	_lcd_cmd
  2042  000132                     
  2043                           ;main.c: 70:     lcd_cmd(0x80);
  2044  000132  0E80               	movlw	128
  2045  000134  EC74  F013         	call	_lcd_cmd
  2046  000138                     
  2047                           ;main.c: 71:     lcd_str("Device has been reset");
  2048  000138  0EE9               	movlw	low STR_1
  2049  00013A  6E07               	movwf	lcd_str@str^0,c
  2050  00013C  0E7F               	movlw	high STR_1
  2051  00013E  6E08               	movwf	(lcd_str@str+1)^0,c
  2052  000140  EC11  F012         	call	_lcd_str	;wreg free
  2053  000144                     
  2054                           ;main.c: 73:     (INTCONbits.GIE = 1);
  2055  000144  8EF2               	bsf	242,7,c	;volatile
  2056  000146                     
  2057                           ;main.c: 75:     mix_counter = 0;
  2058  000146  0E00               	movlw	0
  2059  000148  6E78               	movwf	(_mix_counter+1)^0,c
  2060  00014A  0E00               	movlw	0
  2061  00014C  6E77               	movwf	_mix_counter^0,c
  2062  00014E                     l3070:
  2063  00014E  FFFF               	dw	65535	; assembler added errata NOP
  2064                           
  2065                           ;main.c: 78:         if (state_changed){
  2066  000150  507C               	movf	_state_changed^0,w,c
  2067  000152  B4D8               	btfsc	status,2,c
  2068  000154  EFAE  F000         	goto	u2951
  2069  000158  EFB1  F000         	goto	u2950
  2070  00015C                     u2951:
  2071  00015C  FFFF               	dw	65535	; assembler added errata NOP
  2072  00015E  EFEB  F000         	goto	l3092
  2073  000162                     u2950:
  2074  000162  FFFF               	dw	65535	; assembler added errata NOP
  2075  000164                     
  2076                           ;main.c: 79:             const char* greet_str[80];;main.c: 80:             if (read_new
      +                          _char){
  2077  000164  507A               	movf	_read_new_char^0,w,c
  2078  000166  B4D8               	btfsc	status,2,c
  2079  000168  EFB8  F000         	goto	u2961
  2080  00016C  EFBB  F000         	goto	u2960
  2081  000170                     u2961:
  2082  000170  FFFF               	dw	65535	; assembler added errata NOP
  2083  000172  EFD7  F000         	goto	l3084
  2084  000176                     u2960:
  2085  000176  FFFF               	dw	65535	; assembler added errata NOP
  2086  000178                     
  2087                           ;main.c: 81:                 rx_char = get_reg_value();
  2088  000178  ECDB  F013         	call	_get_reg_value	;wreg free
  2089  00017C  6E6A               	movwf	main@rx_char^0,c
  2090  00017E                     
  2091                           ;main.c: 82:                 state_translator_fpga_to_micro(rx_char, &state);
  2092  00017E  0E7D               	movlw	low _state
  2093  000180  6E03               	movwf	state_translator_fpga_to_micro@state^0,c
  2094  000182  0E00               	movlw	high _state
  2095  000184  6E04               	movwf	(state_translator_fpga_to_micro@state+1)^0,c
  2096  000186  506A               	movf	main@rx_char^0,w,c
  2097  000188  ECFB  F00C         	call	_state_translator_fpga_to_micro
  2098  00018C                     
  2099                           ;main.c: 83:                 read_new_char = 0;
  2100  00018C  0E00               	movlw	0
  2101  00018E  6E7A               	movwf	_read_new_char^0,c
  2102  000190                     
  2103                           ;main.c: 84:                 if (state == 14){
  2104  000190  0E0E               	movlw	14
  2105  000192  187D               	xorwf	_state^0,w,c
  2106  000194  107E               	iorwf	(_state+1)^0,w,c
  2107  000196  A4D8               	btfss	status,2,c
  2108  000198  EFD0  F000         	goto	u2971
  2109  00019C  EFD3  F000         	goto	u2970
  2110  0001A0                     u2971:
  2111  0001A0  FFFF               	dw	65535	; assembler added errata NOP
  2112  0001A2  EFE0  F000         	goto	l3086
  2113  0001A6                     u2970:
  2114  0001A6  FFFF               	dw	65535	; assembler added errata NOP
  2115  0001A8                     
  2116                           ;main.c: 85:                     LATCbits.LATC4 = 1;
  2117  0001A8  888B               	bsf	139,4,c	;volatile
  2118  0001AA  EFE0  F000         	goto	l3086
  2119  0001AE                     l3084:
  2120  0001AE  FFFF               	dw	65535	; assembler added errata NOP
  2121                           
  2122                           ;main.c: 88:                 serial_tx_char(state_translator_micro_to_fpga(&state));
  2123  0001B0  0E7D               	movlw	low _state
  2124  0001B2  6E01               	movwf	state_translator_micro_to_fpga@state^0,c
  2125  0001B4  0E00               	movlw	high _state
  2126  0001B6  6E02               	movwf	(state_translator_micro_to_fpga@state+1)^0,c
  2127  0001B8  ECE3  F010         	call	_state_translator_micro_to_fpga	;wreg free
  2128  0001BC  ECAD  F013         	call	_serial_tx_char
  2129  0001C0                     l3086:
  2130  0001C0  FFFF               	dw	65535	; assembler added errata NOP
  2131                           
  2132                           ;main.c: 90:             lcd_update(state);
  2133  0001C2  C07D  F00C         	movff	_state,lcd_update@state
  2134  0001C6  C07E  F00D         	movff	_state+1,lcd_update@state+1
  2135  0001CA  EC31  F010         	call	_lcd_update	;wreg free
  2136  0001CE                     
  2137                           ;main.c: 92:             state_changed = 0;
  2138  0001CE  0E00               	movlw	0
  2139  0001D0  6E7C               	movwf	_state_changed^0,c
  2140  0001D2                     
  2141                           ;main.c: 93:             idle_msg_sent = 0;
  2142  0001D2  0E00               	movlw	0
  2143  0001D4  6E7B               	movwf	_idle_msg_sent^0,c
  2144  0001D6                     l3092:
  2145  0001D6  FFFF               	dw	65535	; assembler added errata NOP
  2146                           
  2147                           ;main.c: 96:         if (state == 2){
  2148  0001D8  0E02               	movlw	2
  2149  0001DA  187D               	xorwf	_state^0,w,c
  2150  0001DC  107E               	iorwf	(_state+1)^0,w,c
  2151  0001DE  A4D8               	btfss	status,2,c
  2152  0001E0  EFF4  F000         	goto	u2981
  2153  0001E4  EFF7  F000         	goto	u2980
  2154  0001E8                     u2981:
  2155  0001E8  FFFF               	dw	65535	; assembler added errata NOP
  2156  0001EA  EFFB  F000         	goto	l154
  2157  0001EE                     u2980:
  2158  0001EE  FFFF               	dw	65535	; assembler added errata NOP
  2159  0001F0                     
  2160                           ;main.c: 97:             LATAbits.LATA1 = 1;
  2161  0001F0  8289               	bsf	137,1,c	;volatile
  2162                           
  2163                           ;main.c: 98:         } else {
  2164  0001F2  EFA7  F000         	goto	l3070
  2165  0001F6                     l154:
  2166  0001F6  FFFF               	dw	65535	; assembler added errata NOP
  2167                           
  2168                           ;main.c: 99:             LATAbits.LATA1 = 0;
  2169  0001F8  9289               	bcf	137,1,c	;volatile
  2170  0001FA                     
  2171                           ;main.c: 100:             if (state == 0) {
  2172  0001FA  507D               	movf	_state^0,w,c
  2173  0001FC  107E               	iorwf	(_state+1)^0,w,c
  2174  0001FE  A4D8               	btfss	status,2,c
  2175  000200  EF04  F001         	goto	u2991
  2176  000204  EF07  F001         	goto	u2990
  2177  000208                     u2991:
  2178  000208  FFFF               	dw	65535	; assembler added errata NOP
  2179  00020A  EF4D  F001         	goto	l3108
  2180  00020E                     u2990:
  2181  00020E  FFFF               	dw	65535	; assembler added errata NOP
  2182  000210                     
  2183                           ;main.c: 102:                 configure_ad_conversion_tank();
  2184  000210  ECBD  F013         	call	_configure_ad_conversion_tank	;wreg free
  2185  000214                     
  2186                           ;main.c: 103:                 if (get_liters() < 0.1){
  2187  000214  ECDB  F011         	call	_get_liters	;wreg free
  2188  000218  C03E  F06B         	movff	?_get_liters,_main$1677
  2189  00021C  C03F  F06C         	movff	?_get_liters+1,_main$1677+1
  2190  000220  0E00               	movlw	0
  2191  000222  BE6C               	btfsc	(_main$1677+1)^0,7,c
  2192  000224  0EFF               	movlw	-1
  2193  000226  6E6D               	movwf	(_main$1677+2)^0,c
  2194  000228  6E6E               	movwf	(_main$1677+3)^0,c
  2195  00022A                     
  2196                           ;main.c: 103:                 if (get_liters() < 0.1){
  2197  00022A  C06B  F00D         	movff	_main$1677,___xxtofl@val
  2198  00022E  C06C  F00E         	movff	_main$1677+1,___xxtofl@val+1
  2199  000232  C06D  F00F         	movff	_main$1677+2,___xxtofl@val+2
  2200  000236  C06E  F010         	movff	_main$1677+3,___xxtofl@val+3
  2201  00023A  0E01               	movlw	1
  2202  00023C  ECFF  F00B         	call	___xxtofl
  2203  000240  C00D  F040         	movff	?___xxtofl,___flge@ff1
  2204  000244  C00E  F041         	movff	?___xxtofl+1,___flge@ff1+1
  2205  000248  C00F  F042         	movff	?___xxtofl+2,___flge@ff1+2
  2206  00024C  C010  F043         	movff	?___xxtofl+3,___flge@ff1+3
  2207  000250  0ECD               	movlw	205
  2208  000252  6E44               	movwf	___flge@ff2^0,c
  2209  000254  0ECC               	movlw	204
  2210  000256  6E45               	movwf	(___flge@ff2+1)^0,c
  2211  000258  0ECC               	movlw	204
  2212  00025A  6E46               	movwf	(___flge@ff2+2)^0,c
  2213  00025C  0E3D               	movlw	61
  2214  00025E  6E47               	movwf	(___flge@ff2+3)^0,c
  2215  000260  EC4D  F00E         	call	___flge	;wreg free
  2216  000264  B0D8               	btfsc	status,0,c
  2217  000266  EF37  F001         	goto	u3001
  2218  00026A  EF3A  F001         	goto	u3000
  2219  00026E                     u3001:
  2220  00026E  FFFF               	dw	65535	; assembler added errata NOP
  2221  000270  EF87  F004         	goto	l3262
  2222  000274                     u3000:
  2223  000274  FFFF               	dw	65535	; assembler added errata NOP
  2224  000276                     
  2225                           ;main.c: 104:                     LATCbits.LATC5 = 1;
  2226  000276  8A8B               	bsf	139,5,c	;volatile
  2227                           
  2228                           ;main.c: 105:                     LATCbits.LATC4 = 1;
  2229  000278  888B               	bsf	139,4,c	;volatile
  2230  00027A                     
  2231                           ;main.c: 106:                     state = 14;
  2232  00027A  0E00               	movlw	0
  2233  00027C  6E7E               	movwf	(_state+1)^0,c
  2234  00027E  0E0E               	movlw	14
  2235  000280  6E7D               	movwf	_state^0,c
  2236                           
  2237                           ;main.c: 107:                     state_changed = 1;
  2238  000282  0E01               	movlw	1
  2239  000284  6E7C               	movwf	_state_changed^0,c
  2240                           
  2241                           ;main.c: 108:                     state_before_error = 0;
  2242  000286  0E00               	movlw	0
  2243  000288  0100               	movlb	0	; () banked
  2244  00028A  6FBF               	movwf	(_state_before_error+1)& (0+255),b
  2245  00028C  0E00               	movlw	0
  2246  00028E  6FBE               	movwf	_state_before_error& (0+255),b
  2247  000290  EF87  F004         	goto	l3262
  2248  000294                     l157:
  2249  000294  FFFF               	dw	65535	; assembler added errata NOP
  2250                           
  2251                           ;main.c: 110:             } else if (state == 1){
  2252  000296  EF87  F004         	goto	l3262
  2253  00029A                     l3108:
  2254  00029A  FFFF               	dw	65535	; assembler added errata NOP
  2255  00029C  047D               	decf	_state^0,w,c
  2256  00029E  107E               	iorwf	(_state+1)^0,w,c
  2257  0002A0  A4D8               	btfss	status,2,c
  2258  0002A2  EF55  F001         	goto	u3011
  2259  0002A6  EF58  F001         	goto	u3010
  2260  0002AA                     u3011:
  2261  0002AA  FFFF               	dw	65535	; assembler added errata NOP
  2262  0002AC  EF62  F001         	goto	l3112
  2263  0002B0                     u3010:
  2264  0002B0  FFFF               	dw	65535	; assembler added errata NOP
  2265  0002B2                     l3110:
  2266  0002B2  FFFF               	dw	65535	; assembler added errata NOP
  2267                           
  2268                           ;main.c: 111:                 state = 2;
  2269  0002B4  0E00               	movlw	0
  2270  0002B6  6E7E               	movwf	(_state+1)^0,c
  2271  0002B8  0E02               	movlw	2
  2272  0002BA  6E7D               	movwf	_state^0,c
  2273                           
  2274                           ;main.c: 112:                 state_changed = 1;
  2275  0002BC  0E01               	movlw	1
  2276  0002BE  6E7C               	movwf	_state_changed^0,c
  2277                           
  2278                           ;main.c: 113:             } else if (state == 3){
  2279  0002C0  EF87  F004         	goto	l3262
  2280  0002C4                     l3112:
  2281  0002C4  FFFF               	dw	65535	; assembler added errata NOP
  2282  0002C6  0E03               	movlw	3
  2283  0002C8  187D               	xorwf	_state^0,w,c
  2284  0002CA  107E               	iorwf	(_state+1)^0,w,c
  2285  0002CC  A4D8               	btfss	status,2,c
  2286  0002CE  EF6B  F001         	goto	u3021
  2287  0002D2  EF6E  F001         	goto	u3020
  2288  0002D6                     u3021:
  2289  0002D6  FFFF               	dw	65535	; assembler added errata NOP
  2290  0002D8  EF77  F001         	goto	l3116
  2291  0002DC                     u3020:
  2292  0002DC  FFFF               	dw	65535	; assembler added errata NOP
  2293  0002DE                     
  2294                           ;main.c: 114:                 state = 4;
  2295  0002DE  0E00               	movlw	0
  2296  0002E0  6E7E               	movwf	(_state+1)^0,c
  2297  0002E2  0E04               	movlw	4
  2298  0002E4  6E7D               	movwf	_state^0,c
  2299                           
  2300                           ;main.c: 115:                 state_changed = 1;
  2301  0002E6  0E01               	movlw	1
  2302  0002E8  6E7C               	movwf	_state_changed^0,c
  2303                           
  2304                           ;main.c: 116:             } else if (state == 4){
  2305  0002EA  EF87  F004         	goto	l3262
  2306  0002EE                     l3116:
  2307  0002EE  FFFF               	dw	65535	; assembler added errata NOP
  2308  0002F0  0E04               	movlw	4
  2309  0002F2  187D               	xorwf	_state^0,w,c
  2310  0002F4  107E               	iorwf	(_state+1)^0,w,c
  2311  0002F6  A4D8               	btfss	status,2,c
  2312  0002F8  EF80  F001         	goto	u3031
  2313  0002FC  EF83  F001         	goto	u3030
  2314  000300                     u3031:
  2315  000300  FFFF               	dw	65535	; assembler added errata NOP
  2316  000302  EFCD  F001         	goto	l3134
  2317  000306                     u3030:
  2318  000306  FFFF               	dw	65535	; assembler added errata NOP
  2319  000308                     
  2320                           ;main.c: 117:                 if (timer_done){
  2321  000308  5079               	movf	_timer_done^0,w,c
  2322  00030A  B4D8               	btfsc	status,2,c
  2323  00030C  EF8A  F001         	goto	u3041
  2324  000310  EF8D  F001         	goto	u3040
  2325  000314                     u3041:
  2326  000314  FFFF               	dw	65535	; assembler added errata NOP
  2327  000316  EFB4  F001         	goto	l164
  2328  00031A                     u3040:
  2329  00031A  FFFF               	dw	65535	; assembler added errata NOP
  2330  00031C                     
  2331                           ;main.c: 118:                     if(check_temperature(get_temperature())){
  2332  00031C  ECA3  F011         	call	_get_temperature	;wreg free
  2333  000320  C03E  F04C         	movff	?_get_temperature,check_temperature@temp_to_be_checked
  2334  000324  C03F  F04D         	movff	?_get_temperature+1,check_temperature@temp_to_be_checked+1
  2335  000328  ECC6  F00F         	call	_check_temperature	;wreg free
  2336  00032C  504C               	movf	?_check_temperature^0,w,c
  2337  00032E  104D               	iorwf	(?_check_temperature+1)^0,w,c
  2338  000330  B4D8               	btfsc	status,2,c
  2339  000332  EF9D  F001         	goto	u3051
  2340  000336  EFA0  F001         	goto	u3050
  2341  00033A                     u3051:
  2342  00033A  FFFF               	dw	65535	; assembler added errata NOP
  2343  00033C  EFA7  F001         	goto	l3124
  2344  000340                     u3050:
  2345  000340  FFFF               	dw	65535	; assembler added errata NOP
  2346  000342                     
  2347                           ;main.c: 119:                         state = 2;
  2348  000342  0E00               	movlw	0
  2349  000344  6E7E               	movwf	(_state+1)^0,c
  2350  000346  0E02               	movlw	2
  2351  000348  6E7D               	movwf	_state^0,c
  2352                           
  2353                           ;main.c: 120:                     } else{
  2354  00034A  EFAD  F001         	goto	l166
  2355  00034E                     l3124:
  2356  00034E  FFFF               	dw	65535	; assembler added errata NOP
  2357                           
  2358                           ;main.c: 121:                         state = 14;
  2359  000350  0E00               	movlw	0
  2360  000352  6E7E               	movwf	(_state+1)^0,c
  2361  000354  0E0E               	movlw	14
  2362  000356  6E7D               	movwf	_state^0,c
  2363  000358                     
  2364                           ;main.c: 122:                         LATCbits.LATC4 = 1;
  2365  000358  888B               	bsf	139,4,c	;volatile
  2366  00035A                     l166:
  2367  00035A  FFFF               	dw	65535	; assembler added errata NOP
  2368                           
  2369                           ;main.c: 124:                     state_changed = 1;
  2370  00035C  0E01               	movlw	1
  2371  00035E  6E7C               	movwf	_state_changed^0,c
  2372                           
  2373                           ;main.c: 125:                     timer_done = 0;
  2374  000360  0E00               	movlw	0
  2375  000362  6E79               	movwf	_timer_done^0,c
  2376                           
  2377                           ;main.c: 126:                 } else {
  2378  000364  EF87  F004         	goto	l3262
  2379  000368                     l164:
  2380  000368  FFFF               	dw	65535	; assembler added errata NOP
  2381                           
  2382                           ;main.c: 127:                     if (T0CONbits.TMR0ON == 0){
  2383  00036A  BED5               	btfsc	213,7,c	;volatile
  2384  00036C  EFBA  F001         	goto	u3061
  2385  000370  EFBD  F001         	goto	u3060
  2386  000374                     u3061:
  2387  000374  FFFF               	dw	65535	; assembler added errata NOP
  2388  000376  EFC4  F001         	goto	l168
  2389  00037A                     u3060:
  2390  00037A  FFFF               	dw	65535	; assembler added errata NOP
  2391  00037C                     
  2392                           ;main.c: 128:                         configure_ad_conversion_oven();
  2393  00037C  ECCC  F013         	call	_configure_ad_conversion_oven	;wreg free
  2394  000380                     
  2395                           ;main.c: 129:                         wait_for_zero();
  2396  000380  EC89  F013         	call	_wait_for_zero	;wreg free
  2397  000384                     
  2398                           ;main.c: 130:                         init_timer_0();
  2399  000384  EC9C  F013         	call	_init_timer_0	;wreg free
  2400  000388                     l168:
  2401  000388  FFFF               	dw	65535	; assembler added errata NOP
  2402                           
  2403                           ;main.c: 132:                     int current_temp = get_temperature();
  2404  00038A  ECA3  F011         	call	_get_temperature	;wreg free
  2405  00038E  C03E  F068         	movff	?_get_temperature,main@current_temp
  2406  000392  C03F  F069         	movff	?_get_temperature+1,main@current_temp+1
  2407  000396  EF87  F004         	goto	l3262
  2408  00039A                     l3134:
  2409  00039A  FFFF               	dw	65535	; assembler added errata NOP
  2410  00039C  0E05               	movlw	5
  2411  00039E  187D               	xorwf	_state^0,w,c
  2412  0003A0  107E               	iorwf	(_state+1)^0,w,c
  2413  0003A2  A4D8               	btfss	status,2,c
  2414  0003A4  EFD6  F001         	goto	u3071
  2415  0003A8  EFD9  F001         	goto	u3070
  2416  0003AC                     u3071:
  2417  0003AC  FFFF               	dw	65535	; assembler added errata NOP
  2418  0003AE  EFE2  F001         	goto	l3138
  2419  0003B2                     u3070:
  2420  0003B2  FFFF               	dw	65535	; assembler added errata NOP
  2421  0003B4                     
  2422                           ;main.c: 136:                 state = 6;
  2423  0003B4  0E00               	movlw	0
  2424  0003B6  6E7E               	movwf	(_state+1)^0,c
  2425  0003B8  0E06               	movlw	6
  2426  0003BA  6E7D               	movwf	_state^0,c
  2427                           
  2428                           ;main.c: 137:                 state_changed = 1;
  2429  0003BC  0E01               	movlw	1
  2430  0003BE  6E7C               	movwf	_state_changed^0,c
  2431                           
  2432                           ;main.c: 138:             }else if (state == 6){
  2433  0003C0  EF87  F004         	goto	l3262
  2434  0003C4                     l3138:
  2435  0003C4  FFFF               	dw	65535	; assembler added errata NOP
  2436  0003C6  0E06               	movlw	6
  2437  0003C8  187D               	xorwf	_state^0,w,c
  2438  0003CA  107E               	iorwf	(_state+1)^0,w,c
  2439  0003CC  A4D8               	btfss	status,2,c
  2440  0003CE  EFEB  F001         	goto	u3081
  2441  0003D2  EFEE  F001         	goto	u3080
  2442  0003D6                     u3081:
  2443  0003D6  FFFF               	dw	65535	; assembler added errata NOP
  2444  0003D8  EF54  F002         	goto	l3156
  2445  0003DC                     u3080:
  2446  0003DC  FFFF               	dw	65535	; assembler added errata NOP
  2447  0003DE                     
  2448                           ;main.c: 139:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  2449  0003DE  0E03               	movlw	3
  2450  0003E0  6E66               	movwf	??_main^0,c
  2451  0003E2  0EEC               	movlw	236
  2452  0003E4                     u3437:
  2453  0003E4  FFFF               	dw	65535	; errata NOP
  2454  0003E6  2EE8               	decfsz	wreg,f,c
  2455  0003E8  D7FD               	bra	u3437
  2456  0003EA  2E66               	decfsz	??_main^0,f,c
  2457  0003EC  D7FB               	bra	u3437
  2458  0003EE                     
  2459                           ;main.c: 140:                 if (!grasping_joint_position_reached){
  2460  0003EE  5071               	movf	_grasping_joint_position_reached^0,w,c
  2461  0003F0  1072               	iorwf	(_grasping_joint_position_reached+1)^0,w,c
  2462  0003F2  A4D8               	btfss	status,2,c
  2463  0003F4  EFFE  F001         	goto	u3091
  2464  0003F8  EF01  F002         	goto	u3090
  2465  0003FC                     u3091:
  2466  0003FC  FFFF               	dw	65535	; assembler added errata NOP
  2467  0003FE  EF10  F002         	goto	l3146
  2468  000402                     u3090:
  2469  000402  FFFF               	dw	65535	; assembler added errata NOP
  2470  000404                     
  2471                           ;main.c: 141:                     grasping_joint_position_reached = reach_goal(&joint_st
      +                          epper, 50);
  2472  000404  0EAE               	movlw	low _joint_stepper
  2473  000406  6E09               	movwf	reach_goal@stepper_motor^0,c
  2474  000408  0E00               	movlw	high _joint_stepper
  2475  00040A  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  2476  00040C  0E00               	movlw	0
  2477  00040E  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2478  000410  0E32               	movlw	50
  2479  000412  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  2480  000414  EC67  F011         	call	_reach_goal	;wreg free
  2481  000418  C009  F071         	movff	?_reach_goal,_grasping_joint_position_reached
  2482  00041C  C00A  F072         	movff	?_reach_goal+1,_grasping_joint_position_reached+1
  2483  000420                     l3146:
  2484  000420  FFFF               	dw	65535	; assembler added errata NOP
  2485                           
  2486                           ;main.c: 144:                 if (grasping_joint_position_reached && !grasping_ee_positi
      +                          on_reached){
  2487  000422  5071               	movf	_grasping_joint_position_reached^0,w,c
  2488  000424  1072               	iorwf	(_grasping_joint_position_reached+1)^0,w,c
  2489  000426  B4D8               	btfsc	status,2,c
  2490  000428  EF18  F002         	goto	u3101
  2491  00042C  EF1B  F002         	goto	u3100
  2492  000430                     u3101:
  2493  000430  FFFF               	dw	65535	; assembler added errata NOP
  2494  000432  EF36  F002         	goto	l3152
  2495  000436                     u3100:
  2496  000436  FFFF               	dw	65535	; assembler added errata NOP
  2497  000438  0100               	movlb	0	; () banked
  2498  00043A  518E               	movf	_grasping_ee_position_reached& (0+255),w,b
  2499  00043C  118F               	iorwf	(_grasping_ee_position_reached+1)& (0+255),w,b
  2500  00043E  A4D8               	btfss	status,2,c
  2501  000440  EF24  F002         	goto	u3111
  2502  000444  EF27  F002         	goto	u3110
  2503  000448                     u3111:
  2504  000448  FFFF               	dw	65535	; assembler added errata NOP
  2505  00044A  EF36  F002         	goto	l3152
  2506  00044E                     u3110:
  2507  00044E  FFFF               	dw	65535	; assembler added errata NOP
  2508  000450                     
  2509                           ; BSR set to: 0
  2510                           ;main.c: 145:                     grasping_ee_position_reached = reach_goal(&end_effecto
      +                          r_stepper, 100);
  2511  000450  0EA2               	movlw	low _end_effector_stepper
  2512  000452  6E09               	movwf	reach_goal@stepper_motor^0,c
  2513  000454  0E00               	movlw	high _end_effector_stepper
  2514  000456  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  2515  000458  0E00               	movlw	0
  2516  00045A  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2517  00045C  0E64               	movlw	100
  2518  00045E  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  2519  000460  EC67  F011         	call	_reach_goal	;wreg free
  2520  000464  C009  F08E         	movff	?_reach_goal,_grasping_ee_position_reached
  2521  000468  C00A  F08F         	movff	?_reach_goal+1,_grasping_ee_position_reached+1
  2522  00046C                     l3152:
  2523  00046C  FFFF               	dw	65535	; assembler added errata NOP
  2524                           
  2525                           ;main.c: 147:                 if (grasping_joint_position_reached * grasping_ee_position
      +                          _reached){
  2526  00046E  C071  F001         	movff	_grasping_joint_position_reached,___wmul@multiplier
  2527  000472  C072  F002         	movff	_grasping_joint_position_reached+1,___wmul@multiplier+1
  2528  000476  C08E  F003         	movff	_grasping_ee_position_reached,___wmul@multiplicand
  2529  00047A  C08F  F004         	movff	_grasping_ee_position_reached+1,___wmul@multiplicand+1
  2530  00047E  EC5F  F013         	call	___wmul	;wreg free
  2531  000482  5001               	movf	?___wmul^0,w,c
  2532  000484  1002               	iorwf	(?___wmul+1)^0,w,c
  2533  000486  B4D8               	btfsc	status,2,c
  2534  000488  EF48  F002         	goto	u3121
  2535  00048C  EF4B  F002         	goto	u3120
  2536  000490                     u3121:
  2537  000490  FFFF               	dw	65535	; assembler added errata NOP
  2538  000492  EF87  F004         	goto	l3262
  2539  000496                     u3120:
  2540  000496  FFFF               	dw	65535	; assembler added errata NOP
  2541  000498                     
  2542                           ;main.c: 148:                     state = 7;
  2543  000498  0E00               	movlw	0
  2544  00049A  6E7E               	movwf	(_state+1)^0,c
  2545  00049C  0E07               	movlw	7
  2546  00049E  6E7D               	movwf	_state^0,c
  2547                           
  2548                           ;main.c: 149:                     state_changed = 1;
  2549  0004A0  0E01               	movlw	1
  2550  0004A2  6E7C               	movwf	_state_changed^0,c
  2551  0004A4  EF87  F004         	goto	l3262
  2552  0004A8                     l3156:
  2553  0004A8  FFFF               	dw	65535	; assembler added errata NOP
  2554  0004AA  0E07               	movlw	7
  2555  0004AC  187D               	xorwf	_state^0,w,c
  2556  0004AE  107E               	iorwf	(_state+1)^0,w,c
  2557  0004B0  A4D8               	btfss	status,2,c
  2558  0004B2  EF5D  F002         	goto	u3131
  2559  0004B6  EF60  F002         	goto	u3130
  2560  0004BA                     u3131:
  2561  0004BA  FFFF               	dw	65535	; assembler added errata NOP
  2562  0004BC  EFCF  F002         	goto	l3180
  2563  0004C0                     u3130:
  2564  0004C0  FFFF               	dw	65535	; assembler added errata NOP
  2565  0004C2                     
  2566                           ;main.c: 152:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  2567  0004C2  0E03               	movlw	3
  2568  0004C4  6E66               	movwf	??_main^0,c
  2569  0004C6  0EEC               	movlw	236
  2570  0004C8                     u3447:
  2571  0004C8  FFFF               	dw	65535	; errata NOP
  2572  0004CA  2EE8               	decfsz	wreg,f,c
  2573  0004CC  D7FD               	bra	u3447
  2574  0004CE  2E66               	decfsz	??_main^0,f,c
  2575  0004D0  D7FB               	bra	u3447
  2576  0004D2                     
  2577                           ;main.c: 153:                 if (reach_goal(&joint_stepper, 100)) {
  2578  0004D2  0EAE               	movlw	low _joint_stepper
  2579  0004D4  6E09               	movwf	reach_goal@stepper_motor^0,c
  2580  0004D6  0E00               	movlw	high _joint_stepper
  2581  0004D8  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  2582  0004DA  0E00               	movlw	0
  2583  0004DC  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2584  0004DE  0E64               	movlw	100
  2585  0004E0  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  2586  0004E2  EC67  F011         	call	_reach_goal	;wreg free
  2587  0004E6  5009               	movf	?_reach_goal^0,w,c
  2588  0004E8  100A               	iorwf	(?_reach_goal+1)^0,w,c
  2589  0004EA  B4D8               	btfsc	status,2,c
  2590  0004EC  EF7A  F002         	goto	u3141
  2591  0004F0  EF7D  F002         	goto	u3140
  2592  0004F4                     u3141:
  2593  0004F4  FFFF               	dw	65535	; assembler added errata NOP
  2594  0004F6  EF86  F002         	goto	l3166
  2595  0004FA                     u3140:
  2596  0004FA  FFFF               	dw	65535	; assembler added errata NOP
  2597  0004FC                     
  2598                           ;main.c: 154:                     change_direction(&joint_stepper);
  2599  0004FC  0EAE               	movlw	low _joint_stepper
  2600  0004FE  6E01               	movwf	change_direction@stepper_motor^0,c
  2601  000500  0E00               	movlw	high _joint_stepper
  2602  000502  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2603  000504  EC19  F013         	call	_change_direction	;wreg free
  2604  000508                     
  2605                           ;main.c: 155:                     mix_counter++;
  2606  000508  4A77               	infsnz	_mix_counter^0,f,c
  2607  00050A  2A78               	incf	(_mix_counter+1)^0,f,c
  2608  00050C                     l3166:
  2609  00050C  FFFF               	dw	65535	; assembler added errata NOP
  2610                           
  2611                           ;main.c: 158:                 if (mix_counter == 20 && !dilution_done){
  2612  00050E  0E14               	movlw	20
  2613  000510  1877               	xorwf	_mix_counter^0,w,c
  2614  000512  1078               	iorwf	(_mix_counter+1)^0,w,c
  2615  000514  A4D8               	btfss	status,2,c
  2616  000516  EF8F  F002         	goto	u3151
  2617  00051A  EF92  F002         	goto	u3150
  2618  00051E                     u3151:
  2619  00051E  FFFF               	dw	65535	; assembler added errata NOP
  2620  000520  EFA6  F002         	goto	l3172
  2621  000524                     u3150:
  2622  000524  FFFF               	dw	65535	; assembler added errata NOP
  2623  000526  5075               	movf	_dilution_done^0,w,c
  2624  000528  1076               	iorwf	(_dilution_done+1)^0,w,c
  2625  00052A  A4D8               	btfss	status,2,c
  2626  00052C  EF9A  F002         	goto	u3161
  2627  000530  EF9D  F002         	goto	u3160
  2628  000534                     u3161:
  2629  000534  FFFF               	dw	65535	; assembler added errata NOP
  2630  000536  EFA6  F002         	goto	l3172
  2631  00053A                     u3160:
  2632  00053A  FFFF               	dw	65535	; assembler added errata NOP
  2633  00053C                     
  2634                           ;main.c: 159:                     state = 8;
  2635  00053C  0E00               	movlw	0
  2636  00053E  6E7E               	movwf	(_state+1)^0,c
  2637  000540  0E08               	movlw	8
  2638  000542  6E7D               	movwf	_state^0,c
  2639                           
  2640                           ;main.c: 160:                     state_changed = 1;
  2641  000544  0E01               	movlw	1
  2642  000546  6E7C               	movwf	_state_changed^0,c
  2643                           
  2644                           ;main.c: 161:                 } else if (mix_counter == 40) {
  2645  000548  EF87  F004         	goto	l3262
  2646  00054C                     l3172:
  2647  00054C  FFFF               	dw	65535	; assembler added errata NOP
  2648  00054E  0E28               	movlw	40
  2649  000550  1877               	xorwf	_mix_counter^0,w,c
  2650  000552  1078               	iorwf	(_mix_counter+1)^0,w,c
  2651  000554  A4D8               	btfss	status,2,c
  2652  000556  EFAF  F002         	goto	u3171
  2653  00055A  EFB2  F002         	goto	u3170
  2654  00055E                     u3171:
  2655  00055E  FFFF               	dw	65535	; assembler added errata NOP
  2656  000560  EF4A  F001         	goto	l157
  2657  000564                     u3170:
  2658  000564  FFFF               	dw	65535	; assembler added errata NOP
  2659  000566                     
  2660                           ;main.c: 162:                     dilution_done = 0;
  2661  000566  0E00               	movlw	0
  2662  000568  6E76               	movwf	(_dilution_done+1)^0,c
  2663  00056A  0E00               	movlw	0
  2664  00056C  6E75               	movwf	_dilution_done^0,c
  2665                           
  2666                           ;main.c: 163:                     state = 9;
  2667  00056E  0E00               	movlw	0
  2668  000570  6E7E               	movwf	(_state+1)^0,c
  2669  000572  0E09               	movlw	9
  2670  000574  6E7D               	movwf	_state^0,c
  2671                           
  2672                           ;main.c: 164:                     state_changed = 1;
  2673  000576  0E01               	movlw	1
  2674  000578  6E7C               	movwf	_state_changed^0,c
  2675                           
  2676                           ;main.c: 165:                     mix_counter = 0;
  2677  00057A  0E00               	movlw	0
  2678  00057C  6E78               	movwf	(_mix_counter+1)^0,c
  2679  00057E  0E00               	movlw	0
  2680  000580  6E77               	movwf	_mix_counter^0,c
  2681  000582                     
  2682                           ;main.c: 167:                     change_direction(&joint_stepper);
  2683  000582  0EAE               	movlw	low _joint_stepper
  2684  000584  6E01               	movwf	change_direction@stepper_motor^0,c
  2685  000586  0E00               	movlw	high _joint_stepper
  2686  000588  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2687  00058A  EC19  F013         	call	_change_direction	;wreg free
  2688  00058E                     
  2689                           ;main.c: 168:                     change_direction(&end_effector_stepper);
  2690  00058E  0EA2               	movlw	low _end_effector_stepper
  2691  000590  6E01               	movwf	change_direction@stepper_motor^0,c
  2692  000592  0E00               	movlw	high _end_effector_stepper
  2693  000594  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2694  000596  EC19  F013         	call	_change_direction	;wreg free
  2695  00059A  EF87  F004         	goto	l3262
  2696  00059E                     l3180:
  2697  00059E  FFFF               	dw	65535	; assembler added errata NOP
  2698  0005A0  0E08               	movlw	8
  2699  0005A2  187D               	xorwf	_state^0,w,c
  2700  0005A4  107E               	iorwf	(_state+1)^0,w,c
  2701  0005A6  A4D8               	btfss	status,2,c
  2702  0005A8  EFD8  F002         	goto	u3181
  2703  0005AC  EFDB  F002         	goto	u3180
  2704  0005B0                     u3181:
  2705  0005B0  FFFF               	dw	65535	; assembler added errata NOP
  2706  0005B2  EF7A  F003         	goto	l3210
  2707  0005B6                     u3180:
  2708  0005B6  FFFF               	dw	65535	; assembler added errata NOP
  2709  0005B8                     
  2710                           ;main.c: 171:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  2711  0005B8  0E03               	movlw	3
  2712  0005BA  6E66               	movwf	??_main^0,c
  2713  0005BC  0EEC               	movlw	236
  2714  0005BE                     u3457:
  2715  0005BE  FFFF               	dw	65535	; errata NOP
  2716  0005C0  2EE8               	decfsz	wreg,f,c
  2717  0005C2  D7FD               	bra	u3457
  2718  0005C4  2E66               	decfsz	??_main^0,f,c
  2719  0005C6  D7FB               	bra	u3457
  2720  0005C8                     
  2721                           ;main.c: 172:                 if (!diluting_position_reached){
  2722  0005C8  0100               	movlb	0	; () banked
  2723  0005CA  518C               	movf	_diluting_position_reached& (0+255),w,b
  2724  0005CC  118D               	iorwf	(_diluting_position_reached+1)& (0+255),w,b
  2725  0005CE  A4D8               	btfss	status,2,c
  2726  0005D0  EFEC  F002         	goto	u3191
  2727  0005D4  EFEF  F002         	goto	u3190
  2728  0005D8                     u3191:
  2729  0005D8  FFFF               	dw	65535	; assembler added errata NOP
  2730  0005DA  EF00  F003         	goto	l3188
  2731  0005DE                     u3190:
  2732  0005DE  FFFF               	dw	65535	; assembler added errata NOP
  2733  0005E0                     
  2734                           ; BSR set to: 0
  2735                           ;main.c: 173:                     diluting_position_reached = reach_goal(&joint_dilutor_
      +                          stepper, 200);
  2736  0005E0  0E96               	movlw	low _joint_dilutor_stepper
  2737  0005E2  6E09               	movwf	reach_goal@stepper_motor^0,c
  2738  0005E4  0E00               	movlw	high _joint_dilutor_stepper
  2739  0005E6  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  2740  0005E8  0E00               	movlw	0
  2741  0005EA  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2742  0005EC  0EC8               	movlw	200
  2743  0005EE  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  2744  0005F0  EC67  F011         	call	_reach_goal	;wreg free
  2745  0005F4  C009  F08C         	movff	?_reach_goal,_diluting_position_reached
  2746  0005F8  C00A  F08D         	movff	?_reach_goal+1,_diluting_position_reached+1
  2747                           
  2748                           ;main.c: 174:                 } else if (!dilution_done && diluting_position_reached){
  2749  0005FC  EF87  F004         	goto	l3262
  2750  000600                     l3188:
  2751  000600  FFFF               	dw	65535	; assembler added errata NOP
  2752                           
  2753                           ; BSR set to: 0
  2754  000602  5075               	movf	_dilution_done^0,w,c
  2755  000604  1076               	iorwf	(_dilution_done+1)^0,w,c
  2756  000606  A4D8               	btfss	status,2,c
  2757  000608  EF08  F003         	goto	u3201
  2758  00060C  EF0B  F003         	goto	u3200
  2759  000610                     u3201:
  2760  000610  FFFF               	dw	65535	; assembler added errata NOP
  2761  000612  EF30  F003         	goto	l3198
  2762  000616                     u3200:
  2763  000616  FFFF               	dw	65535	; assembler added errata NOP
  2764  000618                     
  2765                           ; BSR set to: 0
  2766  000618  518C               	movf	_diluting_position_reached& (0+255),w,b
  2767  00061A  118D               	iorwf	(_diluting_position_reached+1)& (0+255),w,b
  2768  00061C  B4D8               	btfsc	status,2,c
  2769  00061E  EF13  F003         	goto	u3211
  2770  000622  EF16  F003         	goto	u3210
  2771  000626                     u3211:
  2772  000626  FFFF               	dw	65535	; assembler added errata NOP
  2773  000628  EF30  F003         	goto	l3198
  2774  00062C                     u3210:
  2775  00062C  FFFF               	dw	65535	; assembler added errata NOP
  2776  00062E                     
  2777                           ; BSR set to: 0
  2778                           ;main.c: 177:                     _delay((unsigned long)((1000)*(4000000/4000.0)));
  2779  00062E  0E04               	movlw	4
  2780  000630  6E67               	movwf	(??_main+1)^0,c
  2781  000632  0ECF               	movlw	207
  2782  000634  6E66               	movwf	??_main^0,c
  2783  000636  0EA5               	movlw	165
  2784  000638                     u3467:
  2785  000638  FFFF               	dw	65535	; errata NOP
  2786  00063A  2EE8               	decfsz	wreg,f,c
  2787  00063C  D7FD               	bra	u3467
  2788  00063E  2E66               	decfsz	??_main^0,f,c
  2789  000640  D7FB               	bra	u3467
  2790  000642  2E67               	decfsz	(??_main+1)^0,f,c
  2791  000644  D7F9               	bra	u3467
  2792  000646  D000               	nop2	
  2793  000648                     
  2794                           ;main.c: 178:                     dilution_done = 1;
  2795  000648  0E00               	movlw	0
  2796  00064A  6E76               	movwf	(_dilution_done+1)^0,c
  2797  00064C  0E01               	movlw	1
  2798  00064E  6E75               	movwf	_dilution_done^0,c
  2799  000650                     
  2800                           ;main.c: 179:                     change_direction(&joint_dilutor_stepper);
  2801  000650  0E96               	movlw	low _joint_dilutor_stepper
  2802  000652  6E01               	movwf	change_direction@stepper_motor^0,c
  2803  000654  0E00               	movlw	high _joint_dilutor_stepper
  2804  000656  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2805  000658  EC19  F013         	call	_change_direction	;wreg free
  2806                           
  2807                           ;main.c: 180:                 } else if (dilution_done && !joint_dilutor_homed){
  2808  00065C  EF87  F004         	goto	l3262
  2809  000660                     l3198:
  2810  000660  FFFF               	dw	65535	; assembler added errata NOP
  2811                           
  2812                           ; BSR set to: 0
  2813  000662  5075               	movf	_dilution_done^0,w,c
  2814  000664  1076               	iorwf	(_dilution_done+1)^0,w,c
  2815  000666  B4D8               	btfsc	status,2,c
  2816  000668  EF38  F003         	goto	u3221
  2817  00066C  EF3B  F003         	goto	u3220
  2818  000670                     u3221:
  2819  000670  FFFF               	dw	65535	; assembler added errata NOP
  2820  000672  EF57  F003         	goto	l3204
  2821  000676                     u3220:
  2822  000676  FFFF               	dw	65535	; assembler added errata NOP
  2823  000678                     
  2824                           ; BSR set to: 0
  2825  000678  5188               	movf	_joint_dilutor_homed& (0+255),w,b
  2826  00067A  1189               	iorwf	(_joint_dilutor_homed+1)& (0+255),w,b
  2827  00067C  A4D8               	btfss	status,2,c
  2828  00067E  EF43  F003         	goto	u3231
  2829  000682  EF46  F003         	goto	u3230
  2830  000686                     u3231:
  2831  000686  FFFF               	dw	65535	; assembler added errata NOP
  2832  000688  EF57  F003         	goto	l3204
  2833  00068C                     u3230:
  2834  00068C  FFFF               	dw	65535	; assembler added errata NOP
  2835  00068E                     
  2836                           ; BSR set to: 0
  2837                           ;main.c: 181:                     joint_dilutor_homed = reach_goal(&joint_dilutor_steppe
      +                          r, 200);
  2838  00068E  0E96               	movlw	low _joint_dilutor_stepper
  2839  000690  6E09               	movwf	reach_goal@stepper_motor^0,c
  2840  000692  0E00               	movlw	high _joint_dilutor_stepper
  2841  000694  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  2842  000696  0E00               	movlw	0
  2843  000698  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2844  00069A  0EC8               	movlw	200
  2845  00069C  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  2846  00069E  EC67  F011         	call	_reach_goal	;wreg free
  2847  0006A2  C009  F088         	movff	?_reach_goal,_joint_dilutor_homed
  2848  0006A6  C00A  F089         	movff	?_reach_goal+1,_joint_dilutor_homed+1
  2849                           
  2850                           ;main.c: 182:                 } else if (dilution_done && joint_dilutor_homed){
  2851  0006AA  EF87  F004         	goto	l3262
  2852  0006AE                     l3204:
  2853  0006AE  FFFF               	dw	65535	; assembler added errata NOP
  2854                           
  2855                           ; BSR set to: 0
  2856  0006B0  5075               	movf	_dilution_done^0,w,c
  2857  0006B2  1076               	iorwf	(_dilution_done+1)^0,w,c
  2858  0006B4  B4D8               	btfsc	status,2,c
  2859  0006B6  EF5F  F003         	goto	u3241
  2860  0006BA  EF62  F003         	goto	u3240
  2861  0006BE                     u3241:
  2862  0006BE  FFFF               	dw	65535	; assembler added errata NOP
  2863  0006C0  EF4A  F001         	goto	l157
  2864  0006C4                     u3240:
  2865  0006C4  FFFF               	dw	65535	; assembler added errata NOP
  2866  0006C6                     
  2867                           ; BSR set to: 0
  2868  0006C6  5188               	movf	_joint_dilutor_homed& (0+255),w,b
  2869  0006C8  1189               	iorwf	(_joint_dilutor_homed+1)& (0+255),w,b
  2870  0006CA  B4D8               	btfsc	status,2,c
  2871  0006CC  EF6A  F003         	goto	u3251
  2872  0006D0  EF6D  F003         	goto	u3250
  2873  0006D4                     u3251:
  2874  0006D4  FFFF               	dw	65535	; assembler added errata NOP
  2875  0006D6  EF4A  F001         	goto	l157
  2876  0006DA                     u3250:
  2877  0006DA  FFFF               	dw	65535	; assembler added errata NOP
  2878  0006DC                     
  2879                           ; BSR set to: 0
  2880                           ;main.c: 183:                     state = 7;
  2881  0006DC  0E00               	movlw	0
  2882  0006DE  6E7E               	movwf	(_state+1)^0,c
  2883  0006E0  0E07               	movlw	7
  2884  0006E2  6E7D               	movwf	_state^0,c
  2885                           
  2886                           ;main.c: 184:                     state_changed = 1;
  2887  0006E4  0E01               	movlw	1
  2888  0006E6  6E7C               	movwf	_state_changed^0,c
  2889                           
  2890                           ;main.c: 185:                     diluting_position_reached = 0;
  2891  0006E8  0E00               	movlw	0
  2892  0006EA  6F8D               	movwf	(_diluting_position_reached+1)& (0+255),b
  2893  0006EC  0E00               	movlw	0
  2894  0006EE  6F8C               	movwf	_diluting_position_reached& (0+255),b
  2895  0006F0  EF87  F004         	goto	l3262
  2896  0006F4                     l3210:
  2897  0006F4  FFFF               	dw	65535	; assembler added errata NOP
  2898  0006F6  0E09               	movlw	9
  2899  0006F8  187D               	xorwf	_state^0,w,c
  2900  0006FA  107E               	iorwf	(_state+1)^0,w,c
  2901  0006FC  A4D8               	btfss	status,2,c
  2902  0006FE  EF83  F003         	goto	u3261
  2903  000702  EF86  F003         	goto	u3260
  2904  000706                     u3261:
  2905  000706  FFFF               	dw	65535	; assembler added errata NOP
  2906  000708  EFE6  F003         	goto	l3228
  2907  00070C                     u3260:
  2908  00070C  FFFF               	dw	65535	; assembler added errata NOP
  2909  00070E                     
  2910                           ;main.c: 189:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  2911  00070E  0E03               	movlw	3
  2912  000710  6E66               	movwf	??_main^0,c
  2913  000712  0EEC               	movlw	236
  2914  000714                     u3477:
  2915  000714  FFFF               	dw	65535	; errata NOP
  2916  000716  2EE8               	decfsz	wreg,f,c
  2917  000718  D7FD               	bra	u3477
  2918  00071A  2E66               	decfsz	??_main^0,f,c
  2919  00071C  D7FB               	bra	u3477
  2920  00071E                     
  2921                           ;main.c: 191:                 if (!end_effector_homed){
  2922  00071E  506F               	movf	_end_effector_homed^0,w,c
  2923  000720  1070               	iorwf	(_end_effector_homed+1)^0,w,c
  2924  000722  A4D8               	btfss	status,2,c
  2925  000724  EF96  F003         	goto	u3271
  2926  000728  EF99  F003         	goto	u3270
  2927  00072C                     u3271:
  2928  00072C  FFFF               	dw	65535	; assembler added errata NOP
  2929  00072E  EFA8  F003         	goto	l3218
  2930  000732                     u3270:
  2931  000732  FFFF               	dw	65535	; assembler added errata NOP
  2932  000734                     
  2933                           ;main.c: 192:                     end_effector_homed = reach_goal(&end_effector_stepper,
      +                           100);
  2934  000734  0EA2               	movlw	low _end_effector_stepper
  2935  000736  6E09               	movwf	reach_goal@stepper_motor^0,c
  2936  000738  0E00               	movlw	high _end_effector_stepper
  2937  00073A  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  2938  00073C  0E00               	movlw	0
  2939  00073E  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2940  000740  0E64               	movlw	100
  2941  000742  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  2942  000744  EC67  F011         	call	_reach_goal	;wreg free
  2943  000748  C009  F06F         	movff	?_reach_goal,_end_effector_homed
  2944  00074C  C00A  F070         	movff	?_reach_goal+1,_end_effector_homed+1
  2945  000750                     l3218:
  2946  000750  FFFF               	dw	65535	; assembler added errata NOP
  2947                           
  2948                           ;main.c: 195:                 if (end_effector_homed && !joint_homed){
  2949  000752  506F               	movf	_end_effector_homed^0,w,c
  2950  000754  1070               	iorwf	(_end_effector_homed+1)^0,w,c
  2951  000756  B4D8               	btfsc	status,2,c
  2952  000758  EFB0  F003         	goto	u3281
  2953  00075C  EFB3  F003         	goto	u3280
  2954  000760                     u3281:
  2955  000760  FFFF               	dw	65535	; assembler added errata NOP
  2956  000762  EFCE  F003         	goto	l3224
  2957  000766                     u3280:
  2958  000766  FFFF               	dw	65535	; assembler added errata NOP
  2959  000768  0100               	movlb	0	; () banked
  2960  00076A  518A               	movf	_joint_homed& (0+255),w,b
  2961  00076C  118B               	iorwf	(_joint_homed+1)& (0+255),w,b
  2962  00076E  A4D8               	btfss	status,2,c
  2963  000770  EFBC  F003         	goto	u3291
  2964  000774  EFBF  F003         	goto	u3290
  2965  000778                     u3291:
  2966  000778  FFFF               	dw	65535	; assembler added errata NOP
  2967  00077A  EFCE  F003         	goto	l3224
  2968  00077E                     u3290:
  2969  00077E  FFFF               	dw	65535	; assembler added errata NOP
  2970  000780                     
  2971                           ; BSR set to: 0
  2972                           ;main.c: 196:                     joint_homed = reach_goal(&joint_stepper, 50);
  2973  000780  0EAE               	movlw	low _joint_stepper
  2974  000782  6E09               	movwf	reach_goal@stepper_motor^0,c
  2975  000784  0E00               	movlw	high _joint_stepper
  2976  000786  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  2977  000788  0E00               	movlw	0
  2978  00078A  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2979  00078C  0E32               	movlw	50
  2980  00078E  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  2981  000790  EC67  F011         	call	_reach_goal	;wreg free
  2982  000794  C009  F08A         	movff	?_reach_goal,_joint_homed
  2983  000798  C00A  F08B         	movff	?_reach_goal+1,_joint_homed+1
  2984  00079C                     l3224:
  2985  00079C  FFFF               	dw	65535	; assembler added errata NOP
  2986                           
  2987                           ;main.c: 199:                 if (end_effector_homed * joint_homed){
  2988  00079E  C06F  F001         	movff	_end_effector_homed,___wmul@multiplier
  2989  0007A2  C070  F002         	movff	_end_effector_homed+1,___wmul@multiplier+1
  2990  0007A6  C08A  F003         	movff	_joint_homed,___wmul@multiplicand
  2991  0007AA  C08B  F004         	movff	_joint_homed+1,___wmul@multiplicand+1
  2992  0007AE  EC5F  F013         	call	___wmul	;wreg free
  2993  0007B2  5001               	movf	?___wmul^0,w,c
  2994  0007B4  1002               	iorwf	(?___wmul+1)^0,w,c
  2995  0007B6  B4D8               	btfsc	status,2,c
  2996  0007B8  EFE0  F003         	goto	u3301
  2997  0007BC  EFE3  F003         	goto	u3300
  2998  0007C0                     u3301:
  2999  0007C0  FFFF               	dw	65535	; assembler added errata NOP
  3000  0007C2  EF87  F004         	goto	l3262
  3001  0007C6                     u3300:
  3002  0007C6  FFFF               	dw	65535	; assembler added errata NOP
  3003  0007C8  EF59  F001         	goto	l3110
  3004  0007CC                     l3228:
  3005  0007CC  FFFF               	dw	65535	; assembler added errata NOP
  3006  0007CE  0E0A               	movlw	10
  3007  0007D0  187D               	xorwf	_state^0,w,c
  3008  0007D2  107E               	iorwf	(_state+1)^0,w,c
  3009  0007D4  A4D8               	btfss	status,2,c
  3010  0007D6  EFEF  F003         	goto	u3311
  3011  0007DA  EFF2  F003         	goto	u3310
  3012  0007DE                     u3311:
  3013  0007DE  FFFF               	dw	65535	; assembler added errata NOP
  3014  0007E0  EFFB  F003         	goto	l3232
  3015  0007E4                     u3310:
  3016  0007E4  FFFF               	dw	65535	; assembler added errata NOP
  3017  0007E6                     
  3018                           ;main.c: 204:                 state = 11;
  3019  0007E6  0E00               	movlw	0
  3020  0007E8  6E7E               	movwf	(_state+1)^0,c
  3021  0007EA  0E0B               	movlw	11
  3022  0007EC  6E7D               	movwf	_state^0,c
  3023                           
  3024                           ;main.c: 205:                 state_changed = 1;
  3025  0007EE  0E01               	movlw	1
  3026  0007F0  6E7C               	movwf	_state_changed^0,c
  3027                           
  3028                           ;main.c: 206:             }else if (state == 11){
  3029  0007F2  EF87  F004         	goto	l3262
  3030  0007F6                     l3232:
  3031  0007F6  FFFF               	dw	65535	; assembler added errata NOP
  3032  0007F8  0E0B               	movlw	11
  3033  0007FA  187D               	xorwf	_state^0,w,c
  3034  0007FC  107E               	iorwf	(_state+1)^0,w,c
  3035  0007FE  A4D8               	btfss	status,2,c
  3036  000800  EF04  F004         	goto	u3321
  3037  000804  EF07  F004         	goto	u3320
  3038  000808                     u3321:
  3039  000808  FFFF               	dw	65535	; assembler added errata NOP
  3040  00080A  EF2E  F004         	goto	l3240
  3041  00080E                     u3320:
  3042  00080E  FFFF               	dw	65535	; assembler added errata NOP
  3043  000810                     
  3044                           ;main.c: 207:                 if (timer_done){
  3045  000810  5079               	movf	_timer_done^0,w,c
  3046  000812  B4D8               	btfsc	status,2,c
  3047  000814  EF0E  F004         	goto	u3331
  3048  000818  EF11  F004         	goto	u3330
  3049  00081C                     u3331:
  3050  00081C  FFFF               	dw	65535	; assembler added errata NOP
  3051  00081E  EF20  F004         	goto	l200
  3052  000822                     u3330:
  3053  000822  FFFF               	dw	65535	; assembler added errata NOP
  3054  000824                     
  3055                           ;main.c: 208:                     state_changed = 1;
  3056  000824  0E01               	movlw	1
  3057  000826  6E7C               	movwf	_state_changed^0,c
  3058                           
  3059                           ;main.c: 209:                     state = 13;
  3060  000828  0E00               	movlw	0
  3061  00082A  6E7E               	movwf	(_state+1)^0,c
  3062  00082C  0E0D               	movlw	13
  3063  00082E  6E7D               	movwf	_state^0,c
  3064                           
  3065                           ;main.c: 210:                     trash_counter = 0;
  3066  000830  0E00               	movlw	0
  3067  000832  6E74               	movwf	(_trash_counter+1)^0,c
  3068  000834  0E00               	movlw	0
  3069  000836  6E73               	movwf	_trash_counter^0,c
  3070                           
  3071                           ;main.c: 211:                     timer_done = 0;
  3072  000838  0E00               	movlw	0
  3073  00083A  6E79               	movwf	_timer_done^0,c
  3074                           
  3075                           ;main.c: 212:                 } else {
  3076  00083C  EF87  F004         	goto	l3262
  3077  000840                     l200:
  3078  000840  FFFF               	dw	65535	; assembler added errata NOP
  3079                           
  3080                           ;main.c: 213:                     if (T0CONbits.TMR0ON == 0){
  3081  000842  BED5               	btfsc	213,7,c	;volatile
  3082  000844  EF26  F004         	goto	u3341
  3083  000848  EF29  F004         	goto	u3340
  3084  00084C                     u3341:
  3085  00084C  FFFF               	dw	65535	; assembler added errata NOP
  3086  00084E  EF4A  F001         	goto	l157
  3087  000852                     u3340:
  3088  000852  FFFF               	dw	65535	; assembler added errata NOP
  3089  000854                     
  3090                           ;main.c: 214:                         init_timer_0();
  3091  000854  EC9C  F013         	call	_init_timer_0	;wreg free
  3092  000858  EF87  F004         	goto	l3262
  3093  00085C                     l3240:
  3094  00085C  FFFF               	dw	65535	; assembler added errata NOP
  3095  00085E  0E0C               	movlw	12
  3096  000860  187D               	xorwf	_state^0,w,c
  3097  000862  107E               	iorwf	(_state+1)^0,w,c
  3098  000864  A4D8               	btfss	status,2,c
  3099  000866  EF37  F004         	goto	u3351
  3100  00086A  EF3A  F004         	goto	u3350
  3101  00086E                     u3351:
  3102  00086E  FFFF               	dw	65535	; assembler added errata NOP
  3103  000870  EF44  F004         	goto	l3246
  3104  000874                     u3350:
  3105  000874  FFFF               	dw	65535	; assembler added errata NOP
  3106  000876                     
  3107                           ;main.c: 219:                 state = 0;
  3108  000876  0E00               	movlw	0
  3109  000878  6E7E               	movwf	(_state+1)^0,c
  3110  00087A  0E00               	movlw	0
  3111  00087C  6E7D               	movwf	_state^0,c
  3112                           
  3113                           ;main.c: 220:                 state_changed = 1;
  3114  00087E  0E01               	movlw	1
  3115  000880  6E7C               	movwf	_state_changed^0,c
  3116  000882                     
  3117                           ;main.c: 221:                 T0CONbits.TMR0ON = 0;
  3118  000882  9ED5               	bcf	213,7,c	;volatile
  3119                           
  3120                           ;main.c: 222:             } else if (state == 13){
  3121  000884  EF87  F004         	goto	l3262
  3122  000888                     l3246:
  3123  000888  FFFF               	dw	65535	; assembler added errata NOP
  3124  00088A  0E0D               	movlw	13
  3125  00088C  187D               	xorwf	_state^0,w,c
  3126  00088E  107E               	iorwf	(_state+1)^0,w,c
  3127  000890  A4D8               	btfss	status,2,c
  3128  000892  EF4D  F004         	goto	u3361
  3129  000896  EF50  F004         	goto	u3360
  3130  00089A                     u3361:
  3131  00089A  FFFF               	dw	65535	; assembler added errata NOP
  3132  00089C  EF87  F004         	goto	l3262
  3133  0008A0                     u3360:
  3134  0008A0  FFFF               	dw	65535	; assembler added errata NOP
  3135  0008A2                     
  3136                           ;main.c: 223:                 LATAbits.LATA1 = 1;
  3137  0008A2  8289               	bsf	137,1,c	;volatile
  3138  0008A4                     
  3139                           ;main.c: 224:                 if ( trash_counter < 100){
  3140  0008A4  BE74               	btfsc	(_trash_counter+1)^0,7,c
  3141  0008A6  EF61  F004         	goto	u3370
  3142  0008AA  5074               	movf	(_trash_counter+1)^0,w,c
  3143  0008AC  E107               	bnz	u3371
  3144  0008AE  0E64               	movlw	100
  3145  0008B0  5C73               	subwf	_trash_counter^0,w,c
  3146  0008B2  B0D8               	btfsc	status,0,c
  3147  0008B4  EF5E  F004         	goto	u3371
  3148  0008B8  EF61  F004         	goto	u3370
  3149  0008BC                     u3371:
  3150  0008BC  FFFF               	dw	65535	; assembler added errata NOP
  3151  0008BE  EF6F  F004         	goto	l3256
  3152  0008C2                     u3370:
  3153  0008C2  FFFF               	dw	65535	; assembler added errata NOP
  3154  0008C4                     
  3155                           ;main.c: 225:                     _delay((unsigned long)((10)*(4000000/4000.0)));
  3156  0008C4  0E0A               	movlw	10
  3157  0008C6  6E66               	movwf	??_main^0,c
  3158  0008C8  0EBE               	movlw	190
  3159  0008CA                     u3487:
  3160  0008CA  FFFF               	dw	65535	; errata NOP
  3161  0008CC  2EE8               	decfsz	wreg,f,c
  3162  0008CE  D7FD               	bra	u3487
  3163  0008D0  2E66               	decfsz	??_main^0,f,c
  3164  0008D2  D7FB               	bra	u3487
  3165  0008D4  D000               	nop2	
  3166  0008D6                     
  3167                           ;main.c: 226:                     trash_counter++;
  3168  0008D6  4A73               	infsnz	_trash_counter^0,f,c
  3169  0008D8  2A74               	incf	(_trash_counter+1)^0,f,c
  3170                           
  3171                           ;main.c: 227:                 } else if (trash_counter >= 100){
  3172  0008DA  EF87  F004         	goto	l3262
  3173  0008DE                     l3256:
  3174  0008DE  FFFF               	dw	65535	; assembler added errata NOP
  3175  0008E0  BE74               	btfsc	(_trash_counter+1)^0,7,c
  3176  0008E2  EF7C  F004         	goto	u3381
  3177  0008E6  5074               	movf	(_trash_counter+1)^0,w,c
  3178  0008E8  E10A               	bnz	u3380
  3179  0008EA  0E64               	movlw	100
  3180  0008EC  5C73               	subwf	_trash_counter^0,w,c
  3181  0008EE  A0D8               	btfss	status,0,c
  3182  0008F0  EF7C  F004         	goto	u3381
  3183  0008F4  EF7F  F004         	goto	u3380
  3184  0008F8                     u3381:
  3185  0008F8  FFFF               	dw	65535	; assembler added errata NOP
  3186  0008FA  EF4A  F001         	goto	l157
  3187  0008FE                     u3380:
  3188  0008FE  FFFF               	dw	65535	; assembler added errata NOP
  3189  000900                     
  3190                           ;main.c: 228:                     state = 0;
  3191  000900  0E00               	movlw	0
  3192  000902  6E7E               	movwf	(_state+1)^0,c
  3193  000904  0E00               	movlw	0
  3194  000906  6E7D               	movwf	_state^0,c
  3195                           
  3196                           ;main.c: 229:                     state_changed = 1;
  3197  000908  0E01               	movlw	1
  3198  00090A  6E7C               	movwf	_state_changed^0,c
  3199  00090C                     
  3200                           ;main.c: 230:                     T0CONbits.TMR0ON = 0;
  3201  00090C  9ED5               	bcf	213,7,c	;volatile
  3202  00090E                     l3262:
  3203  00090E  FFFF               	dw	65535	; assembler added errata NOP
  3204  000910  0E0E               	movlw	14
  3205  000912  187D               	xorwf	_state^0,w,c
  3206  000914  107E               	iorwf	(_state+1)^0,w,c
  3207  000916  A4D8               	btfss	status,2,c
  3208  000918  EF90  F004         	goto	u3391
  3209  00091C  EF93  F004         	goto	u3390
  3210  000920                     u3391:
  3211  000920  FFFF               	dw	65535	; assembler added errata NOP
  3212  000922  EFA7  F000         	goto	l3070
  3213  000926                     u3390:
  3214  000926  FFFF               	dw	65535	; assembler added errata NOP
  3215  000928                     
  3216                           ;main.c: 234:                 if (LATCbits.LATC4 == 1 && LATCbits.LATC5 == 1 && get_lite
      +                          rs() > 0.1){
  3217  000928  A88B               	btfss	139,4,c	;volatile
  3218  00092A  EF99  F004         	goto	u3401
  3219  00092E  EF9C  F004         	goto	u3400
  3220  000932                     u3401:
  3221  000932  FFFF               	dw	65535	; assembler added errata NOP
  3222  000934  EFE1  F004         	goto	l155
  3223  000938                     u3400:
  3224  000938  FFFF               	dw	65535	; assembler added errata NOP
  3225  00093A  AA8B               	btfss	139,5,c	;volatile
  3226  00093C  EFA2  F004         	goto	u3411
  3227  000940  EFA5  F004         	goto	u3410
  3228  000944                     u3411:
  3229  000944  FFFF               	dw	65535	; assembler added errata NOP
  3230  000946  EFE1  F004         	goto	l155
  3231  00094A                     u3410:
  3232  00094A  FFFF               	dw	65535	; assembler added errata NOP
  3233  00094C  ECDB  F011         	call	_get_liters	;wreg free
  3234  000950  C03E  F06B         	movff	?_get_liters,_main$1677
  3235  000954  C03F  F06C         	movff	?_get_liters+1,_main$1677+1
  3236  000958  0E00               	movlw	0
  3237  00095A  BE6C               	btfsc	(_main$1677+1)^0,7,c
  3238  00095C  0EFF               	movlw	-1
  3239  00095E  6E6D               	movwf	(_main$1677+2)^0,c
  3240  000960  6E6E               	movwf	(_main$1677+3)^0,c
  3241  000962  0ECD               	movlw	205
  3242  000964  6E40               	movwf	___flge@ff1^0,c
  3243  000966  0ECC               	movlw	204
  3244  000968  6E41               	movwf	(___flge@ff1+1)^0,c
  3245  00096A  0ECC               	movlw	204
  3246  00096C  6E42               	movwf	(___flge@ff1+2)^0,c
  3247  00096E  0E3D               	movlw	61
  3248  000970  6E43               	movwf	(___flge@ff1+3)^0,c
  3249  000972  C06B  F00D         	movff	_main$1677,___xxtofl@val
  3250  000976  C06C  F00E         	movff	_main$1677+1,___xxtofl@val+1
  3251  00097A  C06D  F00F         	movff	_main$1677+2,___xxtofl@val+2
  3252  00097E  C06E  F010         	movff	_main$1677+3,___xxtofl@val+3
  3253  000982  0E01               	movlw	1
  3254  000984  ECFF  F00B         	call	___xxtofl
  3255  000988  C00D  F044         	movff	?___xxtofl,___flge@ff2
  3256  00098C  C00E  F045         	movff	?___xxtofl+1,___flge@ff2+1
  3257  000990  C00F  F046         	movff	?___xxtofl+2,___flge@ff2+2
  3258  000994  C010  F047         	movff	?___xxtofl+3,___flge@ff2+3
  3259  000998  EC4D  F00E         	call	___flge	;wreg free
  3260  00099C  B0D8               	btfsc	status,0,c
  3261  00099E  EFD3  F004         	goto	u3421
  3262  0009A2  EFD6  F004         	goto	u3420
  3263  0009A6                     u3421:
  3264  0009A6  FFFF               	dw	65535	; assembler added errata NOP
  3265  0009A8  EFE1  F004         	goto	l155
  3266  0009AC                     u3420:
  3267  0009AC  FFFF               	dw	65535	; assembler added errata NOP
  3268  0009AE                     
  3269                           ;main.c: 235:                     LATCbits.LATC4 = 0;
  3270  0009AE  988B               	bcf	139,4,c	;volatile
  3271                           
  3272                           ;main.c: 236:                     LATCbits.LATC5 = 0;
  3273  0009B0  9A8B               	bcf	139,5,c	;volatile
  3274                           
  3275                           ;main.c: 237:                     state = state_before_error;
  3276  0009B2  C0BE  F07D         	movff	_state_before_error,_state
  3277  0009B6  C0BF  F07E         	movff	_state_before_error+1,_state+1
  3278  0009BA                     
  3279                           ;main.c: 238:                     state_changed = 1;
  3280  0009BA  0E01               	movlw	1
  3281  0009BC  6E7C               	movwf	_state_changed^0,c
  3282  0009BE  EFA7  F000         	goto	l3070
  3283  0009C2                     l155:
  3284  0009C2  FFFF               	dw	65535	; assembler added errata NOP
  3285  0009C4  EFA7  F000         	goto	l3070
  3286  0009C8  EF3A  F000         	goto	start
  3287  0009CC                     __end_of_main:
  3288                           	callstack 0
  3289                           
  3290 ;; *************** function _wait_for_zero *****************
  3291 ;; Defined at:
  3292 ;;		line 42 in file "oven.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;		None
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;		None
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  1    wreg      void 
  3299 ;; Registers used:
  3300 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3306 ;;      Params:         0       0       0       0       0       0       0
  3307 ;;      Locals:         0       0       0       0       0       0       0
  3308 ;;      Temps:          0       0       0       0       0       0       0
  3309 ;;      Totals:         0       0       0       0       0       0       0
  3310 ;;Total ram usage:        0 bytes
  3311 ;; Hardware stack levels used:    1
  3312 ;; Hardware stack levels required when called:    3
  3313 ;; This function calls:
  3314 ;;		_get_temperature
  3315 ;; This function is called by:
  3316 ;;		_main
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           	psect	text1
  3321  002712                     __ptext1:
  3322                           	callstack 0
  3323  002712                     _wait_for_zero:
  3324                           	callstack 0
  3325  002712  FFFF               	dw	65535	; assembler added errata NOP
  3326  002714                     l391:
  3327  002714  FFFF               	dw	65535	; assembler added errata NOP
  3328  002716                     
  3329                           ;oven.c: 44:         if (get_temperature() == -55){
  3330  002716  ECA3  F011         	call	_get_temperature	;wreg free
  3331  00271A  0EC9               	movlw	201
  3332  00271C  183E               	xorwf	?_get_temperature^0,w,c
  3333  00271E  E106               	bnz	u2921
  3334  002720  283F               	incf	(?_get_temperature+1)^0,w,c
  3335  002722  A4D8               	btfss	status,2,c
  3336  002724  EF96  F013         	goto	u2921
  3337  002728  EF99  F013         	goto	u2920
  3338  00272C                     u2921:
  3339  00272C  FFFF               	dw	65535	; assembler added errata NOP
  3340  00272E  EF8A  F013         	goto	l391
  3341  002732                     u2920:
  3342  002732  FFFF               	dw	65535	; assembler added errata NOP
  3343  002734  0012               	return		;funcret
  3344  002736  FFFF               	dw	65535	; errata NOP
  3345  002738                     __end_of_wait_for_zero:
  3346                           	callstack 0
  3347                           
  3348 ;; *************** function _get_temperature *****************
  3349 ;; Defined at:
  3350 ;;		line 30 in file "oven.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;		None
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;		None
  3355 ;; Return value:  Size  Location     Type
  3356 ;;                  2   61[COMRAM] int 
  3357 ;; Registers used:
  3358 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/0
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3364 ;;      Params:         2       0       0       0       0       0       0
  3365 ;;      Locals:         0       0       0       0       0       0       0
  3366 ;;      Temps:          0       0       0       0       0       0       0
  3367 ;;      Totals:         2       0       0       0       0       0       0
  3368 ;;Total ram usage:        2 bytes
  3369 ;; Hardware stack levels used:    1
  3370 ;; Hardware stack levels required when called:    2
  3371 ;; This function calls:
  3372 ;;		___flmul
  3373 ;;		___fltol
  3374 ;;		___xxtofl
  3375 ;; This function is called by:
  3376 ;;		_main
  3377 ;;		_wait_for_zero
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           	psect	text2
  3382  002346                     __ptext2:
  3383                           	callstack 0
  3384  002346                     _get_temperature:
  3385                           	callstack 0
  3386  002346  FFFF               	dw	65535	; assembler added errata NOP
  3387  002348                     
  3388                           ;oven.c: 31:     ADCON0bits.GO = 1;
  3389  002348  84C2               	bsf	194,2,c	;volatile
  3390  00234A                     l379:
  3391  00234A  FFFF               	dw	65535	; assembler added errata NOP
  3392  00234C  B4C2               	btfsc	194,2,c	;volatile
  3393  00234E  EFAB  F011         	goto	u2651
  3394  002352  EFAE  F011         	goto	u2650
  3395  002356                     u2651:
  3396  002356  FFFF               	dw	65535	; assembler added errata NOP
  3397  002358  EFA5  F011         	goto	l379
  3398  00235C                     u2650:
  3399  00235C  FFFF               	dw	65535	; assembler added errata NOP
  3400  00235E                     
  3401                           ;oven.c: 33:     return (int) (ADRESH * 0.25) + -55;
  3402  00235E  0E00               	movlw	0
  3403  002360  6E1F               	movwf	___flmul@a^0,c
  3404  002362  0E00               	movlw	0
  3405  002364  6E20               	movwf	(___flmul@a+1)^0,c
  3406  002366  0E80               	movlw	128
  3407  002368  6E21               	movwf	(___flmul@a+2)^0,c
  3408  00236A  0E3E               	movlw	62
  3409  00236C  6E22               	movwf	(___flmul@a+3)^0,c
  3410  00236E  50C4               	movf	196,w,c	;volatile
  3411  002370  6E0D               	movwf	___xxtofl@val^0,c
  3412  002372  6A0E               	clrf	(___xxtofl@val+1)^0,c
  3413  002374  6A0F               	clrf	(___xxtofl@val+2)^0,c
  3414  002376  6A10               	clrf	(___xxtofl@val+3)^0,c
  3415  002378  0E01               	movlw	1
  3416  00237A  ECFF  F00B         	call	___xxtofl
  3417  00237E  C00D  F01B         	movff	?___xxtofl,___flmul@b
  3418  002382  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  3419  002386  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  3420  00238A  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  3421  00238E  ECBA  F007         	call	___flmul	;wreg free
  3422  002392  C01B  F034         	movff	?___flmul,___fltol@f1
  3423  002396  C01C  F035         	movff	?___flmul+1,___fltol@f1+1
  3424  00239A  C01D  F036         	movff	?___flmul+2,___fltol@f1+2
  3425  00239E  C01E  F037         	movff	?___flmul+3,___fltol@f1+3
  3426  0023A2  ECB2  F00D         	call	___fltol	;wreg free
  3427  0023A6  0EC9               	movlw	201
  3428  0023A8  2434               	addwf	?___fltol^0,w,c
  3429  0023AA  6E3E               	movwf	?_get_temperature^0,c
  3430  0023AC  0EFF               	movlw	255
  3431  0023AE  2035               	addwfc	(?___fltol+1)^0,w,c
  3432  0023B0  6E3F               	movwf	(?_get_temperature+1)^0,c
  3433  0023B2  0012               	return		;funcret
  3434  0023B4  FFFF               	dw	65535	; errata NOP
  3435  0023B6                     __end_of_get_temperature:
  3436                           	callstack 0
  3437                           
  3438 ;; *************** function _state_translator_micro_to_fpga *****************
  3439 ;; Defined at:
  3440 ;;		line 26 in file "utils.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;  state           2    0[COMRAM] PTR int 
  3443 ;;		 -> state(2), 
  3444 ;; Auto vars:     Size  Location     Type
  3445 ;;  state_machin    1    4[COMRAM] unsigned char 
  3446 ;; Return value:  Size  Location     Type
  3447 ;;                  1    wreg      unsigned char 
  3448 ;; Registers used:
  3449 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3450 ;; Tracked objects:
  3451 ;;		On entry : 0/0
  3452 ;;		On exit  : 0/0
  3453 ;;		Unchanged: 0/0
  3454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3455 ;;      Params:         2       0       0       0       0       0       0
  3456 ;;      Locals:         1       0       0       0       0       0       0
  3457 ;;      Temps:          2       0       0       0       0       0       0
  3458 ;;      Totals:         5       0       0       0       0       0       0
  3459 ;;Total ram usage:        5 bytes
  3460 ;; Hardware stack levels used:    1
  3461 ;; Hardware stack levels required when called:    1
  3462 ;; This function calls:
  3463 ;;		Nothing
  3464 ;; This function is called by:
  3465 ;;		_main
  3466 ;; This function uses a non-reentrant model
  3467 ;;
  3468                           
  3469                           	psect	text3
  3470  0021C6                     __ptext3:
  3471                           	callstack 0
  3472  0021C6                     _state_translator_micro_to_fpga:
  3473                           	callstack 0
  3474  0021C6  FFFF               	dw	65535	; assembler added errata NOP
  3475  0021C8                     
  3476                           ;utils.c: 27:     unsigned char state_machine_code;;utils.c: 28:     if (*state == 2){
  3477  0021C8  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  3478  0021CC  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  3479  0021D0  0E02               	movlw	2
  3480  0021D2  18DE               	xorwf	postinc2,w,c
  3481  0021D4  10DE               	iorwf	postinc2,w,c
  3482  0021D6  A4D8               	btfss	status,2,c
  3483  0021D8  EFF0  F010         	goto	u2851
  3484  0021DC  EFF3  F010         	goto	u2850
  3485  0021E0                     u2851:
  3486  0021E0  FFFF               	dw	65535	; assembler added errata NOP
  3487  0021E2  EFF8  F010         	goto	l2920
  3488  0021E6                     u2850:
  3489  0021E6  FFFF               	dw	65535	; assembler added errata NOP
  3490  0021E8                     
  3491                           ;utils.c: 29:         state_machine_code = 0x10;
  3492  0021E8  0E10               	movlw	16
  3493  0021EA  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  3494                           
  3495                           ;utils.c: 30:     } else if (*state == 0) {
  3496  0021EC  EF24  F011         	goto	l314
  3497  0021F0                     l2920:
  3498  0021F0  FFFF               	dw	65535	; assembler added errata NOP
  3499  0021F2  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  3500  0021F6  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  3501  0021FA  50DE               	movf	postinc2,w,c
  3502  0021FC  10DE               	iorwf	postinc2,w,c
  3503  0021FE  A4D8               	btfss	status,2,c
  3504  002200  EF04  F011         	goto	u2861
  3505  002204  EF07  F011         	goto	u2860
  3506  002208                     u2861:
  3507  002208  FFFF               	dw	65535	; assembler added errata NOP
  3508  00220A  EF0C  F011         	goto	l2924
  3509  00220E                     u2860:
  3510  00220E  FFFF               	dw	65535	; assembler added errata NOP
  3511  002210                     
  3512                           ;utils.c: 31:         state_machine_code = 0x09;
  3513  002210  0E09               	movlw	9
  3514  002212  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  3515                           
  3516                           ;utils.c: 32:     } else if (*state == 14) {
  3517  002214  EF24  F011         	goto	l314
  3518  002218                     l2924:
  3519  002218  FFFF               	dw	65535	; assembler added errata NOP
  3520  00221A  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  3521  00221E  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  3522  002222  0E0E               	movlw	14
  3523  002224  18DE               	xorwf	postinc2,w,c
  3524  002226  10DE               	iorwf	postinc2,w,c
  3525  002228  A4D8               	btfss	status,2,c
  3526  00222A  EF19  F011         	goto	u2871
  3527  00222E  EF1C  F011         	goto	u2870
  3528  002232                     u2871:
  3529  002232  FFFF               	dw	65535	; assembler added errata NOP
  3530  002234  EF21  F011         	goto	l2928
  3531  002238                     u2870:
  3532  002238  FFFF               	dw	65535	; assembler added errata NOP
  3533  00223A                     
  3534                           ;utils.c: 33:         state_machine_code = 0x40;
  3535  00223A  0E40               	movlw	64
  3536  00223C  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  3537                           
  3538                           ;utils.c: 34:     } else {
  3539  00223E  EF24  F011         	goto	l314
  3540  002242                     l2928:
  3541  002242  FFFF               	dw	65535	; assembler added errata NOP
  3542                           
  3543                           ;utils.c: 35:         state_machine_code = 0x80;
  3544  002244  0E80               	movlw	128
  3545  002246  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  3546  002248                     l314:
  3547  002248  FFFF               	dw	65535	; assembler added errata NOP
  3548                           
  3549                           ;utils.c: 37:     return state_machine_code;
  3550  00224A  5005               	movf	state_translator_micro_to_fpga@state_machine_code^0,w,c
  3551  00224C  0012               	return		;funcret
  3552  00224E  FFFF               	dw	65535	; errata NOP
  3553  002250                     __end_of_state_translator_micro_to_fpga:
  3554                           	callstack 0
  3555                           
  3556 ;; *************** function _state_translator_fpga_to_micro *****************
  3557 ;; Defined at:
  3558 ;;		line 2 in file "utils.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;  state_machin    1    wreg     unsigned char 
  3561 ;;  state           2    2[COMRAM] PTR int 
  3562 ;;		 -> state(2), 
  3563 ;; Auto vars:     Size  Location     Type
  3564 ;;  state_machin    1    4[COMRAM] unsigned char 
  3565 ;; Return value:  Size  Location     Type
  3566 ;;                  1    wreg      void 
  3567 ;; Registers used:
  3568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3569 ;; Tracked objects:
  3570 ;;		On entry : 0/0
  3571 ;;		On exit  : 0/0
  3572 ;;		Unchanged: 0/0
  3573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3574 ;;      Params:         2       0       0       0       0       0       0
  3575 ;;      Locals:         1       0       0       0       0       0       0
  3576 ;;      Temps:          0       0       0       0       0       0       0
  3577 ;;      Totals:         3       0       0       0       0       0       0
  3578 ;;Total ram usage:        3 bytes
  3579 ;; Hardware stack levels used:    1
  3580 ;; Hardware stack levels required when called:    3
  3581 ;; This function calls:
  3582 ;;		_lcd_dat
  3583 ;; This function is called by:
  3584 ;;		_main
  3585 ;; This function uses a non-reentrant model
  3586 ;;
  3587                           
  3588                           	psect	text4
  3589  0019F6                     __ptext4:
  3590                           	callstack 0
  3591  0019F6                     _state_translator_fpga_to_micro:
  3592                           	callstack 0
  3593  0019F6  FFFF               	dw	65535	; assembler added errata NOP
  3594                           
  3595                           ;incstack = 0
  3596                           ;state_translator_fpga_to_micro@state_machine_code stored from wreg
  3597  0019F8  6E05               	movwf	state_translator_fpga_to_micro@state_machine_code^0,c
  3598  0019FA                     
  3599                           ;utils.c: 3:     lcd_dat(state_machine_code);
  3600  0019FA  5005               	movf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3601  0019FC  EC4A  F013         	call	_lcd_dat
  3602  001A00                     
  3603                           ;utils.c: 4:     if (state_machine_code == 0x01){
  3604  001A00  0405               	decf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3605  001A02  A4D8               	btfss	status,2,c
  3606  001A04  EF06  F00D         	goto	u2771
  3607  001A08  EF09  F00D         	goto	u2770
  3608  001A0C                     u2771:
  3609  001A0C  FFFF               	dw	65535	; assembler added errata NOP
  3610  001A0E  EF14  F00D         	goto	l2884
  3611  001A12                     u2770:
  3612  001A12  FFFF               	dw	65535	; assembler added errata NOP
  3613  001A14                     
  3614                           ;utils.c: 5:         *state = 1;
  3615  001A14  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3616  001A18  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3617  001A1C  0E01               	movlw	1
  3618  001A1E  6EDE               	movwf	postinc2,c
  3619  001A20  0E00               	movlw	0
  3620  001A22  6EDD               	movwf	postdec2,c
  3621                           
  3622                           ;utils.c: 6:     } else if (state_machine_code == 0x02){
  3623  001A24  EFAF  F00D         	goto	l310
  3624  001A28                     l2884:
  3625  001A28  FFFF               	dw	65535	; assembler added errata NOP
  3626  001A2A  0E02               	movlw	2
  3627  001A2C  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3628  001A2E  A4D8               	btfss	status,2,c
  3629  001A30  EF1C  F00D         	goto	u2781
  3630  001A34  EF1F  F00D         	goto	u2780
  3631  001A38                     u2781:
  3632  001A38  FFFF               	dw	65535	; assembler added errata NOP
  3633  001A3A  EF2A  F00D         	goto	l2888
  3634  001A3E                     u2780:
  3635  001A3E  FFFF               	dw	65535	; assembler added errata NOP
  3636  001A40                     
  3637                           ;utils.c: 7:         *state = 3;
  3638  001A40  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3639  001A44  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3640  001A48  0E03               	movlw	3
  3641  001A4A  6EDE               	movwf	postinc2,c
  3642  001A4C  0E00               	movlw	0
  3643  001A4E  6EDD               	movwf	postdec2,c
  3644                           
  3645                           ;utils.c: 8:     } else if (state_machine_code == 0x04){
  3646  001A50  EFAF  F00D         	goto	l310
  3647  001A54                     l2888:
  3648  001A54  FFFF               	dw	65535	; assembler added errata NOP
  3649  001A56  0E04               	movlw	4
  3650  001A58  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3651  001A5A  A4D8               	btfss	status,2,c
  3652  001A5C  EF32  F00D         	goto	u2791
  3653  001A60  EF35  F00D         	goto	u2790
  3654  001A64                     u2791:
  3655  001A64  FFFF               	dw	65535	; assembler added errata NOP
  3656  001A66  EF40  F00D         	goto	l2892
  3657  001A6A                     u2790:
  3658  001A6A  FFFF               	dw	65535	; assembler added errata NOP
  3659  001A6C                     
  3660                           ;utils.c: 9:         *state = 5;
  3661  001A6C  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3662  001A70  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3663  001A74  0E05               	movlw	5
  3664  001A76  6EDE               	movwf	postinc2,c
  3665  001A78  0E00               	movlw	0
  3666  001A7A  6EDD               	movwf	postdec2,c
  3667                           
  3668                           ;utils.c: 10:     } else if (state_machine_code == 0x08){
  3669  001A7C  EFAF  F00D         	goto	l310
  3670  001A80                     l2892:
  3671  001A80  FFFF               	dw	65535	; assembler added errata NOP
  3672  001A82  0E08               	movlw	8
  3673  001A84  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3674  001A86  A4D8               	btfss	status,2,c
  3675  001A88  EF48  F00D         	goto	u2801
  3676  001A8C  EF4B  F00D         	goto	u2800
  3677  001A90                     u2801:
  3678  001A90  FFFF               	dw	65535	; assembler added errata NOP
  3679  001A92  EF56  F00D         	goto	l2896
  3680  001A96                     u2800:
  3681  001A96  FFFF               	dw	65535	; assembler added errata NOP
  3682  001A98                     
  3683                           ;utils.c: 11:         *state = 10;
  3684  001A98  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3685  001A9C  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3686  001AA0  0E0A               	movlw	10
  3687  001AA2  6EDE               	movwf	postinc2,c
  3688  001AA4  0E00               	movlw	0
  3689  001AA6  6EDD               	movwf	postdec2,c
  3690                           
  3691                           ;utils.c: 12:     } else if (state_machine_code == 0x10){
  3692  001AA8  EFAF  F00D         	goto	l310
  3693  001AAC                     l2896:
  3694  001AAC  FFFF               	dw	65535	; assembler added errata NOP
  3695  001AAE  0E10               	movlw	16
  3696  001AB0  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3697  001AB2  A4D8               	btfss	status,2,c
  3698  001AB4  EF5E  F00D         	goto	u2811
  3699  001AB8  EF61  F00D         	goto	u2810
  3700  001ABC                     u2811:
  3701  001ABC  FFFF               	dw	65535	; assembler added errata NOP
  3702  001ABE  EF6C  F00D         	goto	l2900
  3703  001AC2                     u2810:
  3704  001AC2  FFFF               	dw	65535	; assembler added errata NOP
  3705  001AC4                     
  3706                           ;utils.c: 13:         *state = 2;
  3707  001AC4  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3708  001AC8  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3709  001ACC  0E02               	movlw	2
  3710  001ACE  6EDE               	movwf	postinc2,c
  3711  001AD0  0E00               	movlw	0
  3712  001AD2  6EDD               	movwf	postdec2,c
  3713                           
  3714                           ;utils.c: 14:     } else if (state_machine_code == 0x40){
  3715  001AD4  EFAF  F00D         	goto	l310
  3716  001AD8                     l2900:
  3717  001AD8  FFFF               	dw	65535	; assembler added errata NOP
  3718  001ADA  0E40               	movlw	64
  3719  001ADC  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3720  001ADE  A4D8               	btfss	status,2,c
  3721  001AE0  EF74  F00D         	goto	u2821
  3722  001AE4  EF77  F00D         	goto	u2820
  3723  001AE8                     u2821:
  3724  001AE8  FFFF               	dw	65535	; assembler added errata NOP
  3725  001AEA  EF82  F00D         	goto	l2904
  3726  001AEE                     u2820:
  3727  001AEE  FFFF               	dw	65535	; assembler added errata NOP
  3728  001AF0                     
  3729                           ;utils.c: 15:         *state = 14;
  3730  001AF0  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3731  001AF4  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3732  001AF8  0E0E               	movlw	14
  3733  001AFA  6EDE               	movwf	postinc2,c
  3734  001AFC  0E00               	movlw	0
  3735  001AFE  6EDD               	movwf	postdec2,c
  3736                           
  3737                           ;utils.c: 16:     } else if (state_machine_code == 0x80){
  3738  001B00  EFAF  F00D         	goto	l310
  3739  001B04                     l2904:
  3740  001B04  FFFF               	dw	65535	; assembler added errata NOP
  3741  001B06  0E80               	movlw	128
  3742  001B08  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3743  001B0A  A4D8               	btfss	status,2,c
  3744  001B0C  EF8A  F00D         	goto	u2831
  3745  001B10  EF8D  F00D         	goto	u2830
  3746  001B14                     u2831:
  3747  001B14  FFFF               	dw	65535	; assembler added errata NOP
  3748  001B16  EF90  F00D         	goto	l2908
  3749  001B1A                     u2830:
  3750  001B1A  FFFF               	dw	65535	; assembler added errata NOP
  3751  001B1C  EFAF  F00D         	goto	l310
  3752  001B20                     l2908:
  3753  001B20  FFFF               	dw	65535	; assembler added errata NOP
  3754  001B22  0E20               	movlw	32
  3755  001B24  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3756  001B26  A4D8               	btfss	status,2,c
  3757  001B28  EF98  F00D         	goto	u2841
  3758  001B2C  EF9B  F00D         	goto	u2840
  3759  001B30                     u2841:
  3760  001B30  FFFF               	dw	65535	; assembler added errata NOP
  3761  001B32  EFA6  F00D         	goto	l2912
  3762  001B36                     u2840:
  3763  001B36  FFFF               	dw	65535	; assembler added errata NOP
  3764  001B38                     
  3765                           ;utils.c: 19:         *state = 12;
  3766  001B38  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3767  001B3C  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3768  001B40  0E0C               	movlw	12
  3769  001B42  6EDE               	movwf	postinc2,c
  3770  001B44  0E00               	movlw	0
  3771  001B46  6EDD               	movwf	postdec2,c
  3772                           
  3773                           ;utils.c: 20:     } else {
  3774  001B48  EFAF  F00D         	goto	l310
  3775  001B4C                     l2912:
  3776  001B4C  FFFF               	dw	65535	; assembler added errata NOP
  3777                           
  3778                           ;utils.c: 21:         *state = 0;
  3779  001B4E  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3780  001B52  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3781  001B56  0E00               	movlw	0
  3782  001B58  6EDE               	movwf	postinc2,c
  3783  001B5A  0E00               	movlw	0
  3784  001B5C  6EDD               	movwf	postdec2,c
  3785  001B5E                     l310:
  3786  001B5E  FFFF               	dw	65535	; assembler added errata NOP
  3787  001B60  0012               	return		;funcret
  3788  001B62  FFFF               	dw	65535	; errata NOP
  3789  001B64                     __end_of_state_translator_fpga_to_micro:
  3790                           	callstack 0
  3791                           
  3792 ;; *************** function _serial_tx_char *****************
  3793 ;; Defined at:
  3794 ;;		line 39 in file "serial_rs232.c"
  3795 ;; Parameters:    Size  Location     Type
  3796 ;;  val             1    wreg     unsigned char 
  3797 ;; Auto vars:     Size  Location     Type
  3798 ;;  val             1    0[COMRAM] unsigned char 
  3799 ;; Return value:  Size  Location     Type
  3800 ;;                  1    wreg      void 
  3801 ;; Registers used:
  3802 ;;		wreg
  3803 ;; Tracked objects:
  3804 ;;		On entry : 0/0
  3805 ;;		On exit  : 0/0
  3806 ;;		Unchanged: 0/0
  3807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3808 ;;      Params:         0       0       0       0       0       0       0
  3809 ;;      Locals:         1       0       0       0       0       0       0
  3810 ;;      Temps:          0       0       0       0       0       0       0
  3811 ;;      Totals:         1       0       0       0       0       0       0
  3812 ;;Total ram usage:        1 bytes
  3813 ;; Hardware stack levels used:    1
  3814 ;; Hardware stack levels required when called:    1
  3815 ;; This function calls:
  3816 ;;		Nothing
  3817 ;; This function is called by:
  3818 ;;		_main
  3819 ;;		_serial_tx_string
  3820 ;; This function uses a non-reentrant model
  3821 ;;
  3822                           
  3823                           	psect	text5
  3824  00275A                     __ptext5:
  3825                           	callstack 0
  3826  00275A                     _serial_tx_char:
  3827                           	callstack 0
  3828  00275A  FFFF               	dw	65535	; assembler added errata NOP
  3829                           
  3830                           ;incstack = 0
  3831                           ;serial_tx_char@val stored from wreg
  3832  00275C  6E01               	movwf	serial_tx_char@val^0,c
  3833  00275E                     
  3834                           ;serial_rs232.c: 40:     TXREG = val;
  3835  00275E  C001  FFAD         	movff	serial_tx_char@val,4013	;volatile
  3836  002762                     l24:
  3837  002762  FFFF               	dw	65535	; assembler added errata NOP
  3838  002764  A2AC               	btfss	172,1,c	;volatile
  3839  002766  EFB7  F013         	goto	u2751
  3840  00276A  EFBA  F013         	goto	u2750
  3841  00276E                     u2751:
  3842  00276E  FFFF               	dw	65535	; assembler added errata NOP
  3843  002770  EFB1  F013         	goto	l24
  3844  002774                     u2750:
  3845  002774  FFFF               	dw	65535	; assembler added errata NOP
  3846  002776  0012               	return		;funcret
  3847  002778  FFFF               	dw	65535	; errata NOP
  3848  00277A                     __end_of_serial_tx_char:
  3849                           	callstack 0
  3850                           
  3851 ;; *************** function _reach_goal *****************
  3852 ;; Defined at:
  3853 ;;		line 30 in file "stepper_motor.c"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;  stepper_moto    2    8[COMRAM] PTR struct .
  3856 ;;		 -> joint_dilutor_stepper(12), end_effector_stepper(12), joint_stepper(12), 
  3857 ;;  goal_to_reac    2   10[COMRAM] int 
  3858 ;; Auto vars:     Size  Location     Type
  3859 ;;		None
  3860 ;; Return value:  Size  Location     Type
  3861 ;;                  2    8[COMRAM] int 
  3862 ;; Registers used:
  3863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3864 ;; Tracked objects:
  3865 ;;		On entry : 0/0
  3866 ;;		On exit  : 0/0
  3867 ;;		Unchanged: 0/0
  3868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3869 ;;      Params:         4       0       0       0       0       0       0
  3870 ;;      Locals:         0       0       0       0       0       0       0
  3871 ;;      Temps:          3       0       0       0       0       0       0
  3872 ;;      Totals:         7       0       0       0       0       0       0
  3873 ;;Total ram usage:        7 bytes
  3874 ;; Hardware stack levels used:    1
  3875 ;; Hardware stack levels required when called:    2
  3876 ;; This function calls:
  3877 ;;		_turn_on_current_coil
  3878 ;;		_update_current_coil
  3879 ;; This function is called by:
  3880 ;;		_main
  3881 ;; This function uses a non-reentrant model
  3882 ;;
  3883                           
  3884                           	psect	text6
  3885  0022CE                     __ptext6:
  3886                           	callstack 0
  3887  0022CE                     _reach_goal:
  3888                           	callstack 0
  3889  0022CE  FFFF               	dw	65535	; assembler added errata NOP
  3890  0022D0                     
  3891                           ;stepper_motor.c: 31:     if(stepper_motor -> step_counter >= goal_to_reach){
  3892  0022D0  EE20 F002          	lfsr	2,2
  3893  0022D4  5009               	movf	reach_goal@stepper_motor^0,w,c
  3894  0022D6  26D9               	addwf	fsr2l,f,c
  3895  0022D8  500A               	movf	(reach_goal@stepper_motor+1)^0,w,c
  3896  0022DA  22DA               	addwfc	fsr2h,f,c
  3897  0022DC  500B               	movf	reach_goal@goal_to_reach^0,w,c
  3898  0022DE  5CDE               	subwf	postinc2,w,c
  3899  0022E0  50DE               	movf	postinc2,w,c
  3900  0022E2  0A80               	xorlw	128
  3901  0022E4  6E0F               	movwf	(??_reach_goal+2)^0,c
  3902  0022E6  500C               	movf	(reach_goal@goal_to_reach+1)^0,w,c
  3903  0022E8  0A80               	xorlw	128
  3904  0022EA  580F               	subwfb	(??_reach_goal+2)^0,w,c
  3905  0022EC  A0D8               	btfss	status,0,c
  3906  0022EE  EF7B  F011         	goto	u2931
  3907  0022F2  EF7E  F011         	goto	u2930
  3908  0022F6                     u2931:
  3909  0022F6  FFFF               	dw	65535	; assembler added errata NOP
  3910  0022F8  EF8F  F011         	goto	l3022
  3911  0022FC                     u2930:
  3912  0022FC  FFFF               	dw	65535	; assembler added errata NOP
  3913  0022FE                     
  3914                           ;stepper_motor.c: 32:         stepper_motor -> step_counter = 0;
  3915  0022FE  EE20 F002          	lfsr	2,2
  3916  002302  5009               	movf	reach_goal@stepper_motor^0,w,c
  3917  002304  26D9               	addwf	fsr2l,f,c
  3918  002306  500A               	movf	(reach_goal@stepper_motor+1)^0,w,c
  3919  002308  22DA               	addwfc	fsr2h,f,c
  3920  00230A  0E00               	movlw	0
  3921  00230C  6EDE               	movwf	postinc2,c
  3922  00230E  0E00               	movlw	0
  3923  002310  6EDD               	movwf	postdec2,c
  3924  002312                     
  3925                           ;stepper_motor.c: 33:         return 1;
  3926  002312  0E00               	movlw	0
  3927  002314  6E0A               	movwf	(?_reach_goal+1)^0,c
  3928  002316  0E01               	movlw	1
  3929  002318  6E09               	movwf	?_reach_goal^0,c
  3930  00231A  EFA0  F011         	goto	l350
  3931  00231E                     l3022:
  3932  00231E  FFFF               	dw	65535	; assembler added errata NOP
  3933                           
  3934                           ;stepper_motor.c: 35:         turn_on_current_coil(stepper_motor);
  3935  002320  C009  F001         	movff	reach_goal@stepper_motor,turn_on_current_coil@stepper_motor
  3936  002324  C00A  F002         	movff	reach_goal@stepper_motor+1,turn_on_current_coil@stepper_motor+1
  3937  002328  EC41  F012         	call	_turn_on_current_coil	;wreg free
  3938  00232C                     
  3939                           ;stepper_motor.c: 36:         update_current_coil(stepper_motor);
  3940  00232C  C009  F001         	movff	reach_goal@stepper_motor,update_current_coil@stepper_motor
  3941  002330  C00A  F002         	movff	reach_goal@stepper_motor+1,update_current_coil@stepper_motor+1
  3942  002334  EC59  F00F         	call	_update_current_coil	;wreg free
  3943  002338                     
  3944                           ;stepper_motor.c: 37:         return 0;
  3945  002338  0E00               	movlw	0
  3946  00233A  6E0A               	movwf	(?_reach_goal+1)^0,c
  3947  00233C  0E00               	movlw	0
  3948  00233E  6E09               	movwf	?_reach_goal^0,c
  3949  002340                     l350:
  3950  002340  FFFF               	dw	65535	; assembler added errata NOP
  3951  002342  0012               	return		;funcret
  3952  002344  FFFF               	dw	65535	; errata NOP
  3953  002346                     __end_of_reach_goal:
  3954                           	callstack 0
  3955                           
  3956 ;; *************** function _update_current_coil *****************
  3957 ;; Defined at:
  3958 ;;		line 19 in file "stepper_motor.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;  stepper_moto    2    0[COMRAM] PTR struct .
  3961 ;;		 -> joint_dilutor_stepper(12), end_effector_stepper(12), joint_stepper(12), 
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;		None
  3964 ;; Return value:  Size  Location     Type
  3965 ;;                  1    wreg      void 
  3966 ;; Registers used:
  3967 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3968 ;; Tracked objects:
  3969 ;;		On entry : 0/0
  3970 ;;		On exit  : 0/0
  3971 ;;		Unchanged: 0/0
  3972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3973 ;;      Params:         2       0       0       0       0       0       0
  3974 ;;      Locals:         0       0       0       0       0       0       0
  3975 ;;      Temps:          4       0       0       0       0       0       0
  3976 ;;      Totals:         6       0       0       0       0       0       0
  3977 ;;Total ram usage:        6 bytes
  3978 ;; Hardware stack levels used:    1
  3979 ;; Hardware stack levels required when called:    1
  3980 ;; This function calls:
  3981 ;;		Nothing
  3982 ;; This function is called by:
  3983 ;;		_reach_goal
  3984 ;; This function uses a non-reentrant model
  3985 ;;
  3986                           
  3987                           	psect	text7
  3988  001EB2                     __ptext7:
  3989                           	callstack 0
  3990  001EB2                     _update_current_coil:
  3991                           	callstack 0
  3992  001EB2  FFFF               	dw	65535	; assembler added errata NOP
  3993  001EB4                     
  3994                           ;stepper_motor.c: 20:     stepper_motor -> current_coil = stepper_motor -> current_coil 
      +                          + stepper_motor -> direction;
  3995  001EB4  EE20 F004          	lfsr	2,4
  3996  001EB8  5001               	movf	update_current_coil@stepper_motor^0,w,c
  3997  001EBA  26D9               	addwf	fsr2l,f,c
  3998  001EBC  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
  3999  001EBE  22DA               	addwfc	fsr2h,f,c
  4000  001EC0  CFDE F003          	movff	postinc2,??_update_current_coil
  4001  001EC4  CFDD F004          	movff	postdec2,??_update_current_coil+1
  4002  001EC8  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
  4003  001ECC  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
  4004  001ED0  CFDE F005          	movff	postinc2,??_update_current_coil+2
  4005  001ED4  CFDD F006          	movff	postdec2,??_update_current_coil+3
  4006  001ED8  5003               	movf	??_update_current_coil^0,w,c
  4007  001EDA  2605               	addwf	(??_update_current_coil+2)^0,f,c
  4008  001EDC  5004               	movf	(??_update_current_coil+1)^0,w,c
  4009  001EDE  2206               	addwfc	(??_update_current_coil+3)^0,f,c
  4010  001EE0  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
  4011  001EE4  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
  4012  001EE8  C005  FFDE         	movff	??_update_current_coil+2,postinc2
  4013  001EEC  C006  FFDD         	movff	??_update_current_coil+3,postdec2
  4014                           
  4015                           ;stepper_motor.c: 21:     stepper_motor -> step_counter = stepper_motor -> step_counter 
      +                          + 1;
  4016  001EF0  EE20 F002          	lfsr	2,2
  4017  001EF4  5001               	movf	update_current_coil@stepper_motor^0,w,c
  4018  001EF6  26D9               	addwf	fsr2l,f,c
  4019  001EF8  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
  4020  001EFA  22DA               	addwfc	fsr2h,f,c
  4021  001EFC  CFDE F003          	movff	postinc2,??_update_current_coil
  4022  001F00  CFDD F004          	movff	postdec2,??_update_current_coil+1
  4023  001F04  0E01               	movlw	1
  4024  001F06  2603               	addwf	??_update_current_coil^0,f,c
  4025  001F08  0E00               	movlw	0
  4026  001F0A  2204               	addwfc	(??_update_current_coil+1)^0,f,c
  4027  001F0C  EE20 F002          	lfsr	2,2
  4028  001F10  5001               	movf	update_current_coil@stepper_motor^0,w,c
  4029  001F12  26D9               	addwf	fsr2l,f,c
  4030  001F14  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
  4031  001F16  22DA               	addwfc	fsr2h,f,c
  4032  001F18  C003  FFDE         	movff	??_update_current_coil,postinc2
  4033  001F1C  C004  FFDD         	movff	??_update_current_coil+1,postdec2
  4034                           
  4035                           ;stepper_motor.c: 22:     if (stepper_motor -> current_coil == -1) {
  4036  001F20  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
  4037  001F24  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
  4038  001F28  28DE               	incf	postinc2,w,c
  4039  001F2A  E106               	bnz	u2661
  4040  001F2C  28DE               	incf	postinc2,w,c
  4041  001F2E  A4D8               	btfss	status,2,c
  4042  001F30  EF9C  F00F         	goto	u2661
  4043  001F34  EF9F  F00F         	goto	u2660
  4044  001F38                     u2661:
  4045  001F38  FFFF               	dw	65535	; assembler added errata NOP
  4046  001F3A  EFAA  F00F         	goto	l2740
  4047  001F3E                     u2660:
  4048  001F3E  FFFF               	dw	65535	; assembler added errata NOP
  4049  001F40                     
  4050                           ;stepper_motor.c: 23:         stepper_motor -> current_coil = 3;
  4051  001F40  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
  4052  001F44  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
  4053  001F48  0E03               	movlw	3
  4054  001F4A  6EDE               	movwf	postinc2,c
  4055  001F4C  0E00               	movlw	0
  4056  001F4E  6EDD               	movwf	postdec2,c
  4057                           
  4058                           ;stepper_motor.c: 24:     } else if(stepper_motor -> current_coil == 4) {
  4059  001F50  EFC3  F00F         	goto	l346
  4060  001F54                     l2740:
  4061  001F54  FFFF               	dw	65535	; assembler added errata NOP
  4062  001F56  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
  4063  001F5A  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
  4064  001F5E  0E04               	movlw	4
  4065  001F60  18DE               	xorwf	postinc2,w,c
  4066  001F62  10DE               	iorwf	postinc2,w,c
  4067  001F64  A4D8               	btfss	status,2,c
  4068  001F66  EFB7  F00F         	goto	u2671
  4069  001F6A  EFBA  F00F         	goto	u2670
  4070  001F6E                     u2671:
  4071  001F6E  FFFF               	dw	65535	; assembler added errata NOP
  4072  001F70  EFC3  F00F         	goto	l346
  4073  001F74                     u2670:
  4074  001F74  FFFF               	dw	65535	; assembler added errata NOP
  4075  001F76                     
  4076                           ;stepper_motor.c: 25:         stepper_motor -> current_coil = 0;
  4077  001F76  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
  4078  001F7A  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
  4079  001F7E  0E00               	movlw	0
  4080  001F80  6EDE               	movwf	postinc2,c
  4081  001F82  0E00               	movlw	0
  4082  001F84  6EDD               	movwf	postdec2,c
  4083  001F86                     l346:
  4084  001F86  FFFF               	dw	65535	; assembler added errata NOP
  4085  001F88  0012               	return		;funcret
  4086  001F8A  FFFF               	dw	65535	; errata NOP
  4087  001F8C                     __end_of_update_current_coil:
  4088                           	callstack 0
  4089                           
  4090 ;; *************** function _turn_on_current_coil *****************
  4091 ;; Defined at:
  4092 ;;		line 14 in file "stepper_motor.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;  stepper_moto    2    0[COMRAM] PTR struct .
  4095 ;;		 -> joint_dilutor_stepper(12), end_effector_stepper(12), joint_stepper(12), 
  4096 ;; Auto vars:     Size  Location     Type
  4097 ;;		None
  4098 ;; Return value:  Size  Location     Type
  4099 ;;                  1    wreg      void 
  4100 ;; Registers used:
  4101 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4102 ;; Tracked objects:
  4103 ;;		On entry : 0/0
  4104 ;;		On exit  : 0/0
  4105 ;;		Unchanged: 0/0
  4106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4107 ;;      Params:         2       0       0       0       0       0       0
  4108 ;;      Locals:         0       0       0       0       0       0       0
  4109 ;;      Temps:          6       0       0       0       0       0       0
  4110 ;;      Totals:         8       0       0       0       0       0       0
  4111 ;;Total ram usage:        8 bytes
  4112 ;; Hardware stack levels used:    1
  4113 ;; Hardware stack levels required when called:    1
  4114 ;; This function calls:
  4115 ;;		Nothing
  4116 ;; This function is called by:
  4117 ;;		_reach_goal
  4118 ;; This function uses a non-reentrant model
  4119 ;;
  4120                           
  4121                           	psect	text8
  4122  002482                     __ptext8:
  4123                           	callstack 0
  4124  002482                     _turn_on_current_coil:
  4125                           	callstack 0
  4126  002482  FFFF               	dw	65535	; assembler added errata NOP
  4127  002484                     
  4128                           ;stepper_motor.c: 15:     *(stepper_motor -> register_name) = stepper_motor -> hex_coil_
      +                          register_values[stepper_motor -> current_coil];
  4129  002484  C001  FFD9         	movff	turn_on_current_coil@stepper_motor,fsr2l
  4130  002488  C002  FFDA         	movff	turn_on_current_coil@stepper_motor+1,fsr2h
  4131  00248C  CFDE F003          	movff	postinc2,??_turn_on_current_coil
  4132  002490  CFDD F004          	movff	postdec2,??_turn_on_current_coil+1
  4133  002494  C001  F005         	movff	turn_on_current_coil@stepper_motor,??_turn_on_current_coil+2
  4134  002498  C002  F006         	movff	turn_on_current_coil@stepper_motor+1,??_turn_on_current_coil+3
  4135  00249C  5003               	movf	??_turn_on_current_coil^0,w,c
  4136  00249E  2605               	addwf	(??_turn_on_current_coil+2)^0,f,c
  4137  0024A0  5004               	movf	(??_turn_on_current_coil+1)^0,w,c
  4138  0024A2  2206               	addwfc	(??_turn_on_current_coil+3)^0,f,c
  4139  0024A4  0E06               	movlw	6
  4140  0024A6  2405               	addwf	(??_turn_on_current_coil+2)^0,w,c
  4141  0024A8  6ED9               	movwf	fsr2l,c
  4142  0024AA  0E00               	movlw	0
  4143  0024AC  2006               	addwfc	(??_turn_on_current_coil+3)^0,w,c
  4144  0024AE  6EDA               	movwf	fsr2h,c
  4145  0024B0  EE10 F00A          	lfsr	1,10
  4146  0024B4  5001               	movf	turn_on_current_coil@stepper_motor^0,w,c
  4147  0024B6  26E1               	addwf	fsr1l,f,c
  4148  0024B8  5002               	movf	(turn_on_current_coil@stepper_motor+1)^0,w,c
  4149  0024BA  22E2               	addwfc	fsr1h,f,c
  4150  0024BC  CFE6 F007          	movff	postinc1,??_turn_on_current_coil+4
  4151  0024C0  CFE5 F008          	movff	postdec1,??_turn_on_current_coil+5
  4152  0024C4  C007  FFE1         	movff	??_turn_on_current_coil+4,fsr1l
  4153  0024C8  C008  FFE2         	movff	??_turn_on_current_coil+5,fsr1h
  4154  0024CC  CFDF FFE7          	movff	indf2,indf1
  4155  0024D0  0012               	return		;funcret
  4156  0024D2  FFFF               	dw	65535	; errata NOP
  4157  0024D4                     __end_of_turn_on_current_coil:
  4158                           	callstack 0
  4159                           
  4160 ;; *************** function _lcd_update *****************
  4161 ;; Defined at:
  4162 ;;		line 108 in file "lcd.c"
  4163 ;; Parameters:    Size  Location     Type
  4164 ;;  state           2   11[COMRAM] int 
  4165 ;; Auto vars:     Size  Location     Type
  4166 ;;  i               2   19[COMRAM] int 
  4167 ;;  line_select     4   15[COMRAM] const unsigned char [4]
  4168 ;; Return value:  Size  Location     Type
  4169 ;;                  1    wreg      void 
  4170 ;; Registers used:
  4171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4172 ;; Tracked objects:
  4173 ;;		On entry : 0/0
  4174 ;;		On exit  : 0/0
  4175 ;;		Unchanged: 0/0
  4176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4177 ;;      Params:         2       0       0       0       0       0       0
  4178 ;;      Locals:         6       0       0       0       0       0       0
  4179 ;;      Temps:          2       0       0       0       0       0       0
  4180 ;;      Totals:        10       0       0       0       0       0       0
  4181 ;;Total ram usage:       10 bytes
  4182 ;; Hardware stack levels used:    1
  4183 ;; Hardware stack levels required when called:    4
  4184 ;; This function calls:
  4185 ;;		___wmul
  4186 ;;		_lcd_cmd
  4187 ;;		_lcd_str
  4188 ;; This function is called by:
  4189 ;;		_main
  4190 ;; This function uses a non-reentrant model
  4191 ;;
  4192                           
  4193                           	psect	text9
  4194  002062                     __ptext9:
  4195                           	callstack 0
  4196  002062                     _lcd_update:
  4197                           	callstack 0
  4198  002062  FFFF               	dw	65535	; assembler added errata NOP
  4199  002064                     
  4200                           ;lcd.c: 109:     lcd_cmd(0x01);
  4201  002064  0E01               	movlw	1
  4202  002066  EC74  F013         	call	_lcd_cmd
  4203  00206A                     
  4204                           ;lcd.c: 110:     const char line_select[4] = {0x80, 0xC0, 0x94, 0xD4};
  4205  00206A  0E2D               	movlw	low lcd_update@F2151
  4206  00206C  6EF6               	movwf	tblptrl,c
  4207  00206E                     	if	1	;There is more than 1 active tblptr byte
  4208  00206E  0E7B               	movlw	high lcd_update@F2151
  4209  002070  6EF7               	movwf	tblptrh,c
  4210  002072                     	endif
  4211  002072                     	if	0	;There are less than 3 active tblptr bytes
  4212  002072                     	endif
  4213  002072  0009               	tblrd		*+
  4214  002074  FFFF               	dw	65535	; errata NOP
  4215  002076  CFF5 F010          	movff	tablat,lcd_update@line_select
  4216  00207A  0009               	tblrd		*+
  4217  00207C  FFFF               	dw	65535	; errata NOP
  4218  00207E  CFF5 F011          	movff	tablat,lcd_update@line_select+1
  4219  002082  0009               	tblrd		*+
  4220  002084  FFFF               	dw	65535	; errata NOP
  4221  002086  CFF5 F012          	movff	tablat,lcd_update@line_select+2
  4222  00208A  000A               	tblrd		*-
  4223  00208C  FFFF               	dw	65535	; errata NOP
  4224  00208E  CFF5 F013          	movff	tablat,lcd_update@line_select+3
  4225  002092                     
  4226                           ;lcd.c: 111:     for (int i=0;i<4;i++ ){
  4227  002092  0E00               	movlw	0
  4228  002094  6E15               	movwf	(lcd_update@i+1)^0,c
  4229  002096  0E00               	movlw	0
  4230  002098  6E14               	movwf	lcd_update@i^0,c
  4231  00209A                     l2942:
  4232  00209A  FFFF               	dw	65535	; assembler added errata NOP
  4233                           
  4234                           ;lcd.c: 112:         lcd_cmd(line_select[i]);
  4235  00209C  0E10               	movlw	low lcd_update@line_select
  4236  00209E  2414               	addwf	lcd_update@i^0,w,c
  4237  0020A0  6ED9               	movwf	fsr2l,c
  4238  0020A2  0E00               	movlw	high lcd_update@line_select
  4239  0020A4  2015               	addwfc	(lcd_update@i+1)^0,w,c
  4240  0020A6  6EDA               	movwf	fsr2h,c
  4241  0020A8  50DF               	movf	indf2,w,c
  4242  0020AA  EC74  F013         	call	_lcd_cmd
  4243  0020AE                     
  4244                           ;lcd.c: 113:         lcd_str(const_msgs[state][i]);
  4245  0020AE  C00C  F001         	movff	lcd_update@state,___wmul@multiplier
  4246  0020B2  C00D  F002         	movff	lcd_update@state+1,___wmul@multiplier+1
  4247  0020B6  0E00               	movlw	0
  4248  0020B8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4249  0020BA  0E50               	movlw	80
  4250  0020BC  6E03               	movwf	___wmul@multiplicand^0,c
  4251  0020BE  EC5F  F013         	call	___wmul	;wreg free
  4252  0020C2  0E35               	movlw	low _const_msgs
  4253  0020C4  6E0E               	movwf	??_lcd_update^0,c
  4254  0020C6  0E7B               	movlw	high _const_msgs
  4255  0020C8  6E0F               	movwf	(??_lcd_update+1)^0,c
  4256  0020CA  5001               	movf	?___wmul^0,w,c
  4257  0020CC  260E               	addwf	??_lcd_update^0,f,c
  4258  0020CE  5002               	movf	(?___wmul+1)^0,w,c
  4259  0020D0  220F               	addwfc	(??_lcd_update+1)^0,f,c
  4260  0020D2  C014  F001         	movff	lcd_update@i,___wmul@multiplier
  4261  0020D6  C015  F002         	movff	lcd_update@i+1,___wmul@multiplier+1
  4262  0020DA  0E00               	movlw	0
  4263  0020DC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4264  0020DE  0E14               	movlw	20
  4265  0020E0  6E03               	movwf	___wmul@multiplicand^0,c
  4266  0020E2  EC5F  F013         	call	___wmul	;wreg free
  4267  0020E6  5001               	movf	?___wmul^0,w,c
  4268  0020E8  240E               	addwf	??_lcd_update^0,w,c
  4269  0020EA  6E07               	movwf	lcd_str@str^0,c
  4270  0020EC  5002               	movf	(?___wmul+1)^0,w,c
  4271  0020EE  200F               	addwfc	(??_lcd_update+1)^0,w,c
  4272  0020F0  6E08               	movwf	(lcd_str@str+1)^0,c
  4273  0020F2  EC11  F012         	call	_lcd_str	;wreg free
  4274  0020F6                     
  4275                           ;lcd.c: 114:     }
  4276  0020F6  4A14               	infsnz	lcd_update@i^0,f,c
  4277  0020F8  2A15               	incf	(lcd_update@i+1)^0,f,c
  4278  0020FA  BE15               	btfsc	(lcd_update@i+1)^0,7,c
  4279  0020FC  EF89  F010         	goto	u2881
  4280  002100  5015               	movf	(lcd_update@i+1)^0,w,c
  4281  002102  E10A               	bnz	u2880
  4282  002104  0E04               	movlw	4
  4283  002106  5C14               	subwf	lcd_update@i^0,w,c
  4284  002108  A0D8               	btfss	status,0,c
  4285  00210A  EF89  F010         	goto	u2881
  4286  00210E  EF8C  F010         	goto	u2880
  4287  002112                     u2881:
  4288  002112  FFFF               	dw	65535	; assembler added errata NOP
  4289  002114  EF4D  F010         	goto	l2942
  4290  002118                     u2880:
  4291  002118  FFFF               	dw	65535	; assembler added errata NOP
  4292  00211A  0012               	return		;funcret
  4293  00211C  FFFF               	dw	65535	; errata NOP
  4294  00211E                     __end_of_lcd_update:
  4295                           	callstack 0
  4296                           
  4297 ;; *************** function _lcd_str *****************
  4298 ;; Defined at:
  4299 ;;		line 80 in file "lcd.c"
  4300 ;; Parameters:    Size  Location     Type
  4301 ;;  str             2    6[COMRAM] PTR const unsigned char 
  4302 ;;		 -> const_msgs(1200), STR_1(22), 
  4303 ;; Auto vars:     Size  Location     Type
  4304 ;;  i               1   10[COMRAM] unsigned char 
  4305 ;; Return value:  Size  Location     Type
  4306 ;;                  1    wreg      void 
  4307 ;; Registers used:
  4308 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4309 ;; Tracked objects:
  4310 ;;		On entry : 0/0
  4311 ;;		On exit  : 0/0
  4312 ;;		Unchanged: 0/0
  4313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4314 ;;      Params:         2       0       0       0       0       0       0
  4315 ;;      Locals:         1       0       0       0       0       0       0
  4316 ;;      Temps:          2       0       0       0       0       0       0
  4317 ;;      Totals:         5       0       0       0       0       0       0
  4318 ;;Total ram usage:        5 bytes
  4319 ;; Hardware stack levels used:    1
  4320 ;; Hardware stack levels required when called:    3
  4321 ;; This function calls:
  4322 ;;		_lcd_dat
  4323 ;; This function is called by:
  4324 ;;		_main
  4325 ;;		_lcd_update
  4326 ;; This function uses a non-reentrant model
  4327 ;;
  4328                           
  4329                           	psect	text10
  4330  002422                     __ptext10:
  4331                           	callstack 0
  4332  002422                     _lcd_str:
  4333                           	callstack 0
  4334  002422  FFFF               	dw	65535	; assembler added errata NOP
  4335  002424                     
  4336                           ;lcd.c: 80: void lcd_str(const char* str);lcd.c: 81: {;lcd.c: 82:     unsigned char i=0;
  4337  002424  0E00               	movlw	0
  4338  002426  6E0B               	movwf	lcd_str@i^0,c
  4339                           
  4340                           ;lcd.c: 84:     while(str[i] != 0 )
  4341  002428  EF27  F012         	goto	l2724
  4342  00242C                     l2720:
  4343  00242C  FFFF               	dw	65535	; assembler added errata NOP
  4344                           
  4345                           ;lcd.c: 85:     {;lcd.c: 86:       lcd_dat(str[i]);
  4346  00242E  500B               	movf	lcd_str@i^0,w,c
  4347  002430  2407               	addwf	lcd_str@str^0,w,c
  4348  002432  6E09               	movwf	??_lcd_str^0,c
  4349  002434  0E00               	movlw	0
  4350  002436  2008               	addwfc	(lcd_str@str+1)^0,w,c
  4351  002438  6E0A               	movwf	(??_lcd_str+1)^0,c
  4352  00243A  C009  FFF6         	movff	??_lcd_str,tblptrl
  4353  00243E  C00A  FFF7         	movff	??_lcd_str+1,tblptrh
  4354  002442                     	if	0	;tblptru may be non-zero
  4355  002442                     	endif
  4356  002442                     	if	0	;tblptru may be non-zero
  4357  002442                     	endif
  4358  002442  0008               	tblrd		*
  4359  002444  FFFF               	dw	65535	; errata NOP
  4360  002446  50F5               	movf	tablat,w,c
  4361  002448  EC4A  F013         	call	_lcd_dat
  4362  00244C                     
  4363                           ;lcd.c: 87:       i++;
  4364  00244C  2A0B               	incf	lcd_str@i^0,f,c
  4365  00244E                     l2724:
  4366  00244E  FFFF               	dw	65535	; assembler added errata NOP
  4367                           
  4368                           ;lcd.c: 84:     while(str[i] != 0 )
  4369  002450  500B               	movf	lcd_str@i^0,w,c
  4370  002452  2407               	addwf	lcd_str@str^0,w,c
  4371  002454  6E09               	movwf	??_lcd_str^0,c
  4372  002456  0E00               	movlw	0
  4373  002458  2008               	addwfc	(lcd_str@str+1)^0,w,c
  4374  00245A  6E0A               	movwf	(??_lcd_str+1)^0,c
  4375  00245C  C009  FFF6         	movff	??_lcd_str,tblptrl
  4376  002460  C00A  FFF7         	movff	??_lcd_str+1,tblptrh
  4377  002464                     	if	0	;tblptru may be non-zero
  4378  002464                     	endif
  4379  002464                     	if	0	;tblptru may be non-zero
  4380  002464                     	endif
  4381  002464  0008               	tblrd		*
  4382  002466  FFFF               	dw	65535	; errata NOP
  4383  002468  50F5               	movf	tablat,w,c
  4384  00246A  0900               	iorlw	0
  4385  00246C  A4D8               	btfss	status,2,c
  4386  00246E  EF3B  F012         	goto	u2641
  4387  002472  EF3E  F012         	goto	u2640
  4388  002476                     u2641:
  4389  002476  FFFF               	dw	65535	; assembler added errata NOP
  4390  002478  EF16  F012         	goto	l2720
  4391  00247C                     u2640:
  4392  00247C  FFFF               	dw	65535	; assembler added errata NOP
  4393  00247E  0012               	return		;funcret
  4394  002480  FFFF               	dw	65535	; errata NOP
  4395  002482                     __end_of_lcd_str:
  4396                           	callstack 0
  4397                           
  4398 ;; *************** function _lcd_dat *****************
  4399 ;; Defined at:
  4400 ;;		line 39 in file "lcd.c"
  4401 ;; Parameters:    Size  Location     Type
  4402 ;;  val             1    wreg     unsigned char 
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;  val             1    1[COMRAM] unsigned char 
  4405 ;; Return value:  Size  Location     Type
  4406 ;;                  1    wreg      void 
  4407 ;; Registers used:
  4408 ;;		wreg, status,2, cstack
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4414 ;;      Params:         0       0       0       0       0       0       0
  4415 ;;      Locals:         1       0       0       0       0       0       0
  4416 ;;      Temps:          0       0       0       0       0       0       0
  4417 ;;      Totals:         1       0       0       0       0       0       0
  4418 ;;Total ram usage:        1 bytes
  4419 ;; Hardware stack levels used:    1
  4420 ;; Hardware stack levels required when called:    2
  4421 ;; This function calls:
  4422 ;;		_lcd_wr
  4423 ;; This function is called by:
  4424 ;;		_lcd_str
  4425 ;;		_state_translator_fpga_to_micro
  4426 ;; This function uses a non-reentrant model
  4427 ;;
  4428                           
  4429                           	psect	text11
  4430  002694                     __ptext11:
  4431                           	callstack 0
  4432  002694                     _lcd_dat:
  4433                           	callstack 0
  4434  002694  FFFF               	dw	65535	; assembler added errata NOP
  4435                           
  4436                           ;incstack = 0
  4437                           ;lcd_dat@val stored from wreg
  4438  002696  6E02               	movwf	lcd_dat@val^0,c
  4439  002698                     
  4440                           ;lcd.c: 39: void lcd_dat(unsigned char val);lcd.c: 40: {;lcd.c: 41:  PORTEbits.RE1=1;
  4441  002698  8284               	bsf	132,1,c	;volatile
  4442  00269A                     
  4443                           ;lcd.c: 42:     lcd_wr(val);
  4444  00269A  5002               	movf	lcd_dat@val^0,w,c
  4445  00269C  ECEA  F013         	call	_lcd_wr
  4446  0026A0                     
  4447                           ;lcd.c: 43:     PORTEbits.RE2=1;
  4448  0026A0  8484               	bsf	132,2,c	;volatile
  4449  0026A2                     
  4450                           ;lcd.c: 44:     _delay((unsigned long)((1)*(4000000/4000.0)));
  4451  0026A2  0EC8               	movlw	200
  4452  0026A4                     u3497:
  4453  0026A4  FFFF               	dw	65535	; errata NOP
  4454  0026A6  F000               	nop	
  4455  0026A8  2EE8               	decfsz	wreg,f,c
  4456  0026AA  D7FC               	bra	u3497
  4457  0026AC                     
  4458                           ;lcd.c: 45:     PORTEbits.RE1=0;
  4459  0026AC  9284               	bcf	132,1,c	;volatile
  4460  0026AE                     
  4461                           ;lcd.c: 46:     _delay((unsigned long)((1)*(4000000/4000.0)));
  4462  0026AE  0EC8               	movlw	200
  4463  0026B0                     u3507:
  4464  0026B0  FFFF               	dw	65535	; errata NOP
  4465  0026B2  F000               	nop	
  4466  0026B4  2EE8               	decfsz	wreg,f,c
  4467  0026B6  D7FC               	bra	u3507
  4468  0026B8                     
  4469                           ;lcd.c: 47:  PORTEbits.RE1=1;
  4470  0026B8  8284               	bsf	132,1,c	;volatile
  4471  0026BA  0012               	return		;funcret
  4472  0026BC  FFFF               	dw	65535	; errata NOP
  4473  0026BE                     __end_of_lcd_dat:
  4474                           	callstack 0
  4475                           
  4476 ;; *************** function ___wmul *****************
  4477 ;; Defined at:
  4478 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  4479 ;; Parameters:    Size  Location     Type
  4480 ;;  multiplier      2    0[COMRAM] unsigned int 
  4481 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4482 ;; Auto vars:     Size  Location     Type
  4483 ;;  product         2    4[COMRAM] unsigned int 
  4484 ;; Return value:  Size  Location     Type
  4485 ;;                  2    0[COMRAM] unsigned int 
  4486 ;; Registers used:
  4487 ;;		wreg, status,2, status,0, prodl, prodh
  4488 ;; Tracked objects:
  4489 ;;		On entry : 0/0
  4490 ;;		On exit  : 0/0
  4491 ;;		Unchanged: 0/0
  4492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4493 ;;      Params:         4       0       0       0       0       0       0
  4494 ;;      Locals:         2       0       0       0       0       0       0
  4495 ;;      Temps:          0       0       0       0       0       0       0
  4496 ;;      Totals:         6       0       0       0       0       0       0
  4497 ;;Total ram usage:        6 bytes
  4498 ;; Hardware stack levels used:    1
  4499 ;; Hardware stack levels required when called:    1
  4500 ;; This function calls:
  4501 ;;		Nothing
  4502 ;; This function is called by:
  4503 ;;		_main
  4504 ;;		_lcd_update
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           
  4508                           	psect	text12
  4509  0026BE                     __ptext12:
  4510                           	callstack 0
  4511  0026BE                     ___wmul:
  4512                           	callstack 0
  4513  0026BE  FFFF               	dw	65535	; assembler added errata NOP
  4514  0026C0  5001               	movf	___wmul@multiplier^0,w,c
  4515  0026C2  0203               	mulwf	___wmul@multiplicand^0,c
  4516  0026C4  CFF3 F005          	movff	prodl,___wmul@product
  4517  0026C8  CFF4 F006          	movff	prodh,___wmul@product+1
  4518  0026CC  5001               	movf	___wmul@multiplier^0,w,c
  4519  0026CE  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  4520  0026D0  50F3               	movf	243,w,c
  4521  0026D2  2606               	addwf	(___wmul@product+1)^0,f,c
  4522  0026D4  5002               	movf	(___wmul@multiplier+1)^0,w,c
  4523  0026D6  0203               	mulwf	___wmul@multiplicand^0,c
  4524  0026D8  50F3               	movf	243,w,c
  4525  0026DA  2606               	addwf	(___wmul@product+1)^0,f,c
  4526  0026DC  C005  F001         	movff	___wmul@product,?___wmul
  4527  0026E0  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4528  0026E4  0012               	return		;funcret
  4529  0026E6  FFFF               	dw	65535	; errata NOP
  4530  0026E8                     __end_of___wmul:
  4531                           	callstack 0
  4532                           
  4533 ;; *************** function _lcd_init *****************
  4534 ;; Defined at:
  4535 ;;		line 50 in file "lcd.c"
  4536 ;; Parameters:    Size  Location     Type
  4537 ;;		None
  4538 ;; Auto vars:     Size  Location     Type
  4539 ;;		None
  4540 ;; Return value:  Size  Location     Type
  4541 ;;                  1    wreg      void 
  4542 ;; Registers used:
  4543 ;;		wreg, status,2, cstack
  4544 ;; Tracked objects:
  4545 ;;		On entry : 0/0
  4546 ;;		On exit  : 0/0
  4547 ;;		Unchanged: 0/0
  4548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4549 ;;      Params:         0       0       0       0       0       0       0
  4550 ;;      Locals:         0       0       0       0       0       0       0
  4551 ;;      Temps:          1       0       0       0       0       0       0
  4552 ;;      Totals:         1       0       0       0       0       0       0
  4553 ;;Total ram usage:        1 bytes
  4554 ;; Hardware stack levels used:    1
  4555 ;; Hardware stack levels required when called:    3
  4556 ;; This function calls:
  4557 ;;		_lcd_cmd
  4558 ;; This function is called by:
  4559 ;;		_main
  4560 ;; This function uses a non-reentrant model
  4561 ;;
  4562                           
  4563                           	psect	text13
  4564  002250                     __ptext13:
  4565                           	callstack 0
  4566  002250                     _lcd_init:
  4567                           	callstack 0
  4568  002250  FFFF               	dw	65535	; assembler added errata NOP
  4569  002252  6A83               	clrf	3971,c	;# 
  4570  002254  0E00               	movlw	0	;# 
  4571  002256  6E95               	movwf	3989,c	;# 
  4572  002258  6A84               	clrf	3972,c	;# 
  4573  00225A  0E00               	movlw	0	;# 
  4574  00225C  6E96               	movwf	3990,c	;# 
  4575                           
  4576                           ;lcd.c: 63:  PORTEbits.RE1=0;
  4577  00225E  9284               	bcf	132,1,c	;volatile
  4578                           
  4579                           ;lcd.c: 64:  PORTEbits.RE2=0;
  4580  002260  9484               	bcf	132,2,c	;volatile
  4581  002262                     
  4582                           ;lcd.c: 65:  _delay((unsigned long)((30)*(4000000/4000.0)));
  4583  002262  0E1E               	movlw	30
  4584  002264  6E03               	movwf	??_lcd_init^0,c
  4585  002266  0E3C               	movlw	60
  4586  002268                     u3517:
  4587  002268  FFFF               	dw	65535	; errata NOP
  4588  00226A  2EE8               	decfsz	wreg,f,c
  4589  00226C  D7FD               	bra	u3517
  4590  00226E  2E03               	decfsz	??_lcd_init^0,f,c
  4591  002270  D7FB               	bra	u3517
  4592  002272  D000               	nop2	
  4593  002274                     
  4594                           ;lcd.c: 66:  PORTEbits.RE1=1;
  4595  002274  8284               	bsf	132,1,c	;volatile
  4596  002276                     
  4597                           ;lcd.c: 68:  lcd_cmd(0x38);
  4598  002276  0E38               	movlw	56
  4599  002278  EC74  F013         	call	_lcd_cmd
  4600  00227C                     
  4601                           ;lcd.c: 69:  _delay((unsigned long)((30)*(4000000/4000.0)));
  4602  00227C  0E1E               	movlw	30
  4603  00227E  6E03               	movwf	??_lcd_init^0,c
  4604  002280  0E3C               	movlw	60
  4605  002282                     u3527:
  4606  002282  FFFF               	dw	65535	; errata NOP
  4607  002284  2EE8               	decfsz	wreg,f,c
  4608  002286  D7FD               	bra	u3527
  4609  002288  2E03               	decfsz	??_lcd_init^0,f,c
  4610  00228A  D7FB               	bra	u3527
  4611  00228C  D000               	nop2	
  4612                           
  4613                           ;lcd.c: 70:  lcd_cmd(0x38);
  4614  00228E  0E38               	movlw	56
  4615  002290  EC74  F013         	call	_lcd_cmd
  4616  002294                     
  4617                           ;lcd.c: 71:     _delay((unsigned long)((30)*(4000000/4000.0)));
  4618  002294  0E1E               	movlw	30
  4619  002296  6E03               	movwf	??_lcd_init^0,c
  4620  002298  0E3C               	movlw	60
  4621  00229A                     u3537:
  4622  00229A  FFFF               	dw	65535	; errata NOP
  4623  00229C  2EE8               	decfsz	wreg,f,c
  4624  00229E  D7FD               	bra	u3537
  4625  0022A0  2E03               	decfsz	??_lcd_init^0,f,c
  4626  0022A2  D7FB               	bra	u3537
  4627  0022A4  D000               	nop2	
  4628  0022A6                     
  4629                           ;lcd.c: 72:  lcd_cmd(0x38);
  4630  0022A6  0E38               	movlw	56
  4631  0022A8  EC74  F013         	call	_lcd_cmd
  4632  0022AC                     
  4633                           ;lcd.c: 73:  lcd_cmd(0x08);
  4634  0022AC  0E08               	movlw	8
  4635  0022AE  EC74  F013         	call	_lcd_cmd
  4636  0022B2                     
  4637                           ;lcd.c: 74:  lcd_cmd(0x0F);
  4638  0022B2  0E0F               	movlw	15
  4639  0022B4  EC74  F013         	call	_lcd_cmd
  4640  0022B8                     
  4641                           ;lcd.c: 75:  lcd_cmd(0x01);
  4642  0022B8  0E01               	movlw	1
  4643  0022BA  EC74  F013         	call	_lcd_cmd
  4644  0022BE                     
  4645                           ;lcd.c: 76:  lcd_cmd(0x38);
  4646  0022BE  0E38               	movlw	56
  4647  0022C0  EC74  F013         	call	_lcd_cmd
  4648  0022C4                     
  4649                           ;lcd.c: 77:     lcd_cmd(0x80);
  4650  0022C4  0E80               	movlw	128
  4651  0022C6  EC74  F013         	call	_lcd_cmd
  4652  0022CA  0012               	return		;funcret
  4653  0022CC  FFFF               	dw	65535	; errata NOP
  4654  0022CE                     __end_of_lcd_init:
  4655                           	callstack 0
  4656                           
  4657 ;; *************** function _lcd_cmd *****************
  4658 ;; Defined at:
  4659 ;;		line 28 in file "lcd.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;  val             1    wreg     unsigned char 
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;  val             1    1[COMRAM] unsigned char 
  4664 ;; Return value:  Size  Location     Type
  4665 ;;                  1    wreg      void 
  4666 ;; Registers used:
  4667 ;;		wreg, status,2, cstack
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/0
  4670 ;;		On exit  : 0/0
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4673 ;;      Params:         0       0       0       0       0       0       0
  4674 ;;      Locals:         1       0       0       0       0       0       0
  4675 ;;      Temps:          0       0       0       0       0       0       0
  4676 ;;      Totals:         1       0       0       0       0       0       0
  4677 ;;Total ram usage:        1 bytes
  4678 ;; Hardware stack levels used:    1
  4679 ;; Hardware stack levels required when called:    2
  4680 ;; This function calls:
  4681 ;;		_lcd_wr
  4682 ;; This function is called by:
  4683 ;;		_main
  4684 ;;		_lcd_init
  4685 ;;		_lcd_update
  4686 ;; This function uses a non-reentrant model
  4687 ;;
  4688                           
  4689                           	psect	text14
  4690  0026E8                     __ptext14:
  4691                           	callstack 0
  4692  0026E8                     _lcd_cmd:
  4693                           	callstack 0
  4694  0026E8  FFFF               	dw	65535	; assembler added errata NOP
  4695                           
  4696                           ;incstack = 0
  4697                           ;lcd_cmd@val stored from wreg
  4698  0026EA  6E02               	movwf	lcd_cmd@val^0,c
  4699  0026EC                     
  4700                           ;lcd.c: 28: void lcd_cmd(unsigned char val);lcd.c: 29: {;lcd.c: 30:  PORTEbits.RE1=1;
  4701  0026EC  8284               	bsf	132,1,c	;volatile
  4702  0026EE                     
  4703                           ;lcd.c: 31:     lcd_wr(val);
  4704  0026EE  5002               	movf	lcd_cmd@val^0,w,c
  4705  0026F0  ECEA  F013         	call	_lcd_wr
  4706  0026F4                     
  4707                           ;lcd.c: 32:     PORTEbits.RE2=0;
  4708  0026F4  9484               	bcf	132,2,c	;volatile
  4709  0026F6                     
  4710                           ;lcd.c: 33:     _delay((unsigned long)((1)*(4000000/4000.0)));
  4711  0026F6  0EC8               	movlw	200
  4712  0026F8                     u3547:
  4713  0026F8  FFFF               	dw	65535	; errata NOP
  4714  0026FA  F000               	nop	
  4715  0026FC  2EE8               	decfsz	wreg,f,c
  4716  0026FE  D7FC               	bra	u3547
  4717  002700                     
  4718                           ;lcd.c: 34:     PORTEbits.RE1=0;
  4719  002700  9284               	bcf	132,1,c	;volatile
  4720  002702                     
  4721                           ;lcd.c: 35:     _delay((unsigned long)((1)*(4000000/4000.0)));
  4722  002702  0EC8               	movlw	200
  4723  002704                     u3557:
  4724  002704  FFFF               	dw	65535	; errata NOP
  4725  002706  F000               	nop	
  4726  002708  2EE8               	decfsz	wreg,f,c
  4727  00270A  D7FC               	bra	u3557
  4728  00270C                     
  4729                           ;lcd.c: 36:  PORTEbits.RE1=1;
  4730  00270C  8284               	bsf	132,1,c	;volatile
  4731  00270E  0012               	return		;funcret
  4732  002710  FFFF               	dw	65535	; errata NOP
  4733  002712                     __end_of_lcd_cmd:
  4734                           	callstack 0
  4735                           
  4736 ;; *************** function _lcd_wr *****************
  4737 ;; Defined at:
  4738 ;;		line 23 in file "lcd.c"
  4739 ;; Parameters:    Size  Location     Type
  4740 ;;  val             1    wreg     unsigned char 
  4741 ;; Auto vars:     Size  Location     Type
  4742 ;;  val             1    0[COMRAM] unsigned char 
  4743 ;; Return value:  Size  Location     Type
  4744 ;;                  1    wreg      void 
  4745 ;; Registers used:
  4746 ;;		wreg
  4747 ;; Tracked objects:
  4748 ;;		On entry : 0/0
  4749 ;;		On exit  : 0/0
  4750 ;;		Unchanged: 0/0
  4751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4752 ;;      Params:         0       0       0       0       0       0       0
  4753 ;;      Locals:         1       0       0       0       0       0       0
  4754 ;;      Temps:          0       0       0       0       0       0       0
  4755 ;;      Totals:         1       0       0       0       0       0       0
  4756 ;;Total ram usage:        1 bytes
  4757 ;; Hardware stack levels used:    1
  4758 ;; Hardware stack levels required when called:    1
  4759 ;; This function calls:
  4760 ;;		Nothing
  4761 ;; This function is called by:
  4762 ;;		_lcd_cmd
  4763 ;;		_lcd_dat
  4764 ;; This function uses a non-reentrant model
  4765 ;;
  4766                           
  4767                           	psect	text15
  4768  0027D4                     __ptext15:
  4769                           	callstack 0
  4770  0027D4                     _lcd_wr:
  4771                           	callstack 0
  4772  0027D4  FFFF               	dw	65535	; assembler added errata NOP
  4773                           
  4774                           ;incstack = 0
  4775                           ;lcd_wr@val stored from wreg
  4776  0027D6  6E01               	movwf	lcd_wr@val^0,c
  4777  0027D8                     
  4778                           ;lcd.c: 23: void lcd_wr(unsigned char val);lcd.c: 24: {;lcd.c: 25:     PORTD=val;
  4779  0027D8  C001  FF83         	movff	lcd_wr@val,3971	;volatile
  4780  0027DC  0012               	return		;funcret
  4781  0027DE  FFFF               	dw	65535	; errata NOP
  4782  0027E0                     __end_of_lcd_wr:
  4783                           	callstack 0
  4784                           
  4785 ;; *************** function _init_timer_0 *****************
  4786 ;; Defined at:
  4787 ;;		line 4 in file "timer.c"
  4788 ;; Parameters:    Size  Location     Type
  4789 ;;		None
  4790 ;; Auto vars:     Size  Location     Type
  4791 ;;		None
  4792 ;; Return value:  Size  Location     Type
  4793 ;;                  1    wreg      void 
  4794 ;; Registers used:
  4795 ;;		wreg, status,2
  4796 ;; Tracked objects:
  4797 ;;		On entry : 0/0
  4798 ;;		On exit  : 0/0
  4799 ;;		Unchanged: 0/0
  4800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4801 ;;      Params:         0       0       0       0       0       0       0
  4802 ;;      Locals:         0       0       0       0       0       0       0
  4803 ;;      Temps:          0       0       0       0       0       0       0
  4804 ;;      Totals:         0       0       0       0       0       0       0
  4805 ;;Total ram usage:        0 bytes
  4806 ;; Hardware stack levels used:    1
  4807 ;; Hardware stack levels required when called:    1
  4808 ;; This function calls:
  4809 ;;		Nothing
  4810 ;; This function is called by:
  4811 ;;		_main
  4812 ;; This function uses a non-reentrant model
  4813 ;;
  4814                           
  4815                           	psect	text16
  4816  002738                     __ptext16:
  4817                           	callstack 0
  4818  002738                     _init_timer_0:
  4819                           	callstack 0
  4820  002738  FFFF               	dw	65535	; assembler added errata NOP
  4821  00273A                     
  4822                           ;timer.c: 6:     T0CON = 0;
  4823  00273A  0E00               	movlw	0
  4824  00273C  6ED5               	movwf	213,c	;volatile
  4825                           
  4826                           ;timer.c: 8:     TMR0L = 0x69;
  4827  00273E  0E69               	movlw	105
  4828  002740  6ED6               	movwf	214,c	;volatile
  4829                           
  4830                           ;timer.c: 9:     TMR0H = 0x67;
  4831  002742  0E67               	movlw	103
  4832  002744  6ED7               	movwf	215,c	;volatile
  4833  002746                     
  4834                           ;timer.c: 10:     INTCONbits.TMR0IE = 1;
  4835  002746  8AF2               	bsf	242,5,c	;volatile
  4836  002748                     
  4837                           ;timer.c: 11:     T0CONbits.T08BIT = 0;
  4838  002748  9CD5               	bcf	213,6,c	;volatile
  4839  00274A                     
  4840                           ;timer.c: 12:     T0CONbits.T0CS = 0;
  4841  00274A  9AD5               	bcf	213,5,c	;volatile
  4842  00274C                     
  4843                           ;timer.c: 13:     T0CONbits.PSA = 0;
  4844  00274C  96D5               	bcf	213,3,c	;volatile
  4845  00274E                     
  4846                           ;timer.c: 14:     T0CONbits.T0PS0 = 0;
  4847  00274E  90D5               	bcf	213,0,c	;volatile
  4848  002750                     
  4849                           ;timer.c: 15:     T0CONbits.T0PS1 = 1;
  4850  002750  82D5               	bsf	213,1,c	;volatile
  4851  002752                     
  4852                           ;timer.c: 16:     T0CONbits.T0PS2 = 1;
  4853  002752  84D5               	bsf	213,2,c	;volatile
  4854  002754                     
  4855                           ;timer.c: 17:     T0CONbits.TMR0ON = 1;
  4856  002754  8ED5               	bsf	213,7,c	;volatile
  4857  002756  0012               	return		;funcret
  4858  002758  FFFF               	dw	65535	; errata NOP
  4859  00275A                     __end_of_init_timer_0:
  4860                           	callstack 0
  4861                           
  4862 ;; *************** function _init_stepper *****************
  4863 ;; Defined at:
  4864 ;;		line 4 in file "stepper_motor.c"
  4865 ;; Parameters:    Size  Location     Type
  4866 ;;  stepper_moto    2    0[COMRAM] PTR struct .
  4867 ;;		 -> joint_dilutor_stepper(12), end_effector_stepper(12), joint_stepper(12), 
  4868 ;;  current_coil    2    2[COMRAM] int 
  4869 ;;  step_counter    2    4[COMRAM] int 
  4870 ;;  direction       2    6[COMRAM] int 
  4871 ;;  hex_coil_reg    2    8[COMRAM] PTR unsigned char 
  4872 ;;		 -> hex_end_effector_values(4), hex_joint_values(4), 
  4873 ;;  register_nam    2   10[COMRAM] PTR volatile unsigned ch
  4874 ;;		 -> LATC(1), LATB(1), 
  4875 ;; Auto vars:     Size  Location     Type
  4876 ;;  i               2   14[COMRAM] int 
  4877 ;; Return value:  Size  Location     Type
  4878 ;;                  1    wreg      void 
  4879 ;; Registers used:
  4880 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4881 ;; Tracked objects:
  4882 ;;		On entry : 0/0
  4883 ;;		On exit  : 0/0
  4884 ;;		Unchanged: 0/0
  4885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4886 ;;      Params:        12       0       0       0       0       0       0
  4887 ;;      Locals:         2       0       0       0       0       0       0
  4888 ;;      Temps:          2       0       0       0       0       0       0
  4889 ;;      Totals:        16       0       0       0       0       0       0
  4890 ;;Total ram usage:       16 bytes
  4891 ;; Hardware stack levels used:    1
  4892 ;; Hardware stack levels required when called:    1
  4893 ;; This function calls:
  4894 ;;		Nothing
  4895 ;; This function is called by:
  4896 ;;		_main
  4897 ;; This function uses a non-reentrant model
  4898 ;;
  4899                           
  4900                           	psect	text17
  4901  00211E                     __ptext17:
  4902                           	callstack 0
  4903  00211E                     _init_stepper:
  4904                           	callstack 0
  4905  00211E  FFFF               	dw	65535	; assembler added errata NOP
  4906  002120                     
  4907                           ;stepper_motor.c: 5:     for (int i = 0; i < 4; i++) {
  4908  002120  0E00               	movlw	0
  4909  002122  6E10               	movwf	(init_stepper@i+1)^0,c
  4910  002124  0E00               	movlw	0
  4911  002126  6E0F               	movwf	init_stepper@i^0,c
  4912  002128                     l2840:
  4913  002128  FFFF               	dw	65535	; assembler added errata NOP
  4914                           
  4915                           ;stepper_motor.c: 6:        stepper_motor -> hex_coil_register_values[i] = hex_coil_regi
      +                          ster_values[i];
  4916  00212A  500F               	movf	init_stepper@i^0,w,c
  4917  00212C  2409               	addwf	init_stepper@hex_coil_register_values^0,w,c
  4918  00212E  6ED9               	movwf	fsr2l,c
  4919  002130  5010               	movf	(init_stepper@i+1)^0,w,c
  4920  002132  200A               	addwfc	(init_stepper@hex_coil_register_values+1)^0,w,c
  4921  002134  6EDA               	movwf	fsr2h,c
  4922  002136  500F               	movf	init_stepper@i^0,w,c
  4923  002138  2401               	addwf	init_stepper@stepper_motor^0,w,c
  4924  00213A  6E0D               	movwf	??_init_stepper^0,c
  4925  00213C  5010               	movf	(init_stepper@i+1)^0,w,c
  4926  00213E  2002               	addwfc	(init_stepper@stepper_motor+1)^0,w,c
  4927  002140  6E0E               	movwf	(??_init_stepper+1)^0,c
  4928  002142  0E06               	movlw	6
  4929  002144  240D               	addwf	??_init_stepper^0,w,c
  4930  002146  6EE1               	movwf	fsr1l,c
  4931  002148  0E00               	movlw	0
  4932  00214A  200E               	addwfc	(??_init_stepper+1)^0,w,c
  4933  00214C  6EE2               	movwf	fsr1h,c
  4934  00214E  CFDF FFE7          	movff	indf2,indf1
  4935  002152                     
  4936                           ;stepper_motor.c: 7:     }
  4937  002152  4A0F               	infsnz	init_stepper@i^0,f,c
  4938  002154  2A10               	incf	(init_stepper@i+1)^0,f,c
  4939  002156  BE10               	btfsc	(init_stepper@i+1)^0,7,c
  4940  002158  EFB7  F010         	goto	u2761
  4941  00215C  5010               	movf	(init_stepper@i+1)^0,w,c
  4942  00215E  E10A               	bnz	u2760
  4943  002160  0E04               	movlw	4
  4944  002162  5C0F               	subwf	init_stepper@i^0,w,c
  4945  002164  A0D8               	btfss	status,0,c
  4946  002166  EFB7  F010         	goto	u2761
  4947  00216A  EFBA  F010         	goto	u2760
  4948  00216E                     u2761:
  4949  00216E  FFFF               	dw	65535	; assembler added errata NOP
  4950  002170  EF94  F010         	goto	l2840
  4951  002174                     u2760:
  4952  002174  FFFF               	dw	65535	; assembler added errata NOP
  4953  002176                     
  4954                           ;stepper_motor.c: 8:     stepper_motor -> current_coil = current_coil;
  4955  002176  C001  FFD9         	movff	init_stepper@stepper_motor,fsr2l
  4956  00217A  C002  FFDA         	movff	init_stepper@stepper_motor+1,fsr2h
  4957  00217E  C003  FFDE         	movff	init_stepper@current_coil,postinc2
  4958  002182  C004  FFDD         	movff	init_stepper@current_coil+1,postdec2
  4959  002186                     
  4960                           ;stepper_motor.c: 9:     stepper_motor -> step_counter = step_counter;
  4961  002186  EE20 F002          	lfsr	2,2
  4962  00218A  5001               	movf	init_stepper@stepper_motor^0,w,c
  4963  00218C  26D9               	addwf	fsr2l,f,c
  4964  00218E  5002               	movf	(init_stepper@stepper_motor+1)^0,w,c
  4965  002190  22DA               	addwfc	fsr2h,f,c
  4966  002192  C005  FFDE         	movff	init_stepper@step_counter,postinc2
  4967  002196  C006  FFDD         	movff	init_stepper@step_counter+1,postdec2
  4968  00219A                     
  4969                           ;stepper_motor.c: 10:     stepper_motor -> direction = direction;
  4970  00219A  EE20 F004          	lfsr	2,4
  4971  00219E  5001               	movf	init_stepper@stepper_motor^0,w,c
  4972  0021A0  26D9               	addwf	fsr2l,f,c
  4973  0021A2  5002               	movf	(init_stepper@stepper_motor+1)^0,w,c
  4974  0021A4  22DA               	addwfc	fsr2h,f,c
  4975  0021A6  C007  FFDE         	movff	init_stepper@direction,postinc2
  4976  0021AA  C008  FFDD         	movff	init_stepper@direction+1,postdec2
  4977  0021AE                     
  4978                           ;stepper_motor.c: 11:     stepper_motor -> register_name = register_name;
  4979  0021AE  EE20 F00A          	lfsr	2,10
  4980  0021B2  5001               	movf	init_stepper@stepper_motor^0,w,c
  4981  0021B4  26D9               	addwf	fsr2l,f,c
  4982  0021B6  5002               	movf	(init_stepper@stepper_motor+1)^0,w,c
  4983  0021B8  22DA               	addwfc	fsr2h,f,c
  4984  0021BA  C00B  FFDE         	movff	init_stepper@register_name,postinc2
  4985  0021BE  C00C  FFDD         	movff	init_stepper@register_name+1,postdec2
  4986  0021C2  0012               	return		;funcret
  4987  0021C4  FFFF               	dw	65535	; errata NOP
  4988  0021C6                     __end_of_init_stepper:
  4989                           	callstack 0
  4990                           
  4991 ;; *************** function _init_interrupts *****************
  4992 ;; Defined at:
  4993 ;;		line 80 in file "init_PIC.c"
  4994 ;; Parameters:    Size  Location     Type
  4995 ;;		None
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;		None
  4998 ;; Return value:  Size  Location     Type
  4999 ;;                  1    wreg      void 
  5000 ;; Registers used:
  5001 ;;		None
  5002 ;; Tracked objects:
  5003 ;;		On entry : 0/0
  5004 ;;		On exit  : 0/0
  5005 ;;		Unchanged: 0/0
  5006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5007 ;;      Params:         0       0       0       0       0       0       0
  5008 ;;      Locals:         0       0       0       0       0       0       0
  5009 ;;      Temps:          0       0       0       0       0       0       0
  5010 ;;      Totals:         0       0       0       0       0       0       0
  5011 ;;Total ram usage:        0 bytes
  5012 ;; Hardware stack levels used:    1
  5013 ;; Hardware stack levels required when called:    1
  5014 ;; This function calls:
  5015 ;;		Nothing
  5016 ;; This function is called by:
  5017 ;;		_main
  5018 ;; This function uses a non-reentrant model
  5019 ;;
  5020                           
  5021                           	psect	text18
  5022  0027E0                     __ptext18:
  5023                           	callstack 0
  5024  0027E0                     _init_interrupts:
  5025                           	callstack 0
  5026  0027E0  FFFF               	dw	65535	; assembler added errata NOP
  5027  0027E2                     
  5028                           ;init_PIC.c: 82:     PIR1bits.RCIF = 0;
  5029  0027E2  9A9E               	bcf	158,5,c	;volatile
  5030                           
  5031                           ;init_PIC.c: 83:     PIE1bits.RCIE = 1;
  5032  0027E4  8A9D               	bsf	157,5,c	;volatile
  5033                           
  5034                           ;init_PIC.c: 84:     INTCONbits.PEIE = 1;
  5035  0027E6  8CF2               	bsf	242,6,c	;volatile
  5036  0027E8  0012               	return		;funcret
  5037  0027EA  FFFF               	dw	65535	; errata NOP
  5038  0027EC                     __end_of_init_interrupts:
  5039                           	callstack 0
  5040                           
  5041 ;; *************** function _init_USART *****************
  5042 ;; Defined at:
  5043 ;;		line 13 in file "serial_rs232.c"
  5044 ;; Parameters:    Size  Location     Type
  5045 ;;		None
  5046 ;; Auto vars:     Size  Location     Type
  5047 ;;		None
  5048 ;; Return value:  Size  Location     Type
  5049 ;;                  1    wreg      void 
  5050 ;; Registers used:
  5051 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5052 ;; Tracked objects:
  5053 ;;		On entry : 0/0
  5054 ;;		On exit  : 0/0
  5055 ;;		Unchanged: 0/0
  5056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5057 ;;      Params:         0       0       0       0       0       0       0
  5058 ;;      Locals:         0       0       0       0       0       0       0
  5059 ;;      Temps:          0       0       0       0       0       0       0
  5060 ;;      Totals:         0       0       0       0       0       0       0
  5061 ;;Total ram usage:        0 bytes
  5062 ;; Hardware stack levels used:    1
  5063 ;; Hardware stack levels required when called:    4
  5064 ;; This function calls:
  5065 ;;		___fltol
  5066 ;;		_roundf
  5067 ;; This function is called by:
  5068 ;;		_main
  5069 ;; This function uses a non-reentrant model
  5070 ;;
  5071                           
  5072                           	psect	text19
  5073  0025F2                     __ptext19:
  5074                           	callstack 0
  5075  0025F2                     _init_USART:
  5076                           	callstack 0
  5077  0025F2  FFFF               	dw	65535	; assembler added errata NOP
  5078  0025F4                     
  5079                           ;serial_rs232.c: 24:     SPBRG = roundf(((fosc / desired_baudrate) / 16) - 1);
  5080  0025F4  0E55               	movlw	85
  5081  0025F6  6E4C               	movwf	roundf@x^0,c
  5082  0025F8  0E55               	movlw	85
  5083  0025FA  6E4D               	movwf	(roundf@x+1)^0,c
  5084  0025FC  0EC8               	movlw	200
  5085  0025FE  6E4E               	movwf	(roundf@x+2)^0,c
  5086  002600  0E41               	movlw	65
  5087  002602  6E4F               	movwf	(roundf@x+3)^0,c
  5088  002604  EC0C  F00A         	call	_roundf	;wreg free
  5089  002608  C04C  F034         	movff	?_roundf,___fltol@f1
  5090  00260C  C04D  F035         	movff	?_roundf+1,___fltol@f1+1
  5091  002610  C04E  F036         	movff	?_roundf+2,___fltol@f1+2
  5092  002614  C04F  F037         	movff	?_roundf+3,___fltol@f1+3
  5093  002618  ECB2  F00D         	call	___fltol	;wreg free
  5094  00261C  5034               	movf	?___fltol^0,w,c
  5095  00261E  6EAF               	movwf	175,c	;volatile
  5096  002620                     
  5097                           ;serial_rs232.c: 28:     TXSTAbits.TX9 = 0;
  5098  002620  9CAC               	bcf	172,6,c	;volatile
  5099  002622                     
  5100                           ;serial_rs232.c: 29:     TXSTAbits.TXEN = 1;
  5101  002622  8AAC               	bsf	172,5,c	;volatile
  5102  002624                     
  5103                           ;serial_rs232.c: 30:     TXSTAbits.SYNC =0;
  5104  002624  98AC               	bcf	172,4,c	;volatile
  5105  002626                     
  5106                           ;serial_rs232.c: 31:     TXSTAbits.BRGH = 1;
  5107  002626  84AC               	bsf	172,2,c	;volatile
  5108  002628                     
  5109                           ;serial_rs232.c: 33:     RCSTAbits.SPEN = 1;
  5110  002628  8EAB               	bsf	171,7,c	;volatile
  5111  00262A                     
  5112                           ;serial_rs232.c: 34:     RCSTAbits.RX9 = 0;
  5113  00262A  9CAB               	bcf	171,6,c	;volatile
  5114  00262C                     
  5115                           ;serial_rs232.c: 35:     RCSTAbits.CREN = 1;
  5116  00262C  88AB               	bsf	171,4,c	;volatile
  5117  00262E  0012               	return		;funcret
  5118  002630  FFFF               	dw	65535	; errata NOP
  5119  002632                     __end_of_init_USART:
  5120                           	callstack 0
  5121                           
  5122 ;; *************** function _roundf *****************
  5123 ;; Defined at:
  5124 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\roundf.c"
  5125 ;; Parameters:    Size  Location     Type
  5126 ;;  x               4   75[COMRAM] float 
  5127 ;; Auto vars:     Size  Location     Type
  5128 ;;  y               4   97[COMRAM] float 
  5129 ;;  u               4   93[COMRAM] struct .
  5130 ;;  e               2   87[COMRAM] int 
  5131 ;; Return value:  Size  Location     Type
  5132 ;;                  4   75[COMRAM] float 
  5133 ;; Registers used:
  5134 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5135 ;; Tracked objects:
  5136 ;;		On entry : 0/0
  5137 ;;		On exit  : 0/0
  5138 ;;		Unchanged: 0/0
  5139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5140 ;;      Params:         4       0       0       0       0       0       0
  5141 ;;      Locals:        18       0       0       0       0       0       0
  5142 ;;      Temps:          4       0       0       0       0       0       0
  5143 ;;      Totals:        26       0       0       0       0       0       0
  5144 ;;Total ram usage:       26 bytes
  5145 ;; Hardware stack levels used:    1
  5146 ;; Hardware stack levels required when called:    3
  5147 ;; This function calls:
  5148 ;;		___fladd
  5149 ;;		___flge
  5150 ;;		___flmul
  5151 ;;		___flneg
  5152 ;;		___flsub
  5153 ;; This function is called by:
  5154 ;;		_init_USART
  5155 ;; This function uses a non-reentrant model
  5156 ;;
  5157                           
  5158                           	psect	text20
  5159  001418                     __ptext20:
  5160                           	callstack 0
  5161  001418                     _roundf:
  5162                           	callstack 0
  5163  001418  FFFF               	dw	65535	; assembler added errata NOP
  5164  00141A  C080  F05E         	movff	roundf@F525,roundf@u
  5165  00141E  C081  F05F         	movff	roundf@F525+1,roundf@u+1
  5166  001422  C082  F060         	movff	roundf@F525+2,roundf@u+2
  5167  001426  C083  F061         	movff	roundf@F525+3,roundf@u+3
  5168  00142A  C04C  F05E         	movff	roundf@x,roundf@u
  5169  00142E  C04D  F05F         	movff	roundf@x+1,roundf@u+1
  5170  001432  C04E  F060         	movff	roundf@x+2,roundf@u+2
  5171  001436  C04F  F061         	movff	roundf@x+3,roundf@u+3
  5172  00143A  C05E  F050         	movff	roundf@u,??_roundf
  5173  00143E  C05F  F051         	movff	roundf@u+1,??_roundf+1
  5174  001442  C060  F052         	movff	roundf@u+2,??_roundf+2
  5175  001446  C061  F053         	movff	roundf@u+3,??_roundf+3
  5176  00144A  0E18               	movlw	24
  5177  00144C  EF2E  F00A         	goto	u2550
  5178  001450                     u2555:
  5179  001450  FFFF               	dw	65535	; assembler added errata NOP
  5180  001452  90D8               	bcf	status,0,c
  5181  001454  3253               	rrcf	(??_roundf+3)^0,f,c
  5182  001456  3252               	rrcf	(??_roundf+2)^0,f,c
  5183  001458  3251               	rrcf	(??_roundf+1)^0,f,c
  5184  00145A  3250               	rrcf	??_roundf^0,f,c
  5185  00145C                     u2550:
  5186  00145C  FFFF               	dw	65535	; assembler added errata NOP
  5187  00145E  2EE8               	decfsz	wreg,f,c
  5188  001460  EF28  F00A         	goto	u2555
  5189  001464  5050               	movf	??_roundf^0,w,c
  5190  001466  6E58               	movwf	roundf@e^0,c
  5191  001468  6A59               	clrf	(roundf@e+1)^0,c
  5192  00146A  BE59               	btfsc	(roundf@e+1)^0,7,c
  5193  00146C  EF41  F00A         	goto	u2561
  5194  001470  5059               	movf	(roundf@e+1)^0,w,c
  5195  001472  E10A               	bnz	u2560
  5196  001474  0E96               	movlw	150
  5197  001476  5C58               	subwf	roundf@e^0,w,c
  5198  001478  A0D8               	btfss	status,0,c
  5199  00147A  EF41  F00A         	goto	u2561
  5200  00147E  EF44  F00A         	goto	u2560
  5201  001482                     u2561:
  5202  001482  FFFF               	dw	65535	; assembler added errata NOP
  5203  001484  EF4F  F00A         	goto	l2676
  5204  001488                     u2560:
  5205  001488  FFFF               	dw	65535	; assembler added errata NOP
  5206  00148A  C04C  F04C         	movff	roundf@x,?_roundf
  5207  00148E  C04D  F04D         	movff	roundf@x+1,?_roundf+1
  5208  001492  C04E  F04E         	movff	roundf@x+2,?_roundf+2
  5209  001496  C04F  F04F         	movff	roundf@x+3,?_roundf+3
  5210  00149A  EFFC  F00B         	goto	l1089
  5211  00149E                     l2676:
  5212  00149E  FFFF               	dw	65535	; assembler added errata NOP
  5213  0014A0  C05E  F050         	movff	roundf@u,??_roundf
  5214  0014A4  C05F  F051         	movff	roundf@u+1,??_roundf+1
  5215  0014A8  C060  F052         	movff	roundf@u+2,??_roundf+2
  5216  0014AC  C061  F053         	movff	roundf@u+3,??_roundf+3
  5217  0014B0  0E20               	movlw	32
  5218  0014B2  EF61  F00A         	goto	u2570
  5219  0014B6                     u2575:
  5220  0014B6  FFFF               	dw	65535	; assembler added errata NOP
  5221  0014B8  90D8               	bcf	status,0,c
  5222  0014BA  3253               	rrcf	(??_roundf+3)^0,f,c
  5223  0014BC  3252               	rrcf	(??_roundf+2)^0,f,c
  5224  0014BE  3251               	rrcf	(??_roundf+1)^0,f,c
  5225  0014C0  3250               	rrcf	??_roundf^0,f,c
  5226  0014C2                     u2570:
  5227  0014C2  FFFF               	dw	65535	; assembler added errata NOP
  5228  0014C4  2EE8               	decfsz	wreg,f,c
  5229  0014C6  EF5B  F00A         	goto	u2575
  5230  0014CA  5050               	movf	??_roundf^0,w,c
  5231  0014CC  1051               	iorwf	(??_roundf+1)^0,w,c
  5232  0014CE  1052               	iorwf	(??_roundf+2)^0,w,c
  5233  0014D0  1053               	iorwf	(??_roundf+3)^0,w,c
  5234  0014D2  B4D8               	btfsc	status,2,c
  5235  0014D4  EF6E  F00A         	goto	u2581
  5236  0014D8  EF71  F00A         	goto	u2580
  5237  0014DC                     u2581:
  5238  0014DC  FFFF               	dw	65535	; assembler added errata NOP
  5239  0014DE  EF84  F00A         	goto	l2680
  5240  0014E2                     u2580:
  5241  0014E2  FFFF               	dw	65535	; assembler added errata NOP
  5242  0014E4  C04C  F001         	movff	roundf@x,___flneg@f1
  5243  0014E8  C04D  F002         	movff	roundf@x+1,___flneg@f1+1
  5244  0014EC  C04E  F003         	movff	roundf@x+2,___flneg@f1+2
  5245  0014F0  C04F  F004         	movff	roundf@x+3,___flneg@f1+3
  5246  0014F4  ECD8  F012         	call	___flneg	;wreg free
  5247  0014F8  C001  F04C         	movff	?___flneg,roundf@x
  5248  0014FC  C002  F04D         	movff	?___flneg+1,roundf@x+1
  5249  001500  C003  F04E         	movff	?___flneg+2,roundf@x+2
  5250  001504  C004  F04F         	movff	?___flneg+3,roundf@x+3
  5251  001508                     l2680:
  5252  001508  FFFF               	dw	65535	; assembler added errata NOP
  5253  00150A  BE59               	btfsc	(roundf@e+1)^0,7,c
  5254  00150C  EF94  F00A         	goto	u2590
  5255  001510  5059               	movf	(roundf@e+1)^0,w,c
  5256  001512  E107               	bnz	u2591
  5257  001514  0E7E               	movlw	126
  5258  001516  5C58               	subwf	roundf@e^0,w,c
  5259  001518  B0D8               	btfsc	status,0,c
  5260  00151A  EF91  F00A         	goto	u2591
  5261  00151E  EF94  F00A         	goto	u2590
  5262  001522                     u2591:
  5263  001522  FFFF               	dw	65535	; assembler added errata NOP
  5264  001524  EFB1  F00A         	goto	l2686
  5265  001528                     u2590:
  5266  001528  FFFF               	dw	65535	; assembler added errata NOP
  5267  00152A  C05E  F01B         	movff	roundf@u,___flmul@b
  5268  00152E  C05F  F01C         	movff	roundf@u+1,___flmul@b+1
  5269  001532  C060  F01D         	movff	roundf@u+2,___flmul@b+2
  5270  001536  C061  F01E         	movff	roundf@u+3,___flmul@b+3
  5271  00153A  0E00               	movlw	0
  5272  00153C  6E1F               	movwf	___flmul@a^0,c
  5273  00153E  0E00               	movlw	0
  5274  001540  6E20               	movwf	(___flmul@a+1)^0,c
  5275  001542  0E00               	movlw	0
  5276  001544  6E21               	movwf	(___flmul@a+2)^0,c
  5277  001546  0E00               	movlw	0
  5278  001548  6E22               	movwf	(___flmul@a+3)^0,c
  5279  00154A  ECBA  F007         	call	___flmul	;wreg free
  5280  00154E  C01B  F04C         	movff	?___flmul,?_roundf
  5281  001552  C01C  F04D         	movff	?___flmul+1,?_roundf+1
  5282  001556  C01D  F04E         	movff	?___flmul+2,?_roundf+2
  5283  00155A  C01E  F04F         	movff	?___flmul+3,?_roundf+3
  5284  00155E  EFFC  F00B         	goto	l1089
  5285  001562                     l2686:
  5286  001562  FFFF               	dw	65535	; assembler added errata NOP
  5287  001564  0E00               	movlw	0
  5288  001566  6E05               	movwf	___fladd@a^0,c
  5289  001568  0E00               	movlw	0
  5290  00156A  6E06               	movwf	(___fladd@a+1)^0,c
  5291  00156C  0E00               	movlw	0
  5292  00156E  6E07               	movwf	(___fladd@a+2)^0,c
  5293  001570  0E4B               	movlw	75
  5294  001572  6E08               	movwf	(___fladd@a+3)^0,c
  5295  001574  C04C  F001         	movff	roundf@x,___fladd@b
  5296  001578  C04D  F002         	movff	roundf@x+1,___fladd@b+1
  5297  00157C  C04E  F003         	movff	roundf@x+2,___fladd@b+2
  5298  001580  C04F  F004         	movff	roundf@x+3,___fladd@b+3
  5299  001584  ECE6  F004         	call	___fladd	;wreg free
  5300  001588  C001  F05A         	movff	?___fladd,_roundf$1678
  5301  00158C  C002  F05B         	movff	?___fladd+1,_roundf$1678+1
  5302  001590  C003  F05C         	movff	?___fladd+2,_roundf$1678+2
  5303  001594  C004  F05D         	movff	?___fladd+3,_roundf$1678+3
  5304  001598  0E00               	movlw	0
  5305  00159A  6E05               	movwf	___fladd@a^0,c
  5306  00159C  0E00               	movlw	0
  5307  00159E  6E06               	movwf	(___fladd@a+1)^0,c
  5308  0015A0  0E00               	movlw	0
  5309  0015A2  6E07               	movwf	(___fladd@a+2)^0,c
  5310  0015A4  0ECB               	movlw	203
  5311  0015A6  6E08               	movwf	(___fladd@a+3)^0,c
  5312  0015A8  C05A  F001         	movff	_roundf$1678,___fladd@b
  5313  0015AC  C05B  F002         	movff	_roundf$1678+1,___fladd@b+1
  5314  0015B0  C05C  F003         	movff	_roundf$1678+2,___fladd@b+2
  5315  0015B4  C05D  F004         	movff	_roundf$1678+3,___fladd@b+3
  5316  0015B8  ECE6  F004         	call	___fladd	;wreg free
  5317  0015BC  C001  F054         	movff	?___fladd,_roundf$1679
  5318  0015C0  C002  F055         	movff	?___fladd+1,_roundf$1679+1
  5319  0015C4  C003  F056         	movff	?___fladd+2,_roundf$1679+2
  5320  0015C8  C004  F057         	movff	?___fladd+3,_roundf$1679+3
  5321  0015CC  C054  F011         	movff	_roundf$1679,___flsub@b
  5322  0015D0  C055  F012         	movff	_roundf$1679+1,___flsub@b+1
  5323  0015D4  C056  F013         	movff	_roundf$1679+2,___flsub@b+2
  5324  0015D8  C057  F014         	movff	_roundf$1679+3,___flsub@b+3
  5325  0015DC  C04C  F015         	movff	roundf@x,___flsub@a
  5326  0015E0  C04D  F016         	movff	roundf@x+1,___flsub@a+1
  5327  0015E4  C04E  F017         	movff	roundf@x+2,___flsub@a+2
  5328  0015E8  C04F  F018         	movff	roundf@x+3,___flsub@a+3
  5329  0015EC  EC90  F012         	call	___flsub	;wreg free
  5330  0015F0  C011  F062         	movff	?___flsub,roundf@y
  5331  0015F4  C012  F063         	movff	?___flsub+1,roundf@y+1
  5332  0015F8  C013  F064         	movff	?___flsub+2,roundf@y+2
  5333  0015FC  C014  F065         	movff	?___flsub+3,roundf@y+3
  5334  001600  0E00               	movlw	0
  5335  001602  6E40               	movwf	___flge@ff1^0,c
  5336  001604  0E00               	movlw	0
  5337  001606  6E41               	movwf	(___flge@ff1+1)^0,c
  5338  001608  0E00               	movlw	0
  5339  00160A  6E42               	movwf	(___flge@ff1+2)^0,c
  5340  00160C  0E3F               	movlw	63
  5341  00160E  6E43               	movwf	(___flge@ff1+3)^0,c
  5342  001610  C062  F044         	movff	roundf@y,___flge@ff2
  5343  001614  C063  F045         	movff	roundf@y+1,___flge@ff2+1
  5344  001618  C064  F046         	movff	roundf@y+2,___flge@ff2+2
  5345  00161C  C065  F047         	movff	roundf@y+3,___flge@ff2+3
  5346  001620  EC4D  F00E         	call	___flge	;wreg free
  5347  001624  B0D8               	btfsc	status,0,c
  5348  001626  EF17  F00B         	goto	u2601
  5349  00162A  EF1A  F00B         	goto	u2600
  5350  00162E                     u2601:
  5351  00162E  FFFF               	dw	65535	; assembler added errata NOP
  5352  001630  EF51  F00B         	goto	l2690
  5353  001634                     u2600:
  5354  001634  FFFF               	dw	65535	; assembler added errata NOP
  5355  001636  C04C  F005         	movff	roundf@x,___fladd@a
  5356  00163A  C04D  F006         	movff	roundf@x+1,___fladd@a+1
  5357  00163E  C04E  F007         	movff	roundf@x+2,___fladd@a+2
  5358  001642  C04F  F008         	movff	roundf@x+3,___fladd@a+3
  5359  001646  C062  F001         	movff	roundf@y,___fladd@b
  5360  00164A  C063  F002         	movff	roundf@y+1,___fladd@b+1
  5361  00164E  C064  F003         	movff	roundf@y+2,___fladd@b+2
  5362  001652  C065  F004         	movff	roundf@y+3,___fladd@b+3
  5363  001656  ECE6  F004         	call	___fladd	;wreg free
  5364  00165A  C001  F05A         	movff	?___fladd,_roundf$1678
  5365  00165E  C002  F05B         	movff	?___fladd+1,_roundf$1678+1
  5366  001662  C003  F05C         	movff	?___fladd+2,_roundf$1678+2
  5367  001666  C004  F05D         	movff	?___fladd+3,_roundf$1678+3
  5368  00166A  C05A  F001         	movff	_roundf$1678,___fladd@b
  5369  00166E  C05B  F002         	movff	_roundf$1678+1,___fladd@b+1
  5370  001672  C05C  F003         	movff	_roundf$1678+2,___fladd@b+2
  5371  001676  C05D  F004         	movff	_roundf$1678+3,___fladd@b+3
  5372  00167A  0E00               	movlw	0
  5373  00167C  6E05               	movwf	___fladd@a^0,c
  5374  00167E  0E00               	movlw	0
  5375  001680  6E06               	movwf	(___fladd@a+1)^0,c
  5376  001682  0E80               	movlw	128
  5377  001684  6E07               	movwf	(___fladd@a+2)^0,c
  5378  001686  0EBF               	movlw	191
  5379  001688  6E08               	movwf	(___fladd@a+3)^0,c
  5380  00168A  ECE6  F004         	call	___fladd	;wreg free
  5381  00168E  C001  F062         	movff	?___fladd,roundf@y
  5382  001692  C002  F063         	movff	?___fladd+1,roundf@y+1
  5383  001696  C003  F064         	movff	?___fladd+2,roundf@y+2
  5384  00169A  C004  F065         	movff	?___fladd+3,roundf@y+3
  5385  00169E  EFBE  F00B         	goto	l2696
  5386  0016A2                     l2690:
  5387  0016A2  FFFF               	dw	65535	; assembler added errata NOP
  5388  0016A4  0E00               	movlw	0
  5389  0016A6  6E40               	movwf	___flge@ff1^0,c
  5390  0016A8  0E00               	movlw	0
  5391  0016AA  6E41               	movwf	(___flge@ff1+1)^0,c
  5392  0016AC  0E00               	movlw	0
  5393  0016AE  6E42               	movwf	(___flge@ff1+2)^0,c
  5394  0016B0  0EBF               	movlw	191
  5395  0016B2  6E43               	movwf	(___flge@ff1+3)^0,c
  5396  0016B4  C062  F044         	movff	roundf@y,___flge@ff2
  5397  0016B8  C063  F045         	movff	roundf@y+1,___flge@ff2+1
  5398  0016BC  C064  F046         	movff	roundf@y+2,___flge@ff2+2
  5399  0016C0  C065  F047         	movff	roundf@y+3,___flge@ff2+3
  5400  0016C4  EC4D  F00E         	call	___flge	;wreg free
  5401  0016C8  A0D8               	btfss	status,0,c
  5402  0016CA  EF69  F00B         	goto	u2611
  5403  0016CE  EF6C  F00B         	goto	u2610
  5404  0016D2                     u2611:
  5405  0016D2  FFFF               	dw	65535	; assembler added errata NOP
  5406  0016D4  EFA3  F00B         	goto	l2694
  5407  0016D8                     u2610:
  5408  0016D8  FFFF               	dw	65535	; assembler added errata NOP
  5409  0016DA  C04C  F005         	movff	roundf@x,___fladd@a
  5410  0016DE  C04D  F006         	movff	roundf@x+1,___fladd@a+1
  5411  0016E2  C04E  F007         	movff	roundf@x+2,___fladd@a+2
  5412  0016E6  C04F  F008         	movff	roundf@x+3,___fladd@a+3
  5413  0016EA  C062  F001         	movff	roundf@y,___fladd@b
  5414  0016EE  C063  F002         	movff	roundf@y+1,___fladd@b+1
  5415  0016F2  C064  F003         	movff	roundf@y+2,___fladd@b+2
  5416  0016F6  C065  F004         	movff	roundf@y+3,___fladd@b+3
  5417  0016FA  ECE6  F004         	call	___fladd	;wreg free
  5418  0016FE  C001  F05A         	movff	?___fladd,_roundf$1678
  5419  001702  C002  F05B         	movff	?___fladd+1,_roundf$1678+1
  5420  001706  C003  F05C         	movff	?___fladd+2,_roundf$1678+2
  5421  00170A  C004  F05D         	movff	?___fladd+3,_roundf$1678+3
  5422  00170E  C05A  F001         	movff	_roundf$1678,___fladd@b
  5423  001712  C05B  F002         	movff	_roundf$1678+1,___fladd@b+1
  5424  001716  C05C  F003         	movff	_roundf$1678+2,___fladd@b+2
  5425  00171A  C05D  F004         	movff	_roundf$1678+3,___fladd@b+3
  5426  00171E  0E00               	movlw	0
  5427  001720  6E05               	movwf	___fladd@a^0,c
  5428  001722  0E00               	movlw	0
  5429  001724  6E06               	movwf	(___fladd@a+1)^0,c
  5430  001726  0E80               	movlw	128
  5431  001728  6E07               	movwf	(___fladd@a+2)^0,c
  5432  00172A  0E3F               	movlw	63
  5433  00172C  6E08               	movwf	(___fladd@a+3)^0,c
  5434  00172E  ECE6  F004         	call	___fladd	;wreg free
  5435  001732  C001  F062         	movff	?___fladd,roundf@y
  5436  001736  C002  F063         	movff	?___fladd+1,roundf@y+1
  5437  00173A  C003  F064         	movff	?___fladd+2,roundf@y+2
  5438  00173E  C004  F065         	movff	?___fladd+3,roundf@y+3
  5439  001742  EFBE  F00B         	goto	l2696
  5440  001746                     l2694:
  5441  001746  FFFF               	dw	65535	; assembler added errata NOP
  5442  001748  C062  F001         	movff	roundf@y,___fladd@b
  5443  00174C  C063  F002         	movff	roundf@y+1,___fladd@b+1
  5444  001750  C064  F003         	movff	roundf@y+2,___fladd@b+2
  5445  001754  C065  F004         	movff	roundf@y+3,___fladd@b+3
  5446  001758  C04C  F005         	movff	roundf@x,___fladd@a
  5447  00175C  C04D  F006         	movff	roundf@x+1,___fladd@a+1
  5448  001760  C04E  F007         	movff	roundf@x+2,___fladd@a+2
  5449  001764  C04F  F008         	movff	roundf@x+3,___fladd@a+3
  5450  001768  ECE6  F004         	call	___fladd	;wreg free
  5451  00176C  C001  F062         	movff	?___fladd,roundf@y
  5452  001770  C002  F063         	movff	?___fladd+1,roundf@y+1
  5453  001774  C003  F064         	movff	?___fladd+2,roundf@y+2
  5454  001778  C004  F065         	movff	?___fladd+3,roundf@y+3
  5455  00177C                     l2696:
  5456  00177C  FFFF               	dw	65535	; assembler added errata NOP
  5457  00177E  C05E  F050         	movff	roundf@u,??_roundf
  5458  001782  C05F  F051         	movff	roundf@u+1,??_roundf+1
  5459  001786  C060  F052         	movff	roundf@u+2,??_roundf+2
  5460  00178A  C061  F053         	movff	roundf@u+3,??_roundf+3
  5461  00178E  0E20               	movlw	32
  5462  001790  EFD0  F00B         	goto	u2620
  5463  001794                     u2625:
  5464  001794  FFFF               	dw	65535	; assembler added errata NOP
  5465  001796  90D8               	bcf	status,0,c
  5466  001798  3253               	rrcf	(??_roundf+3)^0,f,c
  5467  00179A  3252               	rrcf	(??_roundf+2)^0,f,c
  5468  00179C  3251               	rrcf	(??_roundf+1)^0,f,c
  5469  00179E  3250               	rrcf	??_roundf^0,f,c
  5470  0017A0                     u2620:
  5471  0017A0  FFFF               	dw	65535	; assembler added errata NOP
  5472  0017A2  2EE8               	decfsz	wreg,f,c
  5473  0017A4  EFCA  F00B         	goto	u2625
  5474  0017A8  5050               	movf	??_roundf^0,w,c
  5475  0017AA  1051               	iorwf	(??_roundf+1)^0,w,c
  5476  0017AC  1052               	iorwf	(??_roundf+2)^0,w,c
  5477  0017AE  1053               	iorwf	(??_roundf+3)^0,w,c
  5478  0017B0  B4D8               	btfsc	status,2,c
  5479  0017B2  EFDD  F00B         	goto	u2631
  5480  0017B6  EFE0  F00B         	goto	u2630
  5481  0017BA                     u2631:
  5482  0017BA  FFFF               	dw	65535	; assembler added errata NOP
  5483  0017BC  EFF3  F00B         	goto	l2700
  5484  0017C0                     u2630:
  5485  0017C0  FFFF               	dw	65535	; assembler added errata NOP
  5486  0017C2  C062  F001         	movff	roundf@y,___flneg@f1
  5487  0017C6  C063  F002         	movff	roundf@y+1,___flneg@f1+1
  5488  0017CA  C064  F003         	movff	roundf@y+2,___flneg@f1+2
  5489  0017CE  C065  F004         	movff	roundf@y+3,___flneg@f1+3
  5490  0017D2  ECD8  F012         	call	___flneg	;wreg free
  5491  0017D6  C001  F062         	movff	?___flneg,roundf@y
  5492  0017DA  C002  F063         	movff	?___flneg+1,roundf@y+1
  5493  0017DE  C003  F064         	movff	?___flneg+2,roundf@y+2
  5494  0017E2  C004  F065         	movff	?___flneg+3,roundf@y+3
  5495  0017E6                     l2700:
  5496  0017E6  FFFF               	dw	65535	; assembler added errata NOP
  5497  0017E8  C062  F04C         	movff	roundf@y,?_roundf
  5498  0017EC  C063  F04D         	movff	roundf@y+1,?_roundf+1
  5499  0017F0  C064  F04E         	movff	roundf@y+2,?_roundf+2
  5500  0017F4  C065  F04F         	movff	roundf@y+3,?_roundf+3
  5501  0017F8                     l1089:
  5502  0017F8  FFFF               	dw	65535	; assembler added errata NOP
  5503  0017FA  0012               	return		;funcret
  5504  0017FC  FFFF               	dw	65535	; errata NOP
  5505  0017FE                     __end_of_roundf:
  5506                           	callstack 0
  5507                           
  5508 ;; *************** function ___flsub *****************
  5509 ;; Defined at:
  5510 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  5511 ;; Parameters:    Size  Location     Type
  5512 ;;  b               4   16[COMRAM] float 
  5513 ;;  a               4   20[COMRAM] float 
  5514 ;; Auto vars:     Size  Location     Type
  5515 ;;		None
  5516 ;; Return value:  Size  Location     Type
  5517 ;;                  4   16[COMRAM] float 
  5518 ;; Registers used:
  5519 ;;		wreg, status,2, status,0, cstack
  5520 ;; Tracked objects:
  5521 ;;		On entry : 0/0
  5522 ;;		On exit  : 0/0
  5523 ;;		Unchanged: 0/0
  5524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5525 ;;      Params:         8       0       0       0       0       0       0
  5526 ;;      Locals:         0       0       0       0       0       0       0
  5527 ;;      Temps:          0       0       0       0       0       0       0
  5528 ;;      Totals:         8       0       0       0       0       0       0
  5529 ;;Total ram usage:        8 bytes
  5530 ;; Hardware stack levels used:    1
  5531 ;; Hardware stack levels required when called:    2
  5532 ;; This function calls:
  5533 ;;		___fladd
  5534 ;; This function is called by:
  5535 ;;		_roundf
  5536 ;; This function uses a non-reentrant model
  5537 ;;
  5538                           
  5539                           	psect	text21
  5540  002520                     __ptext21:
  5541                           	callstack 0
  5542  002520                     ___flsub:
  5543                           	callstack 0
  5544  002520  FFFF               	dw	65535	; assembler added errata NOP
  5545  002522  0E00               	movlw	0
  5546  002524  1A15               	xorwf	___flsub@a^0,f,c
  5547  002526  0E00               	movlw	0
  5548  002528  1A16               	xorwf	(___flsub@a+1)^0,f,c
  5549  00252A  0E00               	movlw	0
  5550  00252C  1A17               	xorwf	(___flsub@a+2)^0,f,c
  5551  00252E  0E80               	movlw	128
  5552  002530  1A18               	xorwf	(___flsub@a+3)^0,f,c
  5553  002532  C011  F001         	movff	___flsub@b,___fladd@b
  5554  002536  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  5555  00253A  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  5556  00253E  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  5557  002542  C015  F005         	movff	___flsub@a,___fladd@a
  5558  002546  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  5559  00254A  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  5560  00254E  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  5561  002552  ECE6  F004         	call	___fladd	;wreg free
  5562  002556  C001  F011         	movff	?___fladd,?___flsub
  5563  00255A  C002  F012         	movff	?___fladd+1,?___flsub+1
  5564  00255E  C003  F013         	movff	?___fladd+2,?___flsub+2
  5565  002562  C004  F014         	movff	?___fladd+3,?___flsub+3
  5566  002566  0012               	return		;funcret
  5567  002568  FFFF               	dw	65535	; errata NOP
  5568  00256A                     __end_of___flsub:
  5569                           	callstack 0
  5570                           
  5571 ;; *************** function ___fladd *****************
  5572 ;; Defined at:
  5573 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  5574 ;; Parameters:    Size  Location     Type
  5575 ;;  b               4    0[COMRAM] float 
  5576 ;;  a               4    4[COMRAM] float 
  5577 ;; Auto vars:     Size  Location     Type
  5578 ;;  grs             1   15[COMRAM] unsigned char 
  5579 ;;  bexp            1   14[COMRAM] unsigned char 
  5580 ;;  aexp            1   13[COMRAM] unsigned char 
  5581 ;;  signs           1   12[COMRAM] unsigned char 
  5582 ;; Return value:  Size  Location     Type
  5583 ;;                  4    0[COMRAM] unsigned char 
  5584 ;; Registers used:
  5585 ;;		wreg, status,2, status,0
  5586 ;; Tracked objects:
  5587 ;;		On entry : 0/0
  5588 ;;		On exit  : 0/0
  5589 ;;		Unchanged: 0/0
  5590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5591 ;;      Params:         8       0       0       0       0       0       0
  5592 ;;      Locals:         4       0       0       0       0       0       0
  5593 ;;      Temps:          4       0       0       0       0       0       0
  5594 ;;      Totals:        16       0       0       0       0       0       0
  5595 ;;Total ram usage:       16 bytes
  5596 ;; Hardware stack levels used:    1
  5597 ;; Hardware stack levels required when called:    1
  5598 ;; This function calls:
  5599 ;;		Nothing
  5600 ;; This function is called by:
  5601 ;;		___flsub
  5602 ;;		_roundf
  5603 ;; This function uses a non-reentrant model
  5604 ;;
  5605                           
  5606                           	psect	text22
  5607  0009CC                     __ptext22:
  5608                           	callstack 0
  5609  0009CC                     ___fladd:
  5610                           	callstack 0
  5611  0009CC  FFFF               	dw	65535	; assembler added errata NOP
  5612  0009CE  5004               	movf	(___fladd@b+3)^0,w,c
  5613  0009D0  0B80               	andlw	128
  5614  0009D2  6E0D               	movwf	___fladd@signs^0,c
  5615  0009D4  5004               	movf	(___fladd@b+3)^0,w,c
  5616  0009D6  2404               	addwf	(___fladd@b+3)^0,w,c
  5617  0009D8  6E0F               	movwf	___fladd@bexp^0,c
  5618  0009DA  AE03               	btfss	(___fladd@b+2)^0,7,c
  5619  0009DC  EFF2  F004         	goto	u1741
  5620  0009E0  EFF5  F004         	goto	u1740
  5621  0009E4                     u1741:
  5622  0009E4  FFFF               	dw	65535	; assembler added errata NOP
  5623  0009E6  EFF7  F004         	goto	l2204
  5624  0009EA                     u1740:
  5625  0009EA  FFFF               	dw	65535	; assembler added errata NOP
  5626  0009EC  800F               	bsf	___fladd@bexp^0,0,c
  5627  0009EE                     l2204:
  5628  0009EE  FFFF               	dw	65535	; assembler added errata NOP
  5629  0009F0  500F               	movf	___fladd@bexp^0,w,c
  5630  0009F2  B4D8               	btfsc	status,2,c
  5631  0009F4  EFFE  F004         	goto	u1751
  5632  0009F8  EF01  F005         	goto	u1750
  5633  0009FC                     u1751:
  5634  0009FC  FFFF               	dw	65535	; assembler added errata NOP
  5635  0009FE  EF1A  F005         	goto	l2214
  5636  000A02                     u1750:
  5637  000A02  FFFF               	dw	65535	; assembler added errata NOP
  5638  000A04  280F               	incf	___fladd@bexp^0,w,c
  5639  000A06  A4D8               	btfss	status,2,c
  5640  000A08  EF08  F005         	goto	u1761
  5641  000A0C  EF0B  F005         	goto	u1760
  5642  000A10                     u1761:
  5643  000A10  FFFF               	dw	65535	; assembler added errata NOP
  5644  000A12  EF14  F005         	goto	l2210
  5645  000A16                     u1760:
  5646  000A16  FFFF               	dw	65535	; assembler added errata NOP
  5647  000A18  0E00               	movlw	0
  5648  000A1A  6E01               	movwf	___fladd@b^0,c
  5649  000A1C  0E00               	movlw	0
  5650  000A1E  6E02               	movwf	(___fladd@b+1)^0,c
  5651  000A20  0E00               	movlw	0
  5652  000A22  6E03               	movwf	(___fladd@b+2)^0,c
  5653  000A24  0E00               	movlw	0
  5654  000A26  6E04               	movwf	(___fladd@b+3)^0,c
  5655  000A28                     l2210:
  5656  000A28  FFFF               	dw	65535	; assembler added errata NOP
  5657  000A2A  8E03               	bsf	(___fladd@b+2)^0,7,c
  5658  000A2C  0E00               	movlw	0
  5659  000A2E  6E04               	movwf	(___fladd@b+3)^0,c
  5660  000A30  EF23  F005         	goto	l2216
  5661  000A34                     l2214:
  5662  000A34  FFFF               	dw	65535	; assembler added errata NOP
  5663  000A36  0E00               	movlw	0
  5664  000A38  6E01               	movwf	___fladd@b^0,c
  5665  000A3A  0E00               	movlw	0
  5666  000A3C  6E02               	movwf	(___fladd@b+1)^0,c
  5667  000A3E  0E00               	movlw	0
  5668  000A40  6E03               	movwf	(___fladd@b+2)^0,c
  5669  000A42  0E00               	movlw	0
  5670  000A44  6E04               	movwf	(___fladd@b+3)^0,c
  5671  000A46                     l2216:
  5672  000A46  FFFF               	dw	65535	; assembler added errata NOP
  5673  000A48  5008               	movf	(___fladd@a+3)^0,w,c
  5674  000A4A  0B80               	andlw	128
  5675  000A4C  6E0E               	movwf	___fladd@aexp^0,c
  5676  000A4E  500D               	movf	___fladd@signs^0,w,c
  5677  000A50  180E               	xorwf	___fladd@aexp^0,w,c
  5678  000A52  B4D8               	btfsc	status,2,c
  5679  000A54  EF2E  F005         	goto	u1771
  5680  000A58  EF31  F005         	goto	u1770
  5681  000A5C                     u1771:
  5682  000A5C  FFFF               	dw	65535	; assembler added errata NOP
  5683  000A5E  EF33  F005         	goto	l2222
  5684  000A62                     u1770:
  5685  000A62  FFFF               	dw	65535	; assembler added errata NOP
  5686  000A64  8C0D               	bsf	___fladd@signs^0,6,c
  5687  000A66                     l2222:
  5688  000A66  FFFF               	dw	65535	; assembler added errata NOP
  5689  000A68  5008               	movf	(___fladd@a+3)^0,w,c
  5690  000A6A  2408               	addwf	(___fladd@a+3)^0,w,c
  5691  000A6C  6E0E               	movwf	___fladd@aexp^0,c
  5692  000A6E  AE07               	btfss	(___fladd@a+2)^0,7,c
  5693  000A70  EF3C  F005         	goto	u1781
  5694  000A74  EF3F  F005         	goto	u1780
  5695  000A78                     u1781:
  5696  000A78  FFFF               	dw	65535	; assembler added errata NOP
  5697  000A7A  EF41  F005         	goto	l2228
  5698  000A7E                     u1780:
  5699  000A7E  FFFF               	dw	65535	; assembler added errata NOP
  5700  000A80  800E               	bsf	___fladd@aexp^0,0,c
  5701  000A82                     l2228:
  5702  000A82  FFFF               	dw	65535	; assembler added errata NOP
  5703  000A84  500E               	movf	___fladd@aexp^0,w,c
  5704  000A86  B4D8               	btfsc	status,2,c
  5705  000A88  EF48  F005         	goto	u1791
  5706  000A8C  EF4B  F005         	goto	u1790
  5707  000A90                     u1791:
  5708  000A90  FFFF               	dw	65535	; assembler added errata NOP
  5709  000A92  EF64  F005         	goto	l2238
  5710  000A96                     u1790:
  5711  000A96  FFFF               	dw	65535	; assembler added errata NOP
  5712  000A98  280E               	incf	___fladd@aexp^0,w,c
  5713  000A9A  A4D8               	btfss	status,2,c
  5714  000A9C  EF52  F005         	goto	u1801
  5715  000AA0  EF55  F005         	goto	u1800
  5716  000AA4                     u1801:
  5717  000AA4  FFFF               	dw	65535	; assembler added errata NOP
  5718  000AA6  EF5E  F005         	goto	l2234
  5719  000AAA                     u1800:
  5720  000AAA  FFFF               	dw	65535	; assembler added errata NOP
  5721  000AAC  0E00               	movlw	0
  5722  000AAE  6E05               	movwf	___fladd@a^0,c
  5723  000AB0  0E00               	movlw	0
  5724  000AB2  6E06               	movwf	(___fladd@a+1)^0,c
  5725  000AB4  0E00               	movlw	0
  5726  000AB6  6E07               	movwf	(___fladd@a+2)^0,c
  5727  000AB8  0E00               	movlw	0
  5728  000ABA  6E08               	movwf	(___fladd@a+3)^0,c
  5729  000ABC                     l2234:
  5730  000ABC  FFFF               	dw	65535	; assembler added errata NOP
  5731  000ABE  8E07               	bsf	(___fladd@a+2)^0,7,c
  5732  000AC0  0E00               	movlw	0
  5733  000AC2  6E08               	movwf	(___fladd@a+3)^0,c
  5734  000AC4  EF6D  F005         	goto	l2240
  5735  000AC8                     l2238:
  5736  000AC8  FFFF               	dw	65535	; assembler added errata NOP
  5737  000ACA  0E00               	movlw	0
  5738  000ACC  6E05               	movwf	___fladd@a^0,c
  5739  000ACE  0E00               	movlw	0
  5740  000AD0  6E06               	movwf	(___fladd@a+1)^0,c
  5741  000AD2  0E00               	movlw	0
  5742  000AD4  6E07               	movwf	(___fladd@a+2)^0,c
  5743  000AD6  0E00               	movlw	0
  5744  000AD8  6E08               	movwf	(___fladd@a+3)^0,c
  5745  000ADA                     l2240:
  5746  000ADA  FFFF               	dw	65535	; assembler added errata NOP
  5747  000ADC  500F               	movf	___fladd@bexp^0,w,c
  5748  000ADE  5C0E               	subwf	___fladd@aexp^0,w,c
  5749  000AE0  B0D8               	btfsc	status,0,c
  5750  000AE2  EF75  F005         	goto	u1811
  5751  000AE6  EF78  F005         	goto	u1810
  5752  000AEA                     u1811:
  5753  000AEA  FFFF               	dw	65535	; assembler added errata NOP
  5754  000AEC  EFA3  F005         	goto	l2276
  5755  000AF0                     u1810:
  5756  000AF0  FFFF               	dw	65535	; assembler added errata NOP
  5757  000AF2  AC0D               	btfss	___fladd@signs^0,6,c
  5758  000AF4  EF7E  F005         	goto	u1821
  5759  000AF8  EF81  F005         	goto	u1820
  5760  000AFC                     u1821:
  5761  000AFC  FFFF               	dw	65535	; assembler added errata NOP
  5762  000AFE  EF84  F005         	goto	l2246
  5763  000B02                     u1820:
  5764  000B02  FFFF               	dw	65535	; assembler added errata NOP
  5765  000B04  0E80               	movlw	128
  5766  000B06  1A0D               	xorwf	___fladd@signs^0,f,c
  5767  000B08                     l2246:
  5768  000B08  FFFF               	dw	65535	; assembler added errata NOP
  5769  000B0A  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5770  000B0E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5771  000B12  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5772  000B16  C001  F010         	movff	___fladd@b,___fladd@grs
  5773  000B1A  C005  F001         	movff	___fladd@a,___fladd@b
  5774  000B1E  C010  F005         	movff	___fladd@grs,___fladd@a
  5775  000B22  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5776  000B26  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5777  000B2A  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5778  000B2E  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5779  000B32  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5780  000B36  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5781  000B3A  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5782  000B3E  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5783  000B42  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5784  000B46                     l2276:
  5785  000B46  FFFF               	dw	65535	; assembler added errata NOP
  5786  000B48  0E00               	movlw	0
  5787  000B4A  6E10               	movwf	___fladd@grs^0,c
  5788  000B4C  500F               	movf	___fladd@bexp^0,w,c
  5789  000B4E  C00E  F009         	movff	___fladd@aexp,??___fladd
  5790  000B52  6A0A               	clrf	(??___fladd+1)^0,c
  5791  000B54  5E09               	subwf	??___fladd^0,f,c
  5792  000B56  0E00               	movlw	0
  5793  000B58  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5794  000B5A  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5795  000B5C  EFB9  F005         	goto	u1831
  5796  000B60  500A               	movf	(??___fladd+1)^0,w,c
  5797  000B62  E10A               	bnz	u1830
  5798  000B64  0E1A               	movlw	26
  5799  000B66  5C09               	subwf	??___fladd^0,w,c
  5800  000B68  A0D8               	btfss	status,0,c
  5801  000B6A  EFB9  F005         	goto	u1831
  5802  000B6E  EFBC  F005         	goto	u1830
  5803  000B72                     u1831:
  5804  000B72  FFFF               	dw	65535	; assembler added errata NOP
  5805  000B74  EFFF  F005         	goto	l932
  5806  000B78                     u1830:
  5807  000B78  FFFF               	dw	65535	; assembler added errata NOP
  5808  000B7A  5001               	movf	___fladd@b^0,w,c
  5809  000B7C  1002               	iorwf	(___fladd@b+1)^0,w,c
  5810  000B7E  1003               	iorwf	(___fladd@b+2)^0,w,c
  5811  000B80  1004               	iorwf	(___fladd@b+3)^0,w,c
  5812  000B82  A4D8               	btfss	status,2,c
  5813  000B84  EFC6  F005         	goto	u1841
  5814  000B88  EFCA  F005         	goto	u1840
  5815  000B8C                     u1841:
  5816  000B8C  FFFF               	dw	65535	; assembler added errata NOP
  5817  000B8E  0E01               	movlw	1
  5818  000B90  EFCC  F005         	goto	u1850
  5819  000B94                     u1840:
  5820  000B94  FFFF               	dw	65535	; assembler added errata NOP
  5821  000B96  0E00               	movlw	0
  5822  000B98                     u1850:
  5823  000B98  FFFF               	dw	65535	; assembler added errata NOP
  5824  000B9A  6E10               	movwf	___fladd@grs^0,c
  5825  000B9C  0E00               	movlw	0
  5826  000B9E  6E01               	movwf	___fladd@b^0,c
  5827  000BA0  0E00               	movlw	0
  5828  000BA2  6E02               	movwf	(___fladd@b+1)^0,c
  5829  000BA4  0E00               	movlw	0
  5830  000BA6  6E03               	movwf	(___fladd@b+2)^0,c
  5831  000BA8  0E00               	movlw	0
  5832  000BAA  6E04               	movwf	(___fladd@b+3)^0,c
  5833  000BAC  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5834  000BB0  EF0A  F006         	goto	l931
  5835  000BB4                     l933:
  5836  000BB4  FFFF               	dw	65535	; assembler added errata NOP
  5837  000BB6  A010               	btfss	___fladd@grs^0,0,c
  5838  000BB8  EFE0  F005         	goto	u1861
  5839  000BBC  EFE3  F005         	goto	u1860
  5840  000BC0                     u1861:
  5841  000BC0  FFFF               	dw	65535	; assembler added errata NOP
  5842  000BC2  EFEA  F005         	goto	l2288
  5843  000BC6                     u1860:
  5844  000BC6  FFFF               	dw	65535	; assembler added errata NOP
  5845  000BC8  90D8               	bcf	status,0,c
  5846  000BCA  3010               	rrcf	___fladd@grs^0,w,c
  5847  000BCC  0901               	iorlw	1
  5848  000BCE  6E10               	movwf	___fladd@grs^0,c
  5849  000BD0  EFED  F005         	goto	l2290
  5850  000BD4                     l2288:
  5851  000BD4  FFFF               	dw	65535	; assembler added errata NOP
  5852  000BD6  90D8               	bcf	status,0,c
  5853  000BD8  3210               	rrcf	___fladd@grs^0,f,c
  5854  000BDA                     l2290:
  5855  000BDA  FFFF               	dw	65535	; assembler added errata NOP
  5856  000BDC  A001               	btfss	___fladd@b^0,0,c
  5857  000BDE  EFF3  F005         	goto	u1871
  5858  000BE2  EFF6  F005         	goto	u1870
  5859  000BE6                     u1871:
  5860  000BE6  FFFF               	dw	65535	; assembler added errata NOP
  5861  000BE8  EFF8  F005         	goto	l2294
  5862  000BEC                     u1870:
  5863  000BEC  FFFF               	dw	65535	; assembler added errata NOP
  5864  000BEE  8E10               	bsf	___fladd@grs^0,7,c
  5865  000BF0                     l2294:
  5866  000BF0  FFFF               	dw	65535	; assembler added errata NOP
  5867  000BF2  3404               	rlcf	(___fladd@b+3)^0,w,c
  5868  000BF4  3204               	rrcf	(___fladd@b+3)^0,f,c
  5869  000BF6  3203               	rrcf	(___fladd@b+2)^0,f,c
  5870  000BF8  3202               	rrcf	(___fladd@b+1)^0,f,c
  5871  000BFA  3201               	rrcf	___fladd@b^0,f,c
  5872  000BFC  2A0F               	incf	___fladd@bexp^0,f,c
  5873  000BFE                     l932:
  5874  000BFE  FFFF               	dw	65535	; assembler added errata NOP
  5875  000C00  500E               	movf	___fladd@aexp^0,w,c
  5876  000C02  5C0F               	subwf	___fladd@bexp^0,w,c
  5877  000C04  A0D8               	btfss	status,0,c
  5878  000C06  EF07  F006         	goto	u1881
  5879  000C0A  EF0A  F006         	goto	u1880
  5880  000C0E                     u1881:
  5881  000C0E  FFFF               	dw	65535	; assembler added errata NOP
  5882  000C10  EFDA  F005         	goto	l933
  5883  000C14                     u1880:
  5884  000C14                     l931:
  5885  000C14  FFFF               	dw	65535	; assembler added errata NOP
  5886  000C16  BC0D               	btfsc	___fladd@signs^0,6,c
  5887  000C18  EF10  F006         	goto	u1891
  5888  000C1C  EF13  F006         	goto	u1890
  5889  000C20                     u1891:
  5890  000C20  FFFF               	dw	65535	; assembler added errata NOP
  5891  000C22  EF60  F006         	goto	l2322
  5892  000C26                     u1890:
  5893  000C26  FFFF               	dw	65535	; assembler added errata NOP
  5894  000C28  500F               	movf	___fladd@bexp^0,w,c
  5895  000C2A  A4D8               	btfss	status,2,c
  5896  000C2C  EF1A  F006         	goto	u1901
  5897  000C30  EF1D  F006         	goto	u1900
  5898  000C34                     u1901:
  5899  000C34  FFFF               	dw	65535	; assembler added errata NOP
  5900  000C36  EF28  F006         	goto	l2304
  5901  000C3A                     u1900:
  5902  000C3A  FFFF               	dw	65535	; assembler added errata NOP
  5903  000C3C  0E00               	movlw	0
  5904  000C3E  6E01               	movwf	?___fladd^0,c
  5905  000C40  0E00               	movlw	0
  5906  000C42  6E02               	movwf	(?___fladd+1)^0,c
  5907  000C44  0E00               	movlw	0
  5908  000C46  6E03               	movwf	(?___fladd+2)^0,c
  5909  000C48  0E00               	movlw	0
  5910  000C4A  6E04               	movwf	(?___fladd+3)^0,c
  5911  000C4C  EFB7  F007         	goto	l940
  5912  000C50                     l2304:
  5913  000C50  FFFF               	dw	65535	; assembler added errata NOP
  5914  000C52  5005               	movf	___fladd@a^0,w,c
  5915  000C54  2601               	addwf	___fladd@b^0,f,c
  5916  000C56  5006               	movf	(___fladd@a+1)^0,w,c
  5917  000C58  2202               	addwfc	(___fladd@b+1)^0,f,c
  5918  000C5A  5007               	movf	(___fladd@a+2)^0,w,c
  5919  000C5C  2203               	addwfc	(___fladd@b+2)^0,f,c
  5920  000C5E  5008               	movf	(___fladd@a+3)^0,w,c
  5921  000C60  2204               	addwfc	(___fladd@b+3)^0,f,c
  5922  000C62  A004               	btfss	(___fladd@b+3)^0,0,c
  5923  000C64  EF36  F006         	goto	u1911
  5924  000C68  EF39  F006         	goto	u1910
  5925  000C6C                     u1911:
  5926  000C6C  FFFF               	dw	65535	; assembler added errata NOP
  5927  000C6E  EF04  F007         	goto	l2358
  5928  000C72                     u1910:
  5929  000C72  FFFF               	dw	65535	; assembler added errata NOP
  5930  000C74  A010               	btfss	___fladd@grs^0,0,c
  5931  000C76  EF3F  F006         	goto	u1921
  5932  000C7A  EF42  F006         	goto	u1920
  5933  000C7E                     u1921:
  5934  000C7E  FFFF               	dw	65535	; assembler added errata NOP
  5935  000C80  EF49  F006         	goto	l2312
  5936  000C84                     u1920:
  5937  000C84  FFFF               	dw	65535	; assembler added errata NOP
  5938  000C86  90D8               	bcf	status,0,c
  5939  000C88  3010               	rrcf	___fladd@grs^0,w,c
  5940  000C8A  0901               	iorlw	1
  5941  000C8C  6E10               	movwf	___fladd@grs^0,c
  5942  000C8E  EF4C  F006         	goto	l2314
  5943  000C92                     l2312:
  5944  000C92  FFFF               	dw	65535	; assembler added errata NOP
  5945  000C94  90D8               	bcf	status,0,c
  5946  000C96  3210               	rrcf	___fladd@grs^0,f,c
  5947  000C98                     l2314:
  5948  000C98  FFFF               	dw	65535	; assembler added errata NOP
  5949  000C9A  A001               	btfss	___fladd@b^0,0,c
  5950  000C9C  EF52  F006         	goto	u1931
  5951  000CA0  EF55  F006         	goto	u1930
  5952  000CA4                     u1931:
  5953  000CA4  FFFF               	dw	65535	; assembler added errata NOP
  5954  000CA6  EF57  F006         	goto	l2318
  5955  000CAA                     u1930:
  5956  000CAA  FFFF               	dw	65535	; assembler added errata NOP
  5957  000CAC  8E10               	bsf	___fladd@grs^0,7,c
  5958  000CAE                     l2318:
  5959  000CAE  FFFF               	dw	65535	; assembler added errata NOP
  5960  000CB0  3404               	rlcf	(___fladd@b+3)^0,w,c
  5961  000CB2  3204               	rrcf	(___fladd@b+3)^0,f,c
  5962  000CB4  3203               	rrcf	(___fladd@b+2)^0,f,c
  5963  000CB6  3202               	rrcf	(___fladd@b+1)^0,f,c
  5964  000CB8  3201               	rrcf	___fladd@b^0,f,c
  5965  000CBA  2A0F               	incf	___fladd@bexp^0,f,c
  5966  000CBC  EF04  F007         	goto	l2358
  5967  000CC0                     l2322:
  5968  000CC0  FFFF               	dw	65535	; assembler added errata NOP
  5969  000CC2  5005               	movf	___fladd@a^0,w,c
  5970  000CC4  5C01               	subwf	___fladd@b^0,w,c
  5971  000CC6  5006               	movf	(___fladd@a+1)^0,w,c
  5972  000CC8  5802               	subwfb	(___fladd@b+1)^0,w,c
  5973  000CCA  5007               	movf	(___fladd@a+2)^0,w,c
  5974  000CCC  5803               	subwfb	(___fladd@b+2)^0,w,c
  5975  000CCE  5004               	movf	(___fladd@b+3)^0,w,c
  5976  000CD0  0A80               	xorlw	128
  5977  000CD2  6E09               	movwf	??___fladd^0,c
  5978  000CD4  5008               	movf	(___fladd@a+3)^0,w,c
  5979  000CD6  0A80               	xorlw	128
  5980  000CD8  5809               	subwfb	??___fladd^0,w,c
  5981  000CDA  B0D8               	btfsc	status,0,c
  5982  000CDC  EF72  F006         	goto	u1941
  5983  000CE0  EF75  F006         	goto	u1940
  5984  000CE4                     u1941:
  5985  000CE4  FFFF               	dw	65535	; assembler added errata NOP
  5986  000CE6  EFA3  F006         	goto	l2332
  5987  000CEA                     u1940:
  5988  000CEA  FFFF               	dw	65535	; assembler added errata NOP
  5989  000CEC  5001               	movf	___fladd@b^0,w,c
  5990  000CEE  5C05               	subwf	___fladd@a^0,w,c
  5991  000CF0  6E09               	movwf	??___fladd^0,c
  5992  000CF2  5002               	movf	(___fladd@b+1)^0,w,c
  5993  000CF4  5806               	subwfb	(___fladd@a+1)^0,w,c
  5994  000CF6  6E0A               	movwf	(??___fladd+1)^0,c
  5995  000CF8  5003               	movf	(___fladd@b+2)^0,w,c
  5996  000CFA  5807               	subwfb	(___fladd@a+2)^0,w,c
  5997  000CFC  6E0B               	movwf	(??___fladd+2)^0,c
  5998  000CFE  5004               	movf	(___fladd@b+3)^0,w,c
  5999  000D00  5808               	subwfb	(___fladd@a+3)^0,w,c
  6000  000D02  6E0C               	movwf	(??___fladd+3)^0,c
  6001  000D04  0EFF               	movlw	255
  6002  000D06  2409               	addwf	??___fladd^0,w,c
  6003  000D08  6E01               	movwf	___fladd@b^0,c
  6004  000D0A  0EFF               	movlw	255
  6005  000D0C  200A               	addwfc	(??___fladd+1)^0,w,c
  6006  000D0E  6E02               	movwf	(___fladd@b+1)^0,c
  6007  000D10  0EFF               	movlw	255
  6008  000D12  200B               	addwfc	(??___fladd+2)^0,w,c
  6009  000D14  6E03               	movwf	(___fladd@b+2)^0,c
  6010  000D16  0EFF               	movlw	255
  6011  000D18  200C               	addwfc	(??___fladd+3)^0,w,c
  6012  000D1A  6E04               	movwf	(___fladd@b+3)^0,c
  6013  000D1C  0E80               	movlw	128
  6014  000D1E  1A0D               	xorwf	___fladd@signs^0,f,c
  6015  000D20  6C10               	negf	___fladd@grs^0,c
  6016  000D22  5010               	movf	___fladd@grs^0,w,c
  6017  000D24  A4D8               	btfss	status,2,c
  6018  000D26  EF97  F006         	goto	u1951
  6019  000D2A  EF9A  F006         	goto	u1950
  6020  000D2E                     u1951:
  6021  000D2E  FFFF               	dw	65535	; assembler added errata NOP
  6022  000D30  EFAC  F006         	goto	l948
  6023  000D34                     u1950:
  6024  000D34  FFFF               	dw	65535	; assembler added errata NOP
  6025  000D36  0E01               	movlw	1
  6026  000D38  2601               	addwf	___fladd@b^0,f,c
  6027  000D3A  0E00               	movlw	0
  6028  000D3C  2202               	addwfc	(___fladd@b+1)^0,f,c
  6029  000D3E  2203               	addwfc	(___fladd@b+2)^0,f,c
  6030  000D40  2204               	addwfc	(___fladd@b+3)^0,f,c
  6031  000D42  EFAC  F006         	goto	l948
  6032  000D46                     l2332:
  6033  000D46  FFFF               	dw	65535	; assembler added errata NOP
  6034  000D48  5005               	movf	___fladd@a^0,w,c
  6035  000D4A  5E01               	subwf	___fladd@b^0,f,c
  6036  000D4C  5006               	movf	(___fladd@a+1)^0,w,c
  6037  000D4E  5A02               	subwfb	(___fladd@b+1)^0,f,c
  6038  000D50  5007               	movf	(___fladd@a+2)^0,w,c
  6039  000D52  5A03               	subwfb	(___fladd@b+2)^0,f,c
  6040  000D54  5008               	movf	(___fladd@a+3)^0,w,c
  6041  000D56  5A04               	subwfb	(___fladd@b+3)^0,f,c
  6042  000D58                     l948:
  6043  000D58  FFFF               	dw	65535	; assembler added errata NOP
  6044  000D5A  5001               	movf	___fladd@b^0,w,c
  6045  000D5C  1002               	iorwf	(___fladd@b+1)^0,w,c
  6046  000D5E  1003               	iorwf	(___fladd@b+2)^0,w,c
  6047  000D60  1004               	iorwf	(___fladd@b+3)^0,w,c
  6048  000D62  A4D8               	btfss	status,2,c
  6049  000D64  EFB6  F006         	goto	u1961
  6050  000D68  EFB9  F006         	goto	u1960
  6051  000D6C                     u1961:
  6052  000D6C  FFFF               	dw	65535	; assembler added errata NOP
  6053  000D6E  EFFB  F006         	goto	l2356
  6054  000D72                     u1960:
  6055  000D72  FFFF               	dw	65535	; assembler added errata NOP
  6056  000D74  5010               	movf	___fladd@grs^0,w,c
  6057  000D76  A4D8               	btfss	status,2,c
  6058  000D78  EFC0  F006         	goto	u1971
  6059  000D7C  EFC3  F006         	goto	u1970
  6060  000D80                     u1971:
  6061  000D80  FFFF               	dw	65535	; assembler added errata NOP
  6062  000D82  EFFB  F006         	goto	l2356
  6063  000D86                     u1970:
  6064  000D86  FFFF               	dw	65535	; assembler added errata NOP
  6065  000D88  0E00               	movlw	0
  6066  000D8A  6E01               	movwf	?___fladd^0,c
  6067  000D8C  0E00               	movlw	0
  6068  000D8E  6E02               	movwf	(?___fladd+1)^0,c
  6069  000D90  0E00               	movlw	0
  6070  000D92  6E03               	movwf	(?___fladd+2)^0,c
  6071  000D94  0E00               	movlw	0
  6072  000D96  6E04               	movwf	(?___fladd+3)^0,c
  6073  000D98  EFB7  F007         	goto	l940
  6074  000D9C                     l2340:
  6075  000D9C  FFFF               	dw	65535	; assembler added errata NOP
  6076  000D9E  90D8               	bcf	status,0,c
  6077  000DA0  3601               	rlcf	___fladd@b^0,f,c
  6078  000DA2  3602               	rlcf	(___fladd@b+1)^0,f,c
  6079  000DA4  3603               	rlcf	(___fladd@b+2)^0,f,c
  6080  000DA6  3604               	rlcf	(___fladd@b+3)^0,f,c
  6081  000DA8  AE10               	btfss	___fladd@grs^0,7,c
  6082  000DAA  EFD9  F006         	goto	u1981
  6083  000DAE  EFDC  F006         	goto	u1980
  6084  000DB2                     u1981:
  6085  000DB2  FFFF               	dw	65535	; assembler added errata NOP
  6086  000DB4  EFDE  F006         	goto	l2346
  6087  000DB8                     u1980:
  6088  000DB8  FFFF               	dw	65535	; assembler added errata NOP
  6089  000DBA  8001               	bsf	___fladd@b^0,0,c
  6090  000DBC                     l2346:
  6091  000DBC  FFFF               	dw	65535	; assembler added errata NOP
  6092  000DBE  A010               	btfss	___fladd@grs^0,0,c
  6093  000DC0  EFE4  F006         	goto	u1991
  6094  000DC4  EFE7  F006         	goto	u1990
  6095  000DC8                     u1991:
  6096  000DC8  FFFF               	dw	65535	; assembler added errata NOP
  6097  000DCA  EFEC  F006         	goto	l2350
  6098  000DCE                     u1990:
  6099  000DCE  FFFF               	dw	65535	; assembler added errata NOP
  6100  000DD0  80D8               	bsf	status,0,c
  6101  000DD2  3610               	rlcf	___fladd@grs^0,f,c
  6102  000DD4  EFEF  F006         	goto	l2352
  6103  000DD8                     l2350:
  6104  000DD8  FFFF               	dw	65535	; assembler added errata NOP
  6105  000DDA  90D8               	bcf	status,0,c
  6106  000DDC  3610               	rlcf	___fladd@grs^0,f,c
  6107  000DDE                     l2352:
  6108  000DDE  FFFF               	dw	65535	; assembler added errata NOP
  6109  000DE0  500F               	movf	___fladd@bexp^0,w,c
  6110  000DE2  B4D8               	btfsc	status,2,c
  6111  000DE4  EFF6  F006         	goto	u2001
  6112  000DE8  EFF9  F006         	goto	u2000
  6113  000DEC                     u2001:
  6114  000DEC  FFFF               	dw	65535	; assembler added errata NOP
  6115  000DEE  EFFB  F006         	goto	l2356
  6116  000DF2                     u2000:
  6117  000DF2  FFFF               	dw	65535	; assembler added errata NOP
  6118  000DF4  060F               	decf	___fladd@bexp^0,f,c
  6119  000DF6                     l2356:
  6120  000DF6  FFFF               	dw	65535	; assembler added errata NOP
  6121  000DF8  AE03               	btfss	(___fladd@b+2)^0,7,c
  6122  000DFA  EF01  F007         	goto	u2011
  6123  000DFE  EF04  F007         	goto	u2010
  6124  000E02                     u2011:
  6125  000E02  FFFF               	dw	65535	; assembler added errata NOP
  6126  000E04  EFCE  F006         	goto	l2340
  6127  000E08                     u2010:
  6128  000E08                     l2358:
  6129  000E08  FFFF               	dw	65535	; assembler added errata NOP
  6130  000E0A  0E00               	movlw	0
  6131  000E0C  6E0E               	movwf	___fladd@aexp^0,c
  6132  000E0E  AE10               	btfss	___fladd@grs^0,7,c
  6133  000E10  EF0C  F007         	goto	u2021
  6134  000E14  EF0F  F007         	goto	u2020
  6135  000E18                     u2021:
  6136  000E18  FFFF               	dw	65535	; assembler added errata NOP
  6137  000E1A  EF2E  F007         	goto	l957
  6138  000E1E                     u2020:
  6139  000E1E  FFFF               	dw	65535	; assembler added errata NOP
  6140  000E20  C010  F009         	movff	___fladd@grs,??___fladd
  6141  000E24  0E7F               	movlw	127
  6142  000E26  1609               	andwf	??___fladd^0,f,c
  6143  000E28  B4D8               	btfsc	status,2,c
  6144  000E2A  EF19  F007         	goto	u2031
  6145  000E2E  EF1C  F007         	goto	u2030
  6146  000E32                     u2031:
  6147  000E32  FFFF               	dw	65535	; assembler added errata NOP
  6148  000E34  EF22  F007         	goto	l958
  6149  000E38                     u2030:
  6150  000E38  FFFF               	dw	65535	; assembler added errata NOP
  6151  000E3A                     l2364:
  6152  000E3A  FFFF               	dw	65535	; assembler added errata NOP
  6153  000E3C  0E01               	movlw	1
  6154  000E3E  6E0E               	movwf	___fladd@aexp^0,c
  6155  000E40  EF2E  F007         	goto	l957
  6156  000E44                     l958:
  6157  000E44  FFFF               	dw	65535	; assembler added errata NOP
  6158  000E46  A001               	btfss	___fladd@b^0,0,c
  6159  000E48  EF28  F007         	goto	u2041
  6160  000E4C  EF2B  F007         	goto	u2040
  6161  000E50                     u2041:
  6162  000E50  FFFF               	dw	65535	; assembler added errata NOP
  6163  000E52  EF2E  F007         	goto	l957
  6164  000E56                     u2040:
  6165  000E56  FFFF               	dw	65535	; assembler added errata NOP
  6166  000E58  EF1D  F007         	goto	l2364
  6167  000E5C                     l957:
  6168  000E5C  FFFF               	dw	65535	; assembler added errata NOP
  6169  000E5E  500E               	movf	___fladd@aexp^0,w,c
  6170  000E60  B4D8               	btfsc	status,2,c
  6171  000E62  EF35  F007         	goto	u2051
  6172  000E66  EF38  F007         	goto	u2050
  6173  000E6A                     u2051:
  6174  000E6A  FFFF               	dw	65535	; assembler added errata NOP
  6175  000E6C  EF68  F007         	goto	l2376
  6176  000E70                     u2050:
  6177  000E70  FFFF               	dw	65535	; assembler added errata NOP
  6178  000E72  0E01               	movlw	1
  6179  000E74  2601               	addwf	___fladd@b^0,f,c
  6180  000E76  0E00               	movlw	0
  6181  000E78  2202               	addwfc	(___fladd@b+1)^0,f,c
  6182  000E7A  2203               	addwfc	(___fladd@b+2)^0,f,c
  6183  000E7C  2204               	addwfc	(___fladd@b+3)^0,f,c
  6184  000E7E  A004               	btfss	(___fladd@b+3)^0,0,c
  6185  000E80  EF44  F007         	goto	u2061
  6186  000E84  EF47  F007         	goto	u2060
  6187  000E88                     u2061:
  6188  000E88  FFFF               	dw	65535	; assembler added errata NOP
  6189  000E8A  EF68  F007         	goto	l2376
  6190  000E8E                     u2060:
  6191  000E8E  FFFF               	dw	65535	; assembler added errata NOP
  6192  000E90  C001  F009         	movff	___fladd@b,??___fladd
  6193  000E94  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6194  000E98  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6195  000E9C  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6196  000EA0  340C               	rlcf	(??___fladd+3)^0,w,c
  6197  000EA2  320C               	rrcf	(??___fladd+3)^0,f,c
  6198  000EA4  320B               	rrcf	(??___fladd+2)^0,f,c
  6199  000EA6  320A               	rrcf	(??___fladd+1)^0,f,c
  6200  000EA8  3209               	rrcf	??___fladd^0,f,c
  6201  000EAA  C009  F001         	movff	??___fladd,___fladd@b
  6202  000EAE  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6203  000EB2  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6204  000EB6  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6205  000EBA  280F               	incf	___fladd@bexp^0,w,c
  6206  000EBC  B4D8               	btfsc	status,2,c
  6207  000EBE  EF63  F007         	goto	u2071
  6208  000EC2  EF66  F007         	goto	u2070
  6209  000EC6                     u2071:
  6210  000EC6  FFFF               	dw	65535	; assembler added errata NOP
  6211  000EC8  EF68  F007         	goto	l2376
  6212  000ECC                     u2070:
  6213  000ECC  FFFF               	dw	65535	; assembler added errata NOP
  6214  000ECE  2A0F               	incf	___fladd@bexp^0,f,c
  6215  000ED0                     l2376:
  6216  000ED0  FFFF               	dw	65535	; assembler added errata NOP
  6217  000ED2  280F               	incf	___fladd@bexp^0,w,c
  6218  000ED4  B4D8               	btfsc	status,2,c
  6219  000ED6  EF6F  F007         	goto	u2081
  6220  000EDA  EF72  F007         	goto	u2080
  6221  000EDE                     u2081:
  6222  000EDE  FFFF               	dw	65535	; assembler added errata NOP
  6223  000EE0  EF7C  F007         	goto	l2380
  6224  000EE4                     u2080:
  6225  000EE4  FFFF               	dw	65535	; assembler added errata NOP
  6226  000EE6  500F               	movf	___fladd@bexp^0,w,c
  6227  000EE8  A4D8               	btfss	status,2,c
  6228  000EEA  EF79  F007         	goto	u2091
  6229  000EEE  EF7C  F007         	goto	u2090
  6230  000EF2                     u2091:
  6231  000EF2  FFFF               	dw	65535	; assembler added errata NOP
  6232  000EF4  EF91  F007         	goto	l2384
  6233  000EF8                     u2090:
  6234  000EF8                     l2380:
  6235  000EF8  FFFF               	dw	65535	; assembler added errata NOP
  6236  000EFA  0E00               	movlw	0
  6237  000EFC  6E01               	movwf	___fladd@b^0,c
  6238  000EFE  0E00               	movlw	0
  6239  000F00  6E02               	movwf	(___fladd@b+1)^0,c
  6240  000F02  0E00               	movlw	0
  6241  000F04  6E03               	movwf	(___fladd@b+2)^0,c
  6242  000F06  0E00               	movlw	0
  6243  000F08  6E04               	movwf	(___fladd@b+3)^0,c
  6244  000F0A  500F               	movf	___fladd@bexp^0,w,c
  6245  000F0C  A4D8               	btfss	status,2,c
  6246  000F0E  EF8B  F007         	goto	u2101
  6247  000F12  EF8E  F007         	goto	u2100
  6248  000F16                     u2101:
  6249  000F16  FFFF               	dw	65535	; assembler added errata NOP
  6250  000F18  EF91  F007         	goto	l2384
  6251  000F1C                     u2100:
  6252  000F1C  FFFF               	dw	65535	; assembler added errata NOP
  6253  000F1E  0E00               	movlw	0
  6254  000F20  6E0D               	movwf	___fladd@signs^0,c
  6255  000F22                     l2384:
  6256  000F22  FFFF               	dw	65535	; assembler added errata NOP
  6257  000F24  A00F               	btfss	___fladd@bexp^0,0,c
  6258  000F26  EF97  F007         	goto	u2111
  6259  000F2A  EF9A  F007         	goto	u2110
  6260  000F2E                     u2111:
  6261  000F2E  FFFF               	dw	65535	; assembler added errata NOP
  6262  000F30  EF9E  F007         	goto	l2388
  6263  000F34                     u2110:
  6264  000F34  FFFF               	dw	65535	; assembler added errata NOP
  6265  000F36  8E03               	bsf	(___fladd@b+2)^0,7,c
  6266  000F38  EFA0  F007         	goto	l2390
  6267  000F3C                     l2388:
  6268  000F3C  FFFF               	dw	65535	; assembler added errata NOP
  6269  000F3E  9E03               	bcf	(___fladd@b+2)^0,7,c
  6270  000F40                     l2390:
  6271  000F40  FFFF               	dw	65535	; assembler added errata NOP
  6272  000F42  90D8               	bcf	status,0,c
  6273  000F44  300F               	rrcf	___fladd@bexp^0,w,c
  6274  000F46  6E04               	movwf	(___fladd@b+3)^0,c
  6275  000F48  AE0D               	btfss	___fladd@signs^0,7,c
  6276  000F4A  EFA9  F007         	goto	u2121
  6277  000F4E  EFAC  F007         	goto	u2120
  6278  000F52                     u2121:
  6279  000F52  FFFF               	dw	65535	; assembler added errata NOP
  6280  000F54  EFAE  F007         	goto	l2396
  6281  000F58                     u2120:
  6282  000F58  FFFF               	dw	65535	; assembler added errata NOP
  6283  000F5A  8E04               	bsf	(___fladd@b+3)^0,7,c
  6284  000F5C                     l2396:
  6285  000F5C  FFFF               	dw	65535	; assembler added errata NOP
  6286  000F5E  C001  F001         	movff	___fladd@b,?___fladd
  6287  000F62  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6288  000F66  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6289  000F6A  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6290  000F6E                     l940:
  6291  000F6E  FFFF               	dw	65535	; assembler added errata NOP
  6292  000F70  0012               	return		;funcret
  6293  000F72  FFFF               	dw	65535	; errata NOP
  6294  000F74                     __end_of___fladd:
  6295                           	callstack 0
  6296                           
  6297 ;; *************** function ___flneg *****************
  6298 ;; Defined at:
  6299 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
  6300 ;; Parameters:    Size  Location     Type
  6301 ;;  f1              4    0[COMRAM] unsigned char 
  6302 ;; Auto vars:     Size  Location     Type
  6303 ;;		None
  6304 ;; Return value:  Size  Location     Type
  6305 ;;                  4    0[COMRAM] unsigned char 
  6306 ;; Registers used:
  6307 ;;		wreg, status,2, status,0
  6308 ;; Tracked objects:
  6309 ;;		On entry : 0/0
  6310 ;;		On exit  : 0/0
  6311 ;;		Unchanged: 0/0
  6312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6313 ;;      Params:         4       0       0       0       0       0       0
  6314 ;;      Locals:         0       0       0       0       0       0       0
  6315 ;;      Temps:          0       0       0       0       0       0       0
  6316 ;;      Totals:         4       0       0       0       0       0       0
  6317 ;;Total ram usage:        4 bytes
  6318 ;; Hardware stack levels used:    1
  6319 ;; Hardware stack levels required when called:    1
  6320 ;; This function calls:
  6321 ;;		Nothing
  6322 ;; This function is called by:
  6323 ;;		_roundf
  6324 ;; This function uses a non-reentrant model
  6325 ;;
  6326                           
  6327                           	psect	text23
  6328  0025B0                     __ptext23:
  6329                           	callstack 0
  6330  0025B0                     ___flneg:
  6331                           	callstack 0
  6332  0025B0  FFFF               	dw	65535	; assembler added errata NOP
  6333  0025B2  5001               	movf	___flneg@f1^0,w,c
  6334  0025B4  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6335  0025B6  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6336  0025B8  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6337  0025BA  B4D8               	btfsc	status,2,c
  6338  0025BC  EFE2  F012         	goto	u2371
  6339  0025C0  EFE5  F012         	goto	u2370
  6340  0025C4                     u2371:
  6341  0025C4  FFFF               	dw	65535	; assembler added errata NOP
  6342  0025C6  EFEE  F012         	goto	l2576
  6343  0025CA                     u2370:
  6344  0025CA  FFFF               	dw	65535	; assembler added errata NOP
  6345  0025CC  0E00               	movlw	0
  6346  0025CE  1A01               	xorwf	___flneg@f1^0,f,c
  6347  0025D0  0E00               	movlw	0
  6348  0025D2  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6349  0025D4  0E00               	movlw	0
  6350  0025D6  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6351  0025D8  0E80               	movlw	128
  6352  0025DA  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6353  0025DC                     l2576:
  6354  0025DC  FFFF               	dw	65535	; assembler added errata NOP
  6355  0025DE  C001  F001         	movff	___flneg@f1,?___flneg
  6356  0025E2  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6357  0025E6  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6358  0025EA  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6359  0025EE  0012               	return		;funcret
  6360  0025F0  FFFF               	dw	65535	; errata NOP
  6361  0025F2                     __end_of___flneg:
  6362                           	callstack 0
  6363                           
  6364 ;; *************** function _init_PORTS *****************
  6365 ;; Defined at:
  6366 ;;		line 61 in file "init_PIC.c"
  6367 ;; Parameters:    Size  Location     Type
  6368 ;;		None
  6369 ;; Auto vars:     Size  Location     Type
  6370 ;;		None
  6371 ;; Return value:  Size  Location     Type
  6372 ;;                  1    wreg      void 
  6373 ;; Registers used:
  6374 ;;		wreg, status,2
  6375 ;; Tracked objects:
  6376 ;;		On entry : 0/0
  6377 ;;		On exit  : 0/0
  6378 ;;		Unchanged: 0/0
  6379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6380 ;;      Params:         0       0       0       0       0       0       0
  6381 ;;      Locals:         0       0       0       0       0       0       0
  6382 ;;      Temps:          0       0       0       0       0       0       0
  6383 ;;      Totals:         0       0       0       0       0       0       0
  6384 ;;Total ram usage:        0 bytes
  6385 ;; Hardware stack levels used:    1
  6386 ;; Hardware stack levels required when called:    1
  6387 ;; This function calls:
  6388 ;;		Nothing
  6389 ;; This function is called by:
  6390 ;;		_main
  6391 ;; This function uses a non-reentrant model
  6392 ;;
  6393                           
  6394                           	psect	text24
  6395  002668                     __ptext24:
  6396                           	callstack 0
  6397  002668                     _init_PORTS:
  6398                           	callstack 0
  6399  002668  FFFF               	dw	65535	; assembler added errata NOP
  6400  00266A                     
  6401                           ;init_PIC.c: 63:     LATA = 0;
  6402  00266A  0E00               	movlw	0
  6403  00266C  6E89               	movwf	137,c	;volatile
  6404                           
  6405                           ;init_PIC.c: 64:     PORTA = 0;
  6406  00266E  0E00               	movlw	0
  6407  002670  6E80               	movwf	128,c	;volatile
  6408                           
  6409                           ;init_PIC.c: 65:     TRISA = 0xF1;
  6410  002672  0EF1               	movlw	241
  6411  002674  6E92               	movwf	146,c	;volatile
  6412                           
  6413                           ;init_PIC.c: 67:     LATB = 0;
  6414  002676  0E00               	movlw	0
  6415  002678  6E8A               	movwf	138,c	;volatile
  6416                           
  6417                           ;init_PIC.c: 68:     PORTB = 0;
  6418  00267A  0E00               	movlw	0
  6419  00267C  6E81               	movwf	129,c	;volatile
  6420                           
  6421                           ;init_PIC.c: 69:     TRISB = 0x00;
  6422  00267E  0E00               	movlw	0
  6423  002680  6E93               	movwf	147,c	;volatile
  6424                           
  6425                           ;init_PIC.c: 72:     LATC = 0;
  6426  002682  0E00               	movlw	0
  6427  002684  6E8B               	movwf	139,c	;volatile
  6428                           
  6429                           ;init_PIC.c: 73:     PORTC = 0;
  6430  002686  0E00               	movlw	0
  6431  002688  6E82               	movwf	130,c	;volatile
  6432                           
  6433                           ;init_PIC.c: 74:     TRISC = 0x00;
  6434  00268A  0E00               	movlw	0
  6435  00268C  6E94               	movwf	148,c	;volatile
  6436  00268E                     
  6437                           ;init_PIC.c: 75:     TRISCbits.RC7 = 1;
  6438  00268E  8E94               	bsf	148,7,c	;volatile
  6439  002690  0012               	return		;funcret
  6440  002692  FFFF               	dw	65535	; errata NOP
  6441  002694                     __end_of_init_PORTS:
  6442                           	callstack 0
  6443                           
  6444 ;; *************** function _get_reg_value *****************
  6445 ;; Defined at:
  6446 ;;		line 51 in file "serial_rs232.c"
  6447 ;; Parameters:    Size  Location     Type
  6448 ;;		None
  6449 ;; Auto vars:     Size  Location     Type
  6450 ;;  rx_char         1    0[COMRAM] unsigned char 
  6451 ;; Return value:  Size  Location     Type
  6452 ;;                  1    wreg      unsigned char 
  6453 ;; Registers used:
  6454 ;;		wreg, status,2
  6455 ;; Tracked objects:
  6456 ;;		On entry : 0/0
  6457 ;;		On exit  : 0/0
  6458 ;;		Unchanged: 0/0
  6459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6460 ;;      Params:         0       0       0       0       0       0       0
  6461 ;;      Locals:         1       0       0       0       0       0       0
  6462 ;;      Temps:          0       0       0       0       0       0       0
  6463 ;;      Totals:         1       0       0       0       0       0       0
  6464 ;;Total ram usage:        1 bytes
  6465 ;; Hardware stack levels used:    1
  6466 ;; Hardware stack levels required when called:    1
  6467 ;; This function calls:
  6468 ;;		Nothing
  6469 ;; This function is called by:
  6470 ;;		_main
  6471 ;; This function uses a non-reentrant model
  6472 ;;
  6473                           
  6474                           	psect	text25
  6475  0027B6                     __ptext25:
  6476                           	callstack 0
  6477  0027B6                     _get_reg_value:
  6478                           	callstack 0
  6479  0027B6  FFFF               	dw	65535	; assembler added errata NOP
  6480  0027B8                     
  6481                           ;serial_rs232.c: 52:     unsigned char rx_char = RCREG;
  6482  0027B8  CFAE F001          	movff	4014,get_reg_value@rx_char	;volatile
  6483  0027BC                     
  6484                           ;serial_rs232.c: 53:     RCREG = 0;
  6485  0027BC  0E00               	movlw	0
  6486  0027BE  6EAE               	movwf	174,c	;volatile
  6487                           
  6488                           ;serial_rs232.c: 54:     return rx_char;
  6489  0027C0  5001               	movf	get_reg_value@rx_char^0,w,c
  6490  0027C2  0012               	return		;funcret
  6491  0027C4  FFFF               	dw	65535	; errata NOP
  6492  0027C6                     __end_of_get_reg_value:
  6493                           	callstack 0
  6494                           
  6495 ;; *************** function _get_liters *****************
  6496 ;; Defined at:
  6497 ;;		line 36 in file "oven.c"
  6498 ;; Parameters:    Size  Location     Type
  6499 ;;		None
  6500 ;; Auto vars:     Size  Location     Type
  6501 ;;		None
  6502 ;; Return value:  Size  Location     Type
  6503 ;;                  2   61[COMRAM] int 
  6504 ;; Registers used:
  6505 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6506 ;; Tracked objects:
  6507 ;;		On entry : 0/0
  6508 ;;		On exit  : 0/0
  6509 ;;		Unchanged: 0/0
  6510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6511 ;;      Params:         2       0       0       0       0       0       0
  6512 ;;      Locals:         0       0       0       0       0       0       0
  6513 ;;      Temps:          0       0       0       0       0       0       0
  6514 ;;      Totals:         2       0       0       0       0       0       0
  6515 ;;Total ram usage:        2 bytes
  6516 ;; Hardware stack levels used:    1
  6517 ;; Hardware stack levels required when called:    2
  6518 ;; This function calls:
  6519 ;;		___flmul
  6520 ;;		___fltol
  6521 ;;		___xxtofl
  6522 ;; This function is called by:
  6523 ;;		_main
  6524 ;; This function uses a non-reentrant model
  6525 ;;
  6526                           
  6527                           	psect	text26
  6528  0023B6                     __ptext26:
  6529                           	callstack 0
  6530  0023B6                     _get_liters:
  6531                           	callstack 0
  6532  0023B6  FFFF               	dw	65535	; assembler added errata NOP
  6533  0023B8                     
  6534                           ;oven.c: 37:     ADCON0bits.GO = 1;
  6535  0023B8  84C2               	bsf	194,2,c	;volatile
  6536  0023BA                     l385:
  6537  0023BA  FFFF               	dw	65535	; assembler added errata NOP
  6538  0023BC  B4C2               	btfsc	194,2,c	;volatile
  6539  0023BE  EFE3  F011         	goto	u2891
  6540  0023C2  EFE6  F011         	goto	u2890
  6541  0023C6                     u2891:
  6542  0023C6  FFFF               	dw	65535	; assembler added errata NOP
  6543  0023C8  EFDD  F011         	goto	l385
  6544  0023CC                     u2890:
  6545  0023CC  FFFF               	dw	65535	; assembler added errata NOP
  6546  0023CE                     
  6547                           ;oven.c: 39:     return (int) (ADRESH * 0.01);
  6548  0023CE  0E0A               	movlw	10
  6549  0023D0  6E1F               	movwf	___flmul@a^0,c
  6550  0023D2  0ED7               	movlw	215
  6551  0023D4  6E20               	movwf	(___flmul@a+1)^0,c
  6552  0023D6  0E23               	movlw	35
  6553  0023D8  6E21               	movwf	(___flmul@a+2)^0,c
  6554  0023DA  0E3C               	movlw	60
  6555  0023DC  6E22               	movwf	(___flmul@a+3)^0,c
  6556  0023DE  50C4               	movf	196,w,c	;volatile
  6557  0023E0  6E0D               	movwf	___xxtofl@val^0,c
  6558  0023E2  6A0E               	clrf	(___xxtofl@val+1)^0,c
  6559  0023E4  6A0F               	clrf	(___xxtofl@val+2)^0,c
  6560  0023E6  6A10               	clrf	(___xxtofl@val+3)^0,c
  6561  0023E8  0E01               	movlw	1
  6562  0023EA  ECFF  F00B         	call	___xxtofl
  6563  0023EE  C00D  F01B         	movff	?___xxtofl,___flmul@b
  6564  0023F2  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  6565  0023F6  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  6566  0023FA  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  6567  0023FE  ECBA  F007         	call	___flmul	;wreg free
  6568  002402  C01B  F034         	movff	?___flmul,___fltol@f1
  6569  002406  C01C  F035         	movff	?___flmul+1,___fltol@f1+1
  6570  00240A  C01D  F036         	movff	?___flmul+2,___fltol@f1+2
  6571  00240E  C01E  F037         	movff	?___flmul+3,___fltol@f1+3
  6572  002412  ECB2  F00D         	call	___fltol	;wreg free
  6573  002416  C034  F03E         	movff	?___fltol,?_get_liters
  6574  00241A  C035  F03F         	movff	?___fltol+1,?_get_liters+1
  6575  00241E  0012               	return		;funcret
  6576  002420  FFFF               	dw	65535	; errata NOP
  6577  002422                     __end_of_get_liters:
  6578                           	callstack 0
  6579                           
  6580 ;; *************** function ___fltol *****************
  6581 ;; Defined at:
  6582 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
  6583 ;; Parameters:    Size  Location     Type
  6584 ;;  f1              4   51[COMRAM] int 
  6585 ;; Auto vars:     Size  Location     Type
  6586 ;;  exp1            1   60[COMRAM] unsigned char 
  6587 ;;  sign1           1   59[COMRAM] unsigned char 
  6588 ;; Return value:  Size  Location     Type
  6589 ;;                  4   51[COMRAM] long 
  6590 ;; Registers used:
  6591 ;;		wreg, status,2, status,0
  6592 ;; Tracked objects:
  6593 ;;		On entry : 0/0
  6594 ;;		On exit  : 0/0
  6595 ;;		Unchanged: 0/0
  6596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6597 ;;      Params:         4       0       0       0       0       0       0
  6598 ;;      Locals:         2       0       0       0       0       0       0
  6599 ;;      Temps:          4       0       0       0       0       0       0
  6600 ;;      Totals:        10       0       0       0       0       0       0
  6601 ;;Total ram usage:       10 bytes
  6602 ;; Hardware stack levels used:    1
  6603 ;; Hardware stack levels required when called:    1
  6604 ;; This function calls:
  6605 ;;		Nothing
  6606 ;; This function is called by:
  6607 ;;		_init_USART
  6608 ;;		_get_temperature
  6609 ;;		_get_liters
  6610 ;; This function uses a non-reentrant model
  6611 ;;
  6612                           
  6613                           	psect	text27
  6614  001B64                     __ptext27:
  6615                           	callstack 0
  6616  001B64                     ___fltol:
  6617                           	callstack 0
  6618  001B64  FFFF               	dw	65535	; assembler added errata NOP
  6619  001B66  3436               	rlcf	(___fltol@f1+2)^0,w,c
  6620  001B68  3437               	rlcf	(___fltol@f1+3)^0,w,c
  6621  001B6A  6E3D               	movwf	___fltol@exp1^0,c
  6622  001B6C  503D               	movf	___fltol@exp1^0,w,c
  6623  001B6E  A4D8               	btfss	status,2,c
  6624  001B70  EFBC  F00D         	goto	u2381
  6625  001B74  EFBF  F00D         	goto	u2380
  6626  001B78                     u2381:
  6627  001B78  FFFF               	dw	65535	; assembler added errata NOP
  6628  001B7A  EFCB  F00D         	goto	l2586
  6629  001B7E                     u2380:
  6630  001B7E  FFFF               	dw	65535	; assembler added errata NOP
  6631  001B80                     l2582:
  6632  001B80  FFFF               	dw	65535	; assembler added errata NOP
  6633  001B82  0E00               	movlw	0
  6634  001B84  6E34               	movwf	?___fltol^0,c
  6635  001B86  0E00               	movlw	0
  6636  001B88  6E35               	movwf	(?___fltol+1)^0,c
  6637  001B8A  0E00               	movlw	0
  6638  001B8C  6E36               	movwf	(?___fltol+2)^0,c
  6639  001B8E  0E00               	movlw	0
  6640  001B90  6E37               	movwf	(?___fltol+3)^0,c
  6641  001B92  EF4A  F00E         	goto	l700
  6642  001B96                     l2586:
  6643  001B96  FFFF               	dw	65535	; assembler added errata NOP
  6644  001B98  C034  F038         	movff	___fltol@f1,??___fltol
  6645  001B9C  C035  F039         	movff	___fltol@f1+1,??___fltol+1
  6646  001BA0  C036  F03A         	movff	___fltol@f1+2,??___fltol+2
  6647  001BA4  C037  F03B         	movff	___fltol@f1+3,??___fltol+3
  6648  001BA8  0E20               	movlw	32
  6649  001BAA  EFDD  F00D         	goto	u2390
  6650  001BAE                     u2395:
  6651  001BAE  FFFF               	dw	65535	; assembler added errata NOP
  6652  001BB0  90D8               	bcf	status,0,c
  6653  001BB2  323B               	rrcf	(??___fltol+3)^0,f,c
  6654  001BB4  323A               	rrcf	(??___fltol+2)^0,f,c
  6655  001BB6  3239               	rrcf	(??___fltol+1)^0,f,c
  6656  001BB8  3238               	rrcf	??___fltol^0,f,c
  6657  001BBA                     u2390:
  6658  001BBA  FFFF               	dw	65535	; assembler added errata NOP
  6659  001BBC  2EE8               	decfsz	wreg,f,c
  6660  001BBE  EFD7  F00D         	goto	u2395
  6661  001BC2  5038               	movf	??___fltol^0,w,c
  6662  001BC4  6E3C               	movwf	___fltol@sign1^0,c
  6663  001BC6  8E36               	bsf	(___fltol@f1+2)^0,7,c
  6664  001BC8  0EFF               	movlw	255
  6665  001BCA  1634               	andwf	___fltol@f1^0,f,c
  6666  001BCC  0EFF               	movlw	255
  6667  001BCE  1635               	andwf	(___fltol@f1+1)^0,f,c
  6668  001BD0  0EFF               	movlw	255
  6669  001BD2  1636               	andwf	(___fltol@f1+2)^0,f,c
  6670  001BD4  0E00               	movlw	0
  6671  001BD6  1637               	andwf	(___fltol@f1+3)^0,f,c
  6672  001BD8  0E96               	movlw	150
  6673  001BDA  5E3D               	subwf	___fltol@exp1^0,f,c
  6674  001BDC  BE3D               	btfsc	___fltol@exp1^0,7,c
  6675  001BDE  EFF6  F00D         	goto	u2400
  6676  001BE2  EFF3  F00D         	goto	u2401
  6677  001BE6                     u2401:
  6678  001BE6  FFFF               	dw	65535	; assembler added errata NOP
  6679  001BE8  EF10  F00E         	goto	l2606
  6680  001BEC                     u2400:
  6681  001BEC  FFFF               	dw	65535	; assembler added errata NOP
  6682  001BEE  503D               	movf	___fltol@exp1^0,w,c
  6683  001BF0  0A80               	xorlw	128
  6684  001BF2  0F97               	addlw	151
  6685  001BF4  B0D8               	btfsc	status,0,c
  6686  001BF6  EFFF  F00D         	goto	u2411
  6687  001BFA  EF02  F00E         	goto	u2410
  6688  001BFE                     u2411:
  6689  001BFE  FFFF               	dw	65535	; assembler added errata NOP
  6690  001C00  EF05  F00E         	goto	l2602
  6691  001C04                     u2410:
  6692  001C04  FFFF               	dw	65535	; assembler added errata NOP
  6693  001C06  EFC0  F00D         	goto	l2582
  6694  001C0A                     l2602:
  6695  001C0A  FFFF               	dw	65535	; assembler added errata NOP
  6696  001C0C  90D8               	bcf	status,0,c
  6697  001C0E  3237               	rrcf	(___fltol@f1+3)^0,f,c
  6698  001C10  3236               	rrcf	(___fltol@f1+2)^0,f,c
  6699  001C12  3235               	rrcf	(___fltol@f1+1)^0,f,c
  6700  001C14  3234               	rrcf	___fltol@f1^0,f,c
  6701  001C16  3E3D               	incfsz	___fltol@exp1^0,f,c
  6702  001C18  EF05  F00E         	goto	l2602
  6703  001C1C  EF2E  F00E         	goto	l2616
  6704  001C20                     l2606:
  6705  001C20  FFFF               	dw	65535	; assembler added errata NOP
  6706  001C22  0E1F               	movlw	31
  6707  001C24  643D               	cpfsgt	___fltol@exp1^0,c
  6708  001C26  EF17  F00E         	goto	u2421
  6709  001C2A  EF1A  F00E         	goto	u2420
  6710  001C2E                     u2421:
  6711  001C2E  FFFF               	dw	65535	; assembler added errata NOP
  6712  001C30  EF24  F00E         	goto	l2614
  6713  001C34                     u2420:
  6714  001C34  FFFF               	dw	65535	; assembler added errata NOP
  6715  001C36  EFC0  F00D         	goto	l2582
  6716  001C3A                     l2612:
  6717  001C3A  FFFF               	dw	65535	; assembler added errata NOP
  6718  001C3C  90D8               	bcf	status,0,c
  6719  001C3E  3634               	rlcf	___fltol@f1^0,f,c
  6720  001C40  3635               	rlcf	(___fltol@f1+1)^0,f,c
  6721  001C42  3636               	rlcf	(___fltol@f1+2)^0,f,c
  6722  001C44  3637               	rlcf	(___fltol@f1+3)^0,f,c
  6723  001C46  063D               	decf	___fltol@exp1^0,f,c
  6724  001C48                     l2614:
  6725  001C48  FFFF               	dw	65535	; assembler added errata NOP
  6726  001C4A  503D               	movf	___fltol@exp1^0,w,c
  6727  001C4C  A4D8               	btfss	status,2,c
  6728  001C4E  EF2B  F00E         	goto	u2431
  6729  001C52  EF2E  F00E         	goto	u2430
  6730  001C56                     u2431:
  6731  001C56  FFFF               	dw	65535	; assembler added errata NOP
  6732  001C58  EF1D  F00E         	goto	l2612
  6733  001C5C                     u2430:
  6734  001C5C                     l2616:
  6735  001C5C  FFFF               	dw	65535	; assembler added errata NOP
  6736  001C5E  503C               	movf	___fltol@sign1^0,w,c
  6737  001C60  B4D8               	btfsc	status,2,c
  6738  001C62  EF35  F00E         	goto	u2441
  6739  001C66  EF38  F00E         	goto	u2440
  6740  001C6A                     u2441:
  6741  001C6A  FFFF               	dw	65535	; assembler added errata NOP
  6742  001C6C  EF41  F00E         	goto	l2620
  6743  001C70                     u2440:
  6744  001C70  FFFF               	dw	65535	; assembler added errata NOP
  6745  001C72  1E37               	comf	(___fltol@f1+3)^0,f,c
  6746  001C74  1E36               	comf	(___fltol@f1+2)^0,f,c
  6747  001C76  1E35               	comf	(___fltol@f1+1)^0,f,c
  6748  001C78  6C34               	negf	___fltol@f1^0,c
  6749  001C7A  0E00               	movlw	0
  6750  001C7C  2235               	addwfc	(___fltol@f1+1)^0,f,c
  6751  001C7E  2236               	addwfc	(___fltol@f1+2)^0,f,c
  6752  001C80  2237               	addwfc	(___fltol@f1+3)^0,f,c
  6753  001C82                     l2620:
  6754  001C82  FFFF               	dw	65535	; assembler added errata NOP
  6755  001C84  C034  F034         	movff	___fltol@f1,?___fltol
  6756  001C88  C035  F035         	movff	___fltol@f1+1,?___fltol+1
  6757  001C8C  C036  F036         	movff	___fltol@f1+2,?___fltol+2
  6758  001C90  C037  F037         	movff	___fltol@f1+3,?___fltol+3
  6759  001C94                     l700:
  6760  001C94  FFFF               	dw	65535	; assembler added errata NOP
  6761  001C96  0012               	return		;funcret
  6762  001C98  FFFF               	dw	65535	; errata NOP
  6763  001C9A                     __end_of___fltol:
  6764                           	callstack 0
  6765                           
  6766 ;; *************** function ___flmul *****************
  6767 ;; Defined at:
  6768 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
  6769 ;; Parameters:    Size  Location     Type
  6770 ;;  b               4   26[COMRAM] long 
  6771 ;;  a               4   30[COMRAM] long 
  6772 ;; Auto vars:     Size  Location     Type
  6773 ;;  prod            4   45[COMRAM] struct .
  6774 ;;  grs             4   39[COMRAM] unsigned long 
  6775 ;;  temp            2   49[COMRAM] struct .
  6776 ;;  bexp            1   44[COMRAM] unsigned char 
  6777 ;;  aexp            1   43[COMRAM] unsigned char 
  6778 ;;  sign            1   38[COMRAM] unsigned char 
  6779 ;; Return value:  Size  Location     Type
  6780 ;;                  4   26[COMRAM] unsigned char 
  6781 ;; Registers used:
  6782 ;;		wreg, status,2, status,0, prodl, prodh
  6783 ;; Tracked objects:
  6784 ;;		On entry : 0/0
  6785 ;;		On exit  : 0/0
  6786 ;;		Unchanged: 0/0
  6787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6788 ;;      Params:         8       0       0       0       0       0       0
  6789 ;;      Locals:        13       0       0       0       0       0       0
  6790 ;;      Temps:          4       0       0       0       0       0       0
  6791 ;;      Totals:        25       0       0       0       0       0       0
  6792 ;;Total ram usage:       25 bytes
  6793 ;; Hardware stack levels used:    1
  6794 ;; Hardware stack levels required when called:    1
  6795 ;; This function calls:
  6796 ;;		Nothing
  6797 ;; This function is called by:
  6798 ;;		_get_temperature
  6799 ;;		_get_liters
  6800 ;;		_roundf
  6801 ;; This function uses a non-reentrant model
  6802 ;;
  6803                           
  6804                           	psect	text28
  6805  000F74                     __ptext28:
  6806                           	callstack 0
  6807  000F74                     ___flmul:
  6808                           	callstack 0
  6809  000F74  FFFF               	dw	65535	; assembler added errata NOP
  6810  000F76  501E               	movf	(___flmul@b+3)^0,w,c
  6811  000F78  0B80               	andlw	128
  6812  000F7A  6E27               	movwf	___flmul@sign^0,c
  6813  000F7C  501E               	movf	(___flmul@b+3)^0,w,c
  6814  000F7E  241E               	addwf	(___flmul@b+3)^0,w,c
  6815  000F80  6E2D               	movwf	___flmul@bexp^0,c
  6816  000F82  AE1D               	btfss	(___flmul@b+2)^0,7,c
  6817  000F84  EFC6  F007         	goto	u2131
  6818  000F88  EFC9  F007         	goto	u2130
  6819  000F8C                     u2131:
  6820  000F8C  FFFF               	dw	65535	; assembler added errata NOP
  6821  000F8E  EFCB  F007         	goto	l2420
  6822  000F92                     u2130:
  6823  000F92  FFFF               	dw	65535	; assembler added errata NOP
  6824  000F94  802D               	bsf	___flmul@bexp^0,0,c
  6825  000F96                     l2420:
  6826  000F96  FFFF               	dw	65535	; assembler added errata NOP
  6827  000F98  502D               	movf	___flmul@bexp^0,w,c
  6828  000F9A  B4D8               	btfsc	status,2,c
  6829  000F9C  EFD2  F007         	goto	u2141
  6830  000FA0  EFD5  F007         	goto	u2140
  6831  000FA4                     u2141:
  6832  000FA4  FFFF               	dw	65535	; assembler added errata NOP
  6833  000FA6  EFEC  F007         	goto	l2428
  6834  000FAA                     u2140:
  6835  000FAA  FFFF               	dw	65535	; assembler added errata NOP
  6836  000FAC  282D               	incf	___flmul@bexp^0,w,c
  6837  000FAE  A4D8               	btfss	status,2,c
  6838  000FB0  EFDC  F007         	goto	u2151
  6839  000FB4  EFDF  F007         	goto	u2150
  6840  000FB8                     u2151:
  6841  000FB8  FFFF               	dw	65535	; assembler added errata NOP
  6842  000FBA  EFE8  F007         	goto	l2426
  6843  000FBE                     u2150:
  6844  000FBE  FFFF               	dw	65535	; assembler added errata NOP
  6845  000FC0  0E00               	movlw	0
  6846  000FC2  6E1B               	movwf	___flmul@b^0,c
  6847  000FC4  0E00               	movlw	0
  6848  000FC6  6E1C               	movwf	(___flmul@b+1)^0,c
  6849  000FC8  0E00               	movlw	0
  6850  000FCA  6E1D               	movwf	(___flmul@b+2)^0,c
  6851  000FCC  0E00               	movlw	0
  6852  000FCE  6E1E               	movwf	(___flmul@b+3)^0,c
  6853  000FD0                     l2426:
  6854  000FD0  FFFF               	dw	65535	; assembler added errata NOP
  6855  000FD2  8E1D               	bsf	(___flmul@b+2)^0,7,c
  6856  000FD4  EFF5  F007         	goto	l2430
  6857  000FD8                     l2428:
  6858  000FD8  FFFF               	dw	65535	; assembler added errata NOP
  6859  000FDA  0E00               	movlw	0
  6860  000FDC  6E1B               	movwf	___flmul@b^0,c
  6861  000FDE  0E00               	movlw	0
  6862  000FE0  6E1C               	movwf	(___flmul@b+1)^0,c
  6863  000FE2  0E00               	movlw	0
  6864  000FE4  6E1D               	movwf	(___flmul@b+2)^0,c
  6865  000FE6  0E00               	movlw	0
  6866  000FE8  6E1E               	movwf	(___flmul@b+3)^0,c
  6867  000FEA                     l2430:
  6868  000FEA  FFFF               	dw	65535	; assembler added errata NOP
  6869  000FEC  5022               	movf	(___flmul@a+3)^0,w,c
  6870  000FEE  0B80               	andlw	128
  6871  000FF0  1A27               	xorwf	___flmul@sign^0,f,c
  6872  000FF2  5022               	movf	(___flmul@a+3)^0,w,c
  6873  000FF4  2422               	addwf	(___flmul@a+3)^0,w,c
  6874  000FF6  6E2C               	movwf	___flmul@aexp^0,c
  6875  000FF8  AE21               	btfss	(___flmul@a+2)^0,7,c
  6876  000FFA  EF01  F008         	goto	u2161
  6877  000FFE  EF04  F008         	goto	u2160
  6878  001002                     u2161:
  6879  001002  FFFF               	dw	65535	; assembler added errata NOP
  6880  001004  EF06  F008         	goto	l2438
  6881  001008                     u2160:
  6882  001008  FFFF               	dw	65535	; assembler added errata NOP
  6883  00100A  802C               	bsf	___flmul@aexp^0,0,c
  6884  00100C                     l2438:
  6885  00100C  FFFF               	dw	65535	; assembler added errata NOP
  6886  00100E  502C               	movf	___flmul@aexp^0,w,c
  6887  001010  B4D8               	btfsc	status,2,c
  6888  001012  EF0D  F008         	goto	u2171
  6889  001016  EF10  F008         	goto	u2170
  6890  00101A                     u2171:
  6891  00101A  FFFF               	dw	65535	; assembler added errata NOP
  6892  00101C  EF27  F008         	goto	l2446
  6893  001020                     u2170:
  6894  001020  FFFF               	dw	65535	; assembler added errata NOP
  6895  001022  282C               	incf	___flmul@aexp^0,w,c
  6896  001024  A4D8               	btfss	status,2,c
  6897  001026  EF17  F008         	goto	u2181
  6898  00102A  EF1A  F008         	goto	u2180
  6899  00102E                     u2181:
  6900  00102E  FFFF               	dw	65535	; assembler added errata NOP
  6901  001030  EF23  F008         	goto	l2444
  6902  001034                     u2180:
  6903  001034  FFFF               	dw	65535	; assembler added errata NOP
  6904  001036  0E00               	movlw	0
  6905  001038  6E1F               	movwf	___flmul@a^0,c
  6906  00103A  0E00               	movlw	0
  6907  00103C  6E20               	movwf	(___flmul@a+1)^0,c
  6908  00103E  0E00               	movlw	0
  6909  001040  6E21               	movwf	(___flmul@a+2)^0,c
  6910  001042  0E00               	movlw	0
  6911  001044  6E22               	movwf	(___flmul@a+3)^0,c
  6912  001046                     l2444:
  6913  001046  FFFF               	dw	65535	; assembler added errata NOP
  6914  001048  8E21               	bsf	(___flmul@a+2)^0,7,c
  6915  00104A  EF30  F008         	goto	l1017
  6916  00104E                     l2446:
  6917  00104E  FFFF               	dw	65535	; assembler added errata NOP
  6918  001050  0E00               	movlw	0
  6919  001052  6E1F               	movwf	___flmul@a^0,c
  6920  001054  0E00               	movlw	0
  6921  001056  6E20               	movwf	(___flmul@a+1)^0,c
  6922  001058  0E00               	movlw	0
  6923  00105A  6E21               	movwf	(___flmul@a+2)^0,c
  6924  00105C  0E00               	movlw	0
  6925  00105E  6E22               	movwf	(___flmul@a+3)^0,c
  6926  001060                     l1017:
  6927  001060  FFFF               	dw	65535	; assembler added errata NOP
  6928  001062  502C               	movf	___flmul@aexp^0,w,c
  6929  001064  B4D8               	btfsc	status,2,c
  6930  001066  EF37  F008         	goto	u2191
  6931  00106A  EF3A  F008         	goto	u2190
  6932  00106E                     u2191:
  6933  00106E  FFFF               	dw	65535	; assembler added errata NOP
  6934  001070  EF44  F008         	goto	l2450
  6935  001074                     u2190:
  6936  001074  FFFF               	dw	65535	; assembler added errata NOP
  6937  001076  502D               	movf	___flmul@bexp^0,w,c
  6938  001078  A4D8               	btfss	status,2,c
  6939  00107A  EF41  F008         	goto	u2201
  6940  00107E  EF44  F008         	goto	u2200
  6941  001082                     u2201:
  6942  001082  FFFF               	dw	65535	; assembler added errata NOP
  6943  001084  EF4F  F008         	goto	l2454
  6944  001088                     u2200:
  6945  001088                     l2450:
  6946  001088  FFFF               	dw	65535	; assembler added errata NOP
  6947  00108A  0E00               	movlw	0
  6948  00108C  6E1B               	movwf	?___flmul^0,c
  6949  00108E  0E00               	movlw	0
  6950  001090  6E1C               	movwf	(?___flmul+1)^0,c
  6951  001092  0E00               	movlw	0
  6952  001094  6E1D               	movwf	(?___flmul+2)^0,c
  6953  001096  0E00               	movlw	0
  6954  001098  6E1E               	movwf	(?___flmul+3)^0,c
  6955  00109A  EF09  F00A         	goto	l1021
  6956  00109E                     l2454:
  6957  00109E  FFFF               	dw	65535	; assembler added errata NOP
  6958  0010A0  5021               	movf	(___flmul@a+2)^0,w,c
  6959  0010A2  021B               	mulwf	___flmul@b^0,c
  6960  0010A4  CFF3 F032          	movff	prodl,___flmul@temp
  6961  0010A8  CFF4 F033          	movff	prodh,___flmul@temp+1
  6962  0010AC  5032               	movf	___flmul@temp^0,w,c
  6963  0010AE  6E28               	movwf	___flmul@grs^0,c
  6964  0010B0  6A29               	clrf	(___flmul@grs+1)^0,c
  6965  0010B2  6A2A               	clrf	(___flmul@grs+2)^0,c
  6966  0010B4  6A2B               	clrf	(___flmul@grs+3)^0,c
  6967  0010B6  5033               	movf	(___flmul@temp+1)^0,w,c
  6968  0010B8  6E2E               	movwf	___flmul@prod^0,c
  6969  0010BA  6A2F               	clrf	(___flmul@prod+1)^0,c
  6970  0010BC  6A30               	clrf	(___flmul@prod+2)^0,c
  6971  0010BE  6A31               	clrf	(___flmul@prod+3)^0,c
  6972  0010C0  5020               	movf	(___flmul@a+1)^0,w,c
  6973  0010C2  021C               	mulwf	(___flmul@b+1)^0,c
  6974  0010C4  CFF3 F032          	movff	prodl,___flmul@temp
  6975  0010C8  CFF4 F033          	movff	prodh,___flmul@temp+1
  6976  0010CC  5032               	movf	___flmul@temp^0,w,c
  6977  0010CE  2628               	addwf	___flmul@grs^0,f,c
  6978  0010D0  0E00               	movlw	0
  6979  0010D2  2229               	addwfc	(___flmul@grs+1)^0,f,c
  6980  0010D4  222A               	addwfc	(___flmul@grs+2)^0,f,c
  6981  0010D6  222B               	addwfc	(___flmul@grs+3)^0,f,c
  6982  0010D8  5033               	movf	(___flmul@temp+1)^0,w,c
  6983  0010DA  262E               	addwf	___flmul@prod^0,f,c
  6984  0010DC  0E00               	movlw	0
  6985  0010DE  222F               	addwfc	(___flmul@prod+1)^0,f,c
  6986  0010E0  2230               	addwfc	(___flmul@prod+2)^0,f,c
  6987  0010E2  2231               	addwfc	(___flmul@prod+3)^0,f,c
  6988  0010E4  501F               	movf	___flmul@a^0,w,c
  6989  0010E6  021D               	mulwf	(___flmul@b+2)^0,c
  6990  0010E8  CFF3 F032          	movff	prodl,___flmul@temp
  6991  0010EC  CFF4 F033          	movff	prodh,___flmul@temp+1
  6992  0010F0  5032               	movf	___flmul@temp^0,w,c
  6993  0010F2  2628               	addwf	___flmul@grs^0,f,c
  6994  0010F4  0E00               	movlw	0
  6995  0010F6  2229               	addwfc	(___flmul@grs+1)^0,f,c
  6996  0010F8  222A               	addwfc	(___flmul@grs+2)^0,f,c
  6997  0010FA  222B               	addwfc	(___flmul@grs+3)^0,f,c
  6998  0010FC  5033               	movf	(___flmul@temp+1)^0,w,c
  6999  0010FE  262E               	addwf	___flmul@prod^0,f,c
  7000  001100  0E00               	movlw	0
  7001  001102  222F               	addwfc	(___flmul@prod+1)^0,f,c
  7002  001104  2230               	addwfc	(___flmul@prod+2)^0,f,c
  7003  001106  2231               	addwfc	(___flmul@prod+3)^0,f,c
  7004  001108  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
  7005  00110C  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
  7006  001110  C028  F029         	movff	___flmul@grs,___flmul@grs+1
  7007  001114  6A28               	clrf	___flmul@grs^0,c
  7008  001116  501F               	movf	___flmul@a^0,w,c
  7009  001118  021C               	mulwf	(___flmul@b+1)^0,c
  7010  00111A  CFF3 F032          	movff	prodl,___flmul@temp
  7011  00111E  CFF4 F033          	movff	prodh,___flmul@temp+1
  7012  001122  5032               	movf	___flmul@temp^0,w,c
  7013  001124  2628               	addwf	___flmul@grs^0,f,c
  7014  001126  5033               	movf	(___flmul@temp+1)^0,w,c
  7015  001128  2229               	addwfc	(___flmul@grs+1)^0,f,c
  7016  00112A  0E00               	movlw	0
  7017  00112C  222A               	addwfc	(___flmul@grs+2)^0,f,c
  7018  00112E  0E00               	movlw	0
  7019  001130  222B               	addwfc	(___flmul@grs+3)^0,f,c
  7020  001132  5020               	movf	(___flmul@a+1)^0,w,c
  7021  001134  021B               	mulwf	___flmul@b^0,c
  7022  001136  CFF3 F032          	movff	prodl,___flmul@temp
  7023  00113A  CFF4 F033          	movff	prodh,___flmul@temp+1
  7024  00113E  5032               	movf	___flmul@temp^0,w,c
  7025  001140  2628               	addwf	___flmul@grs^0,f,c
  7026  001142  5033               	movf	(___flmul@temp+1)^0,w,c
  7027  001144  2229               	addwfc	(___flmul@grs+1)^0,f,c
  7028  001146  0E00               	movlw	0
  7029  001148  222A               	addwfc	(___flmul@grs+2)^0,f,c
  7030  00114A  0E00               	movlw	0
  7031  00114C  222B               	addwfc	(___flmul@grs+3)^0,f,c
  7032  00114E  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
  7033  001152  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
  7034  001156  C028  F029         	movff	___flmul@grs,___flmul@grs+1
  7035  00115A  6A28               	clrf	___flmul@grs^0,c
  7036  00115C  501F               	movf	___flmul@a^0,w,c
  7037  00115E  021B               	mulwf	___flmul@b^0,c
  7038  001160  CFF3 F032          	movff	prodl,___flmul@temp
  7039  001164  CFF4 F033          	movff	prodh,___flmul@temp+1
  7040  001168  5032               	movf	___flmul@temp^0,w,c
  7041  00116A  2628               	addwf	___flmul@grs^0,f,c
  7042  00116C  5033               	movf	(___flmul@temp+1)^0,w,c
  7043  00116E  2229               	addwfc	(___flmul@grs+1)^0,f,c
  7044  001170  0E00               	movlw	0
  7045  001172  222A               	addwfc	(___flmul@grs+2)^0,f,c
  7046  001174  0E00               	movlw	0
  7047  001176  222B               	addwfc	(___flmul@grs+3)^0,f,c
  7048  001178  5021               	movf	(___flmul@a+2)^0,w,c
  7049  00117A  021C               	mulwf	(___flmul@b+1)^0,c
  7050  00117C  CFF3 F032          	movff	prodl,___flmul@temp
  7051  001180  CFF4 F033          	movff	prodh,___flmul@temp+1
  7052  001184  5032               	movf	___flmul@temp^0,w,c
  7053  001186  262E               	addwf	___flmul@prod^0,f,c
  7054  001188  5033               	movf	(___flmul@temp+1)^0,w,c
  7055  00118A  222F               	addwfc	(___flmul@prod+1)^0,f,c
  7056  00118C  0E00               	movlw	0
  7057  00118E  2230               	addwfc	(___flmul@prod+2)^0,f,c
  7058  001190  0E00               	movlw	0
  7059  001192  2231               	addwfc	(___flmul@prod+3)^0,f,c
  7060  001194  5020               	movf	(___flmul@a+1)^0,w,c
  7061  001196  021D               	mulwf	(___flmul@b+2)^0,c
  7062  001198  CFF3 F032          	movff	prodl,___flmul@temp
  7063  00119C  CFF4 F033          	movff	prodh,___flmul@temp+1
  7064  0011A0  5032               	movf	___flmul@temp^0,w,c
  7065  0011A2  262E               	addwf	___flmul@prod^0,f,c
  7066  0011A4  5033               	movf	(___flmul@temp+1)^0,w,c
  7067  0011A6  222F               	addwfc	(___flmul@prod+1)^0,f,c
  7068  0011A8  0E00               	movlw	0
  7069  0011AA  2230               	addwfc	(___flmul@prod+2)^0,f,c
  7070  0011AC  0E00               	movlw	0
  7071  0011AE  2231               	addwfc	(___flmul@prod+3)^0,f,c
  7072  0011B0  5021               	movf	(___flmul@a+2)^0,w,c
  7073  0011B2  021D               	mulwf	(___flmul@b+2)^0,c
  7074  0011B4  CFF3 F032          	movff	prodl,___flmul@temp
  7075  0011B8  CFF4 F033          	movff	prodh,___flmul@temp+1
  7076  0011BC  5032               	movf	___flmul@temp^0,w,c
  7077  0011BE  6E23               	movwf	??___flmul^0,c
  7078  0011C0  5033               	movf	(___flmul@temp+1)^0,w,c
  7079  0011C2  6E24               	movwf	(??___flmul+1)^0,c
  7080  0011C4  6A25               	clrf	(??___flmul+2)^0,c
  7081  0011C6  6A26               	clrf	(??___flmul+3)^0,c
  7082  0011C8  C025  F026         	movff	??___flmul+2,??___flmul+3
  7083  0011CC  C024  F025         	movff	??___flmul+1,??___flmul+2
  7084  0011D0  C023  F024         	movff	??___flmul,??___flmul+1
  7085  0011D4  6A23               	clrf	??___flmul^0,c
  7086  0011D6  5023               	movf	??___flmul^0,w,c
  7087  0011D8  262E               	addwf	___flmul@prod^0,f,c
  7088  0011DA  5024               	movf	(??___flmul+1)^0,w,c
  7089  0011DC  222F               	addwfc	(___flmul@prod+1)^0,f,c
  7090  0011DE  5025               	movf	(??___flmul+2)^0,w,c
  7091  0011E0  2230               	addwfc	(___flmul@prod+2)^0,f,c
  7092  0011E2  5026               	movf	(??___flmul+3)^0,w,c
  7093  0011E4  2231               	addwfc	(___flmul@prod+3)^0,f,c
  7094  0011E6  C028  F023         	movff	___flmul@grs,??___flmul
  7095  0011EA  C029  F024         	movff	___flmul@grs+1,??___flmul+1
  7096  0011EE  C02A  F025         	movff	___flmul@grs+2,??___flmul+2
  7097  0011F2  C02B  F026         	movff	___flmul@grs+3,??___flmul+3
  7098  0011F6  0E19               	movlw	25
  7099  0011F8  EF04  F009         	goto	u2210
  7100  0011FC                     u2215:
  7101  0011FC  FFFF               	dw	65535	; assembler added errata NOP
  7102  0011FE  90D8               	bcf	status,0,c
  7103  001200  3226               	rrcf	(??___flmul+3)^0,f,c
  7104  001202  3225               	rrcf	(??___flmul+2)^0,f,c
  7105  001204  3224               	rrcf	(??___flmul+1)^0,f,c
  7106  001206  3223               	rrcf	??___flmul^0,f,c
  7107  001208                     u2210:
  7108  001208  FFFF               	dw	65535	; assembler added errata NOP
  7109  00120A  2EE8               	decfsz	wreg,f,c
  7110  00120C  EFFE  F008         	goto	u2215
  7111  001210  5023               	movf	??___flmul^0,w,c
  7112  001212  262E               	addwf	___flmul@prod^0,f,c
  7113  001214  5024               	movf	(??___flmul+1)^0,w,c
  7114  001216  222F               	addwfc	(___flmul@prod+1)^0,f,c
  7115  001218  5025               	movf	(??___flmul+2)^0,w,c
  7116  00121A  2230               	addwfc	(___flmul@prod+2)^0,f,c
  7117  00121C  5026               	movf	(??___flmul+3)^0,w,c
  7118  00121E  2231               	addwfc	(___flmul@prod+3)^0,f,c
  7119  001220  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
  7120  001224  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
  7121  001228  C028  F029         	movff	___flmul@grs,___flmul@grs+1
  7122  00122C  6A28               	clrf	___flmul@grs^0,c
  7123  00122E  502C               	movf	___flmul@aexp^0,w,c
  7124  001230  C02D  F023         	movff	___flmul@bexp,??___flmul
  7125  001234  6A24               	clrf	(??___flmul+1)^0,c
  7126  001236  2623               	addwf	??___flmul^0,f,c
  7127  001238  0E00               	movlw	0
  7128  00123A  2224               	addwfc	(??___flmul+1)^0,f,c
  7129  00123C  0E82               	movlw	130
  7130  00123E  2423               	addwf	??___flmul^0,w,c
  7131  001240  6E32               	movwf	___flmul@temp^0,c
  7132  001242  0EFF               	movlw	255
  7133  001244  2024               	addwfc	(??___flmul+1)^0,w,c
  7134  001246  6E33               	movwf	(___flmul@temp+1)^0,c
  7135  001248  EF3F  F009         	goto	l2502
  7136  00124C                     l2496:
  7137  00124C  FFFF               	dw	65535	; assembler added errata NOP
  7138  00124E  90D8               	bcf	status,0,c
  7139  001250  362E               	rlcf	___flmul@prod^0,f,c
  7140  001252  362F               	rlcf	(___flmul@prod+1)^0,f,c
  7141  001254  3630               	rlcf	(___flmul@prod+2)^0,f,c
  7142  001256  3631               	rlcf	(___flmul@prod+3)^0,f,c
  7143  001258  AE2B               	btfss	(___flmul@grs+3)^0,7,c
  7144  00125A  EF31  F009         	goto	u2221
  7145  00125E  EF34  F009         	goto	u2220
  7146  001262                     u2221:
  7147  001262  FFFF               	dw	65535	; assembler added errata NOP
  7148  001264  EF36  F009         	goto	l1024
  7149  001268                     u2220:
  7150  001268  FFFF               	dw	65535	; assembler added errata NOP
  7151  00126A  802E               	bsf	___flmul@prod^0,0,c
  7152  00126C                     l1024:
  7153  00126C  FFFF               	dw	65535	; assembler added errata NOP
  7154  00126E  90D8               	bcf	status,0,c
  7155  001270  3628               	rlcf	___flmul@grs^0,f,c
  7156  001272  3629               	rlcf	(___flmul@grs+1)^0,f,c
  7157  001274  362A               	rlcf	(___flmul@grs+2)^0,f,c
  7158  001276  362B               	rlcf	(___flmul@grs+3)^0,f,c
  7159  001278  0632               	decf	___flmul@temp^0,f,c
  7160  00127A  A0D8               	btfss	status,0,c
  7161  00127C  0633               	decf	(___flmul@temp+1)^0,f,c
  7162  00127E                     l2502:
  7163  00127E  FFFF               	dw	65535	; assembler added errata NOP
  7164  001280  AE30               	btfss	(___flmul@prod+2)^0,7,c
  7165  001282  EF45  F009         	goto	u2231
  7166  001286  EF48  F009         	goto	u2230
  7167  00128A                     u2231:
  7168  00128A  FFFF               	dw	65535	; assembler added errata NOP
  7169  00128C  EF26  F009         	goto	l2496
  7170  001290                     u2230:
  7171  001290  FFFF               	dw	65535	; assembler added errata NOP
  7172  001292  0E00               	movlw	0
  7173  001294  6E2C               	movwf	___flmul@aexp^0,c
  7174  001296  AE2B               	btfss	(___flmul@grs+3)^0,7,c
  7175  001298  EF50  F009         	goto	u2241
  7176  00129C  EF53  F009         	goto	u2240
  7177  0012A0                     u2241:
  7178  0012A0  FFFF               	dw	65535	; assembler added errata NOP
  7179  0012A2  EF7E  F009         	goto	l1026
  7180  0012A6                     u2240:
  7181  0012A6  FFFF               	dw	65535	; assembler added errata NOP
  7182  0012A8  0EFF               	movlw	255
  7183  0012AA  1428               	andwf	___flmul@grs^0,w,c
  7184  0012AC  6E23               	movwf	??___flmul^0,c
  7185  0012AE  0EFF               	movlw	255
  7186  0012B0  1429               	andwf	(___flmul@grs+1)^0,w,c
  7187  0012B2  6E24               	movwf	(??___flmul+1)^0,c
  7188  0012B4  0EFF               	movlw	255
  7189  0012B6  142A               	andwf	(___flmul@grs+2)^0,w,c
  7190  0012B8  6E25               	movwf	(??___flmul+2)^0,c
  7191  0012BA  0E7F               	movlw	127
  7192  0012BC  142B               	andwf	(___flmul@grs+3)^0,w,c
  7193  0012BE  6E26               	movwf	(??___flmul+3)^0,c
  7194  0012C0  5023               	movf	??___flmul^0,w,c
  7195  0012C2  1024               	iorwf	(??___flmul+1)^0,w,c
  7196  0012C4  1025               	iorwf	(??___flmul+2)^0,w,c
  7197  0012C6  1026               	iorwf	(??___flmul+3)^0,w,c
  7198  0012C8  B4D8               	btfsc	status,2,c
  7199  0012CA  EF69  F009         	goto	u2251
  7200  0012CE  EF6C  F009         	goto	u2250
  7201  0012D2                     u2251:
  7202  0012D2  FFFF               	dw	65535	; assembler added errata NOP
  7203  0012D4  EF72  F009         	goto	l1027
  7204  0012D8                     u2250:
  7205  0012D8  FFFF               	dw	65535	; assembler added errata NOP
  7206  0012DA                     l2510:
  7207  0012DA  FFFF               	dw	65535	; assembler added errata NOP
  7208  0012DC  0E01               	movlw	1
  7209  0012DE  6E2C               	movwf	___flmul@aexp^0,c
  7210  0012E0  EF7E  F009         	goto	l1026
  7211  0012E4                     l1027:
  7212  0012E4  FFFF               	dw	65535	; assembler added errata NOP
  7213  0012E6  A02E               	btfss	___flmul@prod^0,0,c
  7214  0012E8  EF78  F009         	goto	u2261
  7215  0012EC  EF7B  F009         	goto	u2260
  7216  0012F0                     u2261:
  7217  0012F0  FFFF               	dw	65535	; assembler added errata NOP
  7218  0012F2  EF7E  F009         	goto	l1026
  7219  0012F6                     u2260:
  7220  0012F6  FFFF               	dw	65535	; assembler added errata NOP
  7221  0012F8  EF6D  F009         	goto	l2510
  7222  0012FC                     l1026:
  7223  0012FC  FFFF               	dw	65535	; assembler added errata NOP
  7224  0012FE  502C               	movf	___flmul@aexp^0,w,c
  7225  001300  B4D8               	btfsc	status,2,c
  7226  001302  EF85  F009         	goto	u2271
  7227  001306  EF88  F009         	goto	u2270
  7228  00130A                     u2271:
  7229  00130A  FFFF               	dw	65535	; assembler added errata NOP
  7230  00130C  EFAF  F009         	goto	l2522
  7231  001310                     u2270:
  7232  001310  FFFF               	dw	65535	; assembler added errata NOP
  7233  001312  0E01               	movlw	1
  7234  001314  262E               	addwf	___flmul@prod^0,f,c
  7235  001316  0E00               	movlw	0
  7236  001318  222F               	addwfc	(___flmul@prod+1)^0,f,c
  7237  00131A  2230               	addwfc	(___flmul@prod+2)^0,f,c
  7238  00131C  2231               	addwfc	(___flmul@prod+3)^0,f,c
  7239  00131E  A031               	btfss	(___flmul@prod+3)^0,0,c
  7240  001320  EF94  F009         	goto	u2281
  7241  001324  EF97  F009         	goto	u2280
  7242  001328                     u2281:
  7243  001328  FFFF               	dw	65535	; assembler added errata NOP
  7244  00132A  EFAF  F009         	goto	l2522
  7245  00132E                     u2280:
  7246  00132E  FFFF               	dw	65535	; assembler added errata NOP
  7247  001330  C02E  F023         	movff	___flmul@prod,??___flmul
  7248  001334  C02F  F024         	movff	___flmul@prod+1,??___flmul+1
  7249  001338  C030  F025         	movff	___flmul@prod+2,??___flmul+2
  7250  00133C  C031  F026         	movff	___flmul@prod+3,??___flmul+3
  7251  001340  3426               	rlcf	(??___flmul+3)^0,w,c
  7252  001342  3226               	rrcf	(??___flmul+3)^0,f,c
  7253  001344  3225               	rrcf	(??___flmul+2)^0,f,c
  7254  001346  3224               	rrcf	(??___flmul+1)^0,f,c
  7255  001348  3223               	rrcf	??___flmul^0,f,c
  7256  00134A  C023  F02E         	movff	??___flmul,___flmul@prod
  7257  00134E  C024  F02F         	movff	??___flmul+1,___flmul@prod+1
  7258  001352  C025  F030         	movff	??___flmul+2,___flmul@prod+2
  7259  001356  C026  F031         	movff	??___flmul+3,___flmul@prod+3
  7260  00135A  4A32               	infsnz	___flmul@temp^0,f,c
  7261  00135C  2A33               	incf	(___flmul@temp+1)^0,f,c
  7262  00135E                     l2522:
  7263  00135E  FFFF               	dw	65535	; assembler added errata NOP
  7264  001360  BE33               	btfsc	(___flmul@temp+1)^0,7,c
  7265  001362  EFBB  F009         	goto	u2291
  7266  001366  5033               	movf	(___flmul@temp+1)^0,w,c
  7267  001368  E109               	bnz	u2290
  7268  00136A  2832               	incf	___flmul@temp^0,w,c
  7269  00136C  A0D8               	btfss	status,0,c
  7270  00136E  EFBB  F009         	goto	u2291
  7271  001372  EFBE  F009         	goto	u2290
  7272  001376                     u2291:
  7273  001376  FFFF               	dw	65535	; assembler added errata NOP
  7274  001378  EFC9  F009         	goto	l2526
  7275  00137C                     u2290:
  7276  00137C  FFFF               	dw	65535	; assembler added errata NOP
  7277  00137E  0E00               	movlw	0
  7278  001380  6E2E               	movwf	___flmul@prod^0,c
  7279  001382  0E00               	movlw	0
  7280  001384  6E2F               	movwf	(___flmul@prod+1)^0,c
  7281  001386  0E80               	movlw	128
  7282  001388  6E30               	movwf	(___flmul@prod+2)^0,c
  7283  00138A  0E7F               	movlw	127
  7284  00138C  6E31               	movwf	(___flmul@prod+3)^0,c
  7285  00138E  EFFE  F009         	goto	l2538
  7286  001392                     l2526:
  7287  001392  FFFF               	dw	65535	; assembler added errata NOP
  7288  001394  BE33               	btfsc	(___flmul@temp+1)^0,7,c
  7289  001396  EFD8  F009         	goto	u2300
  7290  00139A  5033               	movf	(___flmul@temp+1)^0,w,c
  7291  00139C  E106               	bnz	u2301
  7292  00139E  0432               	decf	___flmul@temp^0,w,c
  7293  0013A0  B0D8               	btfsc	status,0,c
  7294  0013A2  EFD5  F009         	goto	u2301
  7295  0013A6  EFD8  F009         	goto	u2300
  7296  0013AA                     u2301:
  7297  0013AA  FFFF               	dw	65535	; assembler added errata NOP
  7298  0013AC  EFE5  F009         	goto	l1034
  7299  0013B0                     u2300:
  7300  0013B0  FFFF               	dw	65535	; assembler added errata NOP
  7301  0013B2  0E00               	movlw	0
  7302  0013B4  6E2E               	movwf	___flmul@prod^0,c
  7303  0013B6  0E00               	movlw	0
  7304  0013B8  6E2F               	movwf	(___flmul@prod+1)^0,c
  7305  0013BA  0E00               	movlw	0
  7306  0013BC  6E30               	movwf	(___flmul@prod+2)^0,c
  7307  0013BE  0E00               	movlw	0
  7308  0013C0  6E31               	movwf	(___flmul@prod+3)^0,c
  7309  0013C2  0E00               	movlw	0
  7310  0013C4  6E27               	movwf	___flmul@sign^0,c
  7311  0013C6  EFFE  F009         	goto	l2538
  7312  0013CA                     l1034:
  7313  0013CA  FFFF               	dw	65535	; assembler added errata NOP
  7314  0013CC  C032  F02D         	movff	___flmul@temp,___flmul@bexp
  7315  0013D0  0EFF               	movlw	255
  7316  0013D2  162E               	andwf	___flmul@prod^0,f,c
  7317  0013D4  0EFF               	movlw	255
  7318  0013D6  162F               	andwf	(___flmul@prod+1)^0,f,c
  7319  0013D8  0E7F               	movlw	127
  7320  0013DA  1630               	andwf	(___flmul@prod+2)^0,f,c
  7321  0013DC  0E00               	movlw	0
  7322  0013DE  1631               	andwf	(___flmul@prod+3)^0,f,c
  7323  0013E0  A02D               	btfss	___flmul@bexp^0,0,c
  7324  0013E2  EFF5  F009         	goto	u2311
  7325  0013E6  EFF8  F009         	goto	u2310
  7326  0013EA                     u2311:
  7327  0013EA  FFFF               	dw	65535	; assembler added errata NOP
  7328  0013EC  EFFA  F009         	goto	l2536
  7329  0013F0                     u2310:
  7330  0013F0  FFFF               	dw	65535	; assembler added errata NOP
  7331  0013F2  8E30               	bsf	(___flmul@prod+2)^0,7,c
  7332  0013F4                     l2536:
  7333  0013F4  FFFF               	dw	65535	; assembler added errata NOP
  7334  0013F6  90D8               	bcf	status,0,c
  7335  0013F8  302D               	rrcf	___flmul@bexp^0,w,c
  7336  0013FA  6E31               	movwf	(___flmul@prod+3)^0,c
  7337  0013FC                     l2538:
  7338  0013FC  FFFF               	dw	65535	; assembler added errata NOP
  7339  0013FE  5027               	movf	___flmul@sign^0,w,c
  7340  001400  1231               	iorwf	(___flmul@prod+3)^0,f,c
  7341  001402  C02E  F01B         	movff	___flmul@prod,?___flmul
  7342  001406  C02F  F01C         	movff	___flmul@prod+1,?___flmul+1
  7343  00140A  C030  F01D         	movff	___flmul@prod+2,?___flmul+2
  7344  00140E  C031  F01E         	movff	___flmul@prod+3,?___flmul+3
  7345  001412                     l1021:
  7346  001412  FFFF               	dw	65535	; assembler added errata NOP
  7347  001414  0012               	return		;funcret
  7348  001416  FFFF               	dw	65535	; errata NOP
  7349  001418                     __end_of___flmul:
  7350                           	callstack 0
  7351                           
  7352 ;; *************** function _configure_ad_conversion_tank *****************
  7353 ;; Defined at:
  7354 ;;		line 19 in file "oven.c"
  7355 ;; Parameters:    Size  Location     Type
  7356 ;;		None
  7357 ;; Auto vars:     Size  Location     Type
  7358 ;;		None
  7359 ;; Return value:  Size  Location     Type
  7360 ;;                  1    wreg      void 
  7361 ;; Registers used:
  7362 ;;		wreg, status,2
  7363 ;; Tracked objects:
  7364 ;;		On entry : 0/0
  7365 ;;		On exit  : 0/0
  7366 ;;		Unchanged: 0/0
  7367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7368 ;;      Params:         0       0       0       0       0       0       0
  7369 ;;      Locals:         0       0       0       0       0       0       0
  7370 ;;      Temps:          0       0       0       0       0       0       0
  7371 ;;      Totals:         0       0       0       0       0       0       0
  7372 ;;Total ram usage:        0 bytes
  7373 ;; Hardware stack levels used:    1
  7374 ;; Hardware stack levels required when called:    1
  7375 ;; This function calls:
  7376 ;;		Nothing
  7377 ;; This function is called by:
  7378 ;;		_main
  7379 ;; This function uses a non-reentrant model
  7380 ;;
  7381                           
  7382                           	psect	text29
  7383  00277A                     __ptext29:
  7384                           	callstack 0
  7385  00277A                     _configure_ad_conversion_tank:
  7386                           	callstack 0
  7387  00277A  FFFF               	dw	65535	; assembler added errata NOP
  7388  00277C                     
  7389                           ;oven.c: 20:     ADCON0 = 0;
  7390  00277C  0E00               	movlw	0
  7391  00277E  6EC2               	movwf	194,c	;volatile
  7392  002780                     
  7393                           ;oven.c: 21:     ADCON0bits.CHS0 = 0;
  7394  002780  96C2               	bcf	194,3,c	;volatile
  7395  002782                     
  7396                           ;oven.c: 22:     ADCON0bits.CHS1 = 0;
  7397  002782  98C2               	bcf	194,4,c	;volatile
  7398  002784                     
  7399                           ;oven.c: 23:     ADCON0bits.CHS2 = 0;
  7400  002784  9AC2               	bcf	194,5,c	;volatile
  7401  002786                     
  7402                           ;oven.c: 24:     ADCON0bits.ADON = 1;
  7403  002786  80C2               	bsf	194,0,c	;volatile
  7404                           
  7405                           ;oven.c: 25:     ADRESH = 0;
  7406  002788  0E00               	movlw	0
  7407  00278A  6EC4               	movwf	196,c	;volatile
  7408                           
  7409                           ;oven.c: 26:     ADRESL = 0;
  7410  00278C  0E00               	movlw	0
  7411  00278E  6EC3               	movwf	195,c	;volatile
  7412                           
  7413                           ;oven.c: 27:     ADCON1 = 0;
  7414  002790  0E00               	movlw	0
  7415  002792  6EC1               	movwf	193,c	;volatile
  7416  002794  0012               	return		;funcret
  7417  002796  FFFF               	dw	65535	; errata NOP
  7418  002798                     __end_of_configure_ad_conversion_tank:
  7419                           	callstack 0
  7420                           
  7421 ;; *************** function _configure_ad_conversion_oven *****************
  7422 ;; Defined at:
  7423 ;;		line 8 in file "oven.c"
  7424 ;; Parameters:    Size  Location     Type
  7425 ;;		None
  7426 ;; Auto vars:     Size  Location     Type
  7427 ;;		None
  7428 ;; Return value:  Size  Location     Type
  7429 ;;                  1    wreg      void 
  7430 ;; Registers used:
  7431 ;;		wreg, status,2
  7432 ;; Tracked objects:
  7433 ;;		On entry : 0/0
  7434 ;;		On exit  : 0/0
  7435 ;;		Unchanged: 0/0
  7436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7437 ;;      Params:         0       0       0       0       0       0       0
  7438 ;;      Locals:         0       0       0       0       0       0       0
  7439 ;;      Temps:          0       0       0       0       0       0       0
  7440 ;;      Totals:         0       0       0       0       0       0       0
  7441 ;;Total ram usage:        0 bytes
  7442 ;; Hardware stack levels used:    1
  7443 ;; Hardware stack levels required when called:    1
  7444 ;; This function calls:
  7445 ;;		Nothing
  7446 ;; This function is called by:
  7447 ;;		_main
  7448 ;; This function uses a non-reentrant model
  7449 ;;
  7450                           
  7451                           	psect	text30
  7452  002798                     __ptext30:
  7453                           	callstack 0
  7454  002798                     _configure_ad_conversion_oven:
  7455                           	callstack 0
  7456  002798  FFFF               	dw	65535	; assembler added errata NOP
  7457  00279A                     
  7458                           ;oven.c: 9:     ADCON0 = 0;
  7459  00279A  0E00               	movlw	0
  7460  00279C  6EC2               	movwf	194,c	;volatile
  7461  00279E                     
  7462                           ;oven.c: 10:     ADCON0bits.CHS0 = 0;
  7463  00279E  96C2               	bcf	194,3,c	;volatile
  7464  0027A0                     
  7465                           ;oven.c: 11:     ADCON0bits.CHS1 = 0;
  7466  0027A0  98C2               	bcf	194,4,c	;volatile
  7467  0027A2                     
  7468                           ;oven.c: 12:     ADCON0bits.CHS2 = 1;
  7469  0027A2  8AC2               	bsf	194,5,c	;volatile
  7470  0027A4                     
  7471                           ;oven.c: 13:     ADCON0bits.ADON = 1;
  7472  0027A4  80C2               	bsf	194,0,c	;volatile
  7473                           
  7474                           ;oven.c: 14:     ADRESH = 0;
  7475  0027A6  0E00               	movlw	0
  7476  0027A8  6EC4               	movwf	196,c	;volatile
  7477                           
  7478                           ;oven.c: 15:     ADRESL = 0;
  7479  0027AA  0E00               	movlw	0
  7480  0027AC  6EC3               	movwf	195,c	;volatile
  7481                           
  7482                           ;oven.c: 16:     ADCON1 = 0;
  7483  0027AE  0E00               	movlw	0
  7484  0027B0  6EC1               	movwf	193,c	;volatile
  7485  0027B2  0012               	return		;funcret
  7486  0027B4  FFFF               	dw	65535	; errata NOP
  7487  0027B6                     __end_of_configure_ad_conversion_oven:
  7488                           	callstack 0
  7489                           
  7490 ;; *************** function _check_temperature *****************
  7491 ;; Defined at:
  7492 ;;		line 50 in file "oven.c"
  7493 ;; Parameters:    Size  Location     Type
  7494 ;;  temp_to_be_c    2   75[COMRAM] int 
  7495 ;; Auto vars:     Size  Location     Type
  7496 ;;  grad            4   77[COMRAM] float 
  7497 ;; Return value:  Size  Location     Type
  7498 ;;                  2   75[COMRAM] int 
  7499 ;; Registers used:
  7500 ;;		wreg, status,2, status,0, cstack
  7501 ;; Tracked objects:
  7502 ;;		On entry : 0/0
  7503 ;;		On exit  : 0/0
  7504 ;;		Unchanged: 0/0
  7505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7506 ;;      Params:         2       0       0       0       0       0       0
  7507 ;;      Locals:         4       0       0       0       0       0       0
  7508 ;;      Temps:          0       0       0       0       0       0       0
  7509 ;;      Totals:         6       0       0       0       0       0       0
  7510 ;;Total ram usage:        6 bytes
  7511 ;; Hardware stack levels used:    1
  7512 ;; Hardware stack levels required when called:    2
  7513 ;; This function calls:
  7514 ;;		___awdiv
  7515 ;;		___flge
  7516 ;;		___xxtofl
  7517 ;;		_abs
  7518 ;; This function is called by:
  7519 ;;		_main
  7520 ;; This function uses a non-reentrant model
  7521 ;;
  7522                           
  7523                           	psect	text31
  7524  001F8C                     __ptext31:
  7525                           	callstack 0
  7526  001F8C                     _check_temperature:
  7527                           	callstack 0
  7528  001F8C  FFFF               	dw	65535	; assembler added errata NOP
  7529  001F8E                     
  7530                           ;oven.c: 51:     float grad = abs(temp_to_be_checked - (-55))/5;
  7531  001F8E  0E00               	movlw	0
  7532  001F90  6E08               	movwf	(___awdiv@divisor+1)^0,c
  7533  001F92  0E05               	movlw	5
  7534  001F94  6E07               	movwf	___awdiv@divisor^0,c
  7535  001F96  0E37               	movlw	55
  7536  001F98  244C               	addwf	check_temperature@temp_to_be_checked^0,w,c
  7537  001F9A  6E01               	movwf	abs@a^0,c
  7538  001F9C  0E00               	movlw	0
  7539  001F9E  204D               	addwfc	(check_temperature@temp_to_be_checked+1)^0,w,c
  7540  001FA0  6E02               	movwf	(abs@a+1)^0,c
  7541  001FA2  EC6A  F012         	call	_abs	;wreg free
  7542  001FA6  C001  F005         	movff	?_abs,___awdiv@dividend
  7543  001FAA  C002  F006         	movff	?_abs+1,___awdiv@dividend+1
  7544  001FAE  ECE1  F00E         	call	___awdiv	;wreg free
  7545  001FB2  C005  F00D         	movff	?___awdiv,___xxtofl@val
  7546  001FB6  C006  F00E         	movff	?___awdiv+1,___xxtofl@val+1
  7547  001FBA  0E00               	movlw	0
  7548  001FBC  BE0E               	btfsc	(___xxtofl@val+1)^0,7,c
  7549  001FBE  0EFF               	movlw	-1
  7550  001FC0  6E0F               	movwf	(___xxtofl@val+2)^0,c
  7551  001FC2  6E10               	movwf	(___xxtofl@val+3)^0,c
  7552  001FC4  0E01               	movlw	1
  7553  001FC6  ECFF  F00B         	call	___xxtofl
  7554  001FCA  C00D  F04E         	movff	?___xxtofl,check_temperature@grad
  7555  001FCE  C00E  F04F         	movff	?___xxtofl+1,check_temperature@grad+1
  7556  001FD2  C00F  F050         	movff	?___xxtofl+2,check_temperature@grad+2
  7557  001FD6  C010  F051         	movff	?___xxtofl+3,check_temperature@grad+3
  7558                           
  7559                           ;oven.c: 52:     if (grad >= 12 && grad <= 13){
  7560  001FDA  C04E  F040         	movff	check_temperature@grad,___flge@ff1
  7561  001FDE  C04F  F041         	movff	check_temperature@grad+1,___flge@ff1+1
  7562  001FE2  C050  F042         	movff	check_temperature@grad+2,___flge@ff1+2
  7563  001FE6  C051  F043         	movff	check_temperature@grad+3,___flge@ff1+3
  7564  001FEA  0E00               	movlw	0
  7565  001FEC  6E44               	movwf	___flge@ff2^0,c
  7566  001FEE  0E00               	movlw	0
  7567  001FF0  6E45               	movwf	(___flge@ff2+1)^0,c
  7568  001FF2  0E40               	movlw	64
  7569  001FF4  6E46               	movwf	(___flge@ff2+2)^0,c
  7570  001FF6  0E41               	movlw	65
  7571  001FF8  6E47               	movwf	(___flge@ff2+3)^0,c
  7572  001FFA  EC4D  F00E         	call	___flge	;wreg free
  7573  001FFE  A0D8               	btfss	status,0,c
  7574  002000  EF04  F010         	goto	u2901
  7575  002004  EF07  F010         	goto	u2900
  7576  002008                     u2901:
  7577  002008  FFFF               	dw	65535	; assembler added errata NOP
  7578  00200A  EF29  F010         	goto	l2976
  7579  00200E                     u2900:
  7580  00200E  FFFF               	dw	65535	; assembler added errata NOP
  7581  002010  0E00               	movlw	0
  7582  002012  6E40               	movwf	___flge@ff1^0,c
  7583  002014  0E00               	movlw	0
  7584  002016  6E41               	movwf	(___flge@ff1+1)^0,c
  7585  002018  0E50               	movlw	80
  7586  00201A  6E42               	movwf	(___flge@ff1+2)^0,c
  7587  00201C  0E41               	movlw	65
  7588  00201E  6E43               	movwf	(___flge@ff1+3)^0,c
  7589  002020  C04E  F044         	movff	check_temperature@grad,___flge@ff2
  7590  002024  C04F  F045         	movff	check_temperature@grad+1,___flge@ff2+1
  7591  002028  C050  F046         	movff	check_temperature@grad+2,___flge@ff2+2
  7592  00202C  C051  F047         	movff	check_temperature@grad+3,___flge@ff2+3
  7593  002030  EC4D  F00E         	call	___flge	;wreg free
  7594  002034  A0D8               	btfss	status,0,c
  7595  002036  EF1F  F010         	goto	u2911
  7596  00203A  EF22  F010         	goto	u2910
  7597  00203E                     u2911:
  7598  00203E  FFFF               	dw	65535	; assembler added errata NOP
  7599  002040  EF29  F010         	goto	l2976
  7600  002044                     u2910:
  7601  002044  FFFF               	dw	65535	; assembler added errata NOP
  7602  002046                     
  7603                           ;oven.c: 53:         return 1;
  7604  002046  0E00               	movlw	0
  7605  002048  6E4D               	movwf	(?_check_temperature+1)^0,c
  7606  00204A  0E01               	movlw	1
  7607  00204C  6E4C               	movwf	?_check_temperature^0,c
  7608  00204E  EF2E  F010         	goto	l399
  7609  002052                     l2976:
  7610  002052  FFFF               	dw	65535	; assembler added errata NOP
  7611                           
  7612                           ;oven.c: 55:         return 0;
  7613  002054  0E00               	movlw	0
  7614  002056  6E4D               	movwf	(?_check_temperature+1)^0,c
  7615  002058  0E00               	movlw	0
  7616  00205A  6E4C               	movwf	?_check_temperature^0,c
  7617  00205C                     l399:
  7618  00205C  FFFF               	dw	65535	; assembler added errata NOP
  7619  00205E  0012               	return		;funcret
  7620  002060  FFFF               	dw	65535	; errata NOP
  7621  002062                     __end_of_check_temperature:
  7622                           	callstack 0
  7623                           
  7624 ;; *************** function _abs *****************
  7625 ;; Defined at:
  7626 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
  7627 ;; Parameters:    Size  Location     Type
  7628 ;;  a               2    0[COMRAM] int 
  7629 ;; Auto vars:     Size  Location     Type
  7630 ;;		None
  7631 ;; Return value:  Size  Location     Type
  7632 ;;                  2    0[COMRAM] int 
  7633 ;; Registers used:
  7634 ;;		wreg, status,2, status,0
  7635 ;; Tracked objects:
  7636 ;;		On entry : 0/0
  7637 ;;		On exit  : 0/0
  7638 ;;		Unchanged: 0/0
  7639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7640 ;;      Params:         2       0       0       0       0       0       0
  7641 ;;      Locals:         0       0       0       0       0       0       0
  7642 ;;      Temps:          2       0       0       0       0       0       0
  7643 ;;      Totals:         4       0       0       0       0       0       0
  7644 ;;Total ram usage:        4 bytes
  7645 ;; Hardware stack levels used:    1
  7646 ;; Hardware stack levels required when called:    1
  7647 ;; This function calls:
  7648 ;;		Nothing
  7649 ;; This function is called by:
  7650 ;;		_check_temperature
  7651 ;; This function uses a non-reentrant model
  7652 ;;
  7653                           
  7654                           	psect	text32
  7655  0024D4                     __ptext32:
  7656                           	callstack 0
  7657  0024D4                     _abs:
  7658                           	callstack 0
  7659  0024D4  FFFF               	dw	65535	; assembler added errata NOP
  7660  0024D6  BE02               	btfsc	(abs@a+1)^0,7,c
  7661  0024D8  EF79  F012         	goto	u2680
  7662  0024DC  5002               	movf	(abs@a+1)^0,w,c
  7663  0024DE  E106               	bnz	u2681
  7664  0024E0  0401               	decf	abs@a^0,w,c
  7665  0024E2  B0D8               	btfsc	status,0,c
  7666  0024E4  EF76  F012         	goto	u2681
  7667  0024E8  EF79  F012         	goto	u2680
  7668  0024EC                     u2681:
  7669  0024EC  FFFF               	dw	65535	; assembler added errata NOP
  7670  0024EE  EF88  F012         	goto	l1078
  7671  0024F2                     u2680:
  7672  0024F2  FFFF               	dw	65535	; assembler added errata NOP
  7673  0024F4  C001  F003         	movff	abs@a,??_abs
  7674  0024F8  C002  F004         	movff	abs@a+1,??_abs+1
  7675  0024FC  1E03               	comf	??_abs^0,f,c
  7676  0024FE  1E04               	comf	(??_abs+1)^0,f,c
  7677  002500  4A03               	infsnz	??_abs^0,f,c
  7678  002502  2A04               	incf	(??_abs+1)^0,f,c
  7679  002504  C003  F001         	movff	??_abs,?_abs
  7680  002508  C004  F002         	movff	??_abs+1,?_abs+1
  7681  00250C  EF8D  F012         	goto	l1081
  7682  002510                     l1078:
  7683  002510  FFFF               	dw	65535	; assembler added errata NOP
  7684  002512  C001  F001         	movff	abs@a,?_abs
  7685  002516  C002  F002         	movff	abs@a+1,?_abs+1
  7686  00251A                     l1081:
  7687  00251A  FFFF               	dw	65535	; assembler added errata NOP
  7688  00251C  0012               	return		;funcret
  7689  00251E  FFFF               	dw	65535	; errata NOP
  7690  002520                     __end_of_abs:
  7691                           	callstack 0
  7692                           
  7693 ;; *************** function ___xxtofl *****************
  7694 ;; Defined at:
  7695 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
  7696 ;; Parameters:    Size  Location     Type
  7697 ;;  sign            1    wreg     unsigned char 
  7698 ;;  val             4   12[COMRAM] long 
  7699 ;; Auto vars:     Size  Location     Type
  7700 ;;  sign            1   20[COMRAM] unsigned char 
  7701 ;;  arg             4   22[COMRAM] unsigned long 
  7702 ;;  exp             1   21[COMRAM] unsigned char 
  7703 ;; Return value:  Size  Location     Type
  7704 ;;                  4   12[COMRAM] unsigned char 
  7705 ;; Registers used:
  7706 ;;		wreg, status,2, status,0
  7707 ;; Tracked objects:
  7708 ;;		On entry : 0/0
  7709 ;;		On exit  : 0/0
  7710 ;;		Unchanged: 0/0
  7711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7712 ;;      Params:         4       0       0       0       0       0       0
  7713 ;;      Locals:         6       0       0       0       0       0       0
  7714 ;;      Temps:          4       0       0       0       0       0       0
  7715 ;;      Totals:        14       0       0       0       0       0       0
  7716 ;;Total ram usage:       14 bytes
  7717 ;; Hardware stack levels used:    1
  7718 ;; Hardware stack levels required when called:    1
  7719 ;; This function calls:
  7720 ;;		Nothing
  7721 ;; This function is called by:
  7722 ;;		_main
  7723 ;;		_get_temperature
  7724 ;;		_get_liters
  7725 ;;		_check_temperature
  7726 ;; This function uses a non-reentrant model
  7727 ;;
  7728                           
  7729                           	psect	text33
  7730  0017FE                     __ptext33:
  7731                           	callstack 0
  7732  0017FE                     ___xxtofl:
  7733                           	callstack 0
  7734  0017FE  FFFF               	dw	65535	; assembler added errata NOP
  7735                           
  7736                           ;incstack = 0
  7737                           ;___xxtofl@sign stored from wreg
  7738  001800  6E15               	movwf	___xxtofl@sign^0,c
  7739  001802  5015               	movf	___xxtofl@sign^0,w,c
  7740  001804  B4D8               	btfsc	status,2,c
  7741  001806  EF07  F00C         	goto	u2451
  7742  00180A  EF0A  F00C         	goto	u2450
  7743  00180E                     u2451:
  7744  00180E  FFFF               	dw	65535	; assembler added errata NOP
  7745  001810  EF2F  F00C         	goto	l1058
  7746  001814                     u2450:
  7747  001814  FFFF               	dw	65535	; assembler added errata NOP
  7748  001816  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
  7749  001818  EF13  F00C         	goto	u2460
  7750  00181C  EF10  F00C         	goto	u2461
  7751  001820                     u2461:
  7752  001820  FFFF               	dw	65535	; assembler added errata NOP
  7753  001822  EF2F  F00C         	goto	l1058
  7754  001826                     u2460:
  7755  001826  FFFF               	dw	65535	; assembler added errata NOP
  7756  001828  C00D  F011         	movff	___xxtofl@val,??___xxtofl
  7757  00182C  C00E  F012         	movff	___xxtofl@val+1,??___xxtofl+1
  7758  001830  C00F  F013         	movff	___xxtofl@val+2,??___xxtofl+2
  7759  001834  C010  F014         	movff	___xxtofl@val+3,??___xxtofl+3
  7760  001838  1E11               	comf	??___xxtofl^0,f,c
  7761  00183A  1E12               	comf	(??___xxtofl+1)^0,f,c
  7762  00183C  1E13               	comf	(??___xxtofl+2)^0,f,c
  7763  00183E  1E14               	comf	(??___xxtofl+3)^0,f,c
  7764  001840  2A11               	incf	??___xxtofl^0,f,c
  7765  001842  0E00               	movlw	0
  7766  001844  2212               	addwfc	(??___xxtofl+1)^0,f,c
  7767  001846  2213               	addwfc	(??___xxtofl+2)^0,f,c
  7768  001848  2214               	addwfc	(??___xxtofl+3)^0,f,c
  7769  00184A  C011  F017         	movff	??___xxtofl,___xxtofl@arg
  7770  00184E  C012  F018         	movff	??___xxtofl+1,___xxtofl@arg+1
  7771  001852  C013  F019         	movff	??___xxtofl+2,___xxtofl@arg+2
  7772  001856  C014  F01A         	movff	??___xxtofl+3,___xxtofl@arg+3
  7773  00185A  EF38  F00C         	goto	l2630
  7774  00185E                     l1058:
  7775  00185E  FFFF               	dw	65535	; assembler added errata NOP
  7776  001860  C00D  F017         	movff	___xxtofl@val,___xxtofl@arg
  7777  001864  C00E  F018         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7778  001868  C00F  F019         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7779  00186C  C010  F01A         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7780  001870                     l2630:
  7781  001870  FFFF               	dw	65535	; assembler added errata NOP
  7782  001872  500D               	movf	___xxtofl@val^0,w,c
  7783  001874  100E               	iorwf	(___xxtofl@val+1)^0,w,c
  7784  001876  100F               	iorwf	(___xxtofl@val+2)^0,w,c
  7785  001878  1010               	iorwf	(___xxtofl@val+3)^0,w,c
  7786  00187A  A4D8               	btfss	status,2,c
  7787  00187C  EF42  F00C         	goto	u2471
  7788  001880  EF45  F00C         	goto	u2470
  7789  001884                     u2471:
  7790  001884  FFFF               	dw	65535	; assembler added errata NOP
  7791  001886  EF50  F00C         	goto	l2636
  7792  00188A                     u2470:
  7793  00188A  FFFF               	dw	65535	; assembler added errata NOP
  7794  00188C  0E00               	movlw	0
  7795  00188E  6E0D               	movwf	?___xxtofl^0,c
  7796  001890  0E00               	movlw	0
  7797  001892  6E0E               	movwf	(?___xxtofl+1)^0,c
  7798  001894  0E00               	movlw	0
  7799  001896  6E0F               	movwf	(?___xxtofl+2)^0,c
  7800  001898  0E00               	movlw	0
  7801  00189A  6E10               	movwf	(?___xxtofl+3)^0,c
  7802  00189C  EFF8  F00C         	goto	l1061
  7803  0018A0                     l2636:
  7804  0018A0  FFFF               	dw	65535	; assembler added errata NOP
  7805  0018A2  0E96               	movlw	150
  7806  0018A4  6E16               	movwf	___xxtofl@exp^0,c
  7807  0018A6  EF5C  F00C         	goto	l2640
  7808  0018AA                     l2638:
  7809  0018AA  FFFF               	dw	65535	; assembler added errata NOP
  7810  0018AC  2A16               	incf	___xxtofl@exp^0,f,c
  7811  0018AE  90D8               	bcf	status,0,c
  7812  0018B0  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  7813  0018B2  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  7814  0018B4  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  7815  0018B6  3217               	rrcf	___xxtofl@arg^0,f,c
  7816  0018B8                     l2640:
  7817  0018B8  FFFF               	dw	65535	; assembler added errata NOP
  7818  0018BA  0E00               	movlw	0
  7819  0018BC  1417               	andwf	___xxtofl@arg^0,w,c
  7820  0018BE  6E11               	movwf	??___xxtofl^0,c
  7821  0018C0  0E00               	movlw	0
  7822  0018C2  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  7823  0018C4  6E12               	movwf	(??___xxtofl+1)^0,c
  7824  0018C6  0E00               	movlw	0
  7825  0018C8  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  7826  0018CA  6E13               	movwf	(??___xxtofl+2)^0,c
  7827  0018CC  0EFE               	movlw	254
  7828  0018CE  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  7829  0018D0  6E14               	movwf	(??___xxtofl+3)^0,c
  7830  0018D2  5011               	movf	??___xxtofl^0,w,c
  7831  0018D4  1012               	iorwf	(??___xxtofl+1)^0,w,c
  7832  0018D6  1013               	iorwf	(??___xxtofl+2)^0,w,c
  7833  0018D8  1014               	iorwf	(??___xxtofl+3)^0,w,c
  7834  0018DA  A4D8               	btfss	status,2,c
  7835  0018DC  EF72  F00C         	goto	u2481
  7836  0018E0  EF75  F00C         	goto	u2480
  7837  0018E4                     u2481:
  7838  0018E4  FFFF               	dw	65535	; assembler added errata NOP
  7839  0018E6  EF55  F00C         	goto	l2638
  7840  0018EA                     u2480:
  7841  0018EA  FFFF               	dw	65535	; assembler added errata NOP
  7842  0018EC  EF85  F00C         	goto	l1065
  7843  0018F0                     l2642:
  7844  0018F0  FFFF               	dw	65535	; assembler added errata NOP
  7845  0018F2  2A16               	incf	___xxtofl@exp^0,f,c
  7846  0018F4  0E01               	movlw	1
  7847  0018F6  2617               	addwf	___xxtofl@arg^0,f,c
  7848  0018F8  0E00               	movlw	0
  7849  0018FA  2218               	addwfc	(___xxtofl@arg+1)^0,f,c
  7850  0018FC  2219               	addwfc	(___xxtofl@arg+2)^0,f,c
  7851  0018FE  221A               	addwfc	(___xxtofl@arg+3)^0,f,c
  7852  001900  90D8               	bcf	status,0,c
  7853  001902  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  7854  001904  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  7855  001906  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  7856  001908  3217               	rrcf	___xxtofl@arg^0,f,c
  7857  00190A                     l1065:
  7858  00190A  FFFF               	dw	65535	; assembler added errata NOP
  7859  00190C  0E00               	movlw	0
  7860  00190E  1417               	andwf	___xxtofl@arg^0,w,c
  7861  001910  6E11               	movwf	??___xxtofl^0,c
  7862  001912  0E00               	movlw	0
  7863  001914  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  7864  001916  6E12               	movwf	(??___xxtofl+1)^0,c
  7865  001918  0E00               	movlw	0
  7866  00191A  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  7867  00191C  6E13               	movwf	(??___xxtofl+2)^0,c
  7868  00191E  0EFF               	movlw	255
  7869  001920  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  7870  001922  6E14               	movwf	(??___xxtofl+3)^0,c
  7871  001924  5011               	movf	??___xxtofl^0,w,c
  7872  001926  1012               	iorwf	(??___xxtofl+1)^0,w,c
  7873  001928  1013               	iorwf	(??___xxtofl+2)^0,w,c
  7874  00192A  1014               	iorwf	(??___xxtofl+3)^0,w,c
  7875  00192C  A4D8               	btfss	status,2,c
  7876  00192E  EF9B  F00C         	goto	u2491
  7877  001932  EF9E  F00C         	goto	u2490
  7878  001936                     u2491:
  7879  001936  FFFF               	dw	65535	; assembler added errata NOP
  7880  001938  EF78  F00C         	goto	l2642
  7881  00193C                     u2490:
  7882  00193C  FFFF               	dw	65535	; assembler added errata NOP
  7883  00193E  EFA8  F00C         	goto	l2650
  7884  001942                     l2648:
  7885  001942  FFFF               	dw	65535	; assembler added errata NOP
  7886  001944  0616               	decf	___xxtofl@exp^0,f,c
  7887  001946  90D8               	bcf	status,0,c
  7888  001948  3617               	rlcf	___xxtofl@arg^0,f,c
  7889  00194A  3618               	rlcf	(___xxtofl@arg+1)^0,f,c
  7890  00194C  3619               	rlcf	(___xxtofl@arg+2)^0,f,c
  7891  00194E  361A               	rlcf	(___xxtofl@arg+3)^0,f,c
  7892  001950                     l2650:
  7893  001950  FFFF               	dw	65535	; assembler added errata NOP
  7894  001952  BE19               	btfsc	(___xxtofl@arg+2)^0,7,c
  7895  001954  EFAE  F00C         	goto	u2501
  7896  001958  EFB1  F00C         	goto	u2500
  7897  00195C                     u2501:
  7898  00195C  FFFF               	dw	65535	; assembler added errata NOP
  7899  00195E  EFBB  F00C         	goto	l1072
  7900  001962                     u2500:
  7901  001962  FFFF               	dw	65535	; assembler added errata NOP
  7902  001964  0E02               	movlw	2
  7903  001966  6016               	cpfslt	___xxtofl@exp^0,c
  7904  001968  EFB8  F00C         	goto	u2511
  7905  00196C  EFBB  F00C         	goto	u2510
  7906  001970                     u2511:
  7907  001970  FFFF               	dw	65535	; assembler added errata NOP
  7908  001972  EFA1  F00C         	goto	l2648
  7909  001976                     u2510:
  7910  001976                     l1072:
  7911  001976  FFFF               	dw	65535	; assembler added errata NOP
  7912  001978  B016               	btfsc	___xxtofl@exp^0,0,c
  7913  00197A  EFC1  F00C         	goto	u2521
  7914  00197E  EFC4  F00C         	goto	u2520
  7915  001982                     u2521:
  7916  001982  FFFF               	dw	65535	; assembler added errata NOP
  7917  001984  EFC6  F00C         	goto	l2656
  7918  001988                     u2520:
  7919  001988  FFFF               	dw	65535	; assembler added errata NOP
  7920  00198A  9E19               	bcf	(___xxtofl@arg+2)^0,7,c
  7921  00198C                     l2656:
  7922  00198C  FFFF               	dw	65535	; assembler added errata NOP
  7923  00198E  90D8               	bcf	status,0,c
  7924  001990  3216               	rrcf	___xxtofl@exp^0,f,c
  7925  001992  C016  F011         	movff	___xxtofl@exp,??___xxtofl
  7926  001996  6A12               	clrf	(??___xxtofl+1)^0,c
  7927  001998  6A13               	clrf	(??___xxtofl+2)^0,c
  7928  00199A  6A14               	clrf	(??___xxtofl+3)^0,c
  7929  00199C  C011  F014         	movff	??___xxtofl,??___xxtofl+3
  7930  0019A0  6A13               	clrf	(??___xxtofl+2)^0,c
  7931  0019A2  6A12               	clrf	(??___xxtofl+1)^0,c
  7932  0019A4  6A11               	clrf	??___xxtofl^0,c
  7933  0019A6  5011               	movf	??___xxtofl^0,w,c
  7934  0019A8  1217               	iorwf	___xxtofl@arg^0,f,c
  7935  0019AA  5012               	movf	(??___xxtofl+1)^0,w,c
  7936  0019AC  1218               	iorwf	(___xxtofl@arg+1)^0,f,c
  7937  0019AE  5013               	movf	(??___xxtofl+2)^0,w,c
  7938  0019B0  1219               	iorwf	(___xxtofl@arg+2)^0,f,c
  7939  0019B2  5014               	movf	(??___xxtofl+3)^0,w,c
  7940  0019B4  121A               	iorwf	(___xxtofl@arg+3)^0,f,c
  7941  0019B6  5015               	movf	___xxtofl@sign^0,w,c
  7942  0019B8  B4D8               	btfsc	status,2,c
  7943  0019BA  EFE1  F00C         	goto	u2531
  7944  0019BE  EFE4  F00C         	goto	u2530
  7945  0019C2                     u2531:
  7946  0019C2  FFFF               	dw	65535	; assembler added errata NOP
  7947  0019C4  EFEF  F00C         	goto	l2666
  7948  0019C8                     u2530:
  7949  0019C8  FFFF               	dw	65535	; assembler added errata NOP
  7950  0019CA  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
  7951  0019CC  EFED  F00C         	goto	u2540
  7952  0019D0  EFEA  F00C         	goto	u2541
  7953  0019D4                     u2541:
  7954  0019D4  FFFF               	dw	65535	; assembler added errata NOP
  7955  0019D6  EFEF  F00C         	goto	l2666
  7956  0019DA                     u2540:
  7957  0019DA  FFFF               	dw	65535	; assembler added errata NOP
  7958  0019DC  8E1A               	bsf	(___xxtofl@arg+3)^0,7,c
  7959  0019DE                     l2666:
  7960  0019DE  FFFF               	dw	65535	; assembler added errata NOP
  7961  0019E0  C017  F00D         	movff	___xxtofl@arg,?___xxtofl
  7962  0019E4  C018  F00E         	movff	___xxtofl@arg+1,?___xxtofl+1
  7963  0019E8  C019  F00F         	movff	___xxtofl@arg+2,?___xxtofl+2
  7964  0019EC  C01A  F010         	movff	___xxtofl@arg+3,?___xxtofl+3
  7965  0019F0                     l1061:
  7966  0019F0  FFFF               	dw	65535	; assembler added errata NOP
  7967  0019F2  0012               	return		;funcret
  7968  0019F4  FFFF               	dw	65535	; errata NOP
  7969  0019F6                     __end_of___xxtofl:
  7970                           	callstack 0
  7971                           
  7972 ;; *************** function ___flge *****************
  7973 ;; Defined at:
  7974 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
  7975 ;; Parameters:    Size  Location     Type
  7976 ;;  ff1             4   63[COMRAM] unsigned char 
  7977 ;;  ff2             4   67[COMRAM] unsigned char 
  7978 ;; Auto vars:     Size  Location     Type
  7979 ;;		None
  7980 ;; Return value:  Size  Location     Type
  7981 ;;		None               void
  7982 ;; Registers used:
  7983 ;;		wreg, status,2, status,0
  7984 ;; Tracked objects:
  7985 ;;		On entry : 0/0
  7986 ;;		On exit  : 0/0
  7987 ;;		Unchanged: 0/0
  7988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7989 ;;      Params:         8       0       0       0       0       0       0
  7990 ;;      Locals:         0       0       0       0       0       0       0
  7991 ;;      Temps:          4       0       0       0       0       0       0
  7992 ;;      Totals:        12       0       0       0       0       0       0
  7993 ;;Total ram usage:       12 bytes
  7994 ;; Hardware stack levels used:    1
  7995 ;; Hardware stack levels required when called:    1
  7996 ;; This function calls:
  7997 ;;		Nothing
  7998 ;; This function is called by:
  7999 ;;		_main
  8000 ;;		_check_temperature
  8001 ;;		_roundf
  8002 ;; This function uses a non-reentrant model
  8003 ;;
  8004                           
  8005                           	psect	text34
  8006  001C9A                     __ptext34:
  8007                           	callstack 0
  8008  001C9A                     ___flge:
  8009                           	callstack 0
  8010  001C9A  FFFF               	dw	65535	; assembler added errata NOP
  8011  001C9C  0E00               	movlw	0
  8012  001C9E  1440               	andwf	___flge@ff1^0,w,c
  8013  001CA0  6E48               	movwf	??___flge^0,c
  8014  001CA2  0E00               	movlw	0
  8015  001CA4  1441               	andwf	(___flge@ff1+1)^0,w,c
  8016  001CA6  6E49               	movwf	(??___flge+1)^0,c
  8017  001CA8  0E80               	movlw	128
  8018  001CAA  1442               	andwf	(___flge@ff1+2)^0,w,c
  8019  001CAC  6E4A               	movwf	(??___flge+2)^0,c
  8020  001CAE  0E7F               	movlw	127
  8021  001CB0  1443               	andwf	(___flge@ff1+3)^0,w,c
  8022  001CB2  6E4B               	movwf	(??___flge+3)^0,c
  8023  001CB4  5048               	movf	??___flge^0,w,c
  8024  001CB6  1049               	iorwf	(??___flge+1)^0,w,c
  8025  001CB8  104A               	iorwf	(??___flge+2)^0,w,c
  8026  001CBA  104B               	iorwf	(??___flge+3)^0,w,c
  8027  001CBC  A4D8               	btfss	status,2,c
  8028  001CBE  EF63  F00E         	goto	u2321
  8029  001CC2  EF66  F00E         	goto	u2320
  8030  001CC6                     u2321:
  8031  001CC6  FFFF               	dw	65535	; assembler added errata NOP
  8032  001CC8  EF6F  F00E         	goto	l2554
  8033  001CCC                     u2320:
  8034  001CCC  FFFF               	dw	65535	; assembler added errata NOP
  8035  001CCE  0E00               	movlw	0
  8036  001CD0  6E40               	movwf	___flge@ff1^0,c
  8037  001CD2  0E00               	movlw	0
  8038  001CD4  6E41               	movwf	(___flge@ff1+1)^0,c
  8039  001CD6  0E00               	movlw	0
  8040  001CD8  6E42               	movwf	(___flge@ff1+2)^0,c
  8041  001CDA  0E00               	movlw	0
  8042  001CDC  6E43               	movwf	(___flge@ff1+3)^0,c
  8043  001CDE                     l2554:
  8044  001CDE  FFFF               	dw	65535	; assembler added errata NOP
  8045  001CE0  0E00               	movlw	0
  8046  001CE2  1444               	andwf	___flge@ff2^0,w,c
  8047  001CE4  6E48               	movwf	??___flge^0,c
  8048  001CE6  0E00               	movlw	0
  8049  001CE8  1445               	andwf	(___flge@ff2+1)^0,w,c
  8050  001CEA  6E49               	movwf	(??___flge+1)^0,c
  8051  001CEC  0E80               	movlw	128
  8052  001CEE  1446               	andwf	(___flge@ff2+2)^0,w,c
  8053  001CF0  6E4A               	movwf	(??___flge+2)^0,c
  8054  001CF2  0E7F               	movlw	127
  8055  001CF4  1447               	andwf	(___flge@ff2+3)^0,w,c
  8056  001CF6  6E4B               	movwf	(??___flge+3)^0,c
  8057  001CF8  5048               	movf	??___flge^0,w,c
  8058  001CFA  1049               	iorwf	(??___flge+1)^0,w,c
  8059  001CFC  104A               	iorwf	(??___flge+2)^0,w,c
  8060  001CFE  104B               	iorwf	(??___flge+3)^0,w,c
  8061  001D00  A4D8               	btfss	status,2,c
  8062  001D02  EF85  F00E         	goto	u2331
  8063  001D06  EF88  F00E         	goto	u2330
  8064  001D0A                     u2331:
  8065  001D0A  FFFF               	dw	65535	; assembler added errata NOP
  8066  001D0C  EF91  F00E         	goto	l2558
  8067  001D10                     u2330:
  8068  001D10  FFFF               	dw	65535	; assembler added errata NOP
  8069  001D12  0E00               	movlw	0
  8070  001D14  6E44               	movwf	___flge@ff2^0,c
  8071  001D16  0E00               	movlw	0
  8072  001D18  6E45               	movwf	(___flge@ff2+1)^0,c
  8073  001D1A  0E00               	movlw	0
  8074  001D1C  6E46               	movwf	(___flge@ff2+2)^0,c
  8075  001D1E  0E00               	movlw	0
  8076  001D20  6E47               	movwf	(___flge@ff2+3)^0,c
  8077  001D22                     l2558:
  8078  001D22  FFFF               	dw	65535	; assembler added errata NOP
  8079  001D24  AE43               	btfss	(___flge@ff1+3)^0,7,c
  8080  001D26  EF97  F00E         	goto	u2341
  8081  001D2A  EF9A  F00E         	goto	u2340
  8082  001D2E                     u2341:
  8083  001D2E  FFFF               	dw	65535	; assembler added errata NOP
  8084  001D30  EFA4  F00E         	goto	l2562
  8085  001D34                     u2340:
  8086  001D34  FFFF               	dw	65535	; assembler added errata NOP
  8087  001D36  6C40               	negf	___flge@ff1^0,c
  8088  001D38  1E41               	comf	(___flge@ff1+1)^0,f,c
  8089  001D3A  B0D8               	btfsc	status,0,c
  8090  001D3C  2A41               	incf	(___flge@ff1+1)^0,f,c
  8091  001D3E  1E42               	comf	(___flge@ff1+2)^0,f,c
  8092  001D40  B0D8               	btfsc	status,0,c
  8093  001D42  2A42               	incf	(___flge@ff1+2)^0,f,c
  8094  001D44  0E80               	movlw	128
  8095  001D46  5643               	subfwb	(___flge@ff1+3)^0,f,c
  8096  001D48                     l2562:
  8097  001D48  FFFF               	dw	65535	; assembler added errata NOP
  8098  001D4A  AE47               	btfss	(___flge@ff2+3)^0,7,c
  8099  001D4C  EFAA  F00E         	goto	u2351
  8100  001D50  EFAD  F00E         	goto	u2350
  8101  001D54                     u2351:
  8102  001D54  FFFF               	dw	65535	; assembler added errata NOP
  8103  001D56  EFB7  F00E         	goto	l668
  8104  001D5A                     u2350:
  8105  001D5A  FFFF               	dw	65535	; assembler added errata NOP
  8106  001D5C  6C44               	negf	___flge@ff2^0,c
  8107  001D5E  1E45               	comf	(___flge@ff2+1)^0,f,c
  8108  001D60  B0D8               	btfsc	status,0,c
  8109  001D62  2A45               	incf	(___flge@ff2+1)^0,f,c
  8110  001D64  1E46               	comf	(___flge@ff2+2)^0,f,c
  8111  001D66  B0D8               	btfsc	status,0,c
  8112  001D68  2A46               	incf	(___flge@ff2+2)^0,f,c
  8113  001D6A  0E80               	movlw	128
  8114  001D6C  5647               	subfwb	(___flge@ff2+3)^0,f,c
  8115  001D6E                     l668:
  8116  001D6E  FFFF               	dw	65535	; assembler added errata NOP
  8117  001D70  0E00               	movlw	0
  8118  001D72  1A40               	xorwf	___flge@ff1^0,f,c
  8119  001D74  0E00               	movlw	0
  8120  001D76  1A41               	xorwf	(___flge@ff1+1)^0,f,c
  8121  001D78  0E00               	movlw	0
  8122  001D7A  1A42               	xorwf	(___flge@ff1+2)^0,f,c
  8123  001D7C  0E80               	movlw	128
  8124  001D7E  1A43               	xorwf	(___flge@ff1+3)^0,f,c
  8125  001D80  0E00               	movlw	0
  8126  001D82  1A44               	xorwf	___flge@ff2^0,f,c
  8127  001D84  0E00               	movlw	0
  8128  001D86  1A45               	xorwf	(___flge@ff2+1)^0,f,c
  8129  001D88  0E00               	movlw	0
  8130  001D8A  1A46               	xorwf	(___flge@ff2+2)^0,f,c
  8131  001D8C  0E80               	movlw	128
  8132  001D8E  1A47               	xorwf	(___flge@ff2+3)^0,f,c
  8133  001D90  5044               	movf	___flge@ff2^0,w,c
  8134  001D92  5C40               	subwf	___flge@ff1^0,w,c
  8135  001D94  5045               	movf	(___flge@ff2+1)^0,w,c
  8136  001D96  5841               	subwfb	(___flge@ff1+1)^0,w,c
  8137  001D98  5046               	movf	(___flge@ff2+2)^0,w,c
  8138  001D9A  5842               	subwfb	(___flge@ff1+2)^0,w,c
  8139  001D9C  5047               	movf	(___flge@ff2+3)^0,w,c
  8140  001D9E  5843               	subwfb	(___flge@ff1+3)^0,w,c
  8141  001DA0  B0D8               	btfsc	status,0,c
  8142  001DA2  EFD5  F00E         	goto	u2361
  8143  001DA6  EFD8  F00E         	goto	u2360
  8144  001DAA                     u2361:
  8145  001DAA  FFFF               	dw	65535	; assembler added errata NOP
  8146  001DAC  EFDC  F00E         	goto	l2568
  8147  001DB0                     u2360:
  8148  001DB0  FFFF               	dw	65535	; assembler added errata NOP
  8149  001DB2  90D8               	bcf	status,0,c
  8150  001DB4  EFDE  F00E         	goto	l673
  8151  001DB8                     l2568:
  8152  001DB8  FFFF               	dw	65535	; assembler added errata NOP
  8153  001DBA  80D8               	bsf	status,0,c
  8154  001DBC                     l673:
  8155  001DBC  FFFF               	dw	65535	; assembler added errata NOP
  8156  001DBE  0012               	return		;funcret
  8157  001DC0  FFFF               	dw	65535	; errata NOP
  8158  001DC2                     __end_of___flge:
  8159                           	callstack 0
  8160                           
  8161 ;; *************** function ___awdiv *****************
  8162 ;; Defined at:
  8163 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  8164 ;; Parameters:    Size  Location     Type
  8165 ;;  dividend        2    4[COMRAM] int 
  8166 ;;  divisor         2    6[COMRAM] int 
  8167 ;; Auto vars:     Size  Location     Type
  8168 ;;  quotient        2   10[COMRAM] int 
  8169 ;;  sign            1    9[COMRAM] unsigned char 
  8170 ;;  counter         1    8[COMRAM] unsigned char 
  8171 ;; Return value:  Size  Location     Type
  8172 ;;                  2    4[COMRAM] int 
  8173 ;; Registers used:
  8174 ;;		wreg, status,2, status,0
  8175 ;; Tracked objects:
  8176 ;;		On entry : 0/0
  8177 ;;		On exit  : 0/0
  8178 ;;		Unchanged: 0/0
  8179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8180 ;;      Params:         4       0       0       0       0       0       0
  8181 ;;      Locals:         4       0       0       0       0       0       0
  8182 ;;      Temps:          0       0       0       0       0       0       0
  8183 ;;      Totals:         8       0       0       0       0       0       0
  8184 ;;Total ram usage:        8 bytes
  8185 ;; Hardware stack levels used:    1
  8186 ;; Hardware stack levels required when called:    1
  8187 ;; This function calls:
  8188 ;;		Nothing
  8189 ;; This function is called by:
  8190 ;;		_check_temperature
  8191 ;; This function uses a non-reentrant model
  8192 ;;
  8193                           
  8194                           	psect	text35
  8195  001DC2                     __ptext35:
  8196                           	callstack 0
  8197  001DC2                     ___awdiv:
  8198                           	callstack 0
  8199  001DC2  FFFF               	dw	65535	; assembler added errata NOP
  8200  001DC4  0E00               	movlw	0
  8201  001DC6  6E0A               	movwf	___awdiv@sign^0,c
  8202  001DC8  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  8203  001DCA  EFEC  F00E         	goto	u2690
  8204  001DCE  EFE9  F00E         	goto	u2691
  8205  001DD2                     u2691:
  8206  001DD2  FFFF               	dw	65535	; assembler added errata NOP
  8207  001DD4  EFF3  F00E         	goto	l2764
  8208  001DD8                     u2690:
  8209  001DD8  FFFF               	dw	65535	; assembler added errata NOP
  8210  001DDA  6C07               	negf	___awdiv@divisor^0,c
  8211  001DDC  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  8212  001DDE  B0D8               	btfsc	status,0,c
  8213  001DE0  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  8214  001DE2  0E01               	movlw	1
  8215  001DE4  6E0A               	movwf	___awdiv@sign^0,c
  8216  001DE6                     l2764:
  8217  001DE6  FFFF               	dw	65535	; assembler added errata NOP
  8218  001DE8  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  8219  001DEA  EFFC  F00E         	goto	u2700
  8220  001DEE  EFF9  F00E         	goto	u2701
  8221  001DF2                     u2701:
  8222  001DF2  FFFF               	dw	65535	; assembler added errata NOP
  8223  001DF4  EF03  F00F         	goto	l2770
  8224  001DF8                     u2700:
  8225  001DF8  FFFF               	dw	65535	; assembler added errata NOP
  8226  001DFA  6C05               	negf	___awdiv@dividend^0,c
  8227  001DFC  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  8228  001DFE  B0D8               	btfsc	status,0,c
  8229  001E00  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  8230  001E02  0E01               	movlw	1
  8231  001E04  1A0A               	xorwf	___awdiv@sign^0,f,c
  8232  001E06                     l2770:
  8233  001E06  FFFF               	dw	65535	; assembler added errata NOP
  8234  001E08  0E00               	movlw	0
  8235  001E0A  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  8236  001E0C  0E00               	movlw	0
  8237  001E0E  6E0B               	movwf	___awdiv@quotient^0,c
  8238  001E10  5007               	movf	___awdiv@divisor^0,w,c
  8239  001E12  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  8240  001E14  B4D8               	btfsc	status,2,c
  8241  001E16  EF0F  F00F         	goto	u2711
  8242  001E1A  EF12  F00F         	goto	u2710
  8243  001E1E                     u2711:
  8244  001E1E  FFFF               	dw	65535	; assembler added errata NOP
  8245  001E20  EF43  F00F         	goto	l2792
  8246  001E24                     u2710:
  8247  001E24  FFFF               	dw	65535	; assembler added errata NOP
  8248  001E26  0E01               	movlw	1
  8249  001E28  6E09               	movwf	___awdiv@counter^0,c
  8250  001E2A  EF1C  F00F         	goto	l2778
  8251  001E2E                     l2776:
  8252  001E2E  FFFF               	dw	65535	; assembler added errata NOP
  8253  001E30  90D8               	bcf	status,0,c
  8254  001E32  3607               	rlcf	___awdiv@divisor^0,f,c
  8255  001E34  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  8256  001E36  2A09               	incf	___awdiv@counter^0,f,c
  8257  001E38                     l2778:
  8258  001E38  FFFF               	dw	65535	; assembler added errata NOP
  8259  001E3A  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  8260  001E3C  EF22  F00F         	goto	u2721
  8261  001E40  EF25  F00F         	goto	u2720
  8262  001E44                     u2721:
  8263  001E44  FFFF               	dw	65535	; assembler added errata NOP
  8264  001E46  EF17  F00F         	goto	l2776
  8265  001E4A                     u2720:
  8266  001E4A  FFFF               	dw	65535	; assembler added errata NOP
  8267  001E4C                     l2780:
  8268  001E4C  FFFF               	dw	65535	; assembler added errata NOP
  8269  001E4E  90D8               	bcf	status,0,c
  8270  001E50  360B               	rlcf	___awdiv@quotient^0,f,c
  8271  001E52  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  8272  001E54  5007               	movf	___awdiv@divisor^0,w,c
  8273  001E56  5C05               	subwf	___awdiv@dividend^0,w,c
  8274  001E58  5008               	movf	(___awdiv@divisor+1)^0,w,c
  8275  001E5A  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  8276  001E5C  A0D8               	btfss	status,0,c
  8277  001E5E  EF33  F00F         	goto	u2731
  8278  001E62  EF36  F00F         	goto	u2730
  8279  001E66                     u2731:
  8280  001E66  FFFF               	dw	65535	; assembler added errata NOP
  8281  001E68  EF3C  F00F         	goto	l2788
  8282  001E6C                     u2730:
  8283  001E6C  FFFF               	dw	65535	; assembler added errata NOP
  8284  001E6E  5007               	movf	___awdiv@divisor^0,w,c
  8285  001E70  5E05               	subwf	___awdiv@dividend^0,f,c
  8286  001E72  5008               	movf	(___awdiv@divisor+1)^0,w,c
  8287  001E74  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  8288  001E76  800B               	bsf	___awdiv@quotient^0,0,c
  8289  001E78                     l2788:
  8290  001E78  FFFF               	dw	65535	; assembler added errata NOP
  8291  001E7A  90D8               	bcf	status,0,c
  8292  001E7C  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  8293  001E7E  3207               	rrcf	___awdiv@divisor^0,f,c
  8294  001E80  2E09               	decfsz	___awdiv@counter^0,f,c
  8295  001E82  EF26  F00F         	goto	l2780
  8296  001E86                     l2792:
  8297  001E86  FFFF               	dw	65535	; assembler added errata NOP
  8298  001E88  500A               	movf	___awdiv@sign^0,w,c
  8299  001E8A  B4D8               	btfsc	status,2,c
  8300  001E8C  EF4A  F00F         	goto	u2741
  8301  001E90  EF4D  F00F         	goto	u2740
  8302  001E94                     u2741:
  8303  001E94  FFFF               	dw	65535	; assembler added errata NOP
  8304  001E96  EF52  F00F         	goto	l2796
  8305  001E9A                     u2740:
  8306  001E9A  FFFF               	dw	65535	; assembler added errata NOP
  8307  001E9C  6C0B               	negf	___awdiv@quotient^0,c
  8308  001E9E  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  8309  001EA0  B0D8               	btfsc	status,0,c
  8310  001EA2  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  8311  001EA4                     l2796:
  8312  001EA4  FFFF               	dw	65535	; assembler added errata NOP
  8313  001EA6  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  8314  001EAA  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  8315  001EAE  0012               	return		;funcret
  8316  001EB0  FFFF               	dw	65535	; errata NOP
  8317  001EB2                     __end_of___awdiv:
  8318                           	callstack 0
  8319                           
  8320 ;; *************** function _change_direction *****************
  8321 ;; Defined at:
  8322 ;;		line 41 in file "stepper_motor.c"
  8323 ;; Parameters:    Size  Location     Type
  8324 ;;  stepper_moto    2    0[COMRAM] PTR struct .
  8325 ;;		 -> joint_dilutor_stepper(12), end_effector_stepper(12), joint_stepper(12), 
  8326 ;; Auto vars:     Size  Location     Type
  8327 ;;		None
  8328 ;; Return value:  Size  Location     Type
  8329 ;;                  1    wreg      void 
  8330 ;; Registers used:
  8331 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8332 ;; Tracked objects:
  8333 ;;		On entry : 0/0
  8334 ;;		On exit  : 0/0
  8335 ;;		Unchanged: 0/0
  8336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8337 ;;      Params:         2       0       0       0       0       0       0
  8338 ;;      Locals:         0       0       0       0       0       0       0
  8339 ;;      Temps:          2       0       0       0       0       0       0
  8340 ;;      Totals:         4       0       0       0       0       0       0
  8341 ;;Total ram usage:        4 bytes
  8342 ;; Hardware stack levels used:    1
  8343 ;; Hardware stack levels required when called:    1
  8344 ;; This function calls:
  8345 ;;		Nothing
  8346 ;; This function is called by:
  8347 ;;		_main
  8348 ;; This function uses a non-reentrant model
  8349 ;;
  8350                           
  8351                           	psect	text36
  8352  002632                     __ptext36:
  8353                           	callstack 0
  8354  002632                     _change_direction:
  8355                           	callstack 0
  8356  002632  FFFF               	dw	65535	; assembler added errata NOP
  8357  002634                     
  8358                           ;stepper_motor.c: 42:     stepper_motor -> direction = stepper_motor -> direction*(-1);
  8359  002634  EE20 F004          	lfsr	2,4
  8360  002638  5001               	movf	change_direction@stepper_motor^0,w,c
  8361  00263A  26D9               	addwf	fsr2l,f,c
  8362  00263C  5002               	movf	(change_direction@stepper_motor+1)^0,w,c
  8363  00263E  22DA               	addwfc	fsr2h,f,c
  8364  002640  CFDE F003          	movff	postinc2,??_change_direction
  8365  002644  CFDD F004          	movff	postdec2,??_change_direction+1
  8366  002648  1E03               	comf	??_change_direction^0,f,c
  8367  00264A  1E04               	comf	(??_change_direction+1)^0,f,c
  8368  00264C  4A03               	infsnz	??_change_direction^0,f,c
  8369  00264E  2A04               	incf	(??_change_direction+1)^0,f,c
  8370  002650  EE20 F004          	lfsr	2,4
  8371  002654  5001               	movf	change_direction@stepper_motor^0,w,c
  8372  002656  26D9               	addwf	fsr2l,f,c
  8373  002658  5002               	movf	(change_direction@stepper_motor+1)^0,w,c
  8374  00265A  22DA               	addwfc	fsr2h,f,c
  8375  00265C  C003  FFDE         	movff	??_change_direction,postinc2
  8376  002660  C004  FFDD         	movff	??_change_direction+1,postdec2
  8377  002664  0012               	return		;funcret
  8378  002666  FFFF               	dw	65535	; errata NOP
  8379  002668                     __end_of_change_direction:
  8380                           	callstack 0
  8381                           
  8382 ;; *************** function _rx_char_usart *****************
  8383 ;; Defined at:
  8384 ;;		line 247 in file "main.c"
  8385 ;; Parameters:    Size  Location     Type
  8386 ;;		None
  8387 ;; Auto vars:     Size  Location     Type
  8388 ;;		None
  8389 ;; Return value:  Size  Location     Type
  8390 ;;                  1    wreg      void 
  8391 ;; Registers used:
  8392 ;;		wreg, status,2
  8393 ;; Tracked objects:
  8394 ;;		On entry : 0/0
  8395 ;;		On exit  : 0/0
  8396 ;;		Unchanged: 0/0
  8397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8398 ;;      Params:         0       0       0       0       0       0       0
  8399 ;;      Locals:         0       0       0       0       0       0       0
  8400 ;;      Temps:          0       0       0       0       0       0       0
  8401 ;;      Totals:         0       0       0       0       0       0       0
  8402 ;;Total ram usage:        0 bytes
  8403 ;; Hardware stack levels used:    1
  8404 ;; This function calls:
  8405 ;;		Nothing
  8406 ;; This function is called by:
  8407 ;;		Interrupt level 2
  8408 ;; This function uses a non-reentrant model
  8409 ;;
  8410                           
  8411                           	psect	intcode
  8412  000008                     __pintcode:
  8413                           	callstack 0
  8414  000008                     _rx_char_usart:
  8415                           	callstack 0
  8416  000008  FFFF               	dw	65535	; assembler added errata NOP
  8417                           
  8418                           ;incstack = 0
  8419  00000A  827F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8420  00000C                     
  8421                           ;main.c: 248:     if(PIE1bits.RCIE && PIR1bits.RCIF){
  8422  00000C  AA9D               	btfss	157,5,c	;volatile
  8423  00000E  EF0B  F000         	goto	i2u170_41
  8424  000012  EF0E  F000         	goto	i2u170_40
  8425  000016                     i2u170_41:
  8426  000016  FFFF               	dw	65535	; assembler added errata NOP
  8427  000018  EF1D  F000         	goto	i2l2186
  8428  00001C                     i2u170_40:
  8429  00001C  FFFF               	dw	65535	; assembler added errata NOP
  8430  00001E  AA9E               	btfss	158,5,c	;volatile
  8431  000020  EF14  F000         	goto	i2u171_41
  8432  000024  EF17  F000         	goto	i2u171_40
  8433  000028                     i2u171_41:
  8434  000028  FFFF               	dw	65535	; assembler added errata NOP
  8435  00002A  EF1D  F000         	goto	i2l2186
  8436  00002E                     i2u171_40:
  8437  00002E  FFFF               	dw	65535	; assembler added errata NOP
  8438  000030                     
  8439                           ;main.c: 249:         PIR1bits.RCIF = 0;
  8440  000030  9A9E               	bcf	158,5,c	;volatile
  8441  000032                     
  8442                           ;main.c: 250:         state_changed = 1;
  8443  000032  0E01               	movlw	1
  8444  000034  6E7C               	movwf	_state_changed^0,c
  8445                           
  8446                           ;main.c: 251:         read_new_char = 1;
  8447  000036  0E01               	movlw	1
  8448  000038  6E7A               	movwf	_read_new_char^0,c
  8449  00003A                     i2l2186:
  8450  00003A  FFFF               	dw	65535	; assembler added errata NOP
  8451                           
  8452                           ;main.c: 253:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF){
  8453  00003C  AAF2               	btfss	242,5,c	;volatile
  8454  00003E  EF23  F000         	goto	i2u172_41
  8455  000042  EF26  F000         	goto	i2u172_40
  8456  000046                     i2u172_41:
  8457  000046  FFFF               	dw	65535	; assembler added errata NOP
  8458  000048  EF36  F000         	goto	i2l221
  8459  00004C                     i2u172_40:
  8460  00004C  FFFF               	dw	65535	; assembler added errata NOP
  8461  00004E  A4F2               	btfss	242,2,c	;volatile
  8462  000050  EF2C  F000         	goto	i2u173_41
  8463  000054  EF2F  F000         	goto	i2u173_40
  8464  000058                     i2u173_41:
  8465  000058  FFFF               	dw	65535	; assembler added errata NOP
  8466  00005A  EF36  F000         	goto	i2l221
  8467  00005E                     i2u173_40:
  8468  00005E  FFFF               	dw	65535	; assembler added errata NOP
  8469  000060                     
  8470                           ;main.c: 254:         T0CON = 0;
  8471  000060  0E00               	movlw	0
  8472  000062  6ED5               	movwf	213,c	;volatile
  8473  000064                     
  8474                           ;main.c: 255:         INTCONbits.TMR0IF = 0;
  8475  000064  94F2               	bcf	242,2,c	;volatile
  8476                           
  8477                           ;main.c: 256:         timer_done = 1;
  8478  000066  0E01               	movlw	1
  8479  000068  6E79               	movwf	_timer_done^0,c
  8480  00006A                     
  8481                           ;main.c: 257:         T0CONbits.TMR0ON = 0;
  8482  00006A  9ED5               	bcf	213,7,c	;volatile
  8483  00006C                     i2l221:
  8484  00006C  FFFF               	dw	65535	; assembler added errata NOP
  8485  00006E  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8486  000070  0011               	retfie		f
  8487  000072  FFFF               	dw	65535	; errata NOP
  8488  000074                     __end_of_rx_char_usart:
  8489                           	callstack 0
  8490                           
  8491                           	psect	rparam
  8492  0000                     
  8493                           	psect	temp
  8494  00007F                     btemp:
  8495                           	callstack 0
  8496  00007F                     	ds	1
  8497  0000                     int$flags	set	btemp
  8498  0000                     wtemp8	set	btemp+1
  8499  0000                     ttemp5	set	btemp+1
  8500  0000                     ttemp6	set	btemp+4
  8501  0000                     ttemp7	set	btemp+8
  8502                           
  8503                           	psect	idloc
  8504                           
  8505                           ;Config register IDLOC0 @ 0x200000
  8506                           ;	unspecified, using default values
  8507  200000                     	org	2097152
  8508  200000  FF                 	db	255
  8509                           
  8510                           ;Config register IDLOC1 @ 0x200001
  8511                           ;	unspecified, using default values
  8512  200001                     	org	2097153
  8513  200001  FF                 	db	255
  8514                           
  8515                           ;Config register IDLOC2 @ 0x200002
  8516                           ;	unspecified, using default values
  8517  200002                     	org	2097154
  8518  200002  FF                 	db	255
  8519                           
  8520                           ;Config register IDLOC3 @ 0x200003
  8521                           ;	unspecified, using default values
  8522  200003                     	org	2097155
  8523  200003  FF                 	db	255
  8524                           
  8525                           ;Config register IDLOC4 @ 0x200004
  8526                           ;	unspecified, using default values
  8527  200004                     	org	2097156
  8528  200004  FF                 	db	255
  8529                           
  8530                           ;Config register IDLOC5 @ 0x200005
  8531                           ;	unspecified, using default values
  8532  200005                     	org	2097157
  8533  200005  FF                 	db	255
  8534                           
  8535                           ;Config register IDLOC6 @ 0x200006
  8536                           ;	unspecified, using default values
  8537  200006                     	org	2097158
  8538  200006  FF                 	db	255
  8539                           
  8540                           ;Config register IDLOC7 @ 0x200007
  8541                           ;	unspecified, using default values
  8542  200007                     	org	2097159
  8543  200007  FF                 	db	255
  8544                           
  8545                           	psect	config
  8546                           
  8547                           ; Padding undefined space
  8548  300000                     	org	3145728
  8549  300000  FF                 	db	255
  8550                           
  8551                           ;Config register CONFIG1H @ 0x300001
  8552                           ;	Oscillator Selection bits
  8553                           ;	OSC = RCIO, RC oscillator w/ OSC2 configured as RA6
  8554                           ;	Oscillator System Clock Switch Enable bit
  8555                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  8556  300001                     	org	3145729
  8557  300001  27                 	db	39
  8558                           
  8559                           ;Config register CONFIG2L @ 0x300002
  8560                           ;	Power-up Timer Enable bit
  8561                           ;	PWRT = OFF, PWRT disabled
  8562                           ;	Brown-out Reset Enable bit
  8563                           ;	BOR = ON, Brown-out Reset enabled
  8564                           ;	Brown-out Reset Voltage bits
  8565                           ;	BORV = 20, VBOR set to 2.0V
  8566  300002                     	org	3145730
  8567  300002  0F                 	db	15
  8568                           
  8569                           ;Config register CONFIG2H @ 0x300003
  8570                           ;	Watchdog Timer Enable bit
  8571                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8572                           ;	Watchdog Timer Postscale Select bits
  8573                           ;	WDTPS = 128, 1:128
  8574  300003                     	org	3145731
  8575  300003  0E                 	db	14
  8576                           
  8577                           ; Padding undefined space
  8578  300004                     	org	3145732
  8579  300004  FF                 	db	255
  8580                           
  8581                           ;Config register CONFIG3H @ 0x300005
  8582                           ;	CCP2 Mux bit
  8583                           ;	CCP2MUX = ON, CCP2 input/output is multiplexed with RC1
  8584  300005                     	org	3145733
  8585  300005  01                 	db	1
  8586                           
  8587                           ;Config register CONFIG4L @ 0x300006
  8588                           ;	Stack Full/Underflow Reset Enable bit
  8589                           ;	STVR = ON, Stack Full/Underflow will cause RESET
  8590                           ;	Low Voltage ICSP Enable bit
  8591                           ;	LVP = ON, Low Voltage ICSP enabled
  8592                           ;	Background Debugger Enable bit
  8593                           ;	DEBUG = 0x1, unprogrammed default
  8594  300006                     	org	3145734
  8595  300006  85                 	db	133
  8596                           
  8597                           ; Padding undefined space
  8598  300007                     	org	3145735
  8599  300007  FF                 	db	255
  8600                           
  8601                           ;Config register CONFIG5L @ 0x300008
  8602                           ;	Code Protection bit
  8603                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
  8604                           ;	Code Protection bit
  8605                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  8606                           ;	Code Protection bit
  8607                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  8608                           ;	Code Protection bit
  8609                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  8610  300008                     	org	3145736
  8611  300008  0F                 	db	15
  8612                           
  8613                           ;Config register CONFIG5H @ 0x300009
  8614                           ;	Boot Block Code Protection bit
  8615                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  8616                           ;	Data EEPROM Code Protection bit
  8617                           ;	CPD = OFF, Data EEPROM not code protected
  8618  300009                     	org	3145737
  8619  300009  C0                 	db	192
  8620                           
  8621                           ;Config register CONFIG6L @ 0x30000A
  8622                           ;	Write Protection bit
  8623                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  8624                           ;	Write Protection bit
  8625                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  8626                           ;	Write Protection bit
  8627                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  8628                           ;	Write Protection bit
  8629                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  8630  30000A                     	org	3145738
  8631  30000A  0F                 	db	15
  8632                           
  8633                           ;Config register CONFIG6H @ 0x30000B
  8634                           ;	Configuration Register Write Protection bit
  8635                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  8636                           ;	Boot Block Write Protection bit
  8637                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  8638                           ;	Data EEPROM Write Protection bit
  8639                           ;	WRTD = OFF, Data EEPROM not write protected
  8640  30000B                     	org	3145739
  8641  30000B  E0                 	db	224
  8642                           
  8643                           ;Config register CONFIG7L @ 0x30000C
  8644                           ;	Table Read Protection bit
  8645                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  8646                           ;	Table Read Protection bit
  8647                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  8648                           ;	Table Read Protection bit
  8649                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  8650                           ;	Table Read Protection bit
  8651                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  8652  30000C                     	org	3145740
  8653  30000C  0F                 	db	15
  8654                           
  8655                           ;Config register CONFIG7H @ 0x30000D
  8656                           ;	Boot Block Table Read Protection bit
  8657                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  8658  30000D                     	org	3145741
  8659  30000D  40                 	db	64
  8660                           tosu	equ	0xFFF
  8661                           tosh	equ	0xFFE
  8662                           tosl	equ	0xFFD
  8663                           stkptr	equ	0xFFC
  8664                           pclatu	equ	0xFFB
  8665                           pclath	equ	0xFFA
  8666                           pcl	equ	0xFF9
  8667                           tblptru	equ	0xFF8
  8668                           tblptrh	equ	0xFF7
  8669                           tblptrl	equ	0xFF6
  8670                           tablat	equ	0xFF5
  8671                           prodh	equ	0xFF4
  8672                           prodl	equ	0xFF3
  8673                           indf0	equ	0xFEF
  8674                           postinc0	equ	0xFEE
  8675                           postdec0	equ	0xFED
  8676                           preinc0	equ	0xFEC
  8677                           plusw0	equ	0xFEB
  8678                           fsr0h	equ	0xFEA
  8679                           fsr0l	equ	0xFE9
  8680                           wreg	equ	0xFE8
  8681                           indf1	equ	0xFE7
  8682                           postinc1	equ	0xFE6
  8683                           postdec1	equ	0xFE5
  8684                           preinc1	equ	0xFE4
  8685                           plusw1	equ	0xFE3
  8686                           fsr1h	equ	0xFE2
  8687                           fsr1l	equ	0xFE1
  8688                           bsr	equ	0xFE0
  8689                           indf2	equ	0xFDF
  8690                           postinc2	equ	0xFDE
  8691                           postdec2	equ	0xFDD
  8692                           preinc2	equ	0xFDC
  8693                           plusw2	equ	0xFDB
  8694                           fsr2h	equ	0xFDA
  8695                           fsr2l	equ	0xFD9
  8696                           status	equ	0xFD8

Data Sizes:
    Strings     22
    Constant    1216
    Data        14
    BSS         74
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    110     126
    BANK0           128      0      72
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    change_direction@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    change_direction@stepper_motor	PTR struct . size(2) Largest target is 13
		 -> joint_dilutor_stepper(BANK0[12]), end_effector_stepper(BANK0[12]), joint_stepper(BANK0[12]), 

    reach_goal@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    reach_goal@stepper_motor	PTR struct . size(2) Largest target is 13
		 -> joint_dilutor_stepper(BANK0[12]), end_effector_stepper(BANK0[12]), joint_stepper(BANK0[12]), 

    update_current_coil@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    update_current_coil@stepper_motor	PTR struct . size(2) Largest target is 13
		 -> joint_dilutor_stepper(BANK0[12]), end_effector_stepper(BANK0[12]), joint_stepper(BANK0[12]), 

    turn_on_current_coil@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    turn_on_current_coil@stepper_motor	PTR struct . size(2) Largest target is 13
		 -> joint_dilutor_stepper(BANK0[12]), end_effector_stepper(BANK0[12]), joint_stepper(BANK0[12]), 

    init_stepper@register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    init_stepper@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    init_stepper@hex_coil_register_values	PTR unsigned char  size(2) Largest target is 4
		 -> hex_end_effector_values(BANK0[4]), hex_joint_values(BANK0[4]), 

    init_stepper@stepper_motor	PTR struct . size(2) Largest target is 13
		 -> joint_dilutor_stepper(BANK0[12]), end_effector_stepper(BANK0[12]), joint_stepper(BANK0[12]), 

    state_translator_micro_to_fpga@state	PTR int  size(2) Largest target is 2
		 -> state(COMRAM[2]), 

    state_translator_fpga_to_micro@state	PTR int  size(2) Largest target is 2
		 -> state(COMRAM[2]), 

    S782$current_msg	PTR unsigned char  size(2) Largest target is 0

    lcd_manager_init@lcd_manager.current_msg	PTR unsigned char  size(2) Largest target is 0

    S782$new_msg	PTR unsigned char  size(2) Largest target is 0

    lcd_manager_init@lcd_manager.new_msg	PTR unsigned char  size(2) Largest target is 0

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 1200
		 -> const_msgs(CODE[1200]), STR_1(CODE[22]), 

    joint_dilutor_stepper.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    end_effector_stepper.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    S181$register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    joint_stepper.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 


Critical Paths under _main in COMRAM

    _wait_for_zero->_get_temperature
    _get_temperature->___fltol
    _state_translator_fpga_to_micro->_lcd_dat
    _reach_goal->_turn_on_current_coil
    _lcd_update->_lcd_str
    _lcd_str->___wmul
    _lcd_dat->_lcd_wr
    _lcd_init->_lcd_cmd
    _lcd_cmd->_lcd_wr
    _init_USART->_roundf
    _roundf->___flge
    ___flsub->___fladd
    _get_liters->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl
    _check_temperature->___flge
    ___xxtofl->___awdiv
    ___flge->_get_liters
    ___awdiv->_abs

Critical Paths under _rx_char_usart in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _rx_char_usart in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rx_char_usart in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rx_char_usart in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rx_char_usart in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _rx_char_usart in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _rx_char_usart in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               249   249      0   32204
                                            101 COMRAM     9     9      0
                             ___flge
                             ___wmul
                           ___xxtofl
                   _change_direction
                  _check_temperature
       _configure_ad_conversion_oven
       _configure_ad_conversion_tank
                         _get_liters
                      _get_reg_value
                    _get_temperature
                         _init_PORTS
                         _init_USART
                    _init_interrupts
                       _init_stepper
                       _init_timer_0
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                         _lcd_update
                         _reach_goal
                     _serial_tx_char
     _state_translator_fpga_to_micro
     _state_translator_micro_to_fpga
                      _wait_for_zero
 ---------------------------------------------------------------------------------
 (1) _wait_for_zero                                        0     0      0    3207
                    _get_temperature
 ---------------------------------------------------------------------------------
 (2) _get_temperature                                      2     0      2    3207
                                             61 COMRAM     2     0      2
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _state_translator_micro_to_fpga                       5     3      2     168
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _state_translator_fpga_to_micro                       3     1      2     494
                                              2 COMRAM     3     1      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (1) _serial_tx_char                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _reach_goal                                           7     3      4    1590
                                              8 COMRAM     7     3      4
               _turn_on_current_coil
                _update_current_coil
 ---------------------------------------------------------------------------------
 (2) _update_current_coil                                  6     4      2     274
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _turn_on_current_coil                                 8     6      2     142
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _lcd_update                                          10     8      2    1309
                                             11 COMRAM    10     8      2
                             ___wmul
                            _lcd_cmd
                            _lcd_str
 ---------------------------------------------------------------------------------
 (2) _lcd_str                                              5     3      2     286
                                              6 COMRAM     5     3      2
                             ___wmul (ARG)
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              1     1      0      44
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     767
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0      44
                                              2 COMRAM     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0      44
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_timer_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_stepper                                        16     4     12    1678
                                              0 COMRAM    16     4     12
 ---------------------------------------------------------------------------------
 (1) _init_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_USART                                           0     0      0   11410
                            ___fltol
                             _roundf
 ---------------------------------------------------------------------------------
 (2) _roundf                                              26    22      4   10953
                                             75 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3649
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    3326
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _init_PORTS                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_reg_value                                        1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _get_liters                                           2     0      2    3207
                                             61 COMRAM     2     0      2
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     457
                                             51 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2048
                                             26 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _configure_ad_conversion_tank                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configure_ad_conversion_oven                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_temperature                                    6     4      2    2533
                                             75 COMRAM     6     4      2
                            ___awdiv
                             ___flge
                           ___xxtofl
                                _abs
                    _get_temperature (ARG)
 ---------------------------------------------------------------------------------
 (2) _abs                                                  4     2      2     142
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     702
                                             12 COMRAM    14    10      4
                            ___awdiv (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    1094
                                             63 COMRAM    12     4      8
                            ___fltol (ARG)
                           ___xxtofl (ARG)
                         _get_liters (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              4 COMRAM     8     4      4
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (1) _change_direction                                     4     2      2     348
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _rx_char_usart                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___flge
     ___fltol (ARG)
       ___fladd (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___flneg (ARG)
       ___flsub (ARG)
         ___fladd
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
     ___xxtofl (ARG)
       ___awdiv (ARG)
         _abs (ARG)
       _abs (ARG)
     _get_liters (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___fltol
         ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___flneg (ARG)
         ___flsub (ARG)
           ___fladd
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___xxtofl
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
   ___wmul
   ___xxtofl
     ___awdiv (ARG)
       _abs (ARG)
     _abs (ARG)
   _change_direction
   _check_temperature
     ___awdiv
       _abs (ARG)
     ___flge
       ___fltol (ARG)
         ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___flneg (ARG)
         ___flsub (ARG)
           ___fladd
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
       _get_liters (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___fltol
           ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
           ___flneg (ARG)
           ___flsub (ARG)
             ___fladd
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___xxtofl
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
     ___xxtofl
       ___awdiv (ARG)
         _abs (ARG)
       _abs (ARG)
     _abs
     _get_temperature (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___fltol
         ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___flneg (ARG)
         ___flsub (ARG)
           ___fladd
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___xxtofl
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
   _configure_ad_conversion_oven
   _configure_ad_conversion_tank
   _get_liters
     ___flmul
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
     ___fltol
       ___fladd (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___flneg (ARG)
       ___flsub (ARG)
         ___fladd
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
     ___xxtofl
       ___awdiv (ARG)
         _abs (ARG)
       _abs (ARG)
   _get_reg_value
   _get_temperature
     ___flmul
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
     ___fltol
       ___fladd (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___flneg (ARG)
       ___flsub (ARG)
         ___fladd
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
     ___xxtofl
       ___awdiv (ARG)
         _abs (ARG)
       _abs (ARG)
   _init_PORTS
   _init_USART
     ___fltol
       ___fladd (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___flneg (ARG)
       ___flsub (ARG)
         ___fladd
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
     _roundf
       ___fladd
       ___flge
         ___fltol (ARG)
           ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
           ___flneg (ARG)
           ___flsub (ARG)
             ___fladd
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
         _get_liters (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
           ___fltol
             ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
             ___flneg (ARG)
             ___flsub (ARG)
               ___fladd
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
           ___xxtofl
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___flneg
       ___flsub
         ___fladd
       ___fltol (ARG)
         ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___flneg (ARG)
         ___flsub (ARG)
           ___fladd
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
   _init_interrupts
   _init_stepper
   _init_timer_0
   _lcd_cmd
     _lcd_wr
   _lcd_init
     _lcd_cmd
       _lcd_wr
   _lcd_str
     ___wmul (ARG)
     _lcd_dat (ARG)
       _lcd_wr
   _lcd_update
     ___wmul
     _lcd_cmd
       _lcd_wr
     _lcd_str
       ___wmul (ARG)
       _lcd_dat (ARG)
         _lcd_wr
   _reach_goal
     _turn_on_current_coil
     _update_current_coil
   _serial_tx_char
   _state_translator_fpga_to_micro
     _lcd_dat
       _lcd_wr
   _state_translator_micro_to_fpga
   _wait_for_zero
     _get_temperature
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___fltol
         ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___flneg (ARG)
         ___flsub (ARG)
           ___fladd
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___xxtofl
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)

 _rx_char_usart (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      48       5       56.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     6E      7E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C6      15        0.0%
DATA                 0      0      C6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Jun 20 00:57:22 2023

                                           ?_get_reg_value 0001  
                                          ??_wait_for_zero 0040  
                                                       l21 262E  
                                                       l24 2762  
                                                       l27 2776  
                                                       l36 27C2  
                                             ___awdiv@sign 000A  
                                      ___wmul@multiplicand 0003  
                                                      l200 0840  
                                                      l310 1B5E  
                                                      l250 2690  
                                                      l314 2248  
                                                      l154 01F6  
                                                      l403 26E4  
                                                      l155 09C2  
                                                      l332 2756  
                                                      l340 24D0  
                                                      l164 0368  
                                                      l253 27E8  
                                                      l157 0294  
                                                      l270 26BA  
                                                      l350 2340  
                                                      l166 035A  
                                                      l319 224C  
                                                      l264 27DC  
                                                      l168 0388  
                                                      l337 21C2  
                                                      l273 22CA  
                                                      l354 2664  
                                                      l346 1F86  
                                                      l267 270E  
                                                      l700 1C94  
                                                      l373 27B2  
                                                      l382 23B2  
                                                      l279 247E  
                                                      l391 2714  
                                                      l376 2794  
                                                      l385 23BA  
                                                      l289 211A  
                                                      l634 1EAE  
                                                      l379 234A  
                                                      l395 2734  
                                                      l388 241E  
                                                      l399 205C  
                                                      l673 1DBC  
                                                      l931 0C14  
                                                      l668 1D6E  
                                                      l940 0F6E  
                                                      l932 0BFE  
                                                      l677 25EE  
                                                      l933 0BB4  
                                                      l948 0D58  
                                                      l957 0E5C  
                                                      l973 2566  
                                                      l958 0E44  
                                        ??_init_interrupts 0001  
                                                      _abs 24D4  
                                init_stepper@register_name 000B  
                                                      wreg 000FE8  
                                           ?_rx_char_usart 0001  
                                             ___flmul@aexp 002C  
                                             ___flmul@bexp 002D  
                                             ___flmul@sign 0027  
                                             ___flmul@temp 0032  
                                             ___flmul@prod 002E  
                                             ___fltol@exp1 003D  
                                                     l1021 1412  
                                                     l1024 126C  
                                                     l1017 1060  
                                                     l1034 13CA  
                                                     l1026 12FC  
                                                     l1027 12E4  
                                                     ?_abs 0001  
                                                     l1061 19F0  
                                                     l1072 1976  
                                                     l2200 09DA  
                                                     l3000 274A  
                                                     l1065 190A  
                                                     l1081 251A  
                                                     l1058 185E  
                                                     l2210 0A28  
                                                     l2202 09EC  
                                                     l3010 2754  
                                                     l3002 274C  
                                                     l2300 0C3C  
                                                     l2220 0A64  
                                                     l2212 0A2C  
                                                     l2204 09EE  
                                                     l3004 274E  
                                                     l3012 22D0  
                                                     l3100 0214  
                                                     PORTD 000F83  
                                                     PORTE 000F84  
                                                     l3030 2634  
                                                     l1078 2510  
                                                     l2310 0C86  
                                                     l2230 0A98  
                                                     l2222 0A66  
                                                     l2206 0A04  
                                                     l2214 0A34  
                                                     l3006 2750  
                                                     l3014 22FE  
                                                     l3022 231E  
                                                     l3110 02B2  
                                                     l3102 022A  
                                                     l2320 0CBA  
                                                     l2312 0C92  
                                                     l2304 0C50  
                                                     l2240 0ADA  
                                                     l2232 0AAC  
                                                     l2224 0A6E  
                                                     l2216 0A46  
                                                     l2208 0A18  
                                                     l3008 2752  
                                                     l2400 2698  
                                                     l3024 232C  
                                                     l3016 2312  
                                                     l3200 0678  
                                                     l3120 031C  
                                                     l3112 02C4  
                                                     l3104 0276  
                                                     l1089 17F8  
                                                     l2330 0D36  
                                                     l2314 0C98  
                                                     l2306 0C62  
                                                     l2322 0CC0  
                                                     l2250 0B12  
                                                     l2242 0AF2  
                                                     l2234 0ABC  
                                                     l2226 0A80  
                                                     l2218 0A4E  
                                                     l2410 26AE  
                                                     l2402 269A  
                                                     l3026 2338  
                                                     l3202 068E  
                                                     l3210 06F4  
                                                     l3130 0380  
                                                     l3122 0342  
                                                     l3114 02DE  
                                                     l3106 027A  
                                                     l3050 0086  
                                                     l3042 0078  
                                                     l2500 126A  
                                                     l2420 0F96  
                                                     l2340 0D9C  
                                                     l2324 0CEC  
                                                     l2332 0D46  
                                                     l2316 0CAC  
                                                     l2308 0C74  
                                                     l2260 0B26  
                                                     l2252 0B16  
                                                     l2244 0B04  
                                                     l2236 0AC0  
                                                     l2228 0A82  
                                                     l2412 26B8  
                                                     l2404 26A0  
                                                     l3220 0768  
                                                     l3212 070E  
                                                     l3204 06AE  
                                                     l3140 03DE  
                                                     l3132 0384  
                                                     l3124 034E  
                                                     l3116 02EE  
                                                     l3108 029A  
                                                     l3060 012C  
                                                     l3052 00BA  
                                                     l3044 0078  
                                                     l2510 12DA  
                                                     l2502 127E  
                                                     l2430 0FEA  
                                                     l2422 0FAC  
                                                     l2414 0F76  
                                                     l2350 0DD8  
                                                     l2342 0DA8  
                                                     l2334 0D74  
                                                     l2326 0D20  
                                                     l2318 0CAE  
                                                     l2270 0B3A  
                                                     l2262 0B2A  
                                                     l2254 0B1A  
                                                     l2246 0B08  
                                                     l2238 0AC8  
                                                     l2406 26A2  
                                                     l3230 07E6  
                                                     l3222 0780  
                                                     l3214 071E  
                                                     l3206 06C6  
                                                     l3150 0450  
                                                     l3142 03EE  
                                                     l3126 0358  
                                                     l3118 0308  
                                                     l3134 039A  
                                                     l3070 014E  
                                                     l3062 0132  
                                                     l3054 00EE  
                                                     l3046 007E  
                                                     l2520 135A  
                                                     l2504 1292  
                                                     l2440 1022  
                                                     l2432 0FF2  
                                                     l2424 0FC0  
                                                     l2416 0F82  
                                                     l2360 0E0E  
                                                     l2352 0DDE  
                                                     l2344 0DBA  
                                                     l2336 0D88  
                                                     l2328 0D22  
                                                     l2280 0B7A  
                                                     l2272 0B3E  
                                                     l2264 0B2E  
                                                     l2256 0B1E  
                                                     l2248 0B0E  
                                                     l2408 26AC  
                                                     l3240 085C  
                                                     l3232 07F6  
                                                     l3224 079C  
                                                     l3216 0734  
                                                     l3208 06DC  
                                                     l3160 04D2  
                                                     l3152 046C  
                                                     l3144 0404  
                                                     l3136 03B4  
                                                     l3128 037C  
                                                     l3080 0190  
                                                     l3072 0164  
                                                     l3064 0138  
                                                     l3056 0122  
                                                     l3048 0082  
                                                     l2530 13D0  
                                                     l2514 1312  
                                                     l2522 135E  
                                                     l2506 1296  
                                                     l2450 1088  
                                                     l2442 1036  
                                                     l2434 0FF8  
                                                     l2426 0FD0  
                                                     l2418 0F94  
                                                     l2602 1C0A  
                                                     l2370 0E7E  
                                                     l2362 0E20  
                                                     l2354 0DF4  
                                                     l2346 0DBC  
                                                     l2290 0BDA  
                                                     l2282 0B9C  
                                                     l2274 0B42  
                                                     l2266 0B32  
                                                     l2258 0B22  
                                                     l3250 08A4  
                                                     l3242 0876  
                                                     l3234 0810  
                                                     l3218 0750  
                                                     l3170 053C  
                                                     l3162 04FC  
                                                     l3154 0498  
                                                     l3146 0420  
                                                     l3138 03C4  
                                                     l3090 01D2  
                                                     l3082 01A8  
                                                     l3074 0178  
                                                     l3066 0144  
                                                     l3058 0126  
                                                     l2540 1402  
                                                     l2532 13E0  
                                                     l2524 137E  
                                                     l2516 131E  
                                                     l2508 12A8  
                                                     l2460 10CC  
                                                     l2444 1046  
                                                     l2436 100A  
                                                     l2428 0FD8  
                                                     l2620 1C82  
                                                     l2612 1C3A  
                                                     l2604 1C16  
                                                     l2380 0EF8  
                                                     l2372 0E90  
                                                     l2364 0E3A  
                                                     l2348 0DD0  
                                                     l2356 0DF6  
                                                     l2292 0BEE  
                                                     l2284 0BAC  
                                                     l2268 0B36  
                                                     l2276 0B46  
                                                     l2700 17E6  
                                                     l2196 27D8  
                                                     l3260 090C  
                                                     l3252 08C4  
                                                     l3244 0882  
                                                     l3236 0824  
                                                     l3228 07CC  
                                                     l3172 054C  
                                                     l3164 0508  
                                                     l3180 059E  
                                                     l3148 0438  
                                                     l3156 04A8  
                                                     l3076 017E  
                                                     l3084 01AE  
                                                     l3092 01D6  
                                                     l3068 0146  
                                                     l2550 1C9C  
                                                     l2630 1870  
                                                     l2534 13F2  
                                                     l2526 1392  
                                                     l2518 1330  
                                                     l2470 1116  
                                                     l2462 10D8  
                                                     l2454 109E  
                                                     l2446 104E  
                                                     l2438 100C  
                                                     l2614 1C48  
                                                     l2606 1C20  
                                                     l2390 0F40  
                                                     l2382 0F1E  
                                                     l2374 0ECE  
                                                     l2358 0E08  
                                                     l2294 0BF0  
                                                     l2286 0BC8  
                                                     l2278 0B4C  
                                                     l2198 09CE  
                                                     l2710 26F6  
                                                     l3270 0962  
                                                     l3254 08D6  
                                                     l3246 0888  
                                                     l3238 0854  
                                                     l3190 0618  
                                                     l3182 05B8  
                                                     l3174 0566  
                                                     l3166 050C  
                                                     l3158 04C2  
                                                     l3262 090E  
                                                     l3094 01F0  
                                                     l3086 01C0  
                                                     l3078 018C  
                                                     l2560 1D36  
                                                     l2552 1CCE  
                                                     l2640 18B8  
                                                     l2632 188C  
                                                     l2624 1802  
                                                     l2536 13F4  
                                                     l2528 13B2  
                                                     l2480 1168  
                                                     l2472 1122  
                                                     l2464 10F0  
                                                     l2456 10AC  
                                                     l2448 1076  
                                                     l2616 1C5C  
                                                     l2392 0F48  
                                                     l2384 0F22  
                                                     l2368 0E72  
                                                     l2376 0ED0  
                                                     l2296 0BFC  
                                                     l2288 0BD4  
                                                     l2544 2522  
                                                     l2800 25F4  
                                                     l2712 2700  
                                                     l2704 26EC  
                                                     l2720 242C  
                                                     l3272 09AE  
                                                     l3264 0928  
                                                     l3256 08DE  
                                                     l3248 08A2  
                                                     l3192 062E  
                                                     l3184 05C8  
                                                     l3176 0582  
                                                     l3168 0526  
                                                     l3096 01FA  
                                                     l3088 01CE  
                                                     l2562 1D48  
                                                     l2554 1CDE  
                                                     l2650 1950  
                                                     l2642 18F0  
                                                     l2626 1816  
                                                     l2538 13FC  
                                                     l2490 11E6  
                                                     l2482 1178  
                                                     l2474 1132  
                                                     l2466 10FC  
                                                     l2458 10B6  
                                                     l2618 1C72  
                                                     l2394 0F5A  
                                                     l2386 0F36  
                                                     l2378 0EE6  
                                                     l2298 0C28  
                                                     l2546 2532  
                                                     l2810 2628  
                                                     l2802 2620  
                                                     l2714 2702  
                                                     l2706 26EE  
                                                     l2722 244C  
                                                     l3274 09BA  
                                                     l3266 093A  
                                                     l3258 0900  
                                                     l3194 0648  
                                                     l3186 05E0  
                                                     l3178 058E  
                                                     l3098 0210  
                                                     l2564 1D5C  
                                                     l2556 1D12  
                                                     l2660 19B6  
                                                     l2652 1964  
                                                     l2644 18F4  
                                                     l2636 18A0  
                                                     l2628 1828  
                                                     l2492 1220  
                                                     l2484 1194  
                                                     l2476 113E  
                                                     l2468 1108  
                                                     l2580 1B66  
                                                     l2820 27B8  
                                                     l2572 25B2  
                                                     l2396 0F5C  
                                                     l2388 0F3C  
                                                     l2812 262A  
                                                     l2804 2622  
                                                     l2716 270C  
                                                     l2708 26F4  
                                                     l2724 244E  
                                                     l2732 2484  
                                                     l2740 1F54  
                                                     l2900 1AD8  
                                                     l3268 094C  
                                                     l3196 0650  
                                                     l3188 0600  
                                                     l2566 1DB2  
                                                     l2558 1D22  
                                                     l2662 19CA  
                                                     l2654 198A  
                                                     l2646 1900  
                                                     l2638 18AA  
                                                     l2494 122E  
                                                     l2486 11A0  
                                                     l2478 114E  
                                                     l2590 1BC8  
                                                     l2582 1B80  
                                                     l2822 27BC  
                                                     l2574 25CC  
                                                     l2670 141A  
                                                     l2814 262C  
                                                     l2806 2624  
                                                     l2750 26C0  
                                                     l2718 2424  
                                                     l2742 1F76  
                                                     l2910 1B38  
                                                     l2902 1AF0  
                                                     l2726 2348  
                                                     l3198 0660  
                                                     l2760 1DDA  
                                                     l2568 1DB8  
                                                     l2664 19DC  
                                                     l2656 198C  
                                                     l2648 1942  
                                                     l2496 124C  
                                                     l2488 11BC  
                                                     l2592 1BD8  
                                                     l2576 25DC  
                                                     l2680 1508  
                                                     l2672 143A  
                                                     l2808 2626  
                                                     l2832 27E2  
                                                     l2840 2128  
                                                     l2752 26DC  
                                                     l2736 1EB4  
                                                     l2912 1B4C  
                                                     l2904 1B04  
                                                     l2920 21F0  
                                                     l2728 235E  
                                                     l2770 1E06  
                                                     l2762 1DE2  
                                                     l2666 19DE  
                                                     l2658 1992  
                                                     l2746 24D6  
                                                     l2498 1258  
                                                     l2594 1BDC  
                                                     l2586 1B96  
                                                     l2826 266A  
                                                     l2690 16A2  
                                                     l2682 152A  
                                                     l2674 148A  
                                                     l2850 219A  
                                                     l2842 2152  
                                                     l2834 2120  
                                                     l2738 1F40  
                                                     l2818 275E  
                                                     l2922 2210  
                                                     l2780 1E4C  
                                                     l2772 1E10  
                                                     l2764 1DE6  
                                                     l2756 1DC4  
                                                     l2748 24F4  
                                                     l2596 1BEE  
                                                     l2588 1BC6  
                                                     l2828 268E  
                                                     l2692 16DA  
                                                     l2676 149E  
                                                     l2852 21AE  
                                                     l2844 2156  
                                                     l2860 2276  
                                                     l2932 2064  
                                                     l2908 1B20  
                                                     l2924 2218  
                                                     l2916 21C8  
                                                     l2790 1E80  
                                                     l2782 1E54  
                                                     l2774 1E26  
                                                     l2766 1DFA  
                                                     l2758 1DC8  
                                                     l2950 277C  
                                                     l2694 1746  
                                                     l2686 1562  
                                                     l2678 14E4  
                                                     l2846 2176  
                                                     l2870 22B2  
                                                     l2862 227C  
                                                     l2854 2252  
                                                     l2942 209A  
                                                     l2934 206A  
                                                     l2926 223A  
                                                     l2918 21E8  
                                                     l2784 1E6E  
                                                     l2776 1E2E  
                                                     l2792 1E86  
                                                     l2768 1E02  
                                                     l2952 2780  
                                                     l2960 23B8  
                                                     l2696 177C  
                                                     l2688 1636  
                                                     l2848 2186  
                                                     l2872 22B8  
                                                     l2864 2294  
                                                     l2856 2262  
                                                     l2944 20AE  
                                                     l2936 2092  
                                                     l2880 1A00  
                                                     l2928 2242  
                                                     l2794 1E9C  
                                                     l2786 1E76  
                                                     l2778 1E38  
                                                     l2970 2046  
                                                     l2954 2782  
                                                     l2962 23CE  
                                                     l2698 17C2  
                                                     l2874 22BE  
                                                     l2866 22A6  
                                                     l2858 2274  
                                                     l2946 20F6  
                                                     l2890 1A6C  
                                                     l2882 1A14  
                                                     l2796 1EA4  
                                                     l2788 1E78  
                                                     l2980 279A  
                                                     l2956 2784  
                                                     l2876 22C4  
                                                     l2868 22AC  
                                                     l2948 20FA  
                                                     l2892 1A80  
                                                     l2884 1A28  
                                                     l2966 1F8E  
                                                     l2982 279E  
                                                     l2958 2786  
                                                     l2894 1A98  
                                                     l2886 1A40  
                                                     l2878 19FA  
                                                     l2990 2716  
                                                     l2968 2010  
                                                     l2976 2052  
                                                     l2984 27A0  
                                                     l2896 1AAC  
                                                     l2888 1A54  
                                                     l2986 27A2  
                                                     l2994 273A  
                                                     l2898 1AC4  
                                                     l2988 27A4  
                                                     l2996 2746  
                                                     l2998 2748  
                                                     TRISD 000F95  
                                                     TRISE 000F96  
                                                     STR_1 7FE9  
                                            _state_changed 007C  
                                                     u2000 0DF2  
                                                     u2001 0DEC  
                                                     u2010 0E08  
                                                     u2011 0E02  
                                                     u2100 0F1C  
                                                     u2020 0E1E  
                                                     u2101 0F16  
                                                     u2021 0E18  
                                                     u2110 0F34  
                                                     u2030 0E38  
                                                     u2111 0F2E  
                                                     u2031 0E32  
                                                     u2200 1088  
                                                     u2120 0F58  
                                                     u2040 0E56  
                                                     u3000 0274  
                                                     u2201 1082  
                                                     u2121 0F52  
                                                     u2041 0E50  
                                                     u3001 026E  
                                                     u2210 1208  
                                                     u2130 0F92  
                                                     u2050 0E70  
                                                     u3010 02B0  
                                                     u2131 0F8C  
                                                     u2051 0E6A  
                                                     u3011 02AA  
                                                     u2300 13B0  
                                                     u2220 1268  
                                                     u2140 0FAA  
                                                     u2060 0E8E  
                                                     u3100 0436  
                                                     u3020 02DC  
                                                     u2301 13AA  
                                                     u2221 1262  
                                                     u2141 0FA4  
                                                     u2061 0E88  
                                                     u3101 0430  
                                                     u3021 02D6  
                                                     _LATA 000F89  
                                                     u2310 13F0  
                                                     u2230 1290  
                                                     u2150 0FBE  
                                                     u2070 0ECC  
                                                     u3110 044E  
                                                     u3030 0306  
                                                     _LATB 000F8A  
                                                     u2311 13EA  
                                                     u2231 128A  
                                                     u2215 11FC  
                                                     u2151 0FB8  
                                                     u2071 0EC6  
                                                     u3111 0448  
                                                     u3031 0300  
                                                     _LATC 000F8B  
                                                     u2320 1CCC  
                                                     u2240 12A6  
                                                     u2160 1008  
                                                     u2400 1BEC  
                                                     u2080 0EE4  
                                                     u3200 0616  
                                                     u3120 0496  
                                                     u3040 031A  
                                                     u2321 1CC6  
                                                     u2241 12A0  
                                                     u2161 1002  
                                                     u2401 1BE6  
                                                     u2081 0EDE  
                                                     u3201 0610  
                                                     u3121 0490  
                                                     u3041 0314  
                                                     u2330 1D10  
                                                     u2250 12D8  
                                                     u2170 1020  
                                                     u2410 1C04  
                                                     u2090 0EF8  
                                                     u3210 062C  
                                                     u3130 04C0  
                                                     u3050 0340  
                                                     u2331 1D0A  
                                                     u2251 12D2  
                                                     u2171 101A  
                                                     u2411 1BFE  
                                                     u2091 0EF2  
                                                     u3211 0626  
                                                     u3131 04BA  
                                                     u3051 033A  
                                                     u2340 1D34  
                                                     u2500 1962  
                                                     u2260 12F6  
                                                     u2180 1034  
                                                     u2420 1C34  
                                                     u3300 07C6  
                                                     u3220 0676  
                                                     u3140 04FA  
                                                     u3060 037A  
                                                     u2341 1D2E  
                                                     u2501 195C  
                                                     u2261 12F0  
                                                     u2181 102E  
                                                     u2421 1C2E  
                                                     u3301 07C0  
                                                     u3221 0670  
                                                     u3141 04F4  
                                                     u3061 0374  
                                                     u2350 1D5A  
                                                     u2510 1976  
                                                     u2270 1310  
                                                     u2190 1074  
                                                     u2430 1C5C  
                                                     u3310 07E4  
                                                     u3230 068C  
                                                     u3150 0524  
                                                     u3070 03B2  
                                                     u2351 1D54  
                                                     u2511 1970  
                                                     u2271 130A  
                                                     u2191 106E  
                                                     u2431 1C56  
                                                     u3311 07DE  
                                                     u3231 0686  
                                                     u3151 051E  
                                                     u3071 03AC  
                                                     u2360 1DB0  
                                                     u2520 1988  
                                                     u2280 132E  
                                                     u2440 1C70  
                                                     u1800 0AAA  
                                                     u2600 1634  
                                                     u3400 0938  
                                                     u3320 080E  
                                                     u3240 06C4  
                                                     u3160 053A  
                                                     u3080 03DC  
                                                     u2361 1DAA  
                                                     u2521 1982  
                                                     u2281 1328  
                                                     u2441 1C6A  
                                                     u1801 0AA4  
                                                     u2601 162E  
                                                     u3401 0932  
                                                     u3321 0808  
                                                     u3241 06BE  
                                                     u3161 0534  
                                                     u3081 03D6  
                                                     u2530 19C8  
                                                     u2450 1814  
                                                     u2290 137C  
                                                     u2370 25CA  
                                                     u1810 0AF0  
                                                     u2610 16D8  
                                                     u3410 094A  
                                                     u3330 0822  
                                                     u3250 06DA  
                                                     u3170 0564  
                                                     u3090 0402  
                                                     u2531 19C2  
                                                     u2451 180E  
                                                     u2291 1376  
                                                     u2371 25C4  
                                                     u1811 0AEA  
                                                     u2611 16D2  
                                                     u3411 0944  
                                                     u3331 081C  
                                                     u3251 06D4  
                                                     u3171 055E  
                                                     u3091 03FC  
                                                     u2700 1DF8  
                                                     u2540 19DA  
                                                     u2460 1826  
                                                     u2380 1B7E  
                                                     u1900 0C3A  
                                                     u1820 0B02  
                                                     u1740 09EA  
                                                     u2620 17A0  
                                                     u3420 09AC  
                                                     u3340 0852  
                                                     u3260 070C  
                                                     u3180 05B6  
                                                     u2701 1DF2  
                                                     u2541 19D4  
                                                     u2461 1820  
                                                     u2381 1B78  
                                                     u1901 0C34  
                                                     u1821 0AFC  
                                                     u1741 09E4  
                                                     u3421 09A6  
                                                     u3341 084C  
                                                     u3261 0706  
                                                     u3181 05B0  
                                                     u2710 1E24  
                                                     u2470 188A  
                                                     u2390 1BBA  
                                                     u1910 0C72  
                                                     u1830 0B78  
                                                     u1750 0A02  
                                                     u2630 17C0  
                                                     u2550 145C  
                                                     u3350 0874  
                                                     u3270 0732  
                                                     u3190 05DE  
                                                     u2711 1E1E  
                                                     u2471 1884  
                                                     u1911 0C6C  
                                                     u1831 0B72  
                                                     u1751 09FC  
                                                     u2631 17BA  
                                                     u3351 086E  
                                                     u3271 072C  
                                                     u3191 05D8  
                                                     u2720 1E4A  
                                                     u2480 18EA  
                                                     u1920 0C84  
                                                     u1840 0B94  
                                                     u1760 0A16  
                                                     u2560 1488  
                                                     u2640 247C  
                                                     u2800 1A96  
                                                     u3360 08A0  
                                                     u3280 0766  
                                                     u2721 1E44  
                                                     u2481 18E4  
                                                     u1921 0C7E  
                                                     u1841 0B8C  
                                                     u1761 0A10  
                                                     u2625 1794  
                                                     u2561 1482  
                                                     u2641 2476  
                                                     u2801 1A90  
                                                     u3361 089A  
                                                     u3281 0760  
                                                     u2730 1E6C  
                                                     u2490 193C  
                                                     u1930 0CAA  
                                                     u1850 0B98  
                                                     u1770 0A62  
                                                     u2570 14C2  
                                                     u2810 1AC2  
                                                     u2650 235C  
                                                     u3370 08C2  
                                                     u3290 077E  
                                                     u2731 1E66  
                                                     u2491 1936  
                                                     u2395 1BAE  
                                                     u1931 0CA4  
                                                     u1771 0A5C  
                                                     u2555 1450  
                                                     u3507 26B0  
                                                     u2811 1ABC  
                                                     u2651 2356  
                                                     u3371 08BC  
                                                     u3291 0778  
                                                     u2740 1E9A  
                                                     u2900 200E  
                                                     u1940 0CEA  
                                                     u1860 0BC6  
                                                     u1780 0A7E  
                                                     u2580 14E2  
                                                     u2660 1F3E  
                                                     u2820 1AEE  
                                                     u3380 08FE  
                                                     u2741 1E94  
                                                     u2901 2008  
                                                     u1941 0CE4  
                                                     u1861 0BC0  
                                                     u1781 0A78  
                                                     u2581 14DC  
                                                     u3517 2268  
                                                     u2661 1F38  
                                                     u2821 1AE8  
                                                     u3381 08F8  
                                                     u3437 03E4  
                                                     u2910 2044  
                                                     u1950 0D34  
                                                     u1870 0BEC  
                                                     u1790 0A96  
                                                     u2590 1528  
                                                     u2670 1F74  
                                                     u2750 2774  
                                                     u2830 1B1A  
                                                     u3390 0926  
                                                     u2911 203E  
                                                     u1951 0D2E  
                                                     u1871 0BE6  
                                                     u1791 0A90  
                                                     u2591 1522  
                                                     u2575 14B6  
                                                     u3527 2282  
                                                     u2671 1F6E  
                                                     u2751 276E  
                                                     u2831 1B14  
                                                     u3391 0920  
                                                     u3447 04C8  
                                                     u2680 24F2  
                                                     u1960 0D72  
                                                     u1880 0C14  
                                                     u2760 2174  
                                                     u2840 1B36  
                                                     u2920 2732  
                                                     u2681 24EC  
                                                     u1961 0D6C  
                                                     u1881 0C0E  
                                                     u2761 216E  
                                                     u3537 229A  
                                                     u2841 1B30  
                                                     u2921 272C  
                                                     u3457 05BE  
                                                     u2690 1DD8  
                                                     u1970 0D86  
                                                     u1890 0C26  
                                                     u2930 22FC  
                                                     u2770 1A12  
                                                     u2850 21E6  
                                                     u2691 1DD2  
                                                     u1971 0D80  
                                                     u1891 0C20  
                                                     u3547 26F8  
                                                     u2931 22F6  
                                                     u2771 1A0C  
                                                     u2851 21E0  
                                                     u3467 0638  
                                                     u1980 0DB8  
                                                     u2780 1A3E  
                                                     u2860 220E  
                                                     u1981 0DB2  
                                                     u3557 2704  
                                                     u2781 1A38  
                                                     u2861 2208  
                                                     u3477 0714  
                                                     u1990 0DCE  
                                                     u2790 1A6A  
                                                     u2870 2238  
                                                     u2950 0162  
                                                     u1991 0DC8  
                                                     u2791 1A64  
                                                     u2871 2232  
                                                     u3487 08CA  
                                                     u2951 015C  
                                                     u2880 2118  
                                                     u2960 0176  
                                                     u3497 26A4  
                                                     u2881 2112  
                                                     u2961 0170  
                                                     u2890 23CC  
                                                     u2970 01A6  
                                                     u2891 23C6  
                                                     u2971 01A0  
                                                     u2980 01EE  
                                                     u2981 01E8  
                                                     u2990 020E  
                                                     u2991 0208  
                                                     abs@a 0001  
                                              lcd_update@i 0014  
                                                     _main 0078  
                                                     _fosc 7FE5  
                                                     fsr1h 000FE2  
                                                     fsr2h 000FDA  
                                                     indf1 000FE7  
                                                     indf2 000FDF  
                                                     fsr1l 000FE1  
                                                     fsr2l 000FD9  
                                                     _tosc 00BA  
                                                     btemp 007F  
                                              main@rx_char 006A  
                                                     prodh 000FF4  
                                            _trash_counter 0073  
                                                     prodl 000FF3  
                                                     start 0074  
         state_translator_fpga_to_micro@state_machine_code 0005  
                                             ___param_bank 000000  
                                                    ??_abs 0003  
                                            ___fltol@sign1 003C  
                                          __end_of___fladd 0F74  
                                                    ?_main 0001  
                                          __end_of___awdiv 1EB2  
                                          __end_of___flneg 25F2  
                                          __end_of___flmul 1418  
                                          __end_of___flsub 256A  
                                          __end_of___fltol 1C9A  
                                                    _T0CON 000FD5  
                                          ___awdiv@divisor 0007  
                                                    i2l221 006C  
                              __end_of_update_current_coil 1F8C  
                                          ___awdiv@counter 0009  
                                                    _RCREG 000FAE  
                                                    _TMR0H 000FD7  
                                                    _TMR0L 000FD6  
                                                    _SPBRG 000FAF  
                                                    _PORTA 000F80  
                                                    _PORTB 000F81  
                                                    _PORTC 000F82  
                                                    _PORTD 000F83  
                                                    _TRISA 000F92  
                                                    _TRISB 000F93  
                                                    _TRISC 000F94  
                                                    _TXREG 000FAD  
                                         ?_get_temperature 003E  
                                          __end_of_lcd_dat 26BE  
                                          __end_of_lcd_cmd 2712  
                     __end_of_configure_ad_conversion_tank 2798  
                    __size_of_configure_ad_conversion_tank 001E  
                             _configure_ad_conversion_tank 277A  
                     __end_of_configure_ad_conversion_oven 27B6  
                    __size_of_configure_ad_conversion_oven 001E  
                             _configure_ad_conversion_oven 2798  
                                          __end_of_lcd_str 2482  
                                                    _state 007D  
                                                    _toint 7B29  
                                                    tablat 000FF5  
                                                    ttemp5 0080  
                                                    ttemp6 0083  
                                                    ttemp7 0087  
                                                    status 000FD8  
                                                    wtemp8 0080  
                                       _end_effector_homed 006F  
                                          ??_get_reg_value 0001  
                                     get_reg_value@rx_char 0001  
                                          __initialization 256A  
                                             __end_of_main 09CC  
                                             __end_of_fosc 7FE9  
                                    lcd_update@line_select 0010  
                                                   ??_main 0066  
                                            __activetblptr 000002  
                                          ??_rx_char_usart 0001  
                                                   _ADCON0 000FC2  
                                                   _ADCON1 000FC1  
                                         _change_direction 2632  
                                                   _ADRESH 000FC4  
                                                   _ADRESL 000FC3  
                             __end_of_turn_on_current_coil 24D4  
                            ?_configure_ad_conversion_tank 0001  
                                         ___awdiv@dividend 0005  
                            ?_configure_ad_conversion_oven 0001  
                                                   i2l2180 001E  
                                                   i2l2190 0060  
                                                   i2l2182 0030  
                                                   i2l2192 0064  
                                                   i2l2184 0032  
                                                   i2l2194 006A  
                                                   i2l2186 003A  
                                                   i2l2178 000C  
                                                   i2l2188 004E  
                                         __end_of___xxtofl 19F6  
                                            ?_init_timer_0 0001  
                   __end_of_state_translator_fpga_to_micro 1B64  
                  __size_of_state_translator_fpga_to_micro 016E  
                           _state_translator_fpga_to_micro 19F6  
                                            ?_init_stepper 0001  
                                         __end_of_lcd_init 22CE  
                                                   ___flge 1C9A  
                                                ??___fladd 0009  
                                                   ___wmul 26BE  
                                                ??___awdiv 0009  
                                                ??___flneg 0005  
                                                ??___flmul 0023  
                                                ??___flsub 0019  
                                                ??___fltol 0038  
                                                   _lcd_wr 27D4  
                                                   clear_0 2590  
                                                   clear_1 259C  
                                         ___awdiv@quotient 000B  
                                                   _roundf 1418  
                                                ??_lcd_dat 0002  
                                                ??_lcd_cmd 0002  
                                                ??_lcd_str 0009  
                                             __mediumconst 7B28  
                                                   tblptrh 000FF7  
                                                   tblptrl 000FF6  
                                                   tblptru 000FF8  
                                  reach_goal@goal_to_reach 000B  
                                               ___flge@ff1 0040  
                                               ___flge@ff2 0044  
                         update_current_coil@stepper_motor 0001  
                                             ___xxtofl@arg 0017  
                                             ___xxtofl@exp 0016  
                                             ___xxtofl@val 000D  
                                               __accesstop 0080  
                                  __end_of__initialization 25A2  
                                               ___flneg@f1 0001  
                                        serial_tx_char@val 0001  
                                           ??_init_timer_0 0001  
                                            ___rparam_used 000001  
                                               ___fltol@f1 0034  
                                           ??_init_stepper 000D  
                                          _init_interrupts 27E0  
                                           __pcstackCOMRAM 0001  
                                             __pidataBANK0 27C6  
                                            __end_of_toint 7B2D  
                                          _temperature_int 0086  
                                  __size_of_serial_tx_char 0020  
                      state_translator_fpga_to_micro@state 0003  
                                         _mix_current_step 0094  
                                               __pbssBANK0 0080  
                           ??_configure_ad_conversion_tank 0001  
                           ??_configure_ad_conversion_oven 0001  
                                                  ?___flge 0040  
                                                  ?___wmul 0001  
                      check_temperature@temp_to_be_checked 004C  
                                                  ?_lcd_wr 0001  
                                     _turn_on_current_coil 2482  
                                    __end_of_wait_for_zero 2738  
                                  _hex_end_effector_values 00C0  
                                            _read_new_char 007A  
                          _grasping_joint_position_reached 0071  
                                                  ?_roundf 004C  
                                       _temperature_scaled 0084  
                                                ?___xxtofl 000D  
                                  reach_goal@stepper_motor 0009  
                                               _get_liters 23B6  
                        turn_on_current_coil@stepper_motor 0001  
                                         _desired_baudrate 7B31  
                                               _lcd_update 2062  
                                                ?_lcd_init 0001  
                                  __end_of_init_interrupts 27EC  
                                               _const_msgs 7B35  
                                        _check_temperature 1F8C  
                            change_direction@stepper_motor 0001  
                                                  __Hparam 0000  
                                       ?_check_temperature 004C  
                                                  __Lparam 0000  
                                               _init_PORTS 2668  
                                               _init_USART 25F2  
                                          __size_of___flge 0128  
                                                  ___fladd 09CC  
                                                  ___awdiv 1DC2  
                                                  ___flneg 25B0  
                                                  ___flmul 0F74  
                                 __end_of_change_direction 2668  
                                                  ___flsub 2520  
                                                  ___fltol 1B64  
                                          __size_of___wmul 002A  
                                    ?_turn_on_current_coil 0001  
                                       _state_before_error 00BE  
                                          __size_of_lcd_wr 000C  
                                      ??_check_temperature 004E  
                                                  __pcinit 256A  
                     init_stepper@hex_coil_register_values 0009  
                                                  __ramtop 0600  
                                               _reach_goal 22CE  
                                                  __ptext0 0078  
                                                  __ptext1 2712  
                                                  __ptext2 2346  
                                                  __ptext3 21C6  
                                                  __ptext4 19F6  
                                                  __ptext5 275A  
                                                  __ptext6 22CE  
                                                  __ptext7 1EB2  
                                                  __ptext8 2482  
                                                  __ptext9 2062  
                                                  _lcd_dat 2694  
                                                  _lcd_cmd 26E8  
                                                  _lcd_str 2422  
                                                _T0CONbits 000FD5  
                                          __size_of_roundf 03E6  
                                             __size_of_abs 004C  
                                               ??___xxtofl 0011  
                                     __end_of_init_timer_0 275A  
                                     __end_of_init_stepper 21C6  
                                            _joint_stepper 00AE  
                                               ??_lcd_init 0003  
                             __size_of_update_current_coil 00DA  
                                     end_of_initialization 25A2  
                                __end_of_check_temperature 2062  
                                 __size_of_get_temperature 0070  
                                            __Lmediumconst 7B28  
                      state_translator_micro_to_fpga@state 0001  
                                    __end_of_get_reg_value 27C6  
                                                _RCSTAbits 000FAB  
                                                  postdec1 000FE5  
                                                  postdec2 000FDD  
                                                  postinc0 000FEE  
                                                  postinc1 000FE6  
                                                  postinc2 000FDE  
                                                  roundf@e 0058  
                                                  roundf@u 005E  
                                                  roundf@x 004C  
                                                  roundf@y 0062  
                                               _timer_done 0079  
                                                _PORTEbits 000F84  
                         ??_state_translator_fpga_to_micro 0005  
                          ?_state_translator_fpga_to_micro 0003  
                                              ___fladd@grs 0010  
                                           _serial_tx_char 275A  
                                            ___xxtofl@sign 0015  
                                    __end_of_rx_char_usart 0074  
                                                _TRISCbits 000F94  
                                              ?_get_liters 003E  
                                               lcd_dat@val 0002  
                                               lcd_cmd@val 0002  
                                              ?_lcd_update 000C  
                                            _mix_direction 0092  
                                     _end_effector_stepper 00A2  
                                              ___flmul@grs 0028  
                                         ?_init_interrupts 0001  
                                                _TXSTAbits 000FAC  
                                         main@current_temp 0068  
                                               lcd_str@str 0007  
                                              ?_init_PORTS 0001  
                                              ?_init_USART 0001  
                                   ??_turn_on_current_coil 0003  
                                           __end_of___flge 1DC2  
                   __end_of_state_translator_micro_to_fpga 2250  
                  __size_of_state_translator_micro_to_fpga 008A  
                           _state_translator_micro_to_fpga 21C6  
                             _grasping_ee_position_reached 008E  
                                           __end_of___wmul 26E8  
                                           __end_of_lcd_wr 27E0  
                                              ?_reach_goal 0009  
         state_translator_micro_to_fpga@state_machine_code 0005  
                                   __end_of_serial_tx_char 277A  
                                           __end_of_roundf 17FE  
                                      start_initialization 256A  
                                              __end_of_abs 2520  
                                         _hex_joint_values 00C4  
                               __size_of_check_temperature 00D6  
                                 init_stepper@current_coil 0003  
                                init_stepper@stepper_motor 0001  
                                        ??_get_temperature 0040  
                                                 ??___flge 0048  
                                 __end_of_desired_baudrate 7B35  
                                      __size_of_get_liters 006C  
                                                 ??___wmul 0005  
                                      __size_of_lcd_update 00BC  
                                                 ??_lcd_wr 0001  
                                              __pdataBANK0 00BA  
                                    check_temperature@grad 004E  
                                    __size_of_init_timer_0 0022  
                                    __size_of_init_stepper 00A8  
                                                 ??_roundf 0050  
                                          ?_serial_tx_char 0001  
                                                ___fladd@a 0005  
                                                ___fladd@b 0001  
                                                ___flmul@a 001F  
                                                ___flmul@b 001B  
                                              __pbssCOMRAM 006F  
                                                ___flsub@a 0015  
                                                ___flsub@b 0011  
                                        __size_of___xxtofl 01F8  
                                      __size_of_init_PORTS 002C  
                                      __size_of_init_USART 0040  
                                        __size_of_lcd_init 007E  
                                      __size_of_reach_goal 0078  
                                             _init_timer_0 2738  
                                                _main$1677 006B  
                                             _init_stepper 211E  
                                    init_stepper@direction 0007  
                                                __pintcode 0008  
                                            __pmediumconst 7B28  
                                                 ?___fladd 0001  
                                                 ?___awdiv 0005  
                                                 ?___flneg 0001  
                                                 ?___flmul 001B  
                                                 ?___flsub 0011  
                                                 ?___fltol 0034  
                                      _update_current_coil 1EB2  
                                        ?_change_direction 0001  
                                       ??_change_direction 0003  
                                                 ?_lcd_dat 0001  
                                                 ?_lcd_cmd 0001  
                                                 ?_lcd_str 0007  
                                         _mix_step_counter 0090  
                                     ?_update_current_coil 0001  
                                   __size_of_wait_for_zero 0026  
                                           ___wmul@product 0005  
                                                 _LATAbits 000F89  
                                                 _LATCbits 000F8B  
                                                 _PIE1bits 000F9D  
                                    _joint_dilutor_stepper 0096  
                                                 i2u170_40 001C  
                                                 i2u170_41 0016  
                                                 i2u171_40 002E  
                                                 i2u171_41 0028  
                                                 i2u172_40 004C  
                                                 i2u172_41 0046  
                                                 i2u173_40 005E  
                                                 i2u173_41 0058  
                                                 _PIR1bits 000F9E  
                                               _ADCON0bits 000FC2  
                                        ___wmul@multiplier 0001  
                                                lcd_wr@val 0001  
                                             ??_get_liters 0040  
                                             ??_lcd_update 000E  
                                    ??_update_current_coil 0003  
                                                copy_data0 257E  
                                               roundf@F525 0080  
                                                 __Hrparam 0000  
                                             ??_init_PORTS 0001  
                                             ??_init_USART 0066  
                                                 __Lrparam 0000  
                                       __end_of_get_liters 2422  
                                         __size_of___fladd 05A8  
                                         __size_of___awdiv 00F0  
                                         __size_of___flneg 0042  
                                         __size_of___flmul 04A4  
                                         __size_of___flsub 004A  
                                         __size_of___fltol 0136  
                                       __end_of_lcd_update 211E  
                                            _wait_for_zero 2712  
                                             ??_reach_goal 000D  
                                          lcd_update@F2151 7B2D  
                                         __size_of_lcd_dat 002A  
                                         __size_of_lcd_cmd 002A  
                                         __size_of_lcd_str 0060  
                                       __end_of_const_msgs 7FE5  
                                                 ___xxtofl 17FE  
                                                 __ptext10 2422  
                                                 __ptext11 2694  
                                                 __ptext20 1418  
                                                 __ptext12 26BE  
                                                 __ptext21 2520  
                                                 __ptext13 2250  
                                                 __ptext30 2798  
                                                 __ptext22 09CC  
                                                 __ptext14 26E8  
                                                 __ptext31 1F8C  
                                                 __ptext23 25B0  
                                                 __ptext15 27D4  
                                                 __ptext32 24D4  
                                                 __ptext24 2668  
                                                 __ptext16 2738  
                                                 __ptext33 17FE  
                                                 __ptext25 27B6  
                                                 __ptext17 211E  
                                                 __ptext34 1C9A  
                                                 __ptext26 23B6  
                                                 __ptext18 27E0  
                                                 __ptext35 1DC2  
                                                 __ptext27 1B64  
                                                 __ptext19 25F2  
                                                 __ptext36 2632  
                                                 __ptext28 0F74  
                                                 __ptext29 277A  
                         ??_state_translator_micro_to_fpga 0003  
                          ?_state_translator_micro_to_fpga 0001  
                                   __size_of_get_reg_value 0010  
                                       __end_of_init_PORTS 2694  
                                                 _lcd_init 2250  
                                       __end_of_init_USART 2632  
                                          _get_temperature 2346  
                                          lcd_update@state 000C  
                                _diluting_position_reached 008C  
                                            __size_of_main 0954  
                                              _joint_homed 008A  
                                       __end_of_reach_goal 2346  
                                   __size_of_rx_char_usart 006C  
                                 __size_of_init_interrupts 000C  
                                                 int$flags 007F  
                                         ??_serial_tx_char 0001  
                            __size_of_turn_on_current_coil 0052  
                                           ?_wait_for_zero 0001  
                                                 lcd_str@i 000B  
                                              _mix_counter 0077  
                                               _INTCONbits 000FF2  
                                            _idle_msg_sent 007B  
                                                 intlevel2 27EC  
                                      _joint_dilutor_homed 0088  
                                  __end_oflcd_update@F2151 7B31  
                                            _get_reg_value 27B6  
                                            init_stepper@i 000F  
                                            _dilution_done 0075  
                                  __end_of_get_temperature 23B6  
                                 init_stepper@step_counter 0005  
                                            _rx_char_usart 0008  
                                __size_of_change_direction 0036  
                                            ___fladd@signs 000D  
                                             ___fladd@aexp 000E  
                                             ___fladd@bexp 000F  
                                              _roundf$1678 005A  
                                              _roundf$1679 0054  
