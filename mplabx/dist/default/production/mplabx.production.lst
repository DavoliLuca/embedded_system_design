

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Jun 06 00:24:30 2023

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=3
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    76                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    77                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    78                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    79  0000                     
    80                           ; Version 2.20
    81                           ; Generated 12/02/2020 GMT
    82                           ; 
    83                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution.
    97                           ; 
    98                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    99                           ;        software without specific prior written permission.
   100                           ; 
   101                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   102                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   103                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   104                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   105                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   106                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   107                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   108                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   109                           ; 
   110                           ; 
   111                           ; Code-generator required, PIC18F452 Definitions
   112                           ; 
   113                           ; SFR Addresses
   114  0000                     
   115                           	psect	idataBANK0
   116  006DE7                     __pidataBANK0:
   117                           	callstack 0
   118                           
   119                           ;initializer for stoa@F1152
   120  006DE7  28                 	db	40
   121  006DE8  6E                 	db	110
   122  006DE9  75                 	db	117
   123  006DEA  6C                 	db	108
   124  006DEB  6C                 	db	108
   125  006DEC  29                 	db	41
   126  006DED  00                 	db	0
   127                           
   128                           ;initializer for _pwm_period
   129                           ;timer.c: 5: static double const f_osc = 1000000;;timer.c: 6: static double const t_osc 
      +                          = 1/f_osc;;timer.c: 7: static double pwm_period = 20e-3;
   130  006DEE  D70A               	dw	55050
   131  006DF0  3CA3               	dw	15523
   132                           
   133                           ;initializer for _tosc
   134  006DF2  37BD               	dw	14269
   135  006DF4  3486               	dw	13446
   136                           
   137                           ;initializer for _tmr2_prescaler
   138  006DF6  0000               	dw	0
   139  006DF8  4180               	dw	16768
   140                           
   141                           	psect	idataBANK1
   142  006DCA                     __pidataBANK1:
   143                           	callstack 0
   144                           
   145                           ;initializer for _state_msgs
   146  006DCA  56                 	db	low STR_1
   147  006DCB  7F                 	db	high STR_1
   148  006DCC  AF                 	db	low STR_2
   149  006DCD  7E                 	db	high STR_2
   150  006DCE  C2                 	db	low STR_3
   151  006DCF  7F                 	db	high STR_3
   152  006DD0  85                 	db	low STR_4
   153  006DD1  7F                 	db	high STR_4
   154  006DD2  EE                 	db	low STR_5
   155  006DD3  7E                 	db	high STR_5
   156  006DD4  25                 	db	low STR_6
   157  006DD5  7F                 	db	high STR_6
   158                           
   159                           	psect	mediumconst
   160  007E9A                     __pmediumconst:
   161                           	callstack 0
   162  007E9A  00                 	db	0
   163  007E9B  0000               	dw	0
   164  007E9D  4B00               	dw	19200
   165  007E9F                     __end_of_toint:
   166                           	callstack 0
   167  007E9F  0000               	dw	0
   168  007EA1  4616               	dw	17942
   169  007EA3                     __end_of_desired_baudrate:
   170                           	callstack 0
   171  007EA3  37BD               	dw	14269
   172  007EA5  3586               	dw	13702
   173  007EA7                     __end_of_t_osc:
   174                           	callstack 0
   175  007EA7  2400               	dw	9216
   176  007EA9  4974               	dw	18804
   177  007EAB                     __end_of_f_osc:
   178                           	callstack 0
   179  007EAB  2400               	dw	9216
   180  007EAD  4A74               	dw	19060
   181  007EAF                     __end_of_fosc:
   182                           	callstack 0
   183  0000                     _CCPR1L	set	4030
   184  0000                     _CCP1CONbits	set	4029
   185  0000                     _CCP1CON	set	4029
   186  0000                     _PR2	set	4043
   187  0000                     _T2CONbits	set	4042
   188  0000                     _TMR2	set	4044
   189  0000                     _T2CON	set	4042
   190  0000                     _TMR0H	set	4055
   191  0000                     _TMR0L	set	4054
   192  0000                     _PORTEbits	set	3972
   193  0000                     _PORTD	set	3971
   194  0000                     _TRISCbits	set	3988
   195  0000                     _PORTC	set	3970
   196  0000                     _LATC	set	3979
   197  0000                     _TRISB	set	3987
   198  0000                     _PORTB	set	3969
   199  0000                     _LATB	set	3978
   200  0000                     _TRISA	set	3986
   201  0000                     _PORTA	set	3968
   202  0000                     _T0CON	set	4053
   203  0000                     _PIR1bits	set	3998
   204  0000                     _PIE1bits	set	3997
   205  0000                     _LATA	set	3977
   206  0000                     _T0CONbits	set	4053
   207  0000                     _LATBbits	set	3978
   208  0000                     _INTCONbits	set	4082
   209  0000                     _RCREG	set	4014
   210  0000                     _TXREG	set	4013
   211  0000                     _RCSTAbits	set	4011
   212  0000                     _TXSTAbits	set	4012
   213  0000                     _SPBRG	set	4015
   214  007EAF                     STR_2:
   215  007EAF  49                 	db	73	;'I'
   216  007EB0  4E                 	db	78	;'N'
   217  007EB1  49                 	db	73	;'I'
   218  007EB2  54                 	db	84	;'T'
   219  007EB3  5F                 	db	95	;'_'
   220  007EB4  50                 	db	80	;'P'
   221  007EB5  4F                 	db	79	;'O'
   222  007EB6  53                 	db	83	;'S'
   223  007EB7  3A                 	db	58	;':'
   224  007EB8  20                 	db	32
   225  007EB9  74                 	db	116	;'t'
   226  007EBA  68                 	db	104	;'h'
   227  007EBB  65                 	db	101	;'e'
   228  007EBC  20                 	db	32
   229  007EBD  6A                 	db	106	;'j'
   230  007EBE  61                 	db	97	;'a'
   231  007EBF  62                 	db	98	;'b'
   232  007EC0  20                 	db	32
   233  007EC1  69                 	db	105	;'i'
   234  007EC2  73                 	db	115	;'s'
   235  007EC3  20                 	db	32
   236  007EC4  61                 	db	97	;'a'
   237  007EC5  74                 	db	116	;'t'
   238  007EC6  20                 	db	32
   239  007EC7  74                 	db	116	;'t'
   240  007EC8  68                 	db	104	;'h'
   241  007EC9  65                 	db	101	;'e'
   242  007ECA  20                 	db	32
   243  007ECB  69                 	db	105	;'i'
   244  007ECC  6E                 	db	110	;'n'
   245  007ECD  69                 	db	105	;'i'
   246  007ECE  74                 	db	116	;'t'
   247  007ECF  20                 	db	32
   248  007ED0  70                 	db	112	;'p'
   249  007ED1  6F                 	db	111	;'o'
   250  007ED2  73                 	db	115	;'s'
   251  007ED3  69                 	db	105	;'i'
   252  007ED4  74                 	db	116	;'t'
   253  007ED5  69                 	db	105	;'i'
   254  007ED6  6F                 	db	111	;'o'
   255  007ED7  6E                 	db	110	;'n'
   256  007ED8  2C                 	db	44
   257  007ED9  20                 	db	32
   258  007EDA  70                 	db	112	;'p'
   259  007EDB  72                 	db	114	;'r'
   260  007EDC  6F                 	db	111	;'o'
   261  007EDD  63                 	db	99	;'c'
   262  007EDE  65                 	db	101	;'e'
   263  007EDF  73                 	db	115	;'s'
   264  007EE0  73                 	db	115	;'s'
   265  007EE1  20                 	db	32
   266  007EE2  69                 	db	105	;'i'
   267  007EE3  73                 	db	115	;'s'
   268  007EE4  20                 	db	32
   269  007EE5  73                 	db	115	;'s'
   270  007EE6  74                 	db	116	;'t'
   271  007EE7  61                 	db	97	;'a'
   272  007EE8  72                 	db	114	;'r'
   273  007EE9  74                 	db	116	;'t'
   274  007EEA  69                 	db	105	;'i'
   275  007EEB  6E                 	db	110	;'n'
   276  007EEC  67                 	db	103	;'g'
   277  007EED  00                 	db	0
   278  007EEE                     STR_5:
   279  007EEE  4D                 	db	77	;'M'
   280  007EEF  49                 	db	73	;'I'
   281  007EF0  58                 	db	88	;'X'
   282  007EF1  49                 	db	73	;'I'
   283  007EF2  4E                 	db	78	;'N'
   284  007EF3  47                 	db	71	;'G'
   285  007EF4  5F                 	db	95	;'_'
   286  007EF5  53                 	db	83	;'S'
   287  007EF6  54                 	db	84	;'T'
   288  007EF7  41                 	db	65	;'A'
   289  007EF8  54                 	db	84	;'T'
   290  007EF9  49                 	db	73	;'I'
   291  007EFA  4F                 	db	79	;'O'
   292  007EFB  4E                 	db	78	;'N'
   293  007EFC  3A                 	db	58	;':'
   294  007EFD  20                 	db	32
   295  007EFE  74                 	db	116	;'t'
   296  007EFF  68                 	db	104	;'h'
   297  007F00  65                 	db	101	;'e'
   298  007F01  20                 	db	32
   299  007F02  6A                 	db	106	;'j'
   300  007F03  61                 	db	97	;'a'
   301  007F04  62                 	db	98	;'b'
   302  007F05  20                 	db	32
   303  007F06  68                 	db	104	;'h'
   304  007F07  61                 	db	97	;'a'
   305  007F08  73                 	db	115	;'s'
   306  007F09  20                 	db	32
   307  007F0A  72                 	db	114	;'r'
   308  007F0B  65                 	db	101	;'e'
   309  007F0C  61                 	db	97	;'a'
   310  007F0D  63                 	db	99	;'c'
   311  007F0E  68                 	db	104	;'h'
   312  007F0F  65                 	db	101	;'e'
   313  007F10  64                 	db	100	;'d'
   314  007F11  20                 	db	32
   315  007F12  74                 	db	116	;'t'
   316  007F13  68                 	db	104	;'h'
   317  007F14  65                 	db	101	;'e'
   318  007F15  20                 	db	32
   319  007F16  6D                 	db	109	;'m'
   320  007F17  69                 	db	105	;'i'
   321  007F18  78                 	db	120	;'x'
   322  007F19  69                 	db	105	;'i'
   323  007F1A  6E                 	db	110	;'n'
   324  007F1B  67                 	db	103	;'g'
   325  007F1C  20                 	db	32
   326  007F1D  73                 	db	115	;'s'
   327  007F1E  74                 	db	116	;'t'
   328  007F1F  61                 	db	97	;'a'
   329  007F20  74                 	db	116	;'t'
   330  007F21  69                 	db	105	;'i'
   331  007F22  6F                 	db	111	;'o'
   332  007F23  6E                 	db	110	;'n'
   333  007F24  00                 	db	0
   334  007F25                     STR_6:
   335  007F25  50                 	db	80	;'P'
   336  007F26  49                 	db	73	;'I'
   337  007F27  43                 	db	67	;'C'
   338  007F28  4B                 	db	75	;'K'
   339  007F29  5F                 	db	95	;'_'
   340  007F2A  55                 	db	85	;'U'
   341  007F2B  50                 	db	80	;'P'
   342  007F2C  3A                 	db	58	;':'
   343  007F2D  20                 	db	32
   344  007F2E  74                 	db	116	;'t'
   345  007F2F  68                 	db	104	;'h'
   346  007F30  65                 	db	101	;'e'
   347  007F31  20                 	db	32
   348  007F32  6A                 	db	106	;'j'
   349  007F33  61                 	db	97	;'a'
   350  007F34  62                 	db	98	;'b'
   351  007F35  20                 	db	32
   352  007F36  68                 	db	104	;'h'
   353  007F37  61                 	db	97	;'a'
   354  007F38  73                 	db	115	;'s'
   355  007F39  20                 	db	32
   356  007F3A  72                 	db	114	;'r'
   357  007F3B  65                 	db	101	;'e'
   358  007F3C  61                 	db	97	;'a'
   359  007F3D  63                 	db	99	;'c'
   360  007F3E  68                 	db	104	;'h'
   361  007F3F  65                 	db	101	;'e'
   362  007F40  64                 	db	100	;'d'
   363  007F41  20                 	db	32
   364  007F42  74                 	db	116	;'t'
   365  007F43  68                 	db	104	;'h'
   366  007F44  65                 	db	101	;'e'
   367  007F45  20                 	db	32
   368  007F46  70                 	db	112	;'p'
   369  007F47  69                 	db	105	;'i'
   370  007F48  63                 	db	99	;'c'
   371  007F49  6B                 	db	107	;'k'
   372  007F4A  20                 	db	32
   373  007F4B  75                 	db	117	;'u'
   374  007F4C  70                 	db	112	;'p'
   375  007F4D  20                 	db	32
   376  007F4E  73                 	db	115	;'s'
   377  007F4F  74                 	db	116	;'t'
   378  007F50  61                 	db	97	;'a'
   379  007F51  74                 	db	116	;'t'
   380  007F52  69                 	db	105	;'i'
   381  007F53  6F                 	db	111	;'o'
   382  007F54  6E                 	db	110	;'n'
   383  007F55  00                 	db	0
   384  007F56                     STR_1:
   385  007F56  49                 	db	73	;'I'
   386  007F57  44                 	db	68	;'D'
   387  007F58  4C                 	db	76	;'L'
   388  007F59  45                 	db	69	;'E'
   389  007F5A  3A                 	db	58	;':'
   390  007F5B  20                 	db	32
   391  007F5C  77                 	db	119	;'w'
   392  007F5D  61                 	db	97	;'a'
   393  007F5E  69                 	db	105	;'i'
   394  007F5F  74                 	db	116	;'t'
   395  007F60  69                 	db	105	;'i'
   396  007F61  6E                 	db	110	;'n'
   397  007F62  67                 	db	103	;'g'
   398  007F63  20                 	db	32
   399  007F64  66                 	db	102	;'f'
   400  007F65  6F                 	db	111	;'o'
   401  007F66  72                 	db	114	;'r'
   402  007F67  20                 	db	32
   403  007F68  6A                 	db	106	;'j'
   404  007F69  61                 	db	97	;'a'
   405  007F6A  62                 	db	98	;'b'
   406  007F6B  20                 	db	32
   407  007F6C  74                 	db	116	;'t'
   408  007F6D  6F                 	db	111	;'o'
   409  007F6E  20                 	db	32
   410  007F6F  62                 	db	98	;'b'
   411  007F70  65                 	db	101	;'e'
   412  007F71  20                 	db	32
   413  007F72  70                 	db	112	;'p'
   414  007F73  6C                 	db	108	;'l'
   415  007F74  61                 	db	97	;'a'
   416  007F75  63                 	db	99	;'c'
   417  007F76  65                 	db	101	;'e'
   418  007F77  64                 	db	100	;'d'
   419  007F78  20                 	db	32
   420  007F79  69                 	db	105	;'i'
   421  007F7A  6E                 	db	110	;'n'
   422  007F7B  20                 	db	32
   423  007F7C  69                 	db	105	;'i'
   424  007F7D  6E                 	db	110	;'n'
   425  007F7E  69                 	db	105	;'i'
   426  007F7F  74                 	db	116	;'t'
   427  007F80  20                 	db	32
   428  007F81  70                 	db	112	;'p'
   429  007F82  6F                 	db	111	;'o'
   430  007F83  73                 	db	115	;'s'
   431  007F84  00                 	db	0
   432  007F85                     STR_4:
   433  007F85  4F                 	db	79	;'O'
   434  007F86  56                 	db	86	;'V'
   435  007F87  45                 	db	69	;'E'
   436  007F88  4E                 	db	78	;'N'
   437  007F89  3A                 	db	58	;':'
   438  007F8A  20                 	db	32
   439  007F8B  72                 	db	114	;'r'
   440  007F8C  65                 	db	101	;'e'
   441  007F8D  61                 	db	97	;'a'
   442  007F8E  63                 	db	99	;'c'
   443  007F8F  68                 	db	104	;'h'
   444  007F90  69                 	db	105	;'i'
   445  007F91  6E                 	db	110	;'n'
   446  007F92  67                 	db	103	;'g'
   447  007F93  20                 	db	32
   448  007F94  74                 	db	116	;'t'
   449  007F95  68                 	db	104	;'h'
   450  007F96  65                 	db	101	;'e'
   451  007F97  20                 	db	32
   452  007F98  63                 	db	99	;'c'
   453  007F99  6F                 	db	111	;'o'
   454  007F9A  72                 	db	114	;'r'
   455  007F9B  72                 	db	114	;'r'
   456  007F9C  65                 	db	101	;'e'
   457  007F9D  63                 	db	99	;'c'
   458  007F9E  74                 	db	116	;'t'
   459  007F9F  20                 	db	32
   460  007FA0  74                 	db	116	;'t'
   461  007FA1  65                 	db	101	;'e'
   462  007FA2  6D                 	db	109	;'m'
   463  007FA3  70                 	db	112	;'p'
   464  007FA4  65                 	db	101	;'e'
   465  007FA5  72                 	db	114	;'r'
   466  007FA6  61                 	db	97	;'a'
   467  007FA7  74                 	db	116	;'t'
   468  007FA8  75                 	db	117	;'u'
   469  007FA9  72                 	db	114	;'r'
   470  007FAA  65                 	db	101	;'e'
   471  007FAB  00                 	db	0
   472  007FAC                     STR_7:
   473  007FAC  44                 	db	68	;'D'
   474  007FAD  65                 	db	101	;'e'
   475  007FAE  76                 	db	118	;'v'
   476  007FAF  69                 	db	105	;'i'
   477  007FB0  63                 	db	99	;'c'
   478  007FB1  65                 	db	101	;'e'
   479  007FB2  20                 	db	32
   480  007FB3  68                 	db	104	;'h'
   481  007FB4  61                 	db	97	;'a'
   482  007FB5  73                 	db	115	;'s'
   483  007FB6  20                 	db	32
   484  007FB7  62                 	db	98	;'b'
   485  007FB8  65                 	db	101	;'e'
   486  007FB9  65                 	db	101	;'e'
   487  007FBA  6E                 	db	110	;'n'
   488  007FBB  20                 	db	32
   489  007FBC  72                 	db	114	;'r'
   490  007FBD  65                 	db	101	;'e'
   491  007FBE  73                 	db	115	;'s'
   492  007FBF  65                 	db	101	;'e'
   493  007FC0  74                 	db	116	;'t'
   494  007FC1  00                 	db	0
   495  007FC2                     STR_3:
   496  007FC2  4D                 	db	77	;'M'
   497  007FC3  4F                 	db	79	;'O'
   498  007FC4  56                 	db	86	;'V'
   499  007FC5  45                 	db	69	;'E'
   500  007FC6  4D                 	db	77	;'M'
   501  007FC7  45                 	db	69	;'E'
   502  007FC8  4E                 	db	78	;'N'
   503  007FC9  54                 	db	84	;'T'
   504  007FCA  00                 	db	0
   505  007FCB                     STR_85:
   506  007FCB  68                 	db	104	;'h'
   507  007FCC  68                 	db	104	;'h'
   508  007FCD  58                 	db	88	;'X'
   509  007FCE  00                 	db	0
   510  007FCF                     STR_9:
   511  007FCF  68                 	db	104	;'h'
   512  007FD0  68                 	db	104	;'h'
   513  007FD1  64                 	db	100	;'d'
   514  007FD2  00                 	db	0
   515  007FD3                     STR_13:
   516  007FD3  68                 	db	104	;'h'
   517  007FD4  68                 	db	104	;'h'
   518  007FD5  69                 	db	105	;'i'
   519  007FD6  00                 	db	0
   520  007FD7                     STR_51:
   521  007FD7  68                 	db	104	;'h'
   522  007FD8  68                 	db	104	;'h'
   523  007FD9  6E                 	db	110	;'n'
   524  007FDA  00                 	db	0
   525  007FDB                     STR_36:
   526  007FDB  68                 	db	104	;'h'
   527  007FDC  68                 	db	104	;'h'
   528  007FDD  6F                 	db	111	;'o'
   529  007FDE  00                 	db	0
   530  007FDF                     STR_66:
   531  007FDF  68                 	db	104	;'h'
   532  007FE0  68                 	db	104	;'h'
   533  007FE1  75                 	db	117	;'u'
   534  007FE2  00                 	db	0
   535  007FE3                     STR_81:
   536  007FE3  68                 	db	104	;'h'
   537  007FE4  68                 	db	104	;'h'
   538  007FE5  78                 	db	120	;'x'
   539  007FE6  00                 	db	0
   540  007FE7                     STR_103:
   541  007FE7  7A                 	db	122	;'z'
   542  007FE8  58                 	db	88	;'X'
   543  007FE9  00                 	db	0
   544  007FEA                     STR_27:
   545  007FEA  7A                 	db	122	;'z'
   546  007FEB  64                 	db	100	;'d'
   547  007FEC  00                 	db	0
   548  007FED                     STR_31:
   549  007FED  7A                 	db	122	;'z'
   550  007FEE  69                 	db	105	;'i'
   551  007FEF  00                 	db	0
   552  007FF0                     STR_61:
   553  007FF0  7A                 	db	122	;'z'
   554  007FF1  6E                 	db	110	;'n'
   555  007FF2  00                 	db	0
   556  007FF3                     STR_46:
   557  007FF3  7A                 	db	122	;'z'
   558  007FF4  6F                 	db	111	;'o'
   559  007FF5  00                 	db	0
   560  007FF6                     STR_76:
   561  007FF6  7A                 	db	122	;'z'
   562  007FF7  75                 	db	117	;'u'
   563  007FF8  00                 	db	0
   564  007FF9                     STR_99:
   565  007FF9  7A                 	db	122	;'z'
   566  007FFA  78                 	db	120	;'x'
   567  007FFB  00                 	db	0
   568  007FFC                     STR_8:
   569  007FFC  25                 	db	37
   570  007FFD  73                 	db	115	;'s'
   571  007FFE  00                 	db	0
   572  007FFF  00                 	db	0	; dummy byte at the end
   573  0000                     
   574                           ; #config settings
   575                           
   576                           	psect	cinit
   577  0072AE                     __pcinit:
   578                           	callstack 0
   579  0072AE                     start_initialization:
   580                           	callstack 0
   581  0072AE                     __initialization:
   582                           	callstack 0
   583                           
   584                           ; Initialize objects allocated to BANK1 (12 bytes)
   585                           ; load TBLPTR registers with __pidataBANK1
   586  0072AE  0ECA               	movlw	low __pidataBANK1
   587  0072B0  6EF6               	movwf	tblptrl,c
   588  0072B2  0E6D               	movlw	high __pidataBANK1
   589  0072B4  6EF7               	movwf	tblptrh,c
   590  0072B6  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   591  0072B8  6EF8               	movwf	tblptru,c
   592  0072BA  EE01  F0AF         	lfsr	0,__pdataBANK1
   593  0072BE  EE10 F00C          	lfsr	1,12
   594  0072C2                     copy_data0:
   595  0072C2  0009               	tblrd		*+
   596  0072C4  CFF5 FFEE          	movff	tablat,postinc0
   597  0072C8  50E5               	movf	postdec1,w,c
   598  0072CA  50E1               	movf	fsr1l,w,c
   599  0072CC  E1FA               	bnz	copy_data0
   600                           
   601                           ; Initialize objects allocated to BANK0 (19 bytes)
   602                           ; load TBLPTR registers with __pidataBANK0
   603  0072CE  0EE7               	movlw	low __pidataBANK0
   604  0072D0  6EF6               	movwf	tblptrl,c
   605  0072D2  0E6D               	movlw	high __pidataBANK0
   606  0072D4  6EF7               	movwf	tblptrh,c
   607  0072D6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   608  0072D8  6EF8               	movwf	tblptru,c
   609  0072DA  EE00  F0C4         	lfsr	0,__pdataBANK0
   610  0072DE  EE10 F013          	lfsr	1,19
   611  0072E2                     copy_data1:
   612  0072E2  0009               	tblrd		*+
   613  0072E4  CFF5 FFEE          	movff	tablat,postinc0
   614  0072E8  50E5               	movf	postdec1,w,c
   615  0072EA  50E1               	movf	fsr1l,w,c
   616  0072EC  E1FA               	bnz	copy_data1
   617                           
   618                           ; Clear objects allocated to BANK1 (14 bytes)
   619  0072EE  EE01  F0A1         	lfsr	0,__pbssBANK1
   620  0072F2  0E0E               	movlw	14
   621  0072F4                     clear_0:
   622  0072F4  6AEE               	clrf	postinc0,c
   623  0072F6  06E8               	decf	wreg,f,c
   624  0072F8  E1FD               	bnz	clear_0
   625                           
   626                           ; Clear objects allocated to BANK0 (46 bytes)
   627  0072FA  EE00  F080         	lfsr	0,__pbssBANK0
   628  0072FE  0E2E               	movlw	46
   629  007300                     clear_1:
   630  007300  6AEE               	clrf	postinc0,c
   631  007302  06E8               	decf	wreg,f,c
   632  007304  E1FD               	bnz	clear_1
   633  007306                     end_of_initialization:
   634                           	callstack 0
   635  007306                     __end_of__initialization:
   636                           	callstack 0
   637  007306  907E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   638  007308  927E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   639  00730A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   640  00730C  6EF8               	movwf	tblptru,c
   641  00730E  0100               	movlb	0
   642  007310  EF63  F013         	goto	_main	;jump to C main() function
   643                           
   644                           	psect	bssBANK0
   645  000080                     __pbssBANK0:
   646                           	callstack 0
   647  000080                     roundf@F525:
   648                           	callstack 0
   649  000080                     	ds	4
   650  000084                     _nout:
   651                           	callstack 0
   652  000084                     	ds	2
   653  000086                     _width:
   654                           	callstack 0
   655  000086                     	ds	2
   656  000088                     _prec:
   657                           	callstack 0
   658  000088                     	ds	2
   659  00008A                     _flags:
   660                           	callstack 0
   661  00008A                     	ds	2
   662  00008C                     _errno:
   663                           	callstack 0
   664  00008C                     	ds	2
   665  00008E                     _dbuf:
   666                           	callstack 0
   667  00008E                     	ds	32
   668                           
   669                           	psect	dataBANK0
   670  0000C4                     __pdataBANK0:
   671                           	callstack 0
   672  0000C4                     stoa@F1152:
   673                           	callstack 0
   674  0000C4                     	ds	7
   675  0000CB                     	ds	4
   676  0000CF                     	ds	4
   677  0000D3                     _tmr2_prescaler:
   678                           	callstack 0
   679  0000D3                     	ds	4
   680                           
   681                           	psect	bssBANK1
   682  0001A1                     __pbssBANK1:
   683                           	callstack 0
   684  0001A1                     _timer_done:
   685                           	callstack 0
   686  0001A1                     	ds	1
   687  0001A2                     _read_new_char:
   688                           	callstack 0
   689  0001A2                     	ds	1
   690  0001A3                     _msg_sent:
   691                           	callstack 0
   692  0001A3                     	ds	1
   693  0001A4                     _state_changed:
   694                           	callstack 0
   695  0001A4                     	ds	1
   696  0001A5                     _mix_counter:
   697                           	callstack 0
   698  0001A5                     	ds	2
   699  0001A7                     _mix_step_counter:
   700                           	callstack 0
   701  0001A7                     	ds	2
   702  0001A9                     _mix_direction:
   703                           	callstack 0
   704  0001A9                     	ds	2
   705  0001AB                     _mix_current_step:
   706                           	callstack 0
   707  0001AB                     	ds	2
   708  0001AD                     _state:
   709                           	callstack 0
   710  0001AD                     	ds	2
   711                           
   712                           	psect	dataBANK1
   713  0001AF                     __pdataBANK1:
   714                           	callstack 0
   715  0001AF                     _state_msgs:
   716                           	callstack 0
   717  0001AF                     	ds	12
   718                           
   719                           	psect	cstackBANK1
   720  000100                     __pcstackBANK1:
   721                           	callstack 0
   722  000100                     main@greet_str:
   723                           	callstack 0
   724                           
   725                           ; 160 bytes @ 0x0
   726  000100                     	ds	160
   727  0001A0                     main@rx_char:
   728                           	callstack 0
   729                           
   730                           ; 1 bytes @ 0xA0
   731  0001A0                     	ds	1
   732                           
   733                           	psect	cstackBANK0
   734  0000AE                     __pcstackBANK0:
   735                           	callstack 0
   736  0000AE                     _vsnprintf$1365:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x0
   740  0000AE                     	ds	2
   741  0000B0                     vsnprintf@cnt:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x2
   745  0000B0                     	ds	2
   746  0000B2                     vsnprintf@f:
   747                           	callstack 0
   748                           
   749                           ; 6 bytes @ 0x4
   750  0000B2                     	ds	6
   751  0000B8                     ?_snprintf:
   752                           	callstack 0
   753  0000B8                     snprintf@s:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0xA
   757  0000B8                     	ds	2
   758  0000BA                     snprintf@n:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0xC
   762  0000BA                     	ds	2
   763  0000BC                     snprintf@fmt:
   764                           	callstack 0
   765                           
   766                           ; 2 bytes @ 0xE
   767  0000BC                     	ds	6
   768  0000C2                     snprintf@ap:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0x14
   772  0000C2                     	ds	2
   773                           
   774                           	psect	cstackCOMRAM
   775  000001                     __pcstackCOMRAM:
   776                           	callstack 0
   777  000001                     ?_strlen:
   778                           	callstack 0
   779  000001                     ?_isupper:
   780                           	callstack 0
   781  000001                     ?_isalpha:
   782                           	callstack 0
   783  000001                     ?_isdigit:
   784                           	callstack 0
   785  000001                     ?_strncmp:
   786                           	callstack 0
   787  000001                     ?_isspace:
   788                           	callstack 0
   789  000001                     ?_islower:
   790                           	callstack 0
   791  000001                     ?___wmul:
   792                           	callstack 0
   793  000001                     ?___flmul:
   794                           	callstack 0
   795  000001                     ?___flneg:
   796                           	callstack 0
   797  000001                     ?___aodiv:
   798                           	callstack 0
   799  000001                     ?___aomod:
   800                           	callstack 0
   801  000001                     ?___lodiv:
   802                           	callstack 0
   803  000001                     ?___lomod:
   804                           	callstack 0
   805  000001                     serial_tx_char@val:
   806                           	callstack 0
   807  000001                     get_reg_value@rx_char:
   808                           	callstack 0
   809  000001                     lcd_wr@val:
   810                           	callstack 0
   811  000001                     compute_next_step@current_step:
   812                           	callstack 0
   813  000001                     update_direction_and_counters@counter_step:
   814                           	callstack 0
   815  000001                     mix_exit_condition@counter:
   816                           	callstack 0
   817  000001                     state_translator_micro_to_fpga@state:
   818                           	callstack 0
   819  000001                     ___wmul@multiplier:
   820                           	callstack 0
   821  000001                     isalpha@c:
   822                           	callstack 0
   823  000001                     isdigit@c:
   824                           	callstack 0
   825  000001                     isspace@c:
   826                           	callstack 0
   827  000001                     isupper@c:
   828                           	callstack 0
   829  000001                     fputc@c:
   830                           	callstack 0
   831  000001                     strlen@s:
   832                           	callstack 0
   833  000001                     strncmp@_l:
   834                           	callstack 0
   835  000001                     islower@c:
   836                           	callstack 0
   837  000001                     ___flge@ff1:
   838                           	callstack 0
   839  000001                     ___flneg@f1:
   840                           	callstack 0
   841  000001                     ___flmul@b:
   842                           	callstack 0
   843  000001                     ___aodiv@dividend:
   844                           	callstack 0
   845  000001                     ___aomod@dividend:
   846                           	callstack 0
   847  000001                     ___lodiv@dividend:
   848                           	callstack 0
   849  000001                     ___lomod@dividend:
   850                           	callstack 0
   851                           
   852                           ; 8 bytes @ 0x0
   853  000001                     	ds	1
   854  000002                     lcd_cmd@val:
   855                           	callstack 0
   856  000002                     lcd_dat@val:
   857                           	callstack 0
   858                           
   859                           ; 1 bytes @ 0x1
   860  000002                     	ds	1
   861  000003                     ??_lcd_init:
   862  000003                     ??_isupper:
   863  000003                     ??_isalpha:
   864  000003                     ??_isdigit:
   865  000003                     ??_isspace:
   866  000003                     ??_islower:
   867  000003                     compute_next_step@step_direction:
   868                           	callstack 0
   869  000003                     update_direction_and_counters@step_direction:
   870                           	callstack 0
   871  000003                     mix_exit_condition@current_step:
   872                           	callstack 0
   873  000003                     lcd_str@str:
   874                           	callstack 0
   875  000003                     state_translator_fpga_to_micro@state:
   876                           	callstack 0
   877  000003                     ___wmul@multiplicand:
   878                           	callstack 0
   879  000003                     fputc@fp:
   880                           	callstack 0
   881  000003                     strlen@a:
   882                           	callstack 0
   883  000003                     strncmp@_r:
   884                           	callstack 0
   885                           
   886                           ; 2 bytes @ 0x2
   887  000003                     	ds	2
   888  000005                     ??_lcd_str:
   889  000005                     ??_compute_next_step:
   890  000005                     ??_fputc:
   891  000005                     state_translator_fpga_to_micro@state_machine_code:
   892                           	callstack 0
   893  000005                     state_translator_micro_to_fpga@state_machine_code:
   894                           	callstack 0
   895  000005                     update_direction_and_counters@counter:
   896                           	callstack 0
   897  000005                     ___wmul@product:
   898                           	callstack 0
   899  000005                     strncmp@n:
   900                           	callstack 0
   901  000005                     ___flge@ff2:
   902                           	callstack 0
   903  000005                     ___flmul@a:
   904                           	callstack 0
   905                           
   906                           ; 4 bytes @ 0x4
   907  000005                     	ds	2
   908  000007                     ??_update_direction_and_counters:
   909  000007                     ??_strncmp:
   910  000007                     ?_toupper:
   911                           	callstack 0
   912  000007                     lcd_str@i:
   913                           	callstack 0
   914  000007                     _isspace$1655:
   915                           	callstack 0
   916  000007                     toupper@c:
   917                           	callstack 0
   918                           
   919                           ; 2 bytes @ 0x6
   920  000007                     	ds	1
   921  000008                     ?_atoi:
   922                           	callstack 0
   923  000008                     atoi@s:
   924                           	callstack 0
   925  000008                     strncmp@l:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0x7
   929  000008                     	ds	1
   930  000009                     ??___flmul:
   931  000009                     ??_toupper:
   932  000009                     ??___flge:
   933  000009                     ___aodiv@divisor:
   934                           	callstack 0
   935  000009                     ___aomod@divisor:
   936                           	callstack 0
   937  000009                     ___lodiv@divisor:
   938                           	callstack 0
   939  000009                     ___lomod@divisor:
   940                           	callstack 0
   941                           
   942                           ; 8 bytes @ 0x8
   943  000009                     	ds	1
   944  00000A                     ??_atoi:
   945  00000A                     ?_stoa:
   946                           	callstack 0
   947  00000A                     stoa@fp:
   948                           	callstack 0
   949  00000A                     fputs@s:
   950                           	callstack 0
   951  00000A                     strncmp@r:
   952                           	callstack 0
   953                           
   954                           ; 2 bytes @ 0x9
   955  00000A                     	ds	2
   956  00000C                     stoa@s:
   957                           	callstack 0
   958  00000C                     fputs@fp:
   959                           	callstack 0
   960                           
   961                           ; 2 bytes @ 0xB
   962  00000C                     	ds	1
   963  00000D                     ___flmul@sign:
   964                           	callstack 0
   965  00000D                     _toupper$1715:
   966                           	callstack 0
   967                           
   968                           ; 2 bytes @ 0xC
   969  00000D                     	ds	1
   970  00000E                     ??_stoa:
   971  00000E                     fputs@c:
   972                           	callstack 0
   973  00000E                     atoi@neg:
   974                           	callstack 0
   975  00000E                     ___flmul@grs:
   976                           	callstack 0
   977                           
   978                           ; 4 bytes @ 0xD
   979  00000E                     	ds	1
   980  00000F                     fputs@i:
   981                           	callstack 0
   982  00000F                     stoa@nuls:
   983                           	callstack 0
   984                           
   985                           ; 7 bytes @ 0xE
   986  00000F                     	ds	1
   987  000010                     _atoi$1627:
   988                           	callstack 0
   989                           
   990                           ; 2 bytes @ 0xF
   991  000010                     	ds	1
   992  000011                     ?_pad:
   993                           	callstack 0
   994  000011                     ___aodiv@counter:
   995                           	callstack 0
   996  000011                     ___aomod@counter:
   997                           	callstack 0
   998  000011                     ___lomod@counter:
   999                           	callstack 0
  1000  000011                     pad@fp:
  1001                           	callstack 0
  1002  000011                     ___lodiv@quotient:
  1003                           	callstack 0
  1004                           
  1005                           ; 8 bytes @ 0x10
  1006  000011                     	ds	1
  1007  000012                     ___aodiv@sign:
  1008                           	callstack 0
  1009  000012                     ___aomod@sign:
  1010                           	callstack 0
  1011  000012                     ___flmul@aexp:
  1012                           	callstack 0
  1013  000012                     _atoi$1629:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x11
  1017  000012                     	ds	1
  1018  000013                     ?_abs:
  1019                           	callstack 0
  1020  000013                     ___flmul@bexp:
  1021                           	callstack 0
  1022  000013                     pad@buf:
  1023                           	callstack 0
  1024  000013                     abs@a:
  1025                           	callstack 0
  1026  000013                     ___aodiv@quotient:
  1027                           	callstack 0
  1028                           
  1029                           ; 8 bytes @ 0x12
  1030  000013                     	ds	1
  1031  000014                     _atoi$1628:
  1032                           	callstack 0
  1033  000014                     ___flmul@prod:
  1034                           	callstack 0
  1035                           
  1036                           ; 4 bytes @ 0x13
  1037  000014                     	ds	1
  1038  000015                     ??_abs:
  1039  000015                     pad@p:
  1040                           	callstack 0
  1041  000015                     atoi@n:
  1042                           	callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x14
  1045  000015                     	ds	1
  1046  000016                     stoa@i:
  1047                           	callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x15
  1050  000016                     	ds	1
  1051  000017                     ??_pad:
  1052                           
  1053                           ; 1 bytes @ 0x16
  1054  000017                     	ds	1
  1055  000018                     ___flmul@temp:
  1056                           	callstack 0
  1057  000018                     pad@i:
  1058                           	callstack 0
  1059  000018                     stoa@w:
  1060                           	callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x17
  1063  000018                     	ds	1
  1064  000019                     ___lodiv@counter:
  1065                           	callstack 0
  1066                           
  1067                           ; 1 bytes @ 0x18
  1068  000019                     	ds	1
  1069  00001A                     ?___fldiv:
  1070                           	callstack 0
  1071  00001A                     pad@w:
  1072                           	callstack 0
  1073  00001A                     stoa@cp:
  1074                           	callstack 0
  1075  00001A                     ___fldiv@b:
  1076                           	callstack 0
  1077                           
  1078                           ; 4 bytes @ 0x19
  1079  00001A                     	ds	2
  1080  00001C                     ?_ctoa:
  1081                           	callstack 0
  1082  00001C                     ?_dtoa:
  1083                           	callstack 0
  1084  00001C                     ?_otoa:
  1085                           	callstack 0
  1086  00001C                     ?_utoa:
  1087                           	callstack 0
  1088  00001C                     ?_xtoa:
  1089                           	callstack 0
  1090  00001C                     ctoa@fp:
  1091                           	callstack 0
  1092  00001C                     dtoa@fp:
  1093                           	callstack 0
  1094  00001C                     otoa@fp:
  1095                           	callstack 0
  1096  00001C                     stoa@p:
  1097                           	callstack 0
  1098  00001C                     utoa@fp:
  1099                           	callstack 0
  1100  00001C                     xtoa@fp:
  1101                           	callstack 0
  1102                           
  1103                           ; 2 bytes @ 0x1B
  1104  00001C                     	ds	2
  1105  00001E                     ctoa@c:
  1106                           	callstack 0
  1107  00001E                     stoa@l:
  1108                           	callstack 0
  1109  00001E                     ___fldiv@a:
  1110                           	callstack 0
  1111  00001E                     dtoa@d:
  1112                           	callstack 0
  1113  00001E                     otoa@d:
  1114                           	callstack 0
  1115  00001E                     utoa@d:
  1116                           	callstack 0
  1117  00001E                     xtoa@d:
  1118                           	callstack 0
  1119                           
  1120                           ; 8 bytes @ 0x1D
  1121  00001E                     	ds	1
  1122  00001F                     ctoa@w:
  1123                           	callstack 0
  1124                           
  1125                           ; 2 bytes @ 0x1E
  1126  00001F                     	ds	3
  1127  000022                     ??___fldiv:
  1128                           
  1129                           ; 1 bytes @ 0x21
  1130  000022                     	ds	4
  1131  000026                     ??_dtoa:
  1132  000026                     ??_otoa:
  1133  000026                     ??_utoa:
  1134  000026                     xtoa@x:
  1135                           	callstack 0
  1136  000026                     ___fldiv@rem:
  1137                           	callstack 0
  1138                           
  1139                           ; 4 bytes @ 0x25
  1140  000026                     	ds	1
  1141  000027                     ??_xtoa:
  1142                           
  1143                           ; 1 bytes @ 0x26
  1144  000027                     	ds	3
  1145  00002A                     ___fldiv@sign:
  1146                           	callstack 0
  1147                           
  1148                           ; 1 bytes @ 0x29
  1149  00002A                     	ds	1
  1150  00002B                     ___fldiv@new_exp:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x2A
  1154  00002B                     	ds	2
  1155  00002D                     ___fldiv@grs:
  1156                           	callstack 0
  1157                           
  1158                           ; 4 bytes @ 0x2C
  1159  00002D                     	ds	1
  1160  00002E                     _dtoa$1451:
  1161                           	callstack 0
  1162  00002E                     otoa@p:
  1163                           	callstack 0
  1164  00002E                     utoa@p:
  1165                           	callstack 0
  1166                           
  1167                           ; 2 bytes @ 0x2D
  1168  00002E                     	ds	1
  1169  00002F                     _xtoa$1487:
  1170                           	callstack 0
  1171                           
  1172                           ; 2 bytes @ 0x2E
  1173  00002F                     	ds	1
  1174  000030                     dtoa@p:
  1175                           	callstack 0
  1176  000030                     otoa@t:
  1177                           	callstack 0
  1178  000030                     utoa@w:
  1179                           	callstack 0
  1180                           
  1181                           ; 2 bytes @ 0x2F
  1182  000030                     	ds	1
  1183  000031                     ___fldiv@bexp:
  1184                           	callstack 0
  1185  000031                     _xtoa$1488:
  1186                           	callstack 0
  1187                           
  1188                           ; 2 bytes @ 0x30
  1189  000031                     	ds	1
  1190  000032                     ___fldiv@aexp:
  1191                           	callstack 0
  1192  000032                     dtoa@w:
  1193                           	callstack 0
  1194  000032                     otoa@w:
  1195                           	callstack 0
  1196  000032                     utoa@n:
  1197                           	callstack 0
  1198                           
  1199                           ; 8 bytes @ 0x31
  1200  000032                     	ds	1
  1201  000033                     ?___fladd:
  1202                           	callstack 0
  1203  000033                     xtoa@p:
  1204                           	callstack 0
  1205  000033                     ___fladd@b:
  1206                           	callstack 0
  1207                           
  1208                           ; 4 bytes @ 0x32
  1209  000033                     	ds	1
  1210  000034                     dtoa@s:
  1211                           	callstack 0
  1212  000034                     otoa@n:
  1213                           	callstack 0
  1214                           
  1215                           ; 8 bytes @ 0x33
  1216  000034                     	ds	1
  1217  000035                     xtoa@w:
  1218                           	callstack 0
  1219                           
  1220                           ; 2 bytes @ 0x34
  1221  000035                     	ds	1
  1222  000036                     dtoa@n:
  1223                           	callstack 0
  1224                           
  1225                           ; 8 bytes @ 0x35
  1226  000036                     	ds	1
  1227  000037                     ___fladd@a:
  1228                           	callstack 0
  1229  000037                     xtoa@n:
  1230                           	callstack 0
  1231                           
  1232                           ; 8 bytes @ 0x36
  1233  000037                     	ds	3
  1234  00003A                     utoa@i:
  1235                           	callstack 0
  1236                           
  1237                           ; 2 bytes @ 0x39
  1238  00003A                     	ds	1
  1239  00003B                     ??___fladd:
  1240                           
  1241                           ; 1 bytes @ 0x3A
  1242  00003B                     	ds	1
  1243  00003C                     otoa@i:
  1244                           	callstack 0
  1245                           
  1246                           ; 2 bytes @ 0x3B
  1247  00003C                     	ds	2
  1248  00003E                     dtoa@i:
  1249                           	callstack 0
  1250                           
  1251                           ; 2 bytes @ 0x3D
  1252  00003E                     	ds	1
  1253  00003F                     ___fladd@signs:
  1254                           	callstack 0
  1255  00003F                     xtoa@i:
  1256                           	callstack 0
  1257                           
  1258                           ; 2 bytes @ 0x3E
  1259  00003F                     	ds	1
  1260  000040                     ___fladd@aexp:
  1261                           	callstack 0
  1262                           
  1263                           ; 1 bytes @ 0x3F
  1264  000040                     	ds	1
  1265  000041                     ___fladd@bexp:
  1266                           	callstack 0
  1267  000041                     xtoa@c:
  1268                           	callstack 0
  1269                           
  1270                           ; 2 bytes @ 0x40
  1271  000041                     	ds	1
  1272  000042                     ___fladd@grs:
  1273                           	callstack 0
  1274                           
  1275                           ; 1 bytes @ 0x41
  1276  000042                     	ds	1
  1277  000043                     ?_vfpfcnvrt:
  1278                           	callstack 0
  1279  000043                     ?___flsub:
  1280                           	callstack 0
  1281  000043                     vfpfcnvrt@fp:
  1282                           	callstack 0
  1283  000043                     ___flsub@b:
  1284                           	callstack 0
  1285                           
  1286                           ; 4 bytes @ 0x42
  1287  000043                     	ds	2
  1288  000045                     vfpfcnvrt@fmt:
  1289                           	callstack 0
  1290                           
  1291                           ; 2 bytes @ 0x44
  1292  000045                     	ds	2
  1293  000047                     vfpfcnvrt@ap:
  1294                           	callstack 0
  1295  000047                     ___flsub@a:
  1296                           	callstack 0
  1297                           
  1298                           ; 4 bytes @ 0x46
  1299  000047                     	ds	2
  1300  000049                     ??_vfpfcnvrt:
  1301                           
  1302                           ; 1 bytes @ 0x48
  1303  000049                     	ds	2
  1304  00004B                     ?_roundf:
  1305                           	callstack 0
  1306  00004B                     roundf@x:
  1307                           	callstack 0
  1308                           
  1309                           ; 4 bytes @ 0x4A
  1310  00004B                     	ds	2
  1311  00004D                     vfpfcnvrt@cp:
  1312                           	callstack 0
  1313                           
  1314                           ; 2 bytes @ 0x4C
  1315  00004D                     	ds	2
  1316  00004F                     ??_roundf:
  1317  00004F                     vfpfcnvrt@done:
  1318                           	callstack 0
  1319                           
  1320                           ; 2 bytes @ 0x4E
  1321  00004F                     	ds	2
  1322  000051                     _vfpfcnvrt$1502:
  1323                           	callstack 0
  1324                           
  1325                           ; 2 bytes @ 0x50
  1326  000051                     	ds	2
  1327  000053                     _vfpfcnvrt$1503:
  1328                           	callstack 0
  1329  000053                     _roundf$1950:
  1330                           	callstack 0
  1331                           
  1332                           ; 4 bytes @ 0x52
  1333  000053                     	ds	2
  1334  000055                     vfpfcnvrt@ll:
  1335                           	callstack 0
  1336                           
  1337                           ; 8 bytes @ 0x54
  1338  000055                     	ds	2
  1339  000057                     roundf@e:
  1340                           	callstack 0
  1341                           
  1342                           ; 2 bytes @ 0x56
  1343  000057                     	ds	2
  1344  000059                     _roundf$1949:
  1345                           	callstack 0
  1346                           
  1347                           ; 4 bytes @ 0x58
  1348  000059                     	ds	4
  1349  00005D                     vfpfcnvrt@vp:
  1350                           	callstack 0
  1351  00005D                     roundf@u:
  1352                           	callstack 0
  1353                           
  1354                           ; 4 bytes @ 0x5C
  1355  00005D                     	ds	2
  1356  00005F                     vfpfcnvrt@c:
  1357                           	callstack 0
  1358                           
  1359                           ; 1 bytes @ 0x5E
  1360  00005F                     	ds	1
  1361  000060                     vfpfcnvrt@llu:
  1362                           	callstack 0
  1363                           
  1364                           ; 8 bytes @ 0x5F
  1365  000060                     	ds	1
  1366  000061                     roundf@y:
  1367                           	callstack 0
  1368                           
  1369                           ; 4 bytes @ 0x60
  1370  000061                     	ds	4
  1371  000065                     ?___fltol:
  1372                           	callstack 0
  1373  000065                     ___fltol@f1:
  1374                           	callstack 0
  1375                           
  1376                           ; 4 bytes @ 0x64
  1377  000065                     	ds	3
  1378  000068                     ?_vfprintf:
  1379                           	callstack 0
  1380  000068                     vfprintf@fp:
  1381                           	callstack 0
  1382                           
  1383                           ; 2 bytes @ 0x67
  1384  000068                     	ds	1
  1385  000069                     ??___fltol:
  1386                           
  1387                           ; 1 bytes @ 0x68
  1388  000069                     	ds	1
  1389  00006A                     vfprintf@fmt:
  1390                           	callstack 0
  1391                           
  1392                           ; 2 bytes @ 0x69
  1393  00006A                     	ds	2
  1394  00006C                     vfprintf@ap:
  1395                           	callstack 0
  1396                           
  1397                           ; 2 bytes @ 0x6B
  1398  00006C                     	ds	1
  1399  00006D                     ___fltol@sign1:
  1400                           	callstack 0
  1401                           
  1402                           ; 1 bytes @ 0x6C
  1403  00006D                     	ds	1
  1404  00006E                     ___fltol@exp1:
  1405                           	callstack 0
  1406  00006E                     vfprintf@cfmt:
  1407                           	callstack 0
  1408                           
  1409                           ; 2 bytes @ 0x6D
  1410  00006E                     	ds	1
  1411  00006F                     update_pwm_duty_ccp1@time_up:
  1412                           	callstack 0
  1413  00006F                     _init_timer_2$1948:
  1414                           	callstack 0
  1415                           
  1416                           ; 4 bytes @ 0x6E
  1417  00006F                     	ds	1
  1418  000070                     ?_vsnprintf:
  1419                           	callstack 0
  1420  000070                     vsnprintf@s:
  1421                           	callstack 0
  1422                           
  1423                           ; 2 bytes @ 0x6F
  1424  000070                     	ds	2
  1425  000072                     vsnprintf@n:
  1426                           	callstack 0
  1427                           
  1428                           ; 2 bytes @ 0x71
  1429  000072                     	ds	1
  1430  000073                     ??_update_pwm_duty_ccp1:
  1431                           
  1432                           ; 1 bytes @ 0x72
  1433  000073                     	ds	1
  1434  000074                     vsnprintf@fmt:
  1435                           	callstack 0
  1436                           
  1437                           ; 2 bytes @ 0x73
  1438  000074                     	ds	1
  1439  000075                     update_pwm_duty_ccp1@new_duty:
  1440                           	callstack 0
  1441                           
  1442                           ; 2 bytes @ 0x74
  1443  000075                     	ds	1
  1444  000076                     vsnprintf@ap:
  1445                           	callstack 0
  1446                           
  1447                           ; 2 bytes @ 0x75
  1448  000076                     	ds	1
  1449  000077                     update_pwm_duty_ccp1@lsbs_duty:
  1450                           	callstack 0
  1451                           
  1452                           ; 1 bytes @ 0x76
  1453  000077                     	ds	1
  1454  000078                     ??_vsnprintf:
  1455                           
  1456                           ; 1 bytes @ 0x77
  1457  000078                     	ds	4
  1458  00007C                     ??_main:
  1459                           
  1460                           ; 1 bytes @ 0x7B
  1461  00007C                     	ds	2
  1462                           
  1463 ;;
  1464 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1465 ;;
  1466 ;; *************** function _main *****************
  1467 ;; Defined at:
  1468 ;;		line 43 in file "main.c"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;		None
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;  greet_str     160    0[BANK1 ] PTR const unsigned char 
  1473 ;;		 -> ?_snprintf(2), STR_6(49), STR_5(55), STR_4(39), 
  1474 ;;		 -> STR_3(9), STR_2(63), STR_1(47), 
  1475 ;;  rx_char         1  160[BANK1 ] unsigned char 
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      void 
  1478 ;; Registers used:
  1479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1485 ;;      Params:         0       0       0       0       0       0       0
  1486 ;;      Locals:         0       0     161       0       0       0       0
  1487 ;;      Temps:          2       0       0       0       0       0       0
  1488 ;;      Totals:         2       0     161       0       0       0       0
  1489 ;;Total ram usage:      163 bytes
  1490 ;; Hardware stack levels required when called:   10
  1491 ;; This function calls:
  1492 ;;		_compute_next_step
  1493 ;;		_get_reg_value
  1494 ;;		_init_PORTS
  1495 ;;		_init_USART
  1496 ;;		_init_ccp1
  1497 ;;		_init_interrupts
  1498 ;;		_init_timer_0
  1499 ;;		_init_timer_2
  1500 ;;		_lcd_cmd
  1501 ;;		_lcd_init
  1502 ;;		_lcd_str
  1503 ;;		_mix_exit_condition
  1504 ;;		_serial_tx_char
  1505 ;;		_snprintf
  1506 ;;		_state_translator_fpga_to_micro
  1507 ;;		_state_translator_micro_to_fpga
  1508 ;;		_update_direction_and_counters
  1509 ;; This function is called by:
  1510 ;;		Startup code after reset
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           	psect	text0
  1515  0026C6                     __ptext0:
  1516                           	callstack 0
  1517  0026C6                     _main:
  1518                           	callstack 21
  1519  0026C6  FFFF               	dw	65535	; assembler added errata NOP
  1520                           
  1521                           ;main.c: 45:     init_PORTS();
  1522  0026C8  EC6E  F037         	call	_init_PORTS	;wreg free
  1523  0026CC                     
  1524                           ;main.c: 46:     init_USART();
  1525  0026CC  ECBA  F037         	call	_init_USART	;wreg free
  1526  0026D0                     
  1527                           ;main.c: 47:     init_timer_2();
  1528  0026D0  EC87  F03B         	call	_init_timer_2	;wreg free
  1529  0026D4                     
  1530                           ;main.c: 48:     init_ccp1();
  1531  0026D4  EC0D  F037         	call	_init_ccp1	;wreg free
  1532  0026D8                     
  1533                           ;main.c: 49:     init_interrupts();
  1534  0026D8  ECD9  F036         	call	_init_interrupts	;wreg free
  1535  0026DC                     
  1536                           ;main.c: 50:     lcd_init();
  1537  0026DC  ECFA  F039         	call	_lcd_init	;wreg free
  1538  0026E0                     
  1539                           ;main.c: 51:     lcd_cmd(0x0C);
  1540  0026E0  0E0C               	movlw	12
  1541  0026E2  EC2F  F037         	call	_lcd_cmd
  1542  0026E6                     
  1543                           ;main.c: 53:     lcd_cmd(0x01);
  1544  0026E6  0E01               	movlw	1
  1545  0026E8  EC2F  F037         	call	_lcd_cmd
  1546  0026EC                     
  1547                           ;main.c: 54:     lcd_cmd(0x80);
  1548  0026EC  0E80               	movlw	128
  1549  0026EE  EC2F  F037         	call	_lcd_cmd
  1550  0026F2                     
  1551                           ;main.c: 55:     lcd_str("Device has been reset");
  1552  0026F2  0EAC               	movlw	low STR_7
  1553  0026F4  6E03               	movwf	lcd_str@str^0,c
  1554  0026F6  0E7F               	movlw	high STR_7
  1555  0026F8  6E04               	movwf	(lcd_str@str+1)^0,c
  1556  0026FA  EC39  F03A         	call	_lcd_str	;wreg free
  1557  0026FE                     
  1558                           ;main.c: 57:     (INTCONbits.GIE = 1);
  1559  0026FE  8EF2               	bsf	242,7,c	;volatile
  1560  002700                     
  1561                           ;main.c: 58:     mix_current_step = 0;
  1562  002700  0E00               	movlw	0
  1563  002702  0101               	movlb	1	; () banked
  1564  002704  6FAC               	movwf	(_mix_current_step+1)& (0+255),b
  1565  002706  0E00               	movlw	0
  1566  002708  6FAB               	movwf	_mix_current_step& (0+255),b
  1567  00270A                     
  1568                           ; BSR set to: 1
  1569                           ;main.c: 59:     mix_direction = 1;
  1570  00270A  0E00               	movlw	0
  1571  00270C  6FAA               	movwf	(_mix_direction+1)& (0+255),b
  1572  00270E  0E01               	movlw	1
  1573  002710  6FA9               	movwf	_mix_direction& (0+255),b
  1574  002712                     
  1575                           ; BSR set to: 1
  1576                           ;main.c: 60:     mix_step_counter = 0;
  1577  002712  0E00               	movlw	0
  1578  002714  6FA8               	movwf	(_mix_step_counter+1)& (0+255),b
  1579  002716  0E00               	movlw	0
  1580  002718  6FA7               	movwf	_mix_step_counter& (0+255),b
  1581  00271A                     
  1582                           ; BSR set to: 1
  1583                           ;main.c: 61:     mix_counter = 0;
  1584  00271A  0E00               	movlw	0
  1585  00271C  6FA6               	movwf	(_mix_counter+1)& (0+255),b
  1586  00271E  0E00               	movlw	0
  1587  002720  6FA5               	movwf	_mix_counter& (0+255),b
  1588  002722                     l5131:
  1589  002722  FFFF               	dw	65535	; assembler added errata NOP
  1590                           
  1591                           ;main.c: 64:         if (state_changed){
  1592  002724  0101               	movlb	1	; () banked
  1593  002726  51A4               	movf	_state_changed& (0+255),w,b
  1594  002728  B4D8               	btfsc	status,2,c
  1595  00272A  EF99  F013         	goto	u6131
  1596  00272E  EF9C  F013         	goto	u6130
  1597  002732                     u6131:
  1598  002732  FFFF               	dw	65535	; assembler added errata NOP
  1599  002734  EFF6  F013         	goto	l5155
  1600  002738                     u6130:
  1601  002738  FFFF               	dw	65535	; assembler added errata NOP
  1602  00273A                     
  1603                           ; BSR set to: 1
  1604                           ;main.c: 65:             const char* greet_str[80];;main.c: 66:             if (read_new
      +                          _char){
  1605  00273A  51A2               	movf	_read_new_char& (0+255),w,b
  1606  00273C  B4D8               	btfsc	status,2,c
  1607  00273E  EFA3  F013         	goto	u6141
  1608  002742  EFA6  F013         	goto	u6140
  1609  002746                     u6141:
  1610  002746  FFFF               	dw	65535	; assembler added errata NOP
  1611  002748  EFC9  F013         	goto	l5145
  1612  00274C                     u6140:
  1613  00274C  FFFF               	dw	65535	; assembler added errata NOP
  1614  00274E                     
  1615                           ; BSR set to: 1
  1616                           ;main.c: 67:                 rx_char = get_reg_value();
  1617  00274E  ECEB  F036         	call	_get_reg_value	;wreg free
  1618  002752  0101               	movlb	1	; () banked
  1619  002754  6FA0               	movwf	main@rx_char& (0+255),b
  1620  002756                     
  1621                           ; BSR set to: 1
  1622                           ;main.c: 68:                 if (rx_char == 'u'){
  1623  002756  0E75               	movlw	117
  1624  002758  19A0               	xorwf	main@rx_char& (0+255),w,b
  1625  00275A  A4D8               	btfss	status,2,c
  1626  00275C  EFB2  F013         	goto	u6151
  1627  002760  EFB5  F013         	goto	u6150
  1628  002764                     u6151:
  1629  002764  FFFF               	dw	65535	; assembler added errata NOP
  1630  002766  EFB9  F013         	goto	l114
  1631  00276A                     u6150:
  1632  00276A  FFFF               	dw	65535	; assembler added errata NOP
  1633  00276C                     
  1634                           ; BSR set to: 1
  1635                           ;main.c: 69:                     serial_tx_char(rx_char);
  1636  00276C  51A0               	movf	main@rx_char& (0+255),w,b
  1637  00276E  ECFD  F036         	call	_serial_tx_char
  1638  002772                     l114:
  1639  002772  FFFF               	dw	65535	; assembler added errata NOP
  1640                           
  1641                           ;main.c: 71:                 serial_tx_char(rx_char);
  1642  002774  0101               	movlb	1	; () banked
  1643  002776  51A0               	movf	main@rx_char& (0+255),w,b
  1644  002778  ECFD  F036         	call	_serial_tx_char
  1645  00277C                     
  1646                           ;main.c: 72:                 state_translator_fpga_to_micro(rx_char, &state);
  1647  00277C  0EAD               	movlw	low _state
  1648  00277E  6E03               	movwf	state_translator_fpga_to_micro@state^0,c
  1649  002780  0E01               	movlw	high _state
  1650  002782  6E04               	movwf	(state_translator_fpga_to_micro@state+1)^0,c
  1651  002784  0101               	movlb	1	; () banked
  1652  002786  51A0               	movf	main@rx_char& (0+255),w,b
  1653  002788  EC46  F03D         	call	_state_translator_fpga_to_micro
  1654  00278C                     
  1655                           ;main.c: 73:                 read_new_char = 0;
  1656  00278C  0E00               	movlw	0
  1657  00278E  0101               	movlb	1	; () banked
  1658  002790  6FA2               	movwf	_read_new_char& (0+255),b
  1659  002792                     l5145:
  1660  002792  FFFF               	dw	65535	; assembler added errata NOP
  1661                           
  1662                           ; BSR set to: 1
  1663                           ;main.c: 75:             snprintf(greet_str, sizeof(greet_str), "%s", state_msgs[state])
      +                          ;
  1664  002794  0E00               	movlw	low main@greet_str
  1665  002796  0100               	movlb	0	; () banked
  1666  002798  6FB8               	movwf	snprintf@s& (0+255),b
  1667  00279A  0E01               	movlw	high main@greet_str
  1668  00279C  6FB9               	movwf	(snprintf@s+1)& (0+255),b
  1669  00279E  0E00               	movlw	0
  1670  0027A0  6FBB               	movwf	(snprintf@n+1)& (0+255),b
  1671  0027A2  0EA0               	movlw	160
  1672  0027A4  6FBA               	movwf	snprintf@n& (0+255),b
  1673  0027A6  0EFC               	movlw	low STR_8
  1674  0027A8  6FBC               	movwf	snprintf@fmt& (0+255),b
  1675  0027AA  0E7F               	movlw	high STR_8
  1676  0027AC  6FBD               	movwf	(snprintf@fmt+1)& (0+255),b
  1677  0027AE  90D8               	bcf	status,0,c
  1678  0027B0  0101               	movlb	1	; () banked
  1679  0027B2  35AD               	rlcf	_state& (0+255),w,b
  1680  0027B4  6ED9               	movwf	fsr2l,c
  1681  0027B6  35AE               	rlcf	(_state+1)& (0+255),w,b
  1682  0027B8  6EDA               	movwf	fsr2h,c
  1683  0027BA  0EAF               	movlw	low _state_msgs
  1684  0027BC  26D9               	addwf	fsr2l,f,c
  1685  0027BE  0E01               	movlw	high _state_msgs
  1686  0027C0  22DA               	addwfc	fsr2h,f,c
  1687  0027C2  CFDE F0BE          	movff	postinc2,?_snprintf+6
  1688  0027C6  CFDD F0BF          	movff	postdec2,?_snprintf+7
  1689  0027CA  EC84  F037         	call	_snprintf	;wreg free
  1690  0027CE                     
  1691                           ;main.c: 76:             lcd_cmd(0x01);
  1692  0027CE  0E01               	movlw	1
  1693  0027D0  EC2F  F037         	call	_lcd_cmd
  1694  0027D4                     
  1695                           ;main.c: 77:             lcd_cmd(0x80);
  1696  0027D4  0E80               	movlw	128
  1697  0027D6  EC2F  F037         	call	_lcd_cmd
  1698  0027DA                     
  1699                           ;main.c: 78:             lcd_str(greet_str);
  1700  0027DA  0E00               	movlw	low main@greet_str
  1701  0027DC  6E03               	movwf	lcd_str@str^0,c
  1702  0027DE  0E01               	movlw	high main@greet_str
  1703  0027E0  6E04               	movwf	(lcd_str@str+1)^0,c
  1704  0027E2  EC39  F03A         	call	_lcd_str	;wreg free
  1705  0027E6                     
  1706                           ;main.c: 80:             state_changed = 0;
  1707  0027E6  0E00               	movlw	0
  1708  0027E8  0101               	movlb	1	; () banked
  1709  0027EA  6FA4               	movwf	_state_changed& (0+255),b
  1710  0027EC                     l5155:
  1711  0027EC  FFFF               	dw	65535	; assembler added errata NOP
  1712                           
  1713                           ; BSR set to: 1
  1714                           ;main.c: 84:         if (state == 2){
  1715  0027EE  0E02               	movlw	2
  1716  0027F0  19AD               	xorwf	_state& (0+255),w,b
  1717  0027F2  11AE               	iorwf	(_state+1)& (0+255),w,b
  1718  0027F4  A4D8               	btfss	status,2,c
  1719  0027F6  EFFF  F013         	goto	u6161
  1720  0027FA  EF02  F014         	goto	u6160
  1721  0027FE                     u6161:
  1722  0027FE  FFFF               	dw	65535	; assembler added errata NOP
  1723  002800  EF06  F014         	goto	l115
  1724  002804                     u6160:
  1725  002804  FFFF               	dw	65535	; assembler added errata NOP
  1726  002806                     
  1727                           ; BSR set to: 1
  1728                           ;main.c: 85:             LATBbits.LATB1 = 1;
  1729  002806  828A               	bsf	138,1,c	;volatile
  1730                           
  1731                           ;main.c: 86:         } else {
  1732  002808  EF91  F013         	goto	l5131
  1733  00280C                     l115:
  1734  00280C  FFFF               	dw	65535	; assembler added errata NOP
  1735                           
  1736                           ; BSR set to: 1
  1737                           ;main.c: 87:             LATBbits.LATB1 = 0;
  1738  00280E  928A               	bcf	138,1,c	;volatile
  1739  002810                     
  1740                           ; BSR set to: 1
  1741                           ;main.c: 88:             if (state == 0) {
  1742  002810  51AD               	movf	_state& (0+255),w,b
  1743  002812  11AE               	iorwf	(_state+1)& (0+255),w,b
  1744  002814  A4D8               	btfss	status,2,c
  1745  002816  EF0F  F014         	goto	u6171
  1746  00281A  EF12  F014         	goto	u6170
  1747  00281E                     u6171:
  1748  00281E  FFFF               	dw	65535	; assembler added errata NOP
  1749  002820  EF2D  F014         	goto	l5167
  1750  002824                     u6170:
  1751  002824  FFFF               	dw	65535	; assembler added errata NOP
  1752  002826                     
  1753                           ; BSR set to: 1
  1754                           ;main.c: 89:                 if (!msg_sent){
  1755  002826  51A3               	movf	_msg_sent& (0+255),w,b
  1756  002828  A4D8               	btfss	status,2,c
  1757  00282A  EF19  F014         	goto	u6181
  1758  00282E  EF1C  F014         	goto	u6180
  1759  002832                     u6181:
  1760  002832  FFFF               	dw	65535	; assembler added errata NOP
  1761  002834  EF91  F013         	goto	l5131
  1762  002838                     u6180:
  1763  002838  FFFF               	dw	65535	; assembler added errata NOP
  1764  00283A                     
  1765                           ; BSR set to: 1
  1766                           ;main.c: 90:                     serial_tx_char(state_translator_micro_to_fpga(&state));
  1767  00283A  0EAD               	movlw	low _state
  1768  00283C  6E01               	movwf	state_translator_micro_to_fpga@state^0,c
  1769  00283E  0E01               	movlw	high _state
  1770  002840  6E02               	movwf	(state_translator_micro_to_fpga@state+1)^0,c
  1771  002842  ECC4  F03D         	call	_state_translator_micro_to_fpga	;wreg free
  1772  002846  ECFD  F036         	call	_serial_tx_char
  1773  00284A                     
  1774                           ;main.c: 91:                     msg_sent = 1;
  1775  00284A  0E01               	movlw	1
  1776  00284C  0101               	movlb	1	; () banked
  1777  00284E  6FA3               	movwf	_msg_sent& (0+255),b
  1778  002850  EF91  F013         	goto	l5131
  1779  002854                     l118:
  1780  002854  FFFF               	dw	65535	; assembler added errata NOP
  1781                           
  1782                           ; BSR set to: 1
  1783                           ;main.c: 93:             } else if (state == 1){
  1784  002856  EF91  F013         	goto	l5131
  1785  00285A                     l5167:
  1786  00285A  FFFF               	dw	65535	; assembler added errata NOP
  1787                           
  1788                           ; BSR set to: 1
  1789  00285C  05AD               	decf	_state& (0+255),w,b
  1790  00285E  11AE               	iorwf	(_state+1)& (0+255),w,b
  1791  002860  A4D8               	btfss	status,2,c
  1792  002862  EF35  F014         	goto	u6191
  1793  002866  EF38  F014         	goto	u6190
  1794  00286A                     u6191:
  1795  00286A  FFFF               	dw	65535	; assembler added errata NOP
  1796  00286C  EF49  F014         	goto	l5173
  1797  002870                     u6190:
  1798  002870  FFFF               	dw	65535	; assembler added errata NOP
  1799  002872                     
  1800                           ; BSR set to: 1
  1801                           ;main.c: 94:                 state = 2;
  1802  002872  0E00               	movlw	0
  1803  002874  6FAE               	movwf	(_state+1)& (0+255),b
  1804  002876  0E02               	movlw	2
  1805  002878  6FAD               	movwf	_state& (0+255),b
  1806                           
  1807                           ;main.c: 95:                 state_changed = 1;
  1808  00287A  0E01               	movlw	1
  1809  00287C  6FA4               	movwf	_state_changed& (0+255),b
  1810  00287E                     
  1811                           ; BSR set to: 1
  1812                           ;main.c: 96:                 serial_tx_char(state_translator_micro_to_fpga(&state));
  1813  00287E  0EAD               	movlw	low _state
  1814  002880  6E01               	movwf	state_translator_micro_to_fpga@state^0,c
  1815  002882  0E01               	movlw	high _state
  1816  002884  6E02               	movwf	(state_translator_micro_to_fpga@state+1)^0,c
  1817  002886  ECC4  F03D         	call	_state_translator_micro_to_fpga	;wreg free
  1818  00288A  ECFD  F036         	call	_serial_tx_char
  1819                           
  1820                           ;main.c: 97:             } else if (state == 3){
  1821  00288E  EF91  F013         	goto	l5131
  1822  002892                     l5173:
  1823  002892  FFFF               	dw	65535	; assembler added errata NOP
  1824                           
  1825                           ; BSR set to: 1
  1826  002894  0E03               	movlw	3
  1827  002896  19AD               	xorwf	_state& (0+255),w,b
  1828  002898  11AE               	iorwf	(_state+1)& (0+255),w,b
  1829  00289A  A4D8               	btfss	status,2,c
  1830  00289C  EF52  F014         	goto	u6201
  1831  0028A0  EF55  F014         	goto	u6200
  1832  0028A4                     u6201:
  1833  0028A4  FFFF               	dw	65535	; assembler added errata NOP
  1834  0028A6  EF7F  F014         	goto	l5183
  1835  0028AA                     u6200:
  1836  0028AA  FFFF               	dw	65535	; assembler added errata NOP
  1837  0028AC                     
  1838                           ; BSR set to: 1
  1839                           ;main.c: 98:                 if (timer_done){
  1840  0028AC  51A1               	movf	_timer_done& (0+255),w,b
  1841  0028AE  B4D8               	btfsc	status,2,c
  1842  0028B0  EF5C  F014         	goto	u6211
  1843  0028B4  EF5F  F014         	goto	u6210
  1844  0028B8                     u6211:
  1845  0028B8  FFFF               	dw	65535	; assembler added errata NOP
  1846  0028BA  EF70  F014         	goto	l123
  1847  0028BE                     u6210:
  1848  0028BE  FFFF               	dw	65535	; assembler added errata NOP
  1849  0028C0                     
  1850                           ; BSR set to: 1
  1851                           ;main.c: 99:                     state = 2;
  1852  0028C0  0E00               	movlw	0
  1853  0028C2  6FAE               	movwf	(_state+1)& (0+255),b
  1854  0028C4  0E02               	movlw	2
  1855  0028C6  6FAD               	movwf	_state& (0+255),b
  1856                           
  1857                           ;main.c: 100:                     state_changed = 1;
  1858  0028C8  0E01               	movlw	1
  1859  0028CA  6FA4               	movwf	_state_changed& (0+255),b
  1860  0028CC                     
  1861                           ; BSR set to: 1
  1862                           ;main.c: 101:                     serial_tx_char(state_translator_micro_to_fpga(&state))
      +                          ;
  1863  0028CC  0EAD               	movlw	low _state
  1864  0028CE  6E01               	movwf	state_translator_micro_to_fpga@state^0,c
  1865  0028D0  0E01               	movlw	high _state
  1866  0028D2  6E02               	movwf	(state_translator_micro_to_fpga@state+1)^0,c
  1867  0028D4  ECC4  F03D         	call	_state_translator_micro_to_fpga	;wreg free
  1868  0028D8  ECFD  F036         	call	_serial_tx_char
  1869                           
  1870                           ;main.c: 103:                 } else {
  1871  0028DC  EF91  F013         	goto	l5131
  1872  0028E0                     l123:
  1873  0028E0  FFFF               	dw	65535	; assembler added errata NOP
  1874                           
  1875                           ; BSR set to: 1
  1876                           ;main.c: 104:                     if (T0CONbits.TMR0ON == 0){
  1877  0028E2  BED5               	btfsc	213,7,c	;volatile
  1878  0028E4  EF76  F014         	goto	u6221
  1879  0028E8  EF79  F014         	goto	u6220
  1880  0028EC                     u6221:
  1881  0028EC  FFFF               	dw	65535	; assembler added errata NOP
  1882  0028EE  EF2A  F014         	goto	l118
  1883  0028F2                     u6220:
  1884  0028F2  FFFF               	dw	65535	; assembler added errata NOP
  1885  0028F4                     l5181:
  1886  0028F4  FFFF               	dw	65535	; assembler added errata NOP
  1887                           
  1888                           ; BSR set to: 1
  1889                           ;main.c: 105:                         init_timer_0();
  1890  0028F6  EC1E  F037         	call	_init_timer_0	;wreg free
  1891  0028FA  EF91  F013         	goto	l5131
  1892  0028FE                     l5183:
  1893  0028FE  FFFF               	dw	65535	; assembler added errata NOP
  1894                           
  1895                           ; BSR set to: 1
  1896  002900  0E04               	movlw	4
  1897  002902  19AD               	xorwf	_state& (0+255),w,b
  1898  002904  11AE               	iorwf	(_state+1)& (0+255),w,b
  1899  002906  A4D8               	btfss	status,2,c
  1900  002908  EF88  F014         	goto	u6231
  1901  00290C  EF8B  F014         	goto	u6230
  1902  002910                     u6231:
  1903  002910  FFFF               	dw	65535	; assembler added errata NOP
  1904  002912  EF03  F015         	goto	l5231
  1905  002916                     u6230:
  1906  002916  FFFF               	dw	65535	; assembler added errata NOP
  1907  002918                     
  1908                           ; BSR set to: 1
  1909                           ;main.c: 109:                 mix_direction = 1;
  1910  002918  0E00               	movlw	0
  1911  00291A  6FAA               	movwf	(_mix_direction+1)& (0+255),b
  1912  00291C  0E01               	movlw	1
  1913  00291E  6FA9               	movwf	_mix_direction& (0+255),b
  1914                           
  1915                           ;main.c: 110:                 mix_step_counter = 0;
  1916  002920  0E00               	movlw	0
  1917  002922  6FA8               	movwf	(_mix_step_counter+1)& (0+255),b
  1918  002924  0E00               	movlw	0
  1919  002926  6FA7               	movwf	_mix_step_counter& (0+255),b
  1920                           
  1921                           ;main.c: 111:                 mix_counter = 0;
  1922  002928  0E00               	movlw	0
  1923  00292A  6FA6               	movwf	(_mix_counter+1)& (0+255),b
  1924  00292C  0E00               	movlw	0
  1925  00292E  6FA5               	movwf	_mix_counter& (0+255),b
  1926                           
  1927                           ;main.c: 112:                 switch(mix_current_step){
  1928  002930  EFDF  F014         	goto	l5229
  1929  002934                     l5187:
  1930  002934  FFFF               	dw	65535	; assembler added errata NOP
  1931                           
  1932                           ; BSR set to: 1
  1933                           ;main.c: 115:                         LATA = 0x01;
  1934  002936  0E01               	movlw	1
  1935  002938  6E89               	movwf	137,c	;volatile
  1936  00293A                     l5189:
  1937  00293A  FFFF               	dw	65535	; assembler added errata NOP
  1938                           
  1939                           ; BSR set to: 1
  1940                           ;main.c: 116:                         compute_next_step(&mix_current_step, mix_direction
      +                          );
  1941  00293C  0EAB               	movlw	low _mix_current_step
  1942  00293E  6E01               	movwf	compute_next_step@current_step^0,c
  1943  002940  0E01               	movlw	high _mix_current_step
  1944  002942  6E02               	movwf	(compute_next_step@current_step+1)^0,c
  1945  002944  C1A9  F003         	movff	_mix_direction,compute_next_step@step_direction
  1946  002948  C1AA  F004         	movff	_mix_direction+1,compute_next_step@step_direction+1
  1947  00294C  EC7D  F03A         	call	_compute_next_step	;wreg free
  1948  002950                     
  1949                           ;main.c: 117:                         update_direction_and_counters(&mix_step_counter, &
      +                          mix_direction, &mix_counter);
  1950  002950  0EA7               	movlw	low _mix_step_counter
  1951  002952  6E01               	movwf	update_direction_and_counters@counter_step^0,c
  1952  002954  0E01               	movlw	high _mix_step_counter
  1953  002956  6E02               	movwf	(update_direction_and_counters@counter_step+1)^0,c
  1954  002958  0EA9               	movlw	low _mix_direction
  1955  00295A  6E03               	movwf	update_direction_and_counters@step_direction^0,c
  1956  00295C  0E01               	movlw	high _mix_direction
  1957  00295E  6E04               	movwf	(update_direction_and_counters@step_direction+1)^0,c
  1958  002960  0EA5               	movlw	low _mix_counter
  1959  002962  6E05               	movwf	update_direction_and_counters@counter^0,c
  1960  002964  0E01               	movlw	high _mix_counter
  1961  002966  6E06               	movwf	(update_direction_and_counters@counter+1)^0,c
  1962  002968  ECC8  F03A         	call	_update_direction_and_counters	;wreg free
  1963  00296C                     
  1964                           ;main.c: 118:                         mix_exit_condition(mix_counter, &mix_current_step)
      +                          ;
  1965  00296C  C1A5  F001         	movff	_mix_counter,mix_exit_condition@counter
  1966  002970  C1A6  F002         	movff	_mix_counter+1,mix_exit_condition@counter+1
  1967  002974  0EAB               	movlw	low _mix_current_step
  1968  002976  6E03               	movwf	mix_exit_condition@current_step^0,c
  1969  002978  0E01               	movlw	high _mix_current_step
  1970  00297A  6E04               	movwf	(mix_exit_condition@current_step+1)^0,c
  1971  00297C  EC9E  F037         	call	_mix_exit_condition	;wreg free
  1972  002980                     
  1973                           ;main.c: 119:                         _delay((unsigned long)((1)*(4000000/4000.0)));
  1974  002980  0EC8               	movlw	200
  1975  002982                     u6317:
  1976  002982  FFFF               	dw	65535	; errata NOP
  1977  002984  F000               	nop	
  1978  002986  2EE8               	decfsz	wreg,f,c
  1979  002988  D7FC               	bra	u6317
  1980                           
  1981                           ;main.c: 120:                         break;
  1982  00298A  EF91  F013         	goto	l5131
  1983  00298E                     l5197:
  1984  00298E  FFFF               	dw	65535	; assembler added errata NOP
  1985                           
  1986                           ; BSR set to: 1
  1987                           ;main.c: 122:                         LATA = 0x02;
  1988  002990  0E02               	movlw	2
  1989  002992  6E89               	movwf	137,c	;volatile
  1990  002994  EF9D  F014         	goto	l5189
  1991  002998                     l5207:
  1992  002998  FFFF               	dw	65535	; assembler added errata NOP
  1993                           
  1994                           ; BSR set to: 1
  1995                           ;main.c: 129:                         LATA = 0x04;
  1996  00299A  0E04               	movlw	4
  1997  00299C  6E89               	movwf	137,c	;volatile
  1998  00299E  EF9D  F014         	goto	l5189
  1999  0029A2                     l5217:
  2000  0029A2  FFFF               	dw	65535	; assembler added errata NOP
  2001                           
  2002                           ; BSR set to: 1
  2003                           ;main.c: 136:                         LATA = 0x08;
  2004  0029A4  0E08               	movlw	8
  2005  0029A6  6E89               	movwf	137,c	;volatile
  2006  0029A8  EF9D  F014         	goto	l5189
  2007  0029AC                     l5227:
  2008  0029AC  FFFF               	dw	65535	; assembler added errata NOP
  2009                           
  2010                           ; BSR set to: 1
  2011                           ;main.c: 143:                         state = 2;
  2012  0029AE  0E00               	movlw	0
  2013  0029B0  6FAE               	movwf	(_state+1)& (0+255),b
  2014  0029B2  0E02               	movlw	2
  2015  0029B4  6FAD               	movwf	_state& (0+255),b
  2016                           
  2017                           ;main.c: 144:                         state_changed = 1;
  2018  0029B6  0E01               	movlw	1
  2019  0029B8  6FA4               	movwf	_state_changed& (0+255),b
  2020                           
  2021                           ;main.c: 146:                 }
  2022  0029BA  EF91  F013         	goto	l5131
  2023  0029BE                     l5229:
  2024  0029BE  FFFF               	dw	65535	; assembler added errata NOP
  2025                           
  2026                           ; BSR set to: 1
  2027  0029C0  C1AB  F07C         	movff	_mix_current_step,??_main
  2028  0029C4  C1AC  F07D         	movff	_mix_current_step+1,??_main+1
  2029                           
  2030                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2031                           ; Switch size 1, requested type "simple"
  2032                           ; Number of cases is 1, Range of values is 0 to 0
  2033                           ; switch strategies available:
  2034                           ; Name         Instructions Cycles
  2035                           ; simple_byte            4     3 (average)
  2036                           ;	Chosen strategy is simple_byte
  2037  0029C8  507D               	movf	(??_main+1)^0,w,c
  2038  0029CA  0A00               	xorlw	0	; case 0
  2039  0029CC  B4D8               	btfsc	status,2,c
  2040  0029CE  EFEB  F014         	goto	l5343
  2041  0029D2  EF91  F013         	goto	l5131
  2042  0029D6                     l5343:
  2043  0029D6  FFFF               	dw	65535	; assembler added errata NOP
  2044                           
  2045                           ; BSR set to: 1
  2046                           ; Switch size 1, requested type "simple"
  2047                           ; Number of cases is 5, Range of values is 0 to 10
  2048                           ; switch strategies available:
  2049                           ; Name         Instructions Cycles
  2050                           ; simple_byte           16     9 (average)
  2051                           ;	Chosen strategy is simple_byte
  2052  0029D8  507C               	movf	??_main^0,w,c
  2053  0029DA  0A00               	xorlw	0	; case 0
  2054  0029DC  B4D8               	btfsc	status,2,c
  2055  0029DE  EF9A  F014         	goto	l5187
  2056  0029E2  0A01               	xorlw	1	; case 1
  2057  0029E4  B4D8               	btfsc	status,2,c
  2058  0029E6  EFC7  F014         	goto	l5197
  2059  0029EA  0A03               	xorlw	3	; case 2
  2060  0029EC  B4D8               	btfsc	status,2,c
  2061  0029EE  EFCC  F014         	goto	l5207
  2062  0029F2  0A01               	xorlw	1	; case 3
  2063  0029F4  B4D8               	btfsc	status,2,c
  2064  0029F6  EFD1  F014         	goto	l5217
  2065  0029FA  0A09               	xorlw	9	; case 10
  2066  0029FC  B4D8               	btfsc	status,2,c
  2067  0029FE  EFD6  F014         	goto	l5227
  2068  002A02  EF91  F013         	goto	l5131
  2069  002A06                     l5231:
  2070  002A06  FFFF               	dw	65535	; assembler added errata NOP
  2071                           
  2072                           ; BSR set to: 1
  2073  002A08  0E05               	movlw	5
  2074  002A0A  19AD               	xorwf	_state& (0+255),w,b
  2075  002A0C  11AE               	iorwf	(_state+1)& (0+255),w,b
  2076  002A0E  A4D8               	btfss	status,2,c
  2077  002A10  EF0C  F015         	goto	u6241
  2078  002A14  EF0F  F015         	goto	u6240
  2079  002A18                     u6241:
  2080  002A18  FFFF               	dw	65535	; assembler added errata NOP
  2081  002A1A  EF2A  F014         	goto	l118
  2082  002A1E                     u6240:
  2083  002A1E  FFFF               	dw	65535	; assembler added errata NOP
  2084  002A20                     
  2085                           ; BSR set to: 1
  2086                           ;main.c: 148:                 if (timer_done){
  2087  002A20  51A1               	movf	_timer_done& (0+255),w,b
  2088  002A22  B4D8               	btfsc	status,2,c
  2089  002A24  EF16  F015         	goto	u6251
  2090  002A28  EF19  F015         	goto	u6250
  2091  002A2C                     u6251:
  2092  002A2C  FFFF               	dw	65535	; assembler added errata NOP
  2093  002A2E  EF2A  F015         	goto	l137
  2094  002A32                     u6250:
  2095  002A32  FFFF               	dw	65535	; assembler added errata NOP
  2096  002A34                     
  2097                           ; BSR set to: 1
  2098                           ;main.c: 149:                     state = 2;
  2099  002A34  0E00               	movlw	0
  2100  002A36  6FAE               	movwf	(_state+1)& (0+255),b
  2101  002A38  0E02               	movlw	2
  2102  002A3A  6FAD               	movwf	_state& (0+255),b
  2103                           
  2104                           ;main.c: 150:                     state_changed = 1;
  2105  002A3C  0E01               	movlw	1
  2106  002A3E  6FA4               	movwf	_state_changed& (0+255),b
  2107  002A40                     
  2108                           ; BSR set to: 1
  2109                           ;main.c: 151:                     serial_tx_char(state_translator_micro_to_fpga(&state))
      +                          ;
  2110  002A40  0EAD               	movlw	low _state
  2111  002A42  6E01               	movwf	state_translator_micro_to_fpga@state^0,c
  2112  002A44  0E01               	movlw	high _state
  2113  002A46  6E02               	movwf	(state_translator_micro_to_fpga@state+1)^0,c
  2114  002A48  ECC4  F03D         	call	_state_translator_micro_to_fpga	;wreg free
  2115  002A4C  ECFD  F036         	call	_serial_tx_char
  2116                           
  2117                           ;main.c: 152:                 } else {
  2118  002A50  EF91  F013         	goto	l5131
  2119  002A54                     l137:
  2120  002A54  FFFF               	dw	65535	; assembler added errata NOP
  2121                           
  2122                           ; BSR set to: 1
  2123                           ;main.c: 153:                     if (T0CONbits.TMR0ON == 0){
  2124  002A56  BED5               	btfsc	213,7,c	;volatile
  2125  002A58  EF30  F015         	goto	u6261
  2126  002A5C  EF33  F015         	goto	u6260
  2127  002A60                     u6261:
  2128  002A60  FFFF               	dw	65535	; assembler added errata NOP
  2129  002A62  EF2A  F014         	goto	l118
  2130  002A66                     u6260:
  2131  002A66  FFFF               	dw	65535	; assembler added errata NOP
  2132  002A68  EF7A  F014         	goto	l5181
  2133  002A6C  EF3B  F000         	goto	start
  2134  002A70                     __end_of_main:
  2135                           	callstack 0
  2136                           
  2137 ;; *************** function _update_direction_and_counters *****************
  2138 ;; Defined at:
  2139 ;;		line 172 in file "main.c"
  2140 ;; Parameters:    Size  Location     Type
  2141 ;;  counter_step    2    0[COMRAM] PTR int 
  2142 ;;		 -> mix_step_counter(2), 
  2143 ;;  step_directi    2    2[COMRAM] PTR int 
  2144 ;;		 -> mix_direction(2), 
  2145 ;;  counter         2    4[COMRAM] PTR int 
  2146 ;;		 -> mix_counter(2), 
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;		None
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  1    wreg      void 
  2151 ;; Registers used:
  2152 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2158 ;;      Params:         6       0       0       0       0       0       0
  2159 ;;      Locals:         0       0       0       0       0       0       0
  2160 ;;      Temps:          2       0       0       0       0       0       0
  2161 ;;      Totals:         8       0       0       0       0       0       0
  2162 ;;Total ram usage:        8 bytes
  2163 ;; Hardware stack levels used:    1
  2164 ;; Hardware stack levels required when called:    1
  2165 ;; This function calls:
  2166 ;;		Nothing
  2167 ;; This function is called by:
  2168 ;;		_main
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172                           	psect	text1
  2173  007590                     __ptext1:
  2174                           	callstack 0
  2175  007590                     _update_direction_and_counters:
  2176                           	callstack 0
  2177  007590  FFFF               	dw	65535	; assembler added errata NOP
  2178  007592                     
  2179                           ;main.c: 173:     *counter_step = *counter_step + 1;
  2180  007592  C001  FFD9         	movff	update_direction_and_counters@counter_step,fsr2l
  2181  007596  C002  FFDA         	movff	update_direction_and_counters@counter_step+1,fsr2h
  2182  00759A  CFDE F007          	movff	postinc2,??_update_direction_and_counters
  2183  00759E  CFDD F008          	movff	postdec2,??_update_direction_and_counters+1
  2184  0075A2  0E01               	movlw	1
  2185  0075A4  2607               	addwf	??_update_direction_and_counters^0,f,c
  2186  0075A6  0E00               	movlw	0
  2187  0075A8  2208               	addwfc	(??_update_direction_and_counters+1)^0,f,c
  2188  0075AA  C001  FFD9         	movff	update_direction_and_counters@counter_step,fsr2l
  2189  0075AE  C002  FFDA         	movff	update_direction_and_counters@counter_step+1,fsr2h
  2190  0075B2  C007  FFDE         	movff	??_update_direction_and_counters,postinc2
  2191  0075B6  C008  FFDD         	movff	??_update_direction_and_counters+1,postdec2
  2192                           
  2193                           ;main.c: 174:     if (*counter_step >= 100){
  2194  0075BA  C001  FFD9         	movff	update_direction_and_counters@counter_step,fsr2l
  2195  0075BE  C002  FFDA         	movff	update_direction_and_counters@counter_step+1,fsr2h
  2196  0075C2  0E01               	movlw	1
  2197  0075C4  BEDB               	btfsc	plusw2,7,c
  2198  0075C6  EFEF  F03A         	goto	u6101
  2199  0075CA  0E01               	movlw	1
  2200  0075CC  50DB               	movf	plusw2,w,c
  2201  0075CE  E10A               	bnz	u6100
  2202  0075D0  0E64               	movlw	100
  2203  0075D2  5CDE               	subwf	postinc2,w,c
  2204  0075D4  A0D8               	btfss	status,0,c
  2205  0075D6  EFEF  F03A         	goto	u6101
  2206  0075DA  EFF2  F03A         	goto	u6100
  2207  0075DE                     u6101:
  2208  0075DE  FFFF               	dw	65535	; assembler added errata NOP
  2209  0075E0  EF23  F03B         	goto	l152
  2210  0075E4                     u6100:
  2211  0075E4  FFFF               	dw	65535	; assembler added errata NOP
  2212  0075E6                     
  2213                           ;main.c: 175:         *counter_step = 0;
  2214  0075E6  C001  FFD9         	movff	update_direction_and_counters@counter_step,fsr2l
  2215  0075EA  C002  FFDA         	movff	update_direction_and_counters@counter_step+1,fsr2h
  2216  0075EE  0E00               	movlw	0
  2217  0075F0  6EDE               	movwf	postinc2,c
  2218  0075F2  0E00               	movlw	0
  2219  0075F4  6EDD               	movwf	postdec2,c
  2220  0075F6                     
  2221                           ;main.c: 176:         *counter = *counter + 1;
  2222  0075F6  C005  FFD9         	movff	update_direction_and_counters@counter,fsr2l
  2223  0075FA  C006  FFDA         	movff	update_direction_and_counters@counter+1,fsr2h
  2224  0075FE  CFDE F007          	movff	postinc2,??_update_direction_and_counters
  2225  007602  CFDD F008          	movff	postdec2,??_update_direction_and_counters+1
  2226  007606  0E01               	movlw	1
  2227  007608  2607               	addwf	??_update_direction_and_counters^0,f,c
  2228  00760A  0E00               	movlw	0
  2229  00760C  2208               	addwfc	(??_update_direction_and_counters+1)^0,f,c
  2230  00760E  C005  FFD9         	movff	update_direction_and_counters@counter,fsr2l
  2231  007612  C006  FFDA         	movff	update_direction_and_counters@counter+1,fsr2h
  2232  007616  C007  FFDE         	movff	??_update_direction_and_counters,postinc2
  2233  00761A  C008  FFDD         	movff	??_update_direction_and_counters+1,postdec2
  2234  00761E                     
  2235                           ;main.c: 177:         *step_direction = *step_direction *(-1);
  2236  00761E  C003  FFD9         	movff	update_direction_and_counters@step_direction,fsr2l
  2237  007622  C004  FFDA         	movff	update_direction_and_counters@step_direction+1,fsr2h
  2238  007626  CFDE F007          	movff	postinc2,??_update_direction_and_counters
  2239  00762A  CFDD F008          	movff	postdec2,??_update_direction_and_counters+1
  2240  00762E  1E07               	comf	??_update_direction_and_counters^0,f,c
  2241  007630  1E08               	comf	(??_update_direction_and_counters+1)^0,f,c
  2242  007632  4A07               	infsnz	??_update_direction_and_counters^0,f,c
  2243  007634  2A08               	incf	(??_update_direction_and_counters+1)^0,f,c
  2244  007636  C003  FFD9         	movff	update_direction_and_counters@step_direction,fsr2l
  2245  00763A  C004  FFDA         	movff	update_direction_and_counters@step_direction+1,fsr2h
  2246  00763E  C007  FFDE         	movff	??_update_direction_and_counters,postinc2
  2247  007642  C008  FFDD         	movff	??_update_direction_and_counters+1,postdec2
  2248  007646                     l152:
  2249  007646  FFFF               	dw	65535	; assembler added errata NOP
  2250  007648  0012               	return		;funcret
  2251  00764A  FFFF               	dw	65535	; errata NOP
  2252  00764C                     __end_of_update_direction_and_counters:
  2253                           	callstack 0
  2254                           
  2255 ;; *************** function _state_translator_micro_to_fpga *****************
  2256 ;; Defined at:
  2257 ;;		line 19 in file "utils.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;  state           2    0[COMRAM] PTR int 
  2260 ;;		 -> state(2), 
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;  state_machin    1    4[COMRAM] unsigned char 
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1    wreg      unsigned char 
  2265 ;; Registers used:
  2266 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2272 ;;      Params:         2       0       0       0       0       0       0
  2273 ;;      Locals:         1       0       0       0       0       0       0
  2274 ;;      Temps:          2       0       0       0       0       0       0
  2275 ;;      Totals:         5       0       0       0       0       0       0
  2276 ;;Total ram usage:        5 bytes
  2277 ;; Hardware stack levels used:    1
  2278 ;; Hardware stack levels required when called:    1
  2279 ;; This function calls:
  2280 ;;		Nothing
  2281 ;; This function is called by:
  2282 ;;		_main
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           	psect	text2
  2287  007B88                     __ptext2:
  2288                           	callstack 0
  2289  007B88                     _state_translator_micro_to_fpga:
  2290                           	callstack 0
  2291  007B88  FFFF               	dw	65535	; assembler added errata NOP
  2292  007B8A                     
  2293                           ;utils.c: 20:     unsigned char state_machine_code;;utils.c: 21:     if (*state == 0){
  2294  007B8A  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  2295  007B8E  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  2296  007B92  50DE               	movf	postinc2,w,c
  2297  007B94  10DE               	iorwf	postinc2,w,c
  2298  007B96  A4D8               	btfss	status,2,c
  2299  007B98  EFD0  F03D         	goto	u6021
  2300  007B9C  EFD3  F03D         	goto	u6020
  2301  007BA0                     u6021:
  2302  007BA0  FFFF               	dw	65535	; assembler added errata NOP
  2303  007BA2  EFD8  F03D         	goto	l5027
  2304  007BA6                     u6020:
  2305  007BA6  FFFF               	dw	65535	; assembler added errata NOP
  2306  007BA8                     
  2307                           ;utils.c: 22:         state_machine_code = 0;
  2308  007BA8  0E00               	movlw	0
  2309  007BAA  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  2310                           
  2311                           ;utils.c: 23:     } else if (*state == 1){
  2312  007BAC  EF40  F03E         	goto	l236
  2313  007BB0                     l5027:
  2314  007BB0  FFFF               	dw	65535	; assembler added errata NOP
  2315  007BB2  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  2316  007BB6  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  2317  007BBA  04DE               	decf	postinc2,w,c
  2318  007BBC  10DE               	iorwf	postinc2,w,c
  2319  007BBE  A4D8               	btfss	status,2,c
  2320  007BC0  EFE4  F03D         	goto	u6031
  2321  007BC4  EFE7  F03D         	goto	u6030
  2322  007BC8                     u6031:
  2323  007BC8  FFFF               	dw	65535	; assembler added errata NOP
  2324  007BCA  EFEC  F03D         	goto	l5031
  2325  007BCE                     u6030:
  2326  007BCE  FFFF               	dw	65535	; assembler added errata NOP
  2327  007BD0                     
  2328                           ;utils.c: 24:         state_machine_code = 'A';
  2329  007BD0  0E41               	movlw	65
  2330  007BD2  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  2331                           
  2332                           ;utils.c: 25:     } else if (*state == 3){
  2333  007BD4  EF40  F03E         	goto	l236
  2334  007BD8                     l5031:
  2335  007BD8  FFFF               	dw	65535	; assembler added errata NOP
  2336  007BDA  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  2337  007BDE  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  2338  007BE2  0E03               	movlw	3
  2339  007BE4  18DE               	xorwf	postinc2,w,c
  2340  007BE6  10DE               	iorwf	postinc2,w,c
  2341  007BE8  A4D8               	btfss	status,2,c
  2342  007BEA  EFF9  F03D         	goto	u6041
  2343  007BEE  EFFC  F03D         	goto	u6040
  2344  007BF2                     u6041:
  2345  007BF2  FFFF               	dw	65535	; assembler added errata NOP
  2346  007BF4  EF01  F03E         	goto	l5035
  2347  007BF8                     u6040:
  2348  007BF8  FFFF               	dw	65535	; assembler added errata NOP
  2349  007BFA                     
  2350                           ;utils.c: 26:         state_machine_code = 'B';
  2351  007BFA  0E42               	movlw	66
  2352  007BFC  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  2353                           
  2354                           ;utils.c: 27:     } else if (*state == 4){
  2355  007BFE  EF40  F03E         	goto	l236
  2356  007C02                     l5035:
  2357  007C02  FFFF               	dw	65535	; assembler added errata NOP
  2358  007C04  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  2359  007C08  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  2360  007C0C  0E04               	movlw	4
  2361  007C0E  18DE               	xorwf	postinc2,w,c
  2362  007C10  10DE               	iorwf	postinc2,w,c
  2363  007C12  A4D8               	btfss	status,2,c
  2364  007C14  EF0E  F03E         	goto	u6051
  2365  007C18  EF11  F03E         	goto	u6050
  2366  007C1C                     u6051:
  2367  007C1C  FFFF               	dw	65535	; assembler added errata NOP
  2368  007C1E  EF16  F03E         	goto	l5039
  2369  007C22                     u6050:
  2370  007C22  FFFF               	dw	65535	; assembler added errata NOP
  2371  007C24                     
  2372                           ;utils.c: 28:         state_machine_code = 'D';
  2373  007C24  0E44               	movlw	68
  2374  007C26  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  2375                           
  2376                           ;utils.c: 29:     } else if (*state == 5){
  2377  007C28  EF40  F03E         	goto	l236
  2378  007C2C                     l5039:
  2379  007C2C  FFFF               	dw	65535	; assembler added errata NOP
  2380  007C2E  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  2381  007C32  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  2382  007C36  0E05               	movlw	5
  2383  007C38  18DE               	xorwf	postinc2,w,c
  2384  007C3A  10DE               	iorwf	postinc2,w,c
  2385  007C3C  A4D8               	btfss	status,2,c
  2386  007C3E  EF23  F03E         	goto	u6061
  2387  007C42  EF26  F03E         	goto	u6060
  2388  007C46                     u6061:
  2389  007C46  FFFF               	dw	65535	; assembler added errata NOP
  2390  007C48  EF2B  F03E         	goto	l5043
  2391  007C4C                     u6060:
  2392  007C4C  FFFF               	dw	65535	; assembler added errata NOP
  2393  007C4E                     
  2394                           ;utils.c: 30:         state_machine_code = '@';
  2395  007C4E  0E40               	movlw	64
  2396  007C50  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  2397                           
  2398                           ;utils.c: 31:     } else if (*state == 2){
  2399  007C52  EF40  F03E         	goto	l236
  2400  007C56                     l5043:
  2401  007C56  FFFF               	dw	65535	; assembler added errata NOP
  2402  007C58  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  2403  007C5C  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  2404  007C60  0E02               	movlw	2
  2405  007C62  18DE               	xorwf	postinc2,w,c
  2406  007C64  10DE               	iorwf	postinc2,w,c
  2407  007C66  A4D8               	btfss	status,2,c
  2408  007C68  EF38  F03E         	goto	u6071
  2409  007C6C  EF3B  F03E         	goto	u6070
  2410  007C70                     u6071:
  2411  007C70  FFFF               	dw	65535	; assembler added errata NOP
  2412  007C72  EF40  F03E         	goto	l240
  2413  007C76                     u6070:
  2414  007C76  FFFF               	dw	65535	; assembler added errata NOP
  2415  007C78                     
  2416                           ;utils.c: 32:         state_machine_code = 'H';
  2417  007C78  0E48               	movlw	72
  2418  007C7A  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  2419  007C7C  EF40  F03E         	goto	l236
  2420  007C80                     l240:
  2421  007C80                     l236:
  2422  007C80  FFFF               	dw	65535	; assembler added errata NOP
  2423                           
  2424                           ;utils.c: 34:     return state_machine_code;
  2425  007C82  5005               	movf	state_translator_micro_to_fpga@state_machine_code^0,w,c
  2426  007C84  0012               	return		;funcret
  2427  007C86  FFFF               	dw	65535	; errata NOP
  2428  007C88                     __end_of_state_translator_micro_to_fpga:
  2429                           	callstack 0
  2430                           
  2431 ;; *************** function _state_translator_fpga_to_micro *****************
  2432 ;; Defined at:
  2433 ;;		line 2 in file "utils.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;  state_machin    1    wreg     unsigned char 
  2436 ;;  state           2    2[COMRAM] PTR int 
  2437 ;;		 -> state(2), 
  2438 ;; Auto vars:     Size  Location     Type
  2439 ;;  state_machin    1    4[COMRAM] unsigned char 
  2440 ;; Return value:  Size  Location     Type
  2441 ;;                  1    wreg      void 
  2442 ;; Registers used:
  2443 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2444 ;; Tracked objects:
  2445 ;;		On entry : 0/0
  2446 ;;		On exit  : 0/0
  2447 ;;		Unchanged: 0/0
  2448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2449 ;;      Params:         2       0       0       0       0       0       0
  2450 ;;      Locals:         1       0       0       0       0       0       0
  2451 ;;      Temps:          0       0       0       0       0       0       0
  2452 ;;      Totals:         3       0       0       0       0       0       0
  2453 ;;Total ram usage:        3 bytes
  2454 ;; Hardware stack levels used:    1
  2455 ;; Hardware stack levels required when called:    3
  2456 ;; This function calls:
  2457 ;;		_lcd_dat
  2458 ;; This function is called by:
  2459 ;;		_main
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           	psect	text3
  2464  007A8C                     __ptext3:
  2465                           	callstack 0
  2466  007A8C                     _state_translator_fpga_to_micro:
  2467                           	callstack 0
  2468  007A8C  FFFF               	dw	65535	; assembler added errata NOP
  2469                           
  2470                           ;incstack = 0
  2471                           ;state_translator_fpga_to_micro@state_machine_code stored from wreg
  2472  007A8E  6E05               	movwf	state_translator_fpga_to_micro@state_machine_code^0,c
  2473  007A90                     
  2474                           ;utils.c: 3:     lcd_dat(state_machine_code);
  2475  007A90  5005               	movf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  2476  007A92  EC44  F037         	call	_lcd_dat
  2477  007A96                     
  2478                           ;utils.c: 4:     if (state_machine_code == 'A'){
  2479  007A96  0E41               	movlw	65
  2480  007A98  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  2481  007A9A  A4D8               	btfss	status,2,c
  2482  007A9C  EF52  F03D         	goto	u5971
  2483  007AA0  EF55  F03D         	goto	u5970
  2484  007AA4                     u5971:
  2485  007AA4  FFFF               	dw	65535	; assembler added errata NOP
  2486  007AA6  EF60  F03D         	goto	l4999
  2487  007AAA                     u5970:
  2488  007AAA  FFFF               	dw	65535	; assembler added errata NOP
  2489  007AAC                     
  2490                           ;utils.c: 5:         *state = 1;
  2491  007AAC  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  2492  007AB0  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  2493  007AB4  0E01               	movlw	1
  2494  007AB6  6EDE               	movwf	postinc2,c
  2495  007AB8  0E00               	movlw	0
  2496  007ABA  6EDD               	movwf	postdec2,c
  2497                           
  2498                           ;utils.c: 6:     } else if (state_machine_code == 'B'){
  2499  007ABC  EFC1  F03D         	goto	l232
  2500  007AC0                     l4999:
  2501  007AC0  FFFF               	dw	65535	; assembler added errata NOP
  2502  007AC2  0E42               	movlw	66
  2503  007AC4  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  2504  007AC6  A4D8               	btfss	status,2,c
  2505  007AC8  EF68  F03D         	goto	u5981
  2506  007ACC  EF6B  F03D         	goto	u5980
  2507  007AD0                     u5981:
  2508  007AD0  FFFF               	dw	65535	; assembler added errata NOP
  2509  007AD2  EF76  F03D         	goto	l5003
  2510  007AD6                     u5980:
  2511  007AD6  FFFF               	dw	65535	; assembler added errata NOP
  2512  007AD8                     
  2513                           ;utils.c: 7:         *state = 3;
  2514  007AD8  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  2515  007ADC  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  2516  007AE0  0E03               	movlw	3
  2517  007AE2  6EDE               	movwf	postinc2,c
  2518  007AE4  0E00               	movlw	0
  2519  007AE6  6EDD               	movwf	postdec2,c
  2520                           
  2521                           ;utils.c: 8:     } else if (state_machine_code == 'D'){
  2522  007AE8  EFC1  F03D         	goto	l232
  2523  007AEC                     l5003:
  2524  007AEC  FFFF               	dw	65535	; assembler added errata NOP
  2525  007AEE  0E44               	movlw	68
  2526  007AF0  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  2527  007AF2  A4D8               	btfss	status,2,c
  2528  007AF4  EF7E  F03D         	goto	u5991
  2529  007AF8  EF81  F03D         	goto	u5990
  2530  007AFC                     u5991:
  2531  007AFC  FFFF               	dw	65535	; assembler added errata NOP
  2532  007AFE  EF8C  F03D         	goto	l5007
  2533  007B02                     u5990:
  2534  007B02  FFFF               	dw	65535	; assembler added errata NOP
  2535  007B04                     
  2536                           ;utils.c: 9:         *state = 4;
  2537  007B04  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  2538  007B08  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  2539  007B0C  0E04               	movlw	4
  2540  007B0E  6EDE               	movwf	postinc2,c
  2541  007B10  0E00               	movlw	0
  2542  007B12  6EDD               	movwf	postdec2,c
  2543                           
  2544                           ;utils.c: 10:     } else if (state_machine_code == '@'){
  2545  007B14  EFC1  F03D         	goto	l232
  2546  007B18                     l5007:
  2547  007B18  FFFF               	dw	65535	; assembler added errata NOP
  2548  007B1A  0E40               	movlw	64
  2549  007B1C  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  2550  007B1E  A4D8               	btfss	status,2,c
  2551  007B20  EF94  F03D         	goto	u6001
  2552  007B24  EF97  F03D         	goto	u6000
  2553  007B28                     u6001:
  2554  007B28  FFFF               	dw	65535	; assembler added errata NOP
  2555  007B2A  EFA2  F03D         	goto	l5011
  2556  007B2E                     u6000:
  2557  007B2E  FFFF               	dw	65535	; assembler added errata NOP
  2558  007B30                     
  2559                           ;utils.c: 11:         *state = 5;
  2560  007B30  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  2561  007B34  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  2562  007B38  0E05               	movlw	5
  2563  007B3A  6EDE               	movwf	postinc2,c
  2564  007B3C  0E00               	movlw	0
  2565  007B3E  6EDD               	movwf	postdec2,c
  2566                           
  2567                           ;utils.c: 12:     } else if (state_machine_code == 'H'){
  2568  007B40  EFC1  F03D         	goto	l232
  2569  007B44                     l5011:
  2570  007B44  FFFF               	dw	65535	; assembler added errata NOP
  2571  007B46  0E48               	movlw	72
  2572  007B48  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  2573  007B4A  A4D8               	btfss	status,2,c
  2574  007B4C  EFAA  F03D         	goto	u6011
  2575  007B50  EFAD  F03D         	goto	u6010
  2576  007B54                     u6011:
  2577  007B54  FFFF               	dw	65535	; assembler added errata NOP
  2578  007B56  EFB8  F03D         	goto	l5015
  2579  007B5A                     u6010:
  2580  007B5A  FFFF               	dw	65535	; assembler added errata NOP
  2581  007B5C                     
  2582                           ;utils.c: 13:         *state = 2;
  2583  007B5C  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  2584  007B60  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  2585  007B64  0E02               	movlw	2
  2586  007B66  6EDE               	movwf	postinc2,c
  2587  007B68  0E00               	movlw	0
  2588  007B6A  6EDD               	movwf	postdec2,c
  2589                           
  2590                           ;utils.c: 14:     } else {
  2591  007B6C  EFC1  F03D         	goto	l232
  2592  007B70                     l5015:
  2593  007B70  FFFF               	dw	65535	; assembler added errata NOP
  2594                           
  2595                           ;utils.c: 15:         *state = 0;
  2596  007B72  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  2597  007B76  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  2598  007B7A  0E00               	movlw	0
  2599  007B7C  6EDE               	movwf	postinc2,c
  2600  007B7E  0E00               	movlw	0
  2601  007B80  6EDD               	movwf	postdec2,c
  2602  007B82                     l232:
  2603  007B82  FFFF               	dw	65535	; assembler added errata NOP
  2604  007B84  0012               	return		;funcret
  2605  007B86  FFFF               	dw	65535	; errata NOP
  2606  007B88                     __end_of_state_translator_fpga_to_micro:
  2607                           	callstack 0
  2608                           
  2609 ;; *************** function _snprintf *****************
  2610 ;; Defined at:
  2611 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\snprintf.c"
  2612 ;; Parameters:    Size  Location     Type
  2613 ;;  s               2   10[BANK0 ] PTR unsigned char 
  2614 ;;		 -> main@greet_str(160), 
  2615 ;;  n               2   12[BANK0 ] unsigned int 
  2616 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  2617 ;;		 -> STR_8(3), 
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;  ap              2   20[BANK0 ] PTR void [1]
  2620 ;;		 -> ?_snprintf(2), 
  2621 ;;  ret             2    0        int 
  2622 ;; Return value:  Size  Location     Type
  2623 ;;                  2   10[BANK0 ] int 
  2624 ;; Registers used:
  2625 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2631 ;;      Params:         0       8       0       0       0       0       0
  2632 ;;      Locals:         0       4       0       0       0       0       0
  2633 ;;      Temps:          0       0       0       0       0       0       0
  2634 ;;      Totals:         0      12       0       0       0       0       0
  2635 ;;Total ram usage:       12 bytes
  2636 ;; Hardware stack levels used:    1
  2637 ;; Hardware stack levels required when called:    9
  2638 ;; This function calls:
  2639 ;;		_vsnprintf
  2640 ;; This function is called by:
  2641 ;;		_main
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           	psect	text4
  2646  006F08                     __ptext4:
  2647                           	callstack 0
  2648  006F08                     _snprintf:
  2649                           	callstack 0
  2650  006F08  FFFF               	dw	65535	; assembler added errata NOP
  2651  006F0A  0EBE               	movlw	low (?_snprintf+6)
  2652  006F0C  0100               	movlb	0	; () banked
  2653  006F0E  6FC2               	movwf	snprintf@ap& (0+255),b
  2654  006F10  0E00               	movlw	high (?_snprintf+6)
  2655  006F12  6FC3               	movwf	(snprintf@ap+1)& (0+255),b
  2656  006F14                     
  2657                           ; BSR set to: 0
  2658  006F14  C0B8  F070         	movff	snprintf@s,vsnprintf@s
  2659  006F18  C0B9  F071         	movff	snprintf@s+1,vsnprintf@s+1
  2660  006F1C  C0BA  F072         	movff	snprintf@n,vsnprintf@n
  2661  006F20  C0BB  F073         	movff	snprintf@n+1,vsnprintf@n+1
  2662  006F24  C0BC  F074         	movff	snprintf@fmt,vsnprintf@fmt
  2663  006F28  C0BD  F075         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  2664  006F2C  0EC2               	movlw	low snprintf@ap
  2665  006F2E  6E76               	movwf	vsnprintf@ap^0,c
  2666  006F30  0E00               	movlw	high snprintf@ap
  2667  006F32  6E77               	movwf	(vsnprintf@ap+1)^0,c
  2668  006F34  EC06  F01E         	call	_vsnprintf	;wreg free
  2669  006F38  0012               	return		;funcret
  2670  006F3A  FFFF               	dw	65535	; errata NOP
  2671  006F3C                     __end_of_snprintf:
  2672                           	callstack 0
  2673                           
  2674 ;; *************** function _vsnprintf *****************
  2675 ;; Defined at:
  2676 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_vsnprintf.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;  s               2  111[COMRAM] PTR unsigned char 
  2679 ;;		 -> main@greet_str(160), 
  2680 ;;  n               2  113[COMRAM] unsigned int 
  2681 ;;  fmt             2  115[COMRAM] PTR const unsigned char 
  2682 ;;		 -> STR_8(3), 
  2683 ;;  ap              2  117[COMRAM] PTR PTR void 
  2684 ;;		 -> snprintf@ap(2), 
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;  f               6    4[BANK0 ] struct _IO_FILE
  2687 ;;  cnt             2    2[BANK0 ] int 
  2688 ;; Return value:  Size  Location     Type
  2689 ;;                  2  111[COMRAM] int 
  2690 ;; Registers used:
  2691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2692 ;; Tracked objects:
  2693 ;;		On entry : 0/0
  2694 ;;		On exit  : 0/0
  2695 ;;		Unchanged: 0/0
  2696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2697 ;;      Params:         8       0       0       0       0       0       0
  2698 ;;      Locals:         0      10       0       0       0       0       0
  2699 ;;      Temps:          4       0       0       0       0       0       0
  2700 ;;      Totals:        12      10       0       0       0       0       0
  2701 ;;Total ram usage:       22 bytes
  2702 ;; Hardware stack levels used:    1
  2703 ;; Hardware stack levels required when called:    8
  2704 ;; This function calls:
  2705 ;;		_vfprintf
  2706 ;; This function is called by:
  2707 ;;		_snprintf
  2708 ;; This function uses a non-reentrant model
  2709 ;;
  2710                           
  2711                           	psect	text5
  2712  003C0C                     __ptext5:
  2713                           	callstack 0
  2714  003C0C                     _vsnprintf:
  2715                           	callstack 0
  2716  003C0C  FFFF               	dw	65535	; assembler added errata NOP
  2717  003C0E  0E80               	movlw	128
  2718  003C10  5C73               	subwf	(vsnprintf@n+1)^0,w,c
  2719  003C12  A0D8               	btfss	status,0,c
  2720  003C14  EF0E  F01E         	goto	u5881
  2721  003C18  EF11  F01E         	goto	u5880
  2722  003C1C                     u5881:
  2723  003C1C  FFFF               	dw	65535	; assembler added errata NOP
  2724  003C1E  EF1B  F01E         	goto	l4875
  2725  003C22                     u5880:
  2726  003C22  FFFF               	dw	65535	; assembler added errata NOP
  2727  003C24  0E00               	movlw	0
  2728  003C26  0100               	movlb	0	; () banked
  2729  003C28  6F8D               	movwf	(_errno+1)& (0+255),b
  2730  003C2A  0E4B               	movlw	75
  2731  003C2C  6F8C               	movwf	_errno& (0+255),b
  2732  003C2E                     
  2733                           ; BSR set to: 0
  2734  003C2E  6870               	setf	?_vsnprintf^0,c
  2735  003C30  6871               	setf	(?_vsnprintf+1)^0,c
  2736  003C32  EFA0  F01E         	goto	l1000
  2737  003C36                     l4875:
  2738  003C36  FFFF               	dw	65535	; assembler added errata NOP
  2739  003C38  C070  F0B2         	movff	vsnprintf@s,vsnprintf@f
  2740  003C3C  C071  F0B3         	movff	vsnprintf@s+1,vsnprintf@f+1
  2741  003C40  5073               	movf	(vsnprintf@n+1)^0,w,c
  2742  003C42  E10A               	bnz	u5890
  2743  003C44  0E02               	movlw	2
  2744  003C46  5C72               	subwf	vsnprintf@n^0,w,c
  2745  003C48  A0D8               	btfss	status,0,c
  2746  003C4A  EF29  F01E         	goto	u5891
  2747  003C4E  EF2C  F01E         	goto	u5890
  2748  003C52                     u5891:
  2749  003C52  FFFF               	dw	65535	; assembler added errata NOP
  2750  003C54  EF3A  F01E         	goto	l4881
  2751  003C58                     u5890:
  2752  003C58  FFFF               	dw	65535	; assembler added errata NOP
  2753  003C5A  0EFF               	movlw	255
  2754  003C5C  2472               	addwf	vsnprintf@n^0,w,c
  2755  003C5E  0100               	movlb	0	; () banked
  2756  003C60  6FB6               	movwf	(vsnprintf@f+4)& (0+255),b
  2757  003C62  0EFF               	movlw	255
  2758  003C64  2073               	addwfc	(vsnprintf@n+1)^0,w,c
  2759  003C66  6FB7               	movwf	(vsnprintf@f+5)& (0+255),b
  2760  003C68                     
  2761                           ; BSR set to: 0
  2762  003C68  0E00               	movlw	0
  2763  003C6A  6FB5               	movwf	(vsnprintf@f+3)& (0+255),b
  2764  003C6C  0E00               	movlw	0
  2765  003C6E  6FB4               	movwf	(vsnprintf@f+2)& (0+255),b
  2766  003C70  EF44  F01E         	goto	l4883
  2767  003C74                     l4881:
  2768  003C74  FFFF               	dw	65535	; assembler added errata NOP
  2769  003C76  0E00               	movlw	0
  2770  003C78  0100               	movlb	0	; () banked
  2771  003C7A  6FB7               	movwf	(vsnprintf@f+5)& (0+255),b
  2772  003C7C  0E01               	movlw	1
  2773  003C7E  6FB6               	movwf	(vsnprintf@f+4)& (0+255),b
  2774  003C80  0E00               	movlw	0
  2775  003C82  6FB5               	movwf	(vsnprintf@f+3)& (0+255),b
  2776  003C84  0E01               	movlw	1
  2777  003C86  6FB4               	movwf	(vsnprintf@f+2)& (0+255),b
  2778  003C88                     l4883:
  2779  003C88  FFFF               	dw	65535	; assembler added errata NOP
  2780                           
  2781                           ; BSR set to: 0
  2782  003C8A  0EB2               	movlw	low vsnprintf@f
  2783  003C8C  6E68               	movwf	vfprintf@fp^0,c
  2784  003C8E  0E00               	movlw	high vsnprintf@f
  2785  003C90  6E69               	movwf	(vfprintf@fp+1)^0,c
  2786  003C92  C074  F06A         	movff	vsnprintf@fmt,vfprintf@fmt
  2787  003C96  C075  F06B         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  2788  003C9A  C076  F06C         	movff	vsnprintf@ap,vfprintf@ap
  2789  003C9E  C077  F06D         	movff	vsnprintf@ap+1,vfprintf@ap+1
  2790  003CA2  ECC2  F039         	call	_vfprintf	;wreg free
  2791  003CA6  C068  F0B0         	movff	?_vfprintf,vsnprintf@cnt
  2792  003CAA  C069  F0B1         	movff	?_vfprintf+1,vsnprintf@cnt+1
  2793  003CAE  5072               	movf	vsnprintf@n^0,w,c
  2794  003CB0  1073               	iorwf	(vsnprintf@n+1)^0,w,c
  2795  003CB2  B4D8               	btfsc	status,2,c
  2796  003CB4  EF5E  F01E         	goto	u5901
  2797  003CB8  EF61  F01E         	goto	u5900
  2798  003CBC                     u5901:
  2799  003CBC  FFFF               	dw	65535	; assembler added errata NOP
  2800  003CBE  EF9B  F01E         	goto	l4895
  2801  003CC2                     u5900:
  2802  003CC2  FFFF               	dw	65535	; assembler added errata NOP
  2803  003CC4  0100               	movlb	0	; () banked
  2804  003CC6  BFB1               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  2805  003CC8  EF68  F01E         	goto	u5911
  2806  003CCC  EF6B  F01E         	goto	u5910
  2807  003CD0                     u5911:
  2808  003CD0  FFFF               	dw	65535	; assembler added errata NOP
  2809  003CD2  EF9B  F01E         	goto	l4895
  2810  003CD6                     u5910:
  2811  003CD6  FFFF               	dw	65535	; assembler added errata NOP
  2812  003CD8                     
  2813                           ; BSR set to: 0
  2814  003CD8  0EFF               	movlw	255
  2815  003CDA  6E78               	movwf	??_vsnprintf^0,c
  2816  003CDC  0EFF               	movlw	255
  2817  003CDE  6E79               	movwf	(??_vsnprintf+1)^0,c
  2818  003CE0  C072  F07A         	movff	vsnprintf@n,??_vsnprintf+2
  2819  003CE4  C073  F07B         	movff	vsnprintf@n+1,??_vsnprintf+3
  2820  003CE8  5078               	movf	??_vsnprintf^0,w,c
  2821  003CEA  267A               	addwf	(??_vsnprintf+2)^0,f,c
  2822  003CEC  5079               	movf	(??_vsnprintf+1)^0,w,c
  2823  003CEE  227B               	addwfc	(??_vsnprintf+3)^0,f,c
  2824  003CF0  507A               	movf	(??_vsnprintf+2)^0,w,c
  2825  003CF2  5DB0               	subwf	vsnprintf@cnt& (0+255),w,b
  2826  003CF4  507B               	movf	(??_vsnprintf+3)^0,w,c
  2827  003CF6  59B1               	subwfb	(vsnprintf@cnt+1)& (0+255),w,b
  2828  003CF8  A0D8               	btfss	status,0,c
  2829  003CFA  EF81  F01E         	goto	u5921
  2830  003CFE  EF84  F01E         	goto	u5920
  2831  003D02                     u5921:
  2832  003D02  FFFF               	dw	65535	; assembler added errata NOP
  2833  003D04  EF8D  F01E         	goto	l1005
  2834  003D08                     u5920:
  2835  003D08  FFFF               	dw	65535	; assembler added errata NOP
  2836  003D0A                     
  2837                           ; BSR set to: 0
  2838  003D0A  0EFF               	movlw	255
  2839  003D0C  2472               	addwf	vsnprintf@n^0,w,c
  2840  003D0E  6FAE               	movwf	_vsnprintf$1365& (0+255),b
  2841  003D10  0EFF               	movlw	255
  2842  003D12  2073               	addwfc	(vsnprintf@n+1)^0,w,c
  2843  003D14  6FAF               	movwf	(_vsnprintf$1365+1)& (0+255),b
  2844  003D16  EF92  F01E         	goto	l4893
  2845  003D1A                     l1005:
  2846  003D1A  FFFF               	dw	65535	; assembler added errata NOP
  2847                           
  2848                           ; BSR set to: 0
  2849  003D1C  C0B0  F0AE         	movff	vsnprintf@cnt,_vsnprintf$1365
  2850  003D20  C0B1  F0AF         	movff	vsnprintf@cnt+1,_vsnprintf$1365+1
  2851  003D24                     l4893:
  2852  003D24  FFFF               	dw	65535	; assembler added errata NOP
  2853                           
  2854                           ; BSR set to: 0
  2855  003D26  51AE               	movf	_vsnprintf$1365& (0+255),w,b
  2856  003D28  2470               	addwf	vsnprintf@s^0,w,c
  2857  003D2A  6ED9               	movwf	fsr2l,c
  2858  003D2C  51AF               	movf	(_vsnprintf$1365+1)& (0+255),w,b
  2859  003D2E  2071               	addwfc	(vsnprintf@s+1)^0,w,c
  2860  003D30  6EDA               	movwf	fsr2h,c
  2861  003D32  0E00               	movlw	0
  2862  003D34  6EDF               	movwf	indf2,c
  2863  003D36                     l4895:
  2864  003D36  FFFF               	dw	65535	; assembler added errata NOP
  2865  003D38  C0B0  F070         	movff	vsnprintf@cnt,?_vsnprintf
  2866  003D3C  C0B1  F071         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  2867  003D40                     l1000:
  2868  003D40  FFFF               	dw	65535	; assembler added errata NOP
  2869  003D42  0012               	return		;funcret
  2870  003D44  FFFF               	dw	65535	; errata NOP
  2871  003D46                     __end_of_vsnprintf:
  2872                           	callstack 0
  2873                           
  2874 ;; *************** function _vfprintf *****************
  2875 ;; Defined at:
  2876 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2877 ;; Parameters:    Size  Location     Type
  2878 ;;  fp              2  103[COMRAM] PTR struct _IO_FILE
  2879 ;;		 -> vsnprintf@f(6), 
  2880 ;;  fmt             2  105[COMRAM] PTR const unsigned char 
  2881 ;;		 -> STR_8(3), 
  2882 ;;  ap              2  107[COMRAM] PTR PTR void 
  2883 ;;		 -> snprintf@ap(2), 
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;  cfmt            2  109[COMRAM] PTR unsigned char 
  2886 ;;		 -> STR_8(3), 
  2887 ;; Return value:  Size  Location     Type
  2888 ;;                  2  103[COMRAM] int 
  2889 ;; Registers used:
  2890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2891 ;; Tracked objects:
  2892 ;;		On entry : 0/0
  2893 ;;		On exit  : 0/0
  2894 ;;		Unchanged: 0/0
  2895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2896 ;;      Params:         6       0       0       0       0       0       0
  2897 ;;      Locals:         2       0       0       0       0       0       0
  2898 ;;      Temps:          0       0       0       0       0       0       0
  2899 ;;      Totals:         8       0       0       0       0       0       0
  2900 ;;Total ram usage:        8 bytes
  2901 ;; Hardware stack levels used:    1
  2902 ;; Hardware stack levels required when called:    7
  2903 ;; This function calls:
  2904 ;;		_vfpfcnvrt
  2905 ;; This function is called by:
  2906 ;;		_vsnprintf
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910                           	psect	text6
  2911  007384                     __ptext6:
  2912                           	callstack 0
  2913  007384                     _vfprintf:
  2914                           	callstack 0
  2915  007384  FFFF               	dw	65535	; assembler added errata NOP
  2916  007386                     
  2917                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2918  007386  C06A  F06E         	movff	vfprintf@fmt,vfprintf@cfmt
  2919  00738A  C06B  F06F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2920  00738E                     
  2921                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  2922  00738E  0E00               	movlw	0
  2923  007390  0100               	movlb	0	; () banked
  2924  007392  6F85               	movwf	(_nout+1)& (0+255),b
  2925  007394  0E00               	movlw	0
  2926  007396  6F84               	movwf	_nout& (0+255),b
  2927                           
  2928                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  2929  007398  EFE2  F039         	goto	l4785
  2930  00739C                     l4783:
  2931  00739C  FFFF               	dw	65535	; assembler added errata NOP
  2932                           
  2933                           ; BSR set to: 0
  2934                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2935  00739E  C068  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  2936  0073A2  C069  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2937  0073A6  0E6E               	movlw	low vfprintf@cfmt
  2938  0073A8  6E45               	movwf	vfpfcnvrt@fmt^0,c
  2939  0073AA  0E00               	movlw	high vfprintf@cfmt
  2940  0073AC  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2941  0073AE  C06C  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  2942  0073B2  C06D  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2943  0073B6  EC3D  F000         	call	_vfpfcnvrt	;wreg free
  2944  0073BA  5043               	movf	?_vfpfcnvrt^0,w,c
  2945  0073BC  0100               	movlb	0	; () banked
  2946  0073BE  2784               	addwf	_nout& (0+255),f,b
  2947  0073C0  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  2948  0073C2  2385               	addwfc	(_nout+1)& (0+255),f,b
  2949  0073C4                     l4785:
  2950  0073C4  FFFF               	dw	65535	; assembler added errata NOP
  2951                           
  2952                           ; BSR set to: 0
  2953                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  2954  0073C6  C06E  FFF6         	movff	vfprintf@cfmt,tblptrl
  2955  0073CA  C06F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2956  0073CE                     	if	0	;tblptru may be non-zero
  2957  0073CE                     	endif
  2958  0073CE                     	if	0	;tblptru may be non-zero
  2959  0073CE                     	endif
  2960  0073CE  0008               	tblrd		*
  2961  0073D0  FFFF               	dw	65535	; errata NOP
  2962  0073D2  50F5               	movf	tablat,w,c
  2963  0073D4  0900               	iorlw	0
  2964  0073D6  A4D8               	btfss	status,2,c
  2965  0073D8  EFF0  F039         	goto	u5761
  2966  0073DC  EFF3  F039         	goto	u5760
  2967  0073E0                     u5761:
  2968  0073E0  FFFF               	dw	65535	; assembler added errata NOP
  2969  0073E2  EFCE  F039         	goto	l4783
  2970  0073E6                     u5760:
  2971  0073E6  FFFF               	dw	65535	; assembler added errata NOP
  2972  0073E8                     
  2973                           ; BSR set to: 0
  2974                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  2975  0073E8  C084  F068         	movff	_nout,?_vfprintf
  2976  0073EC  C085  F069         	movff	_nout+1,?_vfprintf+1
  2977  0073F0                     
  2978                           ; BSR set to: 0
  2979  0073F0  0012               	return		;funcret
  2980  0073F2  FFFF               	dw	65535	; errata NOP
  2981  0073F4                     __end_of_vfprintf:
  2982                           	callstack 0
  2983                           
  2984 ;; *************** function _vfpfcnvrt *****************
  2985 ;; Defined at:
  2986 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2987 ;; Parameters:    Size  Location     Type
  2988 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  2989 ;;		 -> vsnprintf@f(6), 
  2990 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  2991 ;;		 -> vfprintf@cfmt(2), 
  2992 ;;  ap              2   70[COMRAM] PTR PTR void 
  2993 ;;		 -> snprintf@ap(2), 
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;  llu             8   95[COMRAM] unsigned long long 
  2996 ;;  ll              8   84[COMRAM] long long 
  2997 ;;  f               4    0        long long 
  2998 ;;  ct              3    0        unsigned char [3]
  2999 ;;  vp              2   92[COMRAM] PTR void 
  3000 ;;		 -> ?_snprintf(2), STR_6(49), STR_5(55), STR_4(39), 
  3001 ;;		 -> STR_3(9), STR_2(63), STR_1(47), 
  3002 ;;  done            2   78[COMRAM] int 
  3003 ;;  cp              2   76[COMRAM] PTR unsigned char 
  3004 ;;		 -> ?_snprintf(2), STR_6(49), STR_5(55), STR_4(39), 
  3005 ;;		 -> STR_3(9), STR_2(63), STR_1(47), 
  3006 ;;  i               2    0        int 
  3007 ;;  c               1   94[COMRAM] unsigned char 
  3008 ;; Return value:  Size  Location     Type
  3009 ;;                  2   66[COMRAM] int 
  3010 ;; Registers used:
  3011 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3017 ;;      Params:         6       0       0       0       0       0       0
  3018 ;;      Locals:        27       0       0       0       0       0       0
  3019 ;;      Temps:          4       0       0       0       0       0       0
  3020 ;;      Totals:        37       0       0       0       0       0       0
  3021 ;;Total ram usage:       37 bytes
  3022 ;; Hardware stack levels used:    1
  3023 ;; Hardware stack levels required when called:    6
  3024 ;; This function calls:
  3025 ;;		_atoi
  3026 ;;		_ctoa
  3027 ;;		_dtoa
  3028 ;;		_fputc
  3029 ;;		_isdigit
  3030 ;;		_otoa
  3031 ;;		_stoa
  3032 ;;		_strncmp
  3033 ;;		_utoa
  3034 ;;		_xtoa
  3035 ;; This function is called by:
  3036 ;;		_vfprintf
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040                           	psect	text7
  3041  00007A                     __ptext7:
  3042                           	callstack 0
  3043  00007A                     _vfpfcnvrt:
  3044                           	callstack 0
  3045  00007A  FFFF               	dw	65535	; assembler added errata NOP
  3046  00007C                     
  3047                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  3048  00007C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3049  000080  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3050  000084  CFDE FFF6          	movff	postinc2,tblptrl
  3051  000088  CFDD FFF7          	movff	postdec2,tblptrh
  3052  00008C                     	if	0	;tblptru may be non-zero
  3053  00008C                     	endif
  3054  00008C                     	if	0	;tblptru may be non-zero
  3055  00008C                     	endif
  3056  00008C  0008               	tblrd		*
  3057  00008E  FFFF               	dw	65535	; errata NOP
  3058  000090  50F5               	movf	tablat,w,c
  3059  000092  0A25               	xorlw	37
  3060  000094  A4D8               	btfss	status,2,c
  3061  000096  EF4F  F000         	goto	u4721
  3062  00009A  EF52  F000         	goto	u4720
  3063  00009E                     u4721:
  3064  00009E  FFFF               	dw	65535	; assembler added errata NOP
  3065  0000A0  EF11  F00A         	goto	l4415
  3066  0000A4                     u4720:
  3067  0000A4  FFFF               	dw	65535	; assembler added errata NOP
  3068  0000A6                     
  3069                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  3070  0000A6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3071  0000AA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3072  0000AE  2ADE               	incf	postinc2,f,c
  3073  0000B0  0E00               	movlw	0
  3074  0000B2  22DD               	addwfc	postdec2,f,c
  3075  0000B4                     
  3076                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  3077  0000B4  0E00               	movlw	0
  3078  0000B6  0100               	movlb	0	; () banked
  3079  0000B8  6F87               	movwf	(_width+1)& (0+255),b
  3080  0000BA  0E00               	movlw	0
  3081  0000BC  6F86               	movwf	_width& (0+255),b
  3082  0000BE  C086  F08A         	movff	_width,_flags
  3083  0000C2  C087  F08B         	movff	_width+1,_flags+1
  3084  0000C6                     
  3085                           ; BSR set to: 0
  3086                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  3087  0000C6  6988               	setf	_prec& (0+255),b
  3088  0000C8  6989               	setf	(_prec+1)& (0+255),b
  3089  0000CA                     
  3090                           ; BSR set to: 0
  3091                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 688:         done
      +                           = 0;
  3092  0000CA  0E00               	movlw	0
  3093  0000CC  6E50               	movwf	(vfpfcnvrt@done+1)^0,c
  3094  0000CE  0E00               	movlw	0
  3095  0000D0  6E4F               	movwf	vfpfcnvrt@done^0,c
  3096                           
  3097                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  3098  0000D2  EFC0  F000         	goto	l4133
  3099  0000D6                     l4107:
  3100  0000D6  FFFF               	dw	65535	; assembler added errata NOP
  3101                           
  3102                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 692:             
      +                                  flags |= (1 << 0);
  3103  0000D8  0100               	movlb	0	; () banked
  3104  0000DA  818A               	bsf	_flags& (0+255),0,b
  3105  0000DC                     l4109:
  3106  0000DC  FFFF               	dw	65535	; assembler added errata NOP
  3107                           
  3108                           ; BSR set to: 0
  3109                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 693:             
      +                                  ++*fmt;
  3110  0000DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3111  0000E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3112  0000E6  2ADE               	incf	postinc2,f,c
  3113  0000E8  0E00               	movlw	0
  3114  0000EA  22DD               	addwfc	postdec2,f,c
  3115                           
  3116                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 694:             
      +                                  break;
  3117  0000EC  EFC0  F000         	goto	l4133
  3118  0000F0                     l4111:
  3119  0000F0  FFFF               	dw	65535	; assembler added errata NOP
  3120                           
  3121                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 696:             
      +                                  flags |= (1 << 1);
  3122  0000F2  0100               	movlb	0	; () banked
  3123  0000F4  838A               	bsf	_flags& (0+255),1,b
  3124  0000F6  EF6E  F000         	goto	l4109
  3125  0000FA                     l4115:
  3126  0000FA  FFFF               	dw	65535	; assembler added errata NOP
  3127                           
  3128                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 700:             
      +                                  flags |= (1 << 2);
  3129  0000FC  0100               	movlb	0	; () banked
  3130  0000FE  858A               	bsf	_flags& (0+255),2,b
  3131  000100  EF6E  F000         	goto	l4109
  3132  000104                     l4119:
  3133  000104  FFFF               	dw	65535	; assembler added errata NOP
  3134                           
  3135                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 704:             
      +                                  flags |= (1 << 3);
  3136  000106  0100               	movlb	0	; () banked
  3137  000108  878A               	bsf	_flags& (0+255),3,b
  3138  00010A  EF6E  F000         	goto	l4109
  3139  00010E                     l4123:
  3140  00010E  FFFF               	dw	65535	; assembler added errata NOP
  3141                           
  3142                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 708:             
      +                                  flags |= (1 << 4);
  3143  000110  0100               	movlb	0	; () banked
  3144  000112  898A               	bsf	_flags& (0+255),4,b
  3145  000114  EF6E  F000         	goto	l4109
  3146  000118                     l4127:
  3147  000118  FFFF               	dw	65535	; assembler added errata NOP
  3148                           
  3149                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 712:             
      +                                  done = 1;
  3150  00011A  0E00               	movlw	0
  3151  00011C  6E50               	movwf	(vfpfcnvrt@done+1)^0,c
  3152  00011E  0E01               	movlw	1
  3153  000120  6E4F               	movwf	vfpfcnvrt@done^0,c
  3154                           
  3155                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 713:             
      +                                  break;
  3156  000122  EFC0  F000         	goto	l4133
  3157  000126                     l4131:
  3158  000126  FFFF               	dw	65535	; assembler added errata NOP
  3159  000128  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3160  00012C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3161  000130  CFDE FFF6          	movff	postinc2,tblptrl
  3162  000134  CFDD FFF7          	movff	postdec2,tblptrh
  3163  000138                     	if	0	;tblptru may be non-zero
  3164  000138                     	endif
  3165  000138                     	if	0	;tblptru may be non-zero
  3166  000138                     	endif
  3167  000138  0008               	tblrd		*
  3168  00013A  FFFF               	dw	65535	; errata NOP
  3169  00013C  50F5               	movf	tablat,w,c
  3170  00013E  6E49               	movwf	??_vfpfcnvrt^0,c
  3171  000140  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  3172                           
  3173                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3174                           ; Switch size 1, requested type "simple"
  3175                           ; Number of cases is 1, Range of values is 0 to 0
  3176                           ; switch strategies available:
  3177                           ; Name         Instructions Cycles
  3178                           ; simple_byte            4     3 (average)
  3179                           ;	Chosen strategy is simple_byte
  3180  000142  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  3181  000144  0A00               	xorlw	0	; case 0
  3182  000146  B4D8               	btfsc	status,2,c
  3183  000148  EFA8  F000         	goto	l5345
  3184  00014C  EF8C  F000         	goto	l4127
  3185  000150                     l5345:
  3186  000150  FFFF               	dw	65535	; assembler added errata NOP
  3187                           
  3188                           ; Switch size 1, requested type "simple"
  3189                           ; Number of cases is 5, Range of values is 32 to 48
  3190                           ; switch strategies available:
  3191                           ; Name         Instructions Cycles
  3192                           ; simple_byte           16     9 (average)
  3193                           ;	Chosen strategy is simple_byte
  3194  000152  5049               	movf	??_vfpfcnvrt^0,w,c
  3195  000154  0A20               	xorlw	32	; case 32
  3196  000156  B4D8               	btfsc	status,2,c
  3197  000158  EF82  F000         	goto	l4119
  3198  00015C  0A03               	xorlw	3	; case 35
  3199  00015E  B4D8               	btfsc	status,2,c
  3200  000160  EF87  F000         	goto	l4123
  3201  000164  0A08               	xorlw	8	; case 43
  3202  000166  B4D8               	btfsc	status,2,c
  3203  000168  EF7D  F000         	goto	l4115
  3204  00016C  0A06               	xorlw	6	; case 45
  3205  00016E  B4D8               	btfsc	status,2,c
  3206  000170  EF6B  F000         	goto	l4107
  3207  000174  0A1D               	xorlw	29	; case 48
  3208  000176  B4D8               	btfsc	status,2,c
  3209  000178  EF78  F000         	goto	l4111
  3210  00017C  EF8C  F000         	goto	l4127
  3211  000180                     l4133:
  3212  000180  FFFF               	dw	65535	; assembler added errata NOP
  3213                           
  3214                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  3215  000182  504F               	movf	vfpfcnvrt@done^0,w,c
  3216  000184  1050               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  3217  000186  B4D8               	btfsc	status,2,c
  3218  000188  EFC8  F000         	goto	u4731
  3219  00018C  EFCB  F000         	goto	u4730
  3220  000190                     u4731:
  3221  000190  FFFF               	dw	65535	; assembler added errata NOP
  3222  000192  EF93  F000         	goto	l4131
  3223  000196                     u4730:
  3224  000196  FFFF               	dw	65535	; assembler added errata NOP
  3225  000198                     
  3226                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 716:         if (
      +                          flags & (1 << 0)) {
  3227  000198  0100               	movlb	0	; () banked
  3228  00019A  A18A               	btfss	_flags& (0+255),0,b
  3229  00019C  EFD2  F000         	goto	u4741
  3230  0001A0  EFD5  F000         	goto	u4740
  3231  0001A4                     u4741:
  3232  0001A4  FFFF               	dw	65535	; assembler added errata NOP
  3233  0001A6  EFD7  F000         	goto	l4137
  3234  0001AA                     u4740:
  3235  0001AA  FFFF               	dw	65535	; assembler added errata NOP
  3236  0001AC                     
  3237                           ; BSR set to: 0
  3238                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 717:             
      +                          flags &= ~(1 << 1);
  3239  0001AC  938A               	bcf	_flags& (0+255),1,b
  3240  0001AE                     l4137:
  3241  0001AE  FFFF               	dw	65535	; assembler added errata NOP
  3242                           
  3243                           ; BSR set to: 0
  3244                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  3245  0001B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3246  0001B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3247  0001B8  CFDE FFF6          	movff	postinc2,tblptrl
  3248  0001BC  CFDD FFF7          	movff	postdec2,tblptrh
  3249  0001C0                     	if	0	;tblptru may be non-zero
  3250  0001C0                     	endif
  3251  0001C0                     	if	0	;tblptru may be non-zero
  3252  0001C0                     	endif
  3253  0001C0  0008               	tblrd		*
  3254  0001C2  FFFF               	dw	65535	; errata NOP
  3255  0001C4  50F5               	movf	tablat,w,c
  3256  0001C6  0A2A               	xorlw	42
  3257  0001C8  A4D8               	btfss	status,2,c
  3258  0001CA  EFE9  F000         	goto	u4751
  3259  0001CE  EFEC  F000         	goto	u4750
  3260  0001D2                     u4751:
  3261  0001D2  FFFF               	dw	65535	; assembler added errata NOP
  3262  0001D4  EF18  F001         	goto	l4145
  3263  0001D8                     u4750:
  3264  0001D8  FFFF               	dw	65535	; assembler added errata NOP
  3265  0001DA                     
  3266                           ; BSR set to: 0
  3267                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  3268  0001DA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3269  0001DE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3270  0001E2  2ADE               	incf	postinc2,f,c
  3271  0001E4  0E00               	movlw	0
  3272  0001E6  22DD               	addwfc	postdec2,f,c
  3273                           
  3274                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3275  0001E8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3276  0001EC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3277  0001F0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3278  0001F4  0E02               	movlw	2
  3279  0001F6  26DE               	addwf	postinc2,f,c
  3280  0001F8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3281  0001FC  0E00               	movlw	0
  3282  0001FE  22DD               	addwfc	postdec2,f,c
  3283  000200  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3284  000204  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3285  000208  CFDE F086          	movff	postinc2,_width
  3286  00020C  CFDD F087          	movff	postdec2,_width+1
  3287  000210                     
  3288                           ; BSR set to: 0
  3289                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  3290  000210  BF87               	btfsc	(_width+1)& (0+255),7,b
  3291  000212  EF10  F001         	goto	u4760
  3292  000216  EF0D  F001         	goto	u4761
  3293  00021A                     u4761:
  3294  00021A  FFFF               	dw	65535	; assembler added errata NOP
  3295  00021C  EF63  F001         	goto	l4155
  3296  000220                     u4760:
  3297  000220  FFFF               	dw	65535	; assembler added errata NOP
  3298  000222                     
  3299                           ; BSR set to: 0
  3300                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  3301  000222  818A               	bsf	_flags& (0+255),0,b
  3302                           
  3303                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  3304  000224  6D86               	negf	_width& (0+255),b
  3305  000226  1F87               	comf	(_width+1)& (0+255),f,b
  3306  000228  B0D8               	btfsc	status,0,c
  3307  00022A  2B87               	incf	(_width+1)& (0+255),f,b
  3308  00022C  EF63  F001         	goto	l4155
  3309  000230                     l4145:
  3310  000230  FFFF               	dw	65535	; assembler added errata NOP
  3311                           
  3312                           ; BSR set to: 0
  3313                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  3314  000232  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3315  000236  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3316  00023A  CFDE F008          	movff	postinc2,atoi@s
  3317  00023E  CFDD F009          	movff	postdec2,atoi@s+1
  3318  000242  EC7D  F01B         	call	_atoi	;wreg free
  3319  000246  C008  F086         	movff	?_atoi,_width
  3320  00024A  C009  F087         	movff	?_atoi+1,_width+1
  3321                           
  3322                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3323  00024E  EF31  F001         	goto	l4149
  3324  000252                     l4147:
  3325  000252  FFFF               	dw	65535	; assembler added errata NOP
  3326                           
  3327                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  3328  000254  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3329  000258  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3330  00025C  2ADE               	incf	postinc2,f,c
  3331  00025E  0E00               	movlw	0
  3332  000260  22DD               	addwfc	postdec2,f,c
  3333  000262                     l4149:
  3334  000262  FFFF               	dw	65535	; assembler added errata NOP
  3335  000264  0ED0               	movlw	208
  3336  000266  6E49               	movwf	??_vfpfcnvrt^0,c
  3337  000268  0EFF               	movlw	255
  3338  00026A  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  3339  00026C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3340  000270  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3341  000274  CFDE FFF6          	movff	postinc2,tblptrl
  3342  000278  CFDD FFF7          	movff	postdec2,tblptrh
  3343  00027C                     	if	0	;tblptru may be non-zero
  3344  00027C                     	endif
  3345  00027C                     	if	0	;tblptru may be non-zero
  3346  00027C                     	endif
  3347  00027C  0008               	tblrd		*
  3348  00027E  FFFF               	dw	65535	; errata NOP
  3349  000280  50F5               	movf	tablat,w,c
  3350  000282  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  3351  000284  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  3352  000286  5049               	movf	??_vfpfcnvrt^0,w,c
  3353  000288  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3354  00028A  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  3355  00028C  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3356  00028E  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  3357  000290  E10B               	bnz	u4770
  3358  000292  0E0A               	movlw	10
  3359  000294  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3360  000296  A0D8               	btfss	status,0,c
  3361  000298  EF50  F001         	goto	u4771
  3362  00029C  EF54  F001         	goto	u4770
  3363  0002A0                     u4771:
  3364  0002A0  FFFF               	dw	65535	; assembler added errata NOP
  3365  0002A2  0E01               	movlw	1
  3366  0002A4  EF56  F001         	goto	u4780
  3367  0002A8                     u4770:
  3368  0002A8  FFFF               	dw	65535	; assembler added errata NOP
  3369  0002AA  0E00               	movlw	0
  3370  0002AC                     u4780:
  3371  0002AC  FFFF               	dw	65535	; assembler added errata NOP
  3372  0002AE  6E51               	movwf	_vfpfcnvrt$1502^0,c
  3373  0002B0  6A52               	clrf	(_vfpfcnvrt$1502+1)^0,c
  3374  0002B2  5051               	movf	_vfpfcnvrt$1502^0,w,c
  3375  0002B4  1052               	iorwf	(_vfpfcnvrt$1502+1)^0,w,c
  3376  0002B6  A4D8               	btfss	status,2,c
  3377  0002B8  EF60  F001         	goto	u4791
  3378  0002BC  EF63  F001         	goto	u4790
  3379  0002C0                     u4791:
  3380  0002C0  FFFF               	dw	65535	; assembler added errata NOP
  3381  0002C2  EF29  F001         	goto	l4147
  3382  0002C6                     u4790:
  3383  0002C6                     l4155:
  3384  0002C6  FFFF               	dw	65535	; assembler added errata NOP
  3385                           
  3386                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  3387  0002C8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3388  0002CC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3389  0002D0  CFDE FFF6          	movff	postinc2,tblptrl
  3390  0002D4  CFDD FFF7          	movff	postdec2,tblptrh
  3391  0002D8                     	if	0	;tblptru may be non-zero
  3392  0002D8                     	endif
  3393  0002D8                     	if	0	;tblptru may be non-zero
  3394  0002D8                     	endif
  3395  0002D8  0008               	tblrd		*
  3396  0002DA  FFFF               	dw	65535	; errata NOP
  3397  0002DC  50F5               	movf	tablat,w,c
  3398  0002DE  0A2E               	xorlw	46
  3399  0002E0  A4D8               	btfss	status,2,c
  3400  0002E2  EF75  F001         	goto	u4801
  3401  0002E6  EF78  F001         	goto	u4800
  3402  0002EA                     u4801:
  3403  0002EA  FFFF               	dw	65535	; assembler added errata NOP
  3404  0002EC  EF02  F002         	goto	l4175
  3405  0002F0                     u4800:
  3406  0002F0  FFFF               	dw	65535	; assembler added errata NOP
  3407  0002F2                     
  3408                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  3409  0002F2  0E00               	movlw	0
  3410  0002F4  0100               	movlb	0	; () banked
  3411  0002F6  6F89               	movwf	(_prec+1)& (0+255),b
  3412  0002F8  0E00               	movlw	0
  3413  0002FA  6F88               	movwf	_prec& (0+255),b
  3414  0002FC                     
  3415                           ; BSR set to: 0
  3416                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  3417  0002FC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3418  000300  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3419  000304  2ADE               	incf	postinc2,f,c
  3420  000306  0E00               	movlw	0
  3421  000308  22DD               	addwfc	postdec2,f,c
  3422  00030A                     
  3423                           ; BSR set to: 0
  3424                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  3425  00030A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3426  00030E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3427  000312  CFDE FFF6          	movff	postinc2,tblptrl
  3428  000316  CFDD FFF7          	movff	postdec2,tblptrh
  3429  00031A                     	if	0	;tblptru may be non-zero
  3430  00031A                     	endif
  3431  00031A                     	if	0	;tblptru may be non-zero
  3432  00031A                     	endif
  3433  00031A  0008               	tblrd		*
  3434  00031C  FFFF               	dw	65535	; errata NOP
  3435  00031E  50F5               	movf	tablat,w,c
  3436  000320  0A2A               	xorlw	42
  3437  000322  A4D8               	btfss	status,2,c
  3438  000324  EF96  F001         	goto	u4811
  3439  000328  EF99  F001         	goto	u4810
  3440  00032C                     u4811:
  3441  00032C  FFFF               	dw	65535	; assembler added errata NOP
  3442  00032E  EFB7  F001         	goto	l4165
  3443  000332                     u4810:
  3444  000332  FFFF               	dw	65535	; assembler added errata NOP
  3445  000334                     
  3446                           ; BSR set to: 0
  3447                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  3448  000334  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3449  000338  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3450  00033C  2ADE               	incf	postinc2,f,c
  3451  00033E  0E00               	movlw	0
  3452  000340  22DD               	addwfc	postdec2,f,c
  3453                           
  3454                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3455  000342  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3456  000346  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3457  00034A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3458  00034E  0E02               	movlw	2
  3459  000350  26DE               	addwf	postinc2,f,c
  3460  000352  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3461  000356  0E00               	movlw	0
  3462  000358  22DD               	addwfc	postdec2,f,c
  3463  00035A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3464  00035E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3465  000362  CFDE F088          	movff	postinc2,_prec
  3466  000366  CFDD F089          	movff	postdec2,_prec+1
  3467                           
  3468                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  3469  00036A  EF02  F002         	goto	l4175
  3470  00036E                     l4165:
  3471  00036E  FFFF               	dw	65535	; assembler added errata NOP
  3472                           
  3473                           ; BSR set to: 0
  3474                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  3475  000370  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3476  000374  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3477  000378  CFDE F008          	movff	postinc2,atoi@s
  3478  00037C  CFDD F009          	movff	postdec2,atoi@s+1
  3479  000380  EC7D  F01B         	call	_atoi	;wreg free
  3480  000384  C008  F088         	movff	?_atoi,_prec
  3481  000388  C009  F089         	movff	?_atoi+1,_prec+1
  3482                           
  3483                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3484  00038C  EFD0  F001         	goto	l4169
  3485  000390                     l4167:
  3486  000390  FFFF               	dw	65535	; assembler added errata NOP
  3487                           
  3488                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  3489  000392  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3490  000396  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3491  00039A  2ADE               	incf	postinc2,f,c
  3492  00039C  0E00               	movlw	0
  3493  00039E  22DD               	addwfc	postdec2,f,c
  3494  0003A0                     l4169:
  3495  0003A0  FFFF               	dw	65535	; assembler added errata NOP
  3496  0003A2  0ED0               	movlw	208
  3497  0003A4  6E49               	movwf	??_vfpfcnvrt^0,c
  3498  0003A6  0EFF               	movlw	255
  3499  0003A8  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  3500  0003AA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3501  0003AE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3502  0003B2  CFDE FFF6          	movff	postinc2,tblptrl
  3503  0003B6  CFDD FFF7          	movff	postdec2,tblptrh
  3504  0003BA                     	if	0	;tblptru may be non-zero
  3505  0003BA                     	endif
  3506  0003BA                     	if	0	;tblptru may be non-zero
  3507  0003BA                     	endif
  3508  0003BA  0008               	tblrd		*
  3509  0003BC  FFFF               	dw	65535	; errata NOP
  3510  0003BE  50F5               	movf	tablat,w,c
  3511  0003C0  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  3512  0003C2  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  3513  0003C4  5049               	movf	??_vfpfcnvrt^0,w,c
  3514  0003C6  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3515  0003C8  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  3516  0003CA  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3517  0003CC  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  3518  0003CE  E10B               	bnz	u4820
  3519  0003D0  0E0A               	movlw	10
  3520  0003D2  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3521  0003D4  A0D8               	btfss	status,0,c
  3522  0003D6  EFEF  F001         	goto	u4821
  3523  0003DA  EFF3  F001         	goto	u4820
  3524  0003DE                     u4821:
  3525  0003DE  FFFF               	dw	65535	; assembler added errata NOP
  3526  0003E0  0E01               	movlw	1
  3527  0003E2  EFF5  F001         	goto	u4830
  3528  0003E6                     u4820:
  3529  0003E6  FFFF               	dw	65535	; assembler added errata NOP
  3530  0003E8  0E00               	movlw	0
  3531  0003EA                     u4830:
  3532  0003EA  FFFF               	dw	65535	; assembler added errata NOP
  3533  0003EC  6E53               	movwf	_vfpfcnvrt$1503^0,c
  3534  0003EE  6A54               	clrf	(_vfpfcnvrt$1503+1)^0,c
  3535  0003F0  5053               	movf	_vfpfcnvrt$1503^0,w,c
  3536  0003F2  1054               	iorwf	(_vfpfcnvrt$1503+1)^0,w,c
  3537  0003F4  A4D8               	btfss	status,2,c
  3538  0003F6  EFFF  F001         	goto	u4841
  3539  0003FA  EF02  F002         	goto	u4840
  3540  0003FE                     u4841:
  3541  0003FE  FFFF               	dw	65535	; assembler added errata NOP
  3542  000400  EFC8  F001         	goto	l4167
  3543  000404                     u4840:
  3544  000404                     l4175:
  3545  000404  FFFF               	dw	65535	; assembler added errata NOP
  3546                           
  3547                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 792:         if (
      +                          *fmt[0] == 'c') {
  3548  000406  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3549  00040A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3550  00040E  CFDE FFF6          	movff	postinc2,tblptrl
  3551  000412  CFDD FFF7          	movff	postdec2,tblptrh
  3552  000416                     	if	0	;tblptru may be non-zero
  3553  000416                     	endif
  3554  000416                     	if	0	;tblptru may be non-zero
  3555  000416                     	endif
  3556  000416  0008               	tblrd		*
  3557  000418  FFFF               	dw	65535	; errata NOP
  3558  00041A  50F5               	movf	tablat,w,c
  3559  00041C  0A63               	xorlw	99
  3560  00041E  A4D8               	btfss	status,2,c
  3561  000420  EF14  F002         	goto	u4851
  3562  000424  EF17  F002         	goto	u4850
  3563  000428                     u4851:
  3564  000428  FFFF               	dw	65535	; assembler added errata NOP
  3565  00042A  EF3F  F002         	goto	l4183
  3566  00042E                     u4850:
  3567  00042E  FFFF               	dw	65535	; assembler added errata NOP
  3568  000430                     
  3569                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 793:             
      +                          ++*fmt;
  3570  000430  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3571  000434  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3572  000438  2ADE               	incf	postinc2,f,c
  3573  00043A  0E00               	movlw	0
  3574  00043C  22DD               	addwfc	postdec2,f,c
  3575                           
  3576                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 794:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3577  00043E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3578  000442  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3579  000446  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3580  00044A  0E02               	movlw	2
  3581  00044C  26DE               	addwf	postinc2,f,c
  3582  00044E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3583  000452  0E00               	movlw	0
  3584  000454  22DD               	addwfc	postdec2,f,c
  3585  000456  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3586  00045A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3587  00045E  50DF               	movf	indf2,w,c
  3588  000460  6E5F               	movwf	vfpfcnvrt@c^0,c
  3589  000462                     
  3590                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 795:             
      +                          return ctoa(fp, c);
  3591  000462  C043  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  3592  000466  C044  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  3593  00046A  C05F  F01E         	movff	vfpfcnvrt@c,ctoa@c
  3594  00046E  EC24  F039         	call	_ctoa	;wreg free
  3595  000472  C01C  F043         	movff	?_ctoa,?_vfpfcnvrt
  3596  000476  C01D  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  3597  00047A  EF2E  F00A         	goto	l1205
  3598  00047E                     l4183:
  3599  00047E  FFFF               	dw	65535	; assembler added errata NOP
  3600                           
  3601                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 802:         if (
      +                          !strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi", ((s
      +                          izeof("hhi")/sizeof("hhi"[0]))-1))) {
  3602  000480  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3603  000484  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3604  000488  CFDE F001          	movff	postinc2,strncmp@_l
  3605  00048C  CFDD F002          	movff	postdec2,strncmp@_l+1
  3606  000490  0ECF               	movlw	low STR_9
  3607  000492  6E03               	movwf	strncmp@_r^0,c
  3608  000494  0E7F               	movlw	high STR_9
  3609  000496  6E04               	movwf	(strncmp@_r+1)^0,c
  3610  000498  0E00               	movlw	0
  3611  00049A  6E06               	movwf	(strncmp@n+1)^0,c
  3612  00049C  0E03               	movlw	3
  3613  00049E  6E05               	movwf	strncmp@n^0,c
  3614  0004A0  EC44  F03E         	call	_strncmp	;wreg free
  3615  0004A4  5001               	movf	?_strncmp^0,w,c
  3616  0004A6  1002               	iorwf	(?_strncmp+1)^0,w,c
  3617  0004A8  B4D8               	btfsc	status,2,c
  3618  0004AA  EF59  F002         	goto	u4861
  3619  0004AE  EF5C  F002         	goto	u4860
  3620  0004B2                     u4861:
  3621  0004B2  FFFF               	dw	65535	; assembler added errata NOP
  3622  0004B4  EF79  F002         	goto	l4187
  3623  0004B8                     u4860:
  3624  0004B8  FFFF               	dw	65535	; assembler added errata NOP
  3625  0004BA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3626  0004BE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3627  0004C2  CFDE F001          	movff	postinc2,strncmp@_l
  3628  0004C6  CFDD F002          	movff	postdec2,strncmp@_l+1
  3629  0004CA  0ED3               	movlw	low STR_13
  3630  0004CC  6E03               	movwf	strncmp@_r^0,c
  3631  0004CE  0E7F               	movlw	high STR_13
  3632  0004D0  6E04               	movwf	(strncmp@_r+1)^0,c
  3633  0004D2  0E00               	movlw	0
  3634  0004D4  6E06               	movwf	(strncmp@n+1)^0,c
  3635  0004D6  0E03               	movlw	3
  3636  0004D8  6E05               	movwf	strncmp@n^0,c
  3637  0004DA  EC44  F03E         	call	_strncmp	;wreg free
  3638  0004DE  5001               	movf	?_strncmp^0,w,c
  3639  0004E0  1002               	iorwf	(?_strncmp+1)^0,w,c
  3640  0004E2  A4D8               	btfss	status,2,c
  3641  0004E4  EF76  F002         	goto	u4871
  3642  0004E8  EF79  F002         	goto	u4870
  3643  0004EC                     u4871:
  3644  0004EC  FFFF               	dw	65535	; assembler added errata NOP
  3645  0004EE  EFBB  F002         	goto	l4193
  3646  0004F2                     u4870:
  3647  0004F2                     l4187:
  3648  0004F2  FFFF               	dw	65535	; assembler added errata NOP
  3649                           
  3650                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 803: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 805:             *fmt += ((si
      +                          zeof("hhd")/sizeof("hhd"[0]))-1);
  3651  0004F4  0E03               	movlw	3
  3652  0004F6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3653  0004FA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3654  0004FE  26DE               	addwf	postinc2,f,c
  3655  000500  0E00               	movlw	0
  3656  000502  22DD               	addwfc	postdec2,f,c
  3657                           
  3658                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 806:             
      +                          ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3659  000504  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3660  000508  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3661  00050C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3662  000510  0E02               	movlw	2
  3663  000512  26DE               	addwf	postinc2,f,c
  3664  000514  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3665  000518  0E00               	movlw	0
  3666  00051A  22DD               	addwfc	postdec2,f,c
  3667  00051C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3668  000520  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3669  000524  50DF               	movf	indf2,w,c
  3670  000526  6E55               	movwf	vfpfcnvrt@ll^0,c
  3671  000528  0E00               	movlw	0
  3672  00052A  BE55               	btfsc	vfpfcnvrt@ll^0,7,c
  3673  00052C  0EFF               	movlw	-1
  3674  00052E  6E56               	movwf	(vfpfcnvrt@ll+1)^0,c
  3675  000530  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  3676  000532  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  3677  000534  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  3678  000536  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  3679  000538  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  3680  00053A  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  3681  00053C                     l4189:
  3682  00053C  FFFF               	dw	65535	; assembler added errata NOP
  3683                           
  3684                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 808:             
      +                          return dtoa(fp, ll);
  3685  00053E  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  3686  000542  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3687  000546  C055  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  3688  00054A  C056  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3689  00054E  C057  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3690  000552  C058  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3691  000556  C059  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3692  00055A  C05A  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3693  00055E  C05B  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3694  000562  C05C  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3695  000566  EC38  F015         	call	_dtoa	;wreg free
  3696  00056A  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  3697  00056E  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3698  000572  EF2E  F00A         	goto	l1205
  3699  000576                     l4193:
  3700  000576  FFFF               	dw	65535	; assembler added errata NOP
  3701                           
  3702                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          !strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", ((sizeo
      +                          f("hi")/sizeof("hi"[0]))-1))) {
  3703  000578  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3704  00057C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3705  000580  CFDE F001          	movff	postinc2,strncmp@_l
  3706  000584  CFDD F002          	movff	postdec2,strncmp@_l+1
  3707  000588  0ED0               	movlw	low (STR_9+1)
  3708  00058A  6E03               	movwf	strncmp@_r^0,c
  3709  00058C  0E7F               	movlw	high (STR_9+1)
  3710  00058E  6E04               	movwf	(strncmp@_r+1)^0,c
  3711  000590  0E00               	movlw	0
  3712  000592  6E06               	movwf	(strncmp@n+1)^0,c
  3713  000594  0E02               	movlw	2
  3714  000596  6E05               	movwf	strncmp@n^0,c
  3715  000598  EC44  F03E         	call	_strncmp	;wreg free
  3716  00059C  5001               	movf	?_strncmp^0,w,c
  3717  00059E  1002               	iorwf	(?_strncmp+1)^0,w,c
  3718  0005A0  B4D8               	btfsc	status,2,c
  3719  0005A2  EFD5  F002         	goto	u4881
  3720  0005A6  EFD8  F002         	goto	u4880
  3721  0005AA                     u4881:
  3722  0005AA  FFFF               	dw	65535	; assembler added errata NOP
  3723  0005AC  EFF5  F002         	goto	l4197
  3724  0005B0                     u4880:
  3725  0005B0  FFFF               	dw	65535	; assembler added errata NOP
  3726  0005B2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3727  0005B6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3728  0005BA  CFDE F001          	movff	postinc2,strncmp@_l
  3729  0005BE  CFDD F002          	movff	postdec2,strncmp@_l+1
  3730  0005C2  0ED4               	movlw	low (STR_13+1)
  3731  0005C4  6E03               	movwf	strncmp@_r^0,c
  3732  0005C6  0E7F               	movlw	high (STR_13+1)
  3733  0005C8  6E04               	movwf	(strncmp@_r+1)^0,c
  3734  0005CA  0E00               	movlw	0
  3735  0005CC  6E06               	movwf	(strncmp@n+1)^0,c
  3736  0005CE  0E02               	movlw	2
  3737  0005D0  6E05               	movwf	strncmp@n^0,c
  3738  0005D2  EC44  F03E         	call	_strncmp	;wreg free
  3739  0005D6  5001               	movf	?_strncmp^0,w,c
  3740  0005D8  1002               	iorwf	(?_strncmp+1)^0,w,c
  3741  0005DA  A4D8               	btfss	status,2,c
  3742  0005DC  EFF2  F002         	goto	u4891
  3743  0005E0  EFF5  F002         	goto	u4890
  3744  0005E4                     u4891:
  3745  0005E4  FFFF               	dw	65535	; assembler added errata NOP
  3746  0005E6  EF1D  F003         	goto	l4203
  3747  0005EA                     u4890:
  3748  0005EA                     l4197:
  3749  0005EA  FFFF               	dw	65535	; assembler added errata NOP
  3750                           
  3751                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 815: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 817:             *fmt += ((si
      +                          zeof("hd")/sizeof("hd"[0]))-1);
  3752  0005EC  0E02               	movlw	2
  3753  0005EE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3754  0005F2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3755  0005F6  26DE               	addwf	postinc2,f,c
  3756  0005F8  0E00               	movlw	0
  3757  0005FA  22DD               	addwfc	postdec2,f,c
  3758                           
  3759                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 818:             
      +                          ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  3760  0005FC  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3761  000600  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3762  000604  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3763  000608  0E02               	movlw	2
  3764  00060A  26DE               	addwf	postinc2,f,c
  3765  00060C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3766  000610  0E00               	movlw	0
  3767  000612  22DD               	addwfc	postdec2,f,c
  3768  000614  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3769  000618  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3770  00061C  CFDE F055          	movff	postinc2,vfpfcnvrt@ll
  3771  000620  CFDD F056          	movff	postdec2,vfpfcnvrt@ll+1
  3772  000624  0E00               	movlw	0
  3773  000626  BE56               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  3774  000628  0EFF               	movlw	-1
  3775  00062A  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  3776  00062C  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  3777  00062E  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  3778  000630  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  3779  000632  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  3780  000634  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  3781  000636  EF9E  F002         	goto	l4189
  3782  00063A                     l4203:
  3783  00063A  FFFF               	dw	65535	; assembler added errata NOP
  3784                           
  3785                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3786  00063C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3787  000640  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3788  000644  CFDE FFF6          	movff	postinc2,tblptrl
  3789  000648  CFDD FFF7          	movff	postdec2,tblptrh
  3790  00064C                     	if	0	;tblptru may be non-zero
  3791  00064C                     	endif
  3792  00064C                     	if	0	;tblptru may be non-zero
  3793  00064C                     	endif
  3794  00064C  0008               	tblrd		*
  3795  00064E  FFFF               	dw	65535	; errata NOP
  3796  000650  50F5               	movf	tablat,w,c
  3797  000652  0A64               	xorlw	100
  3798  000654  B4D8               	btfsc	status,2,c
  3799  000656  EF2F  F003         	goto	u4901
  3800  00065A  EF32  F003         	goto	u4900
  3801  00065E                     u4901:
  3802  00065E  FFFF               	dw	65535	; assembler added errata NOP
  3803  000660  EF47  F003         	goto	l4207
  3804  000664                     u4900:
  3805  000664  FFFF               	dw	65535	; assembler added errata NOP
  3806  000666  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3807  00066A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3808  00066E  CFDE FFF6          	movff	postinc2,tblptrl
  3809  000672  CFDD FFF7          	movff	postdec2,tblptrh
  3810  000676                     	if	0	;tblptru may be non-zero
  3811  000676                     	endif
  3812  000676                     	if	0	;tblptru may be non-zero
  3813  000676                     	endif
  3814  000676  0008               	tblrd		*
  3815  000678  FFFF               	dw	65535	; errata NOP
  3816  00067A  50F5               	movf	tablat,w,c
  3817  00067C  0A69               	xorlw	105
  3818  00067E  A4D8               	btfss	status,2,c
  3819  000680  EF44  F003         	goto	u4911
  3820  000684  EF47  F003         	goto	u4910
  3821  000688                     u4911:
  3822  000688  FFFF               	dw	65535	; assembler added errata NOP
  3823  00068A  EF6E  F003         	goto	l4213
  3824  00068E                     u4910:
  3825  00068E                     l4207:
  3826  00068E  FFFF               	dw	65535	; assembler added errata NOP
  3827                           
  3828                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  3829  000690  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3830  000694  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3831  000698  2ADE               	incf	postinc2,f,c
  3832  00069A  0E00               	movlw	0
  3833  00069C  22DD               	addwfc	postdec2,f,c
  3834                           
  3835                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3836  00069E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3837  0006A2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3838  0006A6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3839  0006AA  0E02               	movlw	2
  3840  0006AC  26DE               	addwf	postinc2,f,c
  3841  0006AE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3842  0006B2  0E00               	movlw	0
  3843  0006B4  22DD               	addwfc	postdec2,f,c
  3844  0006B6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3845  0006BA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3846  0006BE  CFDE F055          	movff	postinc2,vfpfcnvrt@ll
  3847  0006C2  CFDD F056          	movff	postdec2,vfpfcnvrt@ll+1
  3848  0006C6  0E00               	movlw	0
  3849  0006C8  BE56               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  3850  0006CA  0EFF               	movlw	-1
  3851  0006CC  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  3852  0006CE  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  3853  0006D0  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  3854  0006D2  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  3855  0006D4  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  3856  0006D6  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  3857  0006D8  EF9E  F002         	goto	l4189
  3858  0006DC                     l4213:
  3859  0006DC  FFFF               	dw	65535	; assembler added errata NOP
  3860                           
  3861                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 883:         if (
      +                          !strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", ((sizeo
      +                          f("zi")/sizeof("zi"[0]))-1))) {
  3862  0006DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3863  0006E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3864  0006E6  CFDE F001          	movff	postinc2,strncmp@_l
  3865  0006EA  CFDD F002          	movff	postdec2,strncmp@_l+1
  3866  0006EE  0EEA               	movlw	low STR_27
  3867  0006F0  6E03               	movwf	strncmp@_r^0,c
  3868  0006F2  0E7F               	movlw	high STR_27
  3869  0006F4  6E04               	movwf	(strncmp@_r+1)^0,c
  3870  0006F6  0E00               	movlw	0
  3871  0006F8  6E06               	movwf	(strncmp@n+1)^0,c
  3872  0006FA  0E02               	movlw	2
  3873  0006FC  6E05               	movwf	strncmp@n^0,c
  3874  0006FE  EC44  F03E         	call	_strncmp	;wreg free
  3875  000702  5001               	movf	?_strncmp^0,w,c
  3876  000704  1002               	iorwf	(?_strncmp+1)^0,w,c
  3877  000706  B4D8               	btfsc	status,2,c
  3878  000708  EF88  F003         	goto	u4921
  3879  00070C  EF8B  F003         	goto	u4920
  3880  000710                     u4921:
  3881  000710  FFFF               	dw	65535	; assembler added errata NOP
  3882  000712  EFA8  F003         	goto	l4217
  3883  000716                     u4920:
  3884  000716  FFFF               	dw	65535	; assembler added errata NOP
  3885  000718  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3886  00071C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3887  000720  CFDE F001          	movff	postinc2,strncmp@_l
  3888  000724  CFDD F002          	movff	postdec2,strncmp@_l+1
  3889  000728  0EED               	movlw	low STR_31
  3890  00072A  6E03               	movwf	strncmp@_r^0,c
  3891  00072C  0E7F               	movlw	high STR_31
  3892  00072E  6E04               	movwf	(strncmp@_r+1)^0,c
  3893  000730  0E00               	movlw	0
  3894  000732  6E06               	movwf	(strncmp@n+1)^0,c
  3895  000734  0E02               	movlw	2
  3896  000736  6E05               	movwf	strncmp@n^0,c
  3897  000738  EC44  F03E         	call	_strncmp	;wreg free
  3898  00073C  5001               	movf	?_strncmp^0,w,c
  3899  00073E  1002               	iorwf	(?_strncmp+1)^0,w,c
  3900  000740  A4D8               	btfss	status,2,c
  3901  000742  EFA5  F003         	goto	u4931
  3902  000746  EFA8  F003         	goto	u4930
  3903  00074A                     u4931:
  3904  00074A  FFFF               	dw	65535	; assembler added errata NOP
  3905  00074C  EFD1  F003         	goto	l4223
  3906  000750                     u4930:
  3907  000750                     l4217:
  3908  000750  FFFF               	dw	65535	; assembler added errata NOP
  3909                           
  3910                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 884: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 886:             *fmt += ((si
      +                          zeof("zd")/sizeof("zd"[0]))-1);
  3911  000752  0E02               	movlw	2
  3912  000754  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3913  000758  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3914  00075C  26DE               	addwf	postinc2,f,c
  3915  00075E  0E00               	movlw	0
  3916  000760  22DD               	addwfc	postdec2,f,c
  3917                           
  3918                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 887:             
      +                          ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3919  000762  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3920  000766  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3921  00076A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3922  00076E  0E02               	movlw	2
  3923  000770  26DE               	addwf	postinc2,f,c
  3924  000772  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3925  000776  0E00               	movlw	0
  3926  000778  22DD               	addwfc	postdec2,f,c
  3927  00077A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3928  00077E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3929  000782  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3930  000786  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3931  00078A  C04B  F055         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  3932  00078E  C04C  F056         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  3933  000792  6A57               	clrf	(vfpfcnvrt@ll+2)^0,c
  3934  000794  6A58               	clrf	(vfpfcnvrt@ll+3)^0,c
  3935  000796  6A59               	clrf	(vfpfcnvrt@ll+4)^0,c
  3936  000798  6A5A               	clrf	(vfpfcnvrt@ll+5)^0,c
  3937  00079A  6A5B               	clrf	(vfpfcnvrt@ll+6)^0,c
  3938  00079C  6A5C               	clrf	(vfpfcnvrt@ll+7)^0,c
  3939  00079E  EF9E  F002         	goto	l4189
  3940  0007A2                     l4223:
  3941  0007A2  FFFF               	dw	65535	; assembler added errata NOP
  3942                           
  3943                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 969:         if (
      +                          !strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  3944  0007A4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3945  0007A8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3946  0007AC  CFDE F001          	movff	postinc2,strncmp@_l
  3947  0007B0  CFDD F002          	movff	postdec2,strncmp@_l+1
  3948  0007B4  0EDB               	movlw	low STR_36
  3949  0007B6  6E03               	movwf	strncmp@_r^0,c
  3950  0007B8  0E7F               	movlw	high STR_36
  3951  0007BA  6E04               	movwf	(strncmp@_r+1)^0,c
  3952  0007BC  0E00               	movlw	0
  3953  0007BE  6E06               	movwf	(strncmp@n+1)^0,c
  3954  0007C0  0E03               	movlw	3
  3955  0007C2  6E05               	movwf	strncmp@n^0,c
  3956  0007C4  EC44  F03E         	call	_strncmp	;wreg free
  3957  0007C8  5001               	movf	?_strncmp^0,w,c
  3958  0007CA  1002               	iorwf	(?_strncmp+1)^0,w,c
  3959  0007CC  A4D8               	btfss	status,2,c
  3960  0007CE  EFEB  F003         	goto	u4941
  3961  0007D2  EFEE  F003         	goto	u4940
  3962  0007D6                     u4941:
  3963  0007D6  FFFF               	dw	65535	; assembler added errata NOP
  3964  0007D8  EF2F  F004         	goto	l4231
  3965  0007DC                     u4940:
  3966  0007DC  FFFF               	dw	65535	; assembler added errata NOP
  3967  0007DE                     
  3968                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 971:             
      +                          *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  3969  0007DE  0E03               	movlw	3
  3970  0007E0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3971  0007E4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3972  0007E8  26DE               	addwf	postinc2,f,c
  3973  0007EA  0E00               	movlw	0
  3974  0007EC  22DD               	addwfc	postdec2,f,c
  3975                           
  3976                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 972:             
      +                          llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3977  0007EE  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3978  0007F2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3979  0007F6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3980  0007FA  0E02               	movlw	2
  3981  0007FC  26DE               	addwf	postinc2,f,c
  3982  0007FE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3983  000802  0E00               	movlw	0
  3984  000804  22DD               	addwfc	postdec2,f,c
  3985  000806  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3986  00080A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3987  00080E  50DF               	movf	indf2,w,c
  3988  000810  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  3989  000812  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  3990  000814  6E60               	movwf	vfpfcnvrt@llu^0,c
  3991  000816  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  3992  000818  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  3993  00081A  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  3994  00081C  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  3995  00081E  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  3996  000820  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  3997  000822  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  3998  000824                     l4227:
  3999  000824  FFFF               	dw	65535	; assembler added errata NOP
  4000                           
  4001                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 974:             
      +                          return otoa(fp, llu);
  4002  000826  C043  F01C         	movff	vfpfcnvrt@fp,otoa@fp
  4003  00082A  C044  F01D         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  4004  00082E  C060  F01E         	movff	vfpfcnvrt@llu,otoa@d
  4005  000832  C061  F01F         	movff	vfpfcnvrt@llu+1,otoa@d+1
  4006  000836  C062  F020         	movff	vfpfcnvrt@llu+2,otoa@d+2
  4007  00083A  C063  F021         	movff	vfpfcnvrt@llu+3,otoa@d+3
  4008  00083E  C064  F022         	movff	vfpfcnvrt@llu+4,otoa@d+4
  4009  000842  C065  F023         	movff	vfpfcnvrt@llu+5,otoa@d+5
  4010  000846  C066  F024         	movff	vfpfcnvrt@llu+6,otoa@d+6
  4011  00084A  C067  F025         	movff	vfpfcnvrt@llu+7,otoa@d+7
  4012  00084E  EC80  F019         	call	_otoa	;wreg free
  4013  000852  C01C  F043         	movff	?_otoa,?_vfpfcnvrt
  4014  000856  C01D  F044         	movff	?_otoa+1,?_vfpfcnvrt+1
  4015  00085A  EF2E  F00A         	goto	l1205
  4016  00085E                     l4231:
  4017  00085E  FFFF               	dw	65535	; assembler added errata NOP
  4018                           
  4019                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 980:         if (
      +                          !strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  4020  000860  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4021  000864  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4022  000868  CFDE F001          	movff	postinc2,strncmp@_l
  4023  00086C  CFDD F002          	movff	postdec2,strncmp@_l+1
  4024  000870  0EDC               	movlw	low (STR_36+1)
  4025  000872  6E03               	movwf	strncmp@_r^0,c
  4026  000874  0E7F               	movlw	high (STR_36+1)
  4027  000876  6E04               	movwf	(strncmp@_r+1)^0,c
  4028  000878  0E00               	movlw	0
  4029  00087A  6E06               	movwf	(strncmp@n+1)^0,c
  4030  00087C  0E02               	movlw	2
  4031  00087E  6E05               	movwf	strncmp@n^0,c
  4032  000880  EC44  F03E         	call	_strncmp	;wreg free
  4033  000884  5001               	movf	?_strncmp^0,w,c
  4034  000886  1002               	iorwf	(?_strncmp+1)^0,w,c
  4035  000888  A4D8               	btfss	status,2,c
  4036  00088A  EF49  F004         	goto	u4951
  4037  00088E  EF4C  F004         	goto	u4950
  4038  000892                     u4951:
  4039  000892  FFFF               	dw	65535	; assembler added errata NOP
  4040  000894  EF75  F004         	goto	l4239
  4041  000898                     u4950:
  4042  000898  FFFF               	dw	65535	; assembler added errata NOP
  4043  00089A                     
  4044                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 982:             
      +                          *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  4045  00089A  0E02               	movlw	2
  4046  00089C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4047  0008A0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4048  0008A4  26DE               	addwf	postinc2,f,c
  4049  0008A6  0E00               	movlw	0
  4050  0008A8  22DD               	addwfc	postdec2,f,c
  4051                           
  4052                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 983:             
      +                          llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4053  0008AA  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4054  0008AE  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4055  0008B2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4056  0008B6  0E02               	movlw	2
  4057  0008B8  26DE               	addwf	postinc2,f,c
  4058  0008BA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4059  0008BE  0E00               	movlw	0
  4060  0008C0  22DD               	addwfc	postdec2,f,c
  4061  0008C2  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4062  0008C6  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4063  0008CA  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4064  0008CE  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4065  0008D2  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4066  0008D6  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4067  0008DA  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4068  0008DC  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4069  0008DE  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4070  0008E0  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4071  0008E2  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4072  0008E4  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4073  0008E6  EF12  F004         	goto	l4227
  4074  0008EA                     l4239:
  4075  0008EA  FFFF               	dw	65535	; assembler added errata NOP
  4076                           
  4077                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 990:         if (
      +                          *fmt[0] == 'o') {
  4078  0008EC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4079  0008F0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4080  0008F4  CFDE FFF6          	movff	postinc2,tblptrl
  4081  0008F8  CFDD FFF7          	movff	postdec2,tblptrh
  4082  0008FC                     	if	0	;tblptru may be non-zero
  4083  0008FC                     	endif
  4084  0008FC                     	if	0	;tblptru may be non-zero
  4085  0008FC                     	endif
  4086  0008FC  0008               	tblrd		*
  4087  0008FE  FFFF               	dw	65535	; errata NOP
  4088  000900  50F5               	movf	tablat,w,c
  4089  000902  0A6F               	xorlw	111
  4090  000904  A4D8               	btfss	status,2,c
  4091  000906  EF87  F004         	goto	u4961
  4092  00090A  EF8A  F004         	goto	u4960
  4093  00090E                     u4961:
  4094  00090E  FFFF               	dw	65535	; assembler added errata NOP
  4095  000910  EFB2  F004         	goto	l4247
  4096  000914                     u4960:
  4097  000914  FFFF               	dw	65535	; assembler added errata NOP
  4098  000916                     
  4099                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 992:             
      +                          ++*fmt;
  4100  000916  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4101  00091A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4102  00091E  2ADE               	incf	postinc2,f,c
  4103  000920  0E00               	movlw	0
  4104  000922  22DD               	addwfc	postdec2,f,c
  4105                           
  4106                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 993:             
      +                          llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int
      +                          )0));
  4107  000924  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4108  000928  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4109  00092C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4110  000930  0E02               	movlw	2
  4111  000932  26DE               	addwf	postinc2,f,c
  4112  000934  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4113  000938  0E00               	movlw	0
  4114  00093A  22DD               	addwfc	postdec2,f,c
  4115  00093C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4116  000940  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4117  000944  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4118  000948  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4119  00094C  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4120  000950  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4121  000954  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4122  000956  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4123  000958  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4124  00095A  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4125  00095C  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4126  00095E  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4127  000960  EF12  F004         	goto	l4227
  4128  000964                     l4247:
  4129  000964  FFFF               	dw	65535	; assembler added errata NOP
  4130                           
  4131                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1044:         if 
      +                          (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  4132  000966  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4133  00096A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4134  00096E  CFDE F001          	movff	postinc2,strncmp@_l
  4135  000972  CFDD F002          	movff	postdec2,strncmp@_l+1
  4136  000976  0EF3               	movlw	low STR_46
  4137  000978  6E03               	movwf	strncmp@_r^0,c
  4138  00097A  0E7F               	movlw	high STR_46
  4139  00097C  6E04               	movwf	(strncmp@_r+1)^0,c
  4140  00097E  0E00               	movlw	0
  4141  000980  6E06               	movwf	(strncmp@n+1)^0,c
  4142  000982  0E02               	movlw	2
  4143  000984  6E05               	movwf	strncmp@n^0,c
  4144  000986  EC44  F03E         	call	_strncmp	;wreg free
  4145  00098A  5001               	movf	?_strncmp^0,w,c
  4146  00098C  1002               	iorwf	(?_strncmp+1)^0,w,c
  4147  00098E  A4D8               	btfss	status,2,c
  4148  000990  EFCC  F004         	goto	u4971
  4149  000994  EFCF  F004         	goto	u4970
  4150  000998                     u4971:
  4151  000998  FFFF               	dw	65535	; assembler added errata NOP
  4152  00099A  EFF8  F004         	goto	l4255
  4153  00099E                     u4970:
  4154  00099E  FFFF               	dw	65535	; assembler added errata NOP
  4155  0009A0                     
  4156                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1046:            
      +                           *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  4157  0009A0  0E02               	movlw	2
  4158  0009A2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4159  0009A6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4160  0009AA  26DE               	addwf	postinc2,f,c
  4161  0009AC  0E00               	movlw	0
  4162  0009AE  22DD               	addwfc	postdec2,f,c
  4163                           
  4164                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1047:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4165  0009B0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4166  0009B4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4167  0009B8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4168  0009BC  0E02               	movlw	2
  4169  0009BE  26DE               	addwf	postinc2,f,c
  4170  0009C0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4171  0009C4  0E00               	movlw	0
  4172  0009C6  22DD               	addwfc	postdec2,f,c
  4173  0009C8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4174  0009CC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4175  0009D0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4176  0009D4  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4177  0009D8  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4178  0009DC  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4179  0009E0  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4180  0009E2  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4181  0009E4  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4182  0009E6  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4183  0009E8  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4184  0009EA  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4185  0009EC  EF12  F004         	goto	l4227
  4186  0009F0                     l4255:
  4187  0009F0  FFFF               	dw	65535	; assembler added errata NOP
  4188                           
  4189                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1058:         if 
      +                          (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  4190  0009F2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4191  0009F6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4192  0009FA  CFDE F001          	movff	postinc2,strncmp@_l
  4193  0009FE  CFDD F002          	movff	postdec2,strncmp@_l+1
  4194  000A02  0ED7               	movlw	low STR_51
  4195  000A04  6E03               	movwf	strncmp@_r^0,c
  4196  000A06  0E7F               	movlw	high STR_51
  4197  000A08  6E04               	movwf	(strncmp@_r+1)^0,c
  4198  000A0A  0E00               	movlw	0
  4199  000A0C  6E06               	movwf	(strncmp@n+1)^0,c
  4200  000A0E  0E03               	movlw	3
  4201  000A10  6E05               	movwf	strncmp@n^0,c
  4202  000A12  EC44  F03E         	call	_strncmp	;wreg free
  4203  000A16  5001               	movf	?_strncmp^0,w,c
  4204  000A18  1002               	iorwf	(?_strncmp+1)^0,w,c
  4205  000A1A  A4D8               	btfss	status,2,c
  4206  000A1C  EF12  F005         	goto	u4981
  4207  000A20  EF15  F005         	goto	u4980
  4208  000A24                     u4981:
  4209  000A24  FFFF               	dw	65535	; assembler added errata NOP
  4210  000A26  EF4B  F005         	goto	l4265
  4211  000A2A                     u4980:
  4212  000A2A  FFFF               	dw	65535	; assembler added errata NOP
  4213  000A2C                     
  4214                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1060:            
      +                           *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  4215  000A2C  0E03               	movlw	3
  4216  000A2E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4217  000A32  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4218  000A36  26DE               	addwf	postinc2,f,c
  4219  000A38  0E00               	movlw	0
  4220  000A3A  22DD               	addwfc	postdec2,f,c
  4221                           
  4222                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1061:            
      +                           vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  4223  000A3C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4224  000A40  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4225  000A44  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4226  000A48  0E02               	movlw	2
  4227  000A4A  26DE               	addwf	postinc2,f,c
  4228  000A4C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4229  000A50  0E00               	movlw	0
  4230  000A52  22DD               	addwfc	postdec2,f,c
  4231  000A54  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4232  000A58  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4233  000A5C  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  4234  000A60  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  4235  000A64                     
  4236                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1062:            
      +                           *(char *)vp = (char)nout;
  4237  000A64  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  4238  000A68  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  4239  000A6C  6AF8               	clrf	tblptru,c
  4240  000A6E  0E05               	movlw	(high __ramtop+-1)
  4241  000A70  64F7               	cpfsgt	tblptrh,c
  4242  000A72  D004               	bra	u4997
  4243  000A74  C084  FFF5         	movff	_nout,tablat
  4244  000A78  000C               	tblwt		*
  4245  000A7A  D006               	bra	u4990
  4246  000A7C                     u4997:
  4247  000A7C  CFF6 FFE1          	movff	tblptrl,fsr1l
  4248  000A80  CFF7 FFE2          	movff	tblptrh,fsr1h
  4249  000A84  C084  FFE7         	movff	_nout,indf1
  4250  000A88                     u4990:
  4251  000A88                     l4261:
  4252  000A88  FFFF               	dw	65535	; assembler added errata NOP
  4253                           
  4254                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1063:            
      +                           return 0;
  4255  000A8A  0E00               	movlw	0
  4256  000A8C  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  4257  000A8E  0E00               	movlw	0
  4258  000A90  6E43               	movwf	?_vfpfcnvrt^0,c
  4259  000A92  EF2E  F00A         	goto	l1205
  4260  000A96                     l4265:
  4261  000A96  FFFF               	dw	65535	; assembler added errata NOP
  4262                           
  4263                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1068:         if 
      +                          (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  4264  000A98  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4265  000A9C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4266  000AA0  CFDE F001          	movff	postinc2,strncmp@_l
  4267  000AA4  CFDD F002          	movff	postdec2,strncmp@_l+1
  4268  000AA8  0ED8               	movlw	low (STR_51+1)
  4269  000AAA  6E03               	movwf	strncmp@_r^0,c
  4270  000AAC  0E7F               	movlw	high (STR_51+1)
  4271  000AAE  6E04               	movwf	(strncmp@_r+1)^0,c
  4272  000AB0  0E00               	movlw	0
  4273  000AB2  6E06               	movwf	(strncmp@n+1)^0,c
  4274  000AB4  0E02               	movlw	2
  4275  000AB6  6E05               	movwf	strncmp@n^0,c
  4276  000AB8  EC44  F03E         	call	_strncmp	;wreg free
  4277  000ABC  5001               	movf	?_strncmp^0,w,c
  4278  000ABE  1002               	iorwf	(?_strncmp+1)^0,w,c
  4279  000AC0  A4D8               	btfss	status,2,c
  4280  000AC2  EF65  F005         	goto	u5001
  4281  000AC6  EF68  F005         	goto	u5000
  4282  000ACA                     u5001:
  4283  000ACA  FFFF               	dw	65535	; assembler added errata NOP
  4284  000ACC  EF9E  F005         	goto	l4275
  4285  000AD0                     u5000:
  4286  000AD0  FFFF               	dw	65535	; assembler added errata NOP
  4287  000AD2                     
  4288                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1070:            
      +                           *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  4289  000AD2  0E02               	movlw	2
  4290  000AD4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4291  000AD8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4292  000ADC  26DE               	addwf	postinc2,f,c
  4293  000ADE  0E00               	movlw	0
  4294  000AE0  22DD               	addwfc	postdec2,f,c
  4295                           
  4296                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1071:            
      +                           vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  4297  000AE2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4298  000AE6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4299  000AEA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4300  000AEE  0E02               	movlw	2
  4301  000AF0  26DE               	addwf	postinc2,f,c
  4302  000AF2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4303  000AF6  0E00               	movlw	0
  4304  000AF8  22DD               	addwfc	postdec2,f,c
  4305  000AFA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4306  000AFE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4307  000B02  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  4308  000B06  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  4309  000B0A                     
  4310                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1072:            
      +                           *(short *)vp = (short)nout;
  4311  000B0A  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  4312  000B0E  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  4313  000B12  6AF8               	clrf	tblptru,c
  4314  000B14  0E05               	movlw	(high __ramtop+-1)
  4315  000B16  64F7               	cpfsgt	tblptrh,c
  4316  000B18  D007               	bra	u5017
  4317  000B1A  C084  FFF5         	movff	_nout,tablat
  4318  000B1E  000D               	tblwt		*+
  4319  000B20  C085  FFF5         	movff	_nout+1,tablat
  4320  000B24  000C               	tblwt		*
  4321  000B26  D008               	bra	u5010
  4322  000B28                     u5017:
  4323  000B28  CFF6 FFE1          	movff	tblptrl,fsr1l
  4324  000B2C  CFF7 FFE2          	movff	tblptrh,fsr1h
  4325  000B30  C084  FFE6         	movff	_nout,postinc1
  4326  000B34  C085  FFE7         	movff	_nout+1,indf1
  4327  000B38                     u5010:
  4328  000B38  EF44  F005         	goto	l4261
  4329  000B3C                     l4275:
  4330  000B3C  FFFF               	dw	65535	; assembler added errata NOP
  4331                           
  4332                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1077:         if 
      +                          (*fmt[0] == 'n') {
  4333  000B3E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4334  000B42  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4335  000B46  CFDE FFF6          	movff	postinc2,tblptrl
  4336  000B4A  CFDD FFF7          	movff	postdec2,tblptrh
  4337  000B4E                     	if	0	;tblptru may be non-zero
  4338  000B4E                     	endif
  4339  000B4E                     	if	0	;tblptru may be non-zero
  4340  000B4E                     	endif
  4341  000B4E  0008               	tblrd		*
  4342  000B50  FFFF               	dw	65535	; errata NOP
  4343  000B52  50F5               	movf	tablat,w,c
  4344  000B54  0A6E               	xorlw	110
  4345  000B56  A4D8               	btfss	status,2,c
  4346  000B58  EFB0  F005         	goto	u5021
  4347  000B5C  EFB3  F005         	goto	u5020
  4348  000B60                     u5021:
  4349  000B60  FFFF               	dw	65535	; assembler added errata NOP
  4350  000B62  EFE8  F005         	goto	l4285
  4351  000B66                     u5020:
  4352  000B66  FFFF               	dw	65535	; assembler added errata NOP
  4353  000B68                     
  4354                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1078:            
      +                           ++*fmt;
  4355  000B68  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4356  000B6C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4357  000B70  2ADE               	incf	postinc2,f,c
  4358  000B72  0E00               	movlw	0
  4359  000B74  22DD               	addwfc	postdec2,f,c
  4360                           
  4361                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1079:            
      +                           vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  4362  000B76  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4363  000B7A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4364  000B7E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4365  000B82  0E02               	movlw	2
  4366  000B84  26DE               	addwf	postinc2,f,c
  4367  000B86  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4368  000B8A  0E00               	movlw	0
  4369  000B8C  22DD               	addwfc	postdec2,f,c
  4370  000B8E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4371  000B92  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4372  000B96  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  4373  000B9A  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  4374  000B9E                     
  4375                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1080:            
      +                           *(int *)vp = nout;
  4376  000B9E  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  4377  000BA2  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  4378  000BA6  6AF8               	clrf	tblptru,c
  4379  000BA8  0E05               	movlw	(high __ramtop+-1)
  4380  000BAA  64F7               	cpfsgt	tblptrh,c
  4381  000BAC  D007               	bra	u5037
  4382  000BAE  C084  FFF5         	movff	_nout,tablat
  4383  000BB2  000D               	tblwt		*+
  4384  000BB4  C085  FFF5         	movff	_nout+1,tablat
  4385  000BB8  000C               	tblwt		*
  4386  000BBA  D008               	bra	u5030
  4387  000BBC                     u5037:
  4388  000BBC  CFF6 FFE1          	movff	tblptrl,fsr1l
  4389  000BC0  CFF7 FFE2          	movff	tblptrh,fsr1h
  4390  000BC4  C084  FFE6         	movff	_nout,postinc1
  4391  000BC8  C085  FFE7         	movff	_nout+1,indf1
  4392  000BCC                     u5030:
  4393  000BCC  EF44  F005         	goto	l4261
  4394  000BD0                     l4285:
  4395  000BD0  FFFF               	dw	65535	; assembler added errata NOP
  4396                           
  4397                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1125:         if 
      +                          (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  4398  000BD2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4399  000BD6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4400  000BDA  CFDE F001          	movff	postinc2,strncmp@_l
  4401  000BDE  CFDD F002          	movff	postdec2,strncmp@_l+1
  4402  000BE2  0EF0               	movlw	low STR_61
  4403  000BE4  6E03               	movwf	strncmp@_r^0,c
  4404  000BE6  0E7F               	movlw	high STR_61
  4405  000BE8  6E04               	movwf	(strncmp@_r+1)^0,c
  4406  000BEA  0E00               	movlw	0
  4407  000BEC  6E06               	movwf	(strncmp@n+1)^0,c
  4408  000BEE  0E02               	movlw	2
  4409  000BF0  6E05               	movwf	strncmp@n^0,c
  4410  000BF2  EC44  F03E         	call	_strncmp	;wreg free
  4411  000BF6  5001               	movf	?_strncmp^0,w,c
  4412  000BF8  1002               	iorwf	(?_strncmp+1)^0,w,c
  4413  000BFA  A4D8               	btfss	status,2,c
  4414  000BFC  EF02  F006         	goto	u5041
  4415  000C00  EF05  F006         	goto	u5040
  4416  000C04                     u5041:
  4417  000C04  FFFF               	dw	65535	; assembler added errata NOP
  4418  000C06  EF3B  F006         	goto	l4295
  4419  000C0A                     u5040:
  4420  000C0A  FFFF               	dw	65535	; assembler added errata NOP
  4421  000C0C                     
  4422                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1127:            
      +                           *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  4423  000C0C  0E02               	movlw	2
  4424  000C0E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4425  000C12  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4426  000C16  26DE               	addwf	postinc2,f,c
  4427  000C18  0E00               	movlw	0
  4428  000C1A  22DD               	addwfc	postdec2,f,c
  4429                           
  4430                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1128:            
      +                           vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  4431  000C1C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4432  000C20  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4433  000C24  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4434  000C28  0E02               	movlw	2
  4435  000C2A  26DE               	addwf	postinc2,f,c
  4436  000C2C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4437  000C30  0E00               	movlw	0
  4438  000C32  22DD               	addwfc	postdec2,f,c
  4439  000C34  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4440  000C38  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4441  000C3C  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  4442  000C40  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  4443  000C44                     
  4444                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1129:            
      +                           *(size_t *)vp = (size_t)nout;
  4445  000C44  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  4446  000C48  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  4447  000C4C  6AF8               	clrf	tblptru,c
  4448  000C4E  0E05               	movlw	(high __ramtop+-1)
  4449  000C50  64F7               	cpfsgt	tblptrh,c
  4450  000C52  D007               	bra	u5057
  4451  000C54  C084  FFF5         	movff	_nout,tablat
  4452  000C58  000D               	tblwt		*+
  4453  000C5A  C085  FFF5         	movff	_nout+1,tablat
  4454  000C5E  000C               	tblwt		*
  4455  000C60  D008               	bra	u5050
  4456  000C62                     u5057:
  4457  000C62  CFF6 FFE1          	movff	tblptrl,fsr1l
  4458  000C66  CFF7 FFE2          	movff	tblptrh,fsr1h
  4459  000C6A  C084  FFE6         	movff	_nout,postinc1
  4460  000C6E  C085  FFE7         	movff	_nout+1,indf1
  4461  000C72                     u5050:
  4462  000C72  EF44  F005         	goto	l4261
  4463  000C76                     l4295:
  4464  000C76  FFFF               	dw	65535	; assembler added errata NOP
  4465                           
  4466                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1138:         if 
      +                          (*fmt[0] == 'p') {
  4467  000C78  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4468  000C7C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4469  000C80  CFDE FFF6          	movff	postinc2,tblptrl
  4470  000C84  CFDD FFF7          	movff	postdec2,tblptrh
  4471  000C88                     	if	0	;tblptru may be non-zero
  4472  000C88                     	endif
  4473  000C88                     	if	0	;tblptru may be non-zero
  4474  000C88                     	endif
  4475  000C88  0008               	tblrd		*
  4476  000C8A  FFFF               	dw	65535	; errata NOP
  4477  000C8C  50F5               	movf	tablat,w,c
  4478  000C8E  0A70               	xorlw	112
  4479  000C90  A4D8               	btfss	status,2,c
  4480  000C92  EF4D  F006         	goto	u5061
  4481  000C96  EF50  F006         	goto	u5060
  4482  000C9A                     u5061:
  4483  000C9A  FFFF               	dw	65535	; assembler added errata NOP
  4484  000C9C  EF94  F006         	goto	l4303
  4485  000CA0                     u5060:
  4486  000CA0  FFFF               	dw	65535	; assembler added errata NOP
  4487  000CA2                     
  4488                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1140:            
      +                           ++*fmt;
  4489  000CA2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4490  000CA6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4491  000CAA  2ADE               	incf	postinc2,f,c
  4492  000CAC  0E00               	movlw	0
  4493  000CAE  22DD               	addwfc	postdec2,f,c
  4494                           
  4495                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1141:            
      +                           llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0));
  4496  000CB0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4497  000CB4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4498  000CB8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4499  000CBC  0E02               	movlw	2
  4500  000CBE  26DE               	addwf	postinc2,f,c
  4501  000CC0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4502  000CC4  0E00               	movlw	0
  4503  000CC6  22DD               	addwfc	postdec2,f,c
  4504  000CC8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4505  000CCC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4506  000CD0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4507  000CD4  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4508  000CD8  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4509  000CDC  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4510  000CE0  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4511  000CE2  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4512  000CE4  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4513  000CE6  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4514  000CE8  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4515  000CEA  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4516  000CEC                     
  4517                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1143:            
      +                           return xtoa(fp, llu, 'x');
  4518  000CEC  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  4519  000CF0  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  4520  000CF4  C060  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  4521  000CF8  C061  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  4522  000CFC  C062  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  4523  000D00  C063  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  4524  000D04  C064  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  4525  000D08  C065  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  4526  000D0C  C066  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  4527  000D10  C067  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  4528  000D14  0E78               	movlw	120
  4529  000D16  6E26               	movwf	xtoa@x^0,c
  4530  000D18  ECD2  F016         	call	_xtoa	;wreg free
  4531  000D1C  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  4532  000D20  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  4533  000D24  EF2E  F00A         	goto	l1205
  4534  000D28                     l4303:
  4535  000D28  FFFF               	dw	65535	; assembler added errata NOP
  4536                           
  4537                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1149:         if 
      +                          (*fmt[0] == 's') {
  4538  000D2A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4539  000D2E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4540  000D32  CFDE FFF6          	movff	postinc2,tblptrl
  4541  000D36  CFDD FFF7          	movff	postdec2,tblptrh
  4542  000D3A                     	if	0	;tblptru may be non-zero
  4543  000D3A                     	endif
  4544  000D3A                     	if	0	;tblptru may be non-zero
  4545  000D3A                     	endif
  4546  000D3A  0008               	tblrd		*
  4547  000D3C  FFFF               	dw	65535	; errata NOP
  4548  000D3E  50F5               	movf	tablat,w,c
  4549  000D40  0A73               	xorlw	115
  4550  000D42  A4D8               	btfss	status,2,c
  4551  000D44  EFA6  F006         	goto	u5071
  4552  000D48  EFA9  F006         	goto	u5070
  4553  000D4C                     u5071:
  4554  000D4C  FFFF               	dw	65535	; assembler added errata NOP
  4555  000D4E  EFD5  F006         	goto	l4311
  4556  000D52                     u5070:
  4557  000D52  FFFF               	dw	65535	; assembler added errata NOP
  4558  000D54                     
  4559                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1151:            
      +                           ++*fmt;
  4560  000D54  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4561  000D58  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4562  000D5C  2ADE               	incf	postinc2,f,c
  4563  000D5E  0E00               	movlw	0
  4564  000D60  22DD               	addwfc	postdec2,f,c
  4565                           
  4566                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1152:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  4567  000D62  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4568  000D66  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4569  000D6A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4570  000D6E  0E02               	movlw	2
  4571  000D70  26DE               	addwf	postinc2,f,c
  4572  000D72  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4573  000D76  0E00               	movlw	0
  4574  000D78  22DD               	addwfc	postdec2,f,c
  4575  000D7A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4576  000D7E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4577  000D82  CFDE F04D          	movff	postinc2,vfpfcnvrt@cp
  4578  000D86  CFDD F04E          	movff	postdec2,vfpfcnvrt@cp+1
  4579  000D8A                     
  4580                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1154:            
      +                           return stoa(fp, cp);
  4581  000D8A  C043  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  4582  000D8E  C044  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  4583  000D92  C04D  F00C         	movff	vfpfcnvrt@cp,stoa@s
  4584  000D96  C04E  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  4585  000D9A  EC93  F01A         	call	_stoa	;wreg free
  4586  000D9E  C00A  F043         	movff	?_stoa,?_vfpfcnvrt
  4587  000DA2  C00B  F044         	movff	?_stoa+1,?_vfpfcnvrt+1
  4588  000DA6  EF2E  F00A         	goto	l1205
  4589  000DAA                     l4311:
  4590  000DAA  FFFF               	dw	65535	; assembler added errata NOP
  4591                           
  4592                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1161:         if 
      +                          (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  4593  000DAC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4594  000DB0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4595  000DB4  CFDE F001          	movff	postinc2,strncmp@_l
  4596  000DB8  CFDD F002          	movff	postdec2,strncmp@_l+1
  4597  000DBC  0EDF               	movlw	low STR_66
  4598  000DBE  6E03               	movwf	strncmp@_r^0,c
  4599  000DC0  0E7F               	movlw	high STR_66
  4600  000DC2  6E04               	movwf	(strncmp@_r+1)^0,c
  4601  000DC4  0E00               	movlw	0
  4602  000DC6  6E06               	movwf	(strncmp@n+1)^0,c
  4603  000DC8  0E03               	movlw	3
  4604  000DCA  6E05               	movwf	strncmp@n^0,c
  4605  000DCC  EC44  F03E         	call	_strncmp	;wreg free
  4606  000DD0  5001               	movf	?_strncmp^0,w,c
  4607  000DD2  1002               	iorwf	(?_strncmp+1)^0,w,c
  4608  000DD4  A4D8               	btfss	status,2,c
  4609  000DD6  EFEF  F006         	goto	u5081
  4610  000DDA  EFF2  F006         	goto	u5080
  4611  000DDE                     u5081:
  4612  000DDE  FFFF               	dw	65535	; assembler added errata NOP
  4613  000DE0  EF33  F007         	goto	l4319
  4614  000DE4                     u5080:
  4615  000DE4  FFFF               	dw	65535	; assembler added errata NOP
  4616  000DE6                     
  4617                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1163:            
      +                           *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  4618  000DE6  0E03               	movlw	3
  4619  000DE8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4620  000DEC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4621  000DF0  26DE               	addwf	postinc2,f,c
  4622  000DF2  0E00               	movlw	0
  4623  000DF4  22DD               	addwfc	postdec2,f,c
  4624                           
  4625                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1164:            
      +                           llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4626  000DF6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4627  000DFA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4628  000DFE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4629  000E02  0E02               	movlw	2
  4630  000E04  26DE               	addwf	postinc2,f,c
  4631  000E06  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4632  000E0A  0E00               	movlw	0
  4633  000E0C  22DD               	addwfc	postdec2,f,c
  4634  000E0E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4635  000E12  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4636  000E16  50DF               	movf	indf2,w,c
  4637  000E18  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  4638  000E1A  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  4639  000E1C  6E60               	movwf	vfpfcnvrt@llu^0,c
  4640  000E1E  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  4641  000E20  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4642  000E22  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4643  000E24  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4644  000E26  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4645  000E28  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4646  000E2A  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4647  000E2C                     l4315:
  4648  000E2C  FFFF               	dw	65535	; assembler added errata NOP
  4649                           
  4650                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1166:            
      +                           return utoa(fp, llu);
  4651  000E2E  C043  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  4652  000E32  C044  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  4653  000E36  C060  F01E         	movff	vfpfcnvrt@llu,utoa@d
  4654  000E3A  C061  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  4655  000E3E  C062  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  4656  000E42  C063  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  4657  000E46  C064  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  4658  000E4A  C065  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  4659  000E4E  C066  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  4660  000E52  C067  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  4661  000E56  EC6A  F018         	call	_utoa	;wreg free
  4662  000E5A  C01C  F043         	movff	?_utoa,?_vfpfcnvrt
  4663  000E5E  C01D  F044         	movff	?_utoa+1,?_vfpfcnvrt+1
  4664  000E62  EF2E  F00A         	goto	l1205
  4665  000E66                     l4319:
  4666  000E66  FFFF               	dw	65535	; assembler added errata NOP
  4667                           
  4668                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1172:         if 
      +                          (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  4669  000E68  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4670  000E6C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4671  000E70  CFDE F001          	movff	postinc2,strncmp@_l
  4672  000E74  CFDD F002          	movff	postdec2,strncmp@_l+1
  4673  000E78  0EE0               	movlw	low (STR_66+1)
  4674  000E7A  6E03               	movwf	strncmp@_r^0,c
  4675  000E7C  0E7F               	movlw	high (STR_66+1)
  4676  000E7E  6E04               	movwf	(strncmp@_r+1)^0,c
  4677  000E80  0E00               	movlw	0
  4678  000E82  6E06               	movwf	(strncmp@n+1)^0,c
  4679  000E84  0E02               	movlw	2
  4680  000E86  6E05               	movwf	strncmp@n^0,c
  4681  000E88  EC44  F03E         	call	_strncmp	;wreg free
  4682  000E8C  5001               	movf	?_strncmp^0,w,c
  4683  000E8E  1002               	iorwf	(?_strncmp+1)^0,w,c
  4684  000E90  A4D8               	btfss	status,2,c
  4685  000E92  EF4D  F007         	goto	u5091
  4686  000E96  EF50  F007         	goto	u5090
  4687  000E9A                     u5091:
  4688  000E9A  FFFF               	dw	65535	; assembler added errata NOP
  4689  000E9C  EF79  F007         	goto	l4327
  4690  000EA0                     u5090:
  4691  000EA0  FFFF               	dw	65535	; assembler added errata NOP
  4692  000EA2                     
  4693                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1174:            
      +                           *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  4694  000EA2  0E02               	movlw	2
  4695  000EA4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4696  000EA8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4697  000EAC  26DE               	addwf	postinc2,f,c
  4698  000EAE  0E00               	movlw	0
  4699  000EB0  22DD               	addwfc	postdec2,f,c
  4700                           
  4701                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1175:            
      +                           llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4702  000EB2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4703  000EB6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4704  000EBA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4705  000EBE  0E02               	movlw	2
  4706  000EC0  26DE               	addwf	postinc2,f,c
  4707  000EC2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4708  000EC6  0E00               	movlw	0
  4709  000EC8  22DD               	addwfc	postdec2,f,c
  4710  000ECA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4711  000ECE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4712  000ED2  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4713  000ED6  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4714  000EDA  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4715  000EDE  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4716  000EE2  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4717  000EE4  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4718  000EE6  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4719  000EE8  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4720  000EEA  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4721  000EEC  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4722  000EEE  EF16  F007         	goto	l4315
  4723  000EF2                     l4327:
  4724  000EF2  FFFF               	dw	65535	; assembler added errata NOP
  4725                           
  4726                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1182:         if 
      +                          (*fmt[0] == 'u') {
  4727  000EF4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4728  000EF8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4729  000EFC  CFDE FFF6          	movff	postinc2,tblptrl
  4730  000F00  CFDD FFF7          	movff	postdec2,tblptrh
  4731  000F04                     	if	0	;tblptru may be non-zero
  4732  000F04                     	endif
  4733  000F04                     	if	0	;tblptru may be non-zero
  4734  000F04                     	endif
  4735  000F04  0008               	tblrd		*
  4736  000F06  FFFF               	dw	65535	; errata NOP
  4737  000F08  50F5               	movf	tablat,w,c
  4738  000F0A  0A75               	xorlw	117
  4739  000F0C  A4D8               	btfss	status,2,c
  4740  000F0E  EF8B  F007         	goto	u5101
  4741  000F12  EF8E  F007         	goto	u5100
  4742  000F16                     u5101:
  4743  000F16  FFFF               	dw	65535	; assembler added errata NOP
  4744  000F18  EFB6  F007         	goto	l4335
  4745  000F1C                     u5100:
  4746  000F1C  FFFF               	dw	65535	; assembler added errata NOP
  4747  000F1E                     
  4748                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1184:            
      +                           ++*fmt;
  4749  000F1E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4750  000F22  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4751  000F26  2ADE               	incf	postinc2,f,c
  4752  000F28  0E00               	movlw	0
  4753  000F2A  22DD               	addwfc	postdec2,f,c
  4754                           
  4755                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1185:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  4756  000F2C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4757  000F30  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4758  000F34  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4759  000F38  0E02               	movlw	2
  4760  000F3A  26DE               	addwf	postinc2,f,c
  4761  000F3C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4762  000F40  0E00               	movlw	0
  4763  000F42  22DD               	addwfc	postdec2,f,c
  4764  000F44  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4765  000F48  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4766  000F4C  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4767  000F50  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4768  000F54  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4769  000F58  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4770  000F5C  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4771  000F5E  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4772  000F60  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4773  000F62  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4774  000F64  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4775  000F66  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4776  000F68  EF16  F007         	goto	l4315
  4777  000F6C                     l4335:
  4778  000F6C  FFFF               	dw	65535	; assembler added errata NOP
  4779                           
  4780                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1236:         if 
      +                          (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  4781  000F6E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4782  000F72  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4783  000F76  CFDE F001          	movff	postinc2,strncmp@_l
  4784  000F7A  CFDD F002          	movff	postdec2,strncmp@_l+1
  4785  000F7E  0EF6               	movlw	low STR_76
  4786  000F80  6E03               	movwf	strncmp@_r^0,c
  4787  000F82  0E7F               	movlw	high STR_76
  4788  000F84  6E04               	movwf	(strncmp@_r+1)^0,c
  4789  000F86  0E00               	movlw	0
  4790  000F88  6E06               	movwf	(strncmp@n+1)^0,c
  4791  000F8A  0E02               	movlw	2
  4792  000F8C  6E05               	movwf	strncmp@n^0,c
  4793  000F8E  EC44  F03E         	call	_strncmp	;wreg free
  4794  000F92  5001               	movf	?_strncmp^0,w,c
  4795  000F94  1002               	iorwf	(?_strncmp+1)^0,w,c
  4796  000F96  A4D8               	btfss	status,2,c
  4797  000F98  EFD0  F007         	goto	u5111
  4798  000F9C  EFD3  F007         	goto	u5110
  4799  000FA0                     u5111:
  4800  000FA0  FFFF               	dw	65535	; assembler added errata NOP
  4801  000FA2  EFFC  F007         	goto	l4343
  4802  000FA6                     u5110:
  4803  000FA6  FFFF               	dw	65535	; assembler added errata NOP
  4804  000FA8                     
  4805                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1238:            
      +                           *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  4806  000FA8  0E02               	movlw	2
  4807  000FAA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4808  000FAE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4809  000FB2  26DE               	addwf	postinc2,f,c
  4810  000FB4  0E00               	movlw	0
  4811  000FB6  22DD               	addwfc	postdec2,f,c
  4812                           
  4813                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1239:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4814  000FB8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4815  000FBC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4816  000FC0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4817  000FC4  0E02               	movlw	2
  4818  000FC6  26DE               	addwf	postinc2,f,c
  4819  000FC8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4820  000FCC  0E00               	movlw	0
  4821  000FCE  22DD               	addwfc	postdec2,f,c
  4822  000FD0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4823  000FD4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4824  000FD8  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4825  000FDC  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4826  000FE0  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4827  000FE4  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4828  000FE8  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4829  000FEA  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4830  000FEC  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4831  000FEE  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4832  000FF0  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4833  000FF2  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4834  000FF4  EF16  F007         	goto	l4315
  4835  000FF8                     l4343:
  4836  000FF8  FFFF               	dw	65535	; assembler added errata NOP
  4837                           
  4838                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1249:         if 
      +                          (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hhX", ((
      +                          sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  4839  000FFA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4840  000FFE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4841  001002  CFDE F001          	movff	postinc2,strncmp@_l
  4842  001006  CFDD F002          	movff	postdec2,strncmp@_l+1
  4843  00100A  0EE3               	movlw	low STR_81
  4844  00100C  6E03               	movwf	strncmp@_r^0,c
  4845  00100E  0E7F               	movlw	high STR_81
  4846  001010  6E04               	movwf	(strncmp@_r+1)^0,c
  4847  001012  0E00               	movlw	0
  4848  001014  6E06               	movwf	(strncmp@n+1)^0,c
  4849  001016  0E03               	movlw	3
  4850  001018  6E05               	movwf	strncmp@n^0,c
  4851  00101A  EC44  F03E         	call	_strncmp	;wreg free
  4852  00101E  5001               	movf	?_strncmp^0,w,c
  4853  001020  1002               	iorwf	(?_strncmp+1)^0,w,c
  4854  001022  B4D8               	btfsc	status,2,c
  4855  001024  EF16  F008         	goto	u5121
  4856  001028  EF19  F008         	goto	u5120
  4857  00102C                     u5121:
  4858  00102C  FFFF               	dw	65535	; assembler added errata NOP
  4859  00102E  EF36  F008         	goto	l4347
  4860  001032                     u5120:
  4861  001032  FFFF               	dw	65535	; assembler added errata NOP
  4862  001034  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4863  001038  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4864  00103C  CFDE F001          	movff	postinc2,strncmp@_l
  4865  001040  CFDD F002          	movff	postdec2,strncmp@_l+1
  4866  001044  0ECB               	movlw	low STR_85
  4867  001046  6E03               	movwf	strncmp@_r^0,c
  4868  001048  0E7F               	movlw	high STR_85
  4869  00104A  6E04               	movwf	(strncmp@_r+1)^0,c
  4870  00104C  0E00               	movlw	0
  4871  00104E  6E06               	movwf	(strncmp@n+1)^0,c
  4872  001050  0E03               	movlw	3
  4873  001052  6E05               	movwf	strncmp@n^0,c
  4874  001054  EC44  F03E         	call	_strncmp	;wreg free
  4875  001058  5001               	movf	?_strncmp^0,w,c
  4876  00105A  1002               	iorwf	(?_strncmp+1)^0,w,c
  4877  00105C  A4D8               	btfss	status,2,c
  4878  00105E  EF33  F008         	goto	u5131
  4879  001062  EF36  F008         	goto	u5130
  4880  001066                     u5131:
  4881  001066  FFFF               	dw	65535	; assembler added errata NOP
  4882  001068  EF8D  F008         	goto	l4357
  4883  00106C                     u5130:
  4884  00106C                     l4347:
  4885  00106C  FFFF               	dw	65535	; assembler added errata NOP
  4886                           
  4887                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1250: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1252:             c = (*fmt)
      +                          [2];
  4888  00106E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4889  001072  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4890  001076  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  4891  00107A  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  4892  00107E  0E02               	movlw	2
  4893  001080  2649               	addwf	??_vfpfcnvrt^0,f,c
  4894  001082  0E00               	movlw	0
  4895  001084  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4896  001086  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4897  00108A  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4898  00108E                     	if	0	;tblptru may be non-zero
  4899  00108E                     	endif
  4900  00108E                     	if	0	;tblptru may be non-zero
  4901  00108E                     	endif
  4902  00108E  0008               	tblrd		*
  4903  001090  FFFF               	dw	65535	; errata NOP
  4904  001092  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  4905  001096                     
  4906                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1253:            
      +                           *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  4907  001096  0E03               	movlw	3
  4908  001098  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4909  00109C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4910  0010A0  26DE               	addwf	postinc2,f,c
  4911  0010A2  0E00               	movlw	0
  4912  0010A4  22DD               	addwfc	postdec2,f,c
  4913  0010A6                     
  4914                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1254:            
      +                           llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4915  0010A6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4916  0010AA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4917  0010AE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4918  0010B2  0E02               	movlw	2
  4919  0010B4  26DE               	addwf	postinc2,f,c
  4920  0010B6  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4921  0010BA  0E00               	movlw	0
  4922  0010BC  22DD               	addwfc	postdec2,f,c
  4923  0010BE  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4924  0010C2  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4925  0010C6  50DF               	movf	indf2,w,c
  4926  0010C8  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  4927  0010CA  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  4928  0010CC  6E60               	movwf	vfpfcnvrt@llu^0,c
  4929  0010CE  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  4930  0010D0  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4931  0010D2  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4932  0010D4  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4933  0010D6  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4934  0010D8  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4935  0010DA  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4936  0010DC                     l4353:
  4937  0010DC  FFFF               	dw	65535	; assembler added errata NOP
  4938                           
  4939                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1256:            
      +                           return xtoa(fp, llu, c);
  4940  0010DE  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  4941  0010E2  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  4942  0010E6  C060  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  4943  0010EA  C061  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  4944  0010EE  C062  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  4945  0010F2  C063  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  4946  0010F6  C064  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  4947  0010FA  C065  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  4948  0010FE  C066  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  4949  001102  C067  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  4950  001106  C05F  F026         	movff	vfpfcnvrt@c,xtoa@x
  4951  00110A  ECD2  F016         	call	_xtoa	;wreg free
  4952  00110E  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  4953  001112  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  4954  001116  EF2E  F00A         	goto	l1205
  4955  00111A                     l4357:
  4956  00111A  FFFF               	dw	65535	; assembler added errata NOP
  4957                           
  4958                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1262:         if 
      +                          (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", ((size
      +                          of("hX")/sizeof("hX"[0]))-1))) {
  4959  00111C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4960  001120  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4961  001124  CFDE F001          	movff	postinc2,strncmp@_l
  4962  001128  CFDD F002          	movff	postdec2,strncmp@_l+1
  4963  00112C  0EE4               	movlw	low (STR_81+1)
  4964  00112E  6E03               	movwf	strncmp@_r^0,c
  4965  001130  0E7F               	movlw	high (STR_81+1)
  4966  001132  6E04               	movwf	(strncmp@_r+1)^0,c
  4967  001134  0E00               	movlw	0
  4968  001136  6E06               	movwf	(strncmp@n+1)^0,c
  4969  001138  0E02               	movlw	2
  4970  00113A  6E05               	movwf	strncmp@n^0,c
  4971  00113C  EC44  F03E         	call	_strncmp	;wreg free
  4972  001140  5001               	movf	?_strncmp^0,w,c
  4973  001142  1002               	iorwf	(?_strncmp+1)^0,w,c
  4974  001144  B4D8               	btfsc	status,2,c
  4975  001146  EFA7  F008         	goto	u5141
  4976  00114A  EFAA  F008         	goto	u5140
  4977  00114E                     u5141:
  4978  00114E  FFFF               	dw	65535	; assembler added errata NOP
  4979  001150  EFC7  F008         	goto	l4361
  4980  001154                     u5140:
  4981  001154  FFFF               	dw	65535	; assembler added errata NOP
  4982  001156  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4983  00115A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4984  00115E  CFDE F001          	movff	postinc2,strncmp@_l
  4985  001162  CFDD F002          	movff	postdec2,strncmp@_l+1
  4986  001166  0ECC               	movlw	low (STR_85+1)
  4987  001168  6E03               	movwf	strncmp@_r^0,c
  4988  00116A  0E7F               	movlw	high (STR_85+1)
  4989  00116C  6E04               	movwf	(strncmp@_r+1)^0,c
  4990  00116E  0E00               	movlw	0
  4991  001170  6E06               	movwf	(strncmp@n+1)^0,c
  4992  001172  0E02               	movlw	2
  4993  001174  6E05               	movwf	strncmp@n^0,c
  4994  001176  EC44  F03E         	call	_strncmp	;wreg free
  4995  00117A  5001               	movf	?_strncmp^0,w,c
  4996  00117C  1002               	iorwf	(?_strncmp+1)^0,w,c
  4997  00117E  A4D8               	btfss	status,2,c
  4998  001180  EFC4  F008         	goto	u5151
  4999  001184  EFC7  F008         	goto	u5150
  5000  001188                     u5151:
  5001  001188  FFFF               	dw	65535	; assembler added errata NOP
  5002  00118A  EF04  F009         	goto	l4371
  5003  00118E                     u5150:
  5004  00118E                     l4361:
  5005  00118E  FFFF               	dw	65535	; assembler added errata NOP
  5006                           
  5007                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1263: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1265:             c = (*fmt)
      +                          [1];
  5008  001190  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5009  001194  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5010  001198  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  5011  00119C  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  5012  0011A0  0E01               	movlw	1
  5013  0011A2  2649               	addwf	??_vfpfcnvrt^0,f,c
  5014  0011A4  0E00               	movlw	0
  5015  0011A6  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5016  0011A8  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5017  0011AC  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5018  0011B0                     	if	0	;tblptru may be non-zero
  5019  0011B0                     	endif
  5020  0011B0                     	if	0	;tblptru may be non-zero
  5021  0011B0                     	endif
  5022  0011B0  0008               	tblrd		*
  5023  0011B2  FFFF               	dw	65535	; errata NOP
  5024  0011B4  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  5025  0011B8                     
  5026                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1266:            
      +                           *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  5027  0011B8  0E02               	movlw	2
  5028  0011BA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5029  0011BE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5030  0011C2  26DE               	addwf	postinc2,f,c
  5031  0011C4  0E00               	movlw	0
  5032  0011C6  22DD               	addwfc	postdec2,f,c
  5033  0011C8                     
  5034                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1267:            
      +                           llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5035  0011C8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5036  0011CC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5037  0011D0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5038  0011D4  0E02               	movlw	2
  5039  0011D6  26DE               	addwf	postinc2,f,c
  5040  0011D8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5041  0011DC  0E00               	movlw	0
  5042  0011DE  22DD               	addwfc	postdec2,f,c
  5043  0011E0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5044  0011E4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5045  0011E8  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5046  0011EC  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5047  0011F0  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5048  0011F4  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5049  0011F8  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5050  0011FA  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5051  0011FC  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5052  0011FE  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5053  001200  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5054  001202  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5055  001204  EF6E  F008         	goto	l4353
  5056  001208                     l4371:
  5057  001208  FFFF               	dw	65535	; assembler added errata NOP
  5058                           
  5059                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1274:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  5060  00120A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5061  00120E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5062  001212  CFDE FFF6          	movff	postinc2,tblptrl
  5063  001216  CFDD FFF7          	movff	postdec2,tblptrh
  5064  00121A                     	if	0	;tblptru may be non-zero
  5065  00121A                     	endif
  5066  00121A                     	if	0	;tblptru may be non-zero
  5067  00121A                     	endif
  5068  00121A  0008               	tblrd		*
  5069  00121C  FFFF               	dw	65535	; errata NOP
  5070  00121E  50F5               	movf	tablat,w,c
  5071  001220  0A78               	xorlw	120
  5072  001222  B4D8               	btfsc	status,2,c
  5073  001224  EF16  F009         	goto	u5161
  5074  001228  EF19  F009         	goto	u5160
  5075  00122C                     u5161:
  5076  00122C  FFFF               	dw	65535	; assembler added errata NOP
  5077  00122E  EF2E  F009         	goto	l4375
  5078  001232                     u5160:
  5079  001232  FFFF               	dw	65535	; assembler added errata NOP
  5080  001234  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5081  001238  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5082  00123C  CFDE FFF6          	movff	postinc2,tblptrl
  5083  001240  CFDD FFF7          	movff	postdec2,tblptrh
  5084  001244                     	if	0	;tblptru may be non-zero
  5085  001244                     	endif
  5086  001244                     	if	0	;tblptru may be non-zero
  5087  001244                     	endif
  5088  001244  0008               	tblrd		*
  5089  001246  FFFF               	dw	65535	; errata NOP
  5090  001248  50F5               	movf	tablat,w,c
  5091  00124A  0A58               	xorlw	88
  5092  00124C  A4D8               	btfss	status,2,c
  5093  00124E  EF2B  F009         	goto	u5171
  5094  001252  EF2E  F009         	goto	u5170
  5095  001256                     u5171:
  5096  001256  FFFF               	dw	65535	; assembler added errata NOP
  5097  001258  EF62  F009         	goto	l4385
  5098  00125C                     u5170:
  5099  00125C                     l4375:
  5100  00125C  FFFF               	dw	65535	; assembler added errata NOP
  5101                           
  5102                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1276:            
      +                           c = (*fmt)[0];
  5103  00125E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5104  001262  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5105  001266  CFDE FFF6          	movff	postinc2,tblptrl
  5106  00126A  CFDD FFF7          	movff	postdec2,tblptrh
  5107  00126E                     	if	0	;tblptru may be non-zero
  5108  00126E                     	endif
  5109  00126E                     	if	0	;tblptru may be non-zero
  5110  00126E                     	endif
  5111  00126E  0008               	tblrd		*
  5112  001270  FFFF               	dw	65535	; errata NOP
  5113  001272  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  5114  001276                     
  5115                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1277:            
      +                           ++*fmt;
  5116  001276  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5117  00127A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5118  00127E  2ADE               	incf	postinc2,f,c
  5119  001280  0E00               	movlw	0
  5120  001282  22DD               	addwfc	postdec2,f,c
  5121  001284                     
  5122                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1278:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  5123  001284  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5124  001288  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5125  00128C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5126  001290  0E02               	movlw	2
  5127  001292  26DE               	addwf	postinc2,f,c
  5128  001294  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5129  001298  0E00               	movlw	0
  5130  00129A  22DD               	addwfc	postdec2,f,c
  5131  00129C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5132  0012A0  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5133  0012A4  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5134  0012A8  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5135  0012AC  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5136  0012B0  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5137  0012B4  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5138  0012B6  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5139  0012B8  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5140  0012BA  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5141  0012BC  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5142  0012BE  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5143  0012C0  EF6E  F008         	goto	l4353
  5144  0012C4                     l4385:
  5145  0012C4  FFFF               	dw	65535	; assembler added errata NOP
  5146                           
  5147                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1337:         if 
      +                          (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", ((size
      +                          of("zX")/sizeof("zX"[0]))-1))) {
  5148  0012C6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5149  0012CA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5150  0012CE  CFDE F001          	movff	postinc2,strncmp@_l
  5151  0012D2  CFDD F002          	movff	postdec2,strncmp@_l+1
  5152  0012D6  0EF9               	movlw	low STR_99
  5153  0012D8  6E03               	movwf	strncmp@_r^0,c
  5154  0012DA  0E7F               	movlw	high STR_99
  5155  0012DC  6E04               	movwf	(strncmp@_r+1)^0,c
  5156  0012DE  0E00               	movlw	0
  5157  0012E0  6E06               	movwf	(strncmp@n+1)^0,c
  5158  0012E2  0E02               	movlw	2
  5159  0012E4  6E05               	movwf	strncmp@n^0,c
  5160  0012E6  EC44  F03E         	call	_strncmp	;wreg free
  5161  0012EA  5001               	movf	?_strncmp^0,w,c
  5162  0012EC  1002               	iorwf	(?_strncmp+1)^0,w,c
  5163  0012EE  B4D8               	btfsc	status,2,c
  5164  0012F0  EF7C  F009         	goto	u5181
  5165  0012F4  EF7F  F009         	goto	u5180
  5166  0012F8                     u5181:
  5167  0012F8  FFFF               	dw	65535	; assembler added errata NOP
  5168  0012FA  EF9C  F009         	goto	l4389
  5169  0012FE                     u5180:
  5170  0012FE  FFFF               	dw	65535	; assembler added errata NOP
  5171  001300  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5172  001304  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5173  001308  CFDE F001          	movff	postinc2,strncmp@_l
  5174  00130C  CFDD F002          	movff	postdec2,strncmp@_l+1
  5175  001310  0EE7               	movlw	low STR_103
  5176  001312  6E03               	movwf	strncmp@_r^0,c
  5177  001314  0E7F               	movlw	high STR_103
  5178  001316  6E04               	movwf	(strncmp@_r+1)^0,c
  5179  001318  0E00               	movlw	0
  5180  00131A  6E06               	movwf	(strncmp@n+1)^0,c
  5181  00131C  0E02               	movlw	2
  5182  00131E  6E05               	movwf	strncmp@n^0,c
  5183  001320  EC44  F03E         	call	_strncmp	;wreg free
  5184  001324  5001               	movf	?_strncmp^0,w,c
  5185  001326  1002               	iorwf	(?_strncmp+1)^0,w,c
  5186  001328  A4D8               	btfss	status,2,c
  5187  00132A  EF99  F009         	goto	u5191
  5188  00132E  EF9C  F009         	goto	u5190
  5189  001332                     u5191:
  5190  001332  FFFF               	dw	65535	; assembler added errata NOP
  5191  001334  EFD9  F009         	goto	l4399
  5192  001338                     u5190:
  5193  001338                     l4389:
  5194  001338  FFFF               	dw	65535	; assembler added errata NOP
  5195                           
  5196                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1338: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1340:             c = (*fmt)
      +                          [1];
  5197  00133A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5198  00133E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5199  001342  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  5200  001346  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  5201  00134A  0E01               	movlw	1
  5202  00134C  2649               	addwf	??_vfpfcnvrt^0,f,c
  5203  00134E  0E00               	movlw	0
  5204  001350  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5205  001352  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5206  001356  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5207  00135A                     	if	0	;tblptru may be non-zero
  5208  00135A                     	endif
  5209  00135A                     	if	0	;tblptru may be non-zero
  5210  00135A                     	endif
  5211  00135A  0008               	tblrd		*
  5212  00135C  FFFF               	dw	65535	; errata NOP
  5213  00135E  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  5214  001362                     
  5215                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1341:            
      +                           *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  5216  001362  0E02               	movlw	2
  5217  001364  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5218  001368  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5219  00136C  26DE               	addwf	postinc2,f,c
  5220  00136E  0E00               	movlw	0
  5221  001370  22DD               	addwfc	postdec2,f,c
  5222  001372                     
  5223                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1342:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5224  001372  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5225  001376  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5226  00137A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5227  00137E  0E02               	movlw	2
  5228  001380  26DE               	addwf	postinc2,f,c
  5229  001382  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5230  001386  0E00               	movlw	0
  5231  001388  22DD               	addwfc	postdec2,f,c
  5232  00138A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5233  00138E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5234  001392  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5235  001396  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5236  00139A  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5237  00139E  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5238  0013A2  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5239  0013A4  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5240  0013A6  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5241  0013A8  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5242  0013AA  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5243  0013AC  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5244  0013AE  EF6E  F008         	goto	l4353
  5245  0013B2                     l4399:
  5246  0013B2  FFFF               	dw	65535	; assembler added errata NOP
  5247                           
  5248                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  5249  0013B4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5250  0013B8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5251  0013BC  CFDE FFF6          	movff	postinc2,tblptrl
  5252  0013C0  CFDD FFF7          	movff	postdec2,tblptrh
  5253  0013C4                     	if	0	;tblptru may be non-zero
  5254  0013C4                     	endif
  5255  0013C4                     	if	0	;tblptru may be non-zero
  5256  0013C4                     	endif
  5257  0013C4  0008               	tblrd		*
  5258  0013C6  FFFF               	dw	65535	; errata NOP
  5259  0013C8  50F5               	movf	tablat,w,c
  5260  0013CA  0A25               	xorlw	37
  5261  0013CC  A4D8               	btfss	status,2,c
  5262  0013CE  EFEB  F009         	goto	u5201
  5263  0013D2  EFEE  F009         	goto	u5200
  5264  0013D6                     u5201:
  5265  0013D6  FFFF               	dw	65535	; assembler added errata NOP
  5266  0013D8  EF07  F00A         	goto	l4409
  5267  0013DC                     u5200:
  5268  0013DC  FFFF               	dw	65535	; assembler added errata NOP
  5269  0013DE                     
  5270                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  5271  0013DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5272  0013E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5273  0013E6  2ADE               	incf	postinc2,f,c
  5274  0013E8  0E00               	movlw	0
  5275  0013EA  22DD               	addwfc	postdec2,f,c
  5276  0013EC                     
  5277                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  5278  0013EC  0E00               	movlw	0
  5279  0013EE  6E02               	movwf	(fputc@c+1)^0,c
  5280  0013F0  0E25               	movlw	37
  5281  0013F2  6E01               	movwf	fputc@c^0,c
  5282  0013F4  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5283  0013F8  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5284  0013FC  ECED  F03B         	call	_fputc	;wreg free
  5285  001400                     l4405:
  5286  001400  FFFF               	dw	65535	; assembler added errata NOP
  5287                           
  5288                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  5289  001402  0E00               	movlw	0
  5290  001404  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  5291  001406  0E01               	movlw	1
  5292  001408  6E43               	movwf	?_vfpfcnvrt^0,c
  5293  00140A  EF2E  F00A         	goto	l1205
  5294  00140E                     l4409:
  5295  00140E  FFFF               	dw	65535	; assembler added errata NOP
  5296                           
  5297                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  5298  001410  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5299  001414  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5300  001418  2ADE               	incf	postinc2,f,c
  5301  00141A  0E00               	movlw	0
  5302  00141C  22DD               	addwfc	postdec2,f,c
  5303  00141E  EF44  F005         	goto	l4261
  5304  001422                     l4415:
  5305  001422  FFFF               	dw	65535	; assembler added errata NOP
  5306                           
  5307                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  5308  001424  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5309  001428  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5310  00142C  CFDE FFF6          	movff	postinc2,tblptrl
  5311  001430  CFDD FFF7          	movff	postdec2,tblptrh
  5312  001434                     	if	0	;tblptru may be non-zero
  5313  001434                     	endif
  5314  001434                     	if	0	;tblptru may be non-zero
  5315  001434                     	endif
  5316  001434  0008               	tblrd		*
  5317  001436  FFFF               	dw	65535	; errata NOP
  5318  001438  50F5               	movf	tablat,w,c
  5319  00143A  6E01               	movwf	fputc@c^0,c
  5320  00143C  6A02               	clrf	(fputc@c+1)^0,c
  5321  00143E  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5322  001442  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5323  001446  ECED  F03B         	call	_fputc	;wreg free
  5324  00144A                     
  5325                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  5326  00144A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5327  00144E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5328  001452  2ADE               	incf	postinc2,f,c
  5329  001454  0E00               	movlw	0
  5330  001456  22DD               	addwfc	postdec2,f,c
  5331  001458  EF00  F00A         	goto	l4405
  5332  00145C                     l1205:
  5333  00145C  FFFF               	dw	65535	; assembler added errata NOP
  5334  00145E  0012               	return		;funcret
  5335  001460  FFFF               	dw	65535	; errata NOP
  5336  001462                     __end_of_vfpfcnvrt:
  5337                           	callstack 0
  5338                           
  5339 ;; *************** function _xtoa *****************
  5340 ;; Defined at:
  5341 ;;		line 623 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  5342 ;; Parameters:    Size  Location     Type
  5343 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5344 ;;		 -> vsnprintf@f(6), 
  5345 ;;  d               8   29[COMRAM] unsigned long long 
  5346 ;;  x               1   37[COMRAM] unsigned char 
  5347 ;; Auto vars:     Size  Location     Type
  5348 ;;  n               8   54[COMRAM] unsigned long long 
  5349 ;;  c               2   64[COMRAM] int 
  5350 ;;  i               2   62[COMRAM] int 
  5351 ;;  w               2   52[COMRAM] int 
  5352 ;;  p               2   50[COMRAM] int 
  5353 ;; Return value:  Size  Location     Type
  5354 ;;                  2   27[COMRAM] int 
  5355 ;; Registers used:
  5356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5357 ;; Tracked objects:
  5358 ;;		On entry : 0/0
  5359 ;;		On exit  : 0/0
  5360 ;;		Unchanged: 0/0
  5361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5362 ;;      Params:        11       0       0       0       0       0       0
  5363 ;;      Locals:        20       0       0       0       0       0       0
  5364 ;;      Temps:          8       0       0       0       0       0       0
  5365 ;;      Totals:        39       0       0       0       0       0       0
  5366 ;;Total ram usage:       39 bytes
  5367 ;; Hardware stack levels used:    1
  5368 ;; Hardware stack levels required when called:    5
  5369 ;; This function calls:
  5370 ;;		_isalpha
  5371 ;;		_isupper
  5372 ;;		_pad
  5373 ;;		_toupper
  5374 ;; This function is called by:
  5375 ;;		_vfpfcnvrt
  5376 ;; This function uses a non-reentrant model
  5377 ;;
  5378                           
  5379                           	psect	text8
  5380  002DA4                     __ptext8:
  5381                           	callstack 0
  5382  002DA4                     _xtoa:
  5383                           	callstack 0
  5384  002DA4  FFFF               	dw	65535	; assembler added errata NOP
  5385  002DA6                     
  5386                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 623: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 624: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 625:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources
      +                          \c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0)) {
  5387  002DA6  0100               	movlb	0	; () banked
  5388  002DA8  BF89               	btfsc	(_prec+1)& (0+255),7,b
  5389  002DAA  EFD9  F016         	goto	u4041
  5390  002DAE  EFDC  F016         	goto	u4040
  5391  002DB2                     u4041:
  5392  002DB2  FFFF               	dw	65535	; assembler added errata NOP
  5393  002DB4  EFDE  F016         	goto	l3771
  5394  002DB8                     u4040:
  5395  002DB8  FFFF               	dw	65535	; assembler added errata NOP
  5396  002DBA                     
  5397                           ; BSR set to: 0
  5398                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 630:         flag
      +                          s &= ~(1 << 1);
  5399  002DBA  938A               	bcf	_flags& (0+255),1,b
  5400  002DBC                     l3771:
  5401  002DBC  FFFF               	dw	65535	; assembler added errata NOP
  5402                           
  5403                           ; BSR set to: 0
  5404                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 632:     p = (0 <
      +                           prec) ? prec : 1;
  5405  002DBE  BF89               	btfsc	(_prec+1)& (0+255),7,b
  5406  002DC0  EFED  F016         	goto	u4050
  5407  002DC4  5189               	movf	(_prec+1)& (0+255),w,b
  5408  002DC6  E106               	bnz	u4051
  5409  002DC8  0588               	decf	_prec& (0+255),w,b
  5410  002DCA  B0D8               	btfsc	status,0,c
  5411  002DCC  EFEA  F016         	goto	u4051
  5412  002DD0  EFED  F016         	goto	u4050
  5413  002DD4                     u4051:
  5414  002DD4  FFFF               	dw	65535	; assembler added errata NOP
  5415  002DD6  EFF4  F016         	goto	l1143
  5416  002DDA                     u4050:
  5417  002DDA  FFFF               	dw	65535	; assembler added errata NOP
  5418  002DDC                     
  5419                           ; BSR set to: 0
  5420  002DDC  0E00               	movlw	0
  5421  002DDE  6E34               	movwf	(xtoa@p+1)^0,c
  5422  002DE0  0E01               	movlw	1
  5423  002DE2  6E33               	movwf	xtoa@p^0,c
  5424  002DE4  EFF9  F016         	goto	l1145
  5425  002DE8                     l1143:
  5426  002DE8  FFFF               	dw	65535	; assembler added errata NOP
  5427                           
  5428                           ; BSR set to: 0
  5429  002DEA  C088  F033         	movff	_prec,xtoa@p
  5430  002DEE  C089  F034         	movff	_prec+1,xtoa@p+1
  5431  002DF2                     l1145:
  5432  002DF2  FFFF               	dw	65535	; assembler added errata NOP
  5433                           
  5434                           ; BSR set to: 0
  5435                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 633:     w = widt
      +                          h;
  5436  002DF4  C086  F035         	movff	_width,xtoa@w
  5437  002DF8  C087  F036         	movff	_width+1,xtoa@w+1
  5438                           
  5439                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 634:     if (flag
      +                          s & (1 << 4)) {
  5440  002DFC  A98A               	btfss	_flags& (0+255),4,b
  5441  002DFE  EF03  F017         	goto	u4061
  5442  002E02  EF06  F017         	goto	u4060
  5443  002E06                     u4061:
  5444  002E06  FFFF               	dw	65535	; assembler added errata NOP
  5445  002E08  EF0B  F017         	goto	l3777
  5446  002E0C                     u4060:
  5447  002E0C  FFFF               	dw	65535	; assembler added errata NOP
  5448  002E0E                     
  5449                           ; BSR set to: 0
  5450                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 635:         w -=
      +                           2;
  5451  002E0E  0EFE               	movlw	254
  5452  002E10  2635               	addwf	xtoa@w^0,f,c
  5453  002E12  0EFF               	movlw	255
  5454  002E14  2236               	addwfc	(xtoa@w+1)^0,f,c
  5455  002E16                     l3777:
  5456  002E16  FFFF               	dw	65535	; assembler added errata NOP
  5457                           
  5458                           ; BSR set to: 0
  5459                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 639:     n = d;
  5460  002E18  C01E  F037         	movff	xtoa@d,xtoa@n
  5461  002E1C  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  5462  002E20  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  5463  002E24  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  5464  002E28  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  5465  002E2C  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  5466  002E30  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  5467  002E34  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  5468  002E38                     
  5469                           ; BSR set to: 0
  5470                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 640:     i = size
      +                          of(dbuf) - 1;
  5471  002E38  0E00               	movlw	0
  5472  002E3A  6E40               	movwf	(xtoa@i+1)^0,c
  5473  002E3C  0E1F               	movlw	31
  5474  002E3E  6E3F               	movwf	xtoa@i^0,c
  5475  002E40                     
  5476                           ; BSR set to: 0
  5477                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 641:     dbuf[i] 
      +                          = '\0';
  5478  002E40  0E00               	movlw	0
  5479  002E42  6FAD               	movwf	(_dbuf+31)& (0+255),b
  5480                           
  5481                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5482  002E44  EFE9  F017         	goto	l3813
  5483  002E48                     l3783:
  5484  002E48  FFFF               	dw	65535	; assembler added errata NOP
  5485                           
  5486                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 643:         --i;
  5487  002E4A  063F               	decf	xtoa@i^0,f,c
  5488  002E4C  A0D8               	btfss	status,0,c
  5489  002E4E  0640               	decf	(xtoa@i+1)^0,f,c
  5490  002E50                     
  5491                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 644:         c = 
      +                          n & 0x0f;
  5492  002E50  0E0F               	movlw	15
  5493  002E52  1437               	andwf	xtoa@n^0,w,c
  5494  002E54  6E41               	movwf	xtoa@c^0,c
  5495  002E56  6A42               	clrf	(xtoa@c+1)^0,c
  5496  002E58                     
  5497                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 645:         c = 
      +                          (c < 10) ? '0' + c : 'a' + (c - 10);
  5498  002E58  BE42               	btfsc	(xtoa@c+1)^0,7,c
  5499  002E5A  EF38  F017         	goto	u4071
  5500  002E5E  5042               	movf	(xtoa@c+1)^0,w,c
  5501  002E60  E10A               	bnz	u4070
  5502  002E62  0E0A               	movlw	10
  5503  002E64  5C41               	subwf	xtoa@c^0,w,c
  5504  002E66  A0D8               	btfss	status,0,c
  5505  002E68  EF38  F017         	goto	u4071
  5506  002E6C  EF3B  F017         	goto	u4070
  5507  002E70                     u4071:
  5508  002E70  FFFF               	dw	65535	; assembler added errata NOP
  5509  002E72  EF44  F017         	goto	l3791
  5510  002E76                     u4070:
  5511  002E76  FFFF               	dw	65535	; assembler added errata NOP
  5512  002E78  0E57               	movlw	87
  5513  002E7A  2441               	addwf	xtoa@c^0,w,c
  5514  002E7C  6E41               	movwf	xtoa@c^0,c
  5515  002E7E  0E00               	movlw	0
  5516  002E80  2042               	addwfc	(xtoa@c+1)^0,w,c
  5517  002E82  6E42               	movwf	(xtoa@c+1)^0,c
  5518  002E84  EF4B  F017         	goto	l1152
  5519  002E88                     l3791:
  5520  002E88  FFFF               	dw	65535	; assembler added errata NOP
  5521  002E8A  0E30               	movlw	48
  5522  002E8C  2441               	addwf	xtoa@c^0,w,c
  5523  002E8E  6E41               	movwf	xtoa@c^0,c
  5524  002E90  0E00               	movlw	0
  5525  002E92  2042               	addwfc	(xtoa@c+1)^0,w,c
  5526  002E94  6E42               	movwf	(xtoa@c+1)^0,c
  5527  002E96                     l1152:
  5528  002E96  FFFF               	dw	65535	; assembler added errata NOP
  5529  002E98  0EBF               	movlw	191
  5530  002E9A  6E27               	movwf	??_xtoa^0,c
  5531  002E9C  0EFF               	movlw	255
  5532  002E9E  6E28               	movwf	(??_xtoa+1)^0,c
  5533  002EA0  5026               	movf	xtoa@x^0,w,c
  5534  002EA2  6E29               	movwf	(??_xtoa+2)^0,c
  5535  002EA4  6A2A               	clrf	(??_xtoa+3)^0,c
  5536  002EA6  5027               	movf	??_xtoa^0,w,c
  5537  002EA8  2629               	addwf	(??_xtoa+2)^0,f,c
  5538  002EAA  5028               	movf	(??_xtoa+1)^0,w,c
  5539  002EAC  222A               	addwfc	(??_xtoa+3)^0,f,c
  5540  002EAE  502A               	movf	(??_xtoa+3)^0,w,c
  5541  002EB0  E10B               	bnz	u4080
  5542  002EB2  0E1A               	movlw	26
  5543  002EB4  5C29               	subwf	(??_xtoa+2)^0,w,c
  5544  002EB6  A0D8               	btfss	status,0,c
  5545  002EB8  EF60  F017         	goto	u4081
  5546  002EBC  EF64  F017         	goto	u4080
  5547  002EC0                     u4081:
  5548  002EC0  FFFF               	dw	65535	; assembler added errata NOP
  5549  002EC2  0E01               	movlw	1
  5550  002EC4  EF66  F017         	goto	u4090
  5551  002EC8                     u4080:
  5552  002EC8  FFFF               	dw	65535	; assembler added errata NOP
  5553  002ECA  0E00               	movlw	0
  5554  002ECC                     u4090:
  5555  002ECC  FFFF               	dw	65535	; assembler added errata NOP
  5556  002ECE  6E2F               	movwf	_xtoa$1487^0,c
  5557  002ED0  6A30               	clrf	(_xtoa$1487+1)^0,c
  5558  002ED2  502F               	movf	_xtoa$1487^0,w,c
  5559  002ED4  1030               	iorwf	(_xtoa$1487+1)^0,w,c
  5560  002ED6  B4D8               	btfsc	status,2,c
  5561  002ED8  EF70  F017         	goto	u4101
  5562  002EDC  EF73  F017         	goto	u4100
  5563  002EE0                     u4101:
  5564  002EE0  FFFF               	dw	65535	; assembler added errata NOP
  5565  002EE2  EFA9  F017         	goto	l3805
  5566  002EE6                     u4100:
  5567  002EE6  FFFF               	dw	65535	; assembler added errata NOP
  5568  002EE8  0E9F               	movlw	159
  5569  002EEA  6E27               	movwf	??_xtoa^0,c
  5570  002EEC  0EFF               	movlw	255
  5571  002EEE  6E28               	movwf	(??_xtoa+1)^0,c
  5572  002EF0  0E20               	movlw	32
  5573  002EF2  1041               	iorwf	xtoa@c^0,w,c
  5574  002EF4  6E29               	movwf	(??_xtoa+2)^0,c
  5575  002EF6  0E00               	movlw	0
  5576  002EF8  1042               	iorwf	(xtoa@c+1)^0,w,c
  5577  002EFA  6E2A               	movwf	(??_xtoa+3)^0,c
  5578  002EFC  5027               	movf	??_xtoa^0,w,c
  5579  002EFE  2629               	addwf	(??_xtoa+2)^0,f,c
  5580  002F00  5028               	movf	(??_xtoa+1)^0,w,c
  5581  002F02  222A               	addwfc	(??_xtoa+3)^0,f,c
  5582  002F04  502A               	movf	(??_xtoa+3)^0,w,c
  5583  002F06  E10B               	bnz	u4110
  5584  002F08  0E1A               	movlw	26
  5585  002F0A  5C29               	subwf	(??_xtoa+2)^0,w,c
  5586  002F0C  A0D8               	btfss	status,0,c
  5587  002F0E  EF8B  F017         	goto	u4111
  5588  002F12  EF8F  F017         	goto	u4110
  5589  002F16                     u4111:
  5590  002F16  FFFF               	dw	65535	; assembler added errata NOP
  5591  002F18  0E01               	movlw	1
  5592  002F1A  EF91  F017         	goto	u4120
  5593  002F1E                     u4110:
  5594  002F1E  FFFF               	dw	65535	; assembler added errata NOP
  5595  002F20  0E00               	movlw	0
  5596  002F22                     u4120:
  5597  002F22  FFFF               	dw	65535	; assembler added errata NOP
  5598  002F24  6E31               	movwf	_xtoa$1488^0,c
  5599  002F26  6A32               	clrf	(_xtoa$1488+1)^0,c
  5600  002F28  5031               	movf	_xtoa$1488^0,w,c
  5601  002F2A  1032               	iorwf	(_xtoa$1488+1)^0,w,c
  5602  002F2C  B4D8               	btfsc	status,2,c
  5603  002F2E  EF9B  F017         	goto	u4131
  5604  002F32  EF9E  F017         	goto	u4130
  5605  002F36                     u4131:
  5606  002F36  FFFF               	dw	65535	; assembler added errata NOP
  5607  002F38  EFA9  F017         	goto	l3805
  5608  002F3C                     u4130:
  5609  002F3C  FFFF               	dw	65535	; assembler added errata NOP
  5610  002F3E                     
  5611                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 647:             
      +                          c = toupper(c);
  5612  002F3E  C041  F007         	movff	xtoa@c,toupper@c
  5613  002F42  C042  F008         	movff	xtoa@c+1,toupper@c+1
  5614  002F46  EC8A  F039         	call	_toupper	;wreg free
  5615  002F4A  C007  F041         	movff	?_toupper,xtoa@c
  5616  002F4E  C008  F042         	movff	?_toupper+1,xtoa@c+1
  5617  002F52                     l3805:
  5618  002F52  FFFF               	dw	65535	; assembler added errata NOP
  5619                           
  5620                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 649:         dbuf
      +                          [i] = (char)c;
  5621  002F54  0E8E               	movlw	low _dbuf
  5622  002F56  243F               	addwf	xtoa@i^0,w,c
  5623  002F58  6ED9               	movwf	fsr2l,c
  5624  002F5A  0E00               	movlw	high _dbuf
  5625  002F5C  2040               	addwfc	(xtoa@i+1)^0,w,c
  5626  002F5E  6EDA               	movwf	fsr2h,c
  5627  002F60  C041  FFDF         	movff	xtoa@c,indf2
  5628  002F64                     
  5629                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 650:         --p;
  5630  002F64  0633               	decf	xtoa@p^0,f,c
  5631  002F66  A0D8               	btfss	status,0,c
  5632  002F68  0634               	decf	(xtoa@p+1)^0,f,c
  5633  002F6A                     
  5634                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 651:         --w;
  5635  002F6A  0635               	decf	xtoa@w^0,f,c
  5636  002F6C  A0D8               	btfss	status,0,c
  5637  002F6E  0636               	decf	(xtoa@w+1)^0,f,c
  5638  002F70                     
  5639                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 652:         n = 
      +                          n >> 4;
  5640  002F70  C037  F027         	movff	xtoa@n,??_xtoa
  5641  002F74  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  5642  002F78  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  5643  002F7C  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  5644  002F80  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  5645  002F84  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  5646  002F88  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  5647  002F8C  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  5648  002F90  0E05               	movlw	5
  5649  002F92  EFD5  F017         	goto	u4140
  5650  002F96                     u4145:
  5651  002F96  FFFF               	dw	65535	; assembler added errata NOP
  5652  002F98  90D8               	bcf	status,0,c
  5653  002F9A  322E               	rrcf	(??_xtoa+7)^0,f,c
  5654  002F9C  322D               	rrcf	(??_xtoa+6)^0,f,c
  5655  002F9E  322C               	rrcf	(??_xtoa+5)^0,f,c
  5656  002FA0  322B               	rrcf	(??_xtoa+4)^0,f,c
  5657  002FA2  322A               	rrcf	(??_xtoa+3)^0,f,c
  5658  002FA4  3229               	rrcf	(??_xtoa+2)^0,f,c
  5659  002FA6  3228               	rrcf	(??_xtoa+1)^0,f,c
  5660  002FA8  3227               	rrcf	??_xtoa^0,f,c
  5661  002FAA                     u4140:
  5662  002FAA  FFFF               	dw	65535	; assembler added errata NOP
  5663  002FAC  2EE8               	decfsz	wreg,f,c
  5664  002FAE  EFCB  F017         	goto	u4145
  5665  002FB2  C027  F037         	movff	??_xtoa,xtoa@n
  5666  002FB6  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  5667  002FBA  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  5668  002FBE  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  5669  002FC2  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  5670  002FC6  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  5671  002FCA  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  5672  002FCE  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  5673  002FD2                     l3813:
  5674  002FD2  FFFF               	dw	65535	; assembler added errata NOP
  5675                           
  5676                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5677  002FD4  BE40               	btfsc	(xtoa@i+1)^0,7,c
  5678  002FD6  EFF6  F017         	goto	u4151
  5679  002FDA  5040               	movf	(xtoa@i+1)^0,w,c
  5680  002FDC  E10A               	bnz	u4150
  5681  002FDE  0E02               	movlw	2
  5682  002FE0  5C3F               	subwf	xtoa@i^0,w,c
  5683  002FE2  A0D8               	btfss	status,0,c
  5684  002FE4  EFF6  F017         	goto	u4151
  5685  002FE8  EFF9  F017         	goto	u4150
  5686  002FEC                     u4151:
  5687  002FEC  FFFF               	dw	65535	; assembler added errata NOP
  5688  002FEE  EF32  F018         	goto	l1166
  5689  002FF2                     u4150:
  5690  002FF2  FFFF               	dw	65535	; assembler added errata NOP
  5691  002FF4  5037               	movf	xtoa@n^0,w,c
  5692  002FF6  1038               	iorwf	(xtoa@n+1)^0,w,c
  5693  002FF8  1039               	iorwf	(xtoa@n+2)^0,w,c
  5694  002FFA  103A               	iorwf	(xtoa@n+3)^0,w,c
  5695  002FFC  103B               	iorwf	(xtoa@n+4)^0,w,c
  5696  002FFE  103C               	iorwf	(xtoa@n+5)^0,w,c
  5697  003000  103D               	iorwf	(xtoa@n+6)^0,w,c
  5698  003002  103E               	iorwf	(xtoa@n+7)^0,w,c
  5699  003004  A4D8               	btfss	status,2,c
  5700  003006  EF07  F018         	goto	u4161
  5701  00300A  EF0A  F018         	goto	u4160
  5702  00300E                     u4161:
  5703  00300E  FFFF               	dw	65535	; assembler added errata NOP
  5704  003010  EF24  F017         	goto	l3783
  5705  003014                     u4160:
  5706  003014  FFFF               	dw	65535	; assembler added errata NOP
  5707  003016  BE34               	btfsc	(xtoa@p+1)^0,7,c
  5708  003018  EF19  F018         	goto	u4170
  5709  00301C  5034               	movf	(xtoa@p+1)^0,w,c
  5710  00301E  E106               	bnz	u4171
  5711  003020  0433               	decf	xtoa@p^0,w,c
  5712  003022  B0D8               	btfsc	status,0,c
  5713  003024  EF16  F018         	goto	u4171
  5714  003028  EF19  F018         	goto	u4170
  5715  00302C                     u4171:
  5716  00302C  FFFF               	dw	65535	; assembler added errata NOP
  5717  00302E  EF24  F017         	goto	l3783
  5718  003032                     u4170:
  5719  003032  FFFF               	dw	65535	; assembler added errata NOP
  5720  003034  BE36               	btfsc	(xtoa@w+1)^0,7,c
  5721  003036  EF25  F018         	goto	u4181
  5722  00303A  5036               	movf	(xtoa@w+1)^0,w,c
  5723  00303C  E109               	bnz	u4180
  5724  00303E  0435               	decf	xtoa@w^0,w,c
  5725  003040  A0D8               	btfss	status,0,c
  5726  003042  EF25  F018         	goto	u4181
  5727  003046  EF28  F018         	goto	u4180
  5728  00304A                     u4181:
  5729  00304A  FFFF               	dw	65535	; assembler added errata NOP
  5730  00304C  EF32  F018         	goto	l1166
  5731  003050                     u4180:
  5732  003050  FFFF               	dw	65535	; assembler added errata NOP
  5733  003052  0100               	movlb	0	; () banked
  5734  003054  B38A               	btfsc	_flags& (0+255),1,b
  5735  003056  EF2F  F018         	goto	u4191
  5736  00305A  EF32  F018         	goto	u4190
  5737  00305E                     u4191:
  5738  00305E  FFFF               	dw	65535	; assembler added errata NOP
  5739  003060  EF24  F017         	goto	l3783
  5740  003064                     u4190:
  5741  003064                     l1166:
  5742  003064  FFFF               	dw	65535	; assembler added errata NOP
  5743                           
  5744                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  5745  003066  0100               	movlb	0	; () banked
  5746  003068  A98A               	btfss	_flags& (0+255),4,b
  5747  00306A  EF39  F018         	goto	u4201
  5748  00306E  EF3C  F018         	goto	u4200
  5749  003072                     u4201:
  5750  003072  FFFF               	dw	65535	; assembler added errata NOP
  5751  003074  EF53  F018         	goto	l3829
  5752  003078                     u4200:
  5753  003078  FFFF               	dw	65535	; assembler added errata NOP
  5754  00307A                     
  5755                           ; BSR set to: 0
  5756                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 657:         --i;
  5757  00307A  063F               	decf	xtoa@i^0,f,c
  5758  00307C  A0D8               	btfss	status,0,c
  5759  00307E  0640               	decf	(xtoa@i+1)^0,f,c
  5760  003080                     
  5761                           ; BSR set to: 0
  5762                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 658:         dbuf
      +                          [i] = x;
  5763  003080  0E8E               	movlw	low _dbuf
  5764  003082  243F               	addwf	xtoa@i^0,w,c
  5765  003084  6ED9               	movwf	fsr2l,c
  5766  003086  0E00               	movlw	high _dbuf
  5767  003088  2040               	addwfc	(xtoa@i+1)^0,w,c
  5768  00308A  6EDA               	movwf	fsr2h,c
  5769  00308C  C026  FFDF         	movff	xtoa@x,indf2
  5770  003090                     
  5771                           ; BSR set to: 0
  5772                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 659:         --i;
  5773  003090  063F               	decf	xtoa@i^0,f,c
  5774  003092  A0D8               	btfss	status,0,c
  5775  003094  0640               	decf	(xtoa@i+1)^0,f,c
  5776                           
  5777                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 660:         dbuf
      +                          [i] = '0';
  5778  003096  0E8E               	movlw	low _dbuf
  5779  003098  243F               	addwf	xtoa@i^0,w,c
  5780  00309A  6ED9               	movwf	fsr2l,c
  5781  00309C  0E00               	movlw	high _dbuf
  5782  00309E  2040               	addwfc	(xtoa@i+1)^0,w,c
  5783  0030A0  6EDA               	movwf	fsr2h,c
  5784  0030A2  0E30               	movlw	48
  5785  0030A4  6EDF               	movwf	indf2,c
  5786  0030A6                     l3829:
  5787  0030A6  FFFF               	dw	65535	; assembler added errata NOP
  5788                           
  5789                           ; BSR set to: 0
  5790                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 664:     return p
      +                          ad(fp, &dbuf[i], w);
  5791  0030A8  C01C  F011         	movff	xtoa@fp,pad@fp
  5792  0030AC  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  5793  0030B0  0E8E               	movlw	low _dbuf
  5794  0030B2  243F               	addwf	xtoa@i^0,w,c
  5795  0030B4  6E13               	movwf	pad@buf^0,c
  5796  0030B6  0E00               	movlw	high _dbuf
  5797  0030B8  2040               	addwfc	(xtoa@i+1)^0,w,c
  5798  0030BA  6E14               	movwf	(pad@buf+1)^0,c
  5799  0030BC  C035  F015         	movff	xtoa@w,pad@p
  5800  0030C0  C036  F016         	movff	xtoa@w+1,pad@p+1
  5801  0030C4  EC5E  F03C         	call	_pad	;wreg free
  5802  0030C8  C011  F01C         	movff	?_pad,?_xtoa
  5803  0030CC  C012  F01D         	movff	?_pad+1,?_xtoa+1
  5804  0030D0  0012               	return		;funcret
  5805  0030D2  FFFF               	dw	65535	; errata NOP
  5806  0030D4                     __end_of_xtoa:
  5807                           	callstack 0
  5808                           
  5809 ;; *************** function _toupper *****************
  5810 ;; Defined at:
  5811 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\toupper.c"
  5812 ;; Parameters:    Size  Location     Type
  5813 ;;  c               2    6[COMRAM] int 
  5814 ;; Auto vars:     Size  Location     Type
  5815 ;;		None
  5816 ;; Return value:  Size  Location     Type
  5817 ;;                  2    6[COMRAM] int 
  5818 ;; Registers used:
  5819 ;;		wreg, status,2, status,0
  5820 ;; Tracked objects:
  5821 ;;		On entry : 0/0
  5822 ;;		On exit  : 0/0
  5823 ;;		Unchanged: 0/0
  5824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5825 ;;      Params:         2       0       0       0       0       0       0
  5826 ;;      Locals:         2       0       0       0       0       0       0
  5827 ;;      Temps:          4       0       0       0       0       0       0
  5828 ;;      Totals:         8       0       0       0       0       0       0
  5829 ;;Total ram usage:        8 bytes
  5830 ;; Hardware stack levels used:    1
  5831 ;; Hardware stack levels required when called:    2
  5832 ;; This function calls:
  5833 ;;		_islower
  5834 ;; This function is called by:
  5835 ;;		_xtoa
  5836 ;; This function uses a non-reentrant model
  5837 ;;
  5838                           
  5839                           	psect	text9
  5840  007314                     __ptext9:
  5841                           	callstack 0
  5842  007314                     _toupper:
  5843                           	callstack 0
  5844  007314  FFFF               	dw	65535	; assembler added errata NOP
  5845  007316  0E9F               	movlw	159
  5846  007318  6E09               	movwf	??_toupper^0,c
  5847  00731A  0EFF               	movlw	255
  5848  00731C  6E0A               	movwf	(??_toupper+1)^0,c
  5849  00731E  C007  F00B         	movff	toupper@c,??_toupper+2
  5850  007322  C008  F00C         	movff	toupper@c+1,??_toupper+3
  5851  007326  5009               	movf	??_toupper^0,w,c
  5852  007328  260B               	addwf	(??_toupper+2)^0,f,c
  5853  00732A  500A               	movf	(??_toupper+1)^0,w,c
  5854  00732C  220C               	addwfc	(??_toupper+3)^0,f,c
  5855  00732E  500C               	movf	(??_toupper+3)^0,w,c
  5856  007330  E10B               	bnz	u3540
  5857  007332  0E1A               	movlw	26
  5858  007334  5C0B               	subwf	(??_toupper+2)^0,w,c
  5859  007336  A0D8               	btfss	status,0,c
  5860  007338  EFA0  F039         	goto	u3541
  5861  00733C  EFA4  F039         	goto	u3540
  5862  007340                     u3541:
  5863  007340  FFFF               	dw	65535	; assembler added errata NOP
  5864  007342  0E01               	movlw	1
  5865  007344  EFA6  F039         	goto	u3550
  5866  007348                     u3540:
  5867  007348  FFFF               	dw	65535	; assembler added errata NOP
  5868  00734A  0E00               	movlw	0
  5869  00734C                     u3550:
  5870  00734C  FFFF               	dw	65535	; assembler added errata NOP
  5871  00734E  6E0D               	movwf	_toupper$1715^0,c
  5872  007350  6A0E               	clrf	(_toupper$1715+1)^0,c
  5873  007352  500D               	movf	_toupper$1715^0,w,c
  5874  007354  100E               	iorwf	(_toupper$1715+1)^0,w,c
  5875  007356  B4D8               	btfsc	status,2,c
  5876  007358  EFB0  F039         	goto	u3561
  5877  00735C  EFB3  F039         	goto	u3560
  5878  007360                     u3561:
  5879  007360  FFFF               	dw	65535	; assembler added errata NOP
  5880  007362  EFBA  F039         	goto	l1359
  5881  007366                     u3560:
  5882  007366  FFFF               	dw	65535	; assembler added errata NOP
  5883  007368  0E5F               	movlw	95
  5884  00736A  1407               	andwf	toupper@c^0,w,c
  5885  00736C  6E07               	movwf	?_toupper^0,c
  5886  00736E  6A08               	clrf	(?_toupper+1)^0,c
  5887  007370  EFBF  F039         	goto	l1364
  5888  007374                     l1359:
  5889  007374  FFFF               	dw	65535	; assembler added errata NOP
  5890  007376  C007  F007         	movff	toupper@c,?_toupper
  5891  00737A  C008  F008         	movff	toupper@c+1,?_toupper+1
  5892  00737E                     l1364:
  5893  00737E  FFFF               	dw	65535	; assembler added errata NOP
  5894  007380  0012               	return		;funcret
  5895  007382  FFFF               	dw	65535	; errata NOP
  5896  007384                     __end_of_toupper:
  5897                           	callstack 0
  5898                           
  5899 ;; *************** function _islower *****************
  5900 ;; Defined at:
  5901 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\islower.c"
  5902 ;; Parameters:    Size  Location     Type
  5903 ;;  c               2    0[COMRAM] int 
  5904 ;; Auto vars:     Size  Location     Type
  5905 ;;		None
  5906 ;; Return value:  Size  Location     Type
  5907 ;;                  2    0[COMRAM] int 
  5908 ;; Registers used:
  5909 ;;		wreg, status,2, status,0
  5910 ;; Tracked objects:
  5911 ;;		On entry : 0/0
  5912 ;;		On exit  : 0/0
  5913 ;;		Unchanged: 0/0
  5914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5915 ;;      Params:         2       0       0       0       0       0       0
  5916 ;;      Locals:         0       0       0       0       0       0       0
  5917 ;;      Temps:          4       0       0       0       0       0       0
  5918 ;;      Totals:         6       0       0       0       0       0       0
  5919 ;;Total ram usage:        6 bytes
  5920 ;; Hardware stack levels used:    1
  5921 ;; Hardware stack levels required when called:    1
  5922 ;; This function calls:
  5923 ;;		Nothing
  5924 ;; This function is called by:
  5925 ;;		_toupper
  5926 ;; This function uses a non-reentrant model
  5927 ;;
  5928                           
  5929                           	psect	text10
  5930  00707A                     __ptext10:
  5931                           	callstack 0
  5932  00707A                     _islower:
  5933                           	callstack 23
  5934  00707A  FFFF               	dw	65535	; assembler added errata NOP
  5935  00707C  0E9F               	movlw	159
  5936  00707E  6E03               	movwf	??_islower^0,c
  5937  007080  0EFF               	movlw	255
  5938  007082  6E04               	movwf	(??_islower+1)^0,c
  5939  007084  C001  F005         	movff	islower@c,??_islower+2
  5940  007088  C002  F006         	movff	islower@c+1,??_islower+3
  5941  00708C  5003               	movf	??_islower^0,w,c
  5942  00708E  2605               	addwf	(??_islower+2)^0,f,c
  5943  007090  5004               	movf	(??_islower+1)^0,w,c
  5944  007092  2206               	addwfc	(??_islower+3)^0,f,c
  5945  007094  5006               	movf	(??_islower+3)^0,w,c
  5946  007096  E10B               	bnz	u3230
  5947  007098  0E1A               	movlw	26
  5948  00709A  5C05               	subwf	(??_islower+2)^0,w,c
  5949  00709C  A0D8               	btfss	status,0,c
  5950  00709E  EF53  F038         	goto	u3231
  5951  0070A2  EF57  F038         	goto	u3230
  5952  0070A6                     u3231:
  5953  0070A6  FFFF               	dw	65535	; assembler added errata NOP
  5954  0070A8  0E01               	movlw	1
  5955  0070AA  EF59  F038         	goto	u3240
  5956  0070AE                     u3230:
  5957  0070AE  FFFF               	dw	65535	; assembler added errata NOP
  5958  0070B0  0E00               	movlw	0
  5959  0070B2                     u3240:
  5960  0070B2  FFFF               	dw	65535	; assembler added errata NOP
  5961  0070B4  6E01               	movwf	?_islower^0,c
  5962  0070B6  6A02               	clrf	(?_islower+1)^0,c
  5963  0070B8  0012               	return		;funcret
  5964  0070BA  FFFF               	dw	65535	; errata NOP
  5965  0070BC                     __end_of_islower:
  5966                           	callstack 0
  5967                           
  5968 ;; *************** function _isupper *****************
  5969 ;; Defined at:
  5970 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  5971 ;; Parameters:    Size  Location     Type
  5972 ;;  c               2    0[COMRAM] int 
  5973 ;; Auto vars:     Size  Location     Type
  5974 ;;		None
  5975 ;; Return value:  Size  Location     Type
  5976 ;;                  2    0[COMRAM] int 
  5977 ;; Registers used:
  5978 ;;		wreg, status,2, status,0
  5979 ;; Tracked objects:
  5980 ;;		On entry : 0/0
  5981 ;;		On exit  : 0/0
  5982 ;;		Unchanged: 0/0
  5983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5984 ;;      Params:         2       0       0       0       0       0       0
  5985 ;;      Locals:         0       0       0       0       0       0       0
  5986 ;;      Temps:          4       0       0       0       0       0       0
  5987 ;;      Totals:         6       0       0       0       0       0       0
  5988 ;;Total ram usage:        6 bytes
  5989 ;; Hardware stack levels used:    1
  5990 ;; Hardware stack levels required when called:    1
  5991 ;; This function calls:
  5992 ;;		Nothing
  5993 ;; This function is called by:
  5994 ;;		_xtoa
  5995 ;; This function uses a non-reentrant model
  5996 ;;
  5997                           
  5998                           	psect	text11
  5999  007038                     __ptext11:
  6000                           	callstack 0
  6001  007038                     _isupper:
  6002                           	callstack 24
  6003  007038  FFFF               	dw	65535	; assembler added errata NOP
  6004  00703A  0EBF               	movlw	191
  6005  00703C  6E03               	movwf	??_isupper^0,c
  6006  00703E  0EFF               	movlw	255
  6007  007040  6E04               	movwf	(??_isupper+1)^0,c
  6008  007042  C001  F005         	movff	isupper@c,??_isupper+2
  6009  007046  C002  F006         	movff	isupper@c+1,??_isupper+3
  6010  00704A  5003               	movf	??_isupper^0,w,c
  6011  00704C  2605               	addwf	(??_isupper+2)^0,f,c
  6012  00704E  5004               	movf	(??_isupper+1)^0,w,c
  6013  007050  2206               	addwfc	(??_isupper+3)^0,f,c
  6014  007052  5006               	movf	(??_isupper+3)^0,w,c
  6015  007054  E10B               	bnz	u3500
  6016  007056  0E1A               	movlw	26
  6017  007058  5C05               	subwf	(??_isupper+2)^0,w,c
  6018  00705A  A0D8               	btfss	status,0,c
  6019  00705C  EF32  F038         	goto	u3501
  6020  007060  EF36  F038         	goto	u3500
  6021  007064                     u3501:
  6022  007064  FFFF               	dw	65535	; assembler added errata NOP
  6023  007066  0E01               	movlw	1
  6024  007068  EF38  F038         	goto	u3510
  6025  00706C                     u3500:
  6026  00706C  FFFF               	dw	65535	; assembler added errata NOP
  6027  00706E  0E00               	movlw	0
  6028  007070                     u3510:
  6029  007070  FFFF               	dw	65535	; assembler added errata NOP
  6030  007072  6E01               	movwf	?_isupper^0,c
  6031  007074  6A02               	clrf	(?_isupper+1)^0,c
  6032  007076  0012               	return		;funcret
  6033  007078  FFFF               	dw	65535	; errata NOP
  6034  00707A                     __end_of_isupper:
  6035                           	callstack 0
  6036                           
  6037 ;; *************** function _isalpha *****************
  6038 ;; Defined at:
  6039 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isalpha.c"
  6040 ;; Parameters:    Size  Location     Type
  6041 ;;  c               2    0[COMRAM] int 
  6042 ;; Auto vars:     Size  Location     Type
  6043 ;;		None
  6044 ;; Return value:  Size  Location     Type
  6045 ;;                  2    0[COMRAM] int 
  6046 ;; Registers used:
  6047 ;;		wreg, status,2, status,0
  6048 ;; Tracked objects:
  6049 ;;		On entry : 0/0
  6050 ;;		On exit  : 0/0
  6051 ;;		Unchanged: 0/0
  6052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6053 ;;      Params:         2       0       0       0       0       0       0
  6054 ;;      Locals:         0       0       0       0       0       0       0
  6055 ;;      Temps:          4       0       0       0       0       0       0
  6056 ;;      Totals:         6       0       0       0       0       0       0
  6057 ;;Total ram usage:        6 bytes
  6058 ;; Hardware stack levels used:    1
  6059 ;; Hardware stack levels required when called:    1
  6060 ;; This function calls:
  6061 ;;		Nothing
  6062 ;; This function is called by:
  6063 ;;		_xtoa
  6064 ;; This function uses a non-reentrant model
  6065 ;;
  6066                           
  6067                           	psect	text12
  6068  0070BC                     __ptext12:
  6069                           	callstack 0
  6070  0070BC                     _isalpha:
  6071                           	callstack 24
  6072  0070BC  FFFF               	dw	65535	; assembler added errata NOP
  6073  0070BE  0E9F               	movlw	159
  6074  0070C0  6E03               	movwf	??_isalpha^0,c
  6075  0070C2  0EFF               	movlw	255
  6076  0070C4  6E04               	movwf	(??_isalpha+1)^0,c
  6077  0070C6  0E20               	movlw	32
  6078  0070C8  1001               	iorwf	isalpha@c^0,w,c
  6079  0070CA  6E05               	movwf	(??_isalpha+2)^0,c
  6080  0070CC  0E00               	movlw	0
  6081  0070CE  1002               	iorwf	(isalpha@c+1)^0,w,c
  6082  0070D0  6E06               	movwf	(??_isalpha+3)^0,c
  6083  0070D2  5003               	movf	??_isalpha^0,w,c
  6084  0070D4  2605               	addwf	(??_isalpha+2)^0,f,c
  6085  0070D6  5004               	movf	(??_isalpha+1)^0,w,c
  6086  0070D8  2206               	addwfc	(??_isalpha+3)^0,f,c
  6087  0070DA  5006               	movf	(??_isalpha+3)^0,w,c
  6088  0070DC  E10B               	bnz	u3520
  6089  0070DE  0E1A               	movlw	26
  6090  0070E0  5C05               	subwf	(??_isalpha+2)^0,w,c
  6091  0070E2  A0D8               	btfss	status,0,c
  6092  0070E4  EF76  F038         	goto	u3521
  6093  0070E8  EF7A  F038         	goto	u3520
  6094  0070EC                     u3521:
  6095  0070EC  FFFF               	dw	65535	; assembler added errata NOP
  6096  0070EE  0E01               	movlw	1
  6097  0070F0  EF7C  F038         	goto	u3530
  6098  0070F4                     u3520:
  6099  0070F4  FFFF               	dw	65535	; assembler added errata NOP
  6100  0070F6  0E00               	movlw	0
  6101  0070F8                     u3530:
  6102  0070F8  FFFF               	dw	65535	; assembler added errata NOP
  6103  0070FA  6E01               	movwf	?_isalpha^0,c
  6104  0070FC  6A02               	clrf	(?_isalpha+1)^0,c
  6105  0070FE  0012               	return		;funcret
  6106  007100  FFFF               	dw	65535	; errata NOP
  6107  007102                     __end_of_isalpha:
  6108                           	callstack 0
  6109                           
  6110 ;; *************** function _utoa *****************
  6111 ;; Defined at:
  6112 ;;		line 593 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6113 ;; Parameters:    Size  Location     Type
  6114 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6115 ;;		 -> vsnprintf@f(6), 
  6116 ;;  d               8   29[COMRAM] unsigned long long 
  6117 ;; Auto vars:     Size  Location     Type
  6118 ;;  n               8   49[COMRAM] unsigned long long 
  6119 ;;  i               2   57[COMRAM] int 
  6120 ;;  w               2   47[COMRAM] int 
  6121 ;;  p               2   45[COMRAM] int 
  6122 ;; Return value:  Size  Location     Type
  6123 ;;                  2   27[COMRAM] int 
  6124 ;; Registers used:
  6125 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6126 ;; Tracked objects:
  6127 ;;		On entry : 0/0
  6128 ;;		On exit  : 0/0
  6129 ;;		Unchanged: 0/0
  6130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6131 ;;      Params:        10       0       0       0       0       0       0
  6132 ;;      Locals:        14       0       0       0       0       0       0
  6133 ;;      Temps:          8       0       0       0       0       0       0
  6134 ;;      Totals:        32       0       0       0       0       0       0
  6135 ;;Total ram usage:       32 bytes
  6136 ;; Hardware stack levels used:    1
  6137 ;; Hardware stack levels required when called:    5
  6138 ;; This function calls:
  6139 ;;		___lodiv
  6140 ;;		___lomod
  6141 ;;		_pad
  6142 ;; This function is called by:
  6143 ;;		_vfpfcnvrt
  6144 ;; This function uses a non-reentrant model
  6145 ;;
  6146                           
  6147                           	psect	text13
  6148  0030D4                     __ptext13:
  6149                           	callstack 0
  6150  0030D4                     _utoa:
  6151                           	callstack 0
  6152  0030D4  FFFF               	dw	65535	; assembler added errata NOP
  6153  0030D6                     
  6154                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 593: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99
      +                          \common\doprnt.c: 594: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\dop
      +                          rnt.c: 595:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common
      +                          \doprnt.c: 596:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sourc
      +                          es\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  6155  0030D6  0100               	movlb	0	; () banked
  6156  0030D8  BF89               	btfsc	(_prec+1)& (0+255),7,b
  6157  0030DA  EF71  F018         	goto	u3971
  6158  0030DE  EF74  F018         	goto	u3970
  6159  0030E2                     u3971:
  6160  0030E2  FFFF               	dw	65535	; assembler added errata NOP
  6161  0030E4  EF76  F018         	goto	l3735
  6162  0030E8                     u3970:
  6163  0030E8  FFFF               	dw	65535	; assembler added errata NOP
  6164  0030EA                     
  6165                           ; BSR set to: 0
  6166                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 600:         flag
      +                          s &= ~(1 << 1);
  6167  0030EA  938A               	bcf	_flags& (0+255),1,b
  6168  0030EC                     l3735:
  6169  0030EC  FFFF               	dw	65535	; assembler added errata NOP
  6170                           
  6171                           ; BSR set to: 0
  6172                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 602:     p = (0 <
      +                           prec) ? prec : 1;
  6173  0030EE  BF89               	btfsc	(_prec+1)& (0+255),7,b
  6174  0030F0  EF85  F018         	goto	u3980
  6175  0030F4  5189               	movf	(_prec+1)& (0+255),w,b
  6176  0030F6  E106               	bnz	u3981
  6177  0030F8  0588               	decf	_prec& (0+255),w,b
  6178  0030FA  B0D8               	btfsc	status,0,c
  6179  0030FC  EF82  F018         	goto	u3981
  6180  003100  EF85  F018         	goto	u3980
  6181  003104                     u3981:
  6182  003104  FFFF               	dw	65535	; assembler added errata NOP
  6183  003106  EF8C  F018         	goto	l1128
  6184  00310A                     u3980:
  6185  00310A  FFFF               	dw	65535	; assembler added errata NOP
  6186  00310C                     
  6187                           ; BSR set to: 0
  6188  00310C  0E00               	movlw	0
  6189  00310E  6E2F               	movwf	(utoa@p+1)^0,c
  6190  003110  0E01               	movlw	1
  6191  003112  6E2E               	movwf	utoa@p^0,c
  6192  003114  EF91  F018         	goto	l1130
  6193  003118                     l1128:
  6194  003118  FFFF               	dw	65535	; assembler added errata NOP
  6195                           
  6196                           ; BSR set to: 0
  6197  00311A  C088  F02E         	movff	_prec,utoa@p
  6198  00311E  C089  F02F         	movff	_prec+1,utoa@p+1
  6199  003122                     l1130:
  6200  003122  FFFF               	dw	65535	; assembler added errata NOP
  6201                           
  6202                           ; BSR set to: 0
  6203                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 603:     w = widt
      +                          h;
  6204  003124  C086  F030         	movff	_width,utoa@w
  6205  003128  C087  F031         	movff	_width+1,utoa@w+1
  6206                           
  6207                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 606:     n = d;
  6208  00312C  C01E  F032         	movff	utoa@d,utoa@n
  6209  003130  C01F  F033         	movff	utoa@d+1,utoa@n+1
  6210  003134  C020  F034         	movff	utoa@d+2,utoa@n+2
  6211  003138  C021  F035         	movff	utoa@d+3,utoa@n+3
  6212  00313C  C022  F036         	movff	utoa@d+4,utoa@n+4
  6213  003140  C023  F037         	movff	utoa@d+5,utoa@n+5
  6214  003144  C024  F038         	movff	utoa@d+6,utoa@n+6
  6215  003148  C025  F039         	movff	utoa@d+7,utoa@n+7
  6216  00314C                     
  6217                           ; BSR set to: 0
  6218                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 607:     i = size
      +                          of(dbuf) - 1;
  6219  00314C  0E00               	movlw	0
  6220  00314E  6E3B               	movwf	(utoa@i+1)^0,c
  6221  003150  0E1F               	movlw	31
  6222  003152  6E3A               	movwf	utoa@i^0,c
  6223  003154                     
  6224                           ; BSR set to: 0
  6225                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 608:     dbuf[i] 
      +                          = '\0';
  6226  003154  0E00               	movlw	0
  6227  003156  6FAD               	movwf	(_dbuf+31)& (0+255),b
  6228                           
  6229                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 609:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6230  003158  EF25  F019         	goto	l3753
  6231  00315C                     l3743:
  6232  00315C  FFFF               	dw	65535	; assembler added errata NOP
  6233                           
  6234                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 610:         --i;
  6235  00315E  063A               	decf	utoa@i^0,f,c
  6236  003160  A0D8               	btfss	status,0,c
  6237  003162  063B               	decf	(utoa@i+1)^0,f,c
  6238  003164                     
  6239                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 611:         dbuf
      +                          [i] = '0' + (n % 10);
  6240  003164  0E8E               	movlw	low _dbuf
  6241  003166  243A               	addwf	utoa@i^0,w,c
  6242  003168  6ED9               	movwf	fsr2l,c
  6243  00316A  0E00               	movlw	high _dbuf
  6244  00316C  203B               	addwfc	(utoa@i+1)^0,w,c
  6245  00316E  6EDA               	movwf	fsr2h,c
  6246  003170  C032  F001         	movff	utoa@n,___lomod@dividend
  6247  003174  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  6248  003178  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  6249  00317C  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  6250  003180  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  6251  003184  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  6252  003188  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  6253  00318C  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  6254  003190  0E0A               	movlw	10
  6255  003192  6E09               	movwf	___lomod@divisor^0,c
  6256  003194  0E00               	movlw	0
  6257  003196  6E0A               	movwf	(___lomod@divisor+1)^0,c
  6258  003198  0E00               	movlw	0
  6259  00319A  6E0B               	movwf	(___lomod@divisor+2)^0,c
  6260  00319C  0E00               	movlw	0
  6261  00319E  6E0C               	movwf	(___lomod@divisor+3)^0,c
  6262  0031A0  0E00               	movlw	0
  6263  0031A2  6E0D               	movwf	(___lomod@divisor+4)^0,c
  6264  0031A4  0E00               	movlw	0
  6265  0031A6  6E0E               	movwf	(___lomod@divisor+5)^0,c
  6266  0031A8  0E00               	movlw	0
  6267  0031AA  6E0F               	movwf	(___lomod@divisor+6)^0,c
  6268  0031AC  0E00               	movlw	0
  6269  0031AE  6E10               	movwf	(___lomod@divisor+7)^0,c
  6270  0031B0  ECD1  F03C         	call	___lomod	;wreg free
  6271  0031B4  C001  F026         	movff	?___lomod,??_utoa
  6272  0031B8  C002  F027         	movff	?___lomod+1,??_utoa+1
  6273  0031BC  C003  F028         	movff	?___lomod+2,??_utoa+2
  6274  0031C0  C004  F029         	movff	?___lomod+3,??_utoa+3
  6275  0031C4  C005  F02A         	movff	?___lomod+4,??_utoa+4
  6276  0031C8  C006  F02B         	movff	?___lomod+5,??_utoa+5
  6277  0031CC  C007  F02C         	movff	?___lomod+6,??_utoa+6
  6278  0031D0  C008  F02D         	movff	?___lomod+7,??_utoa+7
  6279  0031D4  5026               	movf	??_utoa^0,w,c
  6280  0031D6  0F30               	addlw	48
  6281  0031D8  6EDF               	movwf	indf2,c
  6282  0031DA                     
  6283                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 612:         --p;
  6284  0031DA  062E               	decf	utoa@p^0,f,c
  6285  0031DC  A0D8               	btfss	status,0,c
  6286  0031DE  062F               	decf	(utoa@p+1)^0,f,c
  6287  0031E0                     
  6288                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 613:         --w;
  6289  0031E0  0630               	decf	utoa@w^0,f,c
  6290  0031E2  A0D8               	btfss	status,0,c
  6291  0031E4  0631               	decf	(utoa@w+1)^0,f,c
  6292  0031E6                     
  6293                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 614:         n = 
      +                          n / 10;
  6294  0031E6  C032  F001         	movff	utoa@n,___lodiv@dividend
  6295  0031EA  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  6296  0031EE  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  6297  0031F2  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  6298  0031F6  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  6299  0031FA  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  6300  0031FE  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  6301  003202  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  6302  003206  0E0A               	movlw	10
  6303  003208  6E09               	movwf	___lodiv@divisor^0,c
  6304  00320A  0E00               	movlw	0
  6305  00320C  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  6306  00320E  0E00               	movlw	0
  6307  003210  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  6308  003212  0E00               	movlw	0
  6309  003214  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  6310  003216  0E00               	movlw	0
  6311  003218  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  6312  00321A  0E00               	movlw	0
  6313  00321C  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  6314  00321E  0E00               	movlw	0
  6315  003220  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  6316  003222  0E00               	movlw	0
  6317  003224  6E10               	movwf	(___lodiv@divisor+7)^0,c
  6318  003226  ECC8  F03E         	call	___lodiv	;wreg free
  6319  00322A  C001  F032         	movff	?___lodiv,utoa@n
  6320  00322E  C002  F033         	movff	?___lodiv+1,utoa@n+1
  6321  003232  C003  F034         	movff	?___lodiv+2,utoa@n+2
  6322  003236  C004  F035         	movff	?___lodiv+3,utoa@n+3
  6323  00323A  C005  F036         	movff	?___lodiv+4,utoa@n+4
  6324  00323E  C006  F037         	movff	?___lodiv+5,utoa@n+5
  6325  003242  C007  F038         	movff	?___lodiv+6,utoa@n+6
  6326  003246  C008  F039         	movff	?___lodiv+7,utoa@n+7
  6327  00324A                     l3753:
  6328  00324A  FFFF               	dw	65535	; assembler added errata NOP
  6329                           
  6330                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 609:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6331  00324C  503A               	movf	utoa@i^0,w,c
  6332  00324E  103B               	iorwf	(utoa@i+1)^0,w,c
  6333  003250  B4D8               	btfsc	status,2,c
  6334  003252  EF2D  F019         	goto	u3991
  6335  003256  EF30  F019         	goto	u3990
  6336  00325A                     u3991:
  6337  00325A  FFFF               	dw	65535	; assembler added errata NOP
  6338  00325C  EF69  F019         	goto	l3763
  6339  003260                     u3990:
  6340  003260  FFFF               	dw	65535	; assembler added errata NOP
  6341  003262  5032               	movf	utoa@n^0,w,c
  6342  003264  1033               	iorwf	(utoa@n+1)^0,w,c
  6343  003266  1034               	iorwf	(utoa@n+2)^0,w,c
  6344  003268  1035               	iorwf	(utoa@n+3)^0,w,c
  6345  00326A  1036               	iorwf	(utoa@n+4)^0,w,c
  6346  00326C  1037               	iorwf	(utoa@n+5)^0,w,c
  6347  00326E  1038               	iorwf	(utoa@n+6)^0,w,c
  6348  003270  1039               	iorwf	(utoa@n+7)^0,w,c
  6349  003272  A4D8               	btfss	status,2,c
  6350  003274  EF3E  F019         	goto	u4001
  6351  003278  EF41  F019         	goto	u4000
  6352  00327C                     u4001:
  6353  00327C  FFFF               	dw	65535	; assembler added errata NOP
  6354  00327E  EFAE  F018         	goto	l3743
  6355  003282                     u4000:
  6356  003282  FFFF               	dw	65535	; assembler added errata NOP
  6357  003284  BE2F               	btfsc	(utoa@p+1)^0,7,c
  6358  003286  EF50  F019         	goto	u4010
  6359  00328A  502F               	movf	(utoa@p+1)^0,w,c
  6360  00328C  E106               	bnz	u4011
  6361  00328E  042E               	decf	utoa@p^0,w,c
  6362  003290  B0D8               	btfsc	status,0,c
  6363  003292  EF4D  F019         	goto	u4011
  6364  003296  EF50  F019         	goto	u4010
  6365  00329A                     u4011:
  6366  00329A  FFFF               	dw	65535	; assembler added errata NOP
  6367  00329C  EFAE  F018         	goto	l3743
  6368  0032A0                     u4010:
  6369  0032A0  FFFF               	dw	65535	; assembler added errata NOP
  6370  0032A2  BE31               	btfsc	(utoa@w+1)^0,7,c
  6371  0032A4  EF5C  F019         	goto	u4021
  6372  0032A8  5031               	movf	(utoa@w+1)^0,w,c
  6373  0032AA  E109               	bnz	u4020
  6374  0032AC  0430               	decf	utoa@w^0,w,c
  6375  0032AE  A0D8               	btfss	status,0,c
  6376  0032B0  EF5C  F019         	goto	u4021
  6377  0032B4  EF5F  F019         	goto	u4020
  6378  0032B8                     u4021:
  6379  0032B8  FFFF               	dw	65535	; assembler added errata NOP
  6380  0032BA  EF69  F019         	goto	l3763
  6381  0032BE                     u4020:
  6382  0032BE  FFFF               	dw	65535	; assembler added errata NOP
  6383  0032C0  0100               	movlb	0	; () banked
  6384  0032C2  B38A               	btfsc	_flags& (0+255),1,b
  6385  0032C4  EF66  F019         	goto	u4031
  6386  0032C8  EF69  F019         	goto	u4030
  6387  0032CC                     u4031:
  6388  0032CC  FFFF               	dw	65535	; assembler added errata NOP
  6389  0032CE  EFAE  F018         	goto	l3743
  6390  0032D2                     u4030:
  6391  0032D2                     l3763:
  6392  0032D2  FFFF               	dw	65535	; assembler added errata NOP
  6393                           
  6394                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 618:     return p
      +                          ad(fp, &dbuf[i], w);
  6395  0032D4  C01C  F011         	movff	utoa@fp,pad@fp
  6396  0032D8  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  6397  0032DC  0E8E               	movlw	low _dbuf
  6398  0032DE  243A               	addwf	utoa@i^0,w,c
  6399  0032E0  6E13               	movwf	pad@buf^0,c
  6400  0032E2  0E00               	movlw	high _dbuf
  6401  0032E4  203B               	addwfc	(utoa@i+1)^0,w,c
  6402  0032E6  6E14               	movwf	(pad@buf+1)^0,c
  6403  0032E8  C030  F015         	movff	utoa@w,pad@p
  6404  0032EC  C031  F016         	movff	utoa@w+1,pad@p+1
  6405  0032F0  EC5E  F03C         	call	_pad	;wreg free
  6406  0032F4  C011  F01C         	movff	?_pad,?_utoa
  6407  0032F8  C012  F01D         	movff	?_pad+1,?_utoa+1
  6408  0032FC  0012               	return		;funcret
  6409  0032FE  FFFF               	dw	65535	; errata NOP
  6410  003300                     __end_of_utoa:
  6411                           	callstack 0
  6412                           
  6413 ;; *************** function ___lomod *****************
  6414 ;; Defined at:
  6415 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lomod.c"
  6416 ;; Parameters:    Size  Location     Type
  6417 ;;  dividend        8    0[COMRAM] unsigned long long 
  6418 ;;  divisor         8    8[COMRAM] unsigned long long 
  6419 ;; Auto vars:     Size  Location     Type
  6420 ;;  counter         1   16[COMRAM] unsigned char 
  6421 ;; Return value:  Size  Location     Type
  6422 ;;                  8    0[COMRAM] unsigned long long 
  6423 ;; Registers used:
  6424 ;;		wreg, status,2, status,0
  6425 ;; Tracked objects:
  6426 ;;		On entry : 0/0
  6427 ;;		On exit  : 0/0
  6428 ;;		Unchanged: 0/0
  6429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6430 ;;      Params:        16       0       0       0       0       0       0
  6431 ;;      Locals:         1       0       0       0       0       0       0
  6432 ;;      Temps:          0       0       0       0       0       0       0
  6433 ;;      Totals:        17       0       0       0       0       0       0
  6434 ;;Total ram usage:       17 bytes
  6435 ;; Hardware stack levels used:    1
  6436 ;; Hardware stack levels required when called:    1
  6437 ;; This function calls:
  6438 ;;		Nothing
  6439 ;; This function is called by:
  6440 ;;		_utoa
  6441 ;; This function uses a non-reentrant model
  6442 ;;
  6443                           
  6444                           	psect	text14
  6445  0079A2                     __ptext14:
  6446                           	callstack 0
  6447  0079A2                     ___lomod:
  6448                           	callstack 0
  6449  0079A2  FFFF               	dw	65535	; assembler added errata NOP
  6450  0079A4  5009               	movf	___lomod@divisor^0,w,c
  6451  0079A6  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  6452  0079A8  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  6453  0079AA  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  6454  0079AC  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  6455  0079AE  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  6456  0079B0  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  6457  0079B2  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  6458  0079B4  B4D8               	btfsc	status,2,c
  6459  0079B6  EFDF  F03C         	goto	u3421
  6460  0079BA  EFE2  F03C         	goto	u3420
  6461  0079BE                     u3421:
  6462  0079BE  FFFF               	dw	65535	; assembler added errata NOP
  6463  0079C0  EF33  F03D         	goto	l747
  6464  0079C4                     u3420:
  6465  0079C4  FFFF               	dw	65535	; assembler added errata NOP
  6466  0079C6  0E01               	movlw	1
  6467  0079C8  6E11               	movwf	___lomod@counter^0,c
  6468  0079CA  EFF2  F03C         	goto	l3495
  6469  0079CE                     l3493:
  6470  0079CE  FFFF               	dw	65535	; assembler added errata NOP
  6471  0079D0  90D8               	bcf	status,0,c
  6472  0079D2  3609               	rlcf	___lomod@divisor^0,f,c
  6473  0079D4  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  6474  0079D6  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  6475  0079D8  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  6476  0079DA  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  6477  0079DC  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  6478  0079DE  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  6479  0079E0  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  6480  0079E2  2A11               	incf	___lomod@counter^0,f,c
  6481  0079E4                     l3495:
  6482  0079E4  FFFF               	dw	65535	; assembler added errata NOP
  6483  0079E6  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  6484  0079E8  EFF8  F03C         	goto	u3431
  6485  0079EC  EFFB  F03C         	goto	u3430
  6486  0079F0                     u3431:
  6487  0079F0  FFFF               	dw	65535	; assembler added errata NOP
  6488  0079F2  EFE7  F03C         	goto	l3493
  6489  0079F6                     u3430:
  6490  0079F6  FFFF               	dw	65535	; assembler added errata NOP
  6491  0079F8                     l3497:
  6492  0079F8  FFFF               	dw	65535	; assembler added errata NOP
  6493  0079FA  5009               	movf	___lomod@divisor^0,w,c
  6494  0079FC  5C01               	subwf	___lomod@dividend^0,w,c
  6495  0079FE  500A               	movf	(___lomod@divisor+1)^0,w,c
  6496  007A00  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  6497  007A02  500B               	movf	(___lomod@divisor+2)^0,w,c
  6498  007A04  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  6499  007A06  500C               	movf	(___lomod@divisor+3)^0,w,c
  6500  007A08  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  6501  007A0A  500D               	movf	(___lomod@divisor+4)^0,w,c
  6502  007A0C  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  6503  007A0E  500E               	movf	(___lomod@divisor+5)^0,w,c
  6504  007A10  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  6505  007A12  500F               	movf	(___lomod@divisor+6)^0,w,c
  6506  007A14  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  6507  007A16  5010               	movf	(___lomod@divisor+7)^0,w,c
  6508  007A18  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  6509  007A1A  A0D8               	btfss	status,0,c
  6510  007A1C  EF12  F03D         	goto	u3441
  6511  007A20  EF15  F03D         	goto	u3440
  6512  007A24                     u3441:
  6513  007A24  FFFF               	dw	65535	; assembler added errata NOP
  6514  007A26  EF26  F03D         	goto	l3501
  6515  007A2A                     u3440:
  6516  007A2A  FFFF               	dw	65535	; assembler added errata NOP
  6517  007A2C  5009               	movf	___lomod@divisor^0,w,c
  6518  007A2E  5E01               	subwf	___lomod@dividend^0,f,c
  6519  007A30  500A               	movf	(___lomod@divisor+1)^0,w,c
  6520  007A32  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  6521  007A34  500B               	movf	(___lomod@divisor+2)^0,w,c
  6522  007A36  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  6523  007A38  500C               	movf	(___lomod@divisor+3)^0,w,c
  6524  007A3A  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  6525  007A3C  500D               	movf	(___lomod@divisor+4)^0,w,c
  6526  007A3E  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  6527  007A40  500E               	movf	(___lomod@divisor+5)^0,w,c
  6528  007A42  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  6529  007A44  500F               	movf	(___lomod@divisor+6)^0,w,c
  6530  007A46  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  6531  007A48  5010               	movf	(___lomod@divisor+7)^0,w,c
  6532  007A4A  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  6533  007A4C                     l3501:
  6534  007A4C  FFFF               	dw	65535	; assembler added errata NOP
  6535  007A4E  90D8               	bcf	status,0,c
  6536  007A50  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  6537  007A52  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  6538  007A54  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  6539  007A56  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  6540  007A58  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  6541  007A5A  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  6542  007A5C  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  6543  007A5E  3209               	rrcf	___lomod@divisor^0,f,c
  6544  007A60  2E11               	decfsz	___lomod@counter^0,f,c
  6545  007A62  EFFC  F03C         	goto	l3497
  6546  007A66                     l747:
  6547  007A66  FFFF               	dw	65535	; assembler added errata NOP
  6548  007A68  C001  F001         	movff	___lomod@dividend,?___lomod
  6549  007A6C  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  6550  007A70  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  6551  007A74  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  6552  007A78  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  6553  007A7C  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  6554  007A80  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  6555  007A84  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  6556  007A88  0012               	return		;funcret
  6557  007A8A  FFFF               	dw	65535	; errata NOP
  6558  007A8C                     __end_of___lomod:
  6559                           	callstack 0
  6560                           
  6561 ;; *************** function ___lodiv *****************
  6562 ;; Defined at:
  6563 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lodiv.c"
  6564 ;; Parameters:    Size  Location     Type
  6565 ;;  dividend        8    0[COMRAM] unsigned long long 
  6566 ;;  divisor         8    8[COMRAM] unsigned long long 
  6567 ;; Auto vars:     Size  Location     Type
  6568 ;;  quotient        8   16[COMRAM] unsigned long long 
  6569 ;;  counter         1   24[COMRAM] unsigned char 
  6570 ;; Return value:  Size  Location     Type
  6571 ;;                  8    0[COMRAM] unsigned long long 
  6572 ;; Registers used:
  6573 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6574 ;; Tracked objects:
  6575 ;;		On entry : 0/0
  6576 ;;		On exit  : 0/0
  6577 ;;		Unchanged: 0/0
  6578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6579 ;;      Params:        16       0       0       0       0       0       0
  6580 ;;      Locals:         9       0       0       0       0       0       0
  6581 ;;      Temps:          0       0       0       0       0       0       0
  6582 ;;      Totals:        25       0       0       0       0       0       0
  6583 ;;Total ram usage:       25 bytes
  6584 ;; Hardware stack levels used:    1
  6585 ;; Hardware stack levels required when called:    1
  6586 ;; This function calls:
  6587 ;;		Nothing
  6588 ;; This function is called by:
  6589 ;;		_utoa
  6590 ;; This function uses a non-reentrant model
  6591 ;;
  6592                           
  6593                           	psect	text15
  6594  007D90                     __ptext15:
  6595                           	callstack 0
  6596  007D90                     ___lodiv:
  6597                           	callstack 0
  6598  007D90  FFFF               	dw	65535	; assembler added errata NOP
  6599  007D92  EE20  F011         	lfsr	2,___lodiv@quotient
  6600  007D96  0E07               	movlw	7
  6601  007D98                     u3381:
  6602  007D98  6ADE               	clrf	postinc2,c
  6603  007D9A  06E8               	decf	wreg,f,c
  6604  007D9C  E2FD               	bc	u3381
  6605  007D9E  5009               	movf	___lodiv@divisor^0,w,c
  6606  007DA0  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  6607  007DA2  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  6608  007DA4  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  6609  007DA6  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  6610  007DA8  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  6611  007DAA  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  6612  007DAC  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  6613  007DAE  B4D8               	btfsc	status,2,c
  6614  007DB0  EFDC  F03E         	goto	u3391
  6615  007DB4  EFDF  F03E         	goto	u3390
  6616  007DB8                     u3391:
  6617  007DB8  FFFF               	dw	65535	; assembler added errata NOP
  6618  007DBA  EF3A  F03F         	goto	l737
  6619  007DBE                     u3390:
  6620  007DBE  FFFF               	dw	65535	; assembler added errata NOP
  6621  007DC0  0E01               	movlw	1
  6622  007DC2  6E19               	movwf	___lodiv@counter^0,c
  6623  007DC4  EFEF  F03E         	goto	l3475
  6624  007DC8                     l3473:
  6625  007DC8  FFFF               	dw	65535	; assembler added errata NOP
  6626  007DCA  90D8               	bcf	status,0,c
  6627  007DCC  3609               	rlcf	___lodiv@divisor^0,f,c
  6628  007DCE  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  6629  007DD0  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  6630  007DD2  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  6631  007DD4  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  6632  007DD6  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  6633  007DD8  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  6634  007DDA  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  6635  007DDC  2A19               	incf	___lodiv@counter^0,f,c
  6636  007DDE                     l3475:
  6637  007DDE  FFFF               	dw	65535	; assembler added errata NOP
  6638  007DE0  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  6639  007DE2  EFF5  F03E         	goto	u3401
  6640  007DE6  EFF8  F03E         	goto	u3400
  6641  007DEA                     u3401:
  6642  007DEA  FFFF               	dw	65535	; assembler added errata NOP
  6643  007DEC  EFE4  F03E         	goto	l3473
  6644  007DF0                     u3400:
  6645  007DF0  FFFF               	dw	65535	; assembler added errata NOP
  6646  007DF2                     l3477:
  6647  007DF2  FFFF               	dw	65535	; assembler added errata NOP
  6648  007DF4  90D8               	bcf	status,0,c
  6649  007DF6  3611               	rlcf	___lodiv@quotient^0,f,c
  6650  007DF8  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  6651  007DFA  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  6652  007DFC  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  6653  007DFE  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  6654  007E00  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  6655  007E02  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  6656  007E04  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  6657  007E06  5009               	movf	___lodiv@divisor^0,w,c
  6658  007E08  5C01               	subwf	___lodiv@dividend^0,w,c
  6659  007E0A  500A               	movf	(___lodiv@divisor+1)^0,w,c
  6660  007E0C  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  6661  007E0E  500B               	movf	(___lodiv@divisor+2)^0,w,c
  6662  007E10  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  6663  007E12  500C               	movf	(___lodiv@divisor+3)^0,w,c
  6664  007E14  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  6665  007E16  500D               	movf	(___lodiv@divisor+4)^0,w,c
  6666  007E18  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  6667  007E1A  500E               	movf	(___lodiv@divisor+5)^0,w,c
  6668  007E1C  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  6669  007E1E  500F               	movf	(___lodiv@divisor+6)^0,w,c
  6670  007E20  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  6671  007E22  5010               	movf	(___lodiv@divisor+7)^0,w,c
  6672  007E24  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  6673  007E26  A0D8               	btfss	status,0,c
  6674  007E28  EF18  F03F         	goto	u3411
  6675  007E2C  EF1B  F03F         	goto	u3410
  6676  007E30                     u3411:
  6677  007E30  FFFF               	dw	65535	; assembler added errata NOP
  6678  007E32  EF2D  F03F         	goto	l3485
  6679  007E36                     u3410:
  6680  007E36  FFFF               	dw	65535	; assembler added errata NOP
  6681  007E38  5009               	movf	___lodiv@divisor^0,w,c
  6682  007E3A  5E01               	subwf	___lodiv@dividend^0,f,c
  6683  007E3C  500A               	movf	(___lodiv@divisor+1)^0,w,c
  6684  007E3E  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  6685  007E40  500B               	movf	(___lodiv@divisor+2)^0,w,c
  6686  007E42  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  6687  007E44  500C               	movf	(___lodiv@divisor+3)^0,w,c
  6688  007E46  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  6689  007E48  500D               	movf	(___lodiv@divisor+4)^0,w,c
  6690  007E4A  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  6691  007E4C  500E               	movf	(___lodiv@divisor+5)^0,w,c
  6692  007E4E  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  6693  007E50  500F               	movf	(___lodiv@divisor+6)^0,w,c
  6694  007E52  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  6695  007E54  5010               	movf	(___lodiv@divisor+7)^0,w,c
  6696  007E56  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  6697  007E58  8011               	bsf	___lodiv@quotient^0,0,c
  6698  007E5A                     l3485:
  6699  007E5A  FFFF               	dw	65535	; assembler added errata NOP
  6700  007E5C  90D8               	bcf	status,0,c
  6701  007E5E  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  6702  007E60  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  6703  007E62  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  6704  007E64  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  6705  007E66  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  6706  007E68  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  6707  007E6A  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  6708  007E6C  3209               	rrcf	___lodiv@divisor^0,f,c
  6709  007E6E  2E19               	decfsz	___lodiv@counter^0,f,c
  6710  007E70  EFF9  F03E         	goto	l3477
  6711  007E74                     l737:
  6712  007E74  FFFF               	dw	65535	; assembler added errata NOP
  6713  007E76  C011  F001         	movff	___lodiv@quotient,?___lodiv
  6714  007E7A  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  6715  007E7E  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  6716  007E82  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  6717  007E86  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  6718  007E8A  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  6719  007E8E  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  6720  007E92  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  6721  007E96  0012               	return		;funcret
  6722  007E98  FFFF               	dw	65535	; errata NOP
  6723  007E9A                     __end_of___lodiv:
  6724                           	callstack 0
  6725                           
  6726 ;; *************** function _strncmp *****************
  6727 ;; Defined at:
  6728 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  6729 ;; Parameters:    Size  Location     Type
  6730 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  6731 ;;		 -> STR_8(3), 
  6732 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  6733 ;;		 -> STR_105(3), STR_101(3), STR_96(3), STR_92(3), 
  6734 ;;		 -> STR_87(4), STR_83(4), STR_78(3), STR_73(3), 
  6735 ;;		 -> STR_68(4), STR_63(3), STR_58(3), STR_53(4), 
  6736 ;;		 -> STR_48(3), STR_43(3), STR_38(4), STR_33(3), 
  6737 ;;		 -> STR_29(3), STR_24(3), STR_20(3), STR_15(4), 
  6738 ;;		 -> STR_11(4), 
  6739 ;;  n               2    4[COMRAM] unsigned int 
  6740 ;; Auto vars:     Size  Location     Type
  6741 ;;  r               2    9[COMRAM] PTR const unsigned char 
  6742 ;;		 -> STR_105(3), STR_101(3), STR_96(3), STR_92(3), 
  6743 ;;		 -> STR_87(4), STR_83(4), STR_78(3), STR_73(3), 
  6744 ;;		 -> STR_68(4), STR_63(3), STR_58(3), STR_53(4), 
  6745 ;;		 -> STR_48(3), STR_43(3), STR_38(4), STR_33(3), 
  6746 ;;		 -> STR_29(3), STR_24(3), STR_20(3), STR_15(4), 
  6747 ;;		 -> STR_11(4), 
  6748 ;;  l               2    7[COMRAM] PTR const unsigned char 
  6749 ;;		 -> STR_8(3), 
  6750 ;; Return value:  Size  Location     Type
  6751 ;;                  2    0[COMRAM] int 
  6752 ;; Registers used:
  6753 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6754 ;; Tracked objects:
  6755 ;;		On entry : 0/0
  6756 ;;		On exit  : 0/0
  6757 ;;		Unchanged: 0/0
  6758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6759 ;;      Params:         6       0       0       0       0       0       0
  6760 ;;      Locals:         4       0       0       0       0       0       0
  6761 ;;      Temps:          1       0       0       0       0       0       0
  6762 ;;      Totals:        11       0       0       0       0       0       0
  6763 ;;Total ram usage:       11 bytes
  6764 ;; Hardware stack levels used:    1
  6765 ;; Hardware stack levels required when called:    1
  6766 ;; This function calls:
  6767 ;;		Nothing
  6768 ;; This function is called by:
  6769 ;;		_vfpfcnvrt
  6770 ;; This function uses a non-reentrant model
  6771 ;;
  6772                           
  6773                           	psect	text16
  6774  007C88                     __ptext16:
  6775                           	callstack 0
  6776  007C88                     _strncmp:
  6777                           	callstack 0
  6778  007C88  FFFF               	dw	65535	; assembler added errata NOP
  6779  007C8A  C001  F008         	movff	strncmp@_l,strncmp@l
  6780  007C8E  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  6781  007C92  C003  F00A         	movff	strncmp@_r,strncmp@r
  6782  007C96  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  6783  007C9A  0605               	decf	strncmp@n^0,f,c
  6784  007C9C  A0D8               	btfss	status,0,c
  6785  007C9E  0606               	decf	(strncmp@n+1)^0,f,c
  6786  007CA0  2805               	incf	strncmp@n^0,w,c
  6787  007CA2  E106               	bnz	u4281
  6788  007CA4  2806               	incf	(strncmp@n+1)^0,w,c
  6789  007CA6  A4D8               	btfss	status,2,c
  6790  007CA8  EF58  F03E         	goto	u4281
  6791  007CAC  EF5B  F03E         	goto	u4280
  6792  007CB0                     u4281:
  6793  007CB0  FFFF               	dw	65535	; assembler added errata NOP
  6794  007CB2  EF6A  F03E         	goto	l3883
  6795  007CB6                     u4280:
  6796  007CB6  FFFF               	dw	65535	; assembler added errata NOP
  6797  007CB8  0E00               	movlw	0
  6798  007CBA  6E02               	movwf	(?_strncmp+1)^0,c
  6799  007CBC  0E00               	movlw	0
  6800  007CBE  6E01               	movwf	?_strncmp^0,c
  6801  007CC0  EFC5  F03E         	goto	l1349
  6802  007CC4                     l3881:
  6803  007CC4  FFFF               	dw	65535	; assembler added errata NOP
  6804  007CC6  4A08               	infsnz	strncmp@l^0,f,c
  6805  007CC8  2A09               	incf	(strncmp@l+1)^0,f,c
  6806  007CCA  4A0A               	infsnz	strncmp@r^0,f,c
  6807  007CCC  2A0B               	incf	(strncmp@r+1)^0,f,c
  6808  007CCE  0605               	decf	strncmp@n^0,f,c
  6809  007CD0  A0D8               	btfss	status,0,c
  6810  007CD2  0606               	decf	(strncmp@n+1)^0,f,c
  6811  007CD4                     l3883:
  6812  007CD4  FFFF               	dw	65535	; assembler added errata NOP
  6813  007CD6  C008  FFF6         	movff	strncmp@l,tblptrl
  6814  007CDA  C009  FFF7         	movff	strncmp@l+1,tblptrh
  6815  007CDE                     	if	0	;tblptru may be non-zero
  6816  007CDE                     	endif
  6817  007CDE                     	if	0	;tblptru may be non-zero
  6818  007CDE                     	endif
  6819  007CDE  0008               	tblrd		*
  6820  007CE0  FFFF               	dw	65535	; errata NOP
  6821  007CE2  50F5               	movf	tablat,w,c
  6822  007CE4  0900               	iorlw	0
  6823  007CE6  B4D8               	btfsc	status,2,c
  6824  007CE8  EF78  F03E         	goto	u4291
  6825  007CEC  EF7B  F03E         	goto	u4290
  6826  007CF0                     u4291:
  6827  007CF0  FFFF               	dw	65535	; assembler added errata NOP
  6828  007CF2  EFB0  F03E         	goto	l3891
  6829  007CF6                     u4290:
  6830  007CF6  FFFF               	dw	65535	; assembler added errata NOP
  6831  007CF8  C00A  FFF6         	movff	strncmp@r,tblptrl
  6832  007CFC  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  6833  007D00                     	if	0	;tblptru may be non-zero
  6834  007D00                     	endif
  6835  007D00                     	if	0	;tblptru may be non-zero
  6836  007D00                     	endif
  6837  007D00  0008               	tblrd		*
  6838  007D02  FFFF               	dw	65535	; errata NOP
  6839  007D04  50F5               	movf	tablat,w,c
  6840  007D06  0900               	iorlw	0
  6841  007D08  B4D8               	btfsc	status,2,c
  6842  007D0A  EF89  F03E         	goto	u4301
  6843  007D0E  EF8C  F03E         	goto	u4300
  6844  007D12                     u4301:
  6845  007D12  FFFF               	dw	65535	; assembler added errata NOP
  6846  007D14  EFB0  F03E         	goto	l3891
  6847  007D18                     u4300:
  6848  007D18  FFFF               	dw	65535	; assembler added errata NOP
  6849  007D1A  5005               	movf	strncmp@n^0,w,c
  6850  007D1C  1006               	iorwf	(strncmp@n+1)^0,w,c
  6851  007D1E  B4D8               	btfsc	status,2,c
  6852  007D20  EF94  F03E         	goto	u4311
  6853  007D24  EF97  F03E         	goto	u4310
  6854  007D28                     u4311:
  6855  007D28  FFFF               	dw	65535	; assembler added errata NOP
  6856  007D2A  EFB0  F03E         	goto	l3891
  6857  007D2E                     u4310:
  6858  007D2E  FFFF               	dw	65535	; assembler added errata NOP
  6859  007D30  C008  FFF6         	movff	strncmp@l,tblptrl
  6860  007D34  C009  FFF7         	movff	strncmp@l+1,tblptrh
  6861  007D38                     	if	0	;tblptru may be non-zero
  6862  007D38                     	endif
  6863  007D38                     	if	0	;tblptru may be non-zero
  6864  007D38                     	endif
  6865  007D38  0008               	tblrd		*
  6866  007D3A  FFFF               	dw	65535	; errata NOP
  6867  007D3C  CFF5 F007          	movff	tablat,??_strncmp
  6868  007D40  C00A  FFF6         	movff	strncmp@r,tblptrl
  6869  007D44  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  6870  007D48                     	if	0	;tblptru may be non-zero
  6871  007D48                     	endif
  6872  007D48                     	if	0	;tblptru may be non-zero
  6873  007D48                     	endif
  6874  007D48  0008               	tblrd		*
  6875  007D4A  FFFF               	dw	65535	; errata NOP
  6876  007D4C  50F5               	movf	tablat,w,c
  6877  007D4E  1807               	xorwf	??_strncmp^0,w,c
  6878  007D50  B4D8               	btfsc	status,2,c
  6879  007D52  EFAD  F03E         	goto	u4321
  6880  007D56  EFB0  F03E         	goto	u4320
  6881  007D5A                     u4321:
  6882  007D5A  FFFF               	dw	65535	; assembler added errata NOP
  6883  007D5C  EF62  F03E         	goto	l3881
  6884  007D60                     u4320:
  6885  007D60                     l3891:
  6886  007D60  FFFF               	dw	65535	; assembler added errata NOP
  6887  007D62  C008  FFF6         	movff	strncmp@l,tblptrl
  6888  007D66  C009  FFF7         	movff	strncmp@l+1,tblptrh
  6889  007D6A                     	if	0	;tblptru may be non-zero
  6890  007D6A                     	endif
  6891  007D6A                     	if	0	;tblptru may be non-zero
  6892  007D6A                     	endif
  6893  007D6A  0008               	tblrd		*
  6894  007D6C  FFFF               	dw	65535	; errata NOP
  6895  007D6E  CFF5 F007          	movff	tablat,??_strncmp
  6896  007D72  C00A  FFF6         	movff	strncmp@r,tblptrl
  6897  007D76  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  6898  007D7A                     	if	0	;tblptru may be non-zero
  6899  007D7A                     	endif
  6900  007D7A                     	if	0	;tblptru may be non-zero
  6901  007D7A                     	endif
  6902  007D7A  0008               	tblrd		*
  6903  007D7C  FFFF               	dw	65535	; errata NOP
  6904  007D7E  50F5               	movf	tablat,w,c
  6905  007D80  5C07               	subwf	??_strncmp^0,w,c
  6906  007D82  6E01               	movwf	?_strncmp^0,c
  6907  007D84  6A02               	clrf	(?_strncmp+1)^0,c
  6908  007D86  A0D8               	btfss	status,0,c
  6909  007D88  0602               	decf	(?_strncmp+1)^0,f,c
  6910  007D8A                     l1349:
  6911  007D8A  FFFF               	dw	65535	; assembler added errata NOP
  6912  007D8C  0012               	return		;funcret
  6913  007D8E  FFFF               	dw	65535	; errata NOP
  6914  007D90                     __end_of_strncmp:
  6915                           	callstack 0
  6916                           
  6917 ;; *************** function _stoa *****************
  6918 ;; Defined at:
  6919 ;;		line 546 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6920 ;; Parameters:    Size  Location     Type
  6921 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  6922 ;;		 -> vsnprintf@f(6), 
  6923 ;;  s               2   11[COMRAM] PTR unsigned char 
  6924 ;;		 -> ?_snprintf(2), STR_6(49), STR_5(55), STR_4(39), 
  6925 ;;		 -> STR_3(9), STR_2(63), STR_1(47), 
  6926 ;; Auto vars:     Size  Location     Type
  6927 ;;  nuls            7   14[COMRAM] unsigned char [7]
  6928 ;;  l               2   29[COMRAM] int 
  6929 ;;  p               2   27[COMRAM] int 
  6930 ;;  cp              2   25[COMRAM] PTR unsigned char 
  6931 ;;		 -> stoa@nuls(7), ?_snprintf(2), STR_6(49), STR_5(55), 
  6932 ;;		 -> STR_4(39), STR_3(9), STR_2(63), STR_1(47), 
  6933 ;;  w               2   23[COMRAM] int 
  6934 ;;  i               2   21[COMRAM] int 
  6935 ;; Return value:  Size  Location     Type
  6936 ;;                  2    9[COMRAM] int 
  6937 ;; Registers used:
  6938 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6939 ;; Tracked objects:
  6940 ;;		On entry : 0/0
  6941 ;;		On exit  : 0/0
  6942 ;;		Unchanged: 0/0
  6943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6944 ;;      Params:         4       0       0       0       0       0       0
  6945 ;;      Locals:        17       0       0       0       0       0       0
  6946 ;;      Temps:          1       0       0       0       0       0       0
  6947 ;;      Totals:        22       0       0       0       0       0       0
  6948 ;;Total ram usage:       22 bytes
  6949 ;; Hardware stack levels used:    1
  6950 ;; Hardware stack levels required when called:    3
  6951 ;; This function calls:
  6952 ;;		_fputc
  6953 ;;		_strlen
  6954 ;; This function is called by:
  6955 ;;		_vfpfcnvrt
  6956 ;; This function uses a non-reentrant model
  6957 ;;
  6958                           
  6959                           	psect	text17
  6960  003526                     __ptext17:
  6961                           	callstack 0
  6962  003526                     _stoa:
  6963                           	callstack 0
  6964  003526  FFFF               	dw	65535	; assembler added errata NOP
  6965  003528                     
  6966                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 546: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 547: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 548:  
      +                             char *cp, nuls[] = "(null)";
  6967  003528  EE20  F0C4         	lfsr	2,stoa@F1152
  6968  00352C  EE10  F00F         	lfsr	1,stoa@nuls
  6969  003530  0E06               	movlw	6
  6970  003532                     u3871:
  6971  003532  CFDB FFE3          	movff	plusw2,plusw1
  6972  003536  06E8               	decf	wreg,f,c
  6973  003538  E2FC               	bc	u3871
  6974  00353A                     
  6975                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 549:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 552:     c
      +                          p = s;
  6976  00353A  C00C  F01A         	movff	stoa@s,stoa@cp
  6977  00353E  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  6978  003542                     
  6979                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 553:     if (!cp)
      +                           {
  6980  003542  501A               	movf	stoa@cp^0,w,c
  6981  003544  101B               	iorwf	(stoa@cp+1)^0,w,c
  6982  003546  A4D8               	btfss	status,2,c
  6983  003548  EFA8  F01A         	goto	u3881
  6984  00354C  EFAB  F01A         	goto	u3880
  6985  003550                     u3881:
  6986  003550  FFFF               	dw	65535	; assembler added errata NOP
  6987  003552  EFB0  F01A         	goto	l3697
  6988  003556                     u3880:
  6989  003556  FFFF               	dw	65535	; assembler added errata NOP
  6990  003558                     
  6991                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 554:         cp =
      +                           nuls;
  6992  003558  0E0F               	movlw	low stoa@nuls
  6993  00355A  6E1A               	movwf	stoa@cp^0,c
  6994  00355C  0E00               	movlw	high stoa@nuls
  6995  00355E  6E1B               	movwf	(stoa@cp+1)^0,c
  6996  003560                     l3697:
  6997  003560  FFFF               	dw	65535	; assembler added errata NOP
  6998                           
  6999                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 558:     l = strl
      +                          en(cp);
  7000  003562  C01A  F001         	movff	stoa@cp,strlen@s
  7001  003566  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  7002  00356A  ECD2  F01F         	call	_strlen	;wreg free
  7003  00356E  C001  F01E         	movff	?_strlen,stoa@l
  7004  003572  C002  F01F         	movff	?_strlen+1,stoa@l+1
  7005  003576                     
  7006                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 559:     p = prec
      +                          ;
  7007  003576  C088  F01C         	movff	_prec,stoa@p
  7008  00357A  C089  F01D         	movff	_prec+1,stoa@p+1
  7009  00357E                     
  7010                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 560:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  7011  00357E  BE1D               	btfsc	(stoa@p+1)^0,7,c
  7012  003580  EFC4  F01A         	goto	u3891
  7013  003584  EFC7  F01A         	goto	u3890
  7014  003588                     u3891:
  7015  003588  FFFF               	dw	65535	; assembler added errata NOP
  7016  00358A  EFE0  F01A         	goto	l1109
  7017  00358E                     u3890:
  7018  00358E  FFFF               	dw	65535	; assembler added errata NOP
  7019  003590  501E               	movf	stoa@l^0,w,c
  7020  003592  5C1C               	subwf	stoa@p^0,w,c
  7021  003594  501D               	movf	(stoa@p+1)^0,w,c
  7022  003596  0A80               	xorlw	128
  7023  003598  6E0E               	movwf	??_stoa^0,c
  7024  00359A  501F               	movf	(stoa@l+1)^0,w,c
  7025  00359C  0A80               	xorlw	128
  7026  00359E  580E               	subwfb	??_stoa^0,w,c
  7027  0035A0  A0D8               	btfss	status,0,c
  7028  0035A2  EFD5  F01A         	goto	u3901
  7029  0035A6  EFD8  F01A         	goto	u3900
  7030  0035AA                     u3901:
  7031  0035AA  FFFF               	dw	65535	; assembler added errata NOP
  7032  0035AC  EFDB  F01A         	goto	l1107
  7033  0035B0                     u3900:
  7034  0035B0  FFFF               	dw	65535	; assembler added errata NOP
  7035  0035B2  EFE0  F01A         	goto	l1109
  7036  0035B6                     l1107:
  7037  0035B6  FFFF               	dw	65535	; assembler added errata NOP
  7038  0035B8  C01C  F01E         	movff	stoa@p,stoa@l
  7039  0035BC  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  7040  0035C0                     l1109:
  7041  0035C0  FFFF               	dw	65535	; assembler added errata NOP
  7042                           
  7043                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 561:     p = l;
  7044  0035C2  C01E  F01C         	movff	stoa@l,stoa@p
  7045  0035C6  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  7046                           
  7047                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 562:     w = widt
      +                          h;
  7048  0035CA  C086  F018         	movff	_width,stoa@w
  7049  0035CE  C087  F019         	movff	_width+1,stoa@w+1
  7050                           
  7051                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 565:     if (!(fl
      +                          ags & (1 << 0))) {
  7052  0035D2  0100               	movlb	0	; () banked
  7053  0035D4  B18A               	btfsc	_flags& (0+255),0,b
  7054  0035D6  EFEF  F01A         	goto	u3911
  7055  0035DA  EFF2  F01A         	goto	u3910
  7056  0035DE                     u3911:
  7057  0035DE  FFFF               	dw	65535	; assembler added errata NOP
  7058  0035E0  EF13  F01B         	goto	l3713
  7059  0035E4                     u3910:
  7060  0035E4  FFFF               	dw	65535	; assembler added errata NOP
  7061  0035E6  EF02  F01B         	goto	l3711
  7062  0035EA                     l3707:
  7063  0035EA  FFFF               	dw	65535	; assembler added errata NOP
  7064                           
  7065                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 567:             
      +                          fputc(' ', fp);
  7066  0035EC  0E00               	movlw	0
  7067  0035EE  6E02               	movwf	(fputc@c+1)^0,c
  7068  0035F0  0E20               	movlw	32
  7069  0035F2  6E01               	movwf	fputc@c^0,c
  7070  0035F4  C00A  F003         	movff	stoa@fp,fputc@fp
  7071  0035F8  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  7072  0035FC  ECED  F03B         	call	_fputc	;wreg free
  7073  003600                     
  7074                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 568:             
      +                          ++l;
  7075  003600  4A1E               	infsnz	stoa@l^0,f,c
  7076  003602  2A1F               	incf	(stoa@l+1)^0,f,c
  7077  003604                     l3711:
  7078  003604  FFFF               	dw	65535	; assembler added errata NOP
  7079                           
  7080                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 566:         whil
      +                          e (l < w) {
  7081  003606  5018               	movf	stoa@w^0,w,c
  7082  003608  5C1E               	subwf	stoa@l^0,w,c
  7083  00360A  501F               	movf	(stoa@l+1)^0,w,c
  7084  00360C  0A80               	xorlw	128
  7085  00360E  6E0E               	movwf	??_stoa^0,c
  7086  003610  5019               	movf	(stoa@w+1)^0,w,c
  7087  003612  0A80               	xorlw	128
  7088  003614  580E               	subwfb	??_stoa^0,w,c
  7089  003616  A0D8               	btfss	status,0,c
  7090  003618  EF10  F01B         	goto	u3921
  7091  00361C  EF13  F01B         	goto	u3920
  7092  003620                     u3921:
  7093  003620  FFFF               	dw	65535	; assembler added errata NOP
  7094  003622  EFF5  F01A         	goto	l3707
  7095  003626                     u3920:
  7096  003626                     l3713:
  7097  003626  FFFF               	dw	65535	; assembler added errata NOP
  7098                           
  7099                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 573:     i = 0;
  7100  003628  0E00               	movlw	0
  7101  00362A  6E17               	movwf	(stoa@i+1)^0,c
  7102  00362C  0E00               	movlw	0
  7103  00362E  6E16               	movwf	stoa@i^0,c
  7104                           
  7105                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 574:     while (i
      +                           < p) {
  7106  003630  EF3A  F01B         	goto	l3721
  7107  003634                     l3715:
  7108  003634  FFFF               	dw	65535	; assembler added errata NOP
  7109                           
  7110                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 575:         fput
      +                          c(*cp, fp);
  7111  003636  C01A  FFF6         	movff	stoa@cp,tblptrl
  7112  00363A  C01B  FFF7         	movff	stoa@cp+1,tblptrh
  7113  00363E  6AF8               	clrf	tblptru,c
  7114  003640  0E05               	movlw	(high __ramtop+-1)
  7115  003642  64F7               	cpfsgt	tblptrh,c
  7116  003644  D004               	bra	u3937
  7117  003646  0008               	tblrd		*
  7118  003648  FFFF               	dw	65535	; errata NOP
  7119  00364A  50F5               	movf	tablat,w,c
  7120  00364C  D005               	bra	u3930
  7121  00364E                     u3937:
  7122  00364E  CFF6 FFE1          	movff	tblptrl,fsr1l
  7123  003652  CFF7 FFE2          	movff	tblptrh,fsr1h
  7124  003656  50E7               	movf	indf1,w,c
  7125  003658                     u3930:
  7126  003658  6E0E               	movwf	??_stoa^0,c
  7127  00365A  500E               	movf	??_stoa^0,w,c
  7128  00365C  6E01               	movwf	fputc@c^0,c
  7129  00365E  6A02               	clrf	(fputc@c+1)^0,c
  7130  003660  C00A  F003         	movff	stoa@fp,fputc@fp
  7131  003664  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  7132  003668  ECED  F03B         	call	_fputc	;wreg free
  7133  00366C                     
  7134                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 576:         ++cp
      +                          ;
  7135  00366C  4A1A               	infsnz	stoa@cp^0,f,c
  7136  00366E  2A1B               	incf	(stoa@cp+1)^0,f,c
  7137  003670                     
  7138                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 577:         ++i;
  7139  003670  4A16               	infsnz	stoa@i^0,f,c
  7140  003672  2A17               	incf	(stoa@i+1)^0,f,c
  7141  003674                     l3721:
  7142  003674  FFFF               	dw	65535	; assembler added errata NOP
  7143                           
  7144                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 574:     while (i
      +                           < p) {
  7145  003676  501C               	movf	stoa@p^0,w,c
  7146  003678  5C16               	subwf	stoa@i^0,w,c
  7147  00367A  5017               	movf	(stoa@i+1)^0,w,c
  7148  00367C  0A80               	xorlw	128
  7149  00367E  6E0E               	movwf	??_stoa^0,c
  7150  003680  501D               	movf	(stoa@p+1)^0,w,c
  7151  003682  0A80               	xorlw	128
  7152  003684  580E               	subwfb	??_stoa^0,w,c
  7153  003686  A0D8               	btfss	status,0,c
  7154  003688  EF48  F01B         	goto	u3941
  7155  00368C  EF4B  F01B         	goto	u3940
  7156  003690                     u3941:
  7157  003690  FFFF               	dw	65535	; assembler added errata NOP
  7158  003692  EF1A  F01B         	goto	l3715
  7159  003696                     u3940:
  7160  003696  FFFF               	dw	65535	; assembler added errata NOP
  7161  003698                     
  7162                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 581:     if (flag
      +                          s & (1 << 0)) {
  7163  003698  0100               	movlb	0	; () banked
  7164  00369A  A18A               	btfss	_flags& (0+255),0,b
  7165  00369C  EF52  F01B         	goto	u3951
  7166  0036A0  EF55  F01B         	goto	u3950
  7167  0036A4                     u3951:
  7168  0036A4  FFFF               	dw	65535	; assembler added errata NOP
  7169  0036A6  EF76  F01B         	goto	l1119
  7170  0036AA                     u3950:
  7171  0036AA  FFFF               	dw	65535	; assembler added errata NOP
  7172  0036AC  EF65  F01B         	goto	l3729
  7173  0036B0                     l3725:
  7174  0036B0  FFFF               	dw	65535	; assembler added errata NOP
  7175                           
  7176                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 583:             
      +                          fputc(' ', fp);
  7177  0036B2  0E00               	movlw	0
  7178  0036B4  6E02               	movwf	(fputc@c+1)^0,c
  7179  0036B6  0E20               	movlw	32
  7180  0036B8  6E01               	movwf	fputc@c^0,c
  7181  0036BA  C00A  F003         	movff	stoa@fp,fputc@fp
  7182  0036BE  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  7183  0036C2  ECED  F03B         	call	_fputc	;wreg free
  7184  0036C6                     
  7185                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 584:             
      +                          ++l;
  7186  0036C6  4A1E               	infsnz	stoa@l^0,f,c
  7187  0036C8  2A1F               	incf	(stoa@l+1)^0,f,c
  7188  0036CA                     l3729:
  7189  0036CA  FFFF               	dw	65535	; assembler added errata NOP
  7190                           
  7191                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 582:         whil
      +                          e (l < w) {
  7192  0036CC  5018               	movf	stoa@w^0,w,c
  7193  0036CE  5C1E               	subwf	stoa@l^0,w,c
  7194  0036D0  501F               	movf	(stoa@l+1)^0,w,c
  7195  0036D2  0A80               	xorlw	128
  7196  0036D4  6E0E               	movwf	??_stoa^0,c
  7197  0036D6  5019               	movf	(stoa@w+1)^0,w,c
  7198  0036D8  0A80               	xorlw	128
  7199  0036DA  580E               	subwfb	??_stoa^0,w,c
  7200  0036DC  A0D8               	btfss	status,0,c
  7201  0036DE  EF73  F01B         	goto	u3961
  7202  0036E2  EF76  F01B         	goto	u3960
  7203  0036E6                     u3961:
  7204  0036E6  FFFF               	dw	65535	; assembler added errata NOP
  7205  0036E8  EF58  F01B         	goto	l3725
  7206  0036EC                     u3960:
  7207  0036EC                     l1119:
  7208  0036EC  FFFF               	dw	65535	; assembler added errata NOP
  7209                           
  7210                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 588:     return l
      +                          ;
  7211  0036EE  C01E  F00A         	movff	stoa@l,?_stoa
  7212  0036F2  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  7213  0036F6  0012               	return		;funcret
  7214  0036F8  FFFF               	dw	65535	; errata NOP
  7215  0036FA                     __end_of_stoa:
  7216                           	callstack 0
  7217                           
  7218 ;; *************** function _otoa *****************
  7219 ;; Defined at:
  7220 ;;		line 507 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7221 ;; Parameters:    Size  Location     Type
  7222 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7223 ;;		 -> vsnprintf@f(6), 
  7224 ;;  d               8   29[COMRAM] unsigned long long 
  7225 ;; Auto vars:     Size  Location     Type
  7226 ;;  n               8   51[COMRAM] unsigned long long 
  7227 ;;  i               2   59[COMRAM] int 
  7228 ;;  w               2   49[COMRAM] int 
  7229 ;;  t               2   47[COMRAM] int 
  7230 ;;  p               2   45[COMRAM] int 
  7231 ;; Return value:  Size  Location     Type
  7232 ;;                  2   27[COMRAM] int 
  7233 ;; Registers used:
  7234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7235 ;; Tracked objects:
  7236 ;;		On entry : 0/0
  7237 ;;		On exit  : 0/0
  7238 ;;		Unchanged: 0/0
  7239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7240 ;;      Params:        10       0       0       0       0       0       0
  7241 ;;      Locals:        16       0       0       0       0       0       0
  7242 ;;      Temps:          8       0       0       0       0       0       0
  7243 ;;      Totals:        34       0       0       0       0       0       0
  7244 ;;Total ram usage:       34 bytes
  7245 ;; Hardware stack levels used:    1
  7246 ;; Hardware stack levels required when called:    5
  7247 ;; This function calls:
  7248 ;;		_pad
  7249 ;; This function is called by:
  7250 ;;		_vfpfcnvrt
  7251 ;; This function uses a non-reentrant model
  7252 ;;
  7253                           
  7254                           	psect	text18
  7255  003300                     __ptext18:
  7256                           	callstack 0
  7257  003300                     _otoa:
  7258                           	callstack 0
  7259  003300  FFFF               	dw	65535	; assembler added errata NOP
  7260  003302                     
  7261                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 507: static int o
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99
      +                          \common\doprnt.c: 508: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\dop
      +                          rnt.c: 509:     int i, p, t, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\com
      +                          mon\doprnt.c: 510:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\so
      +                          urces\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  7262  003302  0100               	movlb	0	; () banked
  7263  003304  BF89               	btfsc	(_prec+1)& (0+255),7,b
  7264  003306  EF87  F019         	goto	u3771
  7265  00330A  EF8A  F019         	goto	u3770
  7266  00330E                     u3771:
  7267  00330E  FFFF               	dw	65535	; assembler added errata NOP
  7268  003310  EF8C  F019         	goto	l3645
  7269  003314                     u3770:
  7270  003314  FFFF               	dw	65535	; assembler added errata NOP
  7271  003316                     
  7272                           ; BSR set to: 0
  7273                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 514:         flag
      +                          s &= ~(1 << 1);
  7274  003316  938A               	bcf	_flags& (0+255),1,b
  7275  003318                     l3645:
  7276  003318  FFFF               	dw	65535	; assembler added errata NOP
  7277                           
  7278                           ; BSR set to: 0
  7279                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 516:     p = (0 <
      +                           prec) ? prec : 1;
  7280  00331A  BF89               	btfsc	(_prec+1)& (0+255),7,b
  7281  00331C  EF9B  F019         	goto	u3780
  7282  003320  5189               	movf	(_prec+1)& (0+255),w,b
  7283  003322  E106               	bnz	u3781
  7284  003324  0588               	decf	_prec& (0+255),w,b
  7285  003326  B0D8               	btfsc	status,0,c
  7286  003328  EF98  F019         	goto	u3781
  7287  00332C  EF9B  F019         	goto	u3780
  7288  003330                     u3781:
  7289  003330  FFFF               	dw	65535	; assembler added errata NOP
  7290  003332  EFA2  F019         	goto	l1089
  7291  003336                     u3780:
  7292  003336  FFFF               	dw	65535	; assembler added errata NOP
  7293  003338                     
  7294                           ; BSR set to: 0
  7295  003338  0E00               	movlw	0
  7296  00333A  6E2F               	movwf	(otoa@p+1)^0,c
  7297  00333C  0E01               	movlw	1
  7298  00333E  6E2E               	movwf	otoa@p^0,c
  7299  003340  EFA7  F019         	goto	l1091
  7300  003344                     l1089:
  7301  003344  FFFF               	dw	65535	; assembler added errata NOP
  7302                           
  7303                           ; BSR set to: 0
  7304  003346  C088  F02E         	movff	_prec,otoa@p
  7305  00334A  C089  F02F         	movff	_prec+1,otoa@p+1
  7306  00334E                     l1091:
  7307  00334E  FFFF               	dw	65535	; assembler added errata NOP
  7308                           
  7309                           ; BSR set to: 0
  7310                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 517:     w = widt
      +                          h;
  7311  003350  C086  F032         	movff	_width,otoa@w
  7312  003354  C087  F033         	movff	_width+1,otoa@w+1
  7313                           
  7314                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 520:     n = d;
  7315  003358  C01E  F034         	movff	otoa@d,otoa@n
  7316  00335C  C01F  F035         	movff	otoa@d+1,otoa@n+1
  7317  003360  C020  F036         	movff	otoa@d+2,otoa@n+2
  7318  003364  C021  F037         	movff	otoa@d+3,otoa@n+3
  7319  003368  C022  F038         	movff	otoa@d+4,otoa@n+4
  7320  00336C  C023  F039         	movff	otoa@d+5,otoa@n+5
  7321  003370  C024  F03A         	movff	otoa@d+6,otoa@n+6
  7322  003374  C025  F03B         	movff	otoa@d+7,otoa@n+7
  7323  003378                     
  7324                           ; BSR set to: 0
  7325                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 521:     i = size
      +                          of(dbuf) - 1;
  7326  003378  0E00               	movlw	0
  7327  00337A  6E3D               	movwf	(otoa@i+1)^0,c
  7328  00337C  0E1F               	movlw	31
  7329  00337E  6E3C               	movwf	otoa@i^0,c
  7330  003380                     
  7331                           ; BSR set to: 0
  7332                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 522:     dbuf[i] 
      +                          = '\0';
  7333  003380  0E00               	movlw	0
  7334  003382  6FAD               	movwf	(_dbuf+31)& (0+255),b
  7335  003384                     
  7336                           ; BSR set to: 0
  7337                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 523:     t = 0;
  7338  003384  0E00               	movlw	0
  7339  003386  6E31               	movwf	(otoa@t+1)^0,c
  7340  003388  0E00               	movlw	0
  7341  00338A  6E30               	movwf	otoa@t^0,c
  7342                           
  7343                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 524:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7344  00338C  EF10  F01A         	goto	l3667
  7345  003390                     l3655:
  7346  003390  FFFF               	dw	65535	; assembler added errata NOP
  7347                           
  7348                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 525:         --i;
  7349  003392  063C               	decf	otoa@i^0,f,c
  7350  003394  A0D8               	btfss	status,0,c
  7351  003396  063D               	decf	(otoa@i+1)^0,f,c
  7352  003398                     
  7353                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 526:         t = 
      +                          n & 07;
  7354  003398  0E07               	movlw	7
  7355  00339A  1434               	andwf	otoa@n^0,w,c
  7356  00339C  6E30               	movwf	otoa@t^0,c
  7357  00339E  6A31               	clrf	(otoa@t+1)^0,c
  7358  0033A0                     
  7359                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 527:         dbuf
      +                          [i] = '0' + t;
  7360  0033A0  0E8E               	movlw	low _dbuf
  7361  0033A2  243C               	addwf	otoa@i^0,w,c
  7362  0033A4  6ED9               	movwf	fsr2l,c
  7363  0033A6  0E00               	movlw	high _dbuf
  7364  0033A8  203D               	addwfc	(otoa@i+1)^0,w,c
  7365  0033AA  6EDA               	movwf	fsr2h,c
  7366  0033AC  5030               	movf	otoa@t^0,w,c
  7367  0033AE  0F30               	addlw	48
  7368  0033B0  6EDF               	movwf	indf2,c
  7369  0033B2                     
  7370                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 528:         --p;
  7371  0033B2  062E               	decf	otoa@p^0,f,c
  7372  0033B4  A0D8               	btfss	status,0,c
  7373  0033B6  062F               	decf	(otoa@p+1)^0,f,c
  7374  0033B8                     
  7375                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 529:         --w;
  7376  0033B8  0632               	decf	otoa@w^0,f,c
  7377  0033BA  A0D8               	btfss	status,0,c
  7378  0033BC  0633               	decf	(otoa@w+1)^0,f,c
  7379  0033BE                     
  7380                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 530:         n = 
      +                          n >> 3;
  7381  0033BE  C034  F026         	movff	otoa@n,??_otoa
  7382  0033C2  C035  F027         	movff	otoa@n+1,??_otoa+1
  7383  0033C6  C036  F028         	movff	otoa@n+2,??_otoa+2
  7384  0033CA  C037  F029         	movff	otoa@n+3,??_otoa+3
  7385  0033CE  C038  F02A         	movff	otoa@n+4,??_otoa+4
  7386  0033D2  C039  F02B         	movff	otoa@n+5,??_otoa+5
  7387  0033D6  C03A  F02C         	movff	otoa@n+6,??_otoa+6
  7388  0033DA  C03B  F02D         	movff	otoa@n+7,??_otoa+7
  7389  0033DE  0E04               	movlw	4
  7390  0033E0  EFFC  F019         	goto	u3790
  7391  0033E4                     u3795:
  7392  0033E4  FFFF               	dw	65535	; assembler added errata NOP
  7393  0033E6  90D8               	bcf	status,0,c
  7394  0033E8  322D               	rrcf	(??_otoa+7)^0,f,c
  7395  0033EA  322C               	rrcf	(??_otoa+6)^0,f,c
  7396  0033EC  322B               	rrcf	(??_otoa+5)^0,f,c
  7397  0033EE  322A               	rrcf	(??_otoa+4)^0,f,c
  7398  0033F0  3229               	rrcf	(??_otoa+3)^0,f,c
  7399  0033F2  3228               	rrcf	(??_otoa+2)^0,f,c
  7400  0033F4  3227               	rrcf	(??_otoa+1)^0,f,c
  7401  0033F6  3226               	rrcf	??_otoa^0,f,c
  7402  0033F8                     u3790:
  7403  0033F8  FFFF               	dw	65535	; assembler added errata NOP
  7404  0033FA  2EE8               	decfsz	wreg,f,c
  7405  0033FC  EFF2  F019         	goto	u3795
  7406  003400  C026  F034         	movff	??_otoa,otoa@n
  7407  003404  C027  F035         	movff	??_otoa+1,otoa@n+1
  7408  003408  C028  F036         	movff	??_otoa+2,otoa@n+2
  7409  00340C  C029  F037         	movff	??_otoa+3,otoa@n+3
  7410  003410  C02A  F038         	movff	??_otoa+4,otoa@n+4
  7411  003414  C02B  F039         	movff	??_otoa+5,otoa@n+5
  7412  003418  C02C  F03A         	movff	??_otoa+6,otoa@n+6
  7413  00341C  C02D  F03B         	movff	??_otoa+7,otoa@n+7
  7414  003420                     l3667:
  7415  003420  FFFF               	dw	65535	; assembler added errata NOP
  7416                           
  7417                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 524:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7418  003422  BE3D               	btfsc	(otoa@i+1)^0,7,c
  7419  003424  EF1C  F01A         	goto	u3801
  7420  003428  503D               	movf	(otoa@i+1)^0,w,c
  7421  00342A  E109               	bnz	u3800
  7422  00342C  043C               	decf	otoa@i^0,w,c
  7423  00342E  A0D8               	btfss	status,0,c
  7424  003430  EF1C  F01A         	goto	u3801
  7425  003434  EF1F  F01A         	goto	u3800
  7426  003438                     u3801:
  7427  003438  FFFF               	dw	65535	; assembler added errata NOP
  7428  00343A  EF58  F01A         	goto	l1098
  7429  00343E                     u3800:
  7430  00343E  FFFF               	dw	65535	; assembler added errata NOP
  7431  003440  5034               	movf	otoa@n^0,w,c
  7432  003442  1035               	iorwf	(otoa@n+1)^0,w,c
  7433  003444  1036               	iorwf	(otoa@n+2)^0,w,c
  7434  003446  1037               	iorwf	(otoa@n+3)^0,w,c
  7435  003448  1038               	iorwf	(otoa@n+4)^0,w,c
  7436  00344A  1039               	iorwf	(otoa@n+5)^0,w,c
  7437  00344C  103A               	iorwf	(otoa@n+6)^0,w,c
  7438  00344E  103B               	iorwf	(otoa@n+7)^0,w,c
  7439  003450  A4D8               	btfss	status,2,c
  7440  003452  EF2D  F01A         	goto	u3811
  7441  003456  EF30  F01A         	goto	u3810
  7442  00345A                     u3811:
  7443  00345A  FFFF               	dw	65535	; assembler added errata NOP
  7444  00345C  EFC8  F019         	goto	l3655
  7445  003460                     u3810:
  7446  003460  FFFF               	dw	65535	; assembler added errata NOP
  7447  003462  BE2F               	btfsc	(otoa@p+1)^0,7,c
  7448  003464  EF3F  F01A         	goto	u3820
  7449  003468  502F               	movf	(otoa@p+1)^0,w,c
  7450  00346A  E106               	bnz	u3821
  7451  00346C  042E               	decf	otoa@p^0,w,c
  7452  00346E  B0D8               	btfsc	status,0,c
  7453  003470  EF3C  F01A         	goto	u3821
  7454  003474  EF3F  F01A         	goto	u3820
  7455  003478                     u3821:
  7456  003478  FFFF               	dw	65535	; assembler added errata NOP
  7457  00347A  EFC8  F019         	goto	l3655
  7458  00347E                     u3820:
  7459  00347E  FFFF               	dw	65535	; assembler added errata NOP
  7460  003480  BE33               	btfsc	(otoa@w+1)^0,7,c
  7461  003482  EF4B  F01A         	goto	u3831
  7462  003486  5033               	movf	(otoa@w+1)^0,w,c
  7463  003488  E109               	bnz	u3830
  7464  00348A  0432               	decf	otoa@w^0,w,c
  7465  00348C  A0D8               	btfss	status,0,c
  7466  00348E  EF4B  F01A         	goto	u3831
  7467  003492  EF4E  F01A         	goto	u3830
  7468  003496                     u3831:
  7469  003496  FFFF               	dw	65535	; assembler added errata NOP
  7470  003498  EF58  F01A         	goto	l1098
  7471  00349C                     u3830:
  7472  00349C  FFFF               	dw	65535	; assembler added errata NOP
  7473  00349E  0100               	movlb	0	; () banked
  7474  0034A0  B38A               	btfsc	_flags& (0+255),1,b
  7475  0034A2  EF55  F01A         	goto	u3841
  7476  0034A6  EF58  F01A         	goto	u3840
  7477  0034AA                     u3841:
  7478  0034AA  FFFF               	dw	65535	; assembler added errata NOP
  7479  0034AC  EFC8  F019         	goto	l3655
  7480  0034B0                     u3840:
  7481  0034B0                     l1098:
  7482  0034B0  FFFF               	dw	65535	; assembler added errata NOP
  7483                           
  7484                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 534:     if ((fla
      +                          gs & (1 << 4)) && t) {
  7485  0034B2  0100               	movlb	0	; () banked
  7486  0034B4  A98A               	btfss	_flags& (0+255),4,b
  7487  0034B6  EF5F  F01A         	goto	u3851
  7488  0034BA  EF62  F01A         	goto	u3850
  7489  0034BE                     u3851:
  7490  0034BE  FFFF               	dw	65535	; assembler added errata NOP
  7491  0034C0  EF7C  F01A         	goto	l3685
  7492  0034C4                     u3850:
  7493  0034C4  FFFF               	dw	65535	; assembler added errata NOP
  7494  0034C6                     
  7495                           ; BSR set to: 0
  7496  0034C6  5030               	movf	otoa@t^0,w,c
  7497  0034C8  1031               	iorwf	(otoa@t+1)^0,w,c
  7498  0034CA  B4D8               	btfsc	status,2,c
  7499  0034CC  EF6A  F01A         	goto	u3861
  7500  0034D0  EF6D  F01A         	goto	u3860
  7501  0034D4                     u3861:
  7502  0034D4  FFFF               	dw	65535	; assembler added errata NOP
  7503  0034D6  EF7C  F01A         	goto	l3685
  7504  0034DA                     u3860:
  7505  0034DA  FFFF               	dw	65535	; assembler added errata NOP
  7506  0034DC                     
  7507                           ; BSR set to: 0
  7508                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 535:         --i;
  7509  0034DC  063C               	decf	otoa@i^0,f,c
  7510  0034DE  A0D8               	btfss	status,0,c
  7511  0034E0  063D               	decf	(otoa@i+1)^0,f,c
  7512  0034E2                     
  7513                           ; BSR set to: 0
  7514                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 536:         dbuf
      +                          [i] = '0';
  7515  0034E2  0E8E               	movlw	low _dbuf
  7516  0034E4  243C               	addwf	otoa@i^0,w,c
  7517  0034E6  6ED9               	movwf	fsr2l,c
  7518  0034E8  0E00               	movlw	high _dbuf
  7519  0034EA  203D               	addwfc	(otoa@i+1)^0,w,c
  7520  0034EC  6EDA               	movwf	fsr2h,c
  7521  0034EE  0E30               	movlw	48
  7522  0034F0  6EDF               	movwf	indf2,c
  7523  0034F2                     
  7524                           ; BSR set to: 0
  7525                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 537:         --w;
  7526  0034F2  0632               	decf	otoa@w^0,f,c
  7527  0034F4  A0D8               	btfss	status,0,c
  7528  0034F6  0633               	decf	(otoa@w+1)^0,f,c
  7529  0034F8                     l3685:
  7530  0034F8  FFFF               	dw	65535	; assembler added errata NOP
  7531                           
  7532                           ; BSR set to: 0
  7533                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 541:     return p
      +                          ad(fp, &dbuf[i], w);
  7534  0034FA  C01C  F011         	movff	otoa@fp,pad@fp
  7535  0034FE  C01D  F012         	movff	otoa@fp+1,pad@fp+1
  7536  003502  0E8E               	movlw	low _dbuf
  7537  003504  243C               	addwf	otoa@i^0,w,c
  7538  003506  6E13               	movwf	pad@buf^0,c
  7539  003508  0E00               	movlw	high _dbuf
  7540  00350A  203D               	addwfc	(otoa@i+1)^0,w,c
  7541  00350C  6E14               	movwf	(pad@buf+1)^0,c
  7542  00350E  C032  F015         	movff	otoa@w,pad@p
  7543  003512  C033  F016         	movff	otoa@w+1,pad@p+1
  7544  003516  EC5E  F03C         	call	_pad	;wreg free
  7545  00351A  C011  F01C         	movff	?_pad,?_otoa
  7546  00351E  C012  F01D         	movff	?_pad+1,?_otoa+1
  7547  003522  0012               	return		;funcret
  7548  003524  FFFF               	dw	65535	; errata NOP
  7549  003526                     __end_of_otoa:
  7550                           	callstack 0
  7551                           
  7552 ;; *************** function _dtoa *****************
  7553 ;; Defined at:
  7554 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7555 ;; Parameters:    Size  Location     Type
  7556 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7557 ;;		 -> vsnprintf@f(6), 
  7558 ;;  d               8   29[COMRAM] long long 
  7559 ;; Auto vars:     Size  Location     Type
  7560 ;;  n               8   53[COMRAM] long long 
  7561 ;;  i               2   61[COMRAM] int 
  7562 ;;  s               2   51[COMRAM] int 
  7563 ;;  w               2   49[COMRAM] int 
  7564 ;;  p               2   47[COMRAM] int 
  7565 ;; Return value:  Size  Location     Type
  7566 ;;                  2   27[COMRAM] int 
  7567 ;; Registers used:
  7568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7569 ;; Tracked objects:
  7570 ;;		On entry : 0/0
  7571 ;;		On exit  : 0/0
  7572 ;;		Unchanged: 0/0
  7573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7574 ;;      Params:        10       0       0       0       0       0       0
  7575 ;;      Locals:        18       0       0       0       0       0       0
  7576 ;;      Temps:          8       0       0       0       0       0       0
  7577 ;;      Totals:        36       0       0       0       0       0       0
  7578 ;;Total ram usage:       36 bytes
  7579 ;; Hardware stack levels used:    1
  7580 ;; Hardware stack levels required when called:    5
  7581 ;; This function calls:
  7582 ;;		___aodiv
  7583 ;;		___aomod
  7584 ;;		_abs
  7585 ;;		_pad
  7586 ;; This function is called by:
  7587 ;;		_vfpfcnvrt
  7588 ;; This function uses a non-reentrant model
  7589 ;;
  7590                           
  7591                           	psect	text19
  7592  002A70                     __ptext19:
  7593                           	callstack 0
  7594  002A70                     _dtoa:
  7595                           	callstack 0
  7596  002A70  FFFF               	dw	65535	; assembler added errata NOP
  7597  002A72                     
  7598                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
  7599  002A72  C01E  F036         	movff	dtoa@d,dtoa@n
  7600  002A76  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  7601  002A7A  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  7602  002A7E  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  7603  002A82  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  7604  002A86  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  7605  002A8A  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  7606  002A8E  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  7607  002A92                     
  7608                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
  7609  002A92  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  7610  002A94  EF4E  F015         	goto	u3621
  7611  002A98  EF52  F015         	goto	u3620
  7612  002A9C                     u3621:
  7613  002A9C  FFFF               	dw	65535	; assembler added errata NOP
  7614  002A9E  0E01               	movlw	1
  7615  002AA0  EF54  F015         	goto	u3630
  7616  002AA4                     u3620:
  7617  002AA4  FFFF               	dw	65535	; assembler added errata NOP
  7618  002AA6  0E00               	movlw	0
  7619  002AA8                     u3630:
  7620  002AA8  FFFF               	dw	65535	; assembler added errata NOP
  7621  002AAA  6E34               	movwf	dtoa@s^0,c
  7622  002AAC  6A35               	clrf	(dtoa@s+1)^0,c
  7623                           
  7624                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  7625  002AAE  5034               	movf	dtoa@s^0,w,c
  7626  002AB0  1035               	iorwf	(dtoa@s+1)^0,w,c
  7627  002AB2  B4D8               	btfsc	status,2,c
  7628  002AB4  EF5E  F015         	goto	u3641
  7629  002AB8  EF61  F015         	goto	u3640
  7630  002ABC                     u3641:
  7631  002ABC  FFFF               	dw	65535	; assembler added errata NOP
  7632  002ABE  EF72  F015         	goto	l3585
  7633  002AC2                     u3640:
  7634  002AC2  FFFF               	dw	65535	; assembler added errata NOP
  7635  002AC4                     
  7636                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
  7637  002AC4  1E3D               	comf	(dtoa@n+7)^0,f,c
  7638  002AC6  1E3C               	comf	(dtoa@n+6)^0,f,c
  7639  002AC8  1E3B               	comf	(dtoa@n+5)^0,f,c
  7640  002ACA  1E3A               	comf	(dtoa@n+4)^0,f,c
  7641  002ACC  1E39               	comf	(dtoa@n+3)^0,f,c
  7642  002ACE  1E38               	comf	(dtoa@n+2)^0,f,c
  7643  002AD0  1E37               	comf	(dtoa@n+1)^0,f,c
  7644  002AD2  6C36               	negf	dtoa@n^0,c
  7645  002AD4  0E00               	movlw	0
  7646  002AD6  2237               	addwfc	(dtoa@n+1)^0,f,c
  7647  002AD8  2238               	addwfc	(dtoa@n+2)^0,f,c
  7648  002ADA  2239               	addwfc	(dtoa@n+3)^0,f,c
  7649  002ADC  223A               	addwfc	(dtoa@n+4)^0,f,c
  7650  002ADE  223B               	addwfc	(dtoa@n+5)^0,f,c
  7651  002AE0  223C               	addwfc	(dtoa@n+6)^0,f,c
  7652  002AE2  223D               	addwfc	(dtoa@n+7)^0,f,c
  7653  002AE4                     l3585:
  7654  002AE4  FFFF               	dw	65535	; assembler added errata NOP
  7655                           
  7656                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
  7657  002AE6  0100               	movlb	0	; () banked
  7658  002AE8  BF89               	btfsc	(_prec+1)& (0+255),7,b
  7659  002AEA  EF79  F015         	goto	u3651
  7660  002AEE  EF7C  F015         	goto	u3650
  7661  002AF2                     u3651:
  7662  002AF2  FFFF               	dw	65535	; assembler added errata NOP
  7663  002AF4  EF7E  F015         	goto	l3589
  7664  002AF8                     u3650:
  7665  002AF8  FFFF               	dw	65535	; assembler added errata NOP
  7666  002AFA                     
  7667                           ; BSR set to: 0
  7668                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
  7669  002AFA  938A               	bcf	_flags& (0+255),1,b
  7670  002AFC                     l3589:
  7671  002AFC  FFFF               	dw	65535	; assembler added errata NOP
  7672                           
  7673                           ; BSR set to: 0
  7674                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
  7675  002AFE  BF89               	btfsc	(_prec+1)& (0+255),7,b
  7676  002B00  EF8D  F015         	goto	u3660
  7677  002B04  5189               	movf	(_prec+1)& (0+255),w,b
  7678  002B06  E106               	bnz	u3661
  7679  002B08  0588               	decf	_prec& (0+255),w,b
  7680  002B0A  B0D8               	btfsc	status,0,c
  7681  002B0C  EF8A  F015         	goto	u3661
  7682  002B10  EF8D  F015         	goto	u3660
  7683  002B14                     u3661:
  7684  002B14  FFFF               	dw	65535	; assembler added errata NOP
  7685  002B16  EF94  F015         	goto	l1064
  7686  002B1A                     u3660:
  7687  002B1A  FFFF               	dw	65535	; assembler added errata NOP
  7688  002B1C                     
  7689                           ; BSR set to: 0
  7690  002B1C  0E00               	movlw	0
  7691  002B1E  6E31               	movwf	(dtoa@p+1)^0,c
  7692  002B20  0E01               	movlw	1
  7693  002B22  6E30               	movwf	dtoa@p^0,c
  7694  002B24  EF99  F015         	goto	l1066
  7695  002B28                     l1064:
  7696  002B28  FFFF               	dw	65535	; assembler added errata NOP
  7697                           
  7698                           ; BSR set to: 0
  7699  002B2A  C088  F030         	movff	_prec,dtoa@p
  7700  002B2E  C089  F031         	movff	_prec+1,dtoa@p+1
  7701  002B32                     l1066:
  7702  002B32  FFFF               	dw	65535	; assembler added errata NOP
  7703                           
  7704                           ; BSR set to: 0
  7705                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
  7706  002B34  C086  F032         	movff	_width,dtoa@w
  7707  002B38  C087  F033         	movff	_width+1,dtoa@w+1
  7708  002B3C                     
  7709                           ; BSR set to: 0
  7710                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
  7711  002B3C  5034               	movf	dtoa@s^0,w,c
  7712  002B3E  1035               	iorwf	(dtoa@s+1)^0,w,c
  7713  002B40  A4D8               	btfss	status,2,c
  7714  002B42  EFA5  F015         	goto	u3671
  7715  002B46  EFA8  F015         	goto	u3670
  7716  002B4A                     u3671:
  7717  002B4A  FFFF               	dw	65535	; assembler added errata NOP
  7718  002B4C  EFB1  F015         	goto	l3597
  7719  002B50                     u3670:
  7720  002B50  FFFF               	dw	65535	; assembler added errata NOP
  7721  002B52                     
  7722                           ; BSR set to: 0
  7723  002B52  A58A               	btfss	_flags& (0+255),2,b
  7724  002B54  EFAE  F015         	goto	u3681
  7725  002B58  EFB1  F015         	goto	u3680
  7726  002B5C                     u3681:
  7727  002B5C  FFFF               	dw	65535	; assembler added errata NOP
  7728  002B5E  EFB5  F015         	goto	l3599
  7729  002B62                     u3680:
  7730  002B62                     l3597:
  7731  002B62  FFFF               	dw	65535	; assembler added errata NOP
  7732                           
  7733                           ; BSR set to: 0
  7734                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
  7735  002B64  0632               	decf	dtoa@w^0,f,c
  7736  002B66  A0D8               	btfss	status,0,c
  7737  002B68  0633               	decf	(dtoa@w+1)^0,f,c
  7738  002B6A                     l3599:
  7739  002B6A  FFFF               	dw	65535	; assembler added errata NOP
  7740                           
  7741                           ; BSR set to: 0
  7742                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
  7743  002B6C  0E00               	movlw	0
  7744  002B6E  6E3F               	movwf	(dtoa@i+1)^0,c
  7745  002B70  0E1F               	movlw	31
  7746  002B72  6E3E               	movwf	dtoa@i^0,c
  7747  002B74                     
  7748                           ; BSR set to: 0
  7749                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
  7750  002B74  0E00               	movlw	0
  7751  002B76  6FAD               	movwf	(_dbuf+31)& (0+255),b
  7752                           
  7753                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7754  002B78  EF3B  F016         	goto	l3613
  7755  002B7C                     l3603:
  7756  002B7C  FFFF               	dw	65535	; assembler added errata NOP
  7757                           
  7758                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
  7759  002B7E  063E               	decf	dtoa@i^0,f,c
  7760  002B80  A0D8               	btfss	status,0,c
  7761  002B82  063F               	decf	(dtoa@i+1)^0,f,c
  7762  002B84                     
  7763                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
  7764  002B84  0E8E               	movlw	low _dbuf
  7765  002B86  243E               	addwf	dtoa@i^0,w,c
  7766  002B88  6ED9               	movwf	fsr2l,c
  7767  002B8A  0E00               	movlw	high _dbuf
  7768  002B8C  203F               	addwfc	(dtoa@i+1)^0,w,c
  7769  002B8E  6EDA               	movwf	fsr2h,c
  7770  002B90  C036  F001         	movff	dtoa@n,___aomod@dividend
  7771  002B94  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  7772  002B98  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  7773  002B9C  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  7774  002BA0  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  7775  002BA4  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  7776  002BA8  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  7777  002BAC  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  7778  002BB0  0E0A               	movlw	10
  7779  002BB2  6E09               	movwf	___aomod@divisor^0,c
  7780  002BB4  0E00               	movlw	0
  7781  002BB6  6E0A               	movwf	(___aomod@divisor+1)^0,c
  7782  002BB8  0E00               	movlw	0
  7783  002BBA  6E0B               	movwf	(___aomod@divisor+2)^0,c
  7784  002BBC  0E00               	movlw	0
  7785  002BBE  6E0C               	movwf	(___aomod@divisor+3)^0,c
  7786  002BC0  0E00               	movlw	0
  7787  002BC2  6E0D               	movwf	(___aomod@divisor+4)^0,c
  7788  002BC4  0E00               	movlw	0
  7789  002BC6  6E0E               	movwf	(___aomod@divisor+5)^0,c
  7790  002BC8  0E00               	movlw	0
  7791  002BCA  6E0F               	movwf	(___aomod@divisor+6)^0,c
  7792  002BCC  0E00               	movlw	0
  7793  002BCE  6E10               	movwf	(___aomod@divisor+7)^0,c
  7794  002BD0  EC3E  F01D         	call	___aomod	;wreg free
  7795  002BD4  C001  F026         	movff	?___aomod,??_dtoa
  7796  002BD8  C002  F027         	movff	?___aomod+1,??_dtoa+1
  7797  002BDC  C003  F028         	movff	?___aomod+2,??_dtoa+2
  7798  002BE0  C004  F029         	movff	?___aomod+3,??_dtoa+3
  7799  002BE4  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  7800  002BE8  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  7801  002BEC  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  7802  002BF0  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  7803  002BF4  C026  F013         	movff	??_dtoa,abs@a
  7804  002BF8  C028  F014         	movff	??_dtoa+2,abs@a+1
  7805  002BFC  ECA6  F038         	call	_abs	;wreg free
  7806  002C00  5013               	movf	?_abs^0,w,c
  7807  002C02  0F30               	addlw	48
  7808  002C04  6EDF               	movwf	indf2,c
  7809  002C06                     
  7810                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
  7811  002C06  0630               	decf	dtoa@p^0,f,c
  7812  002C08  A0D8               	btfss	status,0,c
  7813  002C0A  0631               	decf	(dtoa@p+1)^0,f,c
  7814  002C0C                     
  7815                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
  7816  002C0C  0632               	decf	dtoa@w^0,f,c
  7817  002C0E  A0D8               	btfss	status,0,c
  7818  002C10  0633               	decf	(dtoa@w+1)^0,f,c
  7819  002C12                     
  7820                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
  7821  002C12  C036  F001         	movff	dtoa@n,___aodiv@dividend
  7822  002C16  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  7823  002C1A  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  7824  002C1E  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  7825  002C22  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  7826  002C26  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  7827  002C2A  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  7828  002C2E  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  7829  002C32  0E0A               	movlw	10
  7830  002C34  6E09               	movwf	___aodiv@divisor^0,c
  7831  002C36  0E00               	movlw	0
  7832  002C38  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  7833  002C3A  0E00               	movlw	0
  7834  002C3C  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  7835  002C3E  0E00               	movlw	0
  7836  002C40  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  7837  002C42  0E00               	movlw	0
  7838  002C44  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  7839  002C46  0E00               	movlw	0
  7840  002C48  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  7841  002C4A  0E00               	movlw	0
  7842  002C4C  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  7843  002C4E  0E00               	movlw	0
  7844  002C50  6E10               	movwf	(___aodiv@divisor+7)^0,c
  7845  002C52  EC64  F01C         	call	___aodiv	;wreg free
  7846  002C56  C001  F036         	movff	?___aodiv,dtoa@n
  7847  002C5A  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  7848  002C5E  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  7849  002C62  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  7850  002C66  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  7851  002C6A  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  7852  002C6E  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  7853  002C72  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  7854  002C76                     l3613:
  7855  002C76  FFFF               	dw	65535	; assembler added errata NOP
  7856                           
  7857                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7858  002C78  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  7859  002C7A  EF47  F016         	goto	u3691
  7860  002C7E  503F               	movf	(dtoa@i+1)^0,w,c
  7861  002C80  E109               	bnz	u3690
  7862  002C82  043E               	decf	dtoa@i^0,w,c
  7863  002C84  A0D8               	btfss	status,0,c
  7864  002C86  EF47  F016         	goto	u3691
  7865  002C8A  EF4A  F016         	goto	u3690
  7866  002C8E                     u3691:
  7867  002C8E  FFFF               	dw	65535	; assembler added errata NOP
  7868  002C90  EF83  F016         	goto	l3623
  7869  002C94                     u3690:
  7870  002C94  FFFF               	dw	65535	; assembler added errata NOP
  7871  002C96  5036               	movf	dtoa@n^0,w,c
  7872  002C98  1037               	iorwf	(dtoa@n+1)^0,w,c
  7873  002C9A  1038               	iorwf	(dtoa@n+2)^0,w,c
  7874  002C9C  1039               	iorwf	(dtoa@n+3)^0,w,c
  7875  002C9E  103A               	iorwf	(dtoa@n+4)^0,w,c
  7876  002CA0  103B               	iorwf	(dtoa@n+5)^0,w,c
  7877  002CA2  103C               	iorwf	(dtoa@n+6)^0,w,c
  7878  002CA4  103D               	iorwf	(dtoa@n+7)^0,w,c
  7879  002CA6  A4D8               	btfss	status,2,c
  7880  002CA8  EF58  F016         	goto	u3701
  7881  002CAC  EF5B  F016         	goto	u3700
  7882  002CB0                     u3701:
  7883  002CB0  FFFF               	dw	65535	; assembler added errata NOP
  7884  002CB2  EFBE  F015         	goto	l3603
  7885  002CB6                     u3700:
  7886  002CB6  FFFF               	dw	65535	; assembler added errata NOP
  7887  002CB8  BE31               	btfsc	(dtoa@p+1)^0,7,c
  7888  002CBA  EF6A  F016         	goto	u3710
  7889  002CBE  5031               	movf	(dtoa@p+1)^0,w,c
  7890  002CC0  E106               	bnz	u3711
  7891  002CC2  0430               	decf	dtoa@p^0,w,c
  7892  002CC4  B0D8               	btfsc	status,0,c
  7893  002CC6  EF67  F016         	goto	u3711
  7894  002CCA  EF6A  F016         	goto	u3710
  7895  002CCE                     u3711:
  7896  002CCE  FFFF               	dw	65535	; assembler added errata NOP
  7897  002CD0  EFBE  F015         	goto	l3603
  7898  002CD4                     u3710:
  7899  002CD4  FFFF               	dw	65535	; assembler added errata NOP
  7900  002CD6  BE33               	btfsc	(dtoa@w+1)^0,7,c
  7901  002CD8  EF76  F016         	goto	u3721
  7902  002CDC  5033               	movf	(dtoa@w+1)^0,w,c
  7903  002CDE  E109               	bnz	u3720
  7904  002CE0  0432               	decf	dtoa@w^0,w,c
  7905  002CE2  A0D8               	btfss	status,0,c
  7906  002CE4  EF76  F016         	goto	u3721
  7907  002CE8  EF79  F016         	goto	u3720
  7908  002CEC                     u3721:
  7909  002CEC  FFFF               	dw	65535	; assembler added errata NOP
  7910  002CEE  EF83  F016         	goto	l3623
  7911  002CF2                     u3720:
  7912  002CF2  FFFF               	dw	65535	; assembler added errata NOP
  7913  002CF4  0100               	movlb	0	; () banked
  7914  002CF6  B38A               	btfsc	_flags& (0+255),1,b
  7915  002CF8  EF80  F016         	goto	u3731
  7916  002CFC  EF83  F016         	goto	u3730
  7917  002D00                     u3731:
  7918  002D00  FFFF               	dw	65535	; assembler added errata NOP
  7919  002D02  EFBE  F015         	goto	l3603
  7920  002D06                     u3730:
  7921  002D06                     l3623:
  7922  002D06  FFFF               	dw	65535	; assembler added errata NOP
  7923                           
  7924                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
  7925  002D08  5034               	movf	dtoa@s^0,w,c
  7926  002D0A  1035               	iorwf	(dtoa@s+1)^0,w,c
  7927  002D0C  A4D8               	btfss	status,2,c
  7928  002D0E  EF8B  F016         	goto	u3741
  7929  002D12  EF8E  F016         	goto	u3740
  7930  002D16                     u3741:
  7931  002D16  FFFF               	dw	65535	; assembler added errata NOP
  7932  002D18  EF98  F016         	goto	l3627
  7933  002D1C                     u3740:
  7934  002D1C  FFFF               	dw	65535	; assembler added errata NOP
  7935  002D1E  0100               	movlb	0	; () banked
  7936  002D20  A58A               	btfss	_flags& (0+255),2,b
  7937  002D22  EF95  F016         	goto	u3751
  7938  002D26  EF98  F016         	goto	u3750
  7939  002D2A                     u3751:
  7940  002D2A  FFFF               	dw	65535	; assembler added errata NOP
  7941  002D2C  EFBB  F016         	goto	l3637
  7942  002D30                     u3750:
  7943  002D30                     l3627:
  7944  002D30  FFFF               	dw	65535	; assembler added errata NOP
  7945                           
  7946                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
  7947  002D32  063E               	decf	dtoa@i^0,f,c
  7948  002D34  A0D8               	btfss	status,0,c
  7949  002D36  063F               	decf	(dtoa@i+1)^0,f,c
  7950  002D38                     
  7951                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
  7952  002D38  5034               	movf	dtoa@s^0,w,c
  7953  002D3A  1035               	iorwf	(dtoa@s+1)^0,w,c
  7954  002D3C  A4D8               	btfss	status,2,c
  7955  002D3E  EFA3  F016         	goto	u3761
  7956  002D42  EFA6  F016         	goto	u3760
  7957  002D46                     u3761:
  7958  002D46  FFFF               	dw	65535	; assembler added errata NOP
  7959  002D48  EFAD  F016         	goto	l3633
  7960  002D4C                     u3760:
  7961  002D4C  FFFF               	dw	65535	; assembler added errata NOP
  7962  002D4E  0E00               	movlw	0
  7963  002D50  6E2F               	movwf	(_dtoa$1451+1)^0,c
  7964  002D52  0E2B               	movlw	43
  7965  002D54  6E2E               	movwf	_dtoa$1451^0,c
  7966  002D56  EFB2  F016         	goto	l3635
  7967  002D5A                     l3633:
  7968  002D5A  FFFF               	dw	65535	; assembler added errata NOP
  7969  002D5C  0E00               	movlw	0
  7970  002D5E  6E2F               	movwf	(_dtoa$1451+1)^0,c
  7971  002D60  0E2D               	movlw	45
  7972  002D62  6E2E               	movwf	_dtoa$1451^0,c
  7973  002D64                     l3635:
  7974  002D64  FFFF               	dw	65535	; assembler added errata NOP
  7975  002D66  0E8E               	movlw	low _dbuf
  7976  002D68  243E               	addwf	dtoa@i^0,w,c
  7977  002D6A  6ED9               	movwf	fsr2l,c
  7978  002D6C  0E00               	movlw	high _dbuf
  7979  002D6E  203F               	addwfc	(dtoa@i+1)^0,w,c
  7980  002D70  6EDA               	movwf	fsr2h,c
  7981  002D72  C02E  FFDF         	movff	_dtoa$1451,indf2
  7982  002D76                     l3637:
  7983  002D76  FFFF               	dw	65535	; assembler added errata NOP
  7984                           
  7985                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
  7986  002D78  C01C  F011         	movff	dtoa@fp,pad@fp
  7987  002D7C  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  7988  002D80  0E8E               	movlw	low _dbuf
  7989  002D82  243E               	addwf	dtoa@i^0,w,c
  7990  002D84  6E13               	movwf	pad@buf^0,c
  7991  002D86  0E00               	movlw	high _dbuf
  7992  002D88  203F               	addwfc	(dtoa@i+1)^0,w,c
  7993  002D8A  6E14               	movwf	(pad@buf+1)^0,c
  7994  002D8C  C032  F015         	movff	dtoa@w,pad@p
  7995  002D90  C033  F016         	movff	dtoa@w+1,pad@p+1
  7996  002D94  EC5E  F03C         	call	_pad	;wreg free
  7997  002D98  C011  F01C         	movff	?_pad,?_dtoa
  7998  002D9C  C012  F01D         	movff	?_pad+1,?_dtoa+1
  7999  002DA0  0012               	return		;funcret
  8000  002DA2  FFFF               	dw	65535	; errata NOP
  8001  002DA4                     __end_of_dtoa:
  8002                           	callstack 0
  8003                           
  8004 ;; *************** function _abs *****************
  8005 ;; Defined at:
  8006 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
  8007 ;; Parameters:    Size  Location     Type
  8008 ;;  a               2   18[COMRAM] int 
  8009 ;; Auto vars:     Size  Location     Type
  8010 ;;		None
  8011 ;; Return value:  Size  Location     Type
  8012 ;;                  2   18[COMRAM] int 
  8013 ;; Registers used:
  8014 ;;		wreg, status,2, status,0
  8015 ;; Tracked objects:
  8016 ;;		On entry : 0/0
  8017 ;;		On exit  : 0/0
  8018 ;;		Unchanged: 0/0
  8019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8020 ;;      Params:         2       0       0       0       0       0       0
  8021 ;;      Locals:         0       0       0       0       0       0       0
  8022 ;;      Temps:          2       0       0       0       0       0       0
  8023 ;;      Totals:         4       0       0       0       0       0       0
  8024 ;;Total ram usage:        4 bytes
  8025 ;; Hardware stack levels used:    1
  8026 ;; Hardware stack levels required when called:    1
  8027 ;; This function calls:
  8028 ;;		Nothing
  8029 ;; This function is called by:
  8030 ;;		_dtoa
  8031 ;; This function uses a non-reentrant model
  8032 ;;
  8033                           
  8034                           	psect	text20
  8035  00714C                     __ptext20:
  8036                           	callstack 0
  8037  00714C                     _abs:
  8038                           	callstack 0
  8039  00714C  FFFF               	dw	65535	; assembler added errata NOP
  8040  00714E  BE14               	btfsc	(abs@a+1)^0,7,c
  8041  007150  EFB5  F038         	goto	u3490
  8042  007154  5014               	movf	(abs@a+1)^0,w,c
  8043  007156  E106               	bnz	u3491
  8044  007158  0413               	decf	abs@a^0,w,c
  8045  00715A  B0D8               	btfsc	status,0,c
  8046  00715C  EFB2  F038         	goto	u3491
  8047  007160  EFB5  F038         	goto	u3490
  8048  007164                     u3491:
  8049  007164  FFFF               	dw	65535	; assembler added errata NOP
  8050  007166  EFC4  F038         	goto	l1254
  8051  00716A                     u3490:
  8052  00716A  FFFF               	dw	65535	; assembler added errata NOP
  8053  00716C  C013  F015         	movff	abs@a,??_abs
  8054  007170  C014  F016         	movff	abs@a+1,??_abs+1
  8055  007174  1E15               	comf	??_abs^0,f,c
  8056  007176  1E16               	comf	(??_abs+1)^0,f,c
  8057  007178  4A15               	infsnz	??_abs^0,f,c
  8058  00717A  2A16               	incf	(??_abs+1)^0,f,c
  8059  00717C  C015  F013         	movff	??_abs,?_abs
  8060  007180  C016  F014         	movff	??_abs+1,?_abs+1
  8061  007184  EFC9  F038         	goto	l1257
  8062  007188                     l1254:
  8063  007188  FFFF               	dw	65535	; assembler added errata NOP
  8064  00718A  C013  F013         	movff	abs@a,?_abs
  8065  00718E  C014  F014         	movff	abs@a+1,?_abs+1
  8066  007192                     l1257:
  8067  007192  FFFF               	dw	65535	; assembler added errata NOP
  8068  007194  0012               	return		;funcret
  8069  007196  FFFF               	dw	65535	; errata NOP
  8070  007198                     __end_of_abs:
  8071                           	callstack 0
  8072                           
  8073 ;; *************** function ___aomod *****************
  8074 ;; Defined at:
  8075 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
  8076 ;; Parameters:    Size  Location     Type
  8077 ;;  dividend        8    0[COMRAM] long long 
  8078 ;;  divisor         8    8[COMRAM] long long 
  8079 ;; Auto vars:     Size  Location     Type
  8080 ;;  sign            1   17[COMRAM] unsigned char 
  8081 ;;  counter         1   16[COMRAM] unsigned char 
  8082 ;; Return value:  Size  Location     Type
  8083 ;;                  8    0[COMRAM] long long 
  8084 ;; Registers used:
  8085 ;;		wreg, status,2, status,0
  8086 ;; Tracked objects:
  8087 ;;		On entry : 0/0
  8088 ;;		On exit  : 0/0
  8089 ;;		Unchanged: 0/0
  8090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8091 ;;      Params:        16       0       0       0       0       0       0
  8092 ;;      Locals:         2       0       0       0       0       0       0
  8093 ;;      Temps:          0       0       0       0       0       0       0
  8094 ;;      Totals:        18       0       0       0       0       0       0
  8095 ;;Total ram usage:       18 bytes
  8096 ;; Hardware stack levels used:    1
  8097 ;; Hardware stack levels required when called:    1
  8098 ;; This function calls:
  8099 ;;		Nothing
  8100 ;; This function is called by:
  8101 ;;		_dtoa
  8102 ;; This function uses a non-reentrant model
  8103 ;;
  8104                           
  8105                           	psect	text21
  8106  003A7C                     __ptext21:
  8107                           	callstack 0
  8108  003A7C                     ___aomod:
  8109                           	callstack 0
  8110  003A7C  FFFF               	dw	65535	; assembler added errata NOP
  8111  003A7E  0E00               	movlw	0
  8112  003A80  6E12               	movwf	___aomod@sign^0,c
  8113  003A82  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  8114  003A84  EF49  F01D         	goto	u3320
  8115  003A88  EF46  F01D         	goto	u3321
  8116  003A8C                     u3321:
  8117  003A8C  FFFF               	dw	65535	; assembler added errata NOP
  8118  003A8E  EF5C  F01D         	goto	l3439
  8119  003A92                     u3320:
  8120  003A92  FFFF               	dw	65535	; assembler added errata NOP
  8121  003A94  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8122  003A96  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8123  003A98  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8124  003A9A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8125  003A9C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8126  003A9E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8127  003AA0  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8128  003AA2  6C01               	negf	___aomod@dividend^0,c
  8129  003AA4  0E00               	movlw	0
  8130  003AA6  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8131  003AA8  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8132  003AAA  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8133  003AAC  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8134  003AAE  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8135  003AB0  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8136  003AB2  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8137  003AB4  0E01               	movlw	1
  8138  003AB6  6E12               	movwf	___aomod@sign^0,c
  8139  003AB8                     l3439:
  8140  003AB8  FFFF               	dw	65535	; assembler added errata NOP
  8141  003ABA  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  8142  003ABC  EF65  F01D         	goto	u3330
  8143  003AC0  EF62  F01D         	goto	u3331
  8144  003AC4                     u3331:
  8145  003AC4  FFFF               	dw	65535	; assembler added errata NOP
  8146  003AC6  EF76  F01D         	goto	l3443
  8147  003ACA                     u3330:
  8148  003ACA  FFFF               	dw	65535	; assembler added errata NOP
  8149  003ACC  1E10               	comf	(___aomod@divisor+7)^0,f,c
  8150  003ACE  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  8151  003AD0  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  8152  003AD2  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  8153  003AD4  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  8154  003AD6  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  8155  003AD8  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  8156  003ADA  6C09               	negf	___aomod@divisor^0,c
  8157  003ADC  0E00               	movlw	0
  8158  003ADE  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  8159  003AE0  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  8160  003AE2  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  8161  003AE4  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  8162  003AE6  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  8163  003AE8  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  8164  003AEA  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  8165  003AEC                     l3443:
  8166  003AEC  FFFF               	dw	65535	; assembler added errata NOP
  8167  003AEE  5009               	movf	___aomod@divisor^0,w,c
  8168  003AF0  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  8169  003AF2  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  8170  003AF4  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  8171  003AF6  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  8172  003AF8  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  8173  003AFA  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  8174  003AFC  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  8175  003AFE  B4D8               	btfsc	status,2,c
  8176  003B00  EF84  F01D         	goto	u3341
  8177  003B04  EF87  F01D         	goto	u3340
  8178  003B08                     u3341:
  8179  003B08  FFFF               	dw	65535	; assembler added errata NOP
  8180  003B0A  EFD8  F01D         	goto	l3459
  8181  003B0E                     u3340:
  8182  003B0E  FFFF               	dw	65535	; assembler added errata NOP
  8183  003B10  0E01               	movlw	1
  8184  003B12  6E11               	movwf	___aomod@counter^0,c
  8185  003B14  EF97  F01D         	goto	l3449
  8186  003B18                     l3447:
  8187  003B18  FFFF               	dw	65535	; assembler added errata NOP
  8188  003B1A  90D8               	bcf	status,0,c
  8189  003B1C  3609               	rlcf	___aomod@divisor^0,f,c
  8190  003B1E  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  8191  003B20  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  8192  003B22  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  8193  003B24  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  8194  003B26  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  8195  003B28  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  8196  003B2A  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  8197  003B2C  2A11               	incf	___aomod@counter^0,f,c
  8198  003B2E                     l3449:
  8199  003B2E  FFFF               	dw	65535	; assembler added errata NOP
  8200  003B30  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  8201  003B32  EF9D  F01D         	goto	u3351
  8202  003B36  EFA0  F01D         	goto	u3350
  8203  003B3A                     u3351:
  8204  003B3A  FFFF               	dw	65535	; assembler added errata NOP
  8205  003B3C  EF8C  F01D         	goto	l3447
  8206  003B40                     u3350:
  8207  003B40  FFFF               	dw	65535	; assembler added errata NOP
  8208  003B42                     l3451:
  8209  003B42  FFFF               	dw	65535	; assembler added errata NOP
  8210  003B44  5009               	movf	___aomod@divisor^0,w,c
  8211  003B46  5C01               	subwf	___aomod@dividend^0,w,c
  8212  003B48  500A               	movf	(___aomod@divisor+1)^0,w,c
  8213  003B4A  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  8214  003B4C  500B               	movf	(___aomod@divisor+2)^0,w,c
  8215  003B4E  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  8216  003B50  500C               	movf	(___aomod@divisor+3)^0,w,c
  8217  003B52  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  8218  003B54  500D               	movf	(___aomod@divisor+4)^0,w,c
  8219  003B56  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  8220  003B58  500E               	movf	(___aomod@divisor+5)^0,w,c
  8221  003B5A  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  8222  003B5C  500F               	movf	(___aomod@divisor+6)^0,w,c
  8223  003B5E  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  8224  003B60  5010               	movf	(___aomod@divisor+7)^0,w,c
  8225  003B62  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  8226  003B64  A0D8               	btfss	status,0,c
  8227  003B66  EFB7  F01D         	goto	u3361
  8228  003B6A  EFBA  F01D         	goto	u3360
  8229  003B6E                     u3361:
  8230  003B6E  FFFF               	dw	65535	; assembler added errata NOP
  8231  003B70  EFCB  F01D         	goto	l3455
  8232  003B74                     u3360:
  8233  003B74  FFFF               	dw	65535	; assembler added errata NOP
  8234  003B76  5009               	movf	___aomod@divisor^0,w,c
  8235  003B78  5E01               	subwf	___aomod@dividend^0,f,c
  8236  003B7A  500A               	movf	(___aomod@divisor+1)^0,w,c
  8237  003B7C  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  8238  003B7E  500B               	movf	(___aomod@divisor+2)^0,w,c
  8239  003B80  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  8240  003B82  500C               	movf	(___aomod@divisor+3)^0,w,c
  8241  003B84  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  8242  003B86  500D               	movf	(___aomod@divisor+4)^0,w,c
  8243  003B88  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  8244  003B8A  500E               	movf	(___aomod@divisor+5)^0,w,c
  8245  003B8C  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  8246  003B8E  500F               	movf	(___aomod@divisor+6)^0,w,c
  8247  003B90  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  8248  003B92  5010               	movf	(___aomod@divisor+7)^0,w,c
  8249  003B94  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  8250  003B96                     l3455:
  8251  003B96  FFFF               	dw	65535	; assembler added errata NOP
  8252  003B98  90D8               	bcf	status,0,c
  8253  003B9A  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  8254  003B9C  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  8255  003B9E  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  8256  003BA0  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  8257  003BA2  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  8258  003BA4  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  8259  003BA6  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  8260  003BA8  3209               	rrcf	___aomod@divisor^0,f,c
  8261  003BAA  2E11               	decfsz	___aomod@counter^0,f,c
  8262  003BAC  EFA1  F01D         	goto	l3451
  8263  003BB0                     l3459:
  8264  003BB0  FFFF               	dw	65535	; assembler added errata NOP
  8265  003BB2  5012               	movf	___aomod@sign^0,w,c
  8266  003BB4  B4D8               	btfsc	status,2,c
  8267  003BB6  EFDF  F01D         	goto	u3371
  8268  003BBA  EFE2  F01D         	goto	u3370
  8269  003BBE                     u3371:
  8270  003BBE  FFFF               	dw	65535	; assembler added errata NOP
  8271  003BC0  EFF3  F01D         	goto	l3463
  8272  003BC4                     u3370:
  8273  003BC4  FFFF               	dw	65535	; assembler added errata NOP
  8274  003BC6  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8275  003BC8  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8276  003BCA  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8277  003BCC  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8278  003BCE  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8279  003BD0  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8280  003BD2  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8281  003BD4  6C01               	negf	___aomod@dividend^0,c
  8282  003BD6  0E00               	movlw	0
  8283  003BD8  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8284  003BDA  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8285  003BDC  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8286  003BDE  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8287  003BE0  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8288  003BE2  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8289  003BE4  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8290  003BE6                     l3463:
  8291  003BE6  FFFF               	dw	65535	; assembler added errata NOP
  8292  003BE8  C001  F001         	movff	___aomod@dividend,?___aomod
  8293  003BEC  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  8294  003BF0  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  8295  003BF4  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  8296  003BF8  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  8297  003BFC  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  8298  003C00  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  8299  003C04  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  8300  003C08  0012               	return		;funcret
  8301  003C0A  FFFF               	dw	65535	; errata NOP
  8302  003C0C                     __end_of___aomod:
  8303                           	callstack 0
  8304                           
  8305 ;; *************** function ___aodiv *****************
  8306 ;; Defined at:
  8307 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
  8308 ;; Parameters:    Size  Location     Type
  8309 ;;  dividend        8    0[COMRAM] long long 
  8310 ;;  divisor         8    8[COMRAM] long long 
  8311 ;; Auto vars:     Size  Location     Type
  8312 ;;  quotient        8   18[COMRAM] long long 
  8313 ;;  sign            1   17[COMRAM] unsigned char 
  8314 ;;  counter         1   16[COMRAM] unsigned char 
  8315 ;; Return value:  Size  Location     Type
  8316 ;;                  8    0[COMRAM] long long 
  8317 ;; Registers used:
  8318 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8319 ;; Tracked objects:
  8320 ;;		On entry : 0/0
  8321 ;;		On exit  : 0/0
  8322 ;;		Unchanged: 0/0
  8323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8324 ;;      Params:        16       0       0       0       0       0       0
  8325 ;;      Locals:        10       0       0       0       0       0       0
  8326 ;;      Temps:          0       0       0       0       0       0       0
  8327 ;;      Totals:        26       0       0       0       0       0       0
  8328 ;;Total ram usage:       26 bytes
  8329 ;; Hardware stack levels used:    1
  8330 ;; Hardware stack levels required when called:    1
  8331 ;; This function calls:
  8332 ;;		Nothing
  8333 ;; This function is called by:
  8334 ;;		_dtoa
  8335 ;; This function uses a non-reentrant model
  8336 ;;
  8337                           
  8338                           	psect	text22
  8339  0038C8                     __ptext22:
  8340                           	callstack 0
  8341  0038C8                     ___aodiv:
  8342                           	callstack 0
  8343  0038C8  FFFF               	dw	65535	; assembler added errata NOP
  8344  0038CA  0E00               	movlw	0
  8345  0038CC  6E12               	movwf	___aodiv@sign^0,c
  8346  0038CE  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  8347  0038D0  EF6F  F01C         	goto	u3250
  8348  0038D4  EF6C  F01C         	goto	u3251
  8349  0038D8                     u3251:
  8350  0038D8  FFFF               	dw	65535	; assembler added errata NOP
  8351  0038DA  EF82  F01C         	goto	l3395
  8352  0038DE                     u3250:
  8353  0038DE  FFFF               	dw	65535	; assembler added errata NOP
  8354  0038E0  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  8355  0038E2  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  8356  0038E4  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  8357  0038E6  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  8358  0038E8  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  8359  0038EA  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  8360  0038EC  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  8361  0038EE  6C09               	negf	___aodiv@divisor^0,c
  8362  0038F0  0E00               	movlw	0
  8363  0038F2  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  8364  0038F4  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  8365  0038F6  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  8366  0038F8  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  8367  0038FA  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  8368  0038FC  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  8369  0038FE  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  8370  003900  0E01               	movlw	1
  8371  003902  6E12               	movwf	___aodiv@sign^0,c
  8372  003904                     l3395:
  8373  003904  FFFF               	dw	65535	; assembler added errata NOP
  8374  003906  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  8375  003908  EF8B  F01C         	goto	u3260
  8376  00390C  EF88  F01C         	goto	u3261
  8377  003910                     u3261:
  8378  003910  FFFF               	dw	65535	; assembler added errata NOP
  8379  003912  EF9E  F01C         	goto	l3401
  8380  003916                     u3260:
  8381  003916  FFFF               	dw	65535	; assembler added errata NOP
  8382  003918  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  8383  00391A  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  8384  00391C  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  8385  00391E  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  8386  003920  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  8387  003922  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  8388  003924  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  8389  003926  6C01               	negf	___aodiv@dividend^0,c
  8390  003928  0E00               	movlw	0
  8391  00392A  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  8392  00392C  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  8393  00392E  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  8394  003930  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  8395  003932  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  8396  003934  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  8397  003936  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  8398  003938  0E01               	movlw	1
  8399  00393A  1A12               	xorwf	___aodiv@sign^0,f,c
  8400  00393C                     l3401:
  8401  00393C  FFFF               	dw	65535	; assembler added errata NOP
  8402  00393E  EE20  F013         	lfsr	2,___aodiv@quotient
  8403  003942  0E07               	movlw	7
  8404  003944                     u3271:
  8405  003944  6ADE               	clrf	postinc2,c
  8406  003946  06E8               	decf	wreg,f,c
  8407  003948  E2FD               	bc	u3271
  8408  00394A  5009               	movf	___aodiv@divisor^0,w,c
  8409  00394C  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  8410  00394E  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  8411  003950  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  8412  003952  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  8413  003954  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  8414  003956  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  8415  003958  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  8416  00395A  B4D8               	btfsc	status,2,c
  8417  00395C  EFB2  F01C         	goto	u3281
  8418  003960  EFB5  F01C         	goto	u3280
  8419  003964                     u3281:
  8420  003964  FFFF               	dw	65535	; assembler added errata NOP
  8421  003966  EF10  F01D         	goto	l3423
  8422  00396A                     u3280:
  8423  00396A  FFFF               	dw	65535	; assembler added errata NOP
  8424  00396C  0E01               	movlw	1
  8425  00396E  6E11               	movwf	___aodiv@counter^0,c
  8426  003970  EFC5  F01C         	goto	l3409
  8427  003974                     l3407:
  8428  003974  FFFF               	dw	65535	; assembler added errata NOP
  8429  003976  90D8               	bcf	status,0,c
  8430  003978  3609               	rlcf	___aodiv@divisor^0,f,c
  8431  00397A  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  8432  00397C  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  8433  00397E  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  8434  003980  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  8435  003982  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  8436  003984  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  8437  003986  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  8438  003988  2A11               	incf	___aodiv@counter^0,f,c
  8439  00398A                     l3409:
  8440  00398A  FFFF               	dw	65535	; assembler added errata NOP
  8441  00398C  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  8442  00398E  EFCB  F01C         	goto	u3291
  8443  003992  EFCE  F01C         	goto	u3290
  8444  003996                     u3291:
  8445  003996  FFFF               	dw	65535	; assembler added errata NOP
  8446  003998  EFBA  F01C         	goto	l3407
  8447  00399C                     u3290:
  8448  00399C  FFFF               	dw	65535	; assembler added errata NOP
  8449  00399E                     l3411:
  8450  00399E  FFFF               	dw	65535	; assembler added errata NOP
  8451  0039A0  90D8               	bcf	status,0,c
  8452  0039A2  3613               	rlcf	___aodiv@quotient^0,f,c
  8453  0039A4  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  8454  0039A6  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  8455  0039A8  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  8456  0039AA  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  8457  0039AC  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  8458  0039AE  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  8459  0039B0  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  8460  0039B2  5009               	movf	___aodiv@divisor^0,w,c
  8461  0039B4  5C01               	subwf	___aodiv@dividend^0,w,c
  8462  0039B6  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8463  0039B8  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  8464  0039BA  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8465  0039BC  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  8466  0039BE  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8467  0039C0  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  8468  0039C2  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8469  0039C4  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  8470  0039C6  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8471  0039C8  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  8472  0039CA  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8473  0039CC  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  8474  0039CE  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8475  0039D0  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  8476  0039D2  A0D8               	btfss	status,0,c
  8477  0039D4  EFEE  F01C         	goto	u3301
  8478  0039D8  EFF1  F01C         	goto	u3300
  8479  0039DC                     u3301:
  8480  0039DC  FFFF               	dw	65535	; assembler added errata NOP
  8481  0039DE  EF03  F01D         	goto	l3419
  8482  0039E2                     u3300:
  8483  0039E2  FFFF               	dw	65535	; assembler added errata NOP
  8484  0039E4  5009               	movf	___aodiv@divisor^0,w,c
  8485  0039E6  5E01               	subwf	___aodiv@dividend^0,f,c
  8486  0039E8  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8487  0039EA  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  8488  0039EC  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8489  0039EE  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  8490  0039F0  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8491  0039F2  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  8492  0039F4  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8493  0039F6  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  8494  0039F8  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8495  0039FA  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  8496  0039FC  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8497  0039FE  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  8498  003A00  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8499  003A02  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  8500  003A04  8013               	bsf	___aodiv@quotient^0,0,c
  8501  003A06                     l3419:
  8502  003A06  FFFF               	dw	65535	; assembler added errata NOP
  8503  003A08  90D8               	bcf	status,0,c
  8504  003A0A  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  8505  003A0C  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  8506  003A0E  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  8507  003A10  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  8508  003A12  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  8509  003A14  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  8510  003A16  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  8511  003A18  3209               	rrcf	___aodiv@divisor^0,f,c
  8512  003A1A  2E11               	decfsz	___aodiv@counter^0,f,c
  8513  003A1C  EFCF  F01C         	goto	l3411
  8514  003A20                     l3423:
  8515  003A20  FFFF               	dw	65535	; assembler added errata NOP
  8516  003A22  5012               	movf	___aodiv@sign^0,w,c
  8517  003A24  B4D8               	btfsc	status,2,c
  8518  003A26  EF17  F01D         	goto	u3311
  8519  003A2A  EF1A  F01D         	goto	u3310
  8520  003A2E                     u3311:
  8521  003A2E  FFFF               	dw	65535	; assembler added errata NOP
  8522  003A30  EF2B  F01D         	goto	l3427
  8523  003A34                     u3310:
  8524  003A34  FFFF               	dw	65535	; assembler added errata NOP
  8525  003A36  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  8526  003A38  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  8527  003A3A  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  8528  003A3C  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  8529  003A3E  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  8530  003A40  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  8531  003A42  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  8532  003A44  6C13               	negf	___aodiv@quotient^0,c
  8533  003A46  0E00               	movlw	0
  8534  003A48  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  8535  003A4A  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  8536  003A4C  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  8537  003A4E  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  8538  003A50  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  8539  003A52  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  8540  003A54  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  8541  003A56                     l3427:
  8542  003A56  FFFF               	dw	65535	; assembler added errata NOP
  8543  003A58  C013  F001         	movff	___aodiv@quotient,?___aodiv
  8544  003A5C  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  8545  003A60  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  8546  003A64  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  8547  003A68  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  8548  003A6C  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  8549  003A70  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  8550  003A74  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  8551  003A78  0012               	return		;funcret
  8552  003A7A  FFFF               	dw	65535	; errata NOP
  8553  003A7C                     __end_of___aodiv:
  8554                           	callstack 0
  8555                           
  8556 ;; *************** function _ctoa *****************
  8557 ;; Defined at:
  8558 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  8559 ;; Parameters:    Size  Location     Type
  8560 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  8561 ;;		 -> vsnprintf@f(6), 
  8562 ;;  c               1   29[COMRAM] unsigned char 
  8563 ;; Auto vars:     Size  Location     Type
  8564 ;;  w               2   30[COMRAM] int 
  8565 ;;  l               2    0        int 
  8566 ;; Return value:  Size  Location     Type
  8567 ;;                  2   27[COMRAM] int 
  8568 ;; Registers used:
  8569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8570 ;; Tracked objects:
  8571 ;;		On entry : 0/0
  8572 ;;		On exit  : 0/0
  8573 ;;		Unchanged: 0/0
  8574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8575 ;;      Params:         3       0       0       0       0       0       0
  8576 ;;      Locals:         2       0       0       0       0       0       0
  8577 ;;      Temps:          0       0       0       0       0       0       0
  8578 ;;      Totals:         5       0       0       0       0       0       0
  8579 ;;Total ram usage:        5 bytes
  8580 ;; Hardware stack levels used:    1
  8581 ;; Hardware stack levels required when called:    5
  8582 ;; This function calls:
  8583 ;;		_pad
  8584 ;; This function is called by:
  8585 ;;		_vfpfcnvrt
  8586 ;; This function uses a non-reentrant model
  8587 ;;
  8588                           
  8589                           	psect	text23
  8590  007248                     __ptext23:
  8591                           	callstack 0
  8592  007248                     _ctoa:
  8593                           	callstack 0
  8594  007248  FFFF               	dw	65535	; assembler added errata NOP
  8595  00724A                     
  8596                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  8597  00724A  0100               	movlb	0	; () banked
  8598  00724C  5186               	movf	_width& (0+255),w,b
  8599  00724E  1187               	iorwf	(_width+1)& (0+255),w,b
  8600  007250  A4D8               	btfss	status,2,c
  8601  007252  EF2D  F039         	goto	u3611
  8602  007256  EF30  F039         	goto	u3610
  8603  00725A                     u3611:
  8604  00725A  FFFF               	dw	65535	; assembler added errata NOP
  8605  00725C  EF37  F039         	goto	l3569
  8606  007260                     u3610:
  8607  007260  FFFF               	dw	65535	; assembler added errata NOP
  8608  007262                     
  8609                           ; BSR set to: 0
  8610  007262  C086  F01F         	movff	_width,ctoa@w
  8611  007266  C087  F020         	movff	_width+1,ctoa@w+1
  8612  00726A  EF3E  F039         	goto	l3571
  8613  00726E                     l3569:
  8614  00726E  FFFF               	dw	65535	; assembler added errata NOP
  8615                           
  8616                           ; BSR set to: 0
  8617  007270  0EFF               	movlw	255
  8618  007272  2586               	addwf	_width& (0+255),w,b
  8619  007274  6E1F               	movwf	ctoa@w^0,c
  8620  007276  0EFF               	movlw	255
  8621  007278  2187               	addwfc	(_width+1)& (0+255),w,b
  8622  00727A  6E20               	movwf	(ctoa@w+1)^0,c
  8623  00727C                     l3571:
  8624  00727C  FFFF               	dw	65535	; assembler added errata NOP
  8625                           
  8626                           ; BSR set to: 0
  8627                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 267:     dbuf[0] 
      +                          = c;
  8628  00727E  C01E  F08E         	movff	ctoa@c,_dbuf
  8629  007282                     
  8630                           ; BSR set to: 0
  8631                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 268:     dbuf[1] 
      +                          = '\0';
  8632  007282  0E00               	movlw	0
  8633  007284  6F8F               	movwf	(_dbuf+1)& (0+255),b
  8634  007286                     
  8635                           ; BSR set to: 0
  8636                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 269:     return p
      +                          ad(fp, &dbuf[0], w);
  8637  007286  C01C  F011         	movff	ctoa@fp,pad@fp
  8638  00728A  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  8639  00728E  0E8E               	movlw	low _dbuf
  8640  007290  6E13               	movwf	pad@buf^0,c
  8641  007292  0E00               	movlw	high _dbuf
  8642  007294  6E14               	movwf	(pad@buf+1)^0,c
  8643  007296  C01F  F015         	movff	ctoa@w,pad@p
  8644  00729A  C020  F016         	movff	ctoa@w+1,pad@p+1
  8645  00729E  EC5E  F03C         	call	_pad	;wreg free
  8646  0072A2  C011  F01C         	movff	?_pad,?_ctoa
  8647  0072A6  C012  F01D         	movff	?_pad+1,?_ctoa+1
  8648  0072AA  0012               	return		;funcret
  8649  0072AC  FFFF               	dw	65535	; errata NOP
  8650  0072AE                     __end_of_ctoa:
  8651                           	callstack 0
  8652                           
  8653 ;; *************** function _pad *****************
  8654 ;; Defined at:
  8655 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  8656 ;; Parameters:    Size  Location     Type
  8657 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  8658 ;;		 -> vsnprintf@f(6), 
  8659 ;;  buf             2   18[COMRAM] PTR unsigned char 
  8660 ;;		 -> dbuf(32), 
  8661 ;;  p               2   20[COMRAM] int 
  8662 ;; Auto vars:     Size  Location     Type
  8663 ;;  w               2   25[COMRAM] int 
  8664 ;;  i               2   23[COMRAM] int 
  8665 ;; Return value:  Size  Location     Type
  8666 ;;                  2   16[COMRAM] int 
  8667 ;; Registers used:
  8668 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8669 ;; Tracked objects:
  8670 ;;		On entry : 0/0
  8671 ;;		On exit  : 0/0
  8672 ;;		Unchanged: 0/0
  8673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8674 ;;      Params:         6       0       0       0       0       0       0
  8675 ;;      Locals:         4       0       0       0       0       0       0
  8676 ;;      Temps:          1       0       0       0       0       0       0
  8677 ;;      Totals:        11       0       0       0       0       0       0
  8678 ;;Total ram usage:       11 bytes
  8679 ;; Hardware stack levels used:    1
  8680 ;; Hardware stack levels required when called:    4
  8681 ;; This function calls:
  8682 ;;		_fputc
  8683 ;;		_fputs
  8684 ;;		_strlen
  8685 ;; This function is called by:
  8686 ;;		_ctoa
  8687 ;;		_dtoa
  8688 ;;		_otoa
  8689 ;;		_utoa
  8690 ;;		_xtoa
  8691 ;; This function uses a non-reentrant model
  8692 ;;
  8693                           
  8694                           	psect	text24
  8695  0078BC                     __ptext24:
  8696                           	callstack 0
  8697  0078BC                     _pad:
  8698                           	callstack 0
  8699  0078BC  FFFF               	dw	65535	; assembler added errata NOP
  8700  0078BE                     
  8701                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  8702  0078BE  0100               	movlb	0	; () banked
  8703  0078C0  A18A               	btfss	_flags& (0+255),0,b
  8704  0078C2  EF65  F03C         	goto	u3451
  8705  0078C6  EF68  F03C         	goto	u3450
  8706  0078CA                     u3451:
  8707  0078CA  FFFF               	dw	65535	; assembler added errata NOP
  8708  0078CC  EF73  F03C         	goto	l3509
  8709  0078D0                     u3450:
  8710  0078D0  FFFF               	dw	65535	; assembler added errata NOP
  8711  0078D2                     
  8712                           ; BSR set to: 0
  8713                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  8714  0078D2  C013  F00A         	movff	pad@buf,fputs@s
  8715  0078D6  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8716  0078DA  C011  F00C         	movff	pad@fp,fputs@fp
  8717  0078DE  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8718  0078E2  ECCC  F038         	call	_fputs	;wreg free
  8719  0078E6                     l3509:
  8720  0078E6  FFFF               	dw	65535	; assembler added errata NOP
  8721                           
  8722                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  8723  0078E8  BE16               	btfsc	(pad@p+1)^0,7,c
  8724  0078EA  EF79  F03C         	goto	u3461
  8725  0078EE  EF7C  F03C         	goto	u3460
  8726  0078F2                     u3461:
  8727  0078F2  FFFF               	dw	65535	; assembler added errata NOP
  8728  0078F4  EF83  F03C         	goto	l3513
  8729  0078F8                     u3460:
  8730  0078F8  FFFF               	dw	65535	; assembler added errata NOP
  8731  0078FA  C015  F01A         	movff	pad@p,pad@w
  8732  0078FE  C016  F01B         	movff	pad@p+1,pad@w+1
  8733  007902  EF88  F03C         	goto	l1046
  8734  007906                     l3513:
  8735  007906  FFFF               	dw	65535	; assembler added errata NOP
  8736  007908  0E00               	movlw	0
  8737  00790A  6E1B               	movwf	(pad@w+1)^0,c
  8738  00790C  0E00               	movlw	0
  8739  00790E  6E1A               	movwf	pad@w^0,c
  8740  007910                     l1046:
  8741  007910  FFFF               	dw	65535	; assembler added errata NOP
  8742                           
  8743                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  8744  007912  0E00               	movlw	0
  8745  007914  6E19               	movwf	(pad@i+1)^0,c
  8746  007916  0E00               	movlw	0
  8747  007918  6E18               	movwf	pad@i^0,c
  8748                           
  8749                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8750  00791A  EF9C  F03C         	goto	l3519
  8751  00791E                     l3515:
  8752  00791E  FFFF               	dw	65535	; assembler added errata NOP
  8753                           
  8754                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  8755  007920  0E00               	movlw	0
  8756  007922  6E02               	movwf	(fputc@c+1)^0,c
  8757  007924  0E20               	movlw	32
  8758  007926  6E01               	movwf	fputc@c^0,c
  8759  007928  C011  F003         	movff	pad@fp,fputc@fp
  8760  00792C  C012  F004         	movff	pad@fp+1,fputc@fp+1
  8761  007930  ECED  F03B         	call	_fputc	;wreg free
  8762  007934                     
  8763                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  8764  007934  4A18               	infsnz	pad@i^0,f,c
  8765  007936  2A19               	incf	(pad@i+1)^0,f,c
  8766  007938                     l3519:
  8767  007938  FFFF               	dw	65535	; assembler added errata NOP
  8768                           
  8769                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8770  00793A  501A               	movf	pad@w^0,w,c
  8771  00793C  5C18               	subwf	pad@i^0,w,c
  8772  00793E  5019               	movf	(pad@i+1)^0,w,c
  8773  007940  0A80               	xorlw	128
  8774  007942  6E17               	movwf	??_pad^0,c
  8775  007944  501B               	movf	(pad@w+1)^0,w,c
  8776  007946  0A80               	xorlw	128
  8777  007948  5817               	subwfb	??_pad^0,w,c
  8778  00794A  A0D8               	btfss	status,0,c
  8779  00794C  EFAA  F03C         	goto	u3471
  8780  007950  EFAD  F03C         	goto	u3470
  8781  007954                     u3471:
  8782  007954  FFFF               	dw	65535	; assembler added errata NOP
  8783  007956  EF8F  F03C         	goto	l3515
  8784  00795A                     u3470:
  8785  00795A  FFFF               	dw	65535	; assembler added errata NOP
  8786  00795C                     
  8787                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  8788  00795C  0100               	movlb	0	; () banked
  8789  00795E  B18A               	btfsc	_flags& (0+255),0,b
  8790  007960  EFB4  F03C         	goto	u3481
  8791  007964  EFB7  F03C         	goto	u3480
  8792  007968                     u3481:
  8793  007968  FFFF               	dw	65535	; assembler added errata NOP
  8794  00796A  EFC2  F03C         	goto	l3523
  8795  00796E                     u3480:
  8796  00796E  FFFF               	dw	65535	; assembler added errata NOP
  8797  007970                     
  8798                           ; BSR set to: 0
  8799                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  8800  007970  C013  F00A         	movff	pad@buf,fputs@s
  8801  007974  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8802  007978  C011  F00C         	movff	pad@fp,fputs@fp
  8803  00797C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8804  007980  ECCC  F038         	call	_fputs	;wreg free
  8805  007984                     l3523:
  8806  007984  FFFF               	dw	65535	; assembler added errata NOP
  8807                           
  8808                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  8809  007986  C013  F001         	movff	pad@buf,strlen@s
  8810  00798A  C014  F002         	movff	pad@buf+1,strlen@s+1
  8811  00798E  ECD2  F01F         	call	_strlen	;wreg free
  8812  007992  501A               	movf	pad@w^0,w,c
  8813  007994  2401               	addwf	?_strlen^0,w,c
  8814  007996  6E11               	movwf	?_pad^0,c
  8815  007998  501B               	movf	(pad@w+1)^0,w,c
  8816  00799A  2002               	addwfc	(?_strlen+1)^0,w,c
  8817  00799C  6E12               	movwf	(?_pad+1)^0,c
  8818  00799E  0012               	return		;funcret
  8819  0079A0  FFFF               	dw	65535	; errata NOP
  8820  0079A2                     __end_of_pad:
  8821                           	callstack 0
  8822                           
  8823 ;; *************** function _strlen *****************
  8824 ;; Defined at:
  8825 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  8826 ;; Parameters:    Size  Location     Type
  8827 ;;  s               2    0[COMRAM] PTR const unsigned char 
  8828 ;;		 -> stoa@nuls(7), dbuf(32), ?_snprintf(2), STR_6(49), 
  8829 ;;		 -> STR_5(55), STR_4(39), STR_3(9), STR_2(63), 
  8830 ;;		 -> STR_1(47), 
  8831 ;; Auto vars:     Size  Location     Type
  8832 ;;  a               2    2[COMRAM] PTR const unsigned char 
  8833 ;;		 -> stoa@nuls(7), dbuf(32), ?_snprintf(2), STR_6(49), 
  8834 ;;		 -> STR_5(55), STR_4(39), STR_3(9), STR_2(63), 
  8835 ;;		 -> STR_1(47), 
  8836 ;; Return value:  Size  Location     Type
  8837 ;;                  2    0[COMRAM] unsigned int 
  8838 ;; Registers used:
  8839 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  8840 ;; Tracked objects:
  8841 ;;		On entry : 0/0
  8842 ;;		On exit  : 0/0
  8843 ;;		Unchanged: 0/0
  8844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8845 ;;      Params:         2       0       0       0       0       0       0
  8846 ;;      Locals:         2       0       0       0       0       0       0
  8847 ;;      Temps:          0       0       0       0       0       0       0
  8848 ;;      Totals:         4       0       0       0       0       0       0
  8849 ;;Total ram usage:        4 bytes
  8850 ;; Hardware stack levels used:    1
  8851 ;; Hardware stack levels required when called:    1
  8852 ;; This function calls:
  8853 ;;		Nothing
  8854 ;; This function is called by:
  8855 ;;		_pad
  8856 ;;		_stoa
  8857 ;; This function uses a non-reentrant model
  8858 ;;
  8859                           
  8860                           	psect	text25
  8861  003FA4                     __ptext25:
  8862                           	callstack 0
  8863  003FA4                     _strlen:
  8864                           	callstack 0
  8865  003FA4  FFFF               	dw	65535	; assembler added errata NOP
  8866  003FA6  C001  F003         	movff	strlen@s,strlen@a
  8867  003FAA  C002  F004         	movff	strlen@s+1,strlen@a+1
  8868  003FAE  EFDC  F01F         	goto	l3371
  8869  003FB2                     l3369:
  8870  003FB2  FFFF               	dw	65535	; assembler added errata NOP
  8871  003FB4  4A01               	infsnz	strlen@s^0,f,c
  8872  003FB6  2A02               	incf	(strlen@s+1)^0,f,c
  8873  003FB8                     l3371:
  8874  003FB8  FFFF               	dw	65535	; assembler added errata NOP
  8875  003FBA  C001  FFF6         	movff	strlen@s,tblptrl
  8876  003FBE  C002  FFF7         	movff	strlen@s+1,tblptrh
  8877  003FC2  6AF8               	clrf	tblptru,c
  8878  003FC4  0E05               	movlw	(high __ramtop+-1)
  8879  003FC6  64F7               	cpfsgt	tblptrh,c
  8880  003FC8  D004               	bra	u3217
  8881  003FCA  0008               	tblrd		*
  8882  003FCC  FFFF               	dw	65535	; errata NOP
  8883  003FCE  50F5               	movf	tablat,w,c
  8884  003FD0  D005               	bra	u3210
  8885  003FD2                     u3217:
  8886  003FD2  CFF6 FFE1          	movff	tblptrl,fsr1l
  8887  003FD6  CFF7 FFE2          	movff	tblptrh,fsr1h
  8888  003FDA  50E7               	movf	indf1,w,c
  8889  003FDC                     u3210:
  8890  003FDC  0900               	iorlw	0
  8891  003FDE  A4D8               	btfss	status,2,c
  8892  003FE0  EFF4  F01F         	goto	u3221
  8893  003FE4  EFF7  F01F         	goto	u3220
  8894  003FE8                     u3221:
  8895  003FE8  FFFF               	dw	65535	; assembler added errata NOP
  8896  003FEA  EFD9  F01F         	goto	l3369
  8897  003FEE                     u3220:
  8898  003FEE  FFFF               	dw	65535	; assembler added errata NOP
  8899  003FF0  5003               	movf	strlen@a^0,w,c
  8900  003FF2  5C01               	subwf	strlen@s^0,w,c
  8901  003FF4  6E01               	movwf	?_strlen^0,c
  8902  003FF6  5004               	movf	(strlen@a+1)^0,w,c
  8903  003FF8  5802               	subwfb	(strlen@s+1)^0,w,c
  8904  003FFA  6E02               	movwf	(?_strlen+1)^0,c
  8905  003FFC  0012               	return		;funcret
  8906  003FFE  FFFF               	dw	65535	; errata NOP
  8907  004000                     __end_of_strlen:
  8908                           	callstack 0
  8909                           
  8910 ;; *************** function _fputs *****************
  8911 ;; Defined at:
  8912 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  8913 ;; Parameters:    Size  Location     Type
  8914 ;;  s               2    9[COMRAM] PTR const unsigned char 
  8915 ;;		 -> dbuf(32), 
  8916 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  8917 ;;		 -> vsnprintf@f(6), 
  8918 ;; Auto vars:     Size  Location     Type
  8919 ;;  i               2   14[COMRAM] int 
  8920 ;;  c               1   13[COMRAM] unsigned char 
  8921 ;; Return value:  Size  Location     Type
  8922 ;;                  2    9[COMRAM] int 
  8923 ;; Registers used:
  8924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8925 ;; Tracked objects:
  8926 ;;		On entry : 0/0
  8927 ;;		On exit  : 0/0
  8928 ;;		Unchanged: 0/0
  8929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8930 ;;      Params:         4       0       0       0       0       0       0
  8931 ;;      Locals:         3       0       0       0       0       0       0
  8932 ;;      Temps:          0       0       0       0       0       0       0
  8933 ;;      Totals:         7       0       0       0       0       0       0
  8934 ;;Total ram usage:        7 bytes
  8935 ;; Hardware stack levels used:    1
  8936 ;; Hardware stack levels required when called:    3
  8937 ;; This function calls:
  8938 ;;		_fputc
  8939 ;; This function is called by:
  8940 ;;		_pad
  8941 ;; This function uses a non-reentrant model
  8942 ;;
  8943                           
  8944                           	psect	text26
  8945  007198                     __ptext26:
  8946                           	callstack 0
  8947  007198                     _fputs:
  8948                           	callstack 0
  8949  007198  FFFF               	dw	65535	; assembler added errata NOP
  8950  00719A  0E00               	movlw	0
  8951  00719C  6E10               	movwf	(fputs@i+1)^0,c
  8952  00719E  0E00               	movlw	0
  8953  0071A0  6E0F               	movwf	fputs@i^0,c
  8954  0071A2  EFDF  F038         	goto	l3365
  8955  0071A6                     l3361:
  8956  0071A6  FFFF               	dw	65535	; assembler added errata NOP
  8957  0071A8  C00E  F001         	movff	fputs@c,fputc@c
  8958  0071AC  6A02               	clrf	(fputc@c+1)^0,c
  8959  0071AE  C00C  F003         	movff	fputs@fp,fputc@fp
  8960  0071B2  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  8961  0071B6  ECED  F03B         	call	_fputc	;wreg free
  8962  0071BA  4A0F               	infsnz	fputs@i^0,f,c
  8963  0071BC  2A10               	incf	(fputs@i+1)^0,f,c
  8964  0071BE                     l3365:
  8965  0071BE  FFFF               	dw	65535	; assembler added errata NOP
  8966  0071C0  500F               	movf	fputs@i^0,w,c
  8967  0071C2  240A               	addwf	fputs@s^0,w,c
  8968  0071C4  6ED9               	movwf	fsr2l,c
  8969  0071C6  5010               	movf	(fputs@i+1)^0,w,c
  8970  0071C8  200B               	addwfc	(fputs@s+1)^0,w,c
  8971  0071CA  6EDA               	movwf	fsr2h,c
  8972  0071CC  50DF               	movf	indf2,w,c
  8973  0071CE  6E0E               	movwf	fputs@c^0,c
  8974  0071D0  500E               	movf	fputs@c^0,w,c
  8975  0071D2  A4D8               	btfss	status,2,c
  8976  0071D4  EFEE  F038         	goto	u3201
  8977  0071D8  EFF1  F038         	goto	u3200
  8978  0071DC                     u3201:
  8979  0071DC  FFFF               	dw	65535	; assembler added errata NOP
  8980  0071DE  EFD3  F038         	goto	l3361
  8981  0071E2                     u3200:
  8982  0071E2  FFFF               	dw	65535	; assembler added errata NOP
  8983  0071E4  0012               	return		;funcret
  8984  0071E6  FFFF               	dw	65535	; errata NOP
  8985  0071E8                     __end_of_fputs:
  8986                           	callstack 0
  8987                           
  8988 ;; *************** function _fputc *****************
  8989 ;; Defined at:
  8990 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  8991 ;; Parameters:    Size  Location     Type
  8992 ;;  c               2    0[COMRAM] int 
  8993 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  8994 ;;		 -> vsnprintf@f(6), 
  8995 ;; Auto vars:     Size  Location     Type
  8996 ;;		None
  8997 ;; Return value:  Size  Location     Type
  8998 ;;                  2    0[COMRAM] int 
  8999 ;; Registers used:
  9000 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9001 ;; Tracked objects:
  9002 ;;		On entry : 0/0
  9003 ;;		On exit  : 0/0
  9004 ;;		Unchanged: 0/0
  9005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9006 ;;      Params:         4       0       0       0       0       0       0
  9007 ;;      Locals:         0       0       0       0       0       0       0
  9008 ;;      Temps:          5       0       0       0       0       0       0
  9009 ;;      Totals:         9       0       0       0       0       0       0
  9010 ;;Total ram usage:        9 bytes
  9011 ;; Hardware stack levels used:    1
  9012 ;; Hardware stack levels required when called:    2
  9013 ;; This function calls:
  9014 ;;		_putch
  9015 ;; This function is called by:
  9016 ;;		_pad
  9017 ;;		_stoa
  9018 ;;		_vfpfcnvrt
  9019 ;;		_fputs
  9020 ;; This function uses a non-reentrant model
  9021 ;;
  9022                           
  9023                           	psect	text27
  9024  0077DA                     __ptext27:
  9025                           	callstack 0
  9026  0077DA                     _fputc:
  9027                           	callstack 0
  9028  0077DA  FFFF               	dw	65535	; assembler added errata NOP
  9029  0077DC  5003               	movf	fputc@fp^0,w,c
  9030  0077DE  1004               	iorwf	(fputc@fp+1)^0,w,c
  9031  0077E0  B4D8               	btfsc	status,2,c
  9032  0077E2  EFF5  F03B         	goto	u3161
  9033  0077E6  EFF8  F03B         	goto	u3160
  9034  0077EA                     u3161:
  9035  0077EA  FFFF               	dw	65535	; assembler added errata NOP
  9036  0077EC  EF03  F03C         	goto	l3349
  9037  0077F0                     u3160:
  9038  0077F0  FFFF               	dw	65535	; assembler added errata NOP
  9039  0077F2  5003               	movf	fputc@fp^0,w,c
  9040  0077F4  1004               	iorwf	(fputc@fp+1)^0,w,c
  9041  0077F6  A4D8               	btfss	status,2,c
  9042  0077F8  EF00  F03C         	goto	u3171
  9043  0077FC  EF03  F03C         	goto	u3170
  9044  007800                     u3171:
  9045  007800  FFFF               	dw	65535	; assembler added errata NOP
  9046  007802  EF09  F03C         	goto	l3351
  9047  007806                     u3170:
  9048  007806                     l3349:
  9049  007806  FFFF               	dw	65535	; assembler added errata NOP
  9050  007808  5001               	movf	fputc@c^0,w,c
  9051  00780A  ECD6  F036         	call	_putch
  9052  00780E  EF5B  F03C         	goto	l1328
  9053  007812                     l3351:
  9054  007812  FFFF               	dw	65535	; assembler added errata NOP
  9055  007814  EE20 F004          	lfsr	2,4
  9056  007818  5003               	movf	fputc@fp^0,w,c
  9057  00781A  26D9               	addwf	fsr2l,f,c
  9058  00781C  5004               	movf	(fputc@fp+1)^0,w,c
  9059  00781E  22DA               	addwfc	fsr2h,f,c
  9060  007820  50DE               	movf	postinc2,w,c
  9061  007822  10DE               	iorwf	postinc2,w,c
  9062  007824  B4D8               	btfsc	status,2,c
  9063  007826  EF17  F03C         	goto	u3181
  9064  00782A  EF1A  F03C         	goto	u3180
  9065  00782E                     u3181:
  9066  00782E  FFFF               	dw	65535	; assembler added errata NOP
  9067  007830  EF37  F03C         	goto	l3355
  9068  007834                     u3180:
  9069  007834  FFFF               	dw	65535	; assembler added errata NOP
  9070  007836  EE20 F004          	lfsr	2,4
  9071  00783A  5003               	movf	fputc@fp^0,w,c
  9072  00783C  26D9               	addwf	fsr2l,f,c
  9073  00783E  5004               	movf	(fputc@fp+1)^0,w,c
  9074  007840  22DA               	addwfc	fsr2h,f,c
  9075  007842  EE10 F002          	lfsr	1,2
  9076  007846  5003               	movf	fputc@fp^0,w,c
  9077  007848  26E1               	addwf	fsr1l,f,c
  9078  00784A  5004               	movf	(fputc@fp+1)^0,w,c
  9079  00784C  22E2               	addwfc	fsr1h,f,c
  9080  00784E  50DE               	movf	postinc2,w,c
  9081  007850  5CE6               	subwf	postinc1,w,c
  9082  007852  50E6               	movf	postinc1,w,c
  9083  007854  0A80               	xorlw	128
  9084  007856  6E09               	movwf	(??_fputc+4)^0,c
  9085  007858  50DE               	movf	postinc2,w,c
  9086  00785A  0A80               	xorlw	128
  9087  00785C  5809               	subwfb	(??_fputc+4)^0,w,c
  9088  00785E  B0D8               	btfsc	status,0,c
  9089  007860  EF34  F03C         	goto	u3191
  9090  007864  EF37  F03C         	goto	u3190
  9091  007868                     u3191:
  9092  007868  FFFF               	dw	65535	; assembler added errata NOP
  9093  00786A  EF5B  F03C         	goto	l1328
  9094  00786E                     u3190:
  9095  00786E                     l3355:
  9096  00786E  FFFF               	dw	65535	; assembler added errata NOP
  9097  007870  EE20 F002          	lfsr	2,2
  9098  007874  5003               	movf	fputc@fp^0,w,c
  9099  007876  26D9               	addwf	fsr2l,f,c
  9100  007878  5004               	movf	(fputc@fp+1)^0,w,c
  9101  00787A  22DA               	addwfc	fsr2h,f,c
  9102  00787C  CFDE F005          	movff	postinc2,??_fputc
  9103  007880  CFDD F006          	movff	postdec2,??_fputc+1
  9104  007884  C003  FFD9         	movff	fputc@fp,fsr2l
  9105  007888  C004  FFDA         	movff	fputc@fp+1,fsr2h
  9106  00788C  CFDE F007          	movff	postinc2,??_fputc+2
  9107  007890  CFDD F008          	movff	postdec2,??_fputc+3
  9108  007894  5005               	movf	??_fputc^0,w,c
  9109  007896  2407               	addwf	(??_fputc+2)^0,w,c
  9110  007898  6ED9               	movwf	fsr2l,c
  9111  00789A  5006               	movf	(??_fputc+1)^0,w,c
  9112  00789C  2008               	addwfc	(??_fputc+3)^0,w,c
  9113  00789E  6EDA               	movwf	fsr2h,c
  9114  0078A0  C001  FFDF         	movff	fputc@c,indf2
  9115  0078A4  EE20 F002          	lfsr	2,2
  9116  0078A8  5003               	movf	fputc@fp^0,w,c
  9117  0078AA  26D9               	addwf	fsr2l,f,c
  9118  0078AC  5004               	movf	(fputc@fp+1)^0,w,c
  9119  0078AE  22DA               	addwfc	fsr2h,f,c
  9120  0078B0  2ADE               	incf	postinc2,f,c
  9121  0078B2  0E00               	movlw	0
  9122  0078B4  22DD               	addwfc	postdec2,f,c
  9123  0078B6                     l1328:
  9124  0078B6  FFFF               	dw	65535	; assembler added errata NOP
  9125  0078B8  0012               	return		;funcret
  9126  0078BA  FFFF               	dw	65535	; errata NOP
  9127  0078BC                     __end_of_fputc:
  9128                           	callstack 0
  9129                           
  9130 ;; *************** function _putch *****************
  9131 ;; Defined at:
  9132 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
  9133 ;; Parameters:    Size  Location     Type
  9134 ;;  c               1    wreg     unsigned char 
  9135 ;; Auto vars:     Size  Location     Type
  9136 ;;  c               1    0[COMRAM] unsigned char 
  9137 ;; Return value:  Size  Location     Type
  9138 ;;                  1    wreg      void 
  9139 ;; Registers used:
  9140 ;;		wreg
  9141 ;; Tracked objects:
  9142 ;;		On entry : 0/0
  9143 ;;		On exit  : 0/0
  9144 ;;		Unchanged: 0/0
  9145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9146 ;;      Params:         0       0       0       0       0       0       0
  9147 ;;      Locals:         0       0       0       0       0       0       0
  9148 ;;      Temps:          0       0       0       0       0       0       0
  9149 ;;      Totals:         0       0       0       0       0       0       0
  9150 ;;Total ram usage:        0 bytes
  9151 ;; Hardware stack levels used:    1
  9152 ;; Hardware stack levels required when called:    1
  9153 ;; This function calls:
  9154 ;;		Nothing
  9155 ;; This function is called by:
  9156 ;;		_fputc
  9157 ;; This function uses a non-reentrant model
  9158 ;;
  9159                           
  9160                           	psect	text28
  9161  006DAC                     __ptext28:
  9162                           	callstack 0
  9163  006DAC                     _putch:
  9164                           	callstack 0
  9165  006DAC  FFFF               	dw	65535	; assembler added errata NOP
  9166  006DAE  0012               	return		;funcret
  9167  006DB0  FFFF               	dw	65535	; errata NOP
  9168  006DB2                     __end_of_putch:
  9169                           	callstack 0
  9170                           
  9171 ;; *************** function _atoi *****************
  9172 ;; Defined at:
  9173 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
  9174 ;; Parameters:    Size  Location     Type
  9175 ;;  s               2    7[COMRAM] PTR const unsigned char 
  9176 ;;		 -> STR_8(3), 
  9177 ;; Auto vars:     Size  Location     Type
  9178 ;;  n               2   20[COMRAM] int 
  9179 ;;  neg             2   13[COMRAM] int 
  9180 ;; Return value:  Size  Location     Type
  9181 ;;                  2    7[COMRAM] int 
  9182 ;; Registers used:
  9183 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9184 ;; Tracked objects:
  9185 ;;		On entry : 0/0
  9186 ;;		On exit  : 0/0
  9187 ;;		Unchanged: 0/0
  9188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9189 ;;      Params:         2       0       0       0       0       0       0
  9190 ;;      Locals:         9       0       0       0       0       0       0
  9191 ;;      Temps:          4       0       0       0       0       0       0
  9192 ;;      Totals:        15       0       0       0       0       0       0
  9193 ;;Total ram usage:       15 bytes
  9194 ;; Hardware stack levels used:    1
  9195 ;; Hardware stack levels required when called:    2
  9196 ;; This function calls:
  9197 ;;		___wmul
  9198 ;;		_isdigit
  9199 ;;		_isspace
  9200 ;; This function is called by:
  9201 ;;		_vfpfcnvrt
  9202 ;; This function uses a non-reentrant model
  9203 ;;
  9204                           
  9205                           	psect	text29
  9206  0036FA                     __ptext29:
  9207                           	callstack 0
  9208  0036FA                     _atoi:
  9209                           	callstack 0
  9210  0036FA  FFFF               	dw	65535	; assembler added errata NOP
  9211  0036FC  0E00               	movlw	0
  9212  0036FE  6E16               	movwf	(atoi@n+1)^0,c
  9213  003700  0E00               	movlw	0
  9214  003702  6E15               	movwf	atoi@n^0,c
  9215  003704  0E00               	movlw	0
  9216  003706  6E0F               	movwf	(atoi@neg+1)^0,c
  9217  003708  0E00               	movlw	0
  9218  00370A  6E0E               	movwf	atoi@neg^0,c
  9219  00370C  EF8B  F01B         	goto	l3837
  9220  003710                     l3835:
  9221  003710  FFFF               	dw	65535	; assembler added errata NOP
  9222  003712  4A08               	infsnz	atoi@s^0,f,c
  9223  003714  2A09               	incf	(atoi@s+1)^0,f,c
  9224  003716                     l3837:
  9225  003716  FFFF               	dw	65535	; assembler added errata NOP
  9226  003718  0E01               	movlw	1
  9227  00371A  6E14               	movwf	_atoi$1628^0,c
  9228  00371C  C008  FFF6         	movff	atoi@s,tblptrl
  9229  003720  C009  FFF7         	movff	atoi@s+1,tblptrh
  9230  003724                     	if	0	;tblptru may be non-zero
  9231  003724                     	endif
  9232  003724                     	if	0	;tblptru may be non-zero
  9233  003724                     	endif
  9234  003724  0008               	tblrd		*
  9235  003726  FFFF               	dw	65535	; errata NOP
  9236  003728  50F5               	movf	tablat,w,c
  9237  00372A  0A20               	xorlw	32
  9238  00372C  B4D8               	btfsc	status,2,c
  9239  00372E  EF9B  F01B         	goto	u4211
  9240  003732  EF9E  F01B         	goto	u4210
  9241  003736                     u4211:
  9242  003736  FFFF               	dw	65535	; assembler added errata NOP
  9243  003738  EFBF  F01B         	goto	l3845
  9244  00373C                     u4210:
  9245  00373C  FFFF               	dw	65535	; assembler added errata NOP
  9246  00373E  0EF7               	movlw	247
  9247  003740  6E0A               	movwf	??_atoi^0,c
  9248  003742  0EFF               	movlw	255
  9249  003744  6E0B               	movwf	(??_atoi+1)^0,c
  9250  003746  C008  FFF6         	movff	atoi@s,tblptrl
  9251  00374A  C009  FFF7         	movff	atoi@s+1,tblptrh
  9252  00374E                     	if	0	;tblptru may be non-zero
  9253  00374E                     	endif
  9254  00374E                     	if	0	;tblptru may be non-zero
  9255  00374E                     	endif
  9256  00374E  0008               	tblrd		*
  9257  003750  FFFF               	dw	65535	; errata NOP
  9258  003752  50F5               	movf	tablat,w,c
  9259  003754  6E0C               	movwf	(??_atoi+2)^0,c
  9260  003756  6A0D               	clrf	(??_atoi+3)^0,c
  9261  003758  500A               	movf	??_atoi^0,w,c
  9262  00375A  260C               	addwf	(??_atoi+2)^0,f,c
  9263  00375C  500B               	movf	(??_atoi+1)^0,w,c
  9264  00375E  220D               	addwfc	(??_atoi+3)^0,f,c
  9265  003760  500D               	movf	(??_atoi+3)^0,w,c
  9266  003762  E10A               	bnz	u4220
  9267  003764  0E05               	movlw	5
  9268  003766  5C0C               	subwf	(??_atoi+2)^0,w,c
  9269  003768  A0D8               	btfss	status,0,c
  9270  00376A  EFB9  F01B         	goto	u4221
  9271  00376E  EFBC  F01B         	goto	u4220
  9272  003772                     u4221:
  9273  003772  FFFF               	dw	65535	; assembler added errata NOP
  9274  003774  EFBF  F01B         	goto	l3845
  9275  003778                     u4220:
  9276  003778  FFFF               	dw	65535	; assembler added errata NOP
  9277  00377A  0E00               	movlw	0
  9278  00377C  6E14               	movwf	_atoi$1628^0,c
  9279  00377E                     l3845:
  9280  00377E  FFFF               	dw	65535	; assembler added errata NOP
  9281  003780  C014  F010         	movff	_atoi$1628,_atoi$1627
  9282  003784  6A11               	clrf	(_atoi$1627+1)^0,c
  9283  003786  5010               	movf	_atoi$1627^0,w,c
  9284  003788  1011               	iorwf	(_atoi$1627+1)^0,w,c
  9285  00378A  A4D8               	btfss	status,2,c
  9286  00378C  EFCA  F01B         	goto	u4231
  9287  003790  EFCD  F01B         	goto	u4230
  9288  003794                     u4231:
  9289  003794  FFFF               	dw	65535	; assembler added errata NOP
  9290  003796  EF88  F01B         	goto	l3835
  9291  00379A                     u4230:
  9292  00379A  FFFF               	dw	65535	; assembler added errata NOP
  9293  00379C  EFDA  F01B         	goto	l3855
  9294  0037A0                     l3851:
  9295  0037A0  FFFF               	dw	65535	; assembler added errata NOP
  9296  0037A2  0E00               	movlw	0
  9297  0037A4  6E0F               	movwf	(atoi@neg+1)^0,c
  9298  0037A6  0E01               	movlw	1
  9299  0037A8  6E0E               	movwf	atoi@neg^0,c
  9300  0037AA                     l3853:
  9301  0037AA  FFFF               	dw	65535	; assembler added errata NOP
  9302  0037AC  4A08               	infsnz	atoi@s^0,f,c
  9303  0037AE  2A09               	incf	(atoi@s+1)^0,f,c
  9304  0037B0  EF14  F01C         	goto	l3861
  9305  0037B4                     l3855:
  9306  0037B4  FFFF               	dw	65535	; assembler added errata NOP
  9307  0037B6  C008  FFF6         	movff	atoi@s,tblptrl
  9308  0037BA  C009  FFF7         	movff	atoi@s+1,tblptrh
  9309  0037BE                     	if	0	;tblptru may be non-zero
  9310  0037BE                     	endif
  9311  0037BE                     	if	0	;tblptru may be non-zero
  9312  0037BE                     	endif
  9313  0037BE  0008               	tblrd		*
  9314  0037C0  FFFF               	dw	65535	; errata NOP
  9315  0037C2  50F5               	movf	tablat,w,c
  9316  0037C4  6E0A               	movwf	??_atoi^0,c
  9317  0037C6  6A0B               	clrf	(??_atoi+1)^0,c
  9318                           
  9319                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9320                           ; Switch size 1, requested type "simple"
  9321                           ; Number of cases is 1, Range of values is 0 to 0
  9322                           ; switch strategies available:
  9323                           ; Name         Instructions Cycles
  9324                           ; simple_byte            4     3 (average)
  9325                           ;	Chosen strategy is simple_byte
  9326  0037C8  500B               	movf	(??_atoi+1)^0,w,c
  9327  0037CA  0A00               	xorlw	0	; case 0
  9328  0037CC  B4D8               	btfsc	status,2,c
  9329  0037CE  EFEB  F01B         	goto	l5347
  9330  0037D2  EF14  F01C         	goto	l3861
  9331  0037D6                     l5347:
  9332  0037D6  FFFF               	dw	65535	; assembler added errata NOP
  9333                           
  9334                           ; Switch size 1, requested type "simple"
  9335                           ; Number of cases is 2, Range of values is 43 to 45
  9336                           ; switch strategies available:
  9337                           ; Name         Instructions Cycles
  9338                           ; simple_byte            7     4 (average)
  9339                           ;	Chosen strategy is simple_byte
  9340  0037D8  500A               	movf	??_atoi^0,w,c
  9341  0037DA  0A2B               	xorlw	43	; case 43
  9342  0037DC  B4D8               	btfsc	status,2,c
  9343  0037DE  EFD5  F01B         	goto	l3853
  9344  0037E2  0A06               	xorlw	6	; case 45
  9345  0037E4  B4D8               	btfsc	status,2,c
  9346  0037E6  EFD0  F01B         	goto	l3851
  9347  0037EA  EF14  F01C         	goto	l3861
  9348  0037EE                     l3857:
  9349  0037EE  FFFF               	dw	65535	; assembler added errata NOP
  9350  0037F0  C015  F001         	movff	atoi@n,___wmul@multiplier
  9351  0037F4  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  9352  0037F8  0E00               	movlw	0
  9353  0037FA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9354  0037FC  0E0A               	movlw	10
  9355  0037FE  6E03               	movwf	___wmul@multiplicand^0,c
  9356  003800  EC59  F037         	call	___wmul	;wreg free
  9357  003804  C008  FFF6         	movff	atoi@s,tblptrl
  9358  003808  C009  FFF7         	movff	atoi@s+1,tblptrh
  9359  00380C                     	if	0	;tblptru may be non-zero
  9360  00380C                     	endif
  9361  00380C                     	if	0	;tblptru may be non-zero
  9362  00380C                     	endif
  9363  00380C  0008               	tblrd		*
  9364  00380E  FFFF               	dw	65535	; errata NOP
  9365  003810  50F5               	movf	tablat,w,c
  9366  003812  5E01               	subwf	?___wmul^0,f,c
  9367  003814  0E00               	movlw	0
  9368  003816  5A02               	subwfb	(?___wmul+1)^0,f,c
  9369  003818  0E30               	movlw	48
  9370  00381A  2401               	addwf	?___wmul^0,w,c
  9371  00381C  6E15               	movwf	atoi@n^0,c
  9372  00381E  0E00               	movlw	0
  9373  003820  2002               	addwfc	(?___wmul+1)^0,w,c
  9374  003822  6E16               	movwf	(atoi@n+1)^0,c
  9375  003824  EFD5  F01B         	goto	l3853
  9376  003828                     l3861:
  9377  003828  FFFF               	dw	65535	; assembler added errata NOP
  9378  00382A  0ED0               	movlw	208
  9379  00382C  6E0A               	movwf	??_atoi^0,c
  9380  00382E  0EFF               	movlw	255
  9381  003830  6E0B               	movwf	(??_atoi+1)^0,c
  9382  003832  C008  FFF6         	movff	atoi@s,tblptrl
  9383  003836  C009  FFF7         	movff	atoi@s+1,tblptrh
  9384  00383A                     	if	0	;tblptru may be non-zero
  9385  00383A                     	endif
  9386  00383A                     	if	0	;tblptru may be non-zero
  9387  00383A                     	endif
  9388  00383A  0008               	tblrd		*
  9389  00383C  FFFF               	dw	65535	; errata NOP
  9390  00383E  50F5               	movf	tablat,w,c
  9391  003840  6E0C               	movwf	(??_atoi+2)^0,c
  9392  003842  6A0D               	clrf	(??_atoi+3)^0,c
  9393  003844  500A               	movf	??_atoi^0,w,c
  9394  003846  260C               	addwf	(??_atoi+2)^0,f,c
  9395  003848  500B               	movf	(??_atoi+1)^0,w,c
  9396  00384A  220D               	addwfc	(??_atoi+3)^0,f,c
  9397  00384C  500D               	movf	(??_atoi+3)^0,w,c
  9398  00384E  E10B               	bnz	u4240
  9399  003850  0E0A               	movlw	10
  9400  003852  5C0C               	subwf	(??_atoi+2)^0,w,c
  9401  003854  A0D8               	btfss	status,0,c
  9402  003856  EF2F  F01C         	goto	u4241
  9403  00385A  EF33  F01C         	goto	u4240
  9404  00385E                     u4241:
  9405  00385E  FFFF               	dw	65535	; assembler added errata NOP
  9406  003860  0E01               	movlw	1
  9407  003862  EF35  F01C         	goto	u4250
  9408  003866                     u4240:
  9409  003866  FFFF               	dw	65535	; assembler added errata NOP
  9410  003868  0E00               	movlw	0
  9411  00386A                     u4250:
  9412  00386A  FFFF               	dw	65535	; assembler added errata NOP
  9413  00386C  6E12               	movwf	_atoi$1629^0,c
  9414  00386E  6A13               	clrf	(_atoi$1629+1)^0,c
  9415  003870  5012               	movf	_atoi$1629^0,w,c
  9416  003872  1013               	iorwf	(_atoi$1629+1)^0,w,c
  9417  003874  A4D8               	btfss	status,2,c
  9418  003876  EF3F  F01C         	goto	u4261
  9419  00387A  EF42  F01C         	goto	u4260
  9420  00387E                     u4261:
  9421  00387E  FFFF               	dw	65535	; assembler added errata NOP
  9422  003880  EFF7  F01B         	goto	l3857
  9423  003884                     u4260:
  9424  003884  FFFF               	dw	65535	; assembler added errata NOP
  9425  003886  500E               	movf	atoi@neg^0,w,c
  9426  003888  100F               	iorwf	(atoi@neg+1)^0,w,c
  9427  00388A  A4D8               	btfss	status,2,c
  9428  00388C  EF4A  F01C         	goto	u4271
  9429  003890  EF4D  F01C         	goto	u4270
  9430  003894                     u4271:
  9431  003894  FFFF               	dw	65535	; assembler added errata NOP
  9432  003896  EF5C  F01C         	goto	l1285
  9433  00389A                     u4270:
  9434  00389A  FFFF               	dw	65535	; assembler added errata NOP
  9435  00389C  C015  F00A         	movff	atoi@n,??_atoi
  9436  0038A0  C016  F00B         	movff	atoi@n+1,??_atoi+1
  9437  0038A4  1E0A               	comf	??_atoi^0,f,c
  9438  0038A6  1E0B               	comf	(??_atoi+1)^0,f,c
  9439  0038A8  4A0A               	infsnz	??_atoi^0,f,c
  9440  0038AA  2A0B               	incf	(??_atoi+1)^0,f,c
  9441  0038AC  C00A  F008         	movff	??_atoi,?_atoi
  9442  0038B0  C00B  F009         	movff	??_atoi+1,?_atoi+1
  9443  0038B4  EF61  F01C         	goto	l1288
  9444  0038B8                     l1285:
  9445  0038B8  FFFF               	dw	65535	; assembler added errata NOP
  9446  0038BA  C015  F008         	movff	atoi@n,?_atoi
  9447  0038BE  C016  F009         	movff	atoi@n+1,?_atoi+1
  9448  0038C2                     l1288:
  9449  0038C2  FFFF               	dw	65535	; assembler added errata NOP
  9450  0038C4  0012               	return		;funcret
  9451  0038C6  FFFF               	dw	65535	; errata NOP
  9452  0038C8                     __end_of_atoi:
  9453                           	callstack 0
  9454                           
  9455 ;; *************** function _isspace *****************
  9456 ;; Defined at:
  9457 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
  9458 ;; Parameters:    Size  Location     Type
  9459 ;;  c               2    0[COMRAM] int 
  9460 ;; Auto vars:     Size  Location     Type
  9461 ;;		None
  9462 ;; Return value:  Size  Location     Type
  9463 ;;                  2    0[COMRAM] int 
  9464 ;; Registers used:
  9465 ;;		wreg, status,2, status,0
  9466 ;; Tracked objects:
  9467 ;;		On entry : 0/0
  9468 ;;		On exit  : 0/0
  9469 ;;		Unchanged: 0/0
  9470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9471 ;;      Params:         2       0       0       0       0       0       0
  9472 ;;      Locals:         1       0       0       0       0       0       0
  9473 ;;      Temps:          4       0       0       0       0       0       0
  9474 ;;      Totals:         7       0       0       0       0       0       0
  9475 ;;Total ram usage:        7 bytes
  9476 ;; Hardware stack levels used:    1
  9477 ;; Hardware stack levels required when called:    1
  9478 ;; This function calls:
  9479 ;;		Nothing
  9480 ;; This function is called by:
  9481 ;;		_atoi
  9482 ;; This function uses a non-reentrant model
  9483 ;;
  9484                           
  9485                           	psect	text30
  9486  0071E8                     __ptext30:
  9487                           	callstack 0
  9488  0071E8                     _isspace:
  9489                           	callstack 24
  9490  0071E8  FFFF               	dw	65535	; assembler added errata NOP
  9491  0071EA  0E01               	movlw	1
  9492  0071EC  6E07               	movwf	_isspace$1655^0,c
  9493  0071EE  0E20               	movlw	32
  9494  0071F0  1801               	xorwf	isspace@c^0,w,c
  9495  0071F2  1002               	iorwf	(isspace@c+1)^0,w,c
  9496  0071F4  B4D8               	btfsc	status,2,c
  9497  0071F6  EFFF  F038         	goto	u3591
  9498  0071FA  EF02  F039         	goto	u3590
  9499  0071FE                     u3591:
  9500  0071FE  FFFF               	dw	65535	; assembler added errata NOP
  9501  007200  EF1E  F039         	goto	l3561
  9502  007204                     u3590:
  9503  007204  FFFF               	dw	65535	; assembler added errata NOP
  9504  007206  0EF7               	movlw	247
  9505  007208  6E03               	movwf	??_isspace^0,c
  9506  00720A  0EFF               	movlw	255
  9507  00720C  6E04               	movwf	(??_isspace+1)^0,c
  9508  00720E  C001  F005         	movff	isspace@c,??_isspace+2
  9509  007212  C002  F006         	movff	isspace@c+1,??_isspace+3
  9510  007216  5003               	movf	??_isspace^0,w,c
  9511  007218  2605               	addwf	(??_isspace+2)^0,f,c
  9512  00721A  5004               	movf	(??_isspace+1)^0,w,c
  9513  00721C  2206               	addwfc	(??_isspace+3)^0,f,c
  9514  00721E  5006               	movf	(??_isspace+3)^0,w,c
  9515  007220  E10A               	bnz	u3600
  9516  007222  0E05               	movlw	5
  9517  007224  5C05               	subwf	(??_isspace+2)^0,w,c
  9518  007226  A0D8               	btfss	status,0,c
  9519  007228  EF18  F039         	goto	u3601
  9520  00722C  EF1B  F039         	goto	u3600
  9521  007230                     u3601:
  9522  007230  FFFF               	dw	65535	; assembler added errata NOP
  9523  007232  EF1E  F039         	goto	l3561
  9524  007236                     u3600:
  9525  007236  FFFF               	dw	65535	; assembler added errata NOP
  9526  007238  0E00               	movlw	0
  9527  00723A  6E07               	movwf	_isspace$1655^0,c
  9528  00723C                     l3561:
  9529  00723C  FFFF               	dw	65535	; assembler added errata NOP
  9530  00723E  C007  F001         	movff	_isspace$1655,?_isspace
  9531  007242  6A02               	clrf	(?_isspace+1)^0,c
  9532  007244  0012               	return		;funcret
  9533  007246  FFFF               	dw	65535	; errata NOP
  9534  007248                     __end_of_isspace:
  9535                           	callstack 0
  9536                           
  9537 ;; *************** function _isdigit *****************
  9538 ;; Defined at:
  9539 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
  9540 ;; Parameters:    Size  Location     Type
  9541 ;;  c               2    0[COMRAM] int 
  9542 ;; Auto vars:     Size  Location     Type
  9543 ;;		None
  9544 ;; Return value:  Size  Location     Type
  9545 ;;                  2    0[COMRAM] int 
  9546 ;; Registers used:
  9547 ;;		wreg, status,2, status,0
  9548 ;; Tracked objects:
  9549 ;;		On entry : 0/0
  9550 ;;		On exit  : 0/0
  9551 ;;		Unchanged: 0/0
  9552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9553 ;;      Params:         2       0       0       0       0       0       0
  9554 ;;      Locals:         0       0       0       0       0       0       0
  9555 ;;      Temps:          4       0       0       0       0       0       0
  9556 ;;      Totals:         6       0       0       0       0       0       0
  9557 ;;Total ram usage:        6 bytes
  9558 ;; Hardware stack levels used:    1
  9559 ;; Hardware stack levels required when called:    1
  9560 ;; This function calls:
  9561 ;;		Nothing
  9562 ;; This function is called by:
  9563 ;;		_vfpfcnvrt
  9564 ;;		_atoi
  9565 ;; This function uses a non-reentrant model
  9566 ;;
  9567                           
  9568                           	psect	text31
  9569  006FF6                     __ptext31:
  9570                           	callstack 0
  9571  006FF6                     _isdigit:
  9572                           	callstack 25
  9573  006FF6  FFFF               	dw	65535	; assembler added errata NOP
  9574  006FF8  0ED0               	movlw	208
  9575  006FFA  6E03               	movwf	??_isdigit^0,c
  9576  006FFC  0EFF               	movlw	255
  9577  006FFE  6E04               	movwf	(??_isdigit+1)^0,c
  9578  007000  C001  F005         	movff	isdigit@c,??_isdigit+2
  9579  007004  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  9580  007008  5003               	movf	??_isdigit^0,w,c
  9581  00700A  2605               	addwf	(??_isdigit+2)^0,f,c
  9582  00700C  5004               	movf	(??_isdigit+1)^0,w,c
  9583  00700E  2206               	addwfc	(??_isdigit+3)^0,f,c
  9584  007010  5006               	movf	(??_isdigit+3)^0,w,c
  9585  007012  E10B               	bnz	u3570
  9586  007014  0E0A               	movlw	10
  9587  007016  5C05               	subwf	(??_isdigit+2)^0,w,c
  9588  007018  A0D8               	btfss	status,0,c
  9589  00701A  EF11  F038         	goto	u3571
  9590  00701E  EF15  F038         	goto	u3570
  9591  007022                     u3571:
  9592  007022  FFFF               	dw	65535	; assembler added errata NOP
  9593  007024  0E01               	movlw	1
  9594  007026  EF17  F038         	goto	u3580
  9595  00702A                     u3570:
  9596  00702A  FFFF               	dw	65535	; assembler added errata NOP
  9597  00702C  0E00               	movlw	0
  9598  00702E                     u3580:
  9599  00702E  FFFF               	dw	65535	; assembler added errata NOP
  9600  007030  6E01               	movwf	?_isdigit^0,c
  9601  007032  6A02               	clrf	(?_isdigit+1)^0,c
  9602  007034  0012               	return		;funcret
  9603  007036  FFFF               	dw	65535	; errata NOP
  9604  007038                     __end_of_isdigit:
  9605                           	callstack 0
  9606                           
  9607 ;; *************** function ___wmul *****************
  9608 ;; Defined at:
  9609 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  9610 ;; Parameters:    Size  Location     Type
  9611 ;;  multiplier      2    0[COMRAM] unsigned int 
  9612 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9613 ;; Auto vars:     Size  Location     Type
  9614 ;;  product         2    4[COMRAM] unsigned int 
  9615 ;; Return value:  Size  Location     Type
  9616 ;;                  2    0[COMRAM] unsigned int 
  9617 ;; Registers used:
  9618 ;;		wreg, status,2, status,0, prodl, prodh
  9619 ;; Tracked objects:
  9620 ;;		On entry : 0/0
  9621 ;;		On exit  : 0/0
  9622 ;;		Unchanged: 0/0
  9623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9624 ;;      Params:         4       0       0       0       0       0       0
  9625 ;;      Locals:         2       0       0       0       0       0       0
  9626 ;;      Temps:          0       0       0       0       0       0       0
  9627 ;;      Totals:         6       0       0       0       0       0       0
  9628 ;;Total ram usage:        6 bytes
  9629 ;; Hardware stack levels used:    1
  9630 ;; Hardware stack levels required when called:    1
  9631 ;; This function calls:
  9632 ;;		Nothing
  9633 ;; This function is called by:
  9634 ;;		_atoi
  9635 ;; This function uses a non-reentrant model
  9636 ;;
  9637                           
  9638                           	psect	text32
  9639  006EB2                     __ptext32:
  9640                           	callstack 0
  9641  006EB2                     ___wmul:
  9642                           	callstack 0
  9643  006EB2  FFFF               	dw	65535	; assembler added errata NOP
  9644  006EB4  5001               	movf	___wmul@multiplier^0,w,c
  9645  006EB6  0203               	mulwf	___wmul@multiplicand^0,c
  9646  006EB8  CFF3 F005          	movff	prodl,___wmul@product
  9647  006EBC  CFF4 F006          	movff	prodh,___wmul@product+1
  9648  006EC0  5001               	movf	___wmul@multiplier^0,w,c
  9649  006EC2  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9650  006EC4  50F3               	movf	243,w,c
  9651  006EC6  2606               	addwf	(___wmul@product+1)^0,f,c
  9652  006EC8  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9653  006ECA  0203               	mulwf	___wmul@multiplicand^0,c
  9654  006ECC  50F3               	movf	243,w,c
  9655  006ECE  2606               	addwf	(___wmul@product+1)^0,f,c
  9656  006ED0  C005  F001         	movff	___wmul@product,?___wmul
  9657  006ED4  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9658  006ED8  0012               	return		;funcret
  9659  006EDA  FFFF               	dw	65535	; errata NOP
  9660  006EDC                     __end_of___wmul:
  9661                           	callstack 0
  9662                           
  9663 ;; *************** function _serial_tx_char *****************
  9664 ;; Defined at:
  9665 ;;		line 39 in file "serial_rs232.c"
  9666 ;; Parameters:    Size  Location     Type
  9667 ;;  val             1    wreg     unsigned char 
  9668 ;; Auto vars:     Size  Location     Type
  9669 ;;  val             1    0[COMRAM] unsigned char 
  9670 ;; Return value:  Size  Location     Type
  9671 ;;                  1    wreg      void 
  9672 ;; Registers used:
  9673 ;;		wreg
  9674 ;; Tracked objects:
  9675 ;;		On entry : 0/0
  9676 ;;		On exit  : 0/0
  9677 ;;		Unchanged: 0/0
  9678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9679 ;;      Params:         0       0       0       0       0       0       0
  9680 ;;      Locals:         1       0       0       0       0       0       0
  9681 ;;      Temps:          0       0       0       0       0       0       0
  9682 ;;      Totals:         1       0       0       0       0       0       0
  9683 ;;Total ram usage:        1 bytes
  9684 ;; Hardware stack levels used:    1
  9685 ;; Hardware stack levels required when called:    1
  9686 ;; This function calls:
  9687 ;;		Nothing
  9688 ;; This function is called by:
  9689 ;;		_main
  9690 ;;		_serial_tx_string
  9691 ;; This function uses a non-reentrant model
  9692 ;;
  9693                           
  9694                           	psect	text33
  9695  006DFA                     __ptext33:
  9696                           	callstack 0
  9697  006DFA                     _serial_tx_char:
  9698                           	callstack 0
  9699  006DFA  FFFF               	dw	65535	; assembler added errata NOP
  9700                           
  9701                           ;incstack = 0
  9702                           ;serial_tx_char@val stored from wreg
  9703  006DFC  6E01               	movwf	serial_tx_char@val^0,c
  9704  006DFE                     
  9705                           ;serial_rs232.c: 40:     TXREG = val;
  9706  006DFE  C001  FFAD         	movff	serial_tx_char@val,4013	;volatile
  9707  006E02                     l24:
  9708  006E02  FFFF               	dw	65535	; assembler added errata NOP
  9709  006E04  A2AC               	btfss	172,1,c	;volatile
  9710  006E06  EF07  F037         	goto	u5931
  9711  006E0A  EF0A  F037         	goto	u5930
  9712  006E0E                     u5931:
  9713  006E0E  FFFF               	dw	65535	; assembler added errata NOP
  9714  006E10  EF01  F037         	goto	l24
  9715  006E14                     u5930:
  9716  006E14  FFFF               	dw	65535	; assembler added errata NOP
  9717  006E16  0012               	return		;funcret
  9718  006E18  FFFF               	dw	65535	; errata NOP
  9719  006E1A                     __end_of_serial_tx_char:
  9720                           	callstack 0
  9721                           
  9722 ;; *************** function _mix_exit_condition *****************
  9723 ;; Defined at:
  9724 ;;		line 182 in file "main.c"
  9725 ;; Parameters:    Size  Location     Type
  9726 ;;  counter         2    0[COMRAM] int 
  9727 ;;  current_step    2    2[COMRAM] PTR int 
  9728 ;;		 -> mix_current_step(2), 
  9729 ;; Auto vars:     Size  Location     Type
  9730 ;;		None
  9731 ;; Return value:  Size  Location     Type
  9732 ;;                  1    wreg      void 
  9733 ;; Registers used:
  9734 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9735 ;; Tracked objects:
  9736 ;;		On entry : 0/0
  9737 ;;		On exit  : 0/0
  9738 ;;		Unchanged: 0/0
  9739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9740 ;;      Params:         4       0       0       0       0       0       0
  9741 ;;      Locals:         0       0       0       0       0       0       0
  9742 ;;      Temps:          0       0       0       0       0       0       0
  9743 ;;      Totals:         4       0       0       0       0       0       0
  9744 ;;Total ram usage:        4 bytes
  9745 ;; Hardware stack levels used:    1
  9746 ;; Hardware stack levels required when called:    1
  9747 ;; This function calls:
  9748 ;;		Nothing
  9749 ;; This function is called by:
  9750 ;;		_main
  9751 ;; This function uses a non-reentrant model
  9752 ;;
  9753                           
  9754                           	psect	text34
  9755  006F3C                     __ptext34:
  9756                           	callstack 0
  9757  006F3C                     _mix_exit_condition:
  9758                           	callstack 0
  9759  006F3C  FFFF               	dw	65535	; assembler added errata NOP
  9760  006F3E                     
  9761                           ;main.c: 183:     if (counter >= 20){
  9762  006F3E  BE02               	btfsc	(mix_exit_condition@counter+1)^0,7,c
  9763  006F40  EFAB  F037         	goto	u6111
  9764  006F44  5002               	movf	(mix_exit_condition@counter+1)^0,w,c
  9765  006F46  E10A               	bnz	u6110
  9766  006F48  0E14               	movlw	20
  9767  006F4A  5C01               	subwf	mix_exit_condition@counter^0,w,c
  9768  006F4C  A0D8               	btfss	status,0,c
  9769  006F4E  EFAB  F037         	goto	u6111
  9770  006F52  EFAE  F037         	goto	u6110
  9771  006F56                     u6111:
  9772  006F56  FFFF               	dw	65535	; assembler added errata NOP
  9773  006F58  EFB7  F037         	goto	l156
  9774  006F5C                     u6110:
  9775  006F5C  FFFF               	dw	65535	; assembler added errata NOP
  9776  006F5E                     
  9777                           ;main.c: 184:         *current_step = 10;
  9778  006F5E  C003  FFD9         	movff	mix_exit_condition@current_step,fsr2l
  9779  006F62  C004  FFDA         	movff	mix_exit_condition@current_step+1,fsr2h
  9780  006F66  0E0A               	movlw	10
  9781  006F68  6EDE               	movwf	postinc2,c
  9782  006F6A  0E00               	movlw	0
  9783  006F6C  6EDD               	movwf	postdec2,c
  9784  006F6E                     l156:
  9785  006F6E  FFFF               	dw	65535	; assembler added errata NOP
  9786  006F70  0012               	return		;funcret
  9787  006F72  FFFF               	dw	65535	; errata NOP
  9788  006F74                     __end_of_mix_exit_condition:
  9789                           	callstack 0
  9790                           
  9791 ;; *************** function _lcd_str *****************
  9792 ;; Defined at:
  9793 ;;		line 62 in file "lcd.c"
  9794 ;; Parameters:    Size  Location     Type
  9795 ;;  str             2    2[COMRAM] PTR const unsigned char 
  9796 ;;		 -> main@greet_str(160), STR_7(22), 
  9797 ;; Auto vars:     Size  Location     Type
  9798 ;;  i               1    6[COMRAM] unsigned char 
  9799 ;; Return value:  Size  Location     Type
  9800 ;;                  1    wreg      void 
  9801 ;; Registers used:
  9802 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9803 ;; Tracked objects:
  9804 ;;		On entry : 0/0
  9805 ;;		On exit  : 0/0
  9806 ;;		Unchanged: 0/0
  9807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9808 ;;      Params:         2       0       0       0       0       0       0
  9809 ;;      Locals:         1       0       0       0       0       0       0
  9810 ;;      Temps:          2       0       0       0       0       0       0
  9811 ;;      Totals:         5       0       0       0       0       0       0
  9812 ;;Total ram usage:        5 bytes
  9813 ;; Hardware stack levels used:    1
  9814 ;; Hardware stack levels required when called:    3
  9815 ;; This function calls:
  9816 ;;		_lcd_dat
  9817 ;; This function is called by:
  9818 ;;		_main
  9819 ;; This function uses a non-reentrant model
  9820 ;;
  9821                           
  9822                           	psect	text35
  9823  007472                     __ptext35:
  9824                           	callstack 0
  9825  007472                     _lcd_str:
  9826                           	callstack 0
  9827  007472  FFFF               	dw	65535	; assembler added errata NOP
  9828  007474                     
  9829                           ;lcd.c: 62: void lcd_str(const char* str);lcd.c: 63: {;lcd.c: 64:     unsigned char i=0;
  9830  007474  0E00               	movlw	0
  9831  007476  6E07               	movwf	lcd_str@i^0,c
  9832                           
  9833                           ;lcd.c: 66:     while(str[i] != 0 )
  9834  007478  EF59  F03A         	goto	l4991
  9835  00747C                     l4987:
  9836  00747C  FFFF               	dw	65535	; assembler added errata NOP
  9837                           
  9838                           ;lcd.c: 67:     {;lcd.c: 68:       lcd_dat(str[i]);
  9839  00747E  5007               	movf	lcd_str@i^0,w,c
  9840  007480  2403               	addwf	lcd_str@str^0,w,c
  9841  007482  6E05               	movwf	??_lcd_str^0,c
  9842  007484  0E00               	movlw	0
  9843  007486  2004               	addwfc	(lcd_str@str+1)^0,w,c
  9844  007488  6E06               	movwf	(??_lcd_str+1)^0,c
  9845  00748A  C005  FFF6         	movff	??_lcd_str,tblptrl
  9846  00748E  C006  FFF7         	movff	??_lcd_str+1,tblptrh
  9847  007492  6AF8               	clrf	tblptru,c
  9848  007494  0E05               	movlw	(high __ramtop+-1)
  9849  007496  64F7               	cpfsgt	tblptrh,c
  9850  007498  D004               	bra	u5947
  9851  00749A  0008               	tblrd		*
  9852  00749C  FFFF               	dw	65535	; errata NOP
  9853  00749E  50F5               	movf	tablat,w,c
  9854  0074A0  D005               	bra	u5940
  9855  0074A2                     u5947:
  9856  0074A2  CFF6 FFE1          	movff	tblptrl,fsr1l
  9857  0074A6  CFF7 FFE2          	movff	tblptrh,fsr1h
  9858  0074AA  50E7               	movf	indf1,w,c
  9859  0074AC                     u5940:
  9860  0074AC  EC44  F037         	call	_lcd_dat
  9861  0074B0                     
  9862                           ;lcd.c: 69:       i++;
  9863  0074B0  2A07               	incf	lcd_str@i^0,f,c
  9864  0074B2                     l4991:
  9865  0074B2  FFFF               	dw	65535	; assembler added errata NOP
  9866                           
  9867                           ;lcd.c: 66:     while(str[i] != 0 )
  9868  0074B4  5007               	movf	lcd_str@i^0,w,c
  9869  0074B6  2403               	addwf	lcd_str@str^0,w,c
  9870  0074B8  6E05               	movwf	??_lcd_str^0,c
  9871  0074BA  0E00               	movlw	0
  9872  0074BC  2004               	addwfc	(lcd_str@str+1)^0,w,c
  9873  0074BE  6E06               	movwf	(??_lcd_str+1)^0,c
  9874  0074C0  C005  FFF6         	movff	??_lcd_str,tblptrl
  9875  0074C4  C006  FFF7         	movff	??_lcd_str+1,tblptrh
  9876  0074C8  6AF8               	clrf	tblptru,c
  9877  0074CA  0E05               	movlw	(high __ramtop+-1)
  9878  0074CC  64F7               	cpfsgt	tblptrh,c
  9879  0074CE  D004               	bra	u5957
  9880  0074D0  0008               	tblrd		*
  9881  0074D2  FFFF               	dw	65535	; errata NOP
  9882  0074D4  50F5               	movf	tablat,w,c
  9883  0074D6  D005               	bra	u5950
  9884  0074D8                     u5957:
  9885  0074D8  CFF6 FFE1          	movff	tblptrl,fsr1l
  9886  0074DC  CFF7 FFE2          	movff	tblptrh,fsr1h
  9887  0074E0  50E7               	movf	indf1,w,c
  9888  0074E2                     u5950:
  9889  0074E2  0900               	iorlw	0
  9890  0074E4  A4D8               	btfss	status,2,c
  9891  0074E6  EF77  F03A         	goto	u5961
  9892  0074EA  EF7A  F03A         	goto	u5960
  9893  0074EE                     u5961:
  9894  0074EE  FFFF               	dw	65535	; assembler added errata NOP
  9895  0074F0  EF3E  F03A         	goto	l4987
  9896  0074F4                     u5960:
  9897  0074F4  FFFF               	dw	65535	; assembler added errata NOP
  9898  0074F6  0012               	return		;funcret
  9899  0074F8  FFFF               	dw	65535	; errata NOP
  9900  0074FA                     __end_of_lcd_str:
  9901                           	callstack 0
  9902                           
  9903 ;; *************** function _lcd_dat *****************
  9904 ;; Defined at:
  9905 ;;		line 21 in file "lcd.c"
  9906 ;; Parameters:    Size  Location     Type
  9907 ;;  val             1    wreg     unsigned char 
  9908 ;; Auto vars:     Size  Location     Type
  9909 ;;  val             1    1[COMRAM] unsigned char 
  9910 ;; Return value:  Size  Location     Type
  9911 ;;                  1    wreg      void 
  9912 ;; Registers used:
  9913 ;;		wreg, status,2, cstack
  9914 ;; Tracked objects:
  9915 ;;		On entry : 0/0
  9916 ;;		On exit  : 0/0
  9917 ;;		Unchanged: 0/0
  9918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9919 ;;      Params:         0       0       0       0       0       0       0
  9920 ;;      Locals:         1       0       0       0       0       0       0
  9921 ;;      Temps:          0       0       0       0       0       0       0
  9922 ;;      Totals:         1       0       0       0       0       0       0
  9923 ;;Total ram usage:        1 bytes
  9924 ;; Hardware stack levels used:    1
  9925 ;; Hardware stack levels required when called:    2
  9926 ;; This function calls:
  9927 ;;		_lcd_wr
  9928 ;; This function is called by:
  9929 ;;		_lcd_str
  9930 ;;		_state_translator_fpga_to_micro
  9931 ;; This function uses a non-reentrant model
  9932 ;;
  9933                           
  9934                           	psect	text36
  9935  006E88                     __ptext36:
  9936                           	callstack 0
  9937  006E88                     _lcd_dat:
  9938                           	callstack 0
  9939  006E88  FFFF               	dw	65535	; assembler added errata NOP
  9940                           
  9941                           ;incstack = 0
  9942                           ;lcd_dat@val stored from wreg
  9943  006E8A  6E02               	movwf	lcd_dat@val^0,c
  9944  006E8C                     
  9945                           ;lcd.c: 21: void lcd_dat(unsigned char val);lcd.c: 22: {;lcd.c: 23:  PORTEbits.RE1=1;
  9946  006E8C  8284               	bsf	132,1,c	;volatile
  9947  006E8E                     
  9948                           ;lcd.c: 24:     lcd_wr(val);
  9949  006E8E  5002               	movf	lcd_dat@val^0,w,c
  9950  006E90  ECDF  F036         	call	_lcd_wr
  9951  006E94                     
  9952                           ;lcd.c: 25:     PORTEbits.RE2=1;
  9953  006E94  8484               	bsf	132,2,c	;volatile
  9954  006E96                     
  9955                           ;lcd.c: 26:     _delay((unsigned long)((1)*(4000000/4000.0)));
  9956  006E96  0EC8               	movlw	200
  9957  006E98                     u6327:
  9958  006E98  FFFF               	dw	65535	; errata NOP
  9959  006E9A  F000               	nop	
  9960  006E9C  2EE8               	decfsz	wreg,f,c
  9961  006E9E  D7FC               	bra	u6327
  9962  006EA0                     
  9963                           ;lcd.c: 27:     PORTEbits.RE1=0;
  9964  006EA0  9284               	bcf	132,1,c	;volatile
  9965  006EA2                     
  9966                           ;lcd.c: 28:     _delay((unsigned long)((1)*(4000000/4000.0)));
  9967  006EA2  0EC8               	movlw	200
  9968  006EA4                     u6337:
  9969  006EA4  FFFF               	dw	65535	; errata NOP
  9970  006EA6  F000               	nop	
  9971  006EA8  2EE8               	decfsz	wreg,f,c
  9972  006EAA  D7FC               	bra	u6337
  9973  006EAC                     
  9974                           ;lcd.c: 29:  PORTEbits.RE1=1;
  9975  006EAC  8284               	bsf	132,1,c	;volatile
  9976  006EAE  0012               	return		;funcret
  9977  006EB0  FFFF               	dw	65535	; errata NOP
  9978  006EB2                     __end_of_lcd_dat:
  9979                           	callstack 0
  9980                           
  9981 ;; *************** function _lcd_init *****************
  9982 ;; Defined at:
  9983 ;;		line 32 in file "lcd.c"
  9984 ;; Parameters:    Size  Location     Type
  9985 ;;		None
  9986 ;; Auto vars:     Size  Location     Type
  9987 ;;		None
  9988 ;; Return value:  Size  Location     Type
  9989 ;;                  1    wreg      void 
  9990 ;; Registers used:
  9991 ;;		wreg, status,2, cstack
  9992 ;; Tracked objects:
  9993 ;;		On entry : 0/0
  9994 ;;		On exit  : 0/0
  9995 ;;		Unchanged: 0/0
  9996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9997 ;;      Params:         0       0       0       0       0       0       0
  9998 ;;      Locals:         0       0       0       0       0       0       0
  9999 ;;      Temps:          1       0       0       0       0       0       0
 10000 ;;      Totals:         1       0       0       0       0       0       0
 10001 ;;Total ram usage:        1 bytes
 10002 ;; Hardware stack levels used:    1
 10003 ;; Hardware stack levels required when called:    3
 10004 ;; This function calls:
 10005 ;;		_lcd_cmd
 10006 ;; This function is called by:
 10007 ;;		_main
 10008 ;; This function uses a non-reentrant model
 10009 ;;
 10010                           
 10011                           	psect	text37
 10012  0073F4                     __ptext37:
 10013                           	callstack 0
 10014  0073F4                     _lcd_init:
 10015                           	callstack 0
 10016  0073F4  FFFF               	dw	65535	; assembler added errata NOP
 10017  0073F6  6A83               	clrf	3971,c	;# 
 10018  0073F8  0E00               	movlw	0	;# 
 10019  0073FA  6E95               	movwf	3989,c	;# 
 10020  0073FC  6A84               	clrf	3972,c	;# 
 10021  0073FE  0E00               	movlw	0	;# 
 10022  007400  6E96               	movwf	3990,c	;# 
 10023                           
 10024                           ;lcd.c: 45:  PORTEbits.RE1=0;
 10025  007402  9284               	bcf	132,1,c	;volatile
 10026                           
 10027                           ;lcd.c: 46:  PORTEbits.RE2=0;
 10028  007404  9484               	bcf	132,2,c	;volatile
 10029  007406                     
 10030                           ;lcd.c: 47:  _delay((unsigned long)((30)*(4000000/4000.0)));
 10031  007406  0E1E               	movlw	30
 10032  007408  6E03               	movwf	??_lcd_init^0,c
 10033  00740A  0E3C               	movlw	60
 10034  00740C                     u6347:
 10035  00740C  FFFF               	dw	65535	; errata NOP
 10036  00740E  2EE8               	decfsz	wreg,f,c
 10037  007410  D7FD               	bra	u6347
 10038  007412  2E03               	decfsz	??_lcd_init^0,f,c
 10039  007414  D7FB               	bra	u6347
 10040  007416  D000               	nop2	
 10041  007418                     
 10042                           ;lcd.c: 48:  PORTEbits.RE1=1;
 10043  007418  8284               	bsf	132,1,c	;volatile
 10044  00741A                     
 10045                           ;lcd.c: 50:  lcd_cmd(0x38);
 10046  00741A  0E38               	movlw	56
 10047  00741C  EC2F  F037         	call	_lcd_cmd
 10048  007420                     
 10049                           ;lcd.c: 51:  _delay((unsigned long)((30)*(4000000/4000.0)));
 10050  007420  0E1E               	movlw	30
 10051  007422  6E03               	movwf	??_lcd_init^0,c
 10052  007424  0E3C               	movlw	60
 10053  007426                     u6357:
 10054  007426  FFFF               	dw	65535	; errata NOP
 10055  007428  2EE8               	decfsz	wreg,f,c
 10056  00742A  D7FD               	bra	u6357
 10057  00742C  2E03               	decfsz	??_lcd_init^0,f,c
 10058  00742E  D7FB               	bra	u6357
 10059  007430  D000               	nop2	
 10060                           
 10061                           ;lcd.c: 52:  lcd_cmd(0x38);
 10062  007432  0E38               	movlw	56
 10063  007434  EC2F  F037         	call	_lcd_cmd
 10064  007438                     
 10065                           ;lcd.c: 53:     _delay((unsigned long)((30)*(4000000/4000.0)));
 10066  007438  0E1E               	movlw	30
 10067  00743A  6E03               	movwf	??_lcd_init^0,c
 10068  00743C  0E3C               	movlw	60
 10069  00743E                     u6367:
 10070  00743E  FFFF               	dw	65535	; errata NOP
 10071  007440  2EE8               	decfsz	wreg,f,c
 10072  007442  D7FD               	bra	u6367
 10073  007444  2E03               	decfsz	??_lcd_init^0,f,c
 10074  007446  D7FB               	bra	u6367
 10075  007448  D000               	nop2	
 10076  00744A                     
 10077                           ;lcd.c: 54:  lcd_cmd(0x38);
 10078  00744A  0E38               	movlw	56
 10079  00744C  EC2F  F037         	call	_lcd_cmd
 10080  007450                     
 10081                           ;lcd.c: 55:  lcd_cmd(0x08);
 10082  007450  0E08               	movlw	8
 10083  007452  EC2F  F037         	call	_lcd_cmd
 10084  007456                     
 10085                           ;lcd.c: 56:  lcd_cmd(0x0F);
 10086  007456  0E0F               	movlw	15
 10087  007458  EC2F  F037         	call	_lcd_cmd
 10088  00745C                     
 10089                           ;lcd.c: 57:  lcd_cmd(0x01);
 10090  00745C  0E01               	movlw	1
 10091  00745E  EC2F  F037         	call	_lcd_cmd
 10092  007462                     
 10093                           ;lcd.c: 58:  lcd_cmd(0x38);
 10094  007462  0E38               	movlw	56
 10095  007464  EC2F  F037         	call	_lcd_cmd
 10096  007468                     
 10097                           ;lcd.c: 59:     lcd_cmd(0x80);
 10098  007468  0E80               	movlw	128
 10099  00746A  EC2F  F037         	call	_lcd_cmd
 10100  00746E  0012               	return		;funcret
 10101  007470  FFFF               	dw	65535	; errata NOP
 10102  007472                     __end_of_lcd_init:
 10103                           	callstack 0
 10104                           
 10105 ;; *************** function _lcd_cmd *****************
 10106 ;; Defined at:
 10107 ;;		line 10 in file "lcd.c"
 10108 ;; Parameters:    Size  Location     Type
 10109 ;;  val             1    wreg     unsigned char 
 10110 ;; Auto vars:     Size  Location     Type
 10111 ;;  val             1    1[COMRAM] unsigned char 
 10112 ;; Return value:  Size  Location     Type
 10113 ;;                  1    wreg      void 
 10114 ;; Registers used:
 10115 ;;		wreg, status,2, cstack
 10116 ;; Tracked objects:
 10117 ;;		On entry : 0/0
 10118 ;;		On exit  : 0/0
 10119 ;;		Unchanged: 0/0
 10120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10121 ;;      Params:         0       0       0       0       0       0       0
 10122 ;;      Locals:         1       0       0       0       0       0       0
 10123 ;;      Temps:          0       0       0       0       0       0       0
 10124 ;;      Totals:         1       0       0       0       0       0       0
 10125 ;;Total ram usage:        1 bytes
 10126 ;; Hardware stack levels used:    1
 10127 ;; Hardware stack levels required when called:    2
 10128 ;; This function calls:
 10129 ;;		_lcd_wr
 10130 ;; This function is called by:
 10131 ;;		_main
 10132 ;;		_lcd_init
 10133 ;; This function uses a non-reentrant model
 10134 ;;
 10135                           
 10136                           	psect	text38
 10137  006E5E                     __ptext38:
 10138                           	callstack 0
 10139  006E5E                     _lcd_cmd:
 10140                           	callstack 0
 10141  006E5E  FFFF               	dw	65535	; assembler added errata NOP
 10142                           
 10143                           ;incstack = 0
 10144                           ;lcd_cmd@val stored from wreg
 10145  006E60  6E02               	movwf	lcd_cmd@val^0,c
 10146  006E62                     
 10147                           ;lcd.c: 10: void lcd_cmd(unsigned char val);lcd.c: 11: {;lcd.c: 12:  PORTEbits.RE1=1;
 10148  006E62  8284               	bsf	132,1,c	;volatile
 10149  006E64                     
 10150                           ;lcd.c: 13:     lcd_wr(val);
 10151  006E64  5002               	movf	lcd_cmd@val^0,w,c
 10152  006E66  ECDF  F036         	call	_lcd_wr
 10153  006E6A                     
 10154                           ;lcd.c: 14:     PORTEbits.RE2=0;
 10155  006E6A  9484               	bcf	132,2,c	;volatile
 10156  006E6C                     
 10157                           ;lcd.c: 15:     _delay((unsigned long)((1)*(4000000/4000.0)));
 10158  006E6C  0EC8               	movlw	200
 10159  006E6E                     u6377:
 10160  006E6E  FFFF               	dw	65535	; errata NOP
 10161  006E70  F000               	nop	
 10162  006E72  2EE8               	decfsz	wreg,f,c
 10163  006E74  D7FC               	bra	u6377
 10164  006E76                     
 10165                           ;lcd.c: 16:     PORTEbits.RE1=0;
 10166  006E76  9284               	bcf	132,1,c	;volatile
 10167  006E78                     
 10168                           ;lcd.c: 17:     _delay((unsigned long)((1)*(4000000/4000.0)));
 10169  006E78  0EC8               	movlw	200
 10170  006E7A                     u6387:
 10171  006E7A  FFFF               	dw	65535	; errata NOP
 10172  006E7C  F000               	nop	
 10173  006E7E  2EE8               	decfsz	wreg,f,c
 10174  006E80  D7FC               	bra	u6387
 10175  006E82                     
 10176                           ;lcd.c: 18:  PORTEbits.RE1=1;
 10177  006E82  8284               	bsf	132,1,c	;volatile
 10178  006E84  0012               	return		;funcret
 10179  006E86  FFFF               	dw	65535	; errata NOP
 10180  006E88                     __end_of_lcd_cmd:
 10181                           	callstack 0
 10182                           
 10183 ;; *************** function _lcd_wr *****************
 10184 ;; Defined at:
 10185 ;;		line 5 in file "lcd.c"
 10186 ;; Parameters:    Size  Location     Type
 10187 ;;  val             1    wreg     unsigned char 
 10188 ;; Auto vars:     Size  Location     Type
 10189 ;;  val             1    0[COMRAM] unsigned char 
 10190 ;; Return value:  Size  Location     Type
 10191 ;;                  1    wreg      void 
 10192 ;; Registers used:
 10193 ;;		wreg
 10194 ;; Tracked objects:
 10195 ;;		On entry : 0/0
 10196 ;;		On exit  : 0/0
 10197 ;;		Unchanged: 0/0
 10198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10199 ;;      Params:         0       0       0       0       0       0       0
 10200 ;;      Locals:         1       0       0       0       0       0       0
 10201 ;;      Temps:          0       0       0       0       0       0       0
 10202 ;;      Totals:         1       0       0       0       0       0       0
 10203 ;;Total ram usage:        1 bytes
 10204 ;; Hardware stack levels used:    1
 10205 ;; Hardware stack levels required when called:    1
 10206 ;; This function calls:
 10207 ;;		Nothing
 10208 ;; This function is called by:
 10209 ;;		_lcd_cmd
 10210 ;;		_lcd_dat
 10211 ;; This function uses a non-reentrant model
 10212 ;;
 10213                           
 10214                           	psect	text39
 10215  006DBE                     __ptext39:
 10216                           	callstack 0
 10217  006DBE                     _lcd_wr:
 10218                           	callstack 0
 10219  006DBE  FFFF               	dw	65535	; assembler added errata NOP
 10220                           
 10221                           ;incstack = 0
 10222                           ;lcd_wr@val stored from wreg
 10223  006DC0  6E01               	movwf	lcd_wr@val^0,c
 10224  006DC2                     
 10225                           ;lcd.c: 5: void lcd_wr(unsigned char val);lcd.c: 6: {;lcd.c: 7:     PORTD=val;
 10226  006DC2  C001  FF83         	movff	lcd_wr@val,3971	;volatile
 10227  006DC6  0012               	return		;funcret
 10228  006DC8  FFFF               	dw	65535	; errata NOP
 10229  006DCA                     __end_of_lcd_wr:
 10230                           	callstack 0
 10231                           
 10232 ;; *************** function _init_timer_2 *****************
 10233 ;; Defined at:
 10234 ;;		line 27 in file "timer.c"
 10235 ;; Parameters:    Size  Location     Type
 10236 ;;		None
 10237 ;; Auto vars:     Size  Location     Type
 10238 ;;		None
 10239 ;; Return value:  Size  Location     Type
 10240 ;;                  1    wreg      void 
 10241 ;; Registers used:
 10242 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10243 ;; Tracked objects:
 10244 ;;		On entry : 0/0
 10245 ;;		On exit  : 0/0
 10246 ;;		Unchanged: 0/0
 10247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10248 ;;      Params:         0       0       0       0       0       0       0
 10249 ;;      Locals:         4       0       0       0       0       0       0
 10250 ;;      Temps:          0       0       0       0       0       0       0
 10251 ;;      Totals:         4       0       0       0       0       0       0
 10252 ;;Total ram usage:        4 bytes
 10253 ;; Hardware stack levels used:    1
 10254 ;; Hardware stack levels required when called:    2
 10255 ;; This function calls:
 10256 ;;		___fladd
 10257 ;;		___fldiv
 10258 ;;		___flmul
 10259 ;;		___fltol
 10260 ;; This function is called by:
 10261 ;;		_main
 10262 ;; This function uses a non-reentrant model
 10263 ;;
 10264                           
 10265                           	psect	text40
 10266  00770E                     __ptext40:
 10267                           	callstack 0
 10268  00770E                     _init_timer_2:
 10269                           	callstack 0
 10270  00770E  FFFF               	dw	65535	; assembler added errata NOP
 10271  007710                     
 10272                           ;timer.c: 29:     T2CON = 0;
 10273  007710  0E00               	movlw	0
 10274  007712  6ECA               	movwf	202,c	;volatile
 10275                           
 10276                           ;timer.c: 30:     TMR2 = 0;
 10277  007714  0E00               	movlw	0
 10278  007716  6ECC               	movwf	204,c	;volatile
 10279  007718                     
 10280                           ;timer.c: 32:     T2CONbits.TMR2ON = 1;
 10281  007718  84CA               	bsf	202,2,c	;volatile
 10282  00771A                     
 10283                           ;timer.c: 33:     T2CONbits.T2CKPS0 = 1;
 10284  00771A  80CA               	bsf	202,0,c	;volatile
 10285  00771C                     
 10286                           ;timer.c: 34:     T2CONbits.T2CKPS1 = 1;
 10287  00771C  82CA               	bsf	202,1,c	;volatile
 10288  00771E                     
 10289                           ;timer.c: 36:     PR2 = (uint8_t) (((pwm_period / (4*t_osc*tmr2_prescaler)) - 1)*4);
 10290  00771E  0E00               	movlw	0
 10291  007720  6E37               	movwf	___fladd@a^0,c
 10292  007722  0E00               	movlw	0
 10293  007724  6E38               	movwf	(___fladd@a+1)^0,c
 10294  007726  0E80               	movlw	128
 10295  007728  6E39               	movwf	(___fladd@a+2)^0,c
 10296  00772A  0EBF               	movlw	191
 10297  00772C  6E3A               	movwf	(___fladd@a+3)^0,c
 10298  00772E  0EBD               	movlw	189
 10299  007730  6E05               	movwf	___flmul@a^0,c
 10300  007732  0E37               	movlw	55
 10301  007734  6E06               	movwf	(___flmul@a+1)^0,c
 10302  007736  0E86               	movlw	134
 10303  007738  6E07               	movwf	(___flmul@a+2)^0,c
 10304  00773A  0E36               	movlw	54
 10305  00773C  6E08               	movwf	(___flmul@a+3)^0,c
 10306  00773E  C0D3  F001         	movff	_tmr2_prescaler,___flmul@b
 10307  007742  C0D4  F002         	movff	_tmr2_prescaler+1,___flmul@b+1
 10308  007746  C0D5  F003         	movff	_tmr2_prescaler+2,___flmul@b+2
 10309  00774A  C0D6  F004         	movff	_tmr2_prescaler+3,___flmul@b+3
 10310  00774E  EC05  F00D         	call	___flmul	;wreg free
 10311  007752  C001  F01E         	movff	?___flmul,___fldiv@a
 10312  007756  C002  F01F         	movff	?___flmul+1,___fldiv@a+1
 10313  00775A  C003  F020         	movff	?___flmul+2,___fldiv@a+2
 10314  00775E  C004  F021         	movff	?___flmul+3,___fldiv@a+3
 10315  007762  0E0A               	movlw	10
 10316  007764  6E1A               	movwf	___fldiv@b^0,c
 10317  007766  0ED7               	movlw	215
 10318  007768  6E1B               	movwf	(___fldiv@b+1)^0,c
 10319  00776A  0EA3               	movlw	163
 10320  00776C  6E1C               	movwf	(___fldiv@b+2)^0,c
 10321  00776E  0E3C               	movlw	60
 10322  007770  6E1D               	movwf	(___fldiv@b+3)^0,c
 10323  007772  EC57  F00F         	call	___fldiv	;wreg free
 10324  007776  C01A  F033         	movff	?___fldiv,___fladd@b
 10325  00777A  C01B  F034         	movff	?___fldiv+1,___fladd@b+1
 10326  00777E  C01C  F035         	movff	?___fldiv+2,___fladd@b+2
 10327  007782  C01D  F036         	movff	?___fldiv+3,___fladd@b+3
 10328  007786  EC31  F00A         	call	___fladd	;wreg free
 10329  00778A  C033  F06F         	movff	?___fladd,_init_timer_2$1948
 10330  00778E  C034  F070         	movff	?___fladd+1,_init_timer_2$1948+1
 10331  007792  C035  F071         	movff	?___fladd+2,_init_timer_2$1948+2
 10332  007796  C036  F072         	movff	?___fladd+3,_init_timer_2$1948+3
 10333  00779A                     
 10334                           ;timer.c: 36:     PR2 = (uint8_t) (((pwm_period / (4*t_osc*tmr2_prescaler)) - 1)*4);
 10335  00779A  0E00               	movlw	0
 10336  00779C  6E05               	movwf	___flmul@a^0,c
 10337  00779E  0E00               	movlw	0
 10338  0077A0  6E06               	movwf	(___flmul@a+1)^0,c
 10339  0077A2  0E80               	movlw	128
 10340  0077A4  6E07               	movwf	(___flmul@a+2)^0,c
 10341  0077A6  0E40               	movlw	64
 10342  0077A8  6E08               	movwf	(___flmul@a+3)^0,c
 10343  0077AA  C06F  F001         	movff	_init_timer_2$1948,___flmul@b
 10344  0077AE  C070  F002         	movff	_init_timer_2$1948+1,___flmul@b+1
 10345  0077B2  C071  F003         	movff	_init_timer_2$1948+2,___flmul@b+2
 10346  0077B6  C072  F004         	movff	_init_timer_2$1948+3,___flmul@b+3
 10347  0077BA  EC05  F00D         	call	___flmul	;wreg free
 10348  0077BE  C001  F065         	movff	?___flmul,___fltol@f1
 10349  0077C2  C002  F066         	movff	?___flmul+1,___fltol@f1+1
 10350  0077C6  C003  F067         	movff	?___flmul+2,___fltol@f1+2
 10351  0077CA  C004  F068         	movff	?___flmul+3,___fltol@f1+3
 10352  0077CE  ECA3  F01E         	call	___fltol	;wreg free
 10353  0077D2  5065               	movf	?___fltol^0,w,c
 10354  0077D4  6ECB               	movwf	203,c	;volatile
 10355  0077D6  0012               	return		;funcret
 10356  0077D8  FFFF               	dw	65535	; errata NOP
 10357  0077DA                     __end_of_init_timer_2:
 10358                           	callstack 0
 10359                           
 10360 ;; *************** function _init_timer_0 *****************
 10361 ;; Defined at:
 10362 ;;		line 11 in file "timer.c"
 10363 ;; Parameters:    Size  Location     Type
 10364 ;;		None
 10365 ;; Auto vars:     Size  Location     Type
 10366 ;;		None
 10367 ;; Return value:  Size  Location     Type
 10368 ;;                  1    wreg      void 
 10369 ;; Registers used:
 10370 ;;		wreg, status,2
 10371 ;; Tracked objects:
 10372 ;;		On entry : 0/0
 10373 ;;		On exit  : 0/0
 10374 ;;		Unchanged: 0/0
 10375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10376 ;;      Params:         0       0       0       0       0       0       0
 10377 ;;      Locals:         0       0       0       0       0       0       0
 10378 ;;      Temps:          0       0       0       0       0       0       0
 10379 ;;      Totals:         0       0       0       0       0       0       0
 10380 ;;Total ram usage:        0 bytes
 10381 ;; Hardware stack levels used:    1
 10382 ;; Hardware stack levels required when called:    1
 10383 ;; This function calls:
 10384 ;;		Nothing
 10385 ;; This function is called by:
 10386 ;;		_main
 10387 ;; This function uses a non-reentrant model
 10388 ;;
 10389                           
 10390                           	psect	text41
 10391  006E3C                     __ptext41:
 10392                           	callstack 0
 10393  006E3C                     _init_timer_0:
 10394                           	callstack 0
 10395  006E3C  FFFF               	dw	65535	; assembler added errata NOP
 10396  006E3E                     
 10397                           ;timer.c: 13:     T0CON = 0;
 10398  006E3E  0E00               	movlw	0
 10399  006E40  6ED5               	movwf	213,c	;volatile
 10400                           
 10401                           ;timer.c: 15:     TMR0L = 0x96;
 10402  006E42  0E96               	movlw	150
 10403  006E44  6ED6               	movwf	214,c	;volatile
 10404                           
 10405                           ;timer.c: 16:     TMR0H = 0x98;
 10406  006E46  0E98               	movlw	152
 10407  006E48  6ED7               	movwf	215,c	;volatile
 10408  006E4A                     
 10409                           ;timer.c: 17:     INTCONbits.TMR0IE = 1;
 10410  006E4A  8AF2               	bsf	242,5,c	;volatile
 10411  006E4C                     
 10412                           ;timer.c: 18:     T0CONbits.T08BIT = 0;
 10413  006E4C  9CD5               	bcf	213,6,c	;volatile
 10414  006E4E                     
 10415                           ;timer.c: 19:     T0CONbits.T0CS = 0;
 10416  006E4E  9AD5               	bcf	213,5,c	;volatile
 10417  006E50                     
 10418                           ;timer.c: 20:     T0CONbits.PSA = 0;
 10419  006E50  96D5               	bcf	213,3,c	;volatile
 10420  006E52                     
 10421                           ;timer.c: 21:     T0CONbits.T0PS0 = 1;
 10422  006E52  80D5               	bsf	213,0,c	;volatile
 10423  006E54                     
 10424                           ;timer.c: 22:     T0CONbits.T0PS1 = 1;
 10425  006E54  82D5               	bsf	213,1,c	;volatile
 10426  006E56                     
 10427                           ;timer.c: 23:     T0CONbits.T0PS2 = 1;
 10428  006E56  84D5               	bsf	213,2,c	;volatile
 10429  006E58                     
 10430                           ;timer.c: 24:     T0CONbits.TMR0ON = 1;
 10431  006E58  8ED5               	bsf	213,7,c	;volatile
 10432  006E5A  0012               	return		;funcret
 10433  006E5C  FFFF               	dw	65535	; errata NOP
 10434  006E5E                     __end_of_init_timer_0:
 10435                           	callstack 0
 10436                           
 10437 ;; *************** function _init_interrupts *****************
 10438 ;; Defined at:
 10439 ;;		line 81 in file "init_PIC.c"
 10440 ;; Parameters:    Size  Location     Type
 10441 ;;		None
 10442 ;; Auto vars:     Size  Location     Type
 10443 ;;		None
 10444 ;; Return value:  Size  Location     Type
 10445 ;;                  1    wreg      void 
 10446 ;; Registers used:
 10447 ;;		None
 10448 ;; Tracked objects:
 10449 ;;		On entry : 0/0
 10450 ;;		On exit  : 0/0
 10451 ;;		Unchanged: 0/0
 10452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10453 ;;      Params:         0       0       0       0       0       0       0
 10454 ;;      Locals:         0       0       0       0       0       0       0
 10455 ;;      Temps:          0       0       0       0       0       0       0
 10456 ;;      Totals:         0       0       0       0       0       0       0
 10457 ;;Total ram usage:        0 bytes
 10458 ;; Hardware stack levels used:    1
 10459 ;; Hardware stack levels required when called:    1
 10460 ;; This function calls:
 10461 ;;		Nothing
 10462 ;; This function is called by:
 10463 ;;		_main
 10464 ;; This function uses a non-reentrant model
 10465 ;;
 10466                           
 10467                           	psect	text42
 10468  006DB2                     __ptext42:
 10469                           	callstack 0
 10470  006DB2                     _init_interrupts:
 10471                           	callstack 0
 10472  006DB2  FFFF               	dw	65535	; assembler added errata NOP
 10473  006DB4                     
 10474                           ;init_PIC.c: 83:     PIR1bits.RCIF = 0;
 10475  006DB4  9A9E               	bcf	158,5,c	;volatile
 10476                           
 10477                           ;init_PIC.c: 84:     PIE1bits.RCIE = 1;
 10478  006DB6  8A9D               	bsf	157,5,c	;volatile
 10479                           
 10480                           ;init_PIC.c: 85:     INTCONbits.PEIE = 1;
 10481  006DB8  8CF2               	bsf	242,6,c	;volatile
 10482  006DBA  0012               	return		;funcret
 10483  006DBC  FFFF               	dw	65535	; errata NOP
 10484  006DBE                     __end_of_init_interrupts:
 10485                           	callstack 0
 10486                           
 10487 ;; *************** function _init_ccp1 *****************
 10488 ;; Defined at:
 10489 ;;		line 41 in file "timer.c"
 10490 ;; Parameters:    Size  Location     Type
 10491 ;;		None
 10492 ;; Auto vars:     Size  Location     Type
 10493 ;;		None
 10494 ;; Return value:  Size  Location     Type
 10495 ;;                  1    wreg      void 
 10496 ;; Registers used:
 10497 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10498 ;; Tracked objects:
 10499 ;;		On entry : 0/0
 10500 ;;		On exit  : 0/0
 10501 ;;		Unchanged: 0/0
 10502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10503 ;;      Params:         0       0       0       0       0       0       0
 10504 ;;      Locals:         0       0       0       0       0       0       0
 10505 ;;      Temps:          0       0       0       0       0       0       0
 10506 ;;      Totals:         0       0       0       0       0       0       0
 10507 ;;Total ram usage:        0 bytes
 10508 ;; Hardware stack levels used:    1
 10509 ;; Hardware stack levels required when called:    3
 10510 ;; This function calls:
 10511 ;;		_update_pwm_duty_ccp1
 10512 ;; This function is called by:
 10513 ;;		_main
 10514 ;; This function uses a non-reentrant model
 10515 ;;
 10516                           
 10517                           	psect	text43
 10518  006E1A                     __ptext43:
 10519                           	callstack 0
 10520  006E1A                     _init_ccp1:
 10521                           	callstack 0
 10522  006E1A  FFFF               	dw	65535	; assembler added errata NOP
 10523  006E1C                     
 10524                           ;timer.c: 42:     CCP1CON = 0x00;
 10525  006E1C  0E00               	movlw	0
 10526  006E1E  6EBD               	movwf	189,c	;volatile
 10527  006E20                     
 10528                           ;timer.c: 45:     update_pwm_duty_ccp1(5e-3);
 10529  006E20  0E0A               	movlw	10
 10530  006E22  6E6F               	movwf	update_pwm_duty_ccp1@time_up^0,c
 10531  006E24  0ED7               	movlw	215
 10532  006E26  6E70               	movwf	(update_pwm_duty_ccp1@time_up+1)^0,c
 10533  006E28  0EA3               	movlw	163
 10534  006E2A  6E71               	movwf	(update_pwm_duty_ccp1@time_up+2)^0,c
 10535  006E2C  0E3B               	movlw	59
 10536  006E2E  6E72               	movwf	(update_pwm_duty_ccp1@time_up+3)^0,c
 10537  006E30  EC26  F03B         	call	_update_pwm_duty_ccp1	;wreg free
 10538  006E34                     
 10539                           ;timer.c: 48:     CCP1CONbits.CCP1M3 = 1;
 10540  006E34  86BD               	bsf	189,3,c	;volatile
 10541  006E36                     
 10542                           ;timer.c: 49:     CCP1CONbits.CCP1M2 = 1;
 10543  006E36  84BD               	bsf	189,2,c	;volatile
 10544  006E38  0012               	return		;funcret
 10545  006E3A  FFFF               	dw	65535	; errata NOP
 10546  006E3C                     __end_of_init_ccp1:
 10547                           	callstack 0
 10548                           
 10549 ;; *************** function _update_pwm_duty_ccp1 *****************
 10550 ;; Defined at:
 10551 ;;		line 53 in file "timer.c"
 10552 ;; Parameters:    Size  Location     Type
 10553 ;;  time_up         4  110[COMRAM] void 
 10554 ;; Auto vars:     Size  Location     Type
 10555 ;;  new_duty        2  116[COMRAM] unsigned short 
 10556 ;;  lsbs_duty       1  118[COMRAM] unsigned char 
 10557 ;; Return value:  Size  Location     Type
 10558 ;;                  1    wreg      void 
 10559 ;; Registers used:
 10560 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10561 ;; Tracked objects:
 10562 ;;		On entry : 0/0
 10563 ;;		On exit  : 0/0
 10564 ;;		Unchanged: 0/0
 10565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10566 ;;      Params:         4       0       0       0       0       0       0
 10567 ;;      Locals:         3       0       0       0       0       0       0
 10568 ;;      Temps:          2       0       0       0       0       0       0
 10569 ;;      Totals:         9       0       0       0       0       0       0
 10570 ;;Total ram usage:        9 bytes
 10571 ;; Hardware stack levels used:    1
 10572 ;; Hardware stack levels required when called:    2
 10573 ;; This function calls:
 10574 ;;		___fldiv
 10575 ;;		___flmul
 10576 ;;		___fltol
 10577 ;; This function is called by:
 10578 ;;		_init_ccp1
 10579 ;; This function uses a non-reentrant model
 10580 ;;
 10581                           
 10582                           	psect	text44
 10583  00764C                     __ptext44:
 10584                           	callstack 0
 10585  00764C                     _update_pwm_duty_ccp1:
 10586                           	callstack 0
 10587  00764C  FFFF               	dw	65535	; assembler added errata NOP
 10588  00764E                     
 10589                           ;timer.c: 56:     uint16_t new_duty;;timer.c: 57:     uint8_t lsbs_duty;;timer.c: 59:   
      +                            new_duty = (0.001) / (t_osc * tmr2_prescaler);
 10590  00764E  0EBD               	movlw	189
 10591  007650  6E05               	movwf	___flmul@a^0,c
 10592  007652  0E37               	movlw	55
 10593  007654  6E06               	movwf	(___flmul@a+1)^0,c
 10594  007656  0E86               	movlw	134
 10595  007658  6E07               	movwf	(___flmul@a+2)^0,c
 10596  00765A  0E35               	movlw	53
 10597  00765C  6E08               	movwf	(___flmul@a+3)^0,c
 10598  00765E  C0D3  F001         	movff	_tmr2_prescaler,___flmul@b
 10599  007662  C0D4  F002         	movff	_tmr2_prescaler+1,___flmul@b+1
 10600  007666  C0D5  F003         	movff	_tmr2_prescaler+2,___flmul@b+2
 10601  00766A  C0D6  F004         	movff	_tmr2_prescaler+3,___flmul@b+3
 10602  00766E  EC05  F00D         	call	___flmul	;wreg free
 10603  007672  C001  F01E         	movff	?___flmul,___fldiv@a
 10604  007676  C002  F01F         	movff	?___flmul+1,___fldiv@a+1
 10605  00767A  C003  F020         	movff	?___flmul+2,___fldiv@a+2
 10606  00767E  C004  F021         	movff	?___flmul+3,___fldiv@a+3
 10607  007682  0E6F               	movlw	111
 10608  007684  6E1A               	movwf	___fldiv@b^0,c
 10609  007686  0E12               	movlw	18
 10610  007688  6E1B               	movwf	(___fldiv@b+1)^0,c
 10611  00768A  0E83               	movlw	131
 10612  00768C  6E1C               	movwf	(___fldiv@b+2)^0,c
 10613  00768E  0E3A               	movlw	58
 10614  007690  6E1D               	movwf	(___fldiv@b+3)^0,c
 10615  007692  EC57  F00F         	call	___fldiv	;wreg free
 10616  007696  C01A  F065         	movff	?___fldiv,___fltol@f1
 10617  00769A  C01B  F066         	movff	?___fldiv+1,___fltol@f1+1
 10618  00769E  C01C  F067         	movff	?___fldiv+2,___fltol@f1+2
 10619  0076A2  C01D  F068         	movff	?___fldiv+3,___fltol@f1+3
 10620  0076A6  ECA3  F01E         	call	___fltol	;wreg free
 10621  0076AA  C065  F075         	movff	?___fltol,update_pwm_duty_ccp1@new_duty
 10622  0076AE  C066  F076         	movff	?___fltol+1,update_pwm_duty_ccp1@new_duty+1
 10623  0076B2                     
 10624                           ;timer.c: 60:     lsbs_duty = (uint8_t) new_duty;
 10625  0076B2  C075  F077         	movff	update_pwm_duty_ccp1@new_duty,update_pwm_duty_ccp1@lsbs_duty
 10626  0076B6                     
 10627                           ;timer.c: 64:     if (lsbs_duty & 0x01) CCP1CON |= (1u << 4);
 10628  0076B6  A077               	btfss	update_pwm_duty_ccp1@lsbs_duty^0,0,c
 10629  0076B8  EF60  F03B         	goto	u5861
 10630  0076BC  EF63  F03B         	goto	u5860
 10631  0076C0                     u5861:
 10632  0076C0  FFFF               	dw	65535	; assembler added errata NOP
 10633  0076C2  EF67  F03B         	goto	l4857
 10634  0076C6                     u5860:
 10635  0076C6  FFFF               	dw	65535	; assembler added errata NOP
 10636  0076C8  88BD               	bsf	189,4,c	;volatile
 10637  0076CA  EF69  F03B         	goto	l4859
 10638  0076CE                     l4857:
 10639  0076CE  FFFF               	dw	65535	; assembler added errata NOP
 10640  0076D0  98BD               	bcf	189,4,c	;volatile
 10641  0076D2                     l4859:
 10642  0076D2  FFFF               	dw	65535	; assembler added errata NOP
 10643                           
 10644                           ;timer.c: 67:     if (lsbs_duty & 0x02) CCP1CON |= (1u << 5);
 10645  0076D4  A277               	btfss	update_pwm_duty_ccp1@lsbs_duty^0,1,c
 10646  0076D6  EF6F  F03B         	goto	u5871
 10647  0076DA  EF72  F03B         	goto	u5870
 10648  0076DE                     u5871:
 10649  0076DE  FFFF               	dw	65535	; assembler added errata NOP
 10650  0076E0  EF76  F03B         	goto	l4863
 10651  0076E4                     u5870:
 10652  0076E4  FFFF               	dw	65535	; assembler added errata NOP
 10653  0076E6  8ABD               	bsf	189,5,c	;volatile
 10654  0076E8  EF78  F03B         	goto	l4865
 10655  0076EC                     l4863:
 10656  0076EC  FFFF               	dw	65535	; assembler added errata NOP
 10657  0076EE  9ABD               	bcf	189,5,c	;volatile
 10658  0076F0                     l4865:
 10659  0076F0  FFFF               	dw	65535	; assembler added errata NOP
 10660                           
 10661                           ;timer.c: 71:     CCPR1L = (uint8_t) (new_duty >> 2);
 10662  0076F2  C075  F073         	movff	update_pwm_duty_ccp1@new_duty,??_update_pwm_duty_ccp1
 10663  0076F6  C076  F074         	movff	update_pwm_duty_ccp1@new_duty+1,??_update_pwm_duty_ccp1+1
 10664  0076FA  90D8               	bcf	status,0,c
 10665  0076FC  3274               	rrcf	(??_update_pwm_duty_ccp1+1)^0,f,c
 10666  0076FE  3273               	rrcf	??_update_pwm_duty_ccp1^0,f,c
 10667  007700  90D8               	bcf	status,0,c
 10668  007702  3274               	rrcf	(??_update_pwm_duty_ccp1+1)^0,f,c
 10669  007704  3273               	rrcf	??_update_pwm_duty_ccp1^0,f,c
 10670  007706  5073               	movf	??_update_pwm_duty_ccp1^0,w,c
 10671  007708  6EBE               	movwf	190,c	;volatile
 10672  00770A  0012               	return		;funcret
 10673  00770C  FFFF               	dw	65535	; errata NOP
 10674  00770E                     __end_of_update_pwm_duty_ccp1:
 10675                           	callstack 0
 10676                           
 10677 ;; *************** function ___fldiv *****************
 10678 ;; Defined at:
 10679 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
 10680 ;; Parameters:    Size  Location     Type
 10681 ;;  b               4   25[COMRAM] void 
 10682 ;;  a               4   29[COMRAM] void 
 10683 ;; Auto vars:     Size  Location     Type
 10684 ;;  grs             4   44[COMRAM] unsigned long 
 10685 ;;  rem             4   37[COMRAM] unsigned long 
 10686 ;;  new_exp         2   42[COMRAM] short 
 10687 ;;  aexp            1   49[COMRAM] unsigned char 
 10688 ;;  bexp            1   48[COMRAM] unsigned char 
 10689 ;;  sign            1   41[COMRAM] unsigned char 
 10690 ;; Return value:  Size  Location     Type
 10691 ;;                  4   25[COMRAM] unsigned char 
 10692 ;; Registers used:
 10693 ;;		wreg, status,2, status,0
 10694 ;; Tracked objects:
 10695 ;;		On entry : 0/0
 10696 ;;		On exit  : 0/0
 10697 ;;		Unchanged: 0/0
 10698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10699 ;;      Params:         8       0       0       0       0       0       0
 10700 ;;      Locals:        13       0       0       0       0       0       0
 10701 ;;      Temps:          4       0       0       0       0       0       0
 10702 ;;      Totals:        25       0       0       0       0       0       0
 10703 ;;Total ram usage:       25 bytes
 10704 ;; Hardware stack levels used:    1
 10705 ;; Hardware stack levels required when called:    1
 10706 ;; This function calls:
 10707 ;;		Nothing
 10708 ;; This function is called by:
 10709 ;;		_init_timer_2
 10710 ;;		_update_pwm_duty_ccp1
 10711 ;; This function uses a non-reentrant model
 10712 ;;
 10713                           
 10714                           	psect	text45
 10715  001EAE                     __ptext45:
 10716                           	callstack 0
 10717  001EAE                     ___fldiv:
 10718                           	callstack 0
 10719  001EAE  FFFF               	dw	65535	; assembler added errata NOP
 10720  001EB0  501D               	movf	(___fldiv@b+3)^0,w,c
 10721  001EB2  0B80               	andlw	128
 10722  001EB4  6E2A               	movwf	___fldiv@sign^0,c
 10723  001EB6  501D               	movf	(___fldiv@b+3)^0,w,c
 10724  001EB8  241D               	addwf	(___fldiv@b+3)^0,w,c
 10725  001EBA  6E31               	movwf	___fldiv@bexp^0,c
 10726  001EBC  AE1C               	btfss	(___fldiv@b+2)^0,7,c
 10727  001EBE  EF63  F00F         	goto	u5211
 10728  001EC2  EF66  F00F         	goto	u5210
 10729  001EC6                     u5211:
 10730  001EC6  FFFF               	dw	65535	; assembler added errata NOP
 10731  001EC8  EF68  F00F         	goto	l4437
 10732  001ECC                     u5210:
 10733  001ECC  FFFF               	dw	65535	; assembler added errata NOP
 10734  001ECE  8031               	bsf	___fldiv@bexp^0,0,c
 10735  001ED0                     l4437:
 10736  001ED0  FFFF               	dw	65535	; assembler added errata NOP
 10737  001ED2  5031               	movf	___fldiv@bexp^0,w,c
 10738  001ED4  B4D8               	btfsc	status,2,c
 10739  001ED6  EF6F  F00F         	goto	u5221
 10740  001EDA  EF72  F00F         	goto	u5220
 10741  001EDE                     u5221:
 10742  001EDE  FFFF               	dw	65535	; assembler added errata NOP
 10743  001EE0  EF8B  F00F         	goto	l4447
 10744  001EE4                     u5220:
 10745  001EE4  FFFF               	dw	65535	; assembler added errata NOP
 10746  001EE6  2831               	incf	___fldiv@bexp^0,w,c
 10747  001EE8  A4D8               	btfss	status,2,c
 10748  001EEA  EF79  F00F         	goto	u5231
 10749  001EEE  EF7C  F00F         	goto	u5230
 10750  001EF2                     u5231:
 10751  001EF2  FFFF               	dw	65535	; assembler added errata NOP
 10752  001EF4  EF85  F00F         	goto	l4443
 10753  001EF8                     u5230:
 10754  001EF8  FFFF               	dw	65535	; assembler added errata NOP
 10755  001EFA  0E00               	movlw	0
 10756  001EFC  6E1A               	movwf	___fldiv@b^0,c
 10757  001EFE  0E00               	movlw	0
 10758  001F00  6E1B               	movwf	(___fldiv@b+1)^0,c
 10759  001F02  0E00               	movlw	0
 10760  001F04  6E1C               	movwf	(___fldiv@b+2)^0,c
 10761  001F06  0E00               	movlw	0
 10762  001F08  6E1D               	movwf	(___fldiv@b+3)^0,c
 10763  001F0A                     l4443:
 10764  001F0A  FFFF               	dw	65535	; assembler added errata NOP
 10765  001F0C  8E1C               	bsf	(___fldiv@b+2)^0,7,c
 10766  001F0E  0E00               	movlw	0
 10767  001F10  6E1D               	movwf	(___fldiv@b+3)^0,c
 10768  001F12  EF94  F00F         	goto	l4449
 10769  001F16                     l4447:
 10770  001F16  FFFF               	dw	65535	; assembler added errata NOP
 10771  001F18  0E00               	movlw	0
 10772  001F1A  6E1A               	movwf	___fldiv@b^0,c
 10773  001F1C  0E00               	movlw	0
 10774  001F1E  6E1B               	movwf	(___fldiv@b+1)^0,c
 10775  001F20  0E00               	movlw	0
 10776  001F22  6E1C               	movwf	(___fldiv@b+2)^0,c
 10777  001F24  0E00               	movlw	0
 10778  001F26  6E1D               	movwf	(___fldiv@b+3)^0,c
 10779  001F28                     l4449:
 10780  001F28  FFFF               	dw	65535	; assembler added errata NOP
 10781  001F2A  5021               	movf	(___fldiv@a+3)^0,w,c
 10782  001F2C  0B80               	andlw	128
 10783  001F2E  1A2A               	xorwf	___fldiv@sign^0,f,c
 10784  001F30  5021               	movf	(___fldiv@a+3)^0,w,c
 10785  001F32  2421               	addwf	(___fldiv@a+3)^0,w,c
 10786  001F34  6E32               	movwf	___fldiv@aexp^0,c
 10787  001F36  AE20               	btfss	(___fldiv@a+2)^0,7,c
 10788  001F38  EFA0  F00F         	goto	u5241
 10789  001F3C  EFA3  F00F         	goto	u5240
 10790  001F40                     u5241:
 10791  001F40  FFFF               	dw	65535	; assembler added errata NOP
 10792  001F42  EFA5  F00F         	goto	l4457
 10793  001F46                     u5240:
 10794  001F46  FFFF               	dw	65535	; assembler added errata NOP
 10795  001F48  8032               	bsf	___fldiv@aexp^0,0,c
 10796  001F4A                     l4457:
 10797  001F4A  FFFF               	dw	65535	; assembler added errata NOP
 10798  001F4C  5032               	movf	___fldiv@aexp^0,w,c
 10799  001F4E  B4D8               	btfsc	status,2,c
 10800  001F50  EFAC  F00F         	goto	u5251
 10801  001F54  EFAF  F00F         	goto	u5250
 10802  001F58                     u5251:
 10803  001F58  FFFF               	dw	65535	; assembler added errata NOP
 10804  001F5A  EFC8  F00F         	goto	l4467
 10805  001F5E                     u5250:
 10806  001F5E  FFFF               	dw	65535	; assembler added errata NOP
 10807  001F60  2832               	incf	___fldiv@aexp^0,w,c
 10808  001F62  A4D8               	btfss	status,2,c
 10809  001F64  EFB6  F00F         	goto	u5261
 10810  001F68  EFB9  F00F         	goto	u5260
 10811  001F6C                     u5261:
 10812  001F6C  FFFF               	dw	65535	; assembler added errata NOP
 10813  001F6E  EFC2  F00F         	goto	l4463
 10814  001F72                     u5260:
 10815  001F72  FFFF               	dw	65535	; assembler added errata NOP
 10816  001F74  0E00               	movlw	0
 10817  001F76  6E1E               	movwf	___fldiv@a^0,c
 10818  001F78  0E00               	movlw	0
 10819  001F7A  6E1F               	movwf	(___fldiv@a+1)^0,c
 10820  001F7C  0E00               	movlw	0
 10821  001F7E  6E20               	movwf	(___fldiv@a+2)^0,c
 10822  001F80  0E00               	movlw	0
 10823  001F82  6E21               	movwf	(___fldiv@a+3)^0,c
 10824  001F84                     l4463:
 10825  001F84  FFFF               	dw	65535	; assembler added errata NOP
 10826  001F86  8E20               	bsf	(___fldiv@a+2)^0,7,c
 10827  001F88  0E00               	movlw	0
 10828  001F8A  6E21               	movwf	(___fldiv@a+3)^0,c
 10829  001F8C  EFD1  F00F         	goto	l4469
 10830  001F90                     l4467:
 10831  001F90  FFFF               	dw	65535	; assembler added errata NOP
 10832  001F92  0E00               	movlw	0
 10833  001F94  6E1E               	movwf	___fldiv@a^0,c
 10834  001F96  0E00               	movlw	0
 10835  001F98  6E1F               	movwf	(___fldiv@a+1)^0,c
 10836  001F9A  0E00               	movlw	0
 10837  001F9C  6E20               	movwf	(___fldiv@a+2)^0,c
 10838  001F9E  0E00               	movlw	0
 10839  001FA0  6E21               	movwf	(___fldiv@a+3)^0,c
 10840  001FA2                     l4469:
 10841  001FA2  FFFF               	dw	65535	; assembler added errata NOP
 10842  001FA4  501E               	movf	___fldiv@a^0,w,c
 10843  001FA6  101F               	iorwf	(___fldiv@a+1)^0,w,c
 10844  001FA8  1020               	iorwf	(___fldiv@a+2)^0,w,c
 10845  001FAA  1021               	iorwf	(___fldiv@a+3)^0,w,c
 10846  001FAC  A4D8               	btfss	status,2,c
 10847  001FAE  EFDB  F00F         	goto	u5271
 10848  001FB2  EFDE  F00F         	goto	u5270
 10849  001FB6                     u5271:
 10850  001FB6  FFFF               	dw	65535	; assembler added errata NOP
 10851  001FB8  EFF8  F00F         	goto	l4481
 10852  001FBC                     u5270:
 10853  001FBC  FFFF               	dw	65535	; assembler added errata NOP
 10854  001FBE  0E00               	movlw	0
 10855  001FC0  6E1A               	movwf	___fldiv@b^0,c
 10856  001FC2  0E00               	movlw	0
 10857  001FC4  6E1B               	movwf	(___fldiv@b+1)^0,c
 10858  001FC6  0E00               	movlw	0
 10859  001FC8  6E1C               	movwf	(___fldiv@b+2)^0,c
 10860  001FCA  0E00               	movlw	0
 10861  001FCC  6E1D               	movwf	(___fldiv@b+3)^0,c
 10862  001FCE  0E80               	movlw	128
 10863  001FD0  121C               	iorwf	(___fldiv@b+2)^0,f,c
 10864  001FD2  0E7F               	movlw	127
 10865  001FD4  121D               	iorwf	(___fldiv@b+3)^0,f,c
 10866  001FD6                     l4475:
 10867  001FD6  FFFF               	dw	65535	; assembler added errata NOP
 10868  001FD8  502A               	movf	___fldiv@sign^0,w,c
 10869  001FDA  121D               	iorwf	(___fldiv@b+3)^0,f,c
 10870  001FDC  C01A  F01A         	movff	___fldiv@b,?___fldiv
 10871  001FE0  C01B  F01B         	movff	___fldiv@b+1,?___fldiv+1
 10872  001FE4  C01C  F01C         	movff	___fldiv@b+2,?___fldiv+2
 10873  001FE8  C01D  F01D         	movff	___fldiv@b+3,?___fldiv+3
 10874  001FEC  EF6D  F011         	goto	l881
 10875  001FF0                     l4481:
 10876  001FF0  FFFF               	dw	65535	; assembler added errata NOP
 10877  001FF2  5031               	movf	___fldiv@bexp^0,w,c
 10878  001FF4  A4D8               	btfss	status,2,c
 10879  001FF6  EFFF  F00F         	goto	u5281
 10880  001FFA  EF02  F010         	goto	u5280
 10881  001FFE                     u5281:
 10882  001FFE  FFFF               	dw	65535	; assembler added errata NOP
 10883  002000  EF0D  F010         	goto	l4489
 10884  002004                     u5280:
 10885  002004  FFFF               	dw	65535	; assembler added errata NOP
 10886  002006  0E00               	movlw	0
 10887  002008  6E1A               	movwf	?___fldiv^0,c
 10888  00200A  0E00               	movlw	0
 10889  00200C  6E1B               	movwf	(?___fldiv+1)^0,c
 10890  00200E  0E00               	movlw	0
 10891  002010  6E1C               	movwf	(?___fldiv+2)^0,c
 10892  002012  0E00               	movlw	0
 10893  002014  6E1D               	movwf	(?___fldiv+3)^0,c
 10894  002016  EF6D  F011         	goto	l881
 10895  00201A                     l4489:
 10896  00201A  FFFF               	dw	65535	; assembler added errata NOP
 10897  00201C  5032               	movf	___fldiv@aexp^0,w,c
 10898  00201E  C031  F022         	movff	___fldiv@bexp,??___fldiv
 10899  002022  6A23               	clrf	(??___fldiv+1)^0,c
 10900  002024  5E22               	subwf	??___fldiv^0,f,c
 10901  002026  0E00               	movlw	0
 10902  002028  5A23               	subwfb	(??___fldiv+1)^0,f,c
 10903  00202A  0E7F               	movlw	127
 10904  00202C  2422               	addwf	??___fldiv^0,w,c
 10905  00202E  6E2B               	movwf	___fldiv@new_exp^0,c
 10906  002030  0E00               	movlw	0
 10907  002032  2023               	addwfc	(??___fldiv+1)^0,w,c
 10908  002034  6E2C               	movwf	(___fldiv@new_exp+1)^0,c
 10909  002036  C01A  F026         	movff	___fldiv@b,___fldiv@rem
 10910  00203A  C01B  F027         	movff	___fldiv@b+1,___fldiv@rem+1
 10911  00203E  C01C  F028         	movff	___fldiv@b+2,___fldiv@rem+2
 10912  002042  C01D  F029         	movff	___fldiv@b+3,___fldiv@rem+3
 10913  002046  0E00               	movlw	0
 10914  002048  6E1A               	movwf	___fldiv@b^0,c
 10915  00204A  0E00               	movlw	0
 10916  00204C  6E1B               	movwf	(___fldiv@b+1)^0,c
 10917  00204E  0E00               	movlw	0
 10918  002050  6E1C               	movwf	(___fldiv@b+2)^0,c
 10919  002052  0E00               	movlw	0
 10920  002054  6E1D               	movwf	(___fldiv@b+3)^0,c
 10921  002056  0E00               	movlw	0
 10922  002058  6E2D               	movwf	___fldiv@grs^0,c
 10923  00205A  0E00               	movlw	0
 10924  00205C  6E2E               	movwf	(___fldiv@grs+1)^0,c
 10925  00205E  0E00               	movlw	0
 10926  002060  6E2F               	movwf	(___fldiv@grs+2)^0,c
 10927  002062  0E00               	movlw	0
 10928  002064  6E30               	movwf	(___fldiv@grs+3)^0,c
 10929  002066  0E00               	movlw	0
 10930  002068  6E32               	movwf	___fldiv@aexp^0,c
 10931  00206A  EF79  F010         	goto	l883
 10932  00206E                     l4499:
 10933  00206E  FFFF               	dw	65535	; assembler added errata NOP
 10934  002070  5032               	movf	___fldiv@aexp^0,w,c
 10935  002072  B4D8               	btfsc	status,2,c
 10936  002074  EF3E  F010         	goto	u5291
 10937  002078  EF41  F010         	goto	u5290
 10938  00207C                     u5291:
 10939  00207C  FFFF               	dw	65535	; assembler added errata NOP
 10940  00207E  EF5C  F010         	goto	l4507
 10941  002082                     u5290:
 10942  002082  FFFF               	dw	65535	; assembler added errata NOP
 10943  002084  90D8               	bcf	status,0,c
 10944  002086  3626               	rlcf	___fldiv@rem^0,f,c
 10945  002088  3627               	rlcf	(___fldiv@rem+1)^0,f,c
 10946  00208A  3628               	rlcf	(___fldiv@rem+2)^0,f,c
 10947  00208C  3629               	rlcf	(___fldiv@rem+3)^0,f,c
 10948  00208E  90D8               	bcf	status,0,c
 10949  002090  361A               	rlcf	___fldiv@b^0,f,c
 10950  002092  361B               	rlcf	(___fldiv@b+1)^0,f,c
 10951  002094  361C               	rlcf	(___fldiv@b+2)^0,f,c
 10952  002096  361D               	rlcf	(___fldiv@b+3)^0,f,c
 10953  002098  AE30               	btfss	(___fldiv@grs+3)^0,7,c
 10954  00209A  EF51  F010         	goto	u5301
 10955  00209E  EF54  F010         	goto	u5300
 10956  0020A2                     u5301:
 10957  0020A2  FFFF               	dw	65535	; assembler added errata NOP
 10958  0020A4  EF56  F010         	goto	l886
 10959  0020A8                     u5300:
 10960  0020A8  FFFF               	dw	65535	; assembler added errata NOP
 10961  0020AA  801A               	bsf	___fldiv@b^0,0,c
 10962  0020AC                     l886:
 10963  0020AC  FFFF               	dw	65535	; assembler added errata NOP
 10964  0020AE  90D8               	bcf	status,0,c
 10965  0020B0  362D               	rlcf	___fldiv@grs^0,f,c
 10966  0020B2  362E               	rlcf	(___fldiv@grs+1)^0,f,c
 10967  0020B4  362F               	rlcf	(___fldiv@grs+2)^0,f,c
 10968  0020B6  3630               	rlcf	(___fldiv@grs+3)^0,f,c
 10969  0020B8                     l4507:
 10970  0020B8  FFFF               	dw	65535	; assembler added errata NOP
 10971  0020BA  501E               	movf	___fldiv@a^0,w,c
 10972  0020BC  5C26               	subwf	___fldiv@rem^0,w,c
 10973  0020BE  501F               	movf	(___fldiv@a+1)^0,w,c
 10974  0020C0  5827               	subwfb	(___fldiv@rem+1)^0,w,c
 10975  0020C2  5020               	movf	(___fldiv@a+2)^0,w,c
 10976  0020C4  5828               	subwfb	(___fldiv@rem+2)^0,w,c
 10977  0020C6  5021               	movf	(___fldiv@a+3)^0,w,c
 10978  0020C8  5829               	subwfb	(___fldiv@rem+3)^0,w,c
 10979  0020CA  A0D8               	btfss	status,0,c
 10980  0020CC  EF6A  F010         	goto	u5311
 10981  0020D0  EF6D  F010         	goto	u5310
 10982  0020D4                     u5311:
 10983  0020D4  FFFF               	dw	65535	; assembler added errata NOP
 10984  0020D6  EF77  F010         	goto	l4513
 10985  0020DA                     u5310:
 10986  0020DA  FFFF               	dw	65535	; assembler added errata NOP
 10987  0020DC  8C30               	bsf	(___fldiv@grs+3)^0,6,c
 10988  0020DE  501E               	movf	___fldiv@a^0,w,c
 10989  0020E0  5E26               	subwf	___fldiv@rem^0,f,c
 10990  0020E2  501F               	movf	(___fldiv@a+1)^0,w,c
 10991  0020E4  5A27               	subwfb	(___fldiv@rem+1)^0,f,c
 10992  0020E6  5020               	movf	(___fldiv@a+2)^0,w,c
 10993  0020E8  5A28               	subwfb	(___fldiv@rem+2)^0,f,c
 10994  0020EA  5021               	movf	(___fldiv@a+3)^0,w,c
 10995  0020EC  5A29               	subwfb	(___fldiv@rem+3)^0,f,c
 10996  0020EE                     l4513:
 10997  0020EE  FFFF               	dw	65535	; assembler added errata NOP
 10998  0020F0  2A32               	incf	___fldiv@aexp^0,f,c
 10999  0020F2                     l883:
 11000  0020F2  FFFF               	dw	65535	; assembler added errata NOP
 11001  0020F4  0E19               	movlw	25
 11002  0020F6  6432               	cpfsgt	___fldiv@aexp^0,c
 11003  0020F8  EF80  F010         	goto	u5321
 11004  0020FC  EF83  F010         	goto	u5320
 11005  002100                     u5321:
 11006  002100  FFFF               	dw	65535	; assembler added errata NOP
 11007  002102  EF37  F010         	goto	l4499
 11008  002106                     u5320:
 11009  002106  FFFF               	dw	65535	; assembler added errata NOP
 11010  002108  5026               	movf	___fldiv@rem^0,w,c
 11011  00210A  1027               	iorwf	(___fldiv@rem+1)^0,w,c
 11012  00210C  1028               	iorwf	(___fldiv@rem+2)^0,w,c
 11013  00210E  1029               	iorwf	(___fldiv@rem+3)^0,w,c
 11014  002110  B4D8               	btfsc	status,2,c
 11015  002112  EF8D  F010         	goto	u5331
 11016  002116  EF90  F010         	goto	u5330
 11017  00211A                     u5331:
 11018  00211A  FFFF               	dw	65535	; assembler added errata NOP
 11019  00211C  EFAD  F010         	goto	l4525
 11020  002120                     u5330:
 11021  002120  FFFF               	dw	65535	; assembler added errata NOP
 11022  002122  802D               	bsf	___fldiv@grs^0,0,c
 11023  002124  EFAD  F010         	goto	l4525
 11024  002128                     l4519:
 11025  002128  FFFF               	dw	65535	; assembler added errata NOP
 11026  00212A  90D8               	bcf	status,0,c
 11027  00212C  361A               	rlcf	___fldiv@b^0,f,c
 11028  00212E  361B               	rlcf	(___fldiv@b+1)^0,f,c
 11029  002130  361C               	rlcf	(___fldiv@b+2)^0,f,c
 11030  002132  361D               	rlcf	(___fldiv@b+3)^0,f,c
 11031  002134  AE30               	btfss	(___fldiv@grs+3)^0,7,c
 11032  002136  EF9F  F010         	goto	u5341
 11033  00213A  EFA2  F010         	goto	u5340
 11034  00213E                     u5341:
 11035  00213E  FFFF               	dw	65535	; assembler added errata NOP
 11036  002140  EFA4  F010         	goto	l892
 11037  002144                     u5340:
 11038  002144  FFFF               	dw	65535	; assembler added errata NOP
 11039  002146  801A               	bsf	___fldiv@b^0,0,c
 11040  002148                     l892:
 11041  002148  FFFF               	dw	65535	; assembler added errata NOP
 11042  00214A  90D8               	bcf	status,0,c
 11043  00214C  362D               	rlcf	___fldiv@grs^0,f,c
 11044  00214E  362E               	rlcf	(___fldiv@grs+1)^0,f,c
 11045  002150  362F               	rlcf	(___fldiv@grs+2)^0,f,c
 11046  002152  3630               	rlcf	(___fldiv@grs+3)^0,f,c
 11047  002154  062B               	decf	___fldiv@new_exp^0,f,c
 11048  002156  A0D8               	btfss	status,0,c
 11049  002158  062C               	decf	(___fldiv@new_exp+1)^0,f,c
 11050  00215A                     l4525:
 11051  00215A  FFFF               	dw	65535	; assembler added errata NOP
 11052  00215C  AE1C               	btfss	(___fldiv@b+2)^0,7,c
 11053  00215E  EFB3  F010         	goto	u5351
 11054  002162  EFB6  F010         	goto	u5350
 11055  002166                     u5351:
 11056  002166  FFFF               	dw	65535	; assembler added errata NOP
 11057  002168  EF94  F010         	goto	l4519
 11058  00216C                     u5350:
 11059  00216C  FFFF               	dw	65535	; assembler added errata NOP
 11060  00216E  0E00               	movlw	0
 11061  002170  6E32               	movwf	___fldiv@aexp^0,c
 11062  002172  AE30               	btfss	(___fldiv@grs+3)^0,7,c
 11063  002174  EFBE  F010         	goto	u5361
 11064  002178  EFC1  F010         	goto	u5360
 11065  00217C                     u5361:
 11066  00217C  FFFF               	dw	65535	; assembler added errata NOP
 11067  00217E  EFEC  F010         	goto	l894
 11068  002182                     u5360:
 11069  002182  FFFF               	dw	65535	; assembler added errata NOP
 11070  002184  0EFF               	movlw	255
 11071  002186  142D               	andwf	___fldiv@grs^0,w,c
 11072  002188  6E22               	movwf	??___fldiv^0,c
 11073  00218A  0EFF               	movlw	255
 11074  00218C  142E               	andwf	(___fldiv@grs+1)^0,w,c
 11075  00218E  6E23               	movwf	(??___fldiv+1)^0,c
 11076  002190  0EFF               	movlw	255
 11077  002192  142F               	andwf	(___fldiv@grs+2)^0,w,c
 11078  002194  6E24               	movwf	(??___fldiv+2)^0,c
 11079  002196  0E7F               	movlw	127
 11080  002198  1430               	andwf	(___fldiv@grs+3)^0,w,c
 11081  00219A  6E25               	movwf	(??___fldiv+3)^0,c
 11082  00219C  5022               	movf	??___fldiv^0,w,c
 11083  00219E  1023               	iorwf	(??___fldiv+1)^0,w,c
 11084  0021A0  1024               	iorwf	(??___fldiv+2)^0,w,c
 11085  0021A2  1025               	iorwf	(??___fldiv+3)^0,w,c
 11086  0021A4  B4D8               	btfsc	status,2,c
 11087  0021A6  EFD7  F010         	goto	u5371
 11088  0021AA  EFDA  F010         	goto	u5370
 11089  0021AE                     u5371:
 11090  0021AE  FFFF               	dw	65535	; assembler added errata NOP
 11091  0021B0  EFE0  F010         	goto	l895
 11092  0021B4                     u5370:
 11093  0021B4  FFFF               	dw	65535	; assembler added errata NOP
 11094  0021B6                     l4533:
 11095  0021B6  FFFF               	dw	65535	; assembler added errata NOP
 11096  0021B8  0E01               	movlw	1
 11097  0021BA  6E32               	movwf	___fldiv@aexp^0,c
 11098  0021BC  EFEC  F010         	goto	l894
 11099  0021C0                     l895:
 11100  0021C0  FFFF               	dw	65535	; assembler added errata NOP
 11101  0021C2  A01A               	btfss	___fldiv@b^0,0,c
 11102  0021C4  EFE6  F010         	goto	u5381
 11103  0021C8  EFE9  F010         	goto	u5380
 11104  0021CC                     u5381:
 11105  0021CC  FFFF               	dw	65535	; assembler added errata NOP
 11106  0021CE  EFEC  F010         	goto	l894
 11107  0021D2                     u5380:
 11108  0021D2  FFFF               	dw	65535	; assembler added errata NOP
 11109  0021D4  EFDB  F010         	goto	l4533
 11110  0021D8                     l894:
 11111  0021D8  FFFF               	dw	65535	; assembler added errata NOP
 11112  0021DA  5032               	movf	___fldiv@aexp^0,w,c
 11113  0021DC  B4D8               	btfsc	status,2,c
 11114  0021DE  EFF3  F010         	goto	u5391
 11115  0021E2  EFF6  F010         	goto	u5390
 11116  0021E6                     u5391:
 11117  0021E6  FFFF               	dw	65535	; assembler added errata NOP
 11118  0021E8  EF1D  F011         	goto	l4545
 11119  0021EC                     u5390:
 11120  0021EC  FFFF               	dw	65535	; assembler added errata NOP
 11121  0021EE  0E01               	movlw	1
 11122  0021F0  261A               	addwf	___fldiv@b^0,f,c
 11123  0021F2  0E00               	movlw	0
 11124  0021F4  221B               	addwfc	(___fldiv@b+1)^0,f,c
 11125  0021F6  221C               	addwfc	(___fldiv@b+2)^0,f,c
 11126  0021F8  221D               	addwfc	(___fldiv@b+3)^0,f,c
 11127  0021FA  A01D               	btfss	(___fldiv@b+3)^0,0,c
 11128  0021FC  EF02  F011         	goto	u5401
 11129  002200  EF05  F011         	goto	u5400
 11130  002204                     u5401:
 11131  002204  FFFF               	dw	65535	; assembler added errata NOP
 11132  002206  EF1D  F011         	goto	l4545
 11133  00220A                     u5400:
 11134  00220A  FFFF               	dw	65535	; assembler added errata NOP
 11135  00220C  C01A  F022         	movff	___fldiv@b,??___fldiv
 11136  002210  C01B  F023         	movff	___fldiv@b+1,??___fldiv+1
 11137  002214  C01C  F024         	movff	___fldiv@b+2,??___fldiv+2
 11138  002218  C01D  F025         	movff	___fldiv@b+3,??___fldiv+3
 11139  00221C  3425               	rlcf	(??___fldiv+3)^0,w,c
 11140  00221E  3225               	rrcf	(??___fldiv+3)^0,f,c
 11141  002220  3224               	rrcf	(??___fldiv+2)^0,f,c
 11142  002222  3223               	rrcf	(??___fldiv+1)^0,f,c
 11143  002224  3222               	rrcf	??___fldiv^0,f,c
 11144  002226  C022  F01A         	movff	??___fldiv,___fldiv@b
 11145  00222A  C023  F01B         	movff	??___fldiv+1,___fldiv@b+1
 11146  00222E  C024  F01C         	movff	??___fldiv+2,___fldiv@b+2
 11147  002232  C025  F01D         	movff	??___fldiv+3,___fldiv@b+3
 11148  002236  4A2B               	infsnz	___fldiv@new_exp^0,f,c
 11149  002238  2A2C               	incf	(___fldiv@new_exp+1)^0,f,c
 11150  00223A                     l4545:
 11151  00223A  FFFF               	dw	65535	; assembler added errata NOP
 11152  00223C  BE2C               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11153  00223E  EF29  F011         	goto	u5411
 11154  002242  502C               	movf	(___fldiv@new_exp+1)^0,w,c
 11155  002244  E109               	bnz	u5410
 11156  002246  282B               	incf	___fldiv@new_exp^0,w,c
 11157  002248  A0D8               	btfss	status,0,c
 11158  00224A  EF29  F011         	goto	u5411
 11159  00224E  EF2C  F011         	goto	u5410
 11160  002252                     u5411:
 11161  002252  FFFF               	dw	65535	; assembler added errata NOP
 11162  002254  EF38  F011         	goto	l4549
 11163  002258                     u5410:
 11164  002258  FFFF               	dw	65535	; assembler added errata NOP
 11165  00225A  0E00               	movlw	0
 11166  00225C  6E2C               	movwf	(___fldiv@new_exp+1)^0,c
 11167  00225E  682B               	setf	___fldiv@new_exp^0,c
 11168  002260  0E00               	movlw	0
 11169  002262  6E1A               	movwf	___fldiv@b^0,c
 11170  002264  0E00               	movlw	0
 11171  002266  6E1B               	movwf	(___fldiv@b+1)^0,c
 11172  002268  0E00               	movlw	0
 11173  00226A  6E1C               	movwf	(___fldiv@b+2)^0,c
 11174  00226C  0E00               	movlw	0
 11175  00226E  6E1D               	movwf	(___fldiv@b+3)^0,c
 11176  002270                     l4549:
 11177  002270  FFFF               	dw	65535	; assembler added errata NOP
 11178  002272  BE2C               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11179  002274  EF47  F011         	goto	u5420
 11180  002278  502C               	movf	(___fldiv@new_exp+1)^0,w,c
 11181  00227A  E106               	bnz	u5421
 11182  00227C  042B               	decf	___fldiv@new_exp^0,w,c
 11183  00227E  B0D8               	btfsc	status,0,c
 11184  002280  EF44  F011         	goto	u5421
 11185  002284  EF47  F011         	goto	u5420
 11186  002288                     u5421:
 11187  002288  FFFF               	dw	65535	; assembler added errata NOP
 11188  00228A  EF56  F011         	goto	l4553
 11189  00228E                     u5420:
 11190  00228E  FFFF               	dw	65535	; assembler added errata NOP
 11191  002290  0E00               	movlw	0
 11192  002292  6E2C               	movwf	(___fldiv@new_exp+1)^0,c
 11193  002294  0E00               	movlw	0
 11194  002296  6E2B               	movwf	___fldiv@new_exp^0,c
 11195  002298  0E00               	movlw	0
 11196  00229A  6E1A               	movwf	___fldiv@b^0,c
 11197  00229C  0E00               	movlw	0
 11198  00229E  6E1B               	movwf	(___fldiv@b+1)^0,c
 11199  0022A0  0E00               	movlw	0
 11200  0022A2  6E1C               	movwf	(___fldiv@b+2)^0,c
 11201  0022A4  0E00               	movlw	0
 11202  0022A6  6E1D               	movwf	(___fldiv@b+3)^0,c
 11203  0022A8  0E00               	movlw	0
 11204  0022AA  6E2A               	movwf	___fldiv@sign^0,c
 11205  0022AC                     l4553:
 11206  0022AC  FFFF               	dw	65535	; assembler added errata NOP
 11207  0022AE  C02B  F031         	movff	___fldiv@new_exp,___fldiv@bexp
 11208  0022B2  A031               	btfss	___fldiv@bexp^0,0,c
 11209  0022B4  EF5E  F011         	goto	u5431
 11210  0022B8  EF61  F011         	goto	u5430
 11211  0022BC                     u5431:
 11212  0022BC  FFFF               	dw	65535	; assembler added errata NOP
 11213  0022BE  EF65  F011         	goto	l4559
 11214  0022C2                     u5430:
 11215  0022C2  FFFF               	dw	65535	; assembler added errata NOP
 11216  0022C4  8E1C               	bsf	(___fldiv@b+2)^0,7,c
 11217  0022C6  EF67  F011         	goto	l4561
 11218  0022CA                     l4559:
 11219  0022CA  FFFF               	dw	65535	; assembler added errata NOP
 11220  0022CC  9E1C               	bcf	(___fldiv@b+2)^0,7,c
 11221  0022CE                     l4561:
 11222  0022CE  FFFF               	dw	65535	; assembler added errata NOP
 11223  0022D0  90D8               	bcf	status,0,c
 11224  0022D2  3031               	rrcf	___fldiv@bexp^0,w,c
 11225  0022D4  6E1D               	movwf	(___fldiv@b+3)^0,c
 11226  0022D6  EFEB  F00F         	goto	l4475
 11227  0022DA                     l881:
 11228  0022DA  FFFF               	dw	65535	; assembler added errata NOP
 11229  0022DC  0012               	return		;funcret
 11230  0022DE  FFFF               	dw	65535	; errata NOP
 11231  0022E0                     __end_of___fldiv:
 11232                           	callstack 0
 11233                           
 11234 ;; *************** function _init_USART *****************
 11235 ;; Defined at:
 11236 ;;		line 13 in file "serial_rs232.c"
 11237 ;; Parameters:    Size  Location     Type
 11238 ;;		None
 11239 ;; Auto vars:     Size  Location     Type
 11240 ;;		None
 11241 ;; Return value:  Size  Location     Type
 11242 ;;                  1    wreg      void 
 11243 ;; Registers used:
 11244 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11245 ;; Tracked objects:
 11246 ;;		On entry : 0/0
 11247 ;;		On exit  : 0/0
 11248 ;;		Unchanged: 0/0
 11249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11250 ;;      Params:         0       0       0       0       0       0       0
 11251 ;;      Locals:         0       0       0       0       0       0       0
 11252 ;;      Temps:          0       0       0       0       0       0       0
 11253 ;;      Totals:         0       0       0       0       0       0       0
 11254 ;;Total ram usage:        0 bytes
 11255 ;; Hardware stack levels used:    1
 11256 ;; Hardware stack levels required when called:    4
 11257 ;; This function calls:
 11258 ;;		___fltol
 11259 ;;		_roundf
 11260 ;; This function is called by:
 11261 ;;		_main
 11262 ;; This function uses a non-reentrant model
 11263 ;;
 11264                           
 11265                           	psect	text46
 11266  006F74                     __ptext46:
 11267                           	callstack 0
 11268  006F74                     _init_USART:
 11269                           	callstack 0
 11270  006F74  FFFF               	dw	65535	; assembler added errata NOP
 11271  006F76                     
 11272                           ;serial_rs232.c: 24:     SPBRG = roundf(((fosc / desired_baudrate) / 16) - 1);
 11273  006F76  0E55               	movlw	85
 11274  006F78  6E4B               	movwf	roundf@x^0,c
 11275  006F7A  0E55               	movlw	85
 11276  006F7C  6E4C               	movwf	(roundf@x+1)^0,c
 11277  006F7E  0EC8               	movlw	200
 11278  006F80  6E4D               	movwf	(roundf@x+2)^0,c
 11279  006F82  0E41               	movlw	65
 11280  006F84  6E4E               	movwf	(roundf@x+3)^0,c
 11281  006F86  EC70  F011         	call	_roundf	;wreg free
 11282  006F8A  C04B  F065         	movff	?_roundf,___fltol@f1
 11283  006F8E  C04C  F066         	movff	?_roundf+1,___fltol@f1+1
 11284  006F92  C04D  F067         	movff	?_roundf+2,___fltol@f1+2
 11285  006F96  C04E  F068         	movff	?_roundf+3,___fltol@f1+3
 11286  006F9A  ECA3  F01E         	call	___fltol	;wreg free
 11287  006F9E  5065               	movf	?___fltol^0,w,c
 11288  006FA0  6EAF               	movwf	175,c	;volatile
 11289  006FA2                     
 11290                           ;serial_rs232.c: 28:     TXSTAbits.TX9 = 0;
 11291  006FA2  9CAC               	bcf	172,6,c	;volatile
 11292  006FA4                     
 11293                           ;serial_rs232.c: 29:     TXSTAbits.TXEN = 1;
 11294  006FA4  8AAC               	bsf	172,5,c	;volatile
 11295  006FA6                     
 11296                           ;serial_rs232.c: 30:     TXSTAbits.SYNC =0;
 11297  006FA6  98AC               	bcf	172,4,c	;volatile
 11298  006FA8                     
 11299                           ;serial_rs232.c: 31:     TXSTAbits.BRGH = 1;
 11300  006FA8  84AC               	bsf	172,2,c	;volatile
 11301  006FAA                     
 11302                           ;serial_rs232.c: 33:     RCSTAbits.SPEN = 1;
 11303  006FAA  8EAB               	bsf	171,7,c	;volatile
 11304  006FAC                     
 11305                           ;serial_rs232.c: 34:     RCSTAbits.RX9 = 0;
 11306  006FAC  9CAB               	bcf	171,6,c	;volatile
 11307  006FAE                     
 11308                           ;serial_rs232.c: 35:     RCSTAbits.CREN = 1;
 11309  006FAE  88AB               	bsf	171,4,c	;volatile
 11310  006FB0  0012               	return		;funcret
 11311  006FB2  FFFF               	dw	65535	; errata NOP
 11312  006FB4                     __end_of_init_USART:
 11313                           	callstack 0
 11314                           
 11315 ;; *************** function _roundf *****************
 11316 ;; Defined at:
 11317 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\roundf.c"
 11318 ;; Parameters:    Size  Location     Type
 11319 ;;  x               4   74[COMRAM] float 
 11320 ;; Auto vars:     Size  Location     Type
 11321 ;;  y               4   96[COMRAM] float 
 11322 ;;  u               4   92[COMRAM] struct .
 11323 ;;  e               2   86[COMRAM] int 
 11324 ;; Return value:  Size  Location     Type
 11325 ;;                  4   74[COMRAM] float 
 11326 ;; Registers used:
 11327 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11328 ;; Tracked objects:
 11329 ;;		On entry : 0/0
 11330 ;;		On exit  : 0/0
 11331 ;;		Unchanged: 0/0
 11332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11333 ;;      Params:         4       0       0       0       0       0       0
 11334 ;;      Locals:        18       0       0       0       0       0       0
 11335 ;;      Temps:          4       0       0       0       0       0       0
 11336 ;;      Totals:        26       0       0       0       0       0       0
 11337 ;;Total ram usage:       26 bytes
 11338 ;; Hardware stack levels used:    1
 11339 ;; Hardware stack levels required when called:    3
 11340 ;; This function calls:
 11341 ;;		___fladd
 11342 ;;		___flge
 11343 ;;		___flmul
 11344 ;;		___flneg
 11345 ;;		___flsub
 11346 ;; This function is called by:
 11347 ;;		_init_USART
 11348 ;; This function uses a non-reentrant model
 11349 ;;
 11350                           
 11351                           	psect	text47
 11352  0022E0                     __ptext47:
 11353                           	callstack 0
 11354  0022E0                     _roundf:
 11355                           	callstack 0
 11356  0022E0  FFFF               	dw	65535	; assembler added errata NOP
 11357  0022E2  C080  F05D         	movff	roundf@F525,roundf@u
 11358  0022E6  C081  F05E         	movff	roundf@F525+1,roundf@u+1
 11359  0022EA  C082  F05F         	movff	roundf@F525+2,roundf@u+2
 11360  0022EE  C083  F060         	movff	roundf@F525+3,roundf@u+3
 11361  0022F2  C04B  F05D         	movff	roundf@x,roundf@u
 11362  0022F6  C04C  F05E         	movff	roundf@x+1,roundf@u+1
 11363  0022FA  C04D  F05F         	movff	roundf@x+2,roundf@u+2
 11364  0022FE  C04E  F060         	movff	roundf@x+3,roundf@u+3
 11365  002302  C05D  F04F         	movff	roundf@u,??_roundf
 11366  002306  C05E  F050         	movff	roundf@u+1,??_roundf+1
 11367  00230A  C05F  F051         	movff	roundf@u+2,??_roundf+2
 11368  00230E  C060  F052         	movff	roundf@u+3,??_roundf+3
 11369  002312  0E18               	movlw	24
 11370  002314  EF92  F011         	goto	u5770
 11371  002318                     u5775:
 11372  002318  FFFF               	dw	65535	; assembler added errata NOP
 11373  00231A  90D8               	bcf	status,0,c
 11374  00231C  3252               	rrcf	(??_roundf+3)^0,f,c
 11375  00231E  3251               	rrcf	(??_roundf+2)^0,f,c
 11376  002320  3250               	rrcf	(??_roundf+1)^0,f,c
 11377  002322  324F               	rrcf	??_roundf^0,f,c
 11378  002324                     u5770:
 11379  002324  FFFF               	dw	65535	; assembler added errata NOP
 11380  002326  2EE8               	decfsz	wreg,f,c
 11381  002328  EF8C  F011         	goto	u5775
 11382  00232C  504F               	movf	??_roundf^0,w,c
 11383  00232E  6E57               	movwf	roundf@e^0,c
 11384  002330  6A58               	clrf	(roundf@e+1)^0,c
 11385  002332  BE58               	btfsc	(roundf@e+1)^0,7,c
 11386  002334  EFA5  F011         	goto	u5781
 11387  002338  5058               	movf	(roundf@e+1)^0,w,c
 11388  00233A  E10A               	bnz	u5780
 11389  00233C  0E96               	movlw	150
 11390  00233E  5C57               	subwf	roundf@e^0,w,c
 11391  002340  A0D8               	btfss	status,0,c
 11392  002342  EFA5  F011         	goto	u5781
 11393  002346  EFA8  F011         	goto	u5780
 11394  00234A                     u5781:
 11395  00234A  FFFF               	dw	65535	; assembler added errata NOP
 11396  00234C  EFB3  F011         	goto	l4793
 11397  002350                     u5780:
 11398  002350  FFFF               	dw	65535	; assembler added errata NOP
 11399  002352  C04B  F04B         	movff	roundf@x,?_roundf
 11400  002356  C04C  F04C         	movff	roundf@x+1,?_roundf+1
 11401  00235A  C04D  F04D         	movff	roundf@x+2,?_roundf+2
 11402  00235E  C04E  F04E         	movff	roundf@x+3,?_roundf+3
 11403  002362  EF60  F013         	goto	l978
 11404  002366                     l4793:
 11405  002366  FFFF               	dw	65535	; assembler added errata NOP
 11406  002368  C05D  F04F         	movff	roundf@u,??_roundf
 11407  00236C  C05E  F050         	movff	roundf@u+1,??_roundf+1
 11408  002370  C05F  F051         	movff	roundf@u+2,??_roundf+2
 11409  002374  C060  F052         	movff	roundf@u+3,??_roundf+3
 11410  002378  0E20               	movlw	32
 11411  00237A  EFC5  F011         	goto	u5790
 11412  00237E                     u5795:
 11413  00237E  FFFF               	dw	65535	; assembler added errata NOP
 11414  002380  90D8               	bcf	status,0,c
 11415  002382  3252               	rrcf	(??_roundf+3)^0,f,c
 11416  002384  3251               	rrcf	(??_roundf+2)^0,f,c
 11417  002386  3250               	rrcf	(??_roundf+1)^0,f,c
 11418  002388  324F               	rrcf	??_roundf^0,f,c
 11419  00238A                     u5790:
 11420  00238A  FFFF               	dw	65535	; assembler added errata NOP
 11421  00238C  2EE8               	decfsz	wreg,f,c
 11422  00238E  EFBF  F011         	goto	u5795
 11423  002392  504F               	movf	??_roundf^0,w,c
 11424  002394  1050               	iorwf	(??_roundf+1)^0,w,c
 11425  002396  1051               	iorwf	(??_roundf+2)^0,w,c
 11426  002398  1052               	iorwf	(??_roundf+3)^0,w,c
 11427  00239A  B4D8               	btfsc	status,2,c
 11428  00239C  EFD2  F011         	goto	u5801
 11429  0023A0  EFD5  F011         	goto	u5800
 11430  0023A4                     u5801:
 11431  0023A4  FFFF               	dw	65535	; assembler added errata NOP
 11432  0023A6  EFE8  F011         	goto	l4797
 11433  0023AA                     u5800:
 11434  0023AA  FFFF               	dw	65535	; assembler added errata NOP
 11435  0023AC  C04B  F001         	movff	roundf@x,___flneg@f1
 11436  0023B0  C04C  F002         	movff	roundf@x+1,___flneg@f1+1
 11437  0023B4  C04D  F003         	movff	roundf@x+2,___flneg@f1+2
 11438  0023B8  C04E  F004         	movff	roundf@x+3,___flneg@f1+3
 11439  0023BC  ECDA  F037         	call	___flneg	;wreg free
 11440  0023C0  C001  F04B         	movff	?___flneg,roundf@x
 11441  0023C4  C002  F04C         	movff	?___flneg+1,roundf@x+1
 11442  0023C8  C003  F04D         	movff	?___flneg+2,roundf@x+2
 11443  0023CC  C004  F04E         	movff	?___flneg+3,roundf@x+3
 11444  0023D0                     l4797:
 11445  0023D0  FFFF               	dw	65535	; assembler added errata NOP
 11446  0023D2  BE58               	btfsc	(roundf@e+1)^0,7,c
 11447  0023D4  EFF8  F011         	goto	u5810
 11448  0023D8  5058               	movf	(roundf@e+1)^0,w,c
 11449  0023DA  E107               	bnz	u5811
 11450  0023DC  0E7E               	movlw	126
 11451  0023DE  5C57               	subwf	roundf@e^0,w,c
 11452  0023E0  B0D8               	btfsc	status,0,c
 11453  0023E2  EFF5  F011         	goto	u5811
 11454  0023E6  EFF8  F011         	goto	u5810
 11455  0023EA                     u5811:
 11456  0023EA  FFFF               	dw	65535	; assembler added errata NOP
 11457  0023EC  EF15  F012         	goto	l4803
 11458  0023F0                     u5810:
 11459  0023F0  FFFF               	dw	65535	; assembler added errata NOP
 11460  0023F2  C05D  F001         	movff	roundf@u,___flmul@b
 11461  0023F6  C05E  F002         	movff	roundf@u+1,___flmul@b+1
 11462  0023FA  C05F  F003         	movff	roundf@u+2,___flmul@b+2
 11463  0023FE  C060  F004         	movff	roundf@u+3,___flmul@b+3
 11464  002402  0E00               	movlw	0
 11465  002404  6E05               	movwf	___flmul@a^0,c
 11466  002406  0E00               	movlw	0
 11467  002408  6E06               	movwf	(___flmul@a+1)^0,c
 11468  00240A  0E00               	movlw	0
 11469  00240C  6E07               	movwf	(___flmul@a+2)^0,c
 11470  00240E  0E00               	movlw	0
 11471  002410  6E08               	movwf	(___flmul@a+3)^0,c
 11472  002412  EC05  F00D         	call	___flmul	;wreg free
 11473  002416  C001  F04B         	movff	?___flmul,?_roundf
 11474  00241A  C002  F04C         	movff	?___flmul+1,?_roundf+1
 11475  00241E  C003  F04D         	movff	?___flmul+2,?_roundf+2
 11476  002422  C004  F04E         	movff	?___flmul+3,?_roundf+3
 11477  002426  EF60  F013         	goto	l978
 11478  00242A                     l4803:
 11479  00242A  FFFF               	dw	65535	; assembler added errata NOP
 11480  00242C  0E00               	movlw	0
 11481  00242E  6E37               	movwf	___fladd@a^0,c
 11482  002430  0E00               	movlw	0
 11483  002432  6E38               	movwf	(___fladd@a+1)^0,c
 11484  002434  0E00               	movlw	0
 11485  002436  6E39               	movwf	(___fladd@a+2)^0,c
 11486  002438  0E4B               	movlw	75
 11487  00243A  6E3A               	movwf	(___fladd@a+3)^0,c
 11488  00243C  C04B  F033         	movff	roundf@x,___fladd@b
 11489  002440  C04C  F034         	movff	roundf@x+1,___fladd@b+1
 11490  002444  C04D  F035         	movff	roundf@x+2,___fladd@b+2
 11491  002448  C04E  F036         	movff	roundf@x+3,___fladd@b+3
 11492  00244C  EC31  F00A         	call	___fladd	;wreg free
 11493  002450  C033  F059         	movff	?___fladd,_roundf$1949
 11494  002454  C034  F05A         	movff	?___fladd+1,_roundf$1949+1
 11495  002458  C035  F05B         	movff	?___fladd+2,_roundf$1949+2
 11496  00245C  C036  F05C         	movff	?___fladd+3,_roundf$1949+3
 11497  002460  0E00               	movlw	0
 11498  002462  6E37               	movwf	___fladd@a^0,c
 11499  002464  0E00               	movlw	0
 11500  002466  6E38               	movwf	(___fladd@a+1)^0,c
 11501  002468  0E00               	movlw	0
 11502  00246A  6E39               	movwf	(___fladd@a+2)^0,c
 11503  00246C  0ECB               	movlw	203
 11504  00246E  6E3A               	movwf	(___fladd@a+3)^0,c
 11505  002470  C059  F033         	movff	_roundf$1949,___fladd@b
 11506  002474  C05A  F034         	movff	_roundf$1949+1,___fladd@b+1
 11507  002478  C05B  F035         	movff	_roundf$1949+2,___fladd@b+2
 11508  00247C  C05C  F036         	movff	_roundf$1949+3,___fladd@b+3
 11509  002480  EC31  F00A         	call	___fladd	;wreg free
 11510  002484  C033  F053         	movff	?___fladd,_roundf$1950
 11511  002488  C034  F054         	movff	?___fladd+1,_roundf$1950+1
 11512  00248C  C035  F055         	movff	?___fladd+2,_roundf$1950+2
 11513  002490  C036  F056         	movff	?___fladd+3,_roundf$1950+3
 11514  002494  C053  F043         	movff	_roundf$1950,___flsub@b
 11515  002498  C054  F044         	movff	_roundf$1950+1,___flsub@b+1
 11516  00249C  C055  F045         	movff	_roundf$1950+2,___flsub@b+2
 11517  0024A0  C056  F046         	movff	_roundf$1950+3,___flsub@b+3
 11518  0024A4  C04B  F047         	movff	roundf@x,___flsub@a
 11519  0024A8  C04C  F048         	movff	roundf@x+1,___flsub@a+1
 11520  0024AC  C04D  F049         	movff	roundf@x+2,___flsub@a+2
 11521  0024B0  C04E  F04A         	movff	roundf@x+3,___flsub@a+3
 11522  0024B4  EC81  F038         	call	___flsub	;wreg free
 11523  0024B8  C043  F061         	movff	?___flsub,roundf@y
 11524  0024BC  C044  F062         	movff	?___flsub+1,roundf@y+1
 11525  0024C0  C045  F063         	movff	?___flsub+2,roundf@y+2
 11526  0024C4  C046  F064         	movff	?___flsub+3,roundf@y+3
 11527  0024C8  0E00               	movlw	0
 11528  0024CA  6E01               	movwf	___flge@ff1^0,c
 11529  0024CC  0E00               	movlw	0
 11530  0024CE  6E02               	movwf	(___flge@ff1+1)^0,c
 11531  0024D0  0E00               	movlw	0
 11532  0024D2  6E03               	movwf	(___flge@ff1+2)^0,c
 11533  0024D4  0E3F               	movlw	63
 11534  0024D6  6E04               	movwf	(___flge@ff1+3)^0,c
 11535  0024D8  C061  F005         	movff	roundf@y,___flge@ff2
 11536  0024DC  C062  F006         	movff	roundf@y+1,___flge@ff2+1
 11537  0024E0  C063  F007         	movff	roundf@y+2,___flge@ff2+2
 11538  0024E4  C064  F008         	movff	roundf@y+3,___flge@ff2+3
 11539  0024E8  EC3E  F01F         	call	___flge	;wreg free
 11540  0024EC  B0D8               	btfsc	status,0,c
 11541  0024EE  EF7B  F012         	goto	u5821
 11542  0024F2  EF7E  F012         	goto	u5820
 11543  0024F6                     u5821:
 11544  0024F6  FFFF               	dw	65535	; assembler added errata NOP
 11545  0024F8  EFB5  F012         	goto	l4807
 11546  0024FC                     u5820:
 11547  0024FC  FFFF               	dw	65535	; assembler added errata NOP
 11548  0024FE  C04B  F037         	movff	roundf@x,___fladd@a
 11549  002502  C04C  F038         	movff	roundf@x+1,___fladd@a+1
 11550  002506  C04D  F039         	movff	roundf@x+2,___fladd@a+2
 11551  00250A  C04E  F03A         	movff	roundf@x+3,___fladd@a+3
 11552  00250E  C061  F033         	movff	roundf@y,___fladd@b
 11553  002512  C062  F034         	movff	roundf@y+1,___fladd@b+1
 11554  002516  C063  F035         	movff	roundf@y+2,___fladd@b+2
 11555  00251A  C064  F036         	movff	roundf@y+3,___fladd@b+3
 11556  00251E  EC31  F00A         	call	___fladd	;wreg free
 11557  002522  C033  F059         	movff	?___fladd,_roundf$1949
 11558  002526  C034  F05A         	movff	?___fladd+1,_roundf$1949+1
 11559  00252A  C035  F05B         	movff	?___fladd+2,_roundf$1949+2
 11560  00252E  C036  F05C         	movff	?___fladd+3,_roundf$1949+3
 11561  002532  C059  F033         	movff	_roundf$1949,___fladd@b
 11562  002536  C05A  F034         	movff	_roundf$1949+1,___fladd@b+1
 11563  00253A  C05B  F035         	movff	_roundf$1949+2,___fladd@b+2
 11564  00253E  C05C  F036         	movff	_roundf$1949+3,___fladd@b+3
 11565  002542  0E00               	movlw	0
 11566  002544  6E37               	movwf	___fladd@a^0,c
 11567  002546  0E00               	movlw	0
 11568  002548  6E38               	movwf	(___fladd@a+1)^0,c
 11569  00254A  0E80               	movlw	128
 11570  00254C  6E39               	movwf	(___fladd@a+2)^0,c
 11571  00254E  0EBF               	movlw	191
 11572  002550  6E3A               	movwf	(___fladd@a+3)^0,c
 11573  002552  EC31  F00A         	call	___fladd	;wreg free
 11574  002556  C033  F061         	movff	?___fladd,roundf@y
 11575  00255A  C034  F062         	movff	?___fladd+1,roundf@y+1
 11576  00255E  C035  F063         	movff	?___fladd+2,roundf@y+2
 11577  002562  C036  F064         	movff	?___fladd+3,roundf@y+3
 11578  002566  EF22  F013         	goto	l4813
 11579  00256A                     l4807:
 11580  00256A  FFFF               	dw	65535	; assembler added errata NOP
 11581  00256C  0E00               	movlw	0
 11582  00256E  6E01               	movwf	___flge@ff1^0,c
 11583  002570  0E00               	movlw	0
 11584  002572  6E02               	movwf	(___flge@ff1+1)^0,c
 11585  002574  0E00               	movlw	0
 11586  002576  6E03               	movwf	(___flge@ff1+2)^0,c
 11587  002578  0EBF               	movlw	191
 11588  00257A  6E04               	movwf	(___flge@ff1+3)^0,c
 11589  00257C  C061  F005         	movff	roundf@y,___flge@ff2
 11590  002580  C062  F006         	movff	roundf@y+1,___flge@ff2+1
 11591  002584  C063  F007         	movff	roundf@y+2,___flge@ff2+2
 11592  002588  C064  F008         	movff	roundf@y+3,___flge@ff2+3
 11593  00258C  EC3E  F01F         	call	___flge	;wreg free
 11594  002590  A0D8               	btfss	status,0,c
 11595  002592  EFCD  F012         	goto	u5831
 11596  002596  EFD0  F012         	goto	u5830
 11597  00259A                     u5831:
 11598  00259A  FFFF               	dw	65535	; assembler added errata NOP
 11599  00259C  EF07  F013         	goto	l4811
 11600  0025A0                     u5830:
 11601  0025A0  FFFF               	dw	65535	; assembler added errata NOP
 11602  0025A2  C04B  F037         	movff	roundf@x,___fladd@a
 11603  0025A6  C04C  F038         	movff	roundf@x+1,___fladd@a+1
 11604  0025AA  C04D  F039         	movff	roundf@x+2,___fladd@a+2
 11605  0025AE  C04E  F03A         	movff	roundf@x+3,___fladd@a+3
 11606  0025B2  C061  F033         	movff	roundf@y,___fladd@b
 11607  0025B6  C062  F034         	movff	roundf@y+1,___fladd@b+1
 11608  0025BA  C063  F035         	movff	roundf@y+2,___fladd@b+2
 11609  0025BE  C064  F036         	movff	roundf@y+3,___fladd@b+3
 11610  0025C2  EC31  F00A         	call	___fladd	;wreg free
 11611  0025C6  C033  F059         	movff	?___fladd,_roundf$1949
 11612  0025CA  C034  F05A         	movff	?___fladd+1,_roundf$1949+1
 11613  0025CE  C035  F05B         	movff	?___fladd+2,_roundf$1949+2
 11614  0025D2  C036  F05C         	movff	?___fladd+3,_roundf$1949+3
 11615  0025D6  C059  F033         	movff	_roundf$1949,___fladd@b
 11616  0025DA  C05A  F034         	movff	_roundf$1949+1,___fladd@b+1
 11617  0025DE  C05B  F035         	movff	_roundf$1949+2,___fladd@b+2
 11618  0025E2  C05C  F036         	movff	_roundf$1949+3,___fladd@b+3
 11619  0025E6  0E00               	movlw	0
 11620  0025E8  6E37               	movwf	___fladd@a^0,c
 11621  0025EA  0E00               	movlw	0
 11622  0025EC  6E38               	movwf	(___fladd@a+1)^0,c
 11623  0025EE  0E80               	movlw	128
 11624  0025F0  6E39               	movwf	(___fladd@a+2)^0,c
 11625  0025F2  0E3F               	movlw	63
 11626  0025F4  6E3A               	movwf	(___fladd@a+3)^0,c
 11627  0025F6  EC31  F00A         	call	___fladd	;wreg free
 11628  0025FA  C033  F061         	movff	?___fladd,roundf@y
 11629  0025FE  C034  F062         	movff	?___fladd+1,roundf@y+1
 11630  002602  C035  F063         	movff	?___fladd+2,roundf@y+2
 11631  002606  C036  F064         	movff	?___fladd+3,roundf@y+3
 11632  00260A  EF22  F013         	goto	l4813
 11633  00260E                     l4811:
 11634  00260E  FFFF               	dw	65535	; assembler added errata NOP
 11635  002610  C061  F033         	movff	roundf@y,___fladd@b
 11636  002614  C062  F034         	movff	roundf@y+1,___fladd@b+1
 11637  002618  C063  F035         	movff	roundf@y+2,___fladd@b+2
 11638  00261C  C064  F036         	movff	roundf@y+3,___fladd@b+3
 11639  002620  C04B  F037         	movff	roundf@x,___fladd@a
 11640  002624  C04C  F038         	movff	roundf@x+1,___fladd@a+1
 11641  002628  C04D  F039         	movff	roundf@x+2,___fladd@a+2
 11642  00262C  C04E  F03A         	movff	roundf@x+3,___fladd@a+3
 11643  002630  EC31  F00A         	call	___fladd	;wreg free
 11644  002634  C033  F061         	movff	?___fladd,roundf@y
 11645  002638  C034  F062         	movff	?___fladd+1,roundf@y+1
 11646  00263C  C035  F063         	movff	?___fladd+2,roundf@y+2
 11647  002640  C036  F064         	movff	?___fladd+3,roundf@y+3
 11648  002644                     l4813:
 11649  002644  FFFF               	dw	65535	; assembler added errata NOP
 11650  002646  C05D  F04F         	movff	roundf@u,??_roundf
 11651  00264A  C05E  F050         	movff	roundf@u+1,??_roundf+1
 11652  00264E  C05F  F051         	movff	roundf@u+2,??_roundf+2
 11653  002652  C060  F052         	movff	roundf@u+3,??_roundf+3
 11654  002656  0E20               	movlw	32
 11655  002658  EF34  F013         	goto	u5840
 11656  00265C                     u5845:
 11657  00265C  FFFF               	dw	65535	; assembler added errata NOP
 11658  00265E  90D8               	bcf	status,0,c
 11659  002660  3252               	rrcf	(??_roundf+3)^0,f,c
 11660  002662  3251               	rrcf	(??_roundf+2)^0,f,c
 11661  002664  3250               	rrcf	(??_roundf+1)^0,f,c
 11662  002666  324F               	rrcf	??_roundf^0,f,c
 11663  002668                     u5840:
 11664  002668  FFFF               	dw	65535	; assembler added errata NOP
 11665  00266A  2EE8               	decfsz	wreg,f,c
 11666  00266C  EF2E  F013         	goto	u5845
 11667  002670  504F               	movf	??_roundf^0,w,c
 11668  002672  1050               	iorwf	(??_roundf+1)^0,w,c
 11669  002674  1051               	iorwf	(??_roundf+2)^0,w,c
 11670  002676  1052               	iorwf	(??_roundf+3)^0,w,c
 11671  002678  B4D8               	btfsc	status,2,c
 11672  00267A  EF41  F013         	goto	u5851
 11673  00267E  EF44  F013         	goto	u5850
 11674  002682                     u5851:
 11675  002682  FFFF               	dw	65535	; assembler added errata NOP
 11676  002684  EF57  F013         	goto	l4817
 11677  002688                     u5850:
 11678  002688  FFFF               	dw	65535	; assembler added errata NOP
 11679  00268A  C061  F001         	movff	roundf@y,___flneg@f1
 11680  00268E  C062  F002         	movff	roundf@y+1,___flneg@f1+1
 11681  002692  C063  F003         	movff	roundf@y+2,___flneg@f1+2
 11682  002696  C064  F004         	movff	roundf@y+3,___flneg@f1+3
 11683  00269A  ECDA  F037         	call	___flneg	;wreg free
 11684  00269E  C001  F061         	movff	?___flneg,roundf@y
 11685  0026A2  C002  F062         	movff	?___flneg+1,roundf@y+1
 11686  0026A6  C003  F063         	movff	?___flneg+2,roundf@y+2
 11687  0026AA  C004  F064         	movff	?___flneg+3,roundf@y+3
 11688  0026AE                     l4817:
 11689  0026AE  FFFF               	dw	65535	; assembler added errata NOP
 11690  0026B0  C061  F04B         	movff	roundf@y,?_roundf
 11691  0026B4  C062  F04C         	movff	roundf@y+1,?_roundf+1
 11692  0026B8  C063  F04D         	movff	roundf@y+2,?_roundf+2
 11693  0026BC  C064  F04E         	movff	roundf@y+3,?_roundf+3
 11694  0026C0                     l978:
 11695  0026C0  FFFF               	dw	65535	; assembler added errata NOP
 11696  0026C2  0012               	return		;funcret
 11697  0026C4  FFFF               	dw	65535	; errata NOP
 11698  0026C6                     __end_of_roundf:
 11699                           	callstack 0
 11700                           
 11701 ;; *************** function ___flsub *****************
 11702 ;; Defined at:
 11703 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
 11704 ;; Parameters:    Size  Location     Type
 11705 ;;  b               4   66[COMRAM] float 
 11706 ;;  a               4   70[COMRAM] float 
 11707 ;; Auto vars:     Size  Location     Type
 11708 ;;		None
 11709 ;; Return value:  Size  Location     Type
 11710 ;;                  4   66[COMRAM] float 
 11711 ;; Registers used:
 11712 ;;		wreg, status,2, status,0, cstack
 11713 ;; Tracked objects:
 11714 ;;		On entry : 0/0
 11715 ;;		On exit  : 0/0
 11716 ;;		Unchanged: 0/0
 11717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11718 ;;      Params:         8       0       0       0       0       0       0
 11719 ;;      Locals:         0       0       0       0       0       0       0
 11720 ;;      Temps:          0       0       0       0       0       0       0
 11721 ;;      Totals:         8       0       0       0       0       0       0
 11722 ;;Total ram usage:        8 bytes
 11723 ;; Hardware stack levels used:    1
 11724 ;; Hardware stack levels required when called:    2
 11725 ;; This function calls:
 11726 ;;		___fladd
 11727 ;; This function is called by:
 11728 ;;		_roundf
 11729 ;; This function uses a non-reentrant model
 11730 ;;
 11731                           
 11732                           	psect	text48
 11733  007102                     __ptext48:
 11734                           	callstack 0
 11735  007102                     ___flsub:
 11736                           	callstack 0
 11737  007102  FFFF               	dw	65535	; assembler added errata NOP
 11738  007104  0E00               	movlw	0
 11739  007106  1A47               	xorwf	___flsub@a^0,f,c
 11740  007108  0E00               	movlw	0
 11741  00710A  1A48               	xorwf	(___flsub@a+1)^0,f,c
 11742  00710C  0E00               	movlw	0
 11743  00710E  1A49               	xorwf	(___flsub@a+2)^0,f,c
 11744  007110  0E80               	movlw	128
 11745  007112  1A4A               	xorwf	(___flsub@a+3)^0,f,c
 11746  007114  C043  F033         	movff	___flsub@b,___fladd@b
 11747  007118  C044  F034         	movff	___flsub@b+1,___fladd@b+1
 11748  00711C  C045  F035         	movff	___flsub@b+2,___fladd@b+2
 11749  007120  C046  F036         	movff	___flsub@b+3,___fladd@b+3
 11750  007124  C047  F037         	movff	___flsub@a,___fladd@a
 11751  007128  C048  F038         	movff	___flsub@a+1,___fladd@a+1
 11752  00712C  C049  F039         	movff	___flsub@a+2,___fladd@a+2
 11753  007130  C04A  F03A         	movff	___flsub@a+3,___fladd@a+3
 11754  007134  EC31  F00A         	call	___fladd	;wreg free
 11755  007138  C033  F043         	movff	?___fladd,?___flsub
 11756  00713C  C034  F044         	movff	?___fladd+1,?___flsub+1
 11757  007140  C035  F045         	movff	?___fladd+2,?___flsub+2
 11758  007144  C036  F046         	movff	?___fladd+3,?___flsub+3
 11759  007148  0012               	return		;funcret
 11760  00714A  FFFF               	dw	65535	; errata NOP
 11761  00714C                     __end_of___flsub:
 11762                           	callstack 0
 11763                           
 11764 ;; *************** function ___fladd *****************
 11765 ;; Defined at:
 11766 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
 11767 ;; Parameters:    Size  Location     Type
 11768 ;;  b               4   50[COMRAM] float 
 11769 ;;  a               4   54[COMRAM] float 
 11770 ;; Auto vars:     Size  Location     Type
 11771 ;;  grs             1   65[COMRAM] unsigned char 
 11772 ;;  bexp            1   64[COMRAM] unsigned char 
 11773 ;;  aexp            1   63[COMRAM] unsigned char 
 11774 ;;  signs           1   62[COMRAM] unsigned char 
 11775 ;; Return value:  Size  Location     Type
 11776 ;;                  4   50[COMRAM] unsigned char 
 11777 ;; Registers used:
 11778 ;;		wreg, status,2, status,0
 11779 ;; Tracked objects:
 11780 ;;		On entry : 0/0
 11781 ;;		On exit  : 0/0
 11782 ;;		Unchanged: 0/0
 11783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11784 ;;      Params:         8       0       0       0       0       0       0
 11785 ;;      Locals:         4       0       0       0       0       0       0
 11786 ;;      Temps:          4       0       0       0       0       0       0
 11787 ;;      Totals:        16       0       0       0       0       0       0
 11788 ;;Total ram usage:       16 bytes
 11789 ;; Hardware stack levels used:    1
 11790 ;; Hardware stack levels required when called:    1
 11791 ;; This function calls:
 11792 ;;		Nothing
 11793 ;; This function is called by:
 11794 ;;		_init_timer_2
 11795 ;;		___flsub
 11796 ;;		_roundf
 11797 ;; This function uses a non-reentrant model
 11798 ;;
 11799                           
 11800                           	psect	text49
 11801  001462                     __ptext49:
 11802                           	callstack 0
 11803  001462                     ___fladd:
 11804                           	callstack 0
 11805  001462  FFFF               	dw	65535	; assembler added errata NOP
 11806  001464  5036               	movf	(___fladd@b+3)^0,w,c
 11807  001466  0B80               	andlw	128
 11808  001468  6E3F               	movwf	___fladd@signs^0,c
 11809  00146A  5036               	movf	(___fladd@b+3)^0,w,c
 11810  00146C  2436               	addwf	(___fladd@b+3)^0,w,c
 11811  00146E  6E41               	movwf	___fladd@bexp^0,c
 11812  001470  AE35               	btfss	(___fladd@b+2)^0,7,c
 11813  001472  EF3D  F00A         	goto	u4331
 11814  001476  EF40  F00A         	goto	u4330
 11815  00147A                     u4331:
 11816  00147A  FFFF               	dw	65535	; assembler added errata NOP
 11817  00147C  EF42  F00A         	goto	l3901
 11818  001480                     u4330:
 11819  001480  FFFF               	dw	65535	; assembler added errata NOP
 11820  001482  8041               	bsf	___fladd@bexp^0,0,c
 11821  001484                     l3901:
 11822  001484  FFFF               	dw	65535	; assembler added errata NOP
 11823  001486  5041               	movf	___fladd@bexp^0,w,c
 11824  001488  B4D8               	btfsc	status,2,c
 11825  00148A  EF49  F00A         	goto	u4341
 11826  00148E  EF4C  F00A         	goto	u4340
 11827  001492                     u4341:
 11828  001492  FFFF               	dw	65535	; assembler added errata NOP
 11829  001494  EF65  F00A         	goto	l3911
 11830  001498                     u4340:
 11831  001498  FFFF               	dw	65535	; assembler added errata NOP
 11832  00149A  2841               	incf	___fladd@bexp^0,w,c
 11833  00149C  A4D8               	btfss	status,2,c
 11834  00149E  EF53  F00A         	goto	u4351
 11835  0014A2  EF56  F00A         	goto	u4350
 11836  0014A6                     u4351:
 11837  0014A6  FFFF               	dw	65535	; assembler added errata NOP
 11838  0014A8  EF5F  F00A         	goto	l3907
 11839  0014AC                     u4350:
 11840  0014AC  FFFF               	dw	65535	; assembler added errata NOP
 11841  0014AE  0E00               	movlw	0
 11842  0014B0  6E33               	movwf	___fladd@b^0,c
 11843  0014B2  0E00               	movlw	0
 11844  0014B4  6E34               	movwf	(___fladd@b+1)^0,c
 11845  0014B6  0E00               	movlw	0
 11846  0014B8  6E35               	movwf	(___fladd@b+2)^0,c
 11847  0014BA  0E00               	movlw	0
 11848  0014BC  6E36               	movwf	(___fladd@b+3)^0,c
 11849  0014BE                     l3907:
 11850  0014BE  FFFF               	dw	65535	; assembler added errata NOP
 11851  0014C0  8E35               	bsf	(___fladd@b+2)^0,7,c
 11852  0014C2  0E00               	movlw	0
 11853  0014C4  6E36               	movwf	(___fladd@b+3)^0,c
 11854  0014C6  EF6E  F00A         	goto	l3913
 11855  0014CA                     l3911:
 11856  0014CA  FFFF               	dw	65535	; assembler added errata NOP
 11857  0014CC  0E00               	movlw	0
 11858  0014CE  6E33               	movwf	___fladd@b^0,c
 11859  0014D0  0E00               	movlw	0
 11860  0014D2  6E34               	movwf	(___fladd@b+1)^0,c
 11861  0014D4  0E00               	movlw	0
 11862  0014D6  6E35               	movwf	(___fladd@b+2)^0,c
 11863  0014D8  0E00               	movlw	0
 11864  0014DA  6E36               	movwf	(___fladd@b+3)^0,c
 11865  0014DC                     l3913:
 11866  0014DC  FFFF               	dw	65535	; assembler added errata NOP
 11867  0014DE  503A               	movf	(___fladd@a+3)^0,w,c
 11868  0014E0  0B80               	andlw	128
 11869  0014E2  6E40               	movwf	___fladd@aexp^0,c
 11870  0014E4  503F               	movf	___fladd@signs^0,w,c
 11871  0014E6  1840               	xorwf	___fladd@aexp^0,w,c
 11872  0014E8  B4D8               	btfsc	status,2,c
 11873  0014EA  EF79  F00A         	goto	u4361
 11874  0014EE  EF7C  F00A         	goto	u4360
 11875  0014F2                     u4361:
 11876  0014F2  FFFF               	dw	65535	; assembler added errata NOP
 11877  0014F4  EF7E  F00A         	goto	l3919
 11878  0014F8                     u4360:
 11879  0014F8  FFFF               	dw	65535	; assembler added errata NOP
 11880  0014FA  8C3F               	bsf	___fladd@signs^0,6,c
 11881  0014FC                     l3919:
 11882  0014FC  FFFF               	dw	65535	; assembler added errata NOP
 11883  0014FE  503A               	movf	(___fladd@a+3)^0,w,c
 11884  001500  243A               	addwf	(___fladd@a+3)^0,w,c
 11885  001502  6E40               	movwf	___fladd@aexp^0,c
 11886  001504  AE39               	btfss	(___fladd@a+2)^0,7,c
 11887  001506  EF87  F00A         	goto	u4371
 11888  00150A  EF8A  F00A         	goto	u4370
 11889  00150E                     u4371:
 11890  00150E  FFFF               	dw	65535	; assembler added errata NOP
 11891  001510  EF8C  F00A         	goto	l3925
 11892  001514                     u4370:
 11893  001514  FFFF               	dw	65535	; assembler added errata NOP
 11894  001516  8040               	bsf	___fladd@aexp^0,0,c
 11895  001518                     l3925:
 11896  001518  FFFF               	dw	65535	; assembler added errata NOP
 11897  00151A  5040               	movf	___fladd@aexp^0,w,c
 11898  00151C  B4D8               	btfsc	status,2,c
 11899  00151E  EF93  F00A         	goto	u4381
 11900  001522  EF96  F00A         	goto	u4380
 11901  001526                     u4381:
 11902  001526  FFFF               	dw	65535	; assembler added errata NOP
 11903  001528  EFAF  F00A         	goto	l3935
 11904  00152C                     u4380:
 11905  00152C  FFFF               	dw	65535	; assembler added errata NOP
 11906  00152E  2840               	incf	___fladd@aexp^0,w,c
 11907  001530  A4D8               	btfss	status,2,c
 11908  001532  EF9D  F00A         	goto	u4391
 11909  001536  EFA0  F00A         	goto	u4390
 11910  00153A                     u4391:
 11911  00153A  FFFF               	dw	65535	; assembler added errata NOP
 11912  00153C  EFA9  F00A         	goto	l3931
 11913  001540                     u4390:
 11914  001540  FFFF               	dw	65535	; assembler added errata NOP
 11915  001542  0E00               	movlw	0
 11916  001544  6E37               	movwf	___fladd@a^0,c
 11917  001546  0E00               	movlw	0
 11918  001548  6E38               	movwf	(___fladd@a+1)^0,c
 11919  00154A  0E00               	movlw	0
 11920  00154C  6E39               	movwf	(___fladd@a+2)^0,c
 11921  00154E  0E00               	movlw	0
 11922  001550  6E3A               	movwf	(___fladd@a+3)^0,c
 11923  001552                     l3931:
 11924  001552  FFFF               	dw	65535	; assembler added errata NOP
 11925  001554  8E39               	bsf	(___fladd@a+2)^0,7,c
 11926  001556  0E00               	movlw	0
 11927  001558  6E3A               	movwf	(___fladd@a+3)^0,c
 11928  00155A  EFB8  F00A         	goto	l3937
 11929  00155E                     l3935:
 11930  00155E  FFFF               	dw	65535	; assembler added errata NOP
 11931  001560  0E00               	movlw	0
 11932  001562  6E37               	movwf	___fladd@a^0,c
 11933  001564  0E00               	movlw	0
 11934  001566  6E38               	movwf	(___fladd@a+1)^0,c
 11935  001568  0E00               	movlw	0
 11936  00156A  6E39               	movwf	(___fladd@a+2)^0,c
 11937  00156C  0E00               	movlw	0
 11938  00156E  6E3A               	movwf	(___fladd@a+3)^0,c
 11939  001570                     l3937:
 11940  001570  FFFF               	dw	65535	; assembler added errata NOP
 11941  001572  5041               	movf	___fladd@bexp^0,w,c
 11942  001574  5C40               	subwf	___fladd@aexp^0,w,c
 11943  001576  B0D8               	btfsc	status,0,c
 11944  001578  EFC0  F00A         	goto	u4401
 11945  00157C  EFC3  F00A         	goto	u4400
 11946  001580                     u4401:
 11947  001580  FFFF               	dw	65535	; assembler added errata NOP
 11948  001582  EFEE  F00A         	goto	l3973
 11949  001586                     u4400:
 11950  001586  FFFF               	dw	65535	; assembler added errata NOP
 11951  001588  AC3F               	btfss	___fladd@signs^0,6,c
 11952  00158A  EFC9  F00A         	goto	u4411
 11953  00158E  EFCC  F00A         	goto	u4410
 11954  001592                     u4411:
 11955  001592  FFFF               	dw	65535	; assembler added errata NOP
 11956  001594  EFCF  F00A         	goto	l3943
 11957  001598                     u4410:
 11958  001598  FFFF               	dw	65535	; assembler added errata NOP
 11959  00159A  0E80               	movlw	128
 11960  00159C  1A3F               	xorwf	___fladd@signs^0,f,c
 11961  00159E                     l3943:
 11962  00159E  FFFF               	dw	65535	; assembler added errata NOP
 11963  0015A0  C041  F042         	movff	___fladd@bexp,___fladd@grs
 11964  0015A4  C040  F041         	movff	___fladd@aexp,___fladd@bexp
 11965  0015A8  C042  F040         	movff	___fladd@grs,___fladd@aexp
 11966  0015AC  C033  F042         	movff	___fladd@b,___fladd@grs
 11967  0015B0  C037  F033         	movff	___fladd@a,___fladd@b
 11968  0015B4  C042  F037         	movff	___fladd@grs,___fladd@a
 11969  0015B8  C034  F042         	movff	___fladd@b+1,___fladd@grs
 11970  0015BC  C038  F034         	movff	___fladd@a+1,___fladd@b+1
 11971  0015C0  C042  F038         	movff	___fladd@grs,___fladd@a+1
 11972  0015C4  C035  F042         	movff	___fladd@b+2,___fladd@grs
 11973  0015C8  C039  F035         	movff	___fladd@a+2,___fladd@b+2
 11974  0015CC  C042  F039         	movff	___fladd@grs,___fladd@a+2
 11975  0015D0  C036  F042         	movff	___fladd@b+3,___fladd@grs
 11976  0015D4  C03A  F036         	movff	___fladd@a+3,___fladd@b+3
 11977  0015D8  C042  F03A         	movff	___fladd@grs,___fladd@a+3
 11978  0015DC                     l3973:
 11979  0015DC  FFFF               	dw	65535	; assembler added errata NOP
 11980  0015DE  0E00               	movlw	0
 11981  0015E0  6E42               	movwf	___fladd@grs^0,c
 11982  0015E2  5041               	movf	___fladd@bexp^0,w,c
 11983  0015E4  C040  F03B         	movff	___fladd@aexp,??___fladd
 11984  0015E8  6A3C               	clrf	(??___fladd+1)^0,c
 11985  0015EA  5E3B               	subwf	??___fladd^0,f,c
 11986  0015EC  0E00               	movlw	0
 11987  0015EE  5A3C               	subwfb	(??___fladd+1)^0,f,c
 11988  0015F0  BE3C               	btfsc	(??___fladd+1)^0,7,c
 11989  0015F2  EF04  F00B         	goto	u4421
 11990  0015F6  503C               	movf	(??___fladd+1)^0,w,c
 11991  0015F8  E10A               	bnz	u4420
 11992  0015FA  0E1A               	movlw	26
 11993  0015FC  5C3B               	subwf	??___fladd^0,w,c
 11994  0015FE  A0D8               	btfss	status,0,c
 11995  001600  EF04  F00B         	goto	u4421
 11996  001604  EF07  F00B         	goto	u4420
 11997  001608                     u4421:
 11998  001608  FFFF               	dw	65535	; assembler added errata NOP
 11999  00160A  EF4A  F00B         	goto	l828
 12000  00160E                     u4420:
 12001  00160E  FFFF               	dw	65535	; assembler added errata NOP
 12002  001610  5033               	movf	___fladd@b^0,w,c
 12003  001612  1034               	iorwf	(___fladd@b+1)^0,w,c
 12004  001614  1035               	iorwf	(___fladd@b+2)^0,w,c
 12005  001616  1036               	iorwf	(___fladd@b+3)^0,w,c
 12006  001618  A4D8               	btfss	status,2,c
 12007  00161A  EF11  F00B         	goto	u4431
 12008  00161E  EF15  F00B         	goto	u4430
 12009  001622                     u4431:
 12010  001622  FFFF               	dw	65535	; assembler added errata NOP
 12011  001624  0E01               	movlw	1
 12012  001626  EF17  F00B         	goto	u4440
 12013  00162A                     u4430:
 12014  00162A  FFFF               	dw	65535	; assembler added errata NOP
 12015  00162C  0E00               	movlw	0
 12016  00162E                     u4440:
 12017  00162E  FFFF               	dw	65535	; assembler added errata NOP
 12018  001630  6E42               	movwf	___fladd@grs^0,c
 12019  001632  0E00               	movlw	0
 12020  001634  6E33               	movwf	___fladd@b^0,c
 12021  001636  0E00               	movlw	0
 12022  001638  6E34               	movwf	(___fladd@b+1)^0,c
 12023  00163A  0E00               	movlw	0
 12024  00163C  6E35               	movwf	(___fladd@b+2)^0,c
 12025  00163E  0E00               	movlw	0
 12026  001640  6E36               	movwf	(___fladd@b+3)^0,c
 12027  001642  C040  F041         	movff	___fladd@aexp,___fladd@bexp
 12028  001646  EF55  F00B         	goto	l827
 12029  00164A                     l829:
 12030  00164A  FFFF               	dw	65535	; assembler added errata NOP
 12031  00164C  A042               	btfss	___fladd@grs^0,0,c
 12032  00164E  EF2B  F00B         	goto	u4451
 12033  001652  EF2E  F00B         	goto	u4450
 12034  001656                     u4451:
 12035  001656  FFFF               	dw	65535	; assembler added errata NOP
 12036  001658  EF35  F00B         	goto	l3985
 12037  00165C                     u4450:
 12038  00165C  FFFF               	dw	65535	; assembler added errata NOP
 12039  00165E  90D8               	bcf	status,0,c
 12040  001660  3042               	rrcf	___fladd@grs^0,w,c
 12041  001662  0901               	iorlw	1
 12042  001664  6E42               	movwf	___fladd@grs^0,c
 12043  001666  EF38  F00B         	goto	l3987
 12044  00166A                     l3985:
 12045  00166A  FFFF               	dw	65535	; assembler added errata NOP
 12046  00166C  90D8               	bcf	status,0,c
 12047  00166E  3242               	rrcf	___fladd@grs^0,f,c
 12048  001670                     l3987:
 12049  001670  FFFF               	dw	65535	; assembler added errata NOP
 12050  001672  A033               	btfss	___fladd@b^0,0,c
 12051  001674  EF3E  F00B         	goto	u4461
 12052  001678  EF41  F00B         	goto	u4460
 12053  00167C                     u4461:
 12054  00167C  FFFF               	dw	65535	; assembler added errata NOP
 12055  00167E  EF43  F00B         	goto	l3991
 12056  001682                     u4460:
 12057  001682  FFFF               	dw	65535	; assembler added errata NOP
 12058  001684  8E42               	bsf	___fladd@grs^0,7,c
 12059  001686                     l3991:
 12060  001686  FFFF               	dw	65535	; assembler added errata NOP
 12061  001688  3436               	rlcf	(___fladd@b+3)^0,w,c
 12062  00168A  3236               	rrcf	(___fladd@b+3)^0,f,c
 12063  00168C  3235               	rrcf	(___fladd@b+2)^0,f,c
 12064  00168E  3234               	rrcf	(___fladd@b+1)^0,f,c
 12065  001690  3233               	rrcf	___fladd@b^0,f,c
 12066  001692  2A41               	incf	___fladd@bexp^0,f,c
 12067  001694                     l828:
 12068  001694  FFFF               	dw	65535	; assembler added errata NOP
 12069  001696  5040               	movf	___fladd@aexp^0,w,c
 12070  001698  5C41               	subwf	___fladd@bexp^0,w,c
 12071  00169A  A0D8               	btfss	status,0,c
 12072  00169C  EF52  F00B         	goto	u4471
 12073  0016A0  EF55  F00B         	goto	u4470
 12074  0016A4                     u4471:
 12075  0016A4  FFFF               	dw	65535	; assembler added errata NOP
 12076  0016A6  EF25  F00B         	goto	l829
 12077  0016AA                     u4470:
 12078  0016AA                     l827:
 12079  0016AA  FFFF               	dw	65535	; assembler added errata NOP
 12080  0016AC  BC3F               	btfsc	___fladd@signs^0,6,c
 12081  0016AE  EF5B  F00B         	goto	u4481
 12082  0016B2  EF5E  F00B         	goto	u4480
 12083  0016B6                     u4481:
 12084  0016B6  FFFF               	dw	65535	; assembler added errata NOP
 12085  0016B8  EFAB  F00B         	goto	l4019
 12086  0016BC                     u4480:
 12087  0016BC  FFFF               	dw	65535	; assembler added errata NOP
 12088  0016BE  5041               	movf	___fladd@bexp^0,w,c
 12089  0016C0  A4D8               	btfss	status,2,c
 12090  0016C2  EF65  F00B         	goto	u4491
 12091  0016C6  EF68  F00B         	goto	u4490
 12092  0016CA                     u4491:
 12093  0016CA  FFFF               	dw	65535	; assembler added errata NOP
 12094  0016CC  EF73  F00B         	goto	l4001
 12095  0016D0                     u4490:
 12096  0016D0  FFFF               	dw	65535	; assembler added errata NOP
 12097  0016D2  0E00               	movlw	0
 12098  0016D4  6E33               	movwf	?___fladd^0,c
 12099  0016D6  0E00               	movlw	0
 12100  0016D8  6E34               	movwf	(?___fladd+1)^0,c
 12101  0016DA  0E00               	movlw	0
 12102  0016DC  6E35               	movwf	(?___fladd+2)^0,c
 12103  0016DE  0E00               	movlw	0
 12104  0016E0  6E36               	movwf	(?___fladd+3)^0,c
 12105  0016E2  EF02  F00D         	goto	l836
 12106  0016E6                     l4001:
 12107  0016E6  FFFF               	dw	65535	; assembler added errata NOP
 12108  0016E8  5037               	movf	___fladd@a^0,w,c
 12109  0016EA  2633               	addwf	___fladd@b^0,f,c
 12110  0016EC  5038               	movf	(___fladd@a+1)^0,w,c
 12111  0016EE  2234               	addwfc	(___fladd@b+1)^0,f,c
 12112  0016F0  5039               	movf	(___fladd@a+2)^0,w,c
 12113  0016F2  2235               	addwfc	(___fladd@b+2)^0,f,c
 12114  0016F4  503A               	movf	(___fladd@a+3)^0,w,c
 12115  0016F6  2236               	addwfc	(___fladd@b+3)^0,f,c
 12116  0016F8  A036               	btfss	(___fladd@b+3)^0,0,c
 12117  0016FA  EF81  F00B         	goto	u4501
 12118  0016FE  EF84  F00B         	goto	u4500
 12119  001702                     u4501:
 12120  001702  FFFF               	dw	65535	; assembler added errata NOP
 12121  001704  EF4F  F00C         	goto	l4055
 12122  001708                     u4500:
 12123  001708  FFFF               	dw	65535	; assembler added errata NOP
 12124  00170A  A042               	btfss	___fladd@grs^0,0,c
 12125  00170C  EF8A  F00B         	goto	u4511
 12126  001710  EF8D  F00B         	goto	u4510
 12127  001714                     u4511:
 12128  001714  FFFF               	dw	65535	; assembler added errata NOP
 12129  001716  EF94  F00B         	goto	l4009
 12130  00171A                     u4510:
 12131  00171A  FFFF               	dw	65535	; assembler added errata NOP
 12132  00171C  90D8               	bcf	status,0,c
 12133  00171E  3042               	rrcf	___fladd@grs^0,w,c
 12134  001720  0901               	iorlw	1
 12135  001722  6E42               	movwf	___fladd@grs^0,c
 12136  001724  EF97  F00B         	goto	l4011
 12137  001728                     l4009:
 12138  001728  FFFF               	dw	65535	; assembler added errata NOP
 12139  00172A  90D8               	bcf	status,0,c
 12140  00172C  3242               	rrcf	___fladd@grs^0,f,c
 12141  00172E                     l4011:
 12142  00172E  FFFF               	dw	65535	; assembler added errata NOP
 12143  001730  A033               	btfss	___fladd@b^0,0,c
 12144  001732  EF9D  F00B         	goto	u4521
 12145  001736  EFA0  F00B         	goto	u4520
 12146  00173A                     u4521:
 12147  00173A  FFFF               	dw	65535	; assembler added errata NOP
 12148  00173C  EFA2  F00B         	goto	l4015
 12149  001740                     u4520:
 12150  001740  FFFF               	dw	65535	; assembler added errata NOP
 12151  001742  8E42               	bsf	___fladd@grs^0,7,c
 12152  001744                     l4015:
 12153  001744  FFFF               	dw	65535	; assembler added errata NOP
 12154  001746  3436               	rlcf	(___fladd@b+3)^0,w,c
 12155  001748  3236               	rrcf	(___fladd@b+3)^0,f,c
 12156  00174A  3235               	rrcf	(___fladd@b+2)^0,f,c
 12157  00174C  3234               	rrcf	(___fladd@b+1)^0,f,c
 12158  00174E  3233               	rrcf	___fladd@b^0,f,c
 12159  001750  2A41               	incf	___fladd@bexp^0,f,c
 12160  001752  EF4F  F00C         	goto	l4055
 12161  001756                     l4019:
 12162  001756  FFFF               	dw	65535	; assembler added errata NOP
 12163  001758  5037               	movf	___fladd@a^0,w,c
 12164  00175A  5C33               	subwf	___fladd@b^0,w,c
 12165  00175C  5038               	movf	(___fladd@a+1)^0,w,c
 12166  00175E  5834               	subwfb	(___fladd@b+1)^0,w,c
 12167  001760  5039               	movf	(___fladd@a+2)^0,w,c
 12168  001762  5835               	subwfb	(___fladd@b+2)^0,w,c
 12169  001764  5036               	movf	(___fladd@b+3)^0,w,c
 12170  001766  0A80               	xorlw	128
 12171  001768  6E3B               	movwf	??___fladd^0,c
 12172  00176A  503A               	movf	(___fladd@a+3)^0,w,c
 12173  00176C  0A80               	xorlw	128
 12174  00176E  583B               	subwfb	??___fladd^0,w,c
 12175  001770  B0D8               	btfsc	status,0,c
 12176  001772  EFBD  F00B         	goto	u4531
 12177  001776  EFC0  F00B         	goto	u4530
 12178  00177A                     u4531:
 12179  00177A  FFFF               	dw	65535	; assembler added errata NOP
 12180  00177C  EFEE  F00B         	goto	l4029
 12181  001780                     u4530:
 12182  001780  FFFF               	dw	65535	; assembler added errata NOP
 12183  001782  5033               	movf	___fladd@b^0,w,c
 12184  001784  5C37               	subwf	___fladd@a^0,w,c
 12185  001786  6E3B               	movwf	??___fladd^0,c
 12186  001788  5034               	movf	(___fladd@b+1)^0,w,c
 12187  00178A  5838               	subwfb	(___fladd@a+1)^0,w,c
 12188  00178C  6E3C               	movwf	(??___fladd+1)^0,c
 12189  00178E  5035               	movf	(___fladd@b+2)^0,w,c
 12190  001790  5839               	subwfb	(___fladd@a+2)^0,w,c
 12191  001792  6E3D               	movwf	(??___fladd+2)^0,c
 12192  001794  5036               	movf	(___fladd@b+3)^0,w,c
 12193  001796  583A               	subwfb	(___fladd@a+3)^0,w,c
 12194  001798  6E3E               	movwf	(??___fladd+3)^0,c
 12195  00179A  0EFF               	movlw	255
 12196  00179C  243B               	addwf	??___fladd^0,w,c
 12197  00179E  6E33               	movwf	___fladd@b^0,c
 12198  0017A0  0EFF               	movlw	255
 12199  0017A2  203C               	addwfc	(??___fladd+1)^0,w,c
 12200  0017A4  6E34               	movwf	(___fladd@b+1)^0,c
 12201  0017A6  0EFF               	movlw	255
 12202  0017A8  203D               	addwfc	(??___fladd+2)^0,w,c
 12203  0017AA  6E35               	movwf	(___fladd@b+2)^0,c
 12204  0017AC  0EFF               	movlw	255
 12205  0017AE  203E               	addwfc	(??___fladd+3)^0,w,c
 12206  0017B0  6E36               	movwf	(___fladd@b+3)^0,c
 12207  0017B2  0E80               	movlw	128
 12208  0017B4  1A3F               	xorwf	___fladd@signs^0,f,c
 12209  0017B6  6C42               	negf	___fladd@grs^0,c
 12210  0017B8  5042               	movf	___fladd@grs^0,w,c
 12211  0017BA  A4D8               	btfss	status,2,c
 12212  0017BC  EFE2  F00B         	goto	u4541
 12213  0017C0  EFE5  F00B         	goto	u4540
 12214  0017C4                     u4541:
 12215  0017C4  FFFF               	dw	65535	; assembler added errata NOP
 12216  0017C6  EFF7  F00B         	goto	l844
 12217  0017CA                     u4540:
 12218  0017CA  FFFF               	dw	65535	; assembler added errata NOP
 12219  0017CC  0E01               	movlw	1
 12220  0017CE  2633               	addwf	___fladd@b^0,f,c
 12221  0017D0  0E00               	movlw	0
 12222  0017D2  2234               	addwfc	(___fladd@b+1)^0,f,c
 12223  0017D4  2235               	addwfc	(___fladd@b+2)^0,f,c
 12224  0017D6  2236               	addwfc	(___fladd@b+3)^0,f,c
 12225  0017D8  EFF7  F00B         	goto	l844
 12226  0017DC                     l4029:
 12227  0017DC  FFFF               	dw	65535	; assembler added errata NOP
 12228  0017DE  5037               	movf	___fladd@a^0,w,c
 12229  0017E0  5E33               	subwf	___fladd@b^0,f,c
 12230  0017E2  5038               	movf	(___fladd@a+1)^0,w,c
 12231  0017E4  5A34               	subwfb	(___fladd@b+1)^0,f,c
 12232  0017E6  5039               	movf	(___fladd@a+2)^0,w,c
 12233  0017E8  5A35               	subwfb	(___fladd@b+2)^0,f,c
 12234  0017EA  503A               	movf	(___fladd@a+3)^0,w,c
 12235  0017EC  5A36               	subwfb	(___fladd@b+3)^0,f,c
 12236  0017EE                     l844:
 12237  0017EE  FFFF               	dw	65535	; assembler added errata NOP
 12238  0017F0  5033               	movf	___fladd@b^0,w,c
 12239  0017F2  1034               	iorwf	(___fladd@b+1)^0,w,c
 12240  0017F4  1035               	iorwf	(___fladd@b+2)^0,w,c
 12241  0017F6  1036               	iorwf	(___fladd@b+3)^0,w,c
 12242  0017F8  A4D8               	btfss	status,2,c
 12243  0017FA  EF01  F00C         	goto	u4551
 12244  0017FE  EF04  F00C         	goto	u4550
 12245  001802                     u4551:
 12246  001802  FFFF               	dw	65535	; assembler added errata NOP
 12247  001804  EF46  F00C         	goto	l4053
 12248  001808                     u4550:
 12249  001808  FFFF               	dw	65535	; assembler added errata NOP
 12250  00180A  5042               	movf	___fladd@grs^0,w,c
 12251  00180C  A4D8               	btfss	status,2,c
 12252  00180E  EF0B  F00C         	goto	u4561
 12253  001812  EF0E  F00C         	goto	u4560
 12254  001816                     u4561:
 12255  001816  FFFF               	dw	65535	; assembler added errata NOP
 12256  001818  EF46  F00C         	goto	l4053
 12257  00181C                     u4560:
 12258  00181C  FFFF               	dw	65535	; assembler added errata NOP
 12259  00181E  0E00               	movlw	0
 12260  001820  6E33               	movwf	?___fladd^0,c
 12261  001822  0E00               	movlw	0
 12262  001824  6E34               	movwf	(?___fladd+1)^0,c
 12263  001826  0E00               	movlw	0
 12264  001828  6E35               	movwf	(?___fladd+2)^0,c
 12265  00182A  0E00               	movlw	0
 12266  00182C  6E36               	movwf	(?___fladd+3)^0,c
 12267  00182E  EF02  F00D         	goto	l836
 12268  001832                     l4037:
 12269  001832  FFFF               	dw	65535	; assembler added errata NOP
 12270  001834  90D8               	bcf	status,0,c
 12271  001836  3633               	rlcf	___fladd@b^0,f,c
 12272  001838  3634               	rlcf	(___fladd@b+1)^0,f,c
 12273  00183A  3635               	rlcf	(___fladd@b+2)^0,f,c
 12274  00183C  3636               	rlcf	(___fladd@b+3)^0,f,c
 12275  00183E  AE42               	btfss	___fladd@grs^0,7,c
 12276  001840  EF24  F00C         	goto	u4571
 12277  001844  EF27  F00C         	goto	u4570
 12278  001848                     u4571:
 12279  001848  FFFF               	dw	65535	; assembler added errata NOP
 12280  00184A  EF29  F00C         	goto	l4043
 12281  00184E                     u4570:
 12282  00184E  FFFF               	dw	65535	; assembler added errata NOP
 12283  001850  8033               	bsf	___fladd@b^0,0,c
 12284  001852                     l4043:
 12285  001852  FFFF               	dw	65535	; assembler added errata NOP
 12286  001854  A042               	btfss	___fladd@grs^0,0,c
 12287  001856  EF2F  F00C         	goto	u4581
 12288  00185A  EF32  F00C         	goto	u4580
 12289  00185E                     u4581:
 12290  00185E  FFFF               	dw	65535	; assembler added errata NOP
 12291  001860  EF37  F00C         	goto	l4047
 12292  001864                     u4580:
 12293  001864  FFFF               	dw	65535	; assembler added errata NOP
 12294  001866  80D8               	bsf	status,0,c
 12295  001868  3642               	rlcf	___fladd@grs^0,f,c
 12296  00186A  EF3A  F00C         	goto	l4049
 12297  00186E                     l4047:
 12298  00186E  FFFF               	dw	65535	; assembler added errata NOP
 12299  001870  90D8               	bcf	status,0,c
 12300  001872  3642               	rlcf	___fladd@grs^0,f,c
 12301  001874                     l4049:
 12302  001874  FFFF               	dw	65535	; assembler added errata NOP
 12303  001876  5041               	movf	___fladd@bexp^0,w,c
 12304  001878  B4D8               	btfsc	status,2,c
 12305  00187A  EF41  F00C         	goto	u4591
 12306  00187E  EF44  F00C         	goto	u4590
 12307  001882                     u4591:
 12308  001882  FFFF               	dw	65535	; assembler added errata NOP
 12309  001884  EF46  F00C         	goto	l4053
 12310  001888                     u4590:
 12311  001888  FFFF               	dw	65535	; assembler added errata NOP
 12312  00188A  0641               	decf	___fladd@bexp^0,f,c
 12313  00188C                     l4053:
 12314  00188C  FFFF               	dw	65535	; assembler added errata NOP
 12315  00188E  AE35               	btfss	(___fladd@b+2)^0,7,c
 12316  001890  EF4C  F00C         	goto	u4601
 12317  001894  EF4F  F00C         	goto	u4600
 12318  001898                     u4601:
 12319  001898  FFFF               	dw	65535	; assembler added errata NOP
 12320  00189A  EF19  F00C         	goto	l4037
 12321  00189E                     u4600:
 12322  00189E                     l4055:
 12323  00189E  FFFF               	dw	65535	; assembler added errata NOP
 12324  0018A0  0E00               	movlw	0
 12325  0018A2  6E40               	movwf	___fladd@aexp^0,c
 12326  0018A4  AE42               	btfss	___fladd@grs^0,7,c
 12327  0018A6  EF57  F00C         	goto	u4611
 12328  0018AA  EF5A  F00C         	goto	u4610
 12329  0018AE                     u4611:
 12330  0018AE  FFFF               	dw	65535	; assembler added errata NOP
 12331  0018B0  EF79  F00C         	goto	l853
 12332  0018B4                     u4610:
 12333  0018B4  FFFF               	dw	65535	; assembler added errata NOP
 12334  0018B6  C042  F03B         	movff	___fladd@grs,??___fladd
 12335  0018BA  0E7F               	movlw	127
 12336  0018BC  163B               	andwf	??___fladd^0,f,c
 12337  0018BE  B4D8               	btfsc	status,2,c
 12338  0018C0  EF64  F00C         	goto	u4621
 12339  0018C4  EF67  F00C         	goto	u4620
 12340  0018C8                     u4621:
 12341  0018C8  FFFF               	dw	65535	; assembler added errata NOP
 12342  0018CA  EF6D  F00C         	goto	l854
 12343  0018CE                     u4620:
 12344  0018CE  FFFF               	dw	65535	; assembler added errata NOP
 12345  0018D0                     l4061:
 12346  0018D0  FFFF               	dw	65535	; assembler added errata NOP
 12347  0018D2  0E01               	movlw	1
 12348  0018D4  6E40               	movwf	___fladd@aexp^0,c
 12349  0018D6  EF79  F00C         	goto	l853
 12350  0018DA                     l854:
 12351  0018DA  FFFF               	dw	65535	; assembler added errata NOP
 12352  0018DC  A033               	btfss	___fladd@b^0,0,c
 12353  0018DE  EF73  F00C         	goto	u4631
 12354  0018E2  EF76  F00C         	goto	u4630
 12355  0018E6                     u4631:
 12356  0018E6  FFFF               	dw	65535	; assembler added errata NOP
 12357  0018E8  EF79  F00C         	goto	l853
 12358  0018EC                     u4630:
 12359  0018EC  FFFF               	dw	65535	; assembler added errata NOP
 12360  0018EE  EF68  F00C         	goto	l4061
 12361  0018F2                     l853:
 12362  0018F2  FFFF               	dw	65535	; assembler added errata NOP
 12363  0018F4  5040               	movf	___fladd@aexp^0,w,c
 12364  0018F6  B4D8               	btfsc	status,2,c
 12365  0018F8  EF80  F00C         	goto	u4641
 12366  0018FC  EF83  F00C         	goto	u4640
 12367  001900                     u4641:
 12368  001900  FFFF               	dw	65535	; assembler added errata NOP
 12369  001902  EFB3  F00C         	goto	l4073
 12370  001906                     u4640:
 12371  001906  FFFF               	dw	65535	; assembler added errata NOP
 12372  001908  0E01               	movlw	1
 12373  00190A  2633               	addwf	___fladd@b^0,f,c
 12374  00190C  0E00               	movlw	0
 12375  00190E  2234               	addwfc	(___fladd@b+1)^0,f,c
 12376  001910  2235               	addwfc	(___fladd@b+2)^0,f,c
 12377  001912  2236               	addwfc	(___fladd@b+3)^0,f,c
 12378  001914  A036               	btfss	(___fladd@b+3)^0,0,c
 12379  001916  EF8F  F00C         	goto	u4651
 12380  00191A  EF92  F00C         	goto	u4650
 12381  00191E                     u4651:
 12382  00191E  FFFF               	dw	65535	; assembler added errata NOP
 12383  001920  EFB3  F00C         	goto	l4073
 12384  001924                     u4650:
 12385  001924  FFFF               	dw	65535	; assembler added errata NOP
 12386  001926  C033  F03B         	movff	___fladd@b,??___fladd
 12387  00192A  C034  F03C         	movff	___fladd@b+1,??___fladd+1
 12388  00192E  C035  F03D         	movff	___fladd@b+2,??___fladd+2
 12389  001932  C036  F03E         	movff	___fladd@b+3,??___fladd+3
 12390  001936  343E               	rlcf	(??___fladd+3)^0,w,c
 12391  001938  323E               	rrcf	(??___fladd+3)^0,f,c
 12392  00193A  323D               	rrcf	(??___fladd+2)^0,f,c
 12393  00193C  323C               	rrcf	(??___fladd+1)^0,f,c
 12394  00193E  323B               	rrcf	??___fladd^0,f,c
 12395  001940  C03B  F033         	movff	??___fladd,___fladd@b
 12396  001944  C03C  F034         	movff	??___fladd+1,___fladd@b+1
 12397  001948  C03D  F035         	movff	??___fladd+2,___fladd@b+2
 12398  00194C  C03E  F036         	movff	??___fladd+3,___fladd@b+3
 12399  001950  2841               	incf	___fladd@bexp^0,w,c
 12400  001952  B4D8               	btfsc	status,2,c
 12401  001954  EFAE  F00C         	goto	u4661
 12402  001958  EFB1  F00C         	goto	u4660
 12403  00195C                     u4661:
 12404  00195C  FFFF               	dw	65535	; assembler added errata NOP
 12405  00195E  EFB3  F00C         	goto	l4073
 12406  001962                     u4660:
 12407  001962  FFFF               	dw	65535	; assembler added errata NOP
 12408  001964  2A41               	incf	___fladd@bexp^0,f,c
 12409  001966                     l4073:
 12410  001966  FFFF               	dw	65535	; assembler added errata NOP
 12411  001968  2841               	incf	___fladd@bexp^0,w,c
 12412  00196A  B4D8               	btfsc	status,2,c
 12413  00196C  EFBA  F00C         	goto	u4671
 12414  001970  EFBD  F00C         	goto	u4670
 12415  001974                     u4671:
 12416  001974  FFFF               	dw	65535	; assembler added errata NOP
 12417  001976  EFC7  F00C         	goto	l4077
 12418  00197A                     u4670:
 12419  00197A  FFFF               	dw	65535	; assembler added errata NOP
 12420  00197C  5041               	movf	___fladd@bexp^0,w,c
 12421  00197E  A4D8               	btfss	status,2,c
 12422  001980  EFC4  F00C         	goto	u4681
 12423  001984  EFC7  F00C         	goto	u4680
 12424  001988                     u4681:
 12425  001988  FFFF               	dw	65535	; assembler added errata NOP
 12426  00198A  EFDC  F00C         	goto	l4081
 12427  00198E                     u4680:
 12428  00198E                     l4077:
 12429  00198E  FFFF               	dw	65535	; assembler added errata NOP
 12430  001990  0E00               	movlw	0
 12431  001992  6E33               	movwf	___fladd@b^0,c
 12432  001994  0E00               	movlw	0
 12433  001996  6E34               	movwf	(___fladd@b+1)^0,c
 12434  001998  0E00               	movlw	0
 12435  00199A  6E35               	movwf	(___fladd@b+2)^0,c
 12436  00199C  0E00               	movlw	0
 12437  00199E  6E36               	movwf	(___fladd@b+3)^0,c
 12438  0019A0  5041               	movf	___fladd@bexp^0,w,c
 12439  0019A2  A4D8               	btfss	status,2,c
 12440  0019A4  EFD6  F00C         	goto	u4691
 12441  0019A8  EFD9  F00C         	goto	u4690
 12442  0019AC                     u4691:
 12443  0019AC  FFFF               	dw	65535	; assembler added errata NOP
 12444  0019AE  EFDC  F00C         	goto	l4081
 12445  0019B2                     u4690:
 12446  0019B2  FFFF               	dw	65535	; assembler added errata NOP
 12447  0019B4  0E00               	movlw	0
 12448  0019B6  6E3F               	movwf	___fladd@signs^0,c
 12449  0019B8                     l4081:
 12450  0019B8  FFFF               	dw	65535	; assembler added errata NOP
 12451  0019BA  A041               	btfss	___fladd@bexp^0,0,c
 12452  0019BC  EFE2  F00C         	goto	u4701
 12453  0019C0  EFE5  F00C         	goto	u4700
 12454  0019C4                     u4701:
 12455  0019C4  FFFF               	dw	65535	; assembler added errata NOP
 12456  0019C6  EFE9  F00C         	goto	l4085
 12457  0019CA                     u4700:
 12458  0019CA  FFFF               	dw	65535	; assembler added errata NOP
 12459  0019CC  8E35               	bsf	(___fladd@b+2)^0,7,c
 12460  0019CE  EFEB  F00C         	goto	l4087
 12461  0019D2                     l4085:
 12462  0019D2  FFFF               	dw	65535	; assembler added errata NOP
 12463  0019D4  9E35               	bcf	(___fladd@b+2)^0,7,c
 12464  0019D6                     l4087:
 12465  0019D6  FFFF               	dw	65535	; assembler added errata NOP
 12466  0019D8  90D8               	bcf	status,0,c
 12467  0019DA  3041               	rrcf	___fladd@bexp^0,w,c
 12468  0019DC  6E36               	movwf	(___fladd@b+3)^0,c
 12469  0019DE  AE3F               	btfss	___fladd@signs^0,7,c
 12470  0019E0  EFF4  F00C         	goto	u4711
 12471  0019E4  EFF7  F00C         	goto	u4710
 12472  0019E8                     u4711:
 12473  0019E8  FFFF               	dw	65535	; assembler added errata NOP
 12474  0019EA  EFF9  F00C         	goto	l4093
 12475  0019EE                     u4710:
 12476  0019EE  FFFF               	dw	65535	; assembler added errata NOP
 12477  0019F0  8E36               	bsf	(___fladd@b+3)^0,7,c
 12478  0019F2                     l4093:
 12479  0019F2  FFFF               	dw	65535	; assembler added errata NOP
 12480  0019F4  C033  F033         	movff	___fladd@b,?___fladd
 12481  0019F8  C034  F034         	movff	___fladd@b+1,?___fladd+1
 12482  0019FC  C035  F035         	movff	___fladd@b+2,?___fladd+2
 12483  001A00  C036  F036         	movff	___fladd@b+3,?___fladd+3
 12484  001A04                     l836:
 12485  001A04  FFFF               	dw	65535	; assembler added errata NOP
 12486  001A06  0012               	return		;funcret
 12487  001A08  FFFF               	dw	65535	; errata NOP
 12488  001A0A                     __end_of___fladd:
 12489                           	callstack 0
 12490                           
 12491 ;; *************** function ___flneg *****************
 12492 ;; Defined at:
 12493 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
 12494 ;; Parameters:    Size  Location     Type
 12495 ;;  f1              4    0[COMRAM] unsigned char 
 12496 ;; Auto vars:     Size  Location     Type
 12497 ;;		None
 12498 ;; Return value:  Size  Location     Type
 12499 ;;                  4    0[COMRAM] unsigned char 
 12500 ;; Registers used:
 12501 ;;		wreg, status,2, status,0
 12502 ;; Tracked objects:
 12503 ;;		On entry : 0/0
 12504 ;;		On exit  : 0/0
 12505 ;;		Unchanged: 0/0
 12506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12507 ;;      Params:         4       0       0       0       0       0       0
 12508 ;;      Locals:         0       0       0       0       0       0       0
 12509 ;;      Temps:          0       0       0       0       0       0       0
 12510 ;;      Totals:         4       0       0       0       0       0       0
 12511 ;;Total ram usage:        4 bytes
 12512 ;; Hardware stack levels used:    1
 12513 ;; Hardware stack levels required when called:    1
 12514 ;; This function calls:
 12515 ;;		Nothing
 12516 ;; This function is called by:
 12517 ;;		_roundf
 12518 ;; This function uses a non-reentrant model
 12519 ;;
 12520                           
 12521                           	psect	text50
 12522  006FB4                     __ptext50:
 12523                           	callstack 0
 12524  006FB4                     ___flneg:
 12525                           	callstack 0
 12526  006FB4  FFFF               	dw	65535	; assembler added errata NOP
 12527  006FB6  5001               	movf	___flneg@f1^0,w,c
 12528  006FB8  1002               	iorwf	(___flneg@f1+1)^0,w,c
 12529  006FBA  1003               	iorwf	(___flneg@f1+2)^0,w,c
 12530  006FBC  1004               	iorwf	(___flneg@f1+3)^0,w,c
 12531  006FBE  B4D8               	btfsc	status,2,c
 12532  006FC0  EFE4  F037         	goto	u5681
 12533  006FC4  EFE7  F037         	goto	u5680
 12534  006FC8                     u5681:
 12535  006FC8  FFFF               	dw	65535	; assembler added errata NOP
 12536  006FCA  EFF0  F037         	goto	l4731
 12537  006FCE                     u5680:
 12538  006FCE  FFFF               	dw	65535	; assembler added errata NOP
 12539  006FD0  0E00               	movlw	0
 12540  006FD2  1A01               	xorwf	___flneg@f1^0,f,c
 12541  006FD4  0E00               	movlw	0
 12542  006FD6  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 12543  006FD8  0E00               	movlw	0
 12544  006FDA  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 12545  006FDC  0E80               	movlw	128
 12546  006FDE  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 12547  006FE0                     l4731:
 12548  006FE0  FFFF               	dw	65535	; assembler added errata NOP
 12549  006FE2  C001  F001         	movff	___flneg@f1,?___flneg
 12550  006FE6  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 12551  006FEA  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 12552  006FEE  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 12553  006FF2  0012               	return		;funcret
 12554  006FF4  FFFF               	dw	65535	; errata NOP
 12555  006FF6                     __end_of___flneg:
 12556                           	callstack 0
 12557                           
 12558 ;; *************** function ___flmul *****************
 12559 ;; Defined at:
 12560 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
 12561 ;; Parameters:    Size  Location     Type
 12562 ;;  b               4    0[COMRAM] unsigned char 
 12563 ;;  a               4    4[COMRAM] unsigned char 
 12564 ;; Auto vars:     Size  Location     Type
 12565 ;;  prod            4   19[COMRAM] struct .
 12566 ;;  grs             4   13[COMRAM] unsigned long 
 12567 ;;  temp            2   23[COMRAM] struct .
 12568 ;;  bexp            1   18[COMRAM] unsigned char 
 12569 ;;  aexp            1   17[COMRAM] unsigned char 
 12570 ;;  sign            1   12[COMRAM] unsigned char 
 12571 ;; Return value:  Size  Location     Type
 12572 ;;                  4    0[COMRAM] unsigned char 
 12573 ;; Registers used:
 12574 ;;		wreg, status,2, status,0, prodl, prodh
 12575 ;; Tracked objects:
 12576 ;;		On entry : 0/0
 12577 ;;		On exit  : 0/0
 12578 ;;		Unchanged: 0/0
 12579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12580 ;;      Params:         8       0       0       0       0       0       0
 12581 ;;      Locals:        13       0       0       0       0       0       0
 12582 ;;      Temps:          4       0       0       0       0       0       0
 12583 ;;      Totals:        25       0       0       0       0       0       0
 12584 ;;Total ram usage:       25 bytes
 12585 ;; Hardware stack levels used:    1
 12586 ;; Hardware stack levels required when called:    1
 12587 ;; This function calls:
 12588 ;;		Nothing
 12589 ;; This function is called by:
 12590 ;;		_init_timer_2
 12591 ;;		_update_pwm_duty_ccp1
 12592 ;;		_roundf
 12593 ;; This function uses a non-reentrant model
 12594 ;;
 12595                           
 12596                           	psect	text51
 12597  001A0A                     __ptext51:
 12598                           	callstack 0
 12599  001A0A                     ___flmul:
 12600                           	callstack 0
 12601  001A0A  FFFF               	dw	65535	; assembler added errata NOP
 12602  001A0C  5004               	movf	(___flmul@b+3)^0,w,c
 12603  001A0E  0B80               	andlw	128
 12604  001A10  6E0D               	movwf	___flmul@sign^0,c
 12605  001A12  5004               	movf	(___flmul@b+3)^0,w,c
 12606  001A14  2404               	addwf	(___flmul@b+3)^0,w,c
 12607  001A16  6E13               	movwf	___flmul@bexp^0,c
 12608  001A18  AE03               	btfss	(___flmul@b+2)^0,7,c
 12609  001A1A  EF11  F00D         	goto	u5441
 12610  001A1E  EF14  F00D         	goto	u5440
 12611  001A22                     u5441:
 12612  001A22  FFFF               	dw	65535	; assembler added errata NOP
 12613  001A24  EF16  F00D         	goto	l4575
 12614  001A28                     u5440:
 12615  001A28  FFFF               	dw	65535	; assembler added errata NOP
 12616  001A2A  8013               	bsf	___flmul@bexp^0,0,c
 12617  001A2C                     l4575:
 12618  001A2C  FFFF               	dw	65535	; assembler added errata NOP
 12619  001A2E  5013               	movf	___flmul@bexp^0,w,c
 12620  001A30  B4D8               	btfsc	status,2,c
 12621  001A32  EF1D  F00D         	goto	u5451
 12622  001A36  EF20  F00D         	goto	u5450
 12623  001A3A                     u5451:
 12624  001A3A  FFFF               	dw	65535	; assembler added errata NOP
 12625  001A3C  EF37  F00D         	goto	l4583
 12626  001A40                     u5450:
 12627  001A40  FFFF               	dw	65535	; assembler added errata NOP
 12628  001A42  2813               	incf	___flmul@bexp^0,w,c
 12629  001A44  A4D8               	btfss	status,2,c
 12630  001A46  EF27  F00D         	goto	u5461
 12631  001A4A  EF2A  F00D         	goto	u5460
 12632  001A4E                     u5461:
 12633  001A4E  FFFF               	dw	65535	; assembler added errata NOP
 12634  001A50  EF33  F00D         	goto	l4581
 12635  001A54                     u5460:
 12636  001A54  FFFF               	dw	65535	; assembler added errata NOP
 12637  001A56  0E00               	movlw	0
 12638  001A58  6E01               	movwf	___flmul@b^0,c
 12639  001A5A  0E00               	movlw	0
 12640  001A5C  6E02               	movwf	(___flmul@b+1)^0,c
 12641  001A5E  0E00               	movlw	0
 12642  001A60  6E03               	movwf	(___flmul@b+2)^0,c
 12643  001A62  0E00               	movlw	0
 12644  001A64  6E04               	movwf	(___flmul@b+3)^0,c
 12645  001A66                     l4581:
 12646  001A66  FFFF               	dw	65535	; assembler added errata NOP
 12647  001A68  8E03               	bsf	(___flmul@b+2)^0,7,c
 12648  001A6A  EF40  F00D         	goto	l4585
 12649  001A6E                     l4583:
 12650  001A6E  FFFF               	dw	65535	; assembler added errata NOP
 12651  001A70  0E00               	movlw	0
 12652  001A72  6E01               	movwf	___flmul@b^0,c
 12653  001A74  0E00               	movlw	0
 12654  001A76  6E02               	movwf	(___flmul@b+1)^0,c
 12655  001A78  0E00               	movlw	0
 12656  001A7A  6E03               	movwf	(___flmul@b+2)^0,c
 12657  001A7C  0E00               	movlw	0
 12658  001A7E  6E04               	movwf	(___flmul@b+3)^0,c
 12659  001A80                     l4585:
 12660  001A80  FFFF               	dw	65535	; assembler added errata NOP
 12661  001A82  5008               	movf	(___flmul@a+3)^0,w,c
 12662  001A84  0B80               	andlw	128
 12663  001A86  1A0D               	xorwf	___flmul@sign^0,f,c
 12664  001A88  5008               	movf	(___flmul@a+3)^0,w,c
 12665  001A8A  2408               	addwf	(___flmul@a+3)^0,w,c
 12666  001A8C  6E12               	movwf	___flmul@aexp^0,c
 12667  001A8E  AE07               	btfss	(___flmul@a+2)^0,7,c
 12668  001A90  EF4C  F00D         	goto	u5471
 12669  001A94  EF4F  F00D         	goto	u5470
 12670  001A98                     u5471:
 12671  001A98  FFFF               	dw	65535	; assembler added errata NOP
 12672  001A9A  EF51  F00D         	goto	l4593
 12673  001A9E                     u5470:
 12674  001A9E  FFFF               	dw	65535	; assembler added errata NOP
 12675  001AA0  8012               	bsf	___flmul@aexp^0,0,c
 12676  001AA2                     l4593:
 12677  001AA2  FFFF               	dw	65535	; assembler added errata NOP
 12678  001AA4  5012               	movf	___flmul@aexp^0,w,c
 12679  001AA6  B4D8               	btfsc	status,2,c
 12680  001AA8  EF58  F00D         	goto	u5481
 12681  001AAC  EF5B  F00D         	goto	u5480
 12682  001AB0                     u5481:
 12683  001AB0  FFFF               	dw	65535	; assembler added errata NOP
 12684  001AB2  EF72  F00D         	goto	l4601
 12685  001AB6                     u5480:
 12686  001AB6  FFFF               	dw	65535	; assembler added errata NOP
 12687  001AB8  2812               	incf	___flmul@aexp^0,w,c
 12688  001ABA  A4D8               	btfss	status,2,c
 12689  001ABC  EF62  F00D         	goto	u5491
 12690  001AC0  EF65  F00D         	goto	u5490
 12691  001AC4                     u5491:
 12692  001AC4  FFFF               	dw	65535	; assembler added errata NOP
 12693  001AC6  EF6E  F00D         	goto	l4599
 12694  001ACA                     u5490:
 12695  001ACA  FFFF               	dw	65535	; assembler added errata NOP
 12696  001ACC  0E00               	movlw	0
 12697  001ACE  6E05               	movwf	___flmul@a^0,c
 12698  001AD0  0E00               	movlw	0
 12699  001AD2  6E06               	movwf	(___flmul@a+1)^0,c
 12700  001AD4  0E00               	movlw	0
 12701  001AD6  6E07               	movwf	(___flmul@a+2)^0,c
 12702  001AD8  0E00               	movlw	0
 12703  001ADA  6E08               	movwf	(___flmul@a+3)^0,c
 12704  001ADC                     l4599:
 12705  001ADC  FFFF               	dw	65535	; assembler added errata NOP
 12706  001ADE  8E07               	bsf	(___flmul@a+2)^0,7,c
 12707  001AE0  EF7B  F00D         	goto	l913
 12708  001AE4                     l4601:
 12709  001AE4  FFFF               	dw	65535	; assembler added errata NOP
 12710  001AE6  0E00               	movlw	0
 12711  001AE8  6E05               	movwf	___flmul@a^0,c
 12712  001AEA  0E00               	movlw	0
 12713  001AEC  6E06               	movwf	(___flmul@a+1)^0,c
 12714  001AEE  0E00               	movlw	0
 12715  001AF0  6E07               	movwf	(___flmul@a+2)^0,c
 12716  001AF2  0E00               	movlw	0
 12717  001AF4  6E08               	movwf	(___flmul@a+3)^0,c
 12718  001AF6                     l913:
 12719  001AF6  FFFF               	dw	65535	; assembler added errata NOP
 12720  001AF8  5012               	movf	___flmul@aexp^0,w,c
 12721  001AFA  B4D8               	btfsc	status,2,c
 12722  001AFC  EF82  F00D         	goto	u5501
 12723  001B00  EF85  F00D         	goto	u5500
 12724  001B04                     u5501:
 12725  001B04  FFFF               	dw	65535	; assembler added errata NOP
 12726  001B06  EF8F  F00D         	goto	l4605
 12727  001B0A                     u5500:
 12728  001B0A  FFFF               	dw	65535	; assembler added errata NOP
 12729  001B0C  5013               	movf	___flmul@bexp^0,w,c
 12730  001B0E  A4D8               	btfss	status,2,c
 12731  001B10  EF8C  F00D         	goto	u5511
 12732  001B14  EF8F  F00D         	goto	u5510
 12733  001B18                     u5511:
 12734  001B18  FFFF               	dw	65535	; assembler added errata NOP
 12735  001B1A  EF9A  F00D         	goto	l4609
 12736  001B1E                     u5510:
 12737  001B1E                     l4605:
 12738  001B1E  FFFF               	dw	65535	; assembler added errata NOP
 12739  001B20  0E00               	movlw	0
 12740  001B22  6E01               	movwf	?___flmul^0,c
 12741  001B24  0E00               	movlw	0
 12742  001B26  6E02               	movwf	(?___flmul+1)^0,c
 12743  001B28  0E00               	movlw	0
 12744  001B2A  6E03               	movwf	(?___flmul+2)^0,c
 12745  001B2C  0E00               	movlw	0
 12746  001B2E  6E04               	movwf	(?___flmul+3)^0,c
 12747  001B30  EF54  F00F         	goto	l917
 12748  001B34                     l4609:
 12749  001B34  FFFF               	dw	65535	; assembler added errata NOP
 12750  001B36  5007               	movf	(___flmul@a+2)^0,w,c
 12751  001B38  0201               	mulwf	___flmul@b^0,c
 12752  001B3A  CFF3 F018          	movff	prodl,___flmul@temp
 12753  001B3E  CFF4 F019          	movff	prodh,___flmul@temp+1
 12754  001B42  5018               	movf	___flmul@temp^0,w,c
 12755  001B44  6E0E               	movwf	___flmul@grs^0,c
 12756  001B46  6A0F               	clrf	(___flmul@grs+1)^0,c
 12757  001B48  6A10               	clrf	(___flmul@grs+2)^0,c
 12758  001B4A  6A11               	clrf	(___flmul@grs+3)^0,c
 12759  001B4C  5019               	movf	(___flmul@temp+1)^0,w,c
 12760  001B4E  6E14               	movwf	___flmul@prod^0,c
 12761  001B50  6A15               	clrf	(___flmul@prod+1)^0,c
 12762  001B52  6A16               	clrf	(___flmul@prod+2)^0,c
 12763  001B54  6A17               	clrf	(___flmul@prod+3)^0,c
 12764  001B56  5006               	movf	(___flmul@a+1)^0,w,c
 12765  001B58  0202               	mulwf	(___flmul@b+1)^0,c
 12766  001B5A  CFF3 F018          	movff	prodl,___flmul@temp
 12767  001B5E  CFF4 F019          	movff	prodh,___flmul@temp+1
 12768  001B62  5018               	movf	___flmul@temp^0,w,c
 12769  001B64  260E               	addwf	___flmul@grs^0,f,c
 12770  001B66  0E00               	movlw	0
 12771  001B68  220F               	addwfc	(___flmul@grs+1)^0,f,c
 12772  001B6A  2210               	addwfc	(___flmul@grs+2)^0,f,c
 12773  001B6C  2211               	addwfc	(___flmul@grs+3)^0,f,c
 12774  001B6E  5019               	movf	(___flmul@temp+1)^0,w,c
 12775  001B70  2614               	addwf	___flmul@prod^0,f,c
 12776  001B72  0E00               	movlw	0
 12777  001B74  2215               	addwfc	(___flmul@prod+1)^0,f,c
 12778  001B76  2216               	addwfc	(___flmul@prod+2)^0,f,c
 12779  001B78  2217               	addwfc	(___flmul@prod+3)^0,f,c
 12780  001B7A  5005               	movf	___flmul@a^0,w,c
 12781  001B7C  0203               	mulwf	(___flmul@b+2)^0,c
 12782  001B7E  CFF3 F018          	movff	prodl,___flmul@temp
 12783  001B82  CFF4 F019          	movff	prodh,___flmul@temp+1
 12784  001B86  5018               	movf	___flmul@temp^0,w,c
 12785  001B88  260E               	addwf	___flmul@grs^0,f,c
 12786  001B8A  0E00               	movlw	0
 12787  001B8C  220F               	addwfc	(___flmul@grs+1)^0,f,c
 12788  001B8E  2210               	addwfc	(___flmul@grs+2)^0,f,c
 12789  001B90  2211               	addwfc	(___flmul@grs+3)^0,f,c
 12790  001B92  5019               	movf	(___flmul@temp+1)^0,w,c
 12791  001B94  2614               	addwf	___flmul@prod^0,f,c
 12792  001B96  0E00               	movlw	0
 12793  001B98  2215               	addwfc	(___flmul@prod+1)^0,f,c
 12794  001B9A  2216               	addwfc	(___flmul@prod+2)^0,f,c
 12795  001B9C  2217               	addwfc	(___flmul@prod+3)^0,f,c
 12796  001B9E  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
 12797  001BA2  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
 12798  001BA6  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
 12799  001BAA  6A0E               	clrf	___flmul@grs^0,c
 12800  001BAC  5005               	movf	___flmul@a^0,w,c
 12801  001BAE  0202               	mulwf	(___flmul@b+1)^0,c
 12802  001BB0  CFF3 F018          	movff	prodl,___flmul@temp
 12803  001BB4  CFF4 F019          	movff	prodh,___flmul@temp+1
 12804  001BB8  5018               	movf	___flmul@temp^0,w,c
 12805  001BBA  260E               	addwf	___flmul@grs^0,f,c
 12806  001BBC  5019               	movf	(___flmul@temp+1)^0,w,c
 12807  001BBE  220F               	addwfc	(___flmul@grs+1)^0,f,c
 12808  001BC0  0E00               	movlw	0
 12809  001BC2  2210               	addwfc	(___flmul@grs+2)^0,f,c
 12810  001BC4  0E00               	movlw	0
 12811  001BC6  2211               	addwfc	(___flmul@grs+3)^0,f,c
 12812  001BC8  5006               	movf	(___flmul@a+1)^0,w,c
 12813  001BCA  0201               	mulwf	___flmul@b^0,c
 12814  001BCC  CFF3 F018          	movff	prodl,___flmul@temp
 12815  001BD0  CFF4 F019          	movff	prodh,___flmul@temp+1
 12816  001BD4  5018               	movf	___flmul@temp^0,w,c
 12817  001BD6  260E               	addwf	___flmul@grs^0,f,c
 12818  001BD8  5019               	movf	(___flmul@temp+1)^0,w,c
 12819  001BDA  220F               	addwfc	(___flmul@grs+1)^0,f,c
 12820  001BDC  0E00               	movlw	0
 12821  001BDE  2210               	addwfc	(___flmul@grs+2)^0,f,c
 12822  001BE0  0E00               	movlw	0
 12823  001BE2  2211               	addwfc	(___flmul@grs+3)^0,f,c
 12824  001BE4  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
 12825  001BE8  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
 12826  001BEC  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
 12827  001BF0  6A0E               	clrf	___flmul@grs^0,c
 12828  001BF2  5005               	movf	___flmul@a^0,w,c
 12829  001BF4  0201               	mulwf	___flmul@b^0,c
 12830  001BF6  CFF3 F018          	movff	prodl,___flmul@temp
 12831  001BFA  CFF4 F019          	movff	prodh,___flmul@temp+1
 12832  001BFE  5018               	movf	___flmul@temp^0,w,c
 12833  001C00  260E               	addwf	___flmul@grs^0,f,c
 12834  001C02  5019               	movf	(___flmul@temp+1)^0,w,c
 12835  001C04  220F               	addwfc	(___flmul@grs+1)^0,f,c
 12836  001C06  0E00               	movlw	0
 12837  001C08  2210               	addwfc	(___flmul@grs+2)^0,f,c
 12838  001C0A  0E00               	movlw	0
 12839  001C0C  2211               	addwfc	(___flmul@grs+3)^0,f,c
 12840  001C0E  5007               	movf	(___flmul@a+2)^0,w,c
 12841  001C10  0202               	mulwf	(___flmul@b+1)^0,c
 12842  001C12  CFF3 F018          	movff	prodl,___flmul@temp
 12843  001C16  CFF4 F019          	movff	prodh,___flmul@temp+1
 12844  001C1A  5018               	movf	___flmul@temp^0,w,c
 12845  001C1C  2614               	addwf	___flmul@prod^0,f,c
 12846  001C1E  5019               	movf	(___flmul@temp+1)^0,w,c
 12847  001C20  2215               	addwfc	(___flmul@prod+1)^0,f,c
 12848  001C22  0E00               	movlw	0
 12849  001C24  2216               	addwfc	(___flmul@prod+2)^0,f,c
 12850  001C26  0E00               	movlw	0
 12851  001C28  2217               	addwfc	(___flmul@prod+3)^0,f,c
 12852  001C2A  5006               	movf	(___flmul@a+1)^0,w,c
 12853  001C2C  0203               	mulwf	(___flmul@b+2)^0,c
 12854  001C2E  CFF3 F018          	movff	prodl,___flmul@temp
 12855  001C32  CFF4 F019          	movff	prodh,___flmul@temp+1
 12856  001C36  5018               	movf	___flmul@temp^0,w,c
 12857  001C38  2614               	addwf	___flmul@prod^0,f,c
 12858  001C3A  5019               	movf	(___flmul@temp+1)^0,w,c
 12859  001C3C  2215               	addwfc	(___flmul@prod+1)^0,f,c
 12860  001C3E  0E00               	movlw	0
 12861  001C40  2216               	addwfc	(___flmul@prod+2)^0,f,c
 12862  001C42  0E00               	movlw	0
 12863  001C44  2217               	addwfc	(___flmul@prod+3)^0,f,c
 12864  001C46  5007               	movf	(___flmul@a+2)^0,w,c
 12865  001C48  0203               	mulwf	(___flmul@b+2)^0,c
 12866  001C4A  CFF3 F018          	movff	prodl,___flmul@temp
 12867  001C4E  CFF4 F019          	movff	prodh,___flmul@temp+1
 12868  001C52  5018               	movf	___flmul@temp^0,w,c
 12869  001C54  6E09               	movwf	??___flmul^0,c
 12870  001C56  5019               	movf	(___flmul@temp+1)^0,w,c
 12871  001C58  6E0A               	movwf	(??___flmul+1)^0,c
 12872  001C5A  6A0B               	clrf	(??___flmul+2)^0,c
 12873  001C5C  6A0C               	clrf	(??___flmul+3)^0,c
 12874  001C5E  C00B  F00C         	movff	??___flmul+2,??___flmul+3
 12875  001C62  C00A  F00B         	movff	??___flmul+1,??___flmul+2
 12876  001C66  C009  F00A         	movff	??___flmul,??___flmul+1
 12877  001C6A  6A09               	clrf	??___flmul^0,c
 12878  001C6C  5009               	movf	??___flmul^0,w,c
 12879  001C6E  2614               	addwf	___flmul@prod^0,f,c
 12880  001C70  500A               	movf	(??___flmul+1)^0,w,c
 12881  001C72  2215               	addwfc	(___flmul@prod+1)^0,f,c
 12882  001C74  500B               	movf	(??___flmul+2)^0,w,c
 12883  001C76  2216               	addwfc	(___flmul@prod+2)^0,f,c
 12884  001C78  500C               	movf	(??___flmul+3)^0,w,c
 12885  001C7A  2217               	addwfc	(___flmul@prod+3)^0,f,c
 12886  001C7C  C00E  F009         	movff	___flmul@grs,??___flmul
 12887  001C80  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
 12888  001C84  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
 12889  001C88  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
 12890  001C8C  0E19               	movlw	25
 12891  001C8E  EF4F  F00E         	goto	u5520
 12892  001C92                     u5525:
 12893  001C92  FFFF               	dw	65535	; assembler added errata NOP
 12894  001C94  90D8               	bcf	status,0,c
 12895  001C96  320C               	rrcf	(??___flmul+3)^0,f,c
 12896  001C98  320B               	rrcf	(??___flmul+2)^0,f,c
 12897  001C9A  320A               	rrcf	(??___flmul+1)^0,f,c
 12898  001C9C  3209               	rrcf	??___flmul^0,f,c
 12899  001C9E                     u5520:
 12900  001C9E  FFFF               	dw	65535	; assembler added errata NOP
 12901  001CA0  2EE8               	decfsz	wreg,f,c
 12902  001CA2  EF49  F00E         	goto	u5525
 12903  001CA6  5009               	movf	??___flmul^0,w,c
 12904  001CA8  2614               	addwf	___flmul@prod^0,f,c
 12905  001CAA  500A               	movf	(??___flmul+1)^0,w,c
 12906  001CAC  2215               	addwfc	(___flmul@prod+1)^0,f,c
 12907  001CAE  500B               	movf	(??___flmul+2)^0,w,c
 12908  001CB0  2216               	addwfc	(___flmul@prod+2)^0,f,c
 12909  001CB2  500C               	movf	(??___flmul+3)^0,w,c
 12910  001CB4  2217               	addwfc	(___flmul@prod+3)^0,f,c
 12911  001CB6  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
 12912  001CBA  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
 12913  001CBE  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
 12914  001CC2  6A0E               	clrf	___flmul@grs^0,c
 12915  001CC4  5012               	movf	___flmul@aexp^0,w,c
 12916  001CC6  C013  F009         	movff	___flmul@bexp,??___flmul
 12917  001CCA  6A0A               	clrf	(??___flmul+1)^0,c
 12918  001CCC  2609               	addwf	??___flmul^0,f,c
 12919  001CCE  0E00               	movlw	0
 12920  001CD0  220A               	addwfc	(??___flmul+1)^0,f,c
 12921  001CD2  0E82               	movlw	130
 12922  001CD4  2409               	addwf	??___flmul^0,w,c
 12923  001CD6  6E18               	movwf	___flmul@temp^0,c
 12924  001CD8  0EFF               	movlw	255
 12925  001CDA  200A               	addwfc	(??___flmul+1)^0,w,c
 12926  001CDC  6E19               	movwf	(___flmul@temp+1)^0,c
 12927  001CDE  EF8A  F00E         	goto	l4657
 12928  001CE2                     l4651:
 12929  001CE2  FFFF               	dw	65535	; assembler added errata NOP
 12930  001CE4  90D8               	bcf	status,0,c
 12931  001CE6  3614               	rlcf	___flmul@prod^0,f,c
 12932  001CE8  3615               	rlcf	(___flmul@prod+1)^0,f,c
 12933  001CEA  3616               	rlcf	(___flmul@prod+2)^0,f,c
 12934  001CEC  3617               	rlcf	(___flmul@prod+3)^0,f,c
 12935  001CEE  AE11               	btfss	(___flmul@grs+3)^0,7,c
 12936  001CF0  EF7C  F00E         	goto	u5531
 12937  001CF4  EF7F  F00E         	goto	u5530
 12938  001CF8                     u5531:
 12939  001CF8  FFFF               	dw	65535	; assembler added errata NOP
 12940  001CFA  EF81  F00E         	goto	l920
 12941  001CFE                     u5530:
 12942  001CFE  FFFF               	dw	65535	; assembler added errata NOP
 12943  001D00  8014               	bsf	___flmul@prod^0,0,c
 12944  001D02                     l920:
 12945  001D02  FFFF               	dw	65535	; assembler added errata NOP
 12946  001D04  90D8               	bcf	status,0,c
 12947  001D06  360E               	rlcf	___flmul@grs^0,f,c
 12948  001D08  360F               	rlcf	(___flmul@grs+1)^0,f,c
 12949  001D0A  3610               	rlcf	(___flmul@grs+2)^0,f,c
 12950  001D0C  3611               	rlcf	(___flmul@grs+3)^0,f,c
 12951  001D0E  0618               	decf	___flmul@temp^0,f,c
 12952  001D10  A0D8               	btfss	status,0,c
 12953  001D12  0619               	decf	(___flmul@temp+1)^0,f,c
 12954  001D14                     l4657:
 12955  001D14  FFFF               	dw	65535	; assembler added errata NOP
 12956  001D16  AE16               	btfss	(___flmul@prod+2)^0,7,c
 12957  001D18  EF90  F00E         	goto	u5541
 12958  001D1C  EF93  F00E         	goto	u5540
 12959  001D20                     u5541:
 12960  001D20  FFFF               	dw	65535	; assembler added errata NOP
 12961  001D22  EF71  F00E         	goto	l4651
 12962  001D26                     u5540:
 12963  001D26  FFFF               	dw	65535	; assembler added errata NOP
 12964  001D28  0E00               	movlw	0
 12965  001D2A  6E12               	movwf	___flmul@aexp^0,c
 12966  001D2C  AE11               	btfss	(___flmul@grs+3)^0,7,c
 12967  001D2E  EF9B  F00E         	goto	u5551
 12968  001D32  EF9E  F00E         	goto	u5550
 12969  001D36                     u5551:
 12970  001D36  FFFF               	dw	65535	; assembler added errata NOP
 12971  001D38  EFC9  F00E         	goto	l922
 12972  001D3C                     u5550:
 12973  001D3C  FFFF               	dw	65535	; assembler added errata NOP
 12974  001D3E  0EFF               	movlw	255
 12975  001D40  140E               	andwf	___flmul@grs^0,w,c
 12976  001D42  6E09               	movwf	??___flmul^0,c
 12977  001D44  0EFF               	movlw	255
 12978  001D46  140F               	andwf	(___flmul@grs+1)^0,w,c
 12979  001D48  6E0A               	movwf	(??___flmul+1)^0,c
 12980  001D4A  0EFF               	movlw	255
 12981  001D4C  1410               	andwf	(___flmul@grs+2)^0,w,c
 12982  001D4E  6E0B               	movwf	(??___flmul+2)^0,c
 12983  001D50  0E7F               	movlw	127
 12984  001D52  1411               	andwf	(___flmul@grs+3)^0,w,c
 12985  001D54  6E0C               	movwf	(??___flmul+3)^0,c
 12986  001D56  5009               	movf	??___flmul^0,w,c
 12987  001D58  100A               	iorwf	(??___flmul+1)^0,w,c
 12988  001D5A  100B               	iorwf	(??___flmul+2)^0,w,c
 12989  001D5C  100C               	iorwf	(??___flmul+3)^0,w,c
 12990  001D5E  B4D8               	btfsc	status,2,c
 12991  001D60  EFB4  F00E         	goto	u5561
 12992  001D64  EFB7  F00E         	goto	u5560
 12993  001D68                     u5561:
 12994  001D68  FFFF               	dw	65535	; assembler added errata NOP
 12995  001D6A  EFBD  F00E         	goto	l923
 12996  001D6E                     u5560:
 12997  001D6E  FFFF               	dw	65535	; assembler added errata NOP
 12998  001D70                     l4665:
 12999  001D70  FFFF               	dw	65535	; assembler added errata NOP
 13000  001D72  0E01               	movlw	1
 13001  001D74  6E12               	movwf	___flmul@aexp^0,c
 13002  001D76  EFC9  F00E         	goto	l922
 13003  001D7A                     l923:
 13004  001D7A  FFFF               	dw	65535	; assembler added errata NOP
 13005  001D7C  A014               	btfss	___flmul@prod^0,0,c
 13006  001D7E  EFC3  F00E         	goto	u5571
 13007  001D82  EFC6  F00E         	goto	u5570
 13008  001D86                     u5571:
 13009  001D86  FFFF               	dw	65535	; assembler added errata NOP
 13010  001D88  EFC9  F00E         	goto	l922
 13011  001D8C                     u5570:
 13012  001D8C  FFFF               	dw	65535	; assembler added errata NOP
 13013  001D8E  EFB8  F00E         	goto	l4665
 13014  001D92                     l922:
 13015  001D92  FFFF               	dw	65535	; assembler added errata NOP
 13016  001D94  5012               	movf	___flmul@aexp^0,w,c
 13017  001D96  B4D8               	btfsc	status,2,c
 13018  001D98  EFD0  F00E         	goto	u5581
 13019  001D9C  EFD3  F00E         	goto	u5580
 13020  001DA0                     u5581:
 13021  001DA0  FFFF               	dw	65535	; assembler added errata NOP
 13022  001DA2  EFFA  F00E         	goto	l4677
 13023  001DA6                     u5580:
 13024  001DA6  FFFF               	dw	65535	; assembler added errata NOP
 13025  001DA8  0E01               	movlw	1
 13026  001DAA  2614               	addwf	___flmul@prod^0,f,c
 13027  001DAC  0E00               	movlw	0
 13028  001DAE  2215               	addwfc	(___flmul@prod+1)^0,f,c
 13029  001DB0  2216               	addwfc	(___flmul@prod+2)^0,f,c
 13030  001DB2  2217               	addwfc	(___flmul@prod+3)^0,f,c
 13031  001DB4  A017               	btfss	(___flmul@prod+3)^0,0,c
 13032  001DB6  EFDF  F00E         	goto	u5591
 13033  001DBA  EFE2  F00E         	goto	u5590
 13034  001DBE                     u5591:
 13035  001DBE  FFFF               	dw	65535	; assembler added errata NOP
 13036  001DC0  EFFA  F00E         	goto	l4677
 13037  001DC4                     u5590:
 13038  001DC4  FFFF               	dw	65535	; assembler added errata NOP
 13039  001DC6  C014  F009         	movff	___flmul@prod,??___flmul
 13040  001DCA  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
 13041  001DCE  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
 13042  001DD2  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
 13043  001DD6  340C               	rlcf	(??___flmul+3)^0,w,c
 13044  001DD8  320C               	rrcf	(??___flmul+3)^0,f,c
 13045  001DDA  320B               	rrcf	(??___flmul+2)^0,f,c
 13046  001DDC  320A               	rrcf	(??___flmul+1)^0,f,c
 13047  001DDE  3209               	rrcf	??___flmul^0,f,c
 13048  001DE0  C009  F014         	movff	??___flmul,___flmul@prod
 13049  001DE4  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
 13050  001DE8  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
 13051  001DEC  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
 13052  001DF0  4A18               	infsnz	___flmul@temp^0,f,c
 13053  001DF2  2A19               	incf	(___flmul@temp+1)^0,f,c
 13054  001DF4                     l4677:
 13055  001DF4  FFFF               	dw	65535	; assembler added errata NOP
 13056  001DF6  BE19               	btfsc	(___flmul@temp+1)^0,7,c
 13057  001DF8  EF06  F00F         	goto	u5601
 13058  001DFC  5019               	movf	(___flmul@temp+1)^0,w,c
 13059  001DFE  E109               	bnz	u5600
 13060  001E00  2818               	incf	___flmul@temp^0,w,c
 13061  001E02  A0D8               	btfss	status,0,c
 13062  001E04  EF06  F00F         	goto	u5601
 13063  001E08  EF09  F00F         	goto	u5600
 13064  001E0C                     u5601:
 13065  001E0C  FFFF               	dw	65535	; assembler added errata NOP
 13066  001E0E  EF14  F00F         	goto	l4681
 13067  001E12                     u5600:
 13068  001E12  FFFF               	dw	65535	; assembler added errata NOP
 13069  001E14  0E00               	movlw	0
 13070  001E16  6E14               	movwf	___flmul@prod^0,c
 13071  001E18  0E00               	movlw	0
 13072  001E1A  6E15               	movwf	(___flmul@prod+1)^0,c
 13073  001E1C  0E80               	movlw	128
 13074  001E1E  6E16               	movwf	(___flmul@prod+2)^0,c
 13075  001E20  0E7F               	movlw	127
 13076  001E22  6E17               	movwf	(___flmul@prod+3)^0,c
 13077  001E24  EF49  F00F         	goto	l4693
 13078  001E28                     l4681:
 13079  001E28  FFFF               	dw	65535	; assembler added errata NOP
 13080  001E2A  BE19               	btfsc	(___flmul@temp+1)^0,7,c
 13081  001E2C  EF23  F00F         	goto	u5610
 13082  001E30  5019               	movf	(___flmul@temp+1)^0,w,c
 13083  001E32  E106               	bnz	u5611
 13084  001E34  0418               	decf	___flmul@temp^0,w,c
 13085  001E36  B0D8               	btfsc	status,0,c
 13086  001E38  EF20  F00F         	goto	u5611
 13087  001E3C  EF23  F00F         	goto	u5610
 13088  001E40                     u5611:
 13089  001E40  FFFF               	dw	65535	; assembler added errata NOP
 13090  001E42  EF30  F00F         	goto	l930
 13091  001E46                     u5610:
 13092  001E46  FFFF               	dw	65535	; assembler added errata NOP
 13093  001E48  0E00               	movlw	0
 13094  001E4A  6E14               	movwf	___flmul@prod^0,c
 13095  001E4C  0E00               	movlw	0
 13096  001E4E  6E15               	movwf	(___flmul@prod+1)^0,c
 13097  001E50  0E00               	movlw	0
 13098  001E52  6E16               	movwf	(___flmul@prod+2)^0,c
 13099  001E54  0E00               	movlw	0
 13100  001E56  6E17               	movwf	(___flmul@prod+3)^0,c
 13101  001E58  0E00               	movlw	0
 13102  001E5A  6E0D               	movwf	___flmul@sign^0,c
 13103  001E5C  EF49  F00F         	goto	l4693
 13104  001E60                     l930:
 13105  001E60  FFFF               	dw	65535	; assembler added errata NOP
 13106  001E62  C018  F013         	movff	___flmul@temp,___flmul@bexp
 13107  001E66  0EFF               	movlw	255
 13108  001E68  1614               	andwf	___flmul@prod^0,f,c
 13109  001E6A  0EFF               	movlw	255
 13110  001E6C  1615               	andwf	(___flmul@prod+1)^0,f,c
 13111  001E6E  0E7F               	movlw	127
 13112  001E70  1616               	andwf	(___flmul@prod+2)^0,f,c
 13113  001E72  0E00               	movlw	0
 13114  001E74  1617               	andwf	(___flmul@prod+3)^0,f,c
 13115  001E76  A013               	btfss	___flmul@bexp^0,0,c
 13116  001E78  EF40  F00F         	goto	u5621
 13117  001E7C  EF43  F00F         	goto	u5620
 13118  001E80                     u5621:
 13119  001E80  FFFF               	dw	65535	; assembler added errata NOP
 13120  001E82  EF45  F00F         	goto	l4691
 13121  001E86                     u5620:
 13122  001E86  FFFF               	dw	65535	; assembler added errata NOP
 13123  001E88  8E16               	bsf	(___flmul@prod+2)^0,7,c
 13124  001E8A                     l4691:
 13125  001E8A  FFFF               	dw	65535	; assembler added errata NOP
 13126  001E8C  90D8               	bcf	status,0,c
 13127  001E8E  3013               	rrcf	___flmul@bexp^0,w,c
 13128  001E90  6E17               	movwf	(___flmul@prod+3)^0,c
 13129  001E92                     l4693:
 13130  001E92  FFFF               	dw	65535	; assembler added errata NOP
 13131  001E94  500D               	movf	___flmul@sign^0,w,c
 13132  001E96  1217               	iorwf	(___flmul@prod+3)^0,f,c
 13133  001E98  C014  F001         	movff	___flmul@prod,?___flmul
 13134  001E9C  C015  F002         	movff	___flmul@prod+1,?___flmul+1
 13135  001EA0  C016  F003         	movff	___flmul@prod+2,?___flmul+2
 13136  001EA4  C017  F004         	movff	___flmul@prod+3,?___flmul+3
 13137  001EA8                     l917:
 13138  001EA8  FFFF               	dw	65535	; assembler added errata NOP
 13139  001EAA  0012               	return		;funcret
 13140  001EAC  FFFF               	dw	65535	; errata NOP
 13141  001EAE                     __end_of___flmul:
 13142                           	callstack 0
 13143                           
 13144 ;; *************** function ___flge *****************
 13145 ;; Defined at:
 13146 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
 13147 ;; Parameters:    Size  Location     Type
 13148 ;;  ff1             4    0[COMRAM] unsigned char 
 13149 ;;  ff2             4    4[COMRAM] unsigned char 
 13150 ;; Auto vars:     Size  Location     Type
 13151 ;;		None
 13152 ;; Return value:  Size  Location     Type
 13153 ;;		None               void
 13154 ;; Registers used:
 13155 ;;		wreg, status,2, status,0
 13156 ;; Tracked objects:
 13157 ;;		On entry : 0/0
 13158 ;;		On exit  : 0/0
 13159 ;;		Unchanged: 0/0
 13160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13161 ;;      Params:         8       0       0       0       0       0       0
 13162 ;;      Locals:         0       0       0       0       0       0       0
 13163 ;;      Temps:          4       0       0       0       0       0       0
 13164 ;;      Totals:        12       0       0       0       0       0       0
 13165 ;;Total ram usage:       12 bytes
 13166 ;; Hardware stack levels used:    1
 13167 ;; Hardware stack levels required when called:    1
 13168 ;; This function calls:
 13169 ;;		Nothing
 13170 ;; This function is called by:
 13171 ;;		_roundf
 13172 ;; This function uses a non-reentrant model
 13173 ;;
 13174                           
 13175                           	psect	text52
 13176  003E7C                     __ptext52:
 13177                           	callstack 0
 13178  003E7C                     ___flge:
 13179                           	callstack 0
 13180  003E7C  FFFF               	dw	65535	; assembler added errata NOP
 13181  003E7E  0E00               	movlw	0
 13182  003E80  1401               	andwf	___flge@ff1^0,w,c
 13183  003E82  6E09               	movwf	??___flge^0,c
 13184  003E84  0E00               	movlw	0
 13185  003E86  1402               	andwf	(___flge@ff1+1)^0,w,c
 13186  003E88  6E0A               	movwf	(??___flge+1)^0,c
 13187  003E8A  0E80               	movlw	128
 13188  003E8C  1403               	andwf	(___flge@ff1+2)^0,w,c
 13189  003E8E  6E0B               	movwf	(??___flge+2)^0,c
 13190  003E90  0E7F               	movlw	127
 13191  003E92  1404               	andwf	(___flge@ff1+3)^0,w,c
 13192  003E94  6E0C               	movwf	(??___flge+3)^0,c
 13193  003E96  5009               	movf	??___flge^0,w,c
 13194  003E98  100A               	iorwf	(??___flge+1)^0,w,c
 13195  003E9A  100B               	iorwf	(??___flge+2)^0,w,c
 13196  003E9C  100C               	iorwf	(??___flge+3)^0,w,c
 13197  003E9E  A4D8               	btfss	status,2,c
 13198  003EA0  EF54  F01F         	goto	u5631
 13199  003EA4  EF57  F01F         	goto	u5630
 13200  003EA8                     u5631:
 13201  003EA8  FFFF               	dw	65535	; assembler added errata NOP
 13202  003EAA  EF60  F01F         	goto	l4709
 13203  003EAE                     u5630:
 13204  003EAE  FFFF               	dw	65535	; assembler added errata NOP
 13205  003EB0  0E00               	movlw	0
 13206  003EB2  6E01               	movwf	___flge@ff1^0,c
 13207  003EB4  0E00               	movlw	0
 13208  003EB6  6E02               	movwf	(___flge@ff1+1)^0,c
 13209  003EB8  0E00               	movlw	0
 13210  003EBA  6E03               	movwf	(___flge@ff1+2)^0,c
 13211  003EBC  0E00               	movlw	0
 13212  003EBE  6E04               	movwf	(___flge@ff1+3)^0,c
 13213  003EC0                     l4709:
 13214  003EC0  FFFF               	dw	65535	; assembler added errata NOP
 13215  003EC2  0E00               	movlw	0
 13216  003EC4  1405               	andwf	___flge@ff2^0,w,c
 13217  003EC6  6E09               	movwf	??___flge^0,c
 13218  003EC8  0E00               	movlw	0
 13219  003ECA  1406               	andwf	(___flge@ff2+1)^0,w,c
 13220  003ECC  6E0A               	movwf	(??___flge+1)^0,c
 13221  003ECE  0E80               	movlw	128
 13222  003ED0  1407               	andwf	(___flge@ff2+2)^0,w,c
 13223  003ED2  6E0B               	movwf	(??___flge+2)^0,c
 13224  003ED4  0E7F               	movlw	127
 13225  003ED6  1408               	andwf	(___flge@ff2+3)^0,w,c
 13226  003ED8  6E0C               	movwf	(??___flge+3)^0,c
 13227  003EDA  5009               	movf	??___flge^0,w,c
 13228  003EDC  100A               	iorwf	(??___flge+1)^0,w,c
 13229  003EDE  100B               	iorwf	(??___flge+2)^0,w,c
 13230  003EE0  100C               	iorwf	(??___flge+3)^0,w,c
 13231  003EE2  A4D8               	btfss	status,2,c
 13232  003EE4  EF76  F01F         	goto	u5641
 13233  003EE8  EF79  F01F         	goto	u5640
 13234  003EEC                     u5641:
 13235  003EEC  FFFF               	dw	65535	; assembler added errata NOP
 13236  003EEE  EF82  F01F         	goto	l4713
 13237  003EF2                     u5640:
 13238  003EF2  FFFF               	dw	65535	; assembler added errata NOP
 13239  003EF4  0E00               	movlw	0
 13240  003EF6  6E05               	movwf	___flge@ff2^0,c
 13241  003EF8  0E00               	movlw	0
 13242  003EFA  6E06               	movwf	(___flge@ff2+1)^0,c
 13243  003EFC  0E00               	movlw	0
 13244  003EFE  6E07               	movwf	(___flge@ff2+2)^0,c
 13245  003F00  0E00               	movlw	0
 13246  003F02  6E08               	movwf	(___flge@ff2+3)^0,c
 13247  003F04                     l4713:
 13248  003F04  FFFF               	dw	65535	; assembler added errata NOP
 13249  003F06  AE04               	btfss	(___flge@ff1+3)^0,7,c
 13250  003F08  EF88  F01F         	goto	u5651
 13251  003F0C  EF8B  F01F         	goto	u5650
 13252  003F10                     u5651:
 13253  003F10  FFFF               	dw	65535	; assembler added errata NOP
 13254  003F12  EF95  F01F         	goto	l4717
 13255  003F16                     u5650:
 13256  003F16  FFFF               	dw	65535	; assembler added errata NOP
 13257  003F18  6C01               	negf	___flge@ff1^0,c
 13258  003F1A  1E02               	comf	(___flge@ff1+1)^0,f,c
 13259  003F1C  B0D8               	btfsc	status,0,c
 13260  003F1E  2A02               	incf	(___flge@ff1+1)^0,f,c
 13261  003F20  1E03               	comf	(___flge@ff1+2)^0,f,c
 13262  003F22  B0D8               	btfsc	status,0,c
 13263  003F24  2A03               	incf	(___flge@ff1+2)^0,f,c
 13264  003F26  0E80               	movlw	128
 13265  003F28  5604               	subfwb	(___flge@ff1+3)^0,f,c
 13266  003F2A                     l4717:
 13267  003F2A  FFFF               	dw	65535	; assembler added errata NOP
 13268  003F2C  AE08               	btfss	(___flge@ff2+3)^0,7,c
 13269  003F2E  EF9B  F01F         	goto	u5661
 13270  003F32  EF9E  F01F         	goto	u5660
 13271  003F36                     u5661:
 13272  003F36  FFFF               	dw	65535	; assembler added errata NOP
 13273  003F38  EFA8  F01F         	goto	l564
 13274  003F3C                     u5660:
 13275  003F3C  FFFF               	dw	65535	; assembler added errata NOP
 13276  003F3E  6C05               	negf	___flge@ff2^0,c
 13277  003F40  1E06               	comf	(___flge@ff2+1)^0,f,c
 13278  003F42  B0D8               	btfsc	status,0,c
 13279  003F44  2A06               	incf	(___flge@ff2+1)^0,f,c
 13280  003F46  1E07               	comf	(___flge@ff2+2)^0,f,c
 13281  003F48  B0D8               	btfsc	status,0,c
 13282  003F4A  2A07               	incf	(___flge@ff2+2)^0,f,c
 13283  003F4C  0E80               	movlw	128
 13284  003F4E  5608               	subfwb	(___flge@ff2+3)^0,f,c
 13285  003F50                     l564:
 13286  003F50  FFFF               	dw	65535	; assembler added errata NOP
 13287  003F52  0E00               	movlw	0
 13288  003F54  1A01               	xorwf	___flge@ff1^0,f,c
 13289  003F56  0E00               	movlw	0
 13290  003F58  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 13291  003F5A  0E00               	movlw	0
 13292  003F5C  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 13293  003F5E  0E80               	movlw	128
 13294  003F60  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 13295  003F62  0E00               	movlw	0
 13296  003F64  1A05               	xorwf	___flge@ff2^0,f,c
 13297  003F66  0E00               	movlw	0
 13298  003F68  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 13299  003F6A  0E00               	movlw	0
 13300  003F6C  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 13301  003F6E  0E80               	movlw	128
 13302  003F70  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 13303  003F72  5005               	movf	___flge@ff2^0,w,c
 13304  003F74  5C01               	subwf	___flge@ff1^0,w,c
 13305  003F76  5006               	movf	(___flge@ff2+1)^0,w,c
 13306  003F78  5802               	subwfb	(___flge@ff1+1)^0,w,c
 13307  003F7A  5007               	movf	(___flge@ff2+2)^0,w,c
 13308  003F7C  5803               	subwfb	(___flge@ff1+2)^0,w,c
 13309  003F7E  5008               	movf	(___flge@ff2+3)^0,w,c
 13310  003F80  5804               	subwfb	(___flge@ff1+3)^0,w,c
 13311  003F82  B0D8               	btfsc	status,0,c
 13312  003F84  EFC6  F01F         	goto	u5671
 13313  003F88  EFC9  F01F         	goto	u5670
 13314  003F8C                     u5671:
 13315  003F8C  FFFF               	dw	65535	; assembler added errata NOP
 13316  003F8E  EFCD  F01F         	goto	l4723
 13317  003F92                     u5670:
 13318  003F92  FFFF               	dw	65535	; assembler added errata NOP
 13319  003F94  90D8               	bcf	status,0,c
 13320  003F96  EFCF  F01F         	goto	l569
 13321  003F9A                     l4723:
 13322  003F9A  FFFF               	dw	65535	; assembler added errata NOP
 13323  003F9C  80D8               	bsf	status,0,c
 13324  003F9E                     l569:
 13325  003F9E  FFFF               	dw	65535	; assembler added errata NOP
 13326  003FA0  0012               	return		;funcret
 13327  003FA2  FFFF               	dw	65535	; errata NOP
 13328  003FA4                     __end_of___flge:
 13329                           	callstack 0
 13330                           
 13331 ;; *************** function ___fltol *****************
 13332 ;; Defined at:
 13333 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
 13334 ;; Parameters:    Size  Location     Type
 13335 ;;  f1              4  100[COMRAM] unsigned char 
 13336 ;; Auto vars:     Size  Location     Type
 13337 ;;  exp1            1  109[COMRAM] unsigned char 
 13338 ;;  sign1           1  108[COMRAM] unsigned char 
 13339 ;; Return value:  Size  Location     Type
 13340 ;;                  4  100[COMRAM] long 
 13341 ;; Registers used:
 13342 ;;		wreg, status,2, status,0
 13343 ;; Tracked objects:
 13344 ;;		On entry : 0/0
 13345 ;;		On exit  : 0/0
 13346 ;;		Unchanged: 0/0
 13347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13348 ;;      Params:         4       0       0       0       0       0       0
 13349 ;;      Locals:         2       0       0       0       0       0       0
 13350 ;;      Temps:          4       0       0       0       0       0       0
 13351 ;;      Totals:        10       0       0       0       0       0       0
 13352 ;;Total ram usage:       10 bytes
 13353 ;; Hardware stack levels used:    1
 13354 ;; Hardware stack levels required when called:    1
 13355 ;; This function calls:
 13356 ;;		Nothing
 13357 ;; This function is called by:
 13358 ;;		_init_USART
 13359 ;;		_init_timer_2
 13360 ;;		_update_pwm_duty_ccp1
 13361 ;; This function uses a non-reentrant model
 13362 ;;
 13363                           
 13364                           	psect	text53
 13365  003D46                     __ptext53:
 13366                           	callstack 0
 13367  003D46                     ___fltol:
 13368                           	callstack 0
 13369  003D46  FFFF               	dw	65535	; assembler added errata NOP
 13370  003D48  3467               	rlcf	(___fltol@f1+2)^0,w,c
 13371  003D4A  3468               	rlcf	(___fltol@f1+3)^0,w,c
 13372  003D4C  6E6E               	movwf	___fltol@exp1^0,c
 13373  003D4E  506E               	movf	___fltol@exp1^0,w,c
 13374  003D50  A4D8               	btfss	status,2,c
 13375  003D52  EFAD  F01E         	goto	u5691
 13376  003D56  EFB0  F01E         	goto	u5690
 13377  003D5A                     u5691:
 13378  003D5A  FFFF               	dw	65535	; assembler added errata NOP
 13379  003D5C  EFBC  F01E         	goto	l4741
 13380  003D60                     u5690:
 13381  003D60  FFFF               	dw	65535	; assembler added errata NOP
 13382  003D62                     l4737:
 13383  003D62  FFFF               	dw	65535	; assembler added errata NOP
 13384  003D64  0E00               	movlw	0
 13385  003D66  6E65               	movwf	?___fltol^0,c
 13386  003D68  0E00               	movlw	0
 13387  003D6A  6E66               	movwf	(?___fltol+1)^0,c
 13388  003D6C  0E00               	movlw	0
 13389  003D6E  6E67               	movwf	(?___fltol+2)^0,c
 13390  003D70  0E00               	movlw	0
 13391  003D72  6E68               	movwf	(?___fltol+3)^0,c
 13392  003D74  EF3B  F01F         	goto	l596
 13393  003D78                     l4741:
 13394  003D78  FFFF               	dw	65535	; assembler added errata NOP
 13395  003D7A  C065  F069         	movff	___fltol@f1,??___fltol
 13396  003D7E  C066  F06A         	movff	___fltol@f1+1,??___fltol+1
 13397  003D82  C067  F06B         	movff	___fltol@f1+2,??___fltol+2
 13398  003D86  C068  F06C         	movff	___fltol@f1+3,??___fltol+3
 13399  003D8A  0E20               	movlw	32
 13400  003D8C  EFCE  F01E         	goto	u5700
 13401  003D90                     u5705:
 13402  003D90  FFFF               	dw	65535	; assembler added errata NOP
 13403  003D92  90D8               	bcf	status,0,c
 13404  003D94  326C               	rrcf	(??___fltol+3)^0,f,c
 13405  003D96  326B               	rrcf	(??___fltol+2)^0,f,c
 13406  003D98  326A               	rrcf	(??___fltol+1)^0,f,c
 13407  003D9A  3269               	rrcf	??___fltol^0,f,c
 13408  003D9C                     u5700:
 13409  003D9C  FFFF               	dw	65535	; assembler added errata NOP
 13410  003D9E  2EE8               	decfsz	wreg,f,c
 13411  003DA0  EFC8  F01E         	goto	u5705
 13412  003DA4  5069               	movf	??___fltol^0,w,c
 13413  003DA6  6E6D               	movwf	___fltol@sign1^0,c
 13414  003DA8  8E67               	bsf	(___fltol@f1+2)^0,7,c
 13415  003DAA  0EFF               	movlw	255
 13416  003DAC  1665               	andwf	___fltol@f1^0,f,c
 13417  003DAE  0EFF               	movlw	255
 13418  003DB0  1666               	andwf	(___fltol@f1+1)^0,f,c
 13419  003DB2  0EFF               	movlw	255
 13420  003DB4  1667               	andwf	(___fltol@f1+2)^0,f,c
 13421  003DB6  0E00               	movlw	0
 13422  003DB8  1668               	andwf	(___fltol@f1+3)^0,f,c
 13423  003DBA  0E96               	movlw	150
 13424  003DBC  5E6E               	subwf	___fltol@exp1^0,f,c
 13425  003DBE  BE6E               	btfsc	___fltol@exp1^0,7,c
 13426  003DC0  EFE7  F01E         	goto	u5710
 13427  003DC4  EFE4  F01E         	goto	u5711
 13428  003DC8                     u5711:
 13429  003DC8  FFFF               	dw	65535	; assembler added errata NOP
 13430  003DCA  EF01  F01F         	goto	l4761
 13431  003DCE                     u5710:
 13432  003DCE  FFFF               	dw	65535	; assembler added errata NOP
 13433  003DD0  506E               	movf	___fltol@exp1^0,w,c
 13434  003DD2  0A80               	xorlw	128
 13435  003DD4  0F97               	addlw	151
 13436  003DD6  B0D8               	btfsc	status,0,c
 13437  003DD8  EFF0  F01E         	goto	u5721
 13438  003DDC  EFF3  F01E         	goto	u5720
 13439  003DE0                     u5721:
 13440  003DE0  FFFF               	dw	65535	; assembler added errata NOP
 13441  003DE2  EFF6  F01E         	goto	l4757
 13442  003DE6                     u5720:
 13443  003DE6  FFFF               	dw	65535	; assembler added errata NOP
 13444  003DE8  EFB1  F01E         	goto	l4737
 13445  003DEC                     l4757:
 13446  003DEC  FFFF               	dw	65535	; assembler added errata NOP
 13447  003DEE  90D8               	bcf	status,0,c
 13448  003DF0  3268               	rrcf	(___fltol@f1+3)^0,f,c
 13449  003DF2  3267               	rrcf	(___fltol@f1+2)^0,f,c
 13450  003DF4  3266               	rrcf	(___fltol@f1+1)^0,f,c
 13451  003DF6  3265               	rrcf	___fltol@f1^0,f,c
 13452  003DF8  3E6E               	incfsz	___fltol@exp1^0,f,c
 13453  003DFA  EFF6  F01E         	goto	l4757
 13454  003DFE  EF1F  F01F         	goto	l4771
 13455  003E02                     l4761:
 13456  003E02  FFFF               	dw	65535	; assembler added errata NOP
 13457  003E04  0E1F               	movlw	31
 13458  003E06  646E               	cpfsgt	___fltol@exp1^0,c
 13459  003E08  EF08  F01F         	goto	u5731
 13460  003E0C  EF0B  F01F         	goto	u5730
 13461  003E10                     u5731:
 13462  003E10  FFFF               	dw	65535	; assembler added errata NOP
 13463  003E12  EF15  F01F         	goto	l4769
 13464  003E16                     u5730:
 13465  003E16  FFFF               	dw	65535	; assembler added errata NOP
 13466  003E18  EFB1  F01E         	goto	l4737
 13467  003E1C                     l4767:
 13468  003E1C  FFFF               	dw	65535	; assembler added errata NOP
 13469  003E1E  90D8               	bcf	status,0,c
 13470  003E20  3665               	rlcf	___fltol@f1^0,f,c
 13471  003E22  3666               	rlcf	(___fltol@f1+1)^0,f,c
 13472  003E24  3667               	rlcf	(___fltol@f1+2)^0,f,c
 13473  003E26  3668               	rlcf	(___fltol@f1+3)^0,f,c
 13474  003E28  066E               	decf	___fltol@exp1^0,f,c
 13475  003E2A                     l4769:
 13476  003E2A  FFFF               	dw	65535	; assembler added errata NOP
 13477  003E2C  506E               	movf	___fltol@exp1^0,w,c
 13478  003E2E  A4D8               	btfss	status,2,c
 13479  003E30  EF1C  F01F         	goto	u5741
 13480  003E34  EF1F  F01F         	goto	u5740
 13481  003E38                     u5741:
 13482  003E38  FFFF               	dw	65535	; assembler added errata NOP
 13483  003E3A  EF0E  F01F         	goto	l4767
 13484  003E3E                     u5740:
 13485  003E3E                     l4771:
 13486  003E3E  FFFF               	dw	65535	; assembler added errata NOP
 13487  003E40  506D               	movf	___fltol@sign1^0,w,c
 13488  003E42  B4D8               	btfsc	status,2,c
 13489  003E44  EF26  F01F         	goto	u5751
 13490  003E48  EF29  F01F         	goto	u5750
 13491  003E4C                     u5751:
 13492  003E4C  FFFF               	dw	65535	; assembler added errata NOP
 13493  003E4E  EF32  F01F         	goto	l4775
 13494  003E52                     u5750:
 13495  003E52  FFFF               	dw	65535	; assembler added errata NOP
 13496  003E54  1E68               	comf	(___fltol@f1+3)^0,f,c
 13497  003E56  1E67               	comf	(___fltol@f1+2)^0,f,c
 13498  003E58  1E66               	comf	(___fltol@f1+1)^0,f,c
 13499  003E5A  6C65               	negf	___fltol@f1^0,c
 13500  003E5C  0E00               	movlw	0
 13501  003E5E  2266               	addwfc	(___fltol@f1+1)^0,f,c
 13502  003E60  2267               	addwfc	(___fltol@f1+2)^0,f,c
 13503  003E62  2268               	addwfc	(___fltol@f1+3)^0,f,c
 13504  003E64                     l4775:
 13505  003E64  FFFF               	dw	65535	; assembler added errata NOP
 13506  003E66  C065  F065         	movff	___fltol@f1,?___fltol
 13507  003E6A  C066  F066         	movff	___fltol@f1+1,?___fltol+1
 13508  003E6E  C067  F067         	movff	___fltol@f1+2,?___fltol+2
 13509  003E72  C068  F068         	movff	___fltol@f1+3,?___fltol+3
 13510  003E76                     l596:
 13511  003E76  FFFF               	dw	65535	; assembler added errata NOP
 13512  003E78  0012               	return		;funcret
 13513  003E7A  FFFF               	dw	65535	; errata NOP
 13514  003E7C                     __end_of___fltol:
 13515                           	callstack 0
 13516                           
 13517 ;; *************** function _init_PORTS *****************
 13518 ;; Defined at:
 13519 ;;		line 61 in file "init_PIC.c"
 13520 ;; Parameters:    Size  Location     Type
 13521 ;;		None
 13522 ;; Auto vars:     Size  Location     Type
 13523 ;;		None
 13524 ;; Return value:  Size  Location     Type
 13525 ;;                  1    wreg      void 
 13526 ;; Registers used:
 13527 ;;		wreg, status,2
 13528 ;; Tracked objects:
 13529 ;;		On entry : 0/0
 13530 ;;		On exit  : 0/0
 13531 ;;		Unchanged: 0/0
 13532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13533 ;;      Params:         0       0       0       0       0       0       0
 13534 ;;      Locals:         0       0       0       0       0       0       0
 13535 ;;      Temps:          0       0       0       0       0       0       0
 13536 ;;      Totals:         0       0       0       0       0       0       0
 13537 ;;Total ram usage:        0 bytes
 13538 ;; Hardware stack levels used:    1
 13539 ;; Hardware stack levels required when called:    1
 13540 ;; This function calls:
 13541 ;;		Nothing
 13542 ;; This function is called by:
 13543 ;;		_main
 13544 ;; This function uses a non-reentrant model
 13545 ;;
 13546                           
 13547                           	psect	text54
 13548  006EDC                     __ptext54:
 13549                           	callstack 0
 13550  006EDC                     _init_PORTS:
 13551                           	callstack 0
 13552  006EDC  FFFF               	dw	65535	; assembler added errata NOP
 13553  006EDE                     
 13554                           ;init_PIC.c: 63:     LATA = 0;
 13555  006EDE  0E00               	movlw	0
 13556  006EE0  6E89               	movwf	137,c	;volatile
 13557                           
 13558                           ;init_PIC.c: 64:     PORTA = 0;
 13559  006EE2  0E00               	movlw	0
 13560  006EE4  6E80               	movwf	128,c	;volatile
 13561                           
 13562                           ;init_PIC.c: 65:     TRISA = 0x00;
 13563  006EE6  0E00               	movlw	0
 13564  006EE8  6E92               	movwf	146,c	;volatile
 13565                           
 13566                           ;init_PIC.c: 67:     LATB = 0;
 13567  006EEA  0E00               	movlw	0
 13568  006EEC  6E8A               	movwf	138,c	;volatile
 13569                           
 13570                           ;init_PIC.c: 68:     PORTB = 0;
 13571  006EEE  0E00               	movlw	0
 13572  006EF0  6E81               	movwf	129,c	;volatile
 13573                           
 13574                           ;init_PIC.c: 69:     TRISB = 0xF0;
 13575  006EF2  0EF0               	movlw	240
 13576  006EF4  6E93               	movwf	147,c	;volatile
 13577                           
 13578                           ;init_PIC.c: 72:     LATC = 0;
 13579  006EF6  0E00               	movlw	0
 13580  006EF8  6E8B               	movwf	139,c	;volatile
 13581                           
 13582                           ;init_PIC.c: 73:     PORTC = 0;
 13583  006EFA  0E00               	movlw	0
 13584  006EFC  6E82               	movwf	130,c	;volatile
 13585  006EFE                     
 13586                           ;init_PIC.c: 74:     TRISCbits.RC2 = 0;
 13587  006EFE  9494               	bcf	148,2,c	;volatile
 13588  006F00                     
 13589                           ;init_PIC.c: 75:     TRISCbits.RC7 = 1;
 13590  006F00  8E94               	bsf	148,7,c	;volatile
 13591  006F02                     
 13592                           ;init_PIC.c: 76:     TRISCbits.RC6 = 0;
 13593  006F02  9C94               	bcf	148,6,c	;volatile
 13594  006F04  0012               	return		;funcret
 13595  006F06  FFFF               	dw	65535	; errata NOP
 13596  006F08                     __end_of_init_PORTS:
 13597                           	callstack 0
 13598                           
 13599 ;; *************** function _get_reg_value *****************
 13600 ;; Defined at:
 13601 ;;		line 51 in file "serial_rs232.c"
 13602 ;; Parameters:    Size  Location     Type
 13603 ;;		None
 13604 ;; Auto vars:     Size  Location     Type
 13605 ;;  rx_char         1    0[COMRAM] unsigned char 
 13606 ;; Return value:  Size  Location     Type
 13607 ;;                  1    wreg      unsigned char 
 13608 ;; Registers used:
 13609 ;;		wreg, status,2
 13610 ;; Tracked objects:
 13611 ;;		On entry : 0/0
 13612 ;;		On exit  : 0/0
 13613 ;;		Unchanged: 0/0
 13614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13615 ;;      Params:         0       0       0       0       0       0       0
 13616 ;;      Locals:         1       0       0       0       0       0       0
 13617 ;;      Temps:          0       0       0       0       0       0       0
 13618 ;;      Totals:         1       0       0       0       0       0       0
 13619 ;;Total ram usage:        1 bytes
 13620 ;; Hardware stack levels used:    1
 13621 ;; Hardware stack levels required when called:    1
 13622 ;; This function calls:
 13623 ;;		Nothing
 13624 ;; This function is called by:
 13625 ;;		_main
 13626 ;; This function uses a non-reentrant model
 13627 ;;
 13628                           
 13629                           	psect	text55
 13630  006DD6                     __ptext55:
 13631                           	callstack 0
 13632  006DD6                     _get_reg_value:
 13633                           	callstack 0
 13634  006DD6  FFFF               	dw	65535	; assembler added errata NOP
 13635  006DD8                     
 13636                           ;serial_rs232.c: 52:     unsigned char rx_char = RCREG;
 13637  006DD8  CFAE F001          	movff	4014,get_reg_value@rx_char	;volatile
 13638  006DDC                     
 13639                           ;serial_rs232.c: 53:     RCREG = 0;
 13640  006DDC  0E00               	movlw	0
 13641  006DDE  6EAE               	movwf	174,c	;volatile
 13642                           
 13643                           ;serial_rs232.c: 54:     return rx_char;
 13644  006DE0  5001               	movf	get_reg_value@rx_char^0,w,c
 13645  006DE2  0012               	return		;funcret
 13646  006DE4  FFFF               	dw	65535	; errata NOP
 13647  006DE6                     __end_of_get_reg_value:
 13648                           	callstack 0
 13649                           
 13650 ;; *************** function _compute_next_step *****************
 13651 ;; Defined at:
 13652 ;;		line 162 in file "main.c"
 13653 ;; Parameters:    Size  Location     Type
 13654 ;;  current_step    2    0[COMRAM] PTR int 
 13655 ;;		 -> mix_current_step(2), 
 13656 ;;  step_directi    2    2[COMRAM] int 
 13657 ;; Auto vars:     Size  Location     Type
 13658 ;;		None
 13659 ;; Return value:  Size  Location     Type
 13660 ;;                  1    wreg      void 
 13661 ;; Registers used:
 13662 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13663 ;; Tracked objects:
 13664 ;;		On entry : 0/0
 13665 ;;		On exit  : 0/0
 13666 ;;		Unchanged: 0/0
 13667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13668 ;;      Params:         4       0       0       0       0       0       0
 13669 ;;      Locals:         0       0       0       0       0       0       0
 13670 ;;      Temps:          2       0       0       0       0       0       0
 13671 ;;      Totals:         6       0       0       0       0       0       0
 13672 ;;Total ram usage:        6 bytes
 13673 ;; Hardware stack levels used:    1
 13674 ;; Hardware stack levels required when called:    1
 13675 ;; This function calls:
 13676 ;;		Nothing
 13677 ;; This function is called by:
 13678 ;;		_main
 13679 ;; This function uses a non-reentrant model
 13680 ;;
 13681                           
 13682                           	psect	text56
 13683  0074FA                     __ptext56:
 13684                           	callstack 0
 13685  0074FA                     _compute_next_step:
 13686                           	callstack 0
 13687  0074FA  FFFF               	dw	65535	; assembler added errata NOP
 13688  0074FC                     
 13689                           ;main.c: 163:     *current_step = *current_step + step_direction;
 13690  0074FC  C001  FFD9         	movff	compute_next_step@current_step,fsr2l
 13691  007500  C002  FFDA         	movff	compute_next_step@current_step+1,fsr2h
 13692  007504  CFDE F005          	movff	postinc2,??_compute_next_step
 13693  007508  CFDD F006          	movff	postdec2,??_compute_next_step+1
 13694  00750C  5003               	movf	compute_next_step@step_direction^0,w,c
 13695  00750E  2605               	addwf	??_compute_next_step^0,f,c
 13696  007510  5004               	movf	(compute_next_step@step_direction+1)^0,w,c
 13697  007512  2206               	addwfc	(??_compute_next_step+1)^0,f,c
 13698  007514  C001  FFD9         	movff	compute_next_step@current_step,fsr2l
 13699  007518  C002  FFDA         	movff	compute_next_step@current_step+1,fsr2h
 13700  00751C  C005  FFDE         	movff	??_compute_next_step,postinc2
 13701  007520  C006  FFDD         	movff	??_compute_next_step+1,postdec2
 13702                           
 13703                           ;main.c: 164:     if (*current_step == -1) {
 13704  007524  C001  FFD9         	movff	compute_next_step@current_step,fsr2l
 13705  007528  C002  FFDA         	movff	compute_next_step@current_step+1,fsr2h
 13706  00752C  28DE               	incf	postinc2,w,c
 13707  00752E  E106               	bnz	u6081
 13708  007530  28DE               	incf	postinc2,w,c
 13709  007532  A4D8               	btfss	status,2,c
 13710  007534  EF9E  F03A         	goto	u6081
 13711  007538  EFA1  F03A         	goto	u6080
 13712  00753C                     u6081:
 13713  00753C  FFFF               	dw	65535	; assembler added errata NOP
 13714  00753E  EFAC  F03A         	goto	l5071
 13715  007542                     u6080:
 13716  007542  FFFF               	dw	65535	; assembler added errata NOP
 13717  007544                     
 13718                           ;main.c: 165:         *current_step = 3;
 13719  007544  C001  FFD9         	movff	compute_next_step@current_step,fsr2l
 13720  007548  C002  FFDA         	movff	compute_next_step@current_step+1,fsr2h
 13721  00754C  0E03               	movlw	3
 13722  00754E  6EDE               	movwf	postinc2,c
 13723  007550  0E00               	movlw	0
 13724  007552  6EDD               	movwf	postdec2,c
 13725                           
 13726                           ;main.c: 166:     } else if(*current_step == 4) {
 13727  007554  EFC5  F03A         	goto	l148
 13728  007558                     l5071:
 13729  007558  FFFF               	dw	65535	; assembler added errata NOP
 13730  00755A  C001  FFD9         	movff	compute_next_step@current_step,fsr2l
 13731  00755E  C002  FFDA         	movff	compute_next_step@current_step+1,fsr2h
 13732  007562  0E04               	movlw	4
 13733  007564  18DE               	xorwf	postinc2,w,c
 13734  007566  10DE               	iorwf	postinc2,w,c
 13735  007568  A4D8               	btfss	status,2,c
 13736  00756A  EFB9  F03A         	goto	u6091
 13737  00756E  EFBC  F03A         	goto	u6090
 13738  007572                     u6091:
 13739  007572  FFFF               	dw	65535	; assembler added errata NOP
 13740  007574  EFC5  F03A         	goto	l148
 13741  007578                     u6090:
 13742  007578  FFFF               	dw	65535	; assembler added errata NOP
 13743  00757A                     
 13744                           ;main.c: 167:         *current_step = 0;
 13745  00757A  C001  FFD9         	movff	compute_next_step@current_step,fsr2l
 13746  00757E  C002  FFDA         	movff	compute_next_step@current_step+1,fsr2h
 13747  007582  0E00               	movlw	0
 13748  007584  6EDE               	movwf	postinc2,c
 13749  007586  0E00               	movlw	0
 13750  007588  6EDD               	movwf	postdec2,c
 13751  00758A                     l148:
 13752  00758A  FFFF               	dw	65535	; assembler added errata NOP
 13753  00758C  0012               	return		;funcret
 13754  00758E  FFFF               	dw	65535	; errata NOP
 13755  007590                     __end_of_compute_next_step:
 13756                           	callstack 0
 13757                           
 13758 ;; *************** function _rx_char_usart *****************
 13759 ;; Defined at:
 13760 ;;		line 188 in file "main.c"
 13761 ;; Parameters:    Size  Location     Type
 13762 ;;		None
 13763 ;; Auto vars:     Size  Location     Type
 13764 ;;		None
 13765 ;; Return value:  Size  Location     Type
 13766 ;;                  1    wreg      void 
 13767 ;; Registers used:
 13768 ;;		wreg, status,2
 13769 ;; Tracked objects:
 13770 ;;		On entry : 0/0
 13771 ;;		On exit  : 0/0
 13772 ;;		Unchanged: 0/0
 13773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13774 ;;      Params:         0       0       0       0       0       0       0
 13775 ;;      Locals:         0       0       0       0       0       0       0
 13776 ;;      Temps:          0       0       0       0       0       0       0
 13777 ;;      Totals:         0       0       0       0       0       0       0
 13778 ;;Total ram usage:        0 bytes
 13779 ;; Hardware stack levels used:    1
 13780 ;; This function calls:
 13781 ;;		Nothing
 13782 ;; This function is called by:
 13783 ;;		Interrupt level 2
 13784 ;; This function uses a non-reentrant model
 13785 ;;
 13786                           
 13787                           	psect	intcode
 13788  000008                     __pintcode:
 13789                           	callstack 0
 13790  000008                     _rx_char_usart:
 13791                           	callstack 0
 13792  000008  FFFF               	dw	65535	; assembler added errata NOP
 13793                           
 13794                           ;incstack = 0
 13795  00000A  827E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13796  00000C                     
 13797                           ;main.c: 189:     if(PIE1bits.RCIE && PIR1bits.RCIF){
 13798  00000C  AA9D               	btfss	157,5,c	;volatile
 13799  00000E  EF0B  F000         	goto	i2u627_41
 13800  000012  EF0E  F000         	goto	i2u627_40
 13801  000016                     i2u627_41:
 13802  000016  FFFF               	dw	65535	; assembler added errata NOP
 13803  000018  EF1E  F000         	goto	i2l5255
 13804  00001C                     i2u627_40:
 13805  00001C  FFFF               	dw	65535	; assembler added errata NOP
 13806  00001E  AA9E               	btfss	158,5,c	;volatile
 13807  000020  EF14  F000         	goto	i2u628_41
 13808  000024  EF17  F000         	goto	i2u628_40
 13809  000028                     i2u628_41:
 13810  000028  FFFF               	dw	65535	; assembler added errata NOP
 13811  00002A  EF1E  F000         	goto	i2l5255
 13812  00002E                     i2u628_40:
 13813  00002E  FFFF               	dw	65535	; assembler added errata NOP
 13814  000030                     
 13815                           ;main.c: 190:         PIR1bits.RCIF = 0;
 13816  000030  9A9E               	bcf	158,5,c	;volatile
 13817  000032                     
 13818                           ;main.c: 191:         state_changed = 1;
 13819  000032  0E01               	movlw	1
 13820  000034  0101               	movlb	1	; () banked
 13821  000036  6FA4               	movwf	_state_changed& (0+255),b
 13822                           
 13823                           ;main.c: 192:         read_new_char = 1;
 13824  000038  0E01               	movlw	1
 13825  00003A  6FA2               	movwf	_read_new_char& (0+255),b
 13826  00003C                     i2l5255:
 13827  00003C  FFFF               	dw	65535	; assembler added errata NOP
 13828                           
 13829                           ;main.c: 194:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF){
 13830  00003E  AAF2               	btfss	242,5,c	;volatile
 13831  000040  EF24  F000         	goto	i2u629_41
 13832  000044  EF27  F000         	goto	i2u629_40
 13833  000048                     i2u629_41:
 13834  000048  FFFF               	dw	65535	; assembler added errata NOP
 13835  00004A  EF37  F000         	goto	i2l163
 13836  00004E                     i2u629_40:
 13837  00004E  FFFF               	dw	65535	; assembler added errata NOP
 13838  000050  A4F2               	btfss	242,2,c	;volatile
 13839  000052  EF2D  F000         	goto	i2u630_41
 13840  000056  EF30  F000         	goto	i2u630_40
 13841  00005A                     i2u630_41:
 13842  00005A  FFFF               	dw	65535	; assembler added errata NOP
 13843  00005C  EF37  F000         	goto	i2l163
 13844  000060                     i2u630_40:
 13845  000060  FFFF               	dw	65535	; assembler added errata NOP
 13846  000062                     
 13847                           ;main.c: 195:         T0CON = 0;
 13848  000062  0E00               	movlw	0
 13849  000064  6ED5               	movwf	213,c	;volatile
 13850  000066                     
 13851                           ;main.c: 196:         INTCONbits.TMR0IF = 0;
 13852  000066  94F2               	bcf	242,2,c	;volatile
 13853                           
 13854                           ;main.c: 197:         timer_done = 1;
 13855  000068  0E01               	movlw	1
 13856  00006A  0101               	movlb	1	; () banked
 13857  00006C  6FA1               	movwf	_timer_done& (0+255),b
 13858  00006E                     i2l163:
 13859  00006E  FFFF               	dw	65535	; assembler added errata NOP
 13860  000070  927E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13861  000072  0011               	retfie		f
 13862  000074  FFFF               	dw	65535	; errata NOP
 13863  000076                     __end_of_rx_char_usart:
 13864                           	callstack 0
 13865                           
 13866                           	psect	rparam
 13867  0000                     
 13868                           	psect	temp
 13869  00007E                     btemp:
 13870                           	callstack 0
 13871  00007E                     	ds	1
 13872  0000                     int$flags	set	btemp
 13873  0000                     wtemp8	set	btemp+1
 13874  0000                     ttemp5	set	btemp+1
 13875  0000                     ttemp6	set	btemp+4
 13876  0000                     ttemp7	set	btemp+8
 13877                           
 13878                           	psect	idloc
 13879                           
 13880                           ;Config register IDLOC0 @ 0x200000
 13881                           ;	unspecified, using default values
 13882  200000                     	org	2097152
 13883  200000  FF                 	db	255
 13884                           
 13885                           ;Config register IDLOC1 @ 0x200001
 13886                           ;	unspecified, using default values
 13887  200001                     	org	2097153
 13888  200001  FF                 	db	255
 13889                           
 13890                           ;Config register IDLOC2 @ 0x200002
 13891                           ;	unspecified, using default values
 13892  200002                     	org	2097154
 13893  200002  FF                 	db	255
 13894                           
 13895                           ;Config register IDLOC3 @ 0x200003
 13896                           ;	unspecified, using default values
 13897  200003                     	org	2097155
 13898  200003  FF                 	db	255
 13899                           
 13900                           ;Config register IDLOC4 @ 0x200004
 13901                           ;	unspecified, using default values
 13902  200004                     	org	2097156
 13903  200004  FF                 	db	255
 13904                           
 13905                           ;Config register IDLOC5 @ 0x200005
 13906                           ;	unspecified, using default values
 13907  200005                     	org	2097157
 13908  200005  FF                 	db	255
 13909                           
 13910                           ;Config register IDLOC6 @ 0x200006
 13911                           ;	unspecified, using default values
 13912  200006                     	org	2097158
 13913  200006  FF                 	db	255
 13914                           
 13915                           ;Config register IDLOC7 @ 0x200007
 13916                           ;	unspecified, using default values
 13917  200007                     	org	2097159
 13918  200007  FF                 	db	255
 13919                           
 13920                           	psect	config
 13921                           
 13922                           ; Padding undefined space
 13923  300000                     	org	3145728
 13924  300000  FF                 	db	255
 13925                           
 13926                           ;Config register CONFIG1H @ 0x300001
 13927                           ;	Oscillator Selection bits
 13928                           ;	OSC = RCIO, RC oscillator w/ OSC2 configured as RA6
 13929                           ;	Oscillator System Clock Switch Enable bit
 13930                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
 13931  300001                     	org	3145729
 13932  300001  27                 	db	39
 13933                           
 13934                           ;Config register CONFIG2L @ 0x300002
 13935                           ;	Power-up Timer Enable bit
 13936                           ;	PWRT = OFF, PWRT disabled
 13937                           ;	Brown-out Reset Enable bit
 13938                           ;	BOR = ON, Brown-out Reset enabled
 13939                           ;	Brown-out Reset Voltage bits
 13940                           ;	BORV = 20, VBOR set to 2.0V
 13941  300002                     	org	3145730
 13942  300002  0F                 	db	15
 13943                           
 13944                           ;Config register CONFIG2H @ 0x300003
 13945                           ;	Watchdog Timer Enable bit
 13946                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 13947                           ;	Watchdog Timer Postscale Select bits
 13948                           ;	WDTPS = 128, 1:128
 13949  300003                     	org	3145731
 13950  300003  0E                 	db	14
 13951                           
 13952                           ; Padding undefined space
 13953  300004                     	org	3145732
 13954  300004  FF                 	db	255
 13955                           
 13956                           ;Config register CONFIG3H @ 0x300005
 13957                           ;	CCP2 Mux bit
 13958                           ;	CCP2MUX = ON, CCP2 input/output is multiplexed with RC1
 13959  300005                     	org	3145733
 13960  300005  01                 	db	1
 13961                           
 13962                           ;Config register CONFIG4L @ 0x300006
 13963                           ;	Stack Full/Underflow Reset Enable bit
 13964                           ;	STVR = ON, Stack Full/Underflow will cause RESET
 13965                           ;	Low Voltage ICSP Enable bit
 13966                           ;	LVP = ON, Low Voltage ICSP enabled
 13967                           ;	Background Debugger Enable bit
 13968                           ;	DEBUG = 0x1, unprogrammed default
 13969  300006                     	org	3145734
 13970  300006  85                 	db	133
 13971                           
 13972                           ; Padding undefined space
 13973  300007                     	org	3145735
 13974  300007  FF                 	db	255
 13975                           
 13976                           ;Config register CONFIG5L @ 0x300008
 13977                           ;	Code Protection bit
 13978                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
 13979                           ;	Code Protection bit
 13980                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
 13981                           ;	Code Protection bit
 13982                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
 13983                           ;	Code Protection bit
 13984                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
 13985  300008                     	org	3145736
 13986  300008  0F                 	db	15
 13987                           
 13988                           ;Config register CONFIG5H @ 0x300009
 13989                           ;	Boot Block Code Protection bit
 13990                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
 13991                           ;	Data EEPROM Code Protection bit
 13992                           ;	CPD = OFF, Data EEPROM not code protected
 13993  300009                     	org	3145737
 13994  300009  C0                 	db	192
 13995                           
 13996                           ;Config register CONFIG6L @ 0x30000A
 13997                           ;	Write Protection bit
 13998                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
 13999                           ;	Write Protection bit
 14000                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
 14001                           ;	Write Protection bit
 14002                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
 14003                           ;	Write Protection bit
 14004                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
 14005  30000A                     	org	3145738
 14006  30000A  0F                 	db	15
 14007                           
 14008                           ;Config register CONFIG6H @ 0x30000B
 14009                           ;	Configuration Register Write Protection bit
 14010                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
 14011                           ;	Boot Block Write Protection bit
 14012                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
 14013                           ;	Data EEPROM Write Protection bit
 14014                           ;	WRTD = OFF, Data EEPROM not write protected
 14015  30000B                     	org	3145739
 14016  30000B  E0                 	db	224
 14017                           
 14018                           ;Config register CONFIG7L @ 0x30000C
 14019                           ;	Table Read Protection bit
 14020                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
 14021                           ;	Table Read Protection bit
 14022                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
 14023                           ;	Table Read Protection bit
 14024                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
 14025                           ;	Table Read Protection bit
 14026                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
 14027  30000C                     	org	3145740
 14028  30000C  0F                 	db	15
 14029                           
 14030                           ;Config register CONFIG7H @ 0x30000D
 14031                           ;	Boot Block Table Read Protection bit
 14032                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
 14033  30000D                     	org	3145741
 14034  30000D  40                 	db	64
 14035                           tosu	equ	0xFFF
 14036                           tosh	equ	0xFFE
 14037                           tosl	equ	0xFFD
 14038                           stkptr	equ	0xFFC
 14039                           pclatu	equ	0xFFB
 14040                           pclath	equ	0xFFA
 14041                           pcl	equ	0xFF9
 14042                           tblptru	equ	0xFF8
 14043                           tblptrh	equ	0xFF7
 14044                           tblptrl	equ	0xFF6
 14045                           tablat	equ	0xFF5
 14046                           prodh	equ	0xFF4
 14047                           prodl	equ	0xFF3
 14048                           indf0	equ	0xFEF
 14049                           postinc0	equ	0xFEE
 14050                           postdec0	equ	0xFED
 14051                           preinc0	equ	0xFEC
 14052                           plusw0	equ	0xFEB
 14053                           fsr0h	equ	0xFEA
 14054                           fsr0l	equ	0xFE9
 14055                           wreg	equ	0xFE8
 14056                           indf1	equ	0xFE7
 14057                           postinc1	equ	0xFE6
 14058                           postdec1	equ	0xFE5
 14059                           preinc1	equ	0xFE4
 14060                           plusw1	equ	0xFE3
 14061                           fsr1h	equ	0xFE2
 14062                           fsr1l	equ	0xFE1
 14063                           bsr	equ	0xFE0
 14064                           indf2	equ	0xFDF
 14065                           postinc2	equ	0xFDE
 14066                           postdec2	equ	0xFDD
 14067                           preinc2	equ	0xFDC
 14068                           plusw2	equ	0xFDB
 14069                           fsr2h	equ	0xFDA
 14070                           fsr2l	equ	0xFD9
 14071                           status	equ	0xFD8

Data Sizes:
    Strings     336
    Constant    20
    Data        31
    BSS         60
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    125     125
    BANK0           128     22      87
    BANK1           256    161     187
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    main$1947	PTR const unsigned char  size(2) Largest target is 63
		 -> STR_6(CODE[49]), STR_5(CODE[55]), STR_4(CODE[39]), STR_3(CODE[9]), 
		 -> STR_2(CODE[63]), STR_1(CODE[47]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_105(CODE[3]), STR_101(CODE[3]), STR_96(CODE[3]), STR_92(CODE[3]), 
		 -> STR_87(CODE[4]), STR_83(CODE[4]), STR_78(CODE[3]), STR_73(CODE[3]), 
		 -> STR_68(CODE[4]), STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[4]), 
		 -> STR_48(CODE[3]), STR_43(CODE[3]), STR_38(CODE[4]), STR_33(CODE[3]), 
		 -> STR_29(CODE[3]), STR_24(CODE[3]), STR_20(CODE[3]), STR_15(CODE[4]), 
		 -> STR_11(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_105(CODE[3]), STR_101(CODE[3]), STR_96(CODE[3]), STR_92(CODE[3]), 
		 -> STR_87(CODE[4]), STR_83(CODE[4]), STR_78(CODE[3]), STR_73(CODE[3]), 
		 -> STR_68(CODE[4]), STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[4]), 
		 -> STR_48(CODE[3]), STR_43(CODE[3]), STR_38(CODE[4]), STR_33(CODE[3]), 
		 -> STR_29(CODE[3]), STR_24(CODE[3]), STR_20(CODE[3]), STR_15(CODE[4]), 
		 -> STR_11(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), ?_snprintf(BANK0[2]), STR_6(CODE[49]), 
		 -> STR_5(CODE[55]), STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[63]), 
		 -> STR_1(CODE[47]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), ?_snprintf(BANK0[2]), STR_6(CODE[49]), 
		 -> STR_5(CODE[55]), STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[63]), 
		 -> STR_1(CODE[47]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), STR_6(CODE[49]), STR_5(CODE[55]), STR_4(CODE[39]), 
		 -> STR_3(CODE[9]), STR_2(CODE[63]), STR_1(CODE[47]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), STR_6(CODE[49]), STR_5(CODE[55]), STR_4(CODE[39]), 
		 -> STR_3(CODE[9]), STR_2(CODE[63]), STR_1(CODE[47]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), STR_6(CODE[49]), STR_5(CODE[55]), STR_4(CODE[39]), 
		 -> STR_3(CODE[9]), STR_2(CODE[63]), STR_1(CODE[47]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_snprintf(BANK0[2]), STR_6(CODE[49]), STR_5(CODE[55]), 
		 -> STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[63]), STR_1(CODE[47]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    S1341_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    state_translator_micro_to_fpga@state	PTR int  size(2) Largest target is 2
		 -> state(BANK1[2]), 

    state_translator_fpga_to_micro@state	PTR int  size(2) Largest target is 2
		 -> state(BANK1[2]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), STR_7(CODE[22]), 

    mix_exit_condition@current_step	PTR int  size(2) Largest target is 2
		 -> mix_current_step(BANK1[2]), 

    update_direction_and_counters@step_direction	PTR int  size(2) Largest target is 2
		 -> mix_direction(BANK1[2]), 

    update_direction_and_counters@counter	PTR int  size(2) Largest target is 2
		 -> mix_counter(BANK1[2]), 

    update_direction_and_counters@counter_step	PTR int  size(2) Largest target is 2
		 -> mix_step_counter(BANK1[2]), 

    compute_next_step@current_step	PTR int  size(2) Largest target is 2
		 -> mix_current_step(BANK1[2]), 

    main@greet_str	PTR const unsigned char [80] size(2) Largest target is 63
		 -> ?_snprintf(BANK0[2]), STR_6(CODE[49]), STR_5(CODE[55]), STR_4(CODE[39]), 
		 -> STR_3(CODE[9]), STR_2(CODE[63]), STR_1(CODE[47]), 

    state_msgs	PTR const unsigned char [6] size(2) Largest target is 63
		 -> STR_6(CODE[49]), STR_5(CODE[55]), STR_4(CODE[39]), STR_3(CODE[9]), 
		 -> STR_2(CODE[63]), STR_1(CODE[47]), 


Critical Paths under _main in COMRAM

    _state_translator_fpga_to_micro->_lcd_dat
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _lcd_str->_lcd_dat
    _lcd_dat->_lcd_wr
    _lcd_init->_lcd_cmd
    _lcd_cmd->_lcd_wr
    _init_timer_2->___fltol
    _init_ccp1->_update_pwm_duty_ccp1
    _update_pwm_duty_ccp1->___fltol
    ___fldiv->___flmul
    _init_USART->___fltol
    _roundf->___flsub
    ___flsub->___fladd
    ___fladd->___fldiv
    ___fltol->_roundf

Critical Paths under _rx_char_usart in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_snprintf
    _snprintf->_vsnprintf

Critical Paths under _rx_char_usart in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rx_char_usart in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rx_char_usart in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rx_char_usart in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _rx_char_usart in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _rx_char_usart in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               163   163      0   73563
                                            123 COMRAM     2     2      0
                                              0 BANK1    161   161      0
                  _compute_next_step
                      _get_reg_value
                         _init_PORTS
                         _init_USART
                          _init_ccp1
                    _init_interrupts
                       _init_timer_0
                       _init_timer_2
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                 _mix_exit_condition
                     _serial_tx_char
                           _snprintf
     _state_translator_fpga_to_micro
     _state_translator_micro_to_fpga
      _update_direction_and_counters
 ---------------------------------------------------------------------------------
 (1) _update_direction_and_counters                        8     2      6    1088
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _state_translator_micro_to_fpga                       5     3      2     464
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _state_translator_fpga_to_micro                       3     1      2     384
                                              2 COMRAM     3     1      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            12     4      8   46313
                                             10 BANK0     12     4      8
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (2) _vsnprintf                                           22    14      8   45939
                                            111 COMRAM    12     4      8
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   45176
                                            103 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   44715
                                             66 COMRAM    37    31      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    7075
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    6115
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    5013
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    5560
                                             27 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6714
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    4829
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4609
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1864
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     871
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _serial_tx_char                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _mix_exit_condition                                   4     0      4     652
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              5     3      2     286
                                              2 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              1     1      0      44
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0      44
                                              2 COMRAM     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0      44
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_timer_2                                         4     4      0    7709
                                            110 COMRAM     4     4      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _init_timer_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ccp1                                            0     0      0    4374
               _update_pwm_duty_ccp1
 ---------------------------------------------------------------------------------
 (2) _update_pwm_duty_ccp1                                 9     5      4    4374
                                            110 COMRAM     9     5      4
                            ___fldiv
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1551
                                             25 COMRAM    25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_USART                                           0     0      0   11258
                            ___fltol
                             _roundf
 ---------------------------------------------------------------------------------
 (2) _roundf                                              26    22      4   10801
                                             74 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3801
                                             66 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    3478
                                             50 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2200
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                            100 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_PORTS                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_reg_value                                        1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _compute_next_step                                    6     2      4     762
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _rx_char_usart                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _compute_next_step
   _get_reg_value
   _init_PORTS
   _init_USART
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
         ___flmul (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
       ___flmul (ARG)
       _roundf (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
           ___flmul (ARG)
         ___flge
         ___flmul
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
             ___flmul (ARG)
     _roundf
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
         ___flmul (ARG)
       ___flge
       ___flmul
       ___flneg
       ___flsub
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
           ___flmul (ARG)
   _init_ccp1
     _update_pwm_duty_ccp1
       ___fldiv
         ___flmul (ARG)
       ___flmul
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
           ___flmul (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
         ___flmul (ARG)
         _roundf (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
             ___flmul (ARG)
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
               ___flmul (ARG)
   _init_interrupts
   _init_timer_0
   _init_timer_2
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
       ___flmul (ARG)
     ___fldiv
       ___flmul (ARG)
     ___flmul
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
         ___flmul (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
       ___flmul (ARG)
       _roundf (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
           ___flmul (ARG)
         ___flge
         ___flmul
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
             ___flmul (ARG)
   _lcd_cmd
     _lcd_wr
   _lcd_init
     _lcd_cmd
       _lcd_wr
   _lcd_str
     _lcd_dat
       _lcd_wr
   _mix_exit_condition
   _serial_tx_char
   _snprintf
     _vsnprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _state_translator_fpga_to_micro
     _lcd_dat
       _lcd_wr
   _state_translator_micro_to_fpga
   _update_direction_and_counters

 _rx_char_usart (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     A1      BB       7       73.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     16      57       5       68.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7D      7D       1       99.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     18F      15        0.0%
DATA                 0      0     18F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Jun 06 00:24:30 2023

                                           ?_get_reg_value 0001  
                                             ___fldiv@aexp 0032  
                                             ___fldiv@bexp 0031  
                                             ___fldiv@sign 002A  
                                                       l21 6FB0  
                                                       l24 6E02  
                                                       l27 6E16  
                                                       l36 6DE2  
                                      ___wmul@multiplicand 0003  
                                                      l202 6DC6  
                                                      l114 2772  
                                                      l211 746E  
                                                      l123 28E0  
                                                      l115 280C  
                                                      l205 6E84  
                                                      l118 2854  
                                                      l208 6EAE  
                                                      l232 7B82  
                                                      l240 7C80  
                                                      l152 7646  
                                                      l217 74F6  
                                                      l137 2A54  
                                                      l148 758A  
                                                      l156 6F6E  
                                                      l236 7C80  
                                                      l413 3A78  
                                                      l190 6F04  
                                                      l246 7C84  
                                                      l193 6DBA  
                                                      l426 3C08  
                                                      l283 6E5A  
                                                      l286 77D6  
                                                      l296 770A  
                                                      l289 6E38  
                                                      l299 6ED8  
                                                      l564 3F50  
                                                      l573 6FF2  
                                                      l920 1D02  
                                                      l744 7E96  
                                                      l569 3F9E  
                                                      l913 1AF6  
                                                      l737 7E74  
                                                      l930 1E60  
                                                      l922 1D92  
                                                      l754 7A88  
                                                      l923 1D7A  
                                                      l827 16AA  
                                                      l747 7A66  
                                                      l596 3E76  
                                                      l844 17EE  
                                                      l836 1A04  
                                                      l828 1694  
                                                      l917 1EA8  
                                                      l853 18F2  
                                                      l829 164A  
                                                      l854 18DA  
                                                      l881 22DA  
                                                      l883 20F2  
                                                      l892 2148  
                                                      l869 7148  
                                                      l894 21D8  
                                                      l886 20AC  
                                                      l895 21C0  
                                                      l992 6F38  
                                                      l978 26C0  
                                        ??_init_interrupts 0001  
                                                      _PR2 000FCB  
                                                      _abs 714C  
                                                      _pad 78BC  
                                                      wreg 000FE8  
                                           ?_rx_char_usart 0001  
                                             ___flmul@aexp 0012  
                                             ___flmul@bexp 0013  
                                             ___flmul@sign 000D  
                                             ___flmul@temp 0018  
                                             ___flmul@prod 0014  
                                             ___fltol@exp1 006E  
                                                     l1000 3D40  
                                                     l1100 3522  
                                                     l1005 3D1A  
                                                     l1130 3122  
                                                     l1051 799E  
                                                     l1123 36F6  
                                                     l1107 35B6  
                                                     ?_abs 0013  
                                                     l1109 35C0  
                                                     l1205 145C  
                                                     l1046 7910  
                                                     l1118 3698  
                                                     l1119 36EC  
                                                     l1143 2DE8  
                                                     l1064 2B28  
                                                     l1128 3118  
                                                     l1152 2E96  
                                                     l1049 795C  
                                                     l1313 7076  
                                                     l1145 2DF2  
                                                     l1058 72AA  
                                                     l1066 2B32  
                                                     l1138 32FC  
                                                     l1250 73F0  
                                                     l1307 7244  
                                                     l1091 334E  
                                                     l1084 2DA0  
                                                     PORTD 000F83  
                                                     PORTE 000F84  
                                                     l1254 7188  
                                                     l1166 3064  
                                                     l1182 0198  
                                                     l1328 78B6  
                                                     l1336 71E4  
                                                     l1168 30D0  
                                                     l4001 16E6  
                                                     l1345 3FFC  
                                                     l1257 7192  
                                                     l1089 3344  
                                                     l1249 73E8  
                                                     l1098 34B0  
                                                     l1370 70B8  
                                                     l4011 172E  
                                                     l4003 16F8  
                                                     l1339 6DAE  
                                                     l1364 737E  
                                                     l4021 1782  
                                                     l4013 1742  
                                                     l4005 170A  
                                                     l1285 38B8  
                                                     l1349 7D8A  
                                                     l1293 70FE  
                                                     l4101 00B4  
                                                     l4031 180A  
                                                     l4023 17B6  
                                                     l4015 1744  
                                                     l4007 171C  
                                                     l1359 7374  
                                                     l4111 00F0  
                                                     l4103 00C6  
                                                     l1288 38C2  
                                                     l4041 1850  
                                                     l4033 181E  
                                                     l4025 17B8  
                                                     l4017 1750  
                                                     l4009 1728  
                                                     l3401 393C  
                                                     l4105 00CA  
                                                     l5001 7AD8  
                                                     l4051 188A  
                                                     l4043 1852  
                                                     l4027 17CC  
                                                     l4019 1756  
                                                     l1299 7034  
                                                     l3411 399E  
                                                     l3403 394A  
                                                     l4203 063A  
                                                     l4131 0126  
                                                     l4123 010E  
                                                     l4115 00FA  
                                                     l4107 00D6  
                                                     l5011 7B44  
                                                     l5003 7AEC  
                                                     l4061 18D0  
                                                     l4045 1866  
                                                     l4037 1832  
                                                     l4053 188C  
                                                     l4029 17DC  
                                                     l3421 3A1A  
                                                     l3413 39B2  
                                                     l3405 396C  
                                                     l3501 7A4C  
                                                     l4213 06DC  
                                                     l4205 0666  
                                                     l4141 0210  
                                                     l4109 00DC  
                                                     l4133 0180  
                                                     l5013 7B5C  
                                                     l5005 7B04  
                                                     l5101 26C6  
                                                     l4071 1964  
                                                     l4047 186E  
                                                     l4039 183E  
                                                     l4055 189E  
                                                     l3351 7812  
                                                     l3511 78FA  
                                                     l3415 39E4  
                                                     l3407 3974  
                                                     l3423 3A20  
                                                     l3431 3A7E  
                                                     l3503 7A60  
                                                     l4311 0DAA  
                                                     l4303 0D28  
                                                     l4231 085E  
                                                     l4223 07A2  
                                                     l4215 0718  
                                                     l4207 068E  
                                                     l4143 0222  
                                                     l4135 01AC  
                                                     l4127 0118  
                                                     l4119 0104  
                                                     l5015 7B70  
                                                     l5007 7B18  
                                                     l5031 7BD8  
                                                     l5023 7B8A  
                                                     l5111 26DC  
                                                     l5103 26CC  
                                                     l4081 19B8  
                                                     l4065 1908  
                                                     l4073 1966  
                                                     l4057 18A4  
                                                     l4049 1874  
                                                     l3353 7836  
                                                     l3345 77DC  
                                                     l3361 71A6  
                                                     l3521 7970  
                                                     l3513 7906  
                                                     l3505 78BE  
                                                     l3425 3A36  
                                                     l3417 3A04  
                                                     l3409 398A  
                                                     l3441 3ACC  
                                                     l3433 3A82  
                                                     l3601 2B74  
                                                     l4401 13DE  
                                                     l4321 0EA2  
                                                     l4313 0DE6  
                                                     l4305 0D54  
                                                     l4241 0916  
                                                     l4233 089A  
                                                     l4225 07DE  
                                                     l4217 0750  
                                                     l4161 030A  
                                                     l4153 02B2  
                                                     l4145 0230  
                                                     l4137 01AE  
                                                     l5017 6F0A  
                                                     l5009 7B30  
                                                     l5041 7C4E  
                                                     l5033 7BFA  
                                                     l5025 7BA8  
                                                     l5121 26FE  
                                                     l5113 26E0  
                                                     l5105 26D0  
                                                     l4091 19F0  
                                                     l4083 19CC  
                                                     l4075 197C  
                                                     l4067 1914  
                                                     l4059 18B6  
                                                     l5051 6E4A  
                                                     l3355 786E  
                                                     l3347 77F2  
                                                     l3363 71BA  
                                                     l3371 3FB8  
                                                     l3523 7984  
                                                     l3515 791E  
                                                     l3507 78D2  
                                                     l3427 3A56  
                                                     l3419 3A06  
                                                     l3451 3B42  
                                                     l3443 3AEC  
                                                     l3435 3A94  
                                                     l3611 2C12  
                                                     l3603 2B7C  
                                                     l3531 7038  
                                                     l4403 13EC  
                                                     l4315 0E2C  
                                                     l4307 0D8A  
                                                     l4227 0824  
                                                     l4163 0334  
                                                     l4147 0252  
                                                     l4155 02C6  
                                                     l4139 01DA  
                                                     l5019 6F14  
                                                     l5043 7C56  
                                                     l5035 7C02  
                                                     l5027 7BB0  
                                                     l5131 2722  
                                                     l5123 2700  
                                                     l5115 26E6  
                                                     l5107 26D4  
                                                     l4093 19F2  
                                                     l4085 19D2  
                                                     l4077 198E  
                                                     l4069 1926  
                                                     l4501 2084  
                                                     l5061 6E54  
                                                     l5053 6E4C  
                                                     l3381 6EB4  
                                                     l3349 7806  
                                                     l3365 71BE  
                                                     l3373 3FF0  
                                                     l3517 7934  
                                                     l3509 78E6  
                                                     l3461 3BC6  
                                                     l3453 3B76  
                                                     l3445 3B10  
                                                     l3437 3AB4  
                                                     l3621 2CF4  
                                                     l3605 2B84  
                                                     l3613 2C76  
                                                     l3701 357E  
                                                     l4405 1400  
                                                     l4261 0A88  
                                                     l4173 03F0  
                                                     l4165 036E  
                                                     l4157 02F2  
                                                     l4149 0262  
                                                     l5045 7C78  
                                                     l5037 7C24  
                                                     l5029 7BD0  
                                                     l5141 277C  
                                                     l5133 273A  
                                                     l5125 270A  
                                                     l5117 26EC  
                                                     l5109 26D8  
                                                     l5071 7558  
                                                     l4087 19D6  
                                                     l4079 19B4  
                                                     l4511 20DE  
                                                     l4503 2098  
                                                     l4431 1EB0  
                                                     l5063 6E56  
                                                     l5055 6E4E  
                                                     l3383 6ED0  
                                                     l3359 719A  
                                                     l3367 3FA6  
                                                     l3519 7938  
                                                     l3391 38E0  
                                                     l3463 3BE6  
                                                     l3455 3B96  
                                                     l3447 3B18  
                                                     l3439 3AB8  
                                                     l3527 714E  
                                                     l3631 2D4E  
                                                     l3615 2C96  
                                                     l3623 2D06  
                                                     l3607 2C06  
                                                     l3711 3604  
                                                     l3703 3590  
                                                     l3471 7DC0  
                                                     l3535 70BC  
                                                     l3543 7352  
                                                     l4351 10A6  
                                                     l4343 0FF8  
                                                     l4335 0F6C  
                                                     l4327 0EF2  
                                                     l4319 0E66  
                                                     l4255 09F0  
                                                     l4247 0964  
                                                     l4239 08EA  
                                                     l4183 047E  
                                                     l4167 0390  
                                                     l4159 02FC  
                                                     l4175 0404  
                                                     l4415 1422  
                                                     l5039 7C2C  
                                                     l5207 2998  
                                                     l5231 2A06  
                                                     l5151 27DA  
                                                     l5143 278C  
                                                     l5135 274E  
                                                     l5127 2712  
                                                     l5119 26F2  
                                                     l5073 757A  
                                                     l4601 1AE4  
                                                     l4089 19DE  
                                                     l4521 2134  
                                                     l4513 20EE  
                                                     l4505 20AA  
                                                     l4441 1EFA  
                                                     l4433 1EBC  
                                                     l5065 6E58  
                                                     l5057 6E50  
                                                     l5049 6E3E  
                                                     l3561 723C  
                                                     l3553 71E8  
                                                     l3369 3FB2  
                                                     l3393 3900  
                                                     l3457 3BAA  
                                                     l3449 3B2E  
                                                     l3529 716C  
                                                     l3633 2D5A  
                                                     l3625 2D1E  
                                                     l3617 2CB8  
                                                     l3609 2C0C  
                                                     l3641 3302  
                                                     l3721 3674  
                                                     l3713 3626  
                                                     l3481 7E38  
                                                     l3473 7DC8  
                                                     l3377 707A  
                                                     l3545 7368  
                                                     l3801 2F28  
                                                     l4417 144A  
                                                     l4409 140E  
                                                     l4361 118E  
                                                     l4353 10DC  
                                                     l4345 1034  
                                                     l4337 0FA8  
                                                     l4329 0F1E  
                                                     l4257 0A2C  
                                                     l4265 0A96  
                                                     l4249 09A0  
                                                     l4193 0576  
                                                     l4185 04BA  
                                                     l4177 0430  
                                                     l4169 03A0  
                                                     l4097 007C  
                                                     l5081 75F6  
                                                     l5233 2A20  
                                                     l5217 29A2  
                                                     l5161 2826  
                                                     l5153 27E6  
                                                     l5137 2756  
                                                     l5145 2792  
                                                     l5129 271A  
                                                     l5067 74FC  
                                                     l4611 1B42  
                                                     l4603 1B0C  
                                                     l4531 2184  
                                                     l4523 2146  
                                                     l4515 2108  
                                                     l4507 20B8  
                                                     l4451 1F30  
                                                     l4443 1F0A  
                                                     l4435 1ECE  
                                                     l5059 6E52  
                                                     l3555 71EE  
                                                     l3571 727C  
                                                     l3395 3904  
                                                     l3387 38CA  
                                                     l3459 3BB0  
                                                     l3635 2D64  
                                                     l3627 2D30  
                                                     l3619 2CD6  
                                                     l3651 3380  
                                                     l3643 3316  
                                                     l3715 3634  
                                                     l3707 35EA  
                                                     l3483 7E58  
                                                     l3475 7DDE  
                                                     l3467 7D92  
                                                     l3491 79C6  
                                                     l3731 30D6  
                                                     l3539 7316  
                                                     l3811 2F70  
                                                     l3803 2F3E  
                                                     l4363 11B8  
                                                     l4371 1208  
                                                     l4347 106C  
                                                     l4267 0AD2  
                                                     l4275 0B3C  
                                                     l4259 0A64  
                                                     l4195 05B2  
                                                     l4187 04F2  
                                                     l4179 0462  
                                                     l4099 00A6  
                                                     l5083 761E  
                                                     l5235 2A34  
                                                     l5227 29AC  
                                                     l5171 287E  
                                                     l5163 283A  
                                                     l5147 27CE  
                                                     l5139 276C  
                                                     l5155 27EC  
                                                     l5069 7544  
                                                     l4621 1B92  
                                                     l4613 1B4C  
                                                     l4605 1B1E  
                                                     l3901 1484  
                                                     l4701 7114  
                                                     l4541 220C  
                                                     l4533 21B6  
                                                     l4517 2122  
                                                     l4525 215A  
                                                     l4509 20DC  
                                                     l4461 1F74  
                                                     l4453 1F36  
                                                     l4445 1F0E  
                                                     l4437 1ED0  
                                                     l4429 6DC2  
                                                     l3549 6FF6  
                                                     l3557 7206  
                                                     l3573 7282  
                                                     l3565 724A  
                                                     l3397 3918  
                                                     l3389 38CE  
                                                     l3629 2D38  
                                                     l3637 2D76  
                                                     l3581 2A92  
                                                     l3661 33B2  
                                                     l3653 3384  
                                                     l3645 3318  
                                                     l3725 36B0  
                                                     l3717 366C  
                                                     l3709 3600  
                                                     l3485 7E5A  
                                                     l3477 7DF2  
                                                     l3469 7D9E  
                                                     l3493 79CE  
                                                     l3741 3154  
                                                     l3733 30EA  
                                                     l3821 3052  
                                                     l3805 2F52  
                                                     l3813 2FD2  
                                                     l4373 1234  
                                                     l4365 11C8  
                                                     l4349 1096  
                                                     l4357 111A  
                                                     l4277 0B68  
                                                     l4285 0BD0  
                                                     l4269 0B0A  
                                                     l4197 05EA  
                                                     l4189 053C  
                                                     l5077 7592  
                                                     l5237 2A40  
                                                     l5229 29BE  
                                                     l5181 28F4  
                                                     l5173 2892  
                                                     l5165 284A  
                                                     l5157 2806  
                                                     l5149 27D4  
                                                     ?_pad 0011  
                                                     l4711 3EF4  
                                                     l4631 1BD4  
                                                     l4623 1B9E  
                                                     l4615 1B62  
                                                     l3903 149A  
                                                     l3911 14CA  
                                                     l4551 2290  
                                                     l4543 2236  
                                                     l4527 216E  
                                                     l4519 2128  
                                                     l4471 1FBE  
                                                     l4463 1F84  
                                                     l4455 1F48  
                                                     l4439 1EE6  
                                                     l4447 1F16  
                                                     l5087 6F3E  
                                                     l3559 7238  
                                                     l3575 7286  
                                                     l3567 7262  
                                                     l3399 3938  
                                                     l3591 2B1C  
                                                     l3583 2AC4  
                                                     l3671 3462  
                                                     l3663 33B8  
                                                     l3655 3390  
                                                     l3647 3338  
                                                     l3727 36C6  
                                                     l3719 3670  
                                                     l3487 7E6E  
                                                     l3479 7E06  
                                                     l3495 79E4  
                                                     l3751 31E6  
                                                     l3743 315C  
                                                     l3735 30EC  
                                                     l3823 307A  
                                                     l3815 2FF4  
                                                     l3807 2F64  
                                                     l4391 1362  
                                                     l4375 125C  
                                                     l4359 1156  
                                                     l4287 0C0C  
                                                     l4295 0C76  
                                                     l4279 0B9E  
                                                     l5079 75E6  
                                                     l5343 29D6  
                                                     l5191 2950  
                                                     l5175 28AC  
                                                     l5183 28FE  
                                                     l5167 285A  
                                                     l5159 2810  
                                                     l4721 3F94  
                                                     l4713 3F04  
                                                     l4705 3E7E  
                                                     l4641 1C36  
                                                     l4633 1BE4  
                                                     l4625 1BAC  
                                                     l4617 1B6E  
                                                     l4609 1B34  
                                                     l3921 1504  
                                                     l3913 14DC  
                                                     l3905 14AE  
                                                     l4561 22CE  
                                                     l4553 22AC  
                                                     l4537 21EE  
                                                     l4545 223A  
                                                     l4529 2172  
                                                     l4473 1FCE  
                                                     l4481 1FF0  
                                                     l4465 1F88  
                                                     l4457 1F4A  
                                                     l4449 1F28  
                                                     l5089 6F5E  
                                                     l3841 373E  
                                                     l3833 36FC  
                                                     l3569 726E  
                                                     l3593 2B3C  
                                                     l3585 2AE4  
                                                     l3681 34E2  
                                                     l3673 3480  
                                                     l3665 33BE  
                                                     l3657 3398  
                                                     l3649 3378  
                                                     l3729 36CA  
                                                     l3497 79F8  
                                                     l3489 79A4  
                                                     l3761 32C0  
                                                     l3745 3164  
                                                     l3753 324A  
                                                     l3737 310C  
                                                     l3825 3080  
                                                     l3817 3016  
                                                     l3809 2F6A  
                                                     l4393 1372  
                                                     l4377 1276  
                                                     l4385 12C4  
                                                     l4297 0CA2  
                                                     l4289 0C44  
                                                     l5345 0150  
                                                     l5193 296C  
                                                     l5185 2918  
                                                     l5177 28C0  
                                                     l5169 2872  
                                                     l4723 3F9A  
                                                     l4715 3F18  
                                                     l4707 3EB0  
                                                     l4651 1CE2  
                                                     l4643 1C52  
                                                     l4635 1BFE  
                                                     l4627 1BB8  
                                                     l4619 1B86  
                                                     l4571 1A18  
                                                     l4731 6FE0  
                                                     l3931 1552  
                                                     l3923 1516  
                                                     l3915 14E4  
                                                     l3907 14BE  
                                                     l4811 260E  
                                                     l4803 242A  
                                                     l4555 22B2  
                                                     l4547 225A  
                                                     l4539 21FA  
                                                     l4491 2036  
                                                     l4483 2006  
                                                     l4475 1FD6  
                                                     l4459 1F60  
                                                     l4467 1F90  
                                                     l5347 37D6  
                                                     l3851 37A0  
                                                     l3843 377A  
                                                     l3835 3710  
                                                     l3595 2B52  
                                                     l3587 2AFA  
                                                     l3579 2A72  
                                                     l3683 34F2  
                                                     l3675 349E  
                                                     l3659 33A0  
                                                     l3667 3420  
                                                     l3691 353A  
                                                     l3499 7A2C  
                                                     l3755 3262  
                                                     l3763 32D2  
                                                     l3747 31DA  
                                                     l3739 314C  
                                                     l3827 3090  
                                                     l3819 3034  
                                                     l3771 2DBC  
                                                     l4387 1300  
                                                     l4379 1284  
                                                     l4299 0CEC  
                                                     l5195 2980  
                                                     l5187 2934  
                                                     l5179 28CC  
                                                     l5099 26C6  
                                                     l4741 3D78  
                                                     l4717 3F2A  
                                                     l4709 3EC0  
                                                     l4661 1D2C  
                                                     l4653 1CEE  
                                                     l4645 1C7C  
                                                     l4637 1C0E  
                                                     l4629 1BC8  
                                                     l4581 1A66  
                                                     l4573 1A2A  
                                                     l3941 159A  
                                                     l3933 1556  
                                                     l3925 1518  
                                                     l3917 14FA  
                                                     l3909 14C2  
                                                     l4813 2644  
                                                     l4805 24FE  
                                                     l4901 6FA2  
                                                     l4557 22C4  
                                                     l4549 2270  
                                                     l4493 2046  
                                                     l4485 2006  
                                                     l4477 1FDC  
                                                     l4469 1FA2  
                                                     l4821 6E62  
                                                     l3861 3828  
                                                     l3853 37AA  
                                                     l3845 377E  
                                                     l3837 3716  
                                                     l3597 2B62  
                                                     l3589 2AFC  
                                                     l3677 34C6  
                                                     l3685 34F8  
                                                     l3669 3440  
                                                     l3693 3542  
                                                     l3757 3284  
                                                     l3749 31E0  
                                                     l3829 30A6  
                                                     l3781 2E40  
                                                     l3773 2DDC  
                                                     l4389 1338  
                                                     l5197 298E  
                                                     l5189 293A  
                                                     l4751 3DD0  
                                                     l4743 3DA8  
                                                     l4735 3D48  
                                                     l4719 3F3E  
                                                     l4671 1DB4  
                                                     l4663 1D3E  
                                                     l4655 1D00  
                                                     l4647 1CB6  
                                                     l4639 1C2A  
                                                     l4591 1AA0  
                                                     l4583 1A6E  
                                                     l4575 1A2C  
                                                     l4727 6FB6  
                                                     l3951 15B0  
                                                     l3943 159E  
                                                     l3927 152E  
                                                     l3935 155E  
                                                     l3919 14FC  
                                                     l4815 268A  
                                                     l4807 256A  
                                                     l4911 6FAC  
                                                     l4903 6FA4  
                                                     l4559 22CA  
                                                     l4495 2056  
                                                     l4831 6E78  
                                                     l4823 6E64  
                                                     l3855 37B4  
                                                     l3839 371C  
                                                     l3599 2B6A  
                                                     l3679 34DC  
                                                     l3695 3558  
                                                     l3759 32A2  
                                                     l3791 2E88  
                                                     l3783 2E48  
                                                     l3775 2E0E  
                                                     l3767 2DA6  
                                                     l4399 13B2  
                                                     l4921 6DDC  
                                                     l4761 3E02  
                                                     l4745 3DAA  
                                                     l4737 3D62  
                                                     l4681 1E28  
                                                     l4673 1DC6  
                                                     l4665 1D70  
                                                     l4657 1D14  
                                                     l4649 1CC4  
                                                     l4593 1AA2  
                                                     l4585 1A80  
                                                     l4577 1A42  
                                                     l4569 1A0C  
                                                     l4729 6FD0  
                                                     l3961 15C4  
                                                     l3953 15B4  
                                                     l3945 15A4  
                                                     l3937 1570  
                                                     l3929 1542  
                                                     l4817 26AE  
                                                     l4809 25A2  
                                                     l4913 6FAE  
                                                     l4905 6FA6  
                                                     l4497 2066  
                                                     l4489 201A  
                                                     l4833 6E82  
                                                     l4825 6E6A  
                                                     l4841 6E96  
                                                     l3865 3870  
                                                     l3857 37EE  
                                                     l3849 3786  
                                                     l3697 3560  
                                                     l3689 3528  
                                                     l3881 7CC4  
                                                     l3785 2E50  
                                                     l3777 2E16  
                                                     l3769 2DBA  
                                                     l4931 6F02  
                                                     l4771 3E3E  
                                                     l4747 3DBA  
                                                     l4691 1E8A  
                                                     l4683 1E48  
                                                     l4675 1DF0  
                                                     l4659 1D28  
                                                     l4595 1AB8  
                                                     l4587 1A88  
                                                     l4579 1A56  
                                                     l3971 15D8  
                                                     l3963 15C8  
                                                     l3955 15B8  
                                                     l3947 15A8  
                                                     l3939 1588  
                                                     l4907 6FA8  
                                                     l4499 206E  
                                                     l4851 76B2  
                                                     l4827 6E6C  
                                                     l4843 6EA0  
                                                     l4835 6E8C  
                                                     l3867 3886  
                                                     l3699 3576  
                                                     l3891 7D60  
                                                     l3883 7CD4  
                                                     l3875 7C8A  
                                                     l3795 2ED2  
                                                     l3787 2E58  
                                                     l3779 2E38  
                                                     l4925 6EDE  
                                                     l4773 3E54  
                                                     l4757 3DEC  
                                                     l4749 3DBE  
                                                     l4685 1E66  
                                                     l4693 1E92  
                                                     l4669 1DA8  
                                                     l4677 1DF4  
                                                     l4597 1ACC  
                                                     l4589 1A8E  
                                                     l3981 1642  
                                                     l3965 15CC  
                                                     l3957 15BC  
                                                     l3949 15AC  
                                                     l3973 15DC  
                                                     l4909 6FAA  
                                                     l4861 76E6  
                                                     l4853 76B6  
                                                     l4941 771C  
                                                     l4829 6E76  
                                                     l4845 6EA2  
                                                     l4837 6E8E  
                                                     l4917 6DFE  
                                                     l3869 389C  
                                                     l3885 7CF8  
                                                     l3877 7CB8  
                                                     l3797 2EE8  
                                                     l3789 2E78  
                                                     l4781 738E  
                                                     TRISD 000F95  
                                                     l4919 6DD8  
                                                     l4927 6EFE  
                                                     l4775 3E64  
                                                     l4767 3E1C  
                                                     l4759 3DF8  
                                                     l4695 1E98  
                                                     l4687 1E76  
                                                     l4679 1E14  
                                                     l4599 1ADC  
                                                     l3991 1686  
                                                     l3983 165E  
                                                     l3975 15E2  
                                                     l3967 15D0  
                                                     l3959 15C0  
                                                     l3895 1464  
                                                     l4791 2352  
                                                     l4863 76EC  
                                                     l4855 76C8  
                                                     l4951 6E20  
                                                     l4943 771E  
                                                     l4935 7710  
                                                     l4847 6EAC  
                                                     l4839 6E94  
                                                     l3887 7D1A  
                                                     l4783 739C  
                                                     l4871 3C2E  
                                                     TRISE 000F96  
                                                     l4929 6F00  
                                                     l4769 3E2A  
                                                     l4689 1E88  
                                                     l3993 1692  
                                                     l3985 166A  
                                                     l3977 1610  
                                                     l3969 15D4  
                                                     l3897 1470  
                                                     l4793 2366  
                                                     l4865 76F0  
                                                     l4857 76CE  
                                                     l4849 764E  
                                                     l4953 6E34  
                                                     l4945 779A  
                                                     l4937 7718  
                                                     l4961 73F6  
                                                     l3889 7D30  
                                                     l4785 73C4  
                                                     l4881 3C74  
                                                     l3995 16BE  
                                                     l3987 1670  
                                                     l3979 1632  
                                                     l3899 1482  
                                                     l4699 7104  
                                                     l4795 23AC  
                                                     l4787 22E2  
                                                     l4859 76D2  
                                                     l4955 6E36  
                                                     l4939 771A  
                                                     l4971 7438  
                                                     l4963 7406  
                                                     l4779 7386  
                                                     l4891 3D0A  
                                                     l4883 3C88  
                                                     l4875 3C36  
                                                     l4867 3C0E  
                                                     l3997 16D2  
                                                     l3989 1684  
                                                     l4797 23D0  
                                                     l4789 2302  
                                                     l4949 6E1C  
                                                     l4981 7462  
                                                     l4973 744A  
                                                     l4965 7418  
                                                     l4893 3D24  
                                                     l4885 3CAE  
                                                     l4877 3C5A  
                                                     l4869 3C24  
                                                     l4799 23F2  
                                                     l4959 6DB4  
                                                     l4983 7468  
                                                     l4975 7450  
                                                     l4967 741A  
                                                     l4991 74B2  
                                                     l4887 3CC4  
                                                     l4895 3D36  
                                                     l4879 3C68  
                                                     l4977 7456  
                                                     l4969 7420  
                                                     l4985 7474  
                                                     l4889 3CD8  
                                                     l4993 7A90  
                                                     l4899 6F76  
                                                     l4979 745C  
                                                     l4987 747C  
                                                     l4995 7A96  
                                                     l4989 74B0  
                                                     l4997 7AAC  
                                                     l4999 7AC0  
                                                     STR_1 7F56  
                                                     STR_2 7EAF  
                                                     STR_3 7FC2  
                                                     STR_4 7F85  
                                                     STR_5 7EEE  
                                                     STR_6 7F25  
                                                     STR_7 7FAC  
                                                     STR_8 7FFC  
                                                     STR_9 7FCF  
                                            _state_changed 01A4  
                                                     _LATA 000F89  
                                                     _LATB 000F8A  
                                                     _LATC 000F8B  
                                                     u3200 71E2  
                                                     u4000 3282  
                                                     u3201 71DC  
                                                     u4001 327C  
                                                     u3210 3FDC  
                                                     u4010 32A0  
                                                     u4011 329A  
                                                     u3220 3FEE  
                                                     u3300 39E2  
                                                     u4020 32BE  
                                                     u4100 2EE6  
                                                     u3221 3FE8  
                                                     u3301 39DC  
                                                     u4021 32B8  
                                                     u4101 2EE0  
                                                     u3310 3A34  
                                                     u4030 32D2  
                                                     u3230 70AE  
                                                     u4110 2F1E  
                                                     u3311 3A2E  
                                                     u4031 32CC  
                                                     u3231 70A6  
                                                     u4111 2F16  
                                                     u3160 77F0  
                                                     u3320 3A92  
                                                     u3400 7DF0  
                                                     u3240 70B2  
                                                     u4200 3078  
                                                     u4120 2F22  
                                                     u4040 2DB8  
                                                     u5000 0AD0  
                                                     u3161 77EA  
                                                     u3217 3FD2  
                                                     u3321 3A8C  
                                                     u3401 7DEA  
                                                     u4201 3072  
                                                     u4041 2DB2  
                                                     u5001 0ACA  
                                                     u4210 373C  
                                                     u3170 7806  
                                                     u3250 38DE  
                                                     u3330 3ACA  
                                                     u3410 7E36  
                                                     u4130 2F3C  
                                                     u4050 2DDA  
                                                     u5010 0B38  
                                                     u4211 3736  
                                                     u3171 7800  
                                                     u3251 38D8  
                                                     u3331 3AC4  
                                                     u3411 7E30  
                                                     u4131 2F36  
                                                     u4051 2DD4  
                                                     u4220 3778  
                                                     u3180 7834  
                                                     u3260 3916  
                                                     u3340 3B0E  
                                                     u4300 7D18  
                                                     u3420 79C4  
                                                     u3500 706C  
                                                     u4140 2FAA  
                                                     u4060 2E0C  
                                                     u5100 0F1C  
                                                     u5020 0B66  
                                                     u4221 3772  
                                                     u3181 782E  
                                                     u3261 3910  
                                                     u3341 3B08  
                                                     u4301 7D12  
                                                     u3421 79BE  
                                                     u3501 7064  
                                                     u4061 2E06  
                                                     u5101 0F16  
                                                     u5021 0B60  
                                                     u4230 379A  
                                                     u3190 786E  
                                                     u3350 3B40  
                                                     u4310 7D2E  
                                                     u3430 79F6  
                                                     u3510 7070  
                                                     u4150 2FF2  
                                                     u4070 2E76  
                                                     u5110 0FA6  
                                                     u5030 0BCC  
                                                     u4231 3794  
                                                     u3191 7868  
                                                     u3271 3944  
                                                     u3351 3B3A  
                                                     u4311 7D28  
                                                     u3431 79F0  
                                                     u4151 2FEC  
                                                     u4071 2E70  
                                                     u5111 0FA0  
                                                     u4400 1586  
                                                     u3600 7236  
                                                     u4240 3866  
                                                     u3280 396A  
                                                     u3360 3B74  
                                                     u4320 7D60  
                                                     u3440 7A2A  
                                                     u3520 70F4  
                                                     u4160 3014  
                                                     u4080 2EC8  
                                                     u5200 13DC  
                                                     u5120 1032  
                                                     u5040 0C0A  
                                                     u6000 7B2E  
                                                     u4401 1580  
                                                     u3601 7230  
                                                     u4241 385E  
                                                     u3281 3964  
                                                     u3361 3B6E  
                                                     u4321 7D5A  
                                                     u3441 7A24  
                                                     u3521 70EC  
                                                     u4161 300E  
                                                     u4145 2F96  
                                                     u4081 2EC0  
                                                     u5201 13D6  
                                                     u5121 102C  
                                                     u5041 0C04  
                                                     u5017 0B28  
                                                     u6001 7B28  
                                                     u4410 1598  
                                                     u4330 1480  
                                                     u5210 1ECC  
                                                     u4250 386A  
                                                     u3450 78D0  
                                                     u3610 7260  
                                                     u3290 399C  
                                                     u3370 3BC4  
                                                     u3530 70F8  
                                                     u4170 3032  
                                                     u4090 2ECC  
                                                     u5130 106C  
                                                     u5050 0C72  
                                                     u6010 7B5A  
                                                     u4411 1592  
                                                     u4331 147A  
                                                     u5211 1EC6  
                                                     u3451 78CA  
                                                     u3611 725A  
                                                     u3291 3996  
                                                     u3371 3BBE  
                                                     u4171 302C  
                                                     u5131 1066  
                                                     u6011 7B54  
                                                     u4500 1708  
                                                     u4420 160E  
                                                     u4340 1498  
                                                     u5300 20A8  
                                                     u5220 1EE4  
                                                     u4260 3884  
                                                     u3460 78F8  
                                                     u3700 2CB6  
                                                     u3620 2AA4  
                                                     u3540 7348  
                                                     u4180 3050  
                                                     u5140 1154  
                                                     u5060 0CA0  
                                                     u6020 7BA6  
                                                     u6100 75E4  
                                                     u4501 1702  
                                                     u4421 1608  
                                                     u4341 1492  
                                                     u5301 20A2  
                                                     u5221 1EDE  
                                                     u4261 387E  
                                                     u3461 78F2  
                                                     u3701 2CB0  
                                                     u3621 2A9C  
                                                     u3381 7D98  
                                                     u3541 7340  
                                                     u4181 304A  
                                                     u5141 114E  
                                                     u5061 0C9A  
                                                     u5037 0BBC  
                                                     u6021 7BA0  
                                                     u6101 75DE  
                                                     u4510 171A  
                                                     u4430 162A  
                                                     u4350 14AC  
                                                     u5310 20DA  
                                                     u5230 1EF8  
                                                     u6110 6F5C  
                                                     u4270 389A  
                                                     u3470 795A  
                                                     u3710 2CD4  
                                                     u3630 2AA8  
                                                     u3390 7DBE  
                                                     u3550 734C  
                                                     u4190 3064  
                                                     u5150 118E  
                                                     u5070 0D52  
                                                     u6030 7BCE  
                                                     u4511 1714  
                                                     u4431 1622  
                                                     u4351 14A6  
                                                     u5311 20D4  
                                                     u5231 1EF2  
                                                     u6111 6F56  
                                                     u4271 3894  
                                                     u3471 7954  
                                                     u3711 2CCE  
                                                     u3391 7DB8  
                                                     u4191 305E  
                                                     u5151 1188  
                                                     u5071 0D4C  
                                                     u6031 7BC8  
                                                     u4600 189E  
                                                     u4520 1740  
                                                     u4440 162E  
                                                     u4360 14F8  
                                                     u5400 220A  
                                                     u5320 2106  
                                                     u5240 1F46  
                                                     u3480 796E  
                                                     u3720 2CF2  
                                                     u3640 2AC2  
                                                     u3800 343E  
                                                     u4280 7CB6  
                                                     u3560 7366  
                                                     u5160 1232  
                                                     u5080 0DE4  
                                                     u6040 7BF8  
                                                     u6200 28AA  
                                                     u4601 1898  
                                                     u4521 173A  
                                                     u4361 14F2  
                                                     u5401 2204  
                                                     u5321 2100  
                                                     u5241 1F40  
                                                     u3481 7968  
                                                     u3721 2CEC  
                                                     u3641 2ABC  
                                                     u3801 3438  
                                                     u4281 7CB0  
                                                     u3561 7360  
                                                     u5161 122C  
                                                     u5081 0DDE  
                                                     u5057 0C62  
                                                     u6041 7BF2  
                                                     u6201 28A4  
                                                     u4610 18B4  
                                                     u4530 1780  
                                                     u4450 165C  
                                                     u4370 1514  
                                                     u5410 2258  
                                                     u5330 2120  
                                                     u5250 1F5E  
                                                     u3570 702A  
                                                     u3490 716A  
                                                     u3730 2D06  
                                                     u3650 2AF8  
                                                     u3810 3460  
                                                     u4290 7CF6  
                                                     u5170 125C  
                                                     u5090 0EA0  
                                                     u6050 7C22  
                                                     u6210 28BE  
                                                     u6130 2738  
                                                     u4611 18AE  
                                                     u4531 177A  
                                                     u4451 1656  
                                                     u4371 150E  
                                                     u5411 2252  
                                                     u5331 211A  
                                                     u5251 1F58  
                                                     u3571 7022  
                                                     u3491 7164  
                                                     u3731 2D00  
                                                     u3651 2AF2  
                                                     u3811 345A  
                                                     u4291 7CF0  
                                                     u5171 1256  
                                                     u5091 0E9A  
                                                     u6051 7C1C  
                                                     u6211 28B8  
                                                     u6131 2732  
                                                     u5500 1B0A  
                                                     u4700 19CA  
                                                     u4620 18CE  
                                                     u4540 17CA  
                                                     u4460 1682  
                                                     u4380 152C  
                                                     u5420 228E  
                                                     u5340 2144  
                                                     u5260 1F72  
                                                     u3580 702E  
                                                     u3740 2D1C  
                                                     u3660 2B1A  
                                                     u3820 347E  
                                                     u3900 35B0  
                                                     u5180 12FE  
                                                     u6060 7C4C  
                                                     u6220 28F2  
                                                     u6140 274C  
                                                     u5501 1B04  
                                                     u4701 19C4  
                                                     u4621 18C8  
                                                     u4541 17C4  
                                                     u4461 167C  
                                                     u4381 1526  
                                                     u5421 2288  
                                                     u5341 213E  
                                                     u5261 1F6C  
                                                     u3741 2D16  
                                                     u3661 2B14  
                                                     u3821 3478  
                                                     u3901 35AA  
                                                     u5181 12F8  
                                                     u6061 7C46  
                                                     u6221 28EC  
                                                     u6141 2746  
                                                     u5510 1B1E  
                                                     u4710 19EE  
                                                     u4630 18EC  
                                                     u4550 1808  
                                                     u4470 16AA  
                                                     u4390 1540  
                                                     u5430 22C2  
                                                     u5350 216C  
                                                     u5270 1FBC  
                                                     u3590 7204  
                                                     u3750 2D30  
                                                     u3670 2B50  
                                                     u3830 349C  
                                                     u3910 35E4  
                                                     u5190 1338  
                                                     u6070 7C76  
                                                     u6230 2916  
                                                     u6150 276A  
                                                     u5511 1B18  
                                                     u4711 19E8  
                                                     u4631 18E6  
                                                     u4551 1802  
                                                     u4471 16A4  
                                                     u4391 153A  
                                                     u5431 22BC  
                                                     u5351 2166  
                                                     u5271 1FB6  
                                                     u3591 71FE  
                                                     u3751 2D2A  
                                                     u3671 2B4A  
                                                     u3831 3496  
                                                     u3911 35DE  
                                                     u5191 1332  
                                                     u6071 7C70  
                                                     u6231 2910  
                                                     u6151 2764  
                                                     u6080 7542  
                                                     u5600 1E12  
                                                     u5520 1C9E  
                                                     u5440 1A28  
                                                     u4640 1906  
                                                     u4560 181C  
                                                     u4480 16BC  
                                                     u5360 2182  
                                                     u5280 2004  
                                                     u3760 2D4C  
                                                     u3680 2B62  
                                                     u3840 34B0  
                                                     u3920 3626  
                                                     u4800 02F0  
                                                     u4720 00A4  
                                                     u6240 2A1E  
                                                     u6160 2804  
                                                     u6081 753C  
                                                     u5601 1E0C  
                                                     u5441 1A22  
                                                     u4641 1900  
                                                     u4561 1816  
                                                     u4481 16B6  
                                                     u5361 217C  
                                                     u5281 1FFE  
                                                     u3761 2D46  
                                                     u3681 2B5C  
                                                     u3841 34AA  
                                                     u3921 3620  
                                                     u4801 02EA  
                                                     u4721 009E  
                                                     u6241 2A18  
                                                     u6161 27FE  
                                                     u6090 7578  
                                                     u5610 1E46  
                                                     u5530 1CFE  
                                                     u5450 1A40  
                                                     u4650 1924  
                                                     u4570 184E  
                                                     u4490 16D0  
                                                     u5370 21B4  
                                                     u5290 2082  
                                                     u3690 2C94  
                                                     u3850 34C4  
                                                     u3770 3314  
                                                     u3930 3658  
                                                     u4810 0332  
                                                     u4730 0196  
                                                     u6250 2A32  
                                                     u6170 2824  
                                                     u6091 7572  
                                                     u5611 1E40  
                                                     u5531 1CF8  
                                                     u5451 1A3A  
                                                     u4651 191E  
                                                     u4571 1848  
                                                     u4491 16CA  
                                                     u5371 21AE  
                                                     u5291 207C  
                                                     u3691 2C8E  
                                                     u3851 34BE  
                                                     u3771 330E  
                                                     u4811 032C  
                                                     u4731 0190  
                                                     u6251 2A2C  
                                                     u6171 281E  
                                                     u5700 3D9C  
                                                     u5620 1E86  
                                                     u5540 1D26  
                                                     u5460 1A54  
                                                     u4660 1962  
                                                     u4580 1864  
                                                     u5380 21D2  
                                                     u3860 34DA  
                                                     u3780 3336  
                                                     u3940 3696  
                                                     u4900 0664  
                                                     u4820 03E6  
                                                     u4740 01AA  
                                                     u6260 2A66  
                                                     u6180 2838  
                                                     u5621 1E80  
                                                     u5541 1D20  
                                                     u5525 1C92  
                                                     u5461 1A4E  
                                                     u4661 195C  
                                                     u4581 185E  
                                                     u5381 21CC  
                                                     u3861 34D4  
                                                     u3781 3330  
                                                     u3941 3690  
                                                     u4901 065E  
                                                     u4821 03DE  
                                                     u4741 01A4  
                                                     u6261 2A60  
                                                     u6317 2982  
                                                     u6181 2832  
                                                     u5710 3DCE  
                                                     u5630 3EAE  
                                                     u5550 1D3C  
                                                     u5470 1A9E  
                                                     u4670 197A  
                                                     u4590 1888  
                                                     u5390 21EC  
                                                     u3790 33F8  
                                                     u3950 36AA  
                                                     u4910 068E  
                                                     u4830 03EA  
                                                     u4750 01D8  
                                                     u6190 2870  
                                                     u5711 3DC8  
                                                     u5631 3EA8  
                                                     u5551 1D36  
                                                     u5471 1A98  
                                                     u4671 1974  
                                                     u4591 1882  
                                                     u5391 21E6  
                                                     u6327 6E98  
                                                     u3951 36A4  
                                                     u3871 3532  
                                                     u4911 0688  
                                                     u4751 01D2  
                                                     u6191 286A  
                                                     u5720 3DE6  
                                                     u5640 3EF2  
                                                     u5560 1D6E  
                                                     u5480 1AB6  
                                                     u4680 198E  
                                                     u5800 23AA  
                                                     u3960 36EC  
                                                     u3880 3556  
                                                     u4920 0716  
                                                     u4840 0404  
                                                     u4760 0220  
                                                     u5721 3DE0  
                                                     u5705 3D90  
                                                     u5641 3EEC  
                                                     u5561 1D68  
                                                     u5481 1AB0  
                                                     u4681 1988  
                                                     u5801 23A4  
                                                     u6337 6EA4  
                                                     u3961 36E6  
                                                     u3937 364E  
                                                     u3881 3550  
                                                     u4921 0710  
                                                     u4841 03FE  
                                                     u4761 021A  
                                                     u5730 3E16  
                                                     u5650 3F16  
                                                     u5570 1D8C  
                                                     u5490 1ACA  
                                                     u4690 19B2  
                                                     u5810 23F0  
                                                     u3890 358E  
                                                     u3970 30E8  
                                                     u4930 0750  
                                                     u4850 042E  
                                                     u4770 02A8  
                                                     u5731 3E10  
                                                     u5651 3F10  
                                                     u5571 1D86  
                                                     u5491 1AC4  
                                                     u4691 19AC  
                                                     u5811 23EA  
                                                     u6347 740C  
                                                     u3795 33E4  
                                                     u3891 3588  
                                                     u3971 30E2  
                                                     u4931 074A  
                                                     u4851 0428  
                                                     u4771 02A0  
                                                     u5740 3E3E  
                                                     u5660 3F3C  
                                                     u5580 1DA6  
                                                     u5820 24FC  
                                                     u3980 310A  
                                                     u4940 07DC  
                                                     u4860 04B8  
                                                     u4780 02AC  
                                                     u5900 3CC2  
                                                     u5741 3E38  
                                                     u5661 3F36  
                                                     u5581 1DA0  
                                                     u5821 24F6  
                                                     u6357 7426  
                                                     u3981 3104  
                                                     u4941 07D6  
                                                     u4861 04B2  
                                                     u5901 3CBC  
                                                     u5750 3E52  
                                                     u5670 3F92  
                                                     u5590 1DC4  
                                                     u5830 25A0  
                                                     u3990 3260  
                                                     u4950 0898  
                                                     u4870 04F2  
                                                     u4790 02C6  
                                                     u5910 3CD6  
                                                     u5751 3E4C  
                                                     u5671 3F8C  
                                                     u5591 1DBE  
                                                     u5831 259A  
                                                     u6367 743E  
                                                     u3991 325A  
                                                     u4951 0892  
                                                     u4871 04EC  
                                                     u4791 02C0  
                                                     u5911 3CD0  
                                                     u5680 6FCE  
                                                     u5840 2668  
                                                     u4960 0914  
                                                     u4880 05B0  
                                                     u5760 73E6  
                                                     u5920 3D08  
                                                     u5681 6FC8  
                                                     u6377 6E6E  
                                                     u4961 090E  
                                                     u4881 05AA  
                                                     u5761 73E0  
                                                     u5921 3D02  
                                                     u5690 3D60  
                                                     u5850 2688  
                                                     u5770 2324  
                                                     u5930 6E14  
                                                     u4970 099E  
                                                     u4890 05EA  
                                                     u5691 3D5A  
                                                     u5851 2682  
                                                     u6387 6E7A  
                                                     u5931 6E0E  
                                                     u4971 0998  
                                                     u4891 05E4  
                                                     u5780 2350  
                                                     u5860 76C6  
                                                     u5940 74AC  
                                                     u4980 0A2A  
                                                     u5845 265C  
                                                     u5781 234A  
                                                     u5861 76C0  
                                                     u4981 0A24  
                                                     u5790 238A  
                                                     u5870 76E4  
                                                     u5950 74E2  
                                                     u4990 0A88  
                                                     u5775 2318  
                                                     u5871 76DE  
                                                     u5960 74F4  
                                                     u5880 3C22  
                                                     u5961 74EE  
                                                     u5881 3C1C  
                                                     u5890 3C58  
                                                     u5970 7AAA  
                                                     u5795 237E  
                                                     u5947 74A2  
                                                     u5891 3C52  
                                                     u5971 7AA4  
                                                     u5980 7AD6  
                                                     u5957 74D8  
                                                     u4997 0A7C  
                                                     u5981 7AD0  
                                                     u5990 7B02  
                                                     u5991 7AFC  
                                                     _TMR2 000FCC  
                               __end_of_mix_exit_condition 6F74  
                                                     abs@a 0013  
                                                     _dbuf 008E  
                                                     _atoi 36FA  
                                                     _ctoa 7248  
                                                     _main 26C6  
                                                     _dtoa 2A70  
                                                     _fosc 7EAB  
                                                     _prec 0088  
                                                     _otoa 3300  
                                                     _nout 0084  
                                                     pad@i 0018  
                                                     pad@p 0015  
                                                     fsr1h 000FE2  
                                                     fsr2h 000FDA  
                                                     indf1 000FE7  
                                                     indf2 000FDF  
                                                     fsr1l 000FE1  
                                                     pad@w 001A  
                                                     fsr2l 000FD9  
                                                     _tosc 00CF  
                                                     _stoa 3526  
                                                     btemp 007E  
                                                     _utoa 30D4  
                                                     _xtoa 2DA4  
                              update_pwm_duty_ccp1@time_up 006F  
                                              main@rx_char 01A0  
                                                     prodh 000FF4  
                                                     prodl 000FF3  
                                                     start 0076  
                                          ___fldiv@new_exp 002B  
         state_translator_fpga_to_micro@state_machine_code 0005  
                                             ___param_bank 000000  
                                                    ??_abs 0015  
                                     _update_pwm_duty_ccp1 764C  
                                                    ??_pad 0017  
                                            ___fltol@sign1 006D  
                                          __end_of___aodiv 3A7C  
                                                    ?_atoi 0008  
                                                    ?_ctoa 001C  
                                          __end_of___fladd 1A0A  
                                                    ?_main 0001  
                                                    ?_dtoa 001C  
                                          __end_of___aomod 3C0C  
                                          __end_of___fldiv 22E0  
                                          __end_of___flneg 6FF6  
                                                    STR_11 7FCF  
                                                    STR_20 7FD0  
                                                    STR_13 7FD3  
                                                    STR_15 7FD3  
                                                    STR_31 7FED  
                                                    STR_24 7FD4  
                                                    STR_33 7FED  
                                                    STR_43 7FDC  
                                                    STR_27 7FEA  
                                                    STR_51 7FD7  
                                                    STR_36 7FDB  
                                                    STR_29 7FEA  
                                                    STR_53 7FD7  
                                                    STR_61 7FF0  
                                                    STR_38 7FDB  
                                                    STR_46 7FF3  
                                                    STR_63 7FF0  
                                                    STR_48 7FF3  
                                                    STR_73 7FE0  
                                                    STR_81 7FE3  
                                                    STR_58 7FD8  
                                                    STR_66 7FDF  
                                                    STR_83 7FE3  
                                                    STR_68 7FDF  
                                                    STR_92 7FE4  
                                                    STR_76 7FF6  
                                                    STR_85 7FCB  
                                                    STR_78 7FF6  
                                                    STR_87 7FCB  
                                                    STR_96 7FCC  
                                          __end_of___flmul 1EAE  
                                                    ?_otoa 001C  
                                                    STR_99 7FF9  
                                          __end_of___flsub 714C  
                                          __end_of___fltol 3E7C  
                                                    ?_stoa 000A  
                                                    ?_utoa 001C  
                                                    _T0CON 000FD5  
                                          __end_of___lodiv 7E9A  
                                                    ?_xtoa 001C  
                                                    _T2CON 000FCA  
                                          __end_of___lomod 7A8C  
                                                    i2l163 006E  
                                                    _RCREG 000FAE  
                                             vfpfcnvrt@fmt 0045  
                                                    _TMR0H 000FD7  
                                             vfpfcnvrt@llu 0060  
                                                    _TMR0L 000FD6  
                                                    _SPBRG 000FAF  
                                                    _PORTA 000F80  
                                                    _PORTB 000F81  
                                                    _PORTC 000F82  
                                                    _PORTD 000F83  
                                                    _TRISA 000F92  
                                                    _TRISB 000F93  
                                                    _TXREG 000FAD  
                                          __end_of_lcd_dat 6EB2  
                                          __end_of_lcd_cmd 6E88  
                                          __end_of_lcd_str 74FA  
                                                    _f_osc 7EA7  
                                                    _flags 008A  
                                                    _errno 008C  
                                                    _fputc 77DA  
                                          __end_of_isalpha 7102  
                                                    _fputs 7198  
                                          __end_of_isdigit 7038  
                                                    _t_osc 7EA3  
                                                    atoi@n 0015  
                                                    pad@fp 0011  
                                                    atoi@s 0008  
                                                    _width 0086  
                                                    ctoa@c 001E  
                                                    _state 01AD  
                                                    _putch 6DAC  
                                                    _toint 7E9B  
                                                    ctoa@w 001F  
                                                    dtoa@d 001E  
                                                    dtoa@i 003E  
                                                    dtoa@n 0036  
                                                    dtoa@p 0030  
                                                    dtoa@s 0034  
                                                    dtoa@w 0032  
                                          __end_of_islower 70BC  
                                          __end_of_isspace 7248  
                                          __end_of_isupper 707A  
                                                    tablat 000FF5  
                                                    otoa@d 001E  
                                                    otoa@i 003C  
                                                    otoa@n 0034  
                                                    otoa@p 002E  
                                                    otoa@t 0030  
                                                    otoa@w 0032  
                                                    plusw1 000FE3  
                                                    plusw2 000FDB  
                                                    stoa@i 0016  
                                                    stoa@l 001E  
                                                    stoa@p 001C  
                                                    stoa@s 000C  
                                                    stoa@w 0018  
                                                    ttemp5 007F  
                                                    ttemp6 0082  
                                                    ttemp7 0086  
                                                    utoa@d 001E  
                                                    utoa@i 003A  
                                                    utoa@n 0032  
                                                    utoa@p 002E  
                                                    utoa@w 0030  
                                                    status 000FD8  
                                                    wtemp8 007F  
                                                    xtoa@c 0041  
                                                    xtoa@d 001E  
                                                    xtoa@i 003F  
                                                    xtoa@n 0037  
                                                    xtoa@p 0033  
                                                    xtoa@w 0035  
                                                    xtoa@x 0026  
                                          __end_of_strncmp 7D90  
                                          __end_of_toupper 7384  
                                         ___lodiv@dividend 0001  
                                          ??_get_reg_value 0001  
                                             _toupper$1715 000D  
                                     get_reg_value@rx_char 0001  
                                          __initialization 72AE  
                                             __end_of_atoi 38C8  
                                             __end_of_ctoa 72AE  
                                             __end_of_main 2A70  
                                             __end_of_dtoa 2DA4  
                                             __end_of_fosc 7EAF  
                                             __end_of_otoa 3526  
                                             __end_of_stoa 36FA  
                                             __end_of_utoa 3300  
                                    ?_update_pwm_duty_ccp1 006F  
                                             __end_of_xtoa 30D4  
                          ??_update_direction_and_counters 0007  
                                                   ??_atoi 000A  
                                                   ??_ctoa 001F  
                                                   ??_main 007C  
                                                   ??_dtoa 0026  
                                                   ??_otoa 0026  
                                                   ??_stoa 000E  
                                                   ??_utoa 0026  
                                                   ??_xtoa 0027  
                                            __activetblptr 000002  
                                          ??_rx_char_usart 0001  
                                         ___lodiv@quotient 0011  
                                                   ?_fputc 0001  
                                                   STR_101 7FF9  
                                                   ?_fputs 000A  
                                                   STR_103 7FE7  
                                                   STR_105 7FE7  
                                                   _CCPR1L 000FBE  
                                                   ?_putch 0001  
                                                   i2l5251 0030  
                                                   i2l5261 0066  
                                                   i2l5253 0032  
                                                   i2l5255 003C  
                                                   i2l5247 000C  
                                                   i2l5257 0050  
                                                   i2l5249 001E  
                                                   i2l5259 0062  
                                            main@greet_str 0100  
                                            vfpfcnvrt@done 004F  
                                        _compute_next_step 74FA  
                                            ?_init_timer_0 0001  
                                            ?_init_timer_2 0001  
                   __end_of_state_translator_fpga_to_micro 7B88  
                  __size_of_state_translator_fpga_to_micro 00FC  
                           _state_translator_fpga_to_micro 7A8C  
                                       ?_compute_next_step 0001  
                                             vfprintf@cfmt 006E  
                                         __end_of_lcd_init 7472  
                                                   ___flge 3E7C  
                                        _init_timer_2$1948 006F  
                                                ??___aodiv 0011  
                                                ??___fladd 003B  
                                                ??___aomod 0011  
                                                   ___wmul 6EB2  
                     update_direction_and_counters@counter 0005  
                                                ??___fldiv 0022  
                                                ??___flneg 0005  
                                                ??___flmul 0009  
                                                ??___flsub 004B  
                                                ??___fltol 0069  
                                                ??___lodiv 0011  
                                                ??___lomod 0011  
                                                   _lcd_wr 6DBE  
                                                   clear_0 72F4  
                                                   clear_1 7300  
                                      ??_compute_next_step 0005  
                                                   pad@buf 0013  
                                                   ctoa@fp 001C  
                                                   _roundf 22E0  
                                                ??_lcd_dat 0002  
                                                ??_lcd_cmd 0002  
                                                   dtoa@fp 001C  
                                                   _strlen 3FA4  
                                                ??_lcd_str 0005  
                                                   fputc@c 0001  
                                                   fputs@c 000E  
                                                   fputs@i 000F  
                                                   fputs@s 000A  
                                                ??_isalpha 0003  
                                                ??_isdigit 0003  
                                                ??_islower 0003  
                                             __mediumconst 7E9A  
                                                ??_isspace 0003  
                                                   otoa@fp 001C  
                                                   tblptrh 000FF7  
                                                ??_isupper 0003  
                                                   tblptrl 000FF6  
                                                   tblptru 000FF8  
                                                   stoa@cp 001A  
                                                   stoa@fp 000A  
                                                   putch@c 0001  
                                         __end_of_vfprintf 73F4  
                                                   utoa@fp 001C  
                                         __end_of_snprintf 6F3C  
                                                   xtoa@fp 001C  
                                                ??_strncmp 0007  
                                                ??_toupper 0009  
                                               ___flge@ff1 0001  
                                               ___flge@ff2 0005  
                                               __accesstop 0080  
                                  __end_of__initialization 7306  
                                __end_of_compute_next_step 7590  
                                               ___flneg@f1 0001  
                                        serial_tx_char@val 0001  
                                           ??_init_timer_0 0001  
                                           ??_init_timer_2 006F  
                                            ___rparam_used 000001  
                                               ___fltol@f1 0065  
                                           _tmr2_prescaler 00D3  
                                          _init_interrupts 6DB2  
                                   ??_update_pwm_duty_ccp1 0073  
                                           __pcstackCOMRAM 0001  
                                             __pidataBANK0 6DE7  
                                             __pidataBANK1 6DCA  
                                            __end_of_f_osc 7EAB  
                                            __end_of_fputc 78BC  
                                            __end_of_fputs 71E8  
                                            __end_of_t_osc 7EA7  
                                            __end_of_putch 6DB2  
                                            __end_of_toint 7E9F  
                                  __size_of_serial_tx_char 0020  
                      state_translator_fpga_to_micro@state 0003  
                                                  ??_fputc 0005  
                                                  ??_fputs 000E  
              update_direction_and_counters@step_direction 0003  
                                                  ??_putch 0001  
                                         _mix_current_step 01AB  
                                               __pbssBANK0 0080  
                                               __pbssBANK1 01A1  
                                       __size_of_init_ccp1 0022  
                                                  ?___flge 0001  
                                                  ?___wmul 0001  
                                       _mix_exit_condition 6F3C  
                                                  ?_lcd_wr 0001  
                                                  _CCP1CON 000FBD  
                                            _read_new_char 01A2  
                                                  ?_roundf 004B  
                                                  ?_strlen 0001  
                                      ?_mix_exit_condition 0001  
                                       __size_of_vfpfcnvrt 13E8  
                                         _desired_baudrate 7E9F  
                                                ?_lcd_init 0001  
                update_direction_and_counters@counter_step 0001  
                                         ___lomod@dividend 0001  
                                  __end_of_init_interrupts 6DBE  
                               __size_of_compute_next_step 0096  
                                     ??_mix_exit_condition 0005  
                                                  __Hparam 0000  
                                                  __Lparam 0000  
                                       __size_of_vsnprintf 013A  
                                               _init_PORTS 6EDC  
                                               _init_USART 6F74  
                                          __size_of___flge 0128  
                                                  ___aodiv 38C8  
                                                  ___fladd 1462  
                                                  ___aomod 3A7C  
                                                  ___fldiv 1EAE  
                                                  ___flneg 6FB4  
                                                  ___flmul 1A0A  
                                                  ___flsub 7102  
                                                  ___fltol 3D46  
                                          __size_of___wmul 002A  
                                                  ___lodiv 7D90  
                                                  ___lomod 79A2  
                                                ?_vfprintf 0068  
                                                ?_snprintf 00B8  
                                          __size_of_lcd_wr 000C  
                                                  __pcinit 72AE  
                                                  __ramtop 0600  
                                                  __ptext0 26C6  
                                                  __ptext1 7590  
                                                  __ptext2 7B88  
                                                  __ptext3 7A8C  
                                                  __ptext4 6F08  
                                                  __ptext5 3C0C  
                                                  __ptext6 7384  
                                                  __ptext7 007A  
                                                  __ptext8 2DA4  
                                                  __ptext9 7314  
                                                  _lcd_dat 6E88  
                                                  _lcd_cmd 6E5E  
                                                  _lcd_str 7472  
                                                _T0CONbits 000FD5  
                                          __size_of_roundf 03E6  
                                          __size_of_strlen 005C  
                                        __end_of_init_ccp1 6E3C  
                                                _T2CONbits 000FCA  
                                             __size_of_abs 004C  
                                             __size_of_pad 00E6  
                                                  _isalpha 70BC  
                                                  _isdigit 6FF6  
                                     __end_of_init_timer_0 6E5E  
                                     __end_of_init_timer_2 77DA  
                                                  _islower 707A  
                                                  _isspace 71E8  
                                                  _isupper 7038  
                          compute_next_step@step_direction 0003  
                                                  atoi@neg 000E  
                                               ??_lcd_init 0003  
                                                  _strncmp 7C88  
                                                  _toupper 7314  
                                     end_of_initialization 7306  
                                                  fputc@fp 0003  
                                            __Lmediumconst 7E9A  
                                                  fputs@fp 000C  
                      state_translator_micro_to_fpga@state 0001  
                                        __end_of_vfpfcnvrt 1462  
                                    __end_of_get_reg_value 6DE6  
                                                _RCSTAbits 000FAB  
                                                  postdec1 000FE5  
                                                  postdec2 000FDD  
                                                  postinc0 000FEE  
                                                  postinc1 000FE6  
                                                  postinc2 000FDE  
                                                  roundf@e 0057  
                                                  roundf@u 005D  
                                                  roundf@x 004B  
                                                  roundf@y 0061  
                                               ??_vfprintf 006E  
                            compute_next_step@current_step 0001  
                                               ??_snprintf 007C  
                                                  strlen@a 0003  
                                                  strlen@s 0001  
                                               _timer_done 01A1  
                                                _PORTEbits 000F84  
                         ??_state_translator_fpga_to_micro 0005  
                          ?_state_translator_fpga_to_micro 0003  
                                              ___fladd@grs 0042  
                                           _serial_tx_char 6DFA  
                                    __end_of_rx_char_usart 0076  
                                                _TRISCbits 000F94  
                                               lcd_dat@val 0002  
                                        __end_of_vsnprintf 3D46  
                                               lcd_cmd@val 0002  
                                              ___fldiv@grs 002D  
                                              ___fldiv@rem 0026  
                                               _pwm_period 00CB  
                                               _state_msgs 01AF  
                                            _mix_direction 01A9  
                                              ___flmul@grs 000E  
                                         ?_init_interrupts 0001  
                                              _CCP1CONbits 000FBD  
                                                _TXSTAbits 000FAC  
                                               lcd_str@str 0003  
                                              ?_init_PORTS 0001  
                                              ?_init_USART 0001  
                                           __end_of___flge 3FA4  
                   __end_of_state_translator_micro_to_fpga 7C88  
                  __size_of_state_translator_micro_to_fpga 0100  
                           _state_translator_micro_to_fpga 7B88  
                                              vfpfcnvrt@ap 0047  
                                              vfpfcnvrt@cp 004D  
                                              vfpfcnvrt@fp 0043  
                                              vfpfcnvrt@ll 0055  
                                           __end_of___wmul 6EDC  
                                              vfpfcnvrt@vp 005D  
                                           __end_of_lcd_wr 6DCA  
         state_translator_micro_to_fpga@state_machine_code 0005  
                                   __end_of_serial_tx_char 6E1A  
                                mix_exit_condition@counter 0001  
                                           __end_of_roundf 26C6  
                                           __end_of_strlen 4000  
                                      start_initialization 72AE  
                                          ___lodiv@divisor 0009  
                                          ___lodiv@counter 0019  
                                              __end_of_abs 7198  
                                              __end_of_pad 79A2  
                                              vfprintf@fmt 006A  
                                                 ??___flge 0009  
                                 __end_of_desired_baudrate 7EA3  
                                                 ??___wmul 0005  
                            __size_of_update_pwm_duty_ccp1 00C2  
                                                 ??_lcd_wr 0001  
                                              __pdataBANK0 00C4  
                                              __pdataBANK1 01AF  
                                    __size_of_init_timer_0 0022  
                                    __size_of_init_timer_2 00CC  
                                                 ??_roundf 004F  
                                                 ??_strlen 0003  
                                          ?_serial_tx_char 0001  
                                                ___fladd@a 0037  
                                                ___fladd@b 0033  
                                             vsnprintf@cnt 00B0  
                                             vsnprintf@fmt 0074  
                                                ___fldiv@a 001E  
                                                ___fldiv@b 001A  
                                                ___flmul@a 0005  
                                                ___flmul@b 0001  
                                                ___flsub@a 0047  
                                                ___flsub@b 0043  
                                            __pcstackBANK0 00AE  
                                            __pcstackBANK1 0100  
                                         ___aodiv@dividend 0001  
                                              snprintf@fmt 00BC  
                                      __size_of_init_PORTS 002C  
                                      __size_of_init_USART 0040  
                                        __size_of_lcd_init 007E  
                                                _atoi$1627 0010  
                                                _atoi$1628 0014  
                                                _atoi$1629 0012  
                                             _init_timer_0 6E3C  
                                             _init_timer_2 770E  
                                                _dtoa$1451 002E  
                                                __pintcode 0008  
                                            __pmediumconst 7E9A  
                                                 ?___aodiv 0001  
                                                 ?___fladd 0033  
                                                 ?___aomod 0001  
                                                 ?___fldiv 001A  
                                         ___aodiv@quotient 0013  
                                                 ?___flneg 0001  
                                                 ?___flmul 0001  
                                                 ?___flsub 0043  
                                                 ?___fltol 0065  
                                                 ?___lodiv 0001  
                                                 ?___lomod 0001  
                                                 ?_lcd_dat 0001  
                                                 ?_lcd_cmd 0001  
                                        __size_of_vfprintf 0070  
                                                 ?_lcd_str 0003  
                                        __size_of_snprintf 0034  
                                          ___lomod@divisor 0009  
                             update_pwm_duty_ccp1@new_duty 0075  
                                          ___lomod@counter 0011  
                                                 ?_isalpha 0001  
                                                 ?_isdigit 0001  
                                         _mix_step_counter 01A7  
                                                 ?_islower 0001  
                                                 ?_isspace 0001  
                                                 ?_isupper 0001  
                                                _init_ccp1 6E1A  
                                           __size_of_fputc 00E2  
                                           __size_of_fputs 0050  
                                                 ?_strncmp 0001  
                                                 ?_toupper 0007  
                    __end_of_update_direction_and_counters 764C  
                   __size_of_update_direction_and_counters 00BC  
                            _update_direction_and_counters 7590  
                                           __size_of_putch 0006  
                                           ___wmul@product 0005  
                                                 _LATBbits 000F8A  
                                                 _PIE1bits 000F9D  
                              __size_of_mix_exit_condition 0038  
                                                 _PIR1bits 000F9E  
                                                 i2u630_40 0060  
                                                 i2u630_41 005A  
                                                 i2u627_40 001C  
                                                 i2u627_41 0016  
                                                 i2u628_40 002E  
                                                 i2u628_41 0028  
                                                 i2u629_40 004E  
                                                 i2u629_41 0048  
                                                _vfpfcnvrt 007A  
                                                _xtoa$1487 002F  
                                                _xtoa$1488 0031  
                                        ___wmul@multiplier 0001  
                                                lcd_wr@val 0001  
                                             _isspace$1655 0007  
                                               ?_init_ccp1 0001  
                                               vfpfcnvrt@c 005F  
                                                copy_data0 72C2  
                                                copy_data1 72E2  
                                                _vsnprintf 3C0C  
                                               roundf@F525 0080  
                                                 __Hrparam 0000  
                                             ??_init_PORTS 0001  
                                             ??_init_USART 006F  
                                               vfprintf@ap 006C  
                                                 __Lrparam 0000  
                                               vfprintf@fp 0068  
                                         __size_of___aodiv 01B4  
                                         __size_of___fladd 05A8  
                                         __size_of___aomod 0190  
                                         __size_of___fldiv 0432  
                                         __size_of___flneg 0042  
                                              vsnprintf@ap 0076  
                                         __size_of___flmul 04A4  
                                         __size_of___flsub 004A  
                                         __size_of___fltol 0136  
                                         __size_of___lodiv 010A  
                                         __size_of___lomod 00EA  
                                               ?_vfpfcnvrt 0043  
                                               snprintf@ap 00C2  
                                          ___aodiv@divisor 0009  
                                          ___aodiv@counter 0011  
                                         __size_of_lcd_dat 002A  
                                         __size_of_lcd_cmd 002A  
                                         __size_of_lcd_str 0088  
                                         __size_of_isalpha 0046  
                                         __size_of_isdigit 0042  
                                         __size_of_islower 0042  
                                         __size_of_isspace 0060  
                                                 __ptext10 707A  
                                                 __ptext11 7038  
                                                 __ptext20 714C  
                                                 __ptext12 70BC  
                                                 __ptext21 3A7C  
                                                 __ptext13 30D4  
                                                 __ptext30 71E8  
                                                 __ptext22 38C8  
                                                 __ptext14 79A2  
                                                 __ptext31 6FF6  
                                                 __ptext23 7248  
                                                 __ptext15 7D90  
                                                 __ptext40 770E  
                                                 __ptext32 6EB2  
                                                 __ptext24 78BC  
                                                 __ptext16 7C88  
                                                 __ptext41 6E3C  
                                                 __ptext33 6DFA  
                                                 __ptext25 3FA4  
                                                 __ptext17 3526  
                                                 __ptext50 6FB4  
                                                 __ptext42 6DB2  
                                                 __ptext34 6F3C  
                                                 __ptext26 7198  
                                                 __ptext18 3300  
                                                 __ptext51 1A0A  
                                                 __ptext43 6E1A  
                                                 __ptext35 7472  
                                                 __ptext27 77DA  
                                                 __ptext19 2A70  
                                                 __ptext52 3E7C  
                                                 __ptext44 764C  
                                                 __ptext36 6E88  
                                                 __ptext28 6DAC  
                                                 __ptext53 3D46  
                                                 __ptext45 1EAE  
                                                 __ptext37 73F4  
                                                 __ptext29 36FA  
                                                 __ptext54 6EDC  
                                                 __ptext46 6F74  
                                                 __ptext38 6E5E  
                                                 __ptext55 6DD6  
                                                 __ptext47 22E0  
                                                 __ptext39 6DBE  
                                                 __ptext56 74FA  
                                                 __ptext48 7102  
                                                 __ptext49 1462  
                                         __size_of_isupper 0042  
                         ??_state_translator_micro_to_fpga 0003  
                          ?_state_translator_micro_to_fpga 0001  
                                   __size_of_get_reg_value 0010  
                                       __end_of_init_PORTS 6F08  
                                                 _lcd_init 73F4  
                                       __end_of_init_USART 6FB4  
                                         __size_of_strncmp 0108  
                                         __size_of_toupper 0070  
                                               ?_vsnprintf 0070  
                                            __size_of_atoi 01CE  
                                            __size_of_ctoa 0066  
                                            __size_of_main 03AA  
                                            __size_of_dtoa 0334  
                                            __size_of_otoa 0226  
                                            __size_of_stoa 01D4  
                                            __size_of_utoa 022C  
                                            __size_of_xtoa 0330  
                           ?_update_direction_and_counters 0001  
                                                 _msg_sent 01A3  
                                                stoa@F1152 00C4  
                                   __size_of_rx_char_usart 006E  
                                 __size_of_init_interrupts 000C  
                                                 int$flags 007E  
                                         ??_serial_tx_char 0001  
                                                 _vfprintf 7384  
                                                 _snprintf 6F08  
                                                 lcd_str@i 0007  
                                              _mix_counter 01A5  
                                         ___aomod@dividend 0001  
                                           _vfpfcnvrt$1502 0051  
                                           _vfpfcnvrt$1503 0053  
                                               _INTCONbits 000FF2  
                                                 isalpha@c 0001  
                                                 isdigit@c 0001  
                                              ??_init_ccp1 0078  
                             __end_of_update_pwm_duty_ccp1 770E  
                                               vsnprintf@f 00B2  
                                               vsnprintf@n 0072  
                                               vsnprintf@s 0070  
                                                snprintf@n 00BA  
                                                snprintf@s 00B8  
                                                 intlevel2 0006  
                                                 islower@c 0001  
                                                 isspace@c 0001  
                                                 isupper@c 0001  
                                                strncmp@_l 0001  
                                                strncmp@_r 0003  
                                            _get_reg_value 6DD6  
                                          ___aomod@divisor 0009  
                                              ??_vfpfcnvrt 0049  
                                                 stoa@nuls 000F  
                                          ___aomod@counter 0011  
                           mix_exit_condition@current_step 0003  
                                           _vsnprintf$1365 00AE  
                                                 strncmp@l 0008  
                                                 strncmp@n 0005  
                                                 strncmp@r 000A  
                                                 toupper@c 0007  
                                            _rx_char_usart 0008  
                                            ___fladd@signs 003F  
                            update_pwm_duty_ccp1@lsbs_duty 0077  
                                             ___aodiv@sign 0012  
                                              ??_vsnprintf 0078  
                                             ___fladd@aexp 0040  
                                             ___fladd@bexp 0041  
                                             ___aomod@sign 0012  
                                              _roundf$1950 0053  
                                              _roundf$1949 0059  
