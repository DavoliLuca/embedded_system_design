

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat Jun 17 20:17:27 2023

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=3
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    84                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    85                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    86                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    87                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    88                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    89  0000                     
    90                           ; Version 2.20
    91                           ; Generated 12/02/2020 GMT
    92                           ; 
    93                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    94                           ; All rights reserved.
    95                           ; 
    96                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    97                           ; 
    98                           ; Redistribution and use in source and binary forms, with or without modification, are
    99                           ; permitted provided that the following conditions are met:
   100                           ; 
   101                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   102                           ;        conditions and the following disclaimer.
   103                           ; 
   104                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   105                           ;        of conditions and the following disclaimer in the documentation and/or other
   106                           ;        materials provided with the distribution.
   107                           ; 
   108                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   109                           ;        software without specific prior written permission.
   110                           ; 
   111                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   112                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   113                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   114                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   115                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   116                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   117                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   118                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   119                           ; 
   120                           ; 
   121                           ; Code-generator required, PIC18F452 Definitions
   122                           ; 
   123                           ; SFR Addresses
   124  0000                     
   125                           	psect	idataBANK0
   126  006239                     __pidataBANK0:
   127                           	callstack 0
   128                           
   129                           ;initializer for stoa@F1152
   130  006239  28                 	db	40
   131  00623A  6E                 	db	110
   132  00623B  75                 	db	117
   133  00623C  6C                 	db	108
   134  00623D  6C                 	db	108
   135  00623E  29                 	db	41
   136  00623F  00                 	db	0
   137                           
   138                           ;initializer for _pwm_period
   139                           ;timer.c: 5: static double const f_osc = 1000000;;timer.c: 6: static double const t_osc 
      +                          = 1/f_osc;;timer.c: 7: static double pwm_period = 20e-3;
   140  006240  D70A               	dw	55050
   141  006242  3CA3               	dw	15523
   142                           
   143                           ;initializer for _tosc
   144  006244  37BD               	dw	14269
   145  006246  3486               	dw	13446
   146                           
   147                           ;initializer for _tmr2_prescaler
   148  006248  0000               	dw	0
   149  00624A  4180               	dw	16768
   150                           
   151                           	psect	idataBANK1
   152  00624C                     __pidataBANK1:
   153                           	callstack 0
   154                           
   155                           ;initializer for _state_msgs
   156  00624C  D9                 	db	low STR_1
   157  00624D  7E                 	db	high STR_1
   158  00624E  67                 	db	low STR_2
   159  00624F  7E                 	db	high STR_2
   160  006250  BB                 	db	low STR_3
   161  006251  7F                 	db	high STR_3
   162  006252  36                 	db	low STR_4
   163  006253  7F                 	db	high STR_4
   164  006254  A9                 	db	low STR_5
   165  006255  7F                 	db	high STR_5
   166  006256  C4                 	db	low STR_6
   167  006257  7F                 	db	high STR_6
   168  006258  B2                 	db	low STR_7
   169  006259  7F                 	db	high STR_7
   170  00625A  A7                 	db	low STR_8
   171  00625B  7E                 	db	high STR_8
   172                           
   173                           ;initializer for _hex_end_effector_values
   174  00625C  10                 	db	16
   175  00625D  20                 	db	32
   176  00625E  40                 	db	64
   177  00625F  80                 	db	128
   178                           
   179                           ;initializer for _hex_joint_values
   180  006260  01                 	db	1
   181  006261  02                 	db	2
   182  006262  04                 	db	4
   183  006263  08                 	db	8
   184                           
   185                           	psect	mediumconst
   186  007E52                     __pmediumconst:
   187                           	callstack 0
   188  007E52  00                 	db	0
   189  007E53  0000               	dw	0
   190  007E55  4B00               	dw	19200
   191  007E57                     __end_of_toint:
   192                           	callstack 0
   193  007E57  0000               	dw	0
   194  007E59  4616               	dw	17942
   195  007E5B                     __end_of_desired_baudrate:
   196                           	callstack 0
   197  007E5B  37BD               	dw	14269
   198  007E5D  3586               	dw	13702
   199  007E5F                     __end_of_t_osc:
   200                           	callstack 0
   201  007E5F  2400               	dw	9216
   202  007E61  4974               	dw	18804
   203  007E63                     __end_of_f_osc:
   204                           	callstack 0
   205  007E63  2400               	dw	9216
   206  007E65  4A74               	dw	19060
   207  007E67                     __end_of_fosc:
   208                           	callstack 0
   209  0000                     _ADCON1	set	4033
   210  0000                     _ADRESL	set	4035
   211  0000                     _ADRESH	set	4036
   212  0000                     _ADCON0bits	set	4034
   213  0000                     _ADCON0	set	4034
   214  0000                     _CCPR1L	set	4030
   215  0000                     _CCP1CONbits	set	4029
   216  0000                     _CCP1CON	set	4029
   217  0000                     _PR2	set	4043
   218  0000                     _T2CONbits	set	4042
   219  0000                     _TMR2	set	4044
   220  0000                     _T2CON	set	4042
   221  0000                     _TMR0H	set	4055
   222  0000                     _TMR0L	set	4054
   223  0000                     _PORTEbits	set	3972
   224  0000                     _PORTD	set	3971
   225  0000                     _TRISCbits	set	3988
   226  0000                     _TRISC	set	3988
   227  0000                     _PORTC	set	3970
   228  0000                     _TRISB	set	3987
   229  0000                     _PORTB	set	3969
   230  0000                     _TRISA	set	3986
   231  0000                     _PORTA	set	3968
   232  0000                     _LATA	set	3977
   233  0000                     _T0CON	set	4053
   234  0000                     _PIR1bits	set	3998
   235  0000                     _PIE1bits	set	3997
   236  0000                     _T0CONbits	set	4053
   237  0000                     _LATAbits	set	3977
   238  0000                     _INTCONbits	set	4082
   239  0000                     _RCREG	set	4014
   240  0000                     _TXREG	set	4013
   241  0000                     _RCSTAbits	set	4011
   242  0000                     _TXSTAbits	set	4012
   243  0000                     _SPBRG	set	4015
   244  0000                     _LATC	set	3979
   245  0000                     _LATB	set	3978
   246  007E67                     STR_2:
   247  007E67  49                 	db	73	;'I'
   248  007E68  4E                 	db	78	;'N'
   249  007E69  49                 	db	73	;'I'
   250  007E6A  54                 	db	84	;'T'
   251  007E6B  5F                 	db	95	;'_'
   252  007E6C  50                 	db	80	;'P'
   253  007E6D  4F                 	db	79	;'O'
   254  007E6E  53                 	db	83	;'S'
   255  007E6F  3A                 	db	58	;':'
   256  007E70  20                 	db	32
   257  007E71  74                 	db	116	;'t'
   258  007E72  68                 	db	104	;'h'
   259  007E73  65                 	db	101	;'e'
   260  007E74  20                 	db	32
   261  007E75  76                 	db	118	;'v'
   262  007E76  69                 	db	105	;'i'
   263  007E77  61                 	db	97	;'a'
   264  007E78  6C                 	db	108	;'l'
   265  007E79  20                 	db	32
   266  007E7A  69                 	db	105	;'i'
   267  007E7B  73                 	db	115	;'s'
   268  007E7C  20                 	db	32
   269  007E7D  61                 	db	97	;'a'
   270  007E7E  74                 	db	116	;'t'
   271  007E7F  20                 	db	32
   272  007E80  74                 	db	116	;'t'
   273  007E81  68                 	db	104	;'h'
   274  007E82  65                 	db	101	;'e'
   275  007E83  20                 	db	32
   276  007E84  69                 	db	105	;'i'
   277  007E85  6E                 	db	110	;'n'
   278  007E86  69                 	db	105	;'i'
   279  007E87  74                 	db	116	;'t'
   280  007E88  20                 	db	32
   281  007E89  70                 	db	112	;'p'
   282  007E8A  6F                 	db	111	;'o'
   283  007E8B  73                 	db	115	;'s'
   284  007E8C  69                 	db	105	;'i'
   285  007E8D  74                 	db	116	;'t'
   286  007E8E  69                 	db	105	;'i'
   287  007E8F  6F                 	db	111	;'o'
   288  007E90  6E                 	db	110	;'n'
   289  007E91  2C                 	db	44
   290  007E92  20                 	db	32
   291  007E93  70                 	db	112	;'p'
   292  007E94  72                 	db	114	;'r'
   293  007E95  6F                 	db	111	;'o'
   294  007E96  63                 	db	99	;'c'
   295  007E97  65                 	db	101	;'e'
   296  007E98  73                 	db	115	;'s'
   297  007E99  73                 	db	115	;'s'
   298  007E9A  20                 	db	32
   299  007E9B  69                 	db	105	;'i'
   300  007E9C  73                 	db	115	;'s'
   301  007E9D  20                 	db	32
   302  007E9E  73                 	db	115	;'s'
   303  007E9F  74                 	db	116	;'t'
   304  007EA0  61                 	db	97	;'a'
   305  007EA1  72                 	db	114	;'r'
   306  007EA2  74                 	db	116	;'t'
   307  007EA3  69                 	db	105	;'i'
   308  007EA4  6E                 	db	110	;'n'
   309  007EA5  67                 	db	103	;'g'
   310  007EA6  00                 	db	0
   311  007EA7                     STR_8:
   312  007EA7  50                 	db	80	;'P'
   313  007EA8  49                 	db	73	;'I'
   314  007EA9  43                 	db	67	;'C'
   315  007EAA  4B                 	db	75	;'K'
   316  007EAB  5F                 	db	95	;'_'
   317  007EAC  55                 	db	85	;'U'
   318  007EAD  50                 	db	80	;'P'
   319  007EAE  3A                 	db	58	;':'
   320  007EAF  20                 	db	32
   321  007EB0  74                 	db	116	;'t'
   322  007EB1  68                 	db	104	;'h'
   323  007EB2  65                 	db	101	;'e'
   324  007EB3  20                 	db	32
   325  007EB4  76                 	db	118	;'v'
   326  007EB5  69                 	db	105	;'i'
   327  007EB6  61                 	db	97	;'a'
   328  007EB7  6C                 	db	108	;'l'
   329  007EB8  20                 	db	32
   330  007EB9  68                 	db	104	;'h'
   331  007EBA  61                 	db	97	;'a'
   332  007EBB  73                 	db	115	;'s'
   333  007EBC  20                 	db	32
   334  007EBD  72                 	db	114	;'r'
   335  007EBE  65                 	db	101	;'e'
   336  007EBF  61                 	db	97	;'a'
   337  007EC0  63                 	db	99	;'c'
   338  007EC1  68                 	db	104	;'h'
   339  007EC2  65                 	db	101	;'e'
   340  007EC3  64                 	db	100	;'d'
   341  007EC4  20                 	db	32
   342  007EC5  74                 	db	116	;'t'
   343  007EC6  68                 	db	104	;'h'
   344  007EC7  65                 	db	101	;'e'
   345  007EC8  20                 	db	32
   346  007EC9  70                 	db	112	;'p'
   347  007ECA  69                 	db	105	;'i'
   348  007ECB  63                 	db	99	;'c'
   349  007ECC  6B                 	db	107	;'k'
   350  007ECD  20                 	db	32
   351  007ECE  75                 	db	117	;'u'
   352  007ECF  70                 	db	112	;'p'
   353  007ED0  20                 	db	32
   354  007ED1  73                 	db	115	;'s'
   355  007ED2  74                 	db	116	;'t'
   356  007ED3  61                 	db	97	;'a'
   357  007ED4  74                 	db	116	;'t'
   358  007ED5  69                 	db	105	;'i'
   359  007ED6  6F                 	db	111	;'o'
   360  007ED7  6E                 	db	110	;'n'
   361  007ED8  00                 	db	0
   362  007ED9                     STR_1:
   363  007ED9  49                 	db	73	;'I'
   364  007EDA  44                 	db	68	;'D'
   365  007EDB  4C                 	db	76	;'L'
   366  007EDC  45                 	db	69	;'E'
   367  007EDD  3A                 	db	58	;':'
   368  007EDE  20                 	db	32
   369  007EDF  77                 	db	119	;'w'
   370  007EE0  61                 	db	97	;'a'
   371  007EE1  69                 	db	105	;'i'
   372  007EE2  74                 	db	116	;'t'
   373  007EE3  69                 	db	105	;'i'
   374  007EE4  6E                 	db	110	;'n'
   375  007EE5  67                 	db	103	;'g'
   376  007EE6  20                 	db	32
   377  007EE7  66                 	db	102	;'f'
   378  007EE8  6F                 	db	111	;'o'
   379  007EE9  72                 	db	114	;'r'
   380  007EEA  20                 	db	32
   381  007EEB  20                 	db	32
   382  007EEC  76                 	db	118	;'v'
   383  007EED  69                 	db	105	;'i'
   384  007EEE  61                 	db	97	;'a'
   385  007EEF  6C                 	db	108	;'l'
   386  007EF0  20                 	db	32
   387  007EF1  74                 	db	116	;'t'
   388  007EF2  6F                 	db	111	;'o'
   389  007EF3  20                 	db	32
   390  007EF4  62                 	db	98	;'b'
   391  007EF5  65                 	db	101	;'e'
   392  007EF6  20                 	db	32
   393  007EF7  70                 	db	112	;'p'
   394  007EF8  6C                 	db	108	;'l'
   395  007EF9  61                 	db	97	;'a'
   396  007EFA  63                 	db	99	;'c'
   397  007EFB  65                 	db	101	;'e'
   398  007EFC  64                 	db	100	;'d'
   399  007EFD  20                 	db	32
   400  007EFE  69                 	db	105	;'i'
   401  007EFF  6E                 	db	110	;'n'
   402  007F00  20                 	db	32
   403  007F01  69                 	db	105	;'i'
   404  007F02  6E                 	db	110	;'n'
   405  007F03  69                 	db	105	;'i'
   406  007F04  74                 	db	116	;'t'
   407  007F05  20                 	db	32
   408  007F06  70                 	db	112	;'p'
   409  007F07  6F                 	db	111	;'o'
   410  007F08  73                 	db	115	;'s'
   411  007F09  00                 	db	0
   412  007F0A                     STR_11:
   413  007F0A  4E                 	db	78	;'N'
   414  007F0B  6F                 	db	111	;'o'
   415  007F0C  74                 	db	116	;'t'
   416  007F0D  20                 	db	32
   417  007F0E  65                 	db	101	;'e'
   418  007F0F  6E                 	db	110	;'n'
   419  007F10  6F                 	db	111	;'o'
   420  007F11  75                 	db	117	;'u'
   421  007F12  67                 	db	103	;'g'
   422  007F13  68                 	db	104	;'h'
   423  007F14  20                 	db	32
   424  007F15  64                 	db	100	;'d'
   425  007F16  69                 	db	105	;'i'
   426  007F17  6C                 	db	108	;'l'
   427  007F18  75                 	db	117	;'u'
   428  007F19  74                 	db	116	;'t'
   429  007F1A  69                 	db	105	;'i'
   430  007F1B  6E                 	db	110	;'n'
   431  007F1C  67                 	db	103	;'g'
   432  007F1D  20                 	db	32
   433  007F1E  73                 	db	115	;'s'
   434  007F1F  6F                 	db	111	;'o'
   435  007F20  6C                 	db	108	;'l'
   436  007F21  75                 	db	117	;'u'
   437  007F22  74                 	db	116	;'t'
   438  007F23  69                 	db	105	;'i'
   439  007F24  6F                 	db	111	;'o'
   440  007F25  6E                 	db	110	;'n'
   441  007F26  2C                 	db	44
   442  007F27  20                 	db	32
   443  007F28  70                 	db	112	;'p'
   444  007F29  6C                 	db	108	;'l'
   445  007F2A  65                 	db	101	;'e'
   446  007F2B  61                 	db	97	;'a'
   447  007F2C  73                 	db	115	;'s'
   448  007F2D  65                 	db	101	;'e'
   449  007F2E  20                 	db	32
   450  007F2F  72                 	db	114	;'r'
   451  007F30  65                 	db	101	;'e'
   452  007F31  66                 	db	102	;'f'
   453  007F32  69                 	db	105	;'i'
   454  007F33  6C                 	db	108	;'l'
   455  007F34  6C                 	db	108	;'l'
   456  007F35  00                 	db	0
   457  007F36                     STR_4:
   458  007F36  4F                 	db	79	;'O'
   459  007F37  56                 	db	86	;'V'
   460  007F38  45                 	db	69	;'E'
   461  007F39  4E                 	db	78	;'N'
   462  007F3A  3A                 	db	58	;':'
   463  007F3B  20                 	db	32
   464  007F3C  72                 	db	114	;'r'
   465  007F3D  65                 	db	101	;'e'
   466  007F3E  61                 	db	97	;'a'
   467  007F3F  63                 	db	99	;'c'
   468  007F40  68                 	db	104	;'h'
   469  007F41  69                 	db	105	;'i'
   470  007F42  6E                 	db	110	;'n'
   471  007F43  67                 	db	103	;'g'
   472  007F44  20                 	db	32
   473  007F45  74                 	db	116	;'t'
   474  007F46  68                 	db	104	;'h'
   475  007F47  65                 	db	101	;'e'
   476  007F48  20                 	db	32
   477  007F49  63                 	db	99	;'c'
   478  007F4A  6F                 	db	111	;'o'
   479  007F4B  72                 	db	114	;'r'
   480  007F4C  72                 	db	114	;'r'
   481  007F4D  65                 	db	101	;'e'
   482  007F4E  63                 	db	99	;'c'
   483  007F4F  74                 	db	116	;'t'
   484  007F50  20                 	db	32
   485  007F51  74                 	db	116	;'t'
   486  007F52  65                 	db	101	;'e'
   487  007F53  6D                 	db	109	;'m'
   488  007F54  70                 	db	112	;'p'
   489  007F55  65                 	db	101	;'e'
   490  007F56  72                 	db	114	;'r'
   491  007F57  61                 	db	97	;'a'
   492  007F58  74                 	db	116	;'t'
   493  007F59  75                 	db	117	;'u'
   494  007F5A  72                 	db	114	;'r'
   495  007F5B  65                 	db	101	;'e'
   496  007F5C  00                 	db	0
   497  007F5D                     STR_13:
   498  007F5D  4D                 	db	77	;'M'
   499  007F5E  6F                 	db	111	;'o'
   500  007F5F  76                 	db	118	;'v'
   501  007F60  65                 	db	101	;'e'
   502  007F61  64                 	db	100	;'d'
   503  007F62  20                 	db	32
   504  007F63  74                 	db	116	;'t'
   505  007F64  6F                 	db	111	;'o'
   506  007F65  20                 	db	32
   507  007F66  74                 	db	116	;'t'
   508  007F67  72                 	db	114	;'r'
   509  007F68  61                 	db	97	;'a'
   510  007F69  73                 	db	115	;'s'
   511  007F6A  68                 	db	104	;'h'
   512  007F6B  21                 	db	33
   513  007F6C  20                 	db	32
   514  007F6D  52                 	db	82	;'R'
   515  007F6E  65                 	db	101	;'e'
   516  007F6F  73                 	db	115	;'s'
   517  007F70  74                 	db	116	;'t'
   518  007F71  61                 	db	97	;'a'
   519  007F72  72                 	db	114	;'r'
   520  007F73  74                 	db	116	;'t'
   521  007F74  69                 	db	105	;'i'
   522  007F75  6E                 	db	110	;'n'
   523  007F76  67                 	db	103	;'g'
   524  007F77  20                 	db	32
   525  007F78  66                 	db	102	;'f'
   526  007F79  72                 	db	114	;'r'
   527  007F7A  6F                 	db	111	;'o'
   528  007F7B  6D                 	db	109	;'m'
   529  007F7C  20                 	db	32
   530  007F7D  49                 	db	73	;'I'
   531  007F7E  64                 	db	100	;'d'
   532  007F7F  6C                 	db	108	;'l'
   533  007F80  65                 	db	101	;'e'
   534  007F81  00                 	db	0
   535  007F82                     STR_9:
   536  007F82  44                 	db	68	;'D'
   537  007F83  65                 	db	101	;'e'
   538  007F84  76                 	db	118	;'v'
   539  007F85  69                 	db	105	;'i'
   540  007F86  63                 	db	99	;'c'
   541  007F87  65                 	db	101	;'e'
   542  007F88  20                 	db	32
   543  007F89  68                 	db	104	;'h'
   544  007F8A  61                 	db	97	;'a'
   545  007F8B  73                 	db	115	;'s'
   546  007F8C  20                 	db	32
   547  007F8D  62                 	db	98	;'b'
   548  007F8E  65                 	db	101	;'e'
   549  007F8F  65                 	db	101	;'e'
   550  007F90  6E                 	db	110	;'n'
   551  007F91  20                 	db	32
   552  007F92  72                 	db	114	;'r'
   553  007F93  65                 	db	101	;'e'
   554  007F94  73                 	db	115	;'s'
   555  007F95  65                 	db	101	;'e'
   556  007F96  74                 	db	116	;'t'
   557  007F97  00                 	db	0
   558  007F98                     STR_12:
   559  007F98  44                 	db	68	;'D'
   560  007F99  69                 	db	105	;'i'
   561  007F9A  6C                 	db	108	;'l'
   562  007F9B  75                 	db	117	;'u'
   563  007F9C  74                 	db	116	;'t'
   564  007F9D  69                 	db	105	;'i'
   565  007F9E  6F                 	db	111	;'o'
   566  007F9F  6E                 	db	110	;'n'
   567  007FA0  20                 	db	32
   568  007FA1  6F                 	db	111	;'o'
   569  007FA2  6E                 	db	110	;'n'
   570  007FA3  67                 	db	103	;'g'
   571  007FA4  6F                 	db	111	;'o'
   572  007FA5  69                 	db	105	;'i'
   573  007FA6  6E                 	db	110	;'n'
   574  007FA7  67                 	db	103	;'g'
   575  007FA8  00                 	db	0
   576  007FA9                     STR_5:
   577  007FA9  47                 	db	71	;'G'
   578  007FAA  52                 	db	82	;'R'
   579  007FAB  41                 	db	65	;'A'
   580  007FAC  53                 	db	83	;'S'
   581  007FAD  50                 	db	80	;'P'
   582  007FAE  49                 	db	73	;'I'
   583  007FAF  4E                 	db	78	;'N'
   584  007FB0  47                 	db	71	;'G'
   585  007FB1  00                 	db	0
   586  007FB2                     STR_7:
   587  007FB2  44                 	db	68	;'D'
   588  007FB3  49                 	db	73	;'I'
   589  007FB4  4C                 	db	76	;'L'
   590  007FB5  55                 	db	85	;'U'
   591  007FB6  54                 	db	84	;'T'
   592  007FB7  49                 	db	73	;'I'
   593  007FB8  4E                 	db	78	;'N'
   594  007FB9  47                 	db	71	;'G'
   595  007FBA  00                 	db	0
   596  007FBB                     STR_3:
   597  007FBB  4D                 	db	77	;'M'
   598  007FBC  4F                 	db	79	;'O'
   599  007FBD  56                 	db	86	;'V'
   600  007FBE  45                 	db	69	;'E'
   601  007FBF  4D                 	db	77	;'M'
   602  007FC0  45                 	db	69	;'E'
   603  007FC1  4E                 	db	78	;'N'
   604  007FC2  54                 	db	84	;'T'
   605  007FC3  00                 	db	0
   606  007FC4                     STR_6:
   607  007FC4  4D                 	db	77	;'M'
   608  007FC5  49                 	db	73	;'I'
   609  007FC6  58                 	db	88	;'X'
   610  007FC7  49                 	db	73	;'I'
   611  007FC8  4E                 	db	78	;'N'
   612  007FC9  47                 	db	71	;'G'
   613  007FCA  00                 	db	0
   614  007FCB                     STR_90:
   615  007FCB  68                 	db	104	;'h'
   616  007FCC  68                 	db	104	;'h'
   617  007FCD  58                 	db	88	;'X'
   618  007FCE  00                 	db	0
   619  007FCF                     STR_14:
   620  007FCF  68                 	db	104	;'h'
   621  007FD0  68                 	db	104	;'h'
   622  007FD1  64                 	db	100	;'d'
   623  007FD2  00                 	db	0
   624  007FD3                     STR_18:
   625  007FD3  68                 	db	104	;'h'
   626  007FD4  68                 	db	104	;'h'
   627  007FD5  69                 	db	105	;'i'
   628  007FD6  00                 	db	0
   629  007FD7                     STR_56:
   630  007FD7  68                 	db	104	;'h'
   631  007FD8  68                 	db	104	;'h'
   632  007FD9  6E                 	db	110	;'n'
   633  007FDA  00                 	db	0
   634  007FDB                     STR_41:
   635  007FDB  68                 	db	104	;'h'
   636  007FDC  68                 	db	104	;'h'
   637  007FDD  6F                 	db	111	;'o'
   638  007FDE  00                 	db	0
   639  007FDF                     STR_71:
   640  007FDF  68                 	db	104	;'h'
   641  007FE0  68                 	db	104	;'h'
   642  007FE1  75                 	db	117	;'u'
   643  007FE2  00                 	db	0
   644  007FE3                     STR_86:
   645  007FE3  68                 	db	104	;'h'
   646  007FE4  68                 	db	104	;'h'
   647  007FE5  78                 	db	120	;'x'
   648  007FE6  00                 	db	0
   649  007FE7                     STR_108:
   650  007FE7  7A                 	db	122	;'z'
   651  007FE8  58                 	db	88	;'X'
   652  007FE9  00                 	db	0
   653  007FEA                     STR_32:
   654  007FEA  7A                 	db	122	;'z'
   655  007FEB  64                 	db	100	;'d'
   656  007FEC  00                 	db	0
   657  007FED                     STR_36:
   658  007FED  7A                 	db	122	;'z'
   659  007FEE  69                 	db	105	;'i'
   660  007FEF  00                 	db	0
   661  007FF0                     STR_66:
   662  007FF0  7A                 	db	122	;'z'
   663  007FF1  6E                 	db	110	;'n'
   664  007FF2  00                 	db	0
   665  007FF3                     STR_51:
   666  007FF3  7A                 	db	122	;'z'
   667  007FF4  6F                 	db	111	;'o'
   668  007FF5  00                 	db	0
   669  007FF6                     STR_81:
   670  007FF6  7A                 	db	122	;'z'
   671  007FF7  75                 	db	117	;'u'
   672  007FF8  00                 	db	0
   673  007FF9                     STR_104:
   674  007FF9  7A                 	db	122	;'z'
   675  007FFA  78                 	db	120	;'x'
   676  007FFB  00                 	db	0
   677  007FFC                     STR_10:
   678  007FFC  25                 	db	37
   679  007FFD  73                 	db	115	;'s'
   680  007FFE  00                 	db	0
   681  007FFF  00                 	db	0	; dummy byte at the end
   682  0000                     
   683                           ; #config settings
   684                           
   685                           	psect	cinit
   686  00682C                     __pcinit:
   687                           	callstack 0
   688  00682C                     start_initialization:
   689                           	callstack 0
   690  00682C                     __initialization:
   691                           	callstack 0
   692                           
   693                           ; Initialize objects allocated to BANK1 (24 bytes)
   694                           ; load TBLPTR registers with __pidataBANK1
   695  00682C  0E4C               	movlw	low __pidataBANK1
   696  00682E  6EF6               	movwf	tblptrl,c
   697  006830  0E62               	movlw	high __pidataBANK1
   698  006832  6EF7               	movwf	tblptrh,c
   699  006834  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   700  006836  6EF8               	movwf	tblptru,c
   701  006838  EE01  F0E1         	lfsr	0,__pdataBANK1
   702  00683C  EE10 F018          	lfsr	1,24
   703  006840                     copy_data0:
   704  006840  0009               	tblrd		*+
   705  006842  CFF5 FFEE          	movff	tablat,postinc0
   706  006846  50E5               	movf	postdec1,w,c
   707  006848  50E1               	movf	fsr1l,w,c
   708  00684A  E1FA               	bnz	copy_data0
   709                           
   710                           ; Initialize objects allocated to BANK0 (19 bytes)
   711                           ; load TBLPTR registers with __pidataBANK0
   712  00684C  0E39               	movlw	low __pidataBANK0
   713  00684E  6EF6               	movwf	tblptrl,c
   714  006850  0E62               	movlw	high __pidataBANK0
   715  006852  6EF7               	movwf	tblptrh,c
   716  006854  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   717  006856  6EF8               	movwf	tblptru,c
   718  006858  EE00  F0DF         	lfsr	0,__pdataBANK0
   719  00685C  EE10 F013          	lfsr	1,19
   720  006860                     copy_data1:
   721  006860  0009               	tblrd		*+
   722  006862  CFF5 FFEE          	movff	tablat,postinc0
   723  006866  50E5               	movf	postdec1,w,c
   724  006868  50E1               	movf	fsr1l,w,c
   725  00686A  E1FA               	bnz	copy_data1
   726                           
   727                           ; Clear objects allocated to BANK1 (62 bytes)
   728  00686C  EE01  F0A3         	lfsr	0,__pbssBANK1
   729  006870  0E3E               	movlw	62
   730  006872                     clear_0:
   731  006872  6AEE               	clrf	postinc0,c
   732  006874  06E8               	decf	wreg,f,c
   733  006876  E1FD               	bnz	clear_0
   734                           
   735                           ; Clear objects allocated to BANK0 (56 bytes)
   736  006878  EE00  F080         	lfsr	0,__pbssBANK0
   737  00687C  0E38               	movlw	56
   738  00687E                     clear_1:
   739  00687E  6AEE               	clrf	postinc0,c
   740  006880  06E8               	decf	wreg,f,c
   741  006882  E1FD               	bnz	clear_1
   742  006884                     end_of_initialization:
   743                           	callstack 0
   744  006884                     __end_of__initialization:
   745                           	callstack 0
   746  006884  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   747  006886  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   748  006888  0E00               	movlw	low (__Lmediumconst shr (0+16))
   749  00688A  6EF8               	movwf	tblptru,c
   750  00688C  0100               	movlb	0
   751  00688E  EF31  F00A         	goto	_main	;jump to C main() function
   752                           
   753                           	psect	bssBANK0
   754  000080                     __pbssBANK0:
   755                           	callstack 0
   756  000080                     roundf@F525:
   757                           	callstack 0
   758  000080                     	ds	4
   759  000084                     _nout:
   760                           	callstack 0
   761  000084                     	ds	2
   762  000086                     _width:
   763                           	callstack 0
   764  000086                     	ds	2
   765  000088                     _prec:
   766                           	callstack 0
   767  000088                     	ds	2
   768  00008A                     _flags:
   769                           	callstack 0
   770  00008A                     	ds	2
   771  00008C                     _errno:
   772                           	callstack 0
   773  00008C                     	ds	2
   774  00008E                     _temperature_scaled:
   775                           	callstack 0
   776  00008E                     	ds	2
   777  000090                     _temperature_int:
   778                           	callstack 0
   779  000090                     	ds	2
   780  000092                     _mix_step_counter:
   781                           	callstack 0
   782  000092                     	ds	2
   783  000094                     _mix_direction:
   784                           	callstack 0
   785  000094                     	ds	2
   786  000096                     _mix_current_step:
   787                           	callstack 0
   788  000096                     	ds	2
   789  000098                     _dbuf:
   790                           	callstack 0
   791  000098                     	ds	32
   792                           
   793                           	psect	dataBANK0
   794  0000DF                     __pdataBANK0:
   795                           	callstack 0
   796  0000DF                     stoa@F1152:
   797                           	callstack 0
   798  0000DF                     	ds	7
   799  0000E6                     	ds	4
   800  0000EA                     	ds	4
   801  0000EE                     _tmr2_prescaler:
   802                           	callstack 0
   803  0000EE                     	ds	4
   804                           
   805                           	psect	bssBANK1
   806  0001A3                     __pbssBANK1:
   807                           	callstack 0
   808  0001A3                     _joint_dilutor_homed:
   809                           	callstack 0
   810  0001A3                     	ds	2
   811  0001A5                     _end_effector_homed:
   812                           	callstack 0
   813  0001A5                     	ds	2
   814  0001A7                     _joint_homed:
   815                           	callstack 0
   816  0001A7                     	ds	2
   817  0001A9                     _diluting_position_reached:
   818                           	callstack 0
   819  0001A9                     	ds	2
   820  0001AB                     _grasping_ee_position_reached:
   821                           	callstack 0
   822  0001AB                     	ds	2
   823  0001AD                     _grasping_joint_position_reached:
   824                           	callstack 0
   825  0001AD                     	ds	2
   826  0001AF                     _move_to_trash:
   827                           	callstack 0
   828  0001AF                     	ds	2
   829  0001B1                     _trash_counter:
   830                           	callstack 0
   831  0001B1                     	ds	2
   832  0001B3                     _dilution_done:
   833                           	callstack 0
   834  0001B3                     	ds	2
   835  0001B5                     _mix_counter:
   836                           	callstack 0
   837  0001B5                     	ds	2
   838  0001B7                     _timer_done:
   839                           	callstack 0
   840  0001B7                     	ds	1
   841  0001B8                     _read_new_char:
   842                           	callstack 0
   843  0001B8                     	ds	1
   844  0001B9                     _idle_msg_sent:
   845                           	callstack 0
   846  0001B9                     	ds	1
   847  0001BA                     _state_changed:
   848                           	callstack 0
   849  0001BA                     	ds	1
   850  0001BB                     _joint_dilutor_stepper:
   851                           	callstack 0
   852  0001BB                     	ds	12
   853  0001C7                     _end_effector_stepper:
   854                           	callstack 0
   855  0001C7                     	ds	12
   856  0001D3                     _joint_stepper:
   857                           	callstack 0
   858  0001D3                     	ds	12
   859  0001DF                     _state:
   860                           	callstack 0
   861  0001DF                     	ds	2
   862                           
   863                           	psect	dataBANK1
   864  0001E1                     __pdataBANK1:
   865                           	callstack 0
   866  0001E1                     _state_msgs:
   867                           	callstack 0
   868  0001E1                     	ds	16
   869  0001F1                     _hex_end_effector_values:
   870                           	callstack 0
   871  0001F1                     	ds	4
   872  0001F5                     _hex_joint_values:
   873                           	callstack 0
   874  0001F5                     	ds	4
   875                           
   876                           	psect	cstackBANK1
   877  000100                     __pcstackBANK1:
   878                           	callstack 0
   879  000100                     main@greet_str:
   880                           	callstack 0
   881                           
   882                           ; 160 bytes @ 0x0
   883  000100                     	ds	160
   884  0001A0                     main@current_temp:
   885                           	callstack 0
   886                           
   887                           ; 2 bytes @ 0xA0
   888  0001A0                     	ds	2
   889  0001A2                     main@rx_char:
   890                           	callstack 0
   891                           
   892                           ; 1 bytes @ 0xA2
   893  0001A2                     	ds	1
   894                           
   895                           	psect	cstackBANK0
   896  0000B8                     __pcstackBANK0:
   897                           	callstack 0
   898  0000B8                     _vsnprintf$1584:
   899                           	callstack 0
   900  0000B8                     _roundf$2167:
   901                           	callstack 0
   902                           
   903                           ; 4 bytes @ 0x0
   904  0000B8                     	ds	2
   905  0000BA                     vsnprintf@cnt:
   906                           	callstack 0
   907                           
   908                           ; 2 bytes @ 0x2
   909  0000BA                     	ds	2
   910  0000BC                     roundf@e:
   911                           	callstack 0
   912  0000BC                     vsnprintf@f:
   913                           	callstack 0
   914                           
   915                           ; 6 bytes @ 0x4
   916  0000BC                     	ds	2
   917  0000BE                     _roundf$2166:
   918                           	callstack 0
   919                           
   920                           ; 4 bytes @ 0x6
   921  0000BE                     	ds	4
   922  0000C2                     ?_snprintf:
   923                           	callstack 0
   924  0000C2                     snprintf@s:
   925                           	callstack 0
   926  0000C2                     roundf@u:
   927                           	callstack 0
   928                           
   929                           ; 4 bytes @ 0xA
   930  0000C2                     	ds	2
   931  0000C4                     snprintf@n:
   932                           	callstack 0
   933                           
   934                           ; 2 bytes @ 0xC
   935  0000C4                     	ds	2
   936  0000C6                     snprintf@fmt:
   937                           	callstack 0
   938  0000C6                     roundf@y:
   939                           	callstack 0
   940                           
   941                           ; 4 bytes @ 0xE
   942  0000C6                     	ds	4
   943  0000CA                     ?___fltol:
   944                           	callstack 0
   945  0000CA                     ___fltol@f1:
   946                           	callstack 0
   947                           
   948                           ; 4 bytes @ 0x12
   949  0000CA                     	ds	2
   950  0000CC                     snprintf@ap:
   951                           	callstack 0
   952                           
   953                           ; 2 bytes @ 0x14
   954  0000CC                     	ds	2
   955  0000CE                     ??___fltol:
   956                           
   957                           ; 1 bytes @ 0x16
   958  0000CE                     	ds	4
   959  0000D2                     ___fltol@sign1:
   960                           	callstack 0
   961                           
   962                           ; 1 bytes @ 0x1A
   963  0000D2                     	ds	1
   964  0000D3                     ___fltol@exp1:
   965                           	callstack 0
   966                           
   967                           ; 1 bytes @ 0x1B
   968  0000D3                     	ds	1
   969  0000D4                     ?_get_liters:
   970                           	callstack 0
   971  0000D4                     ?_get_temperature:
   972                           	callstack 0
   973  0000D4                     update_pwm_duty_ccp1@time_up:
   974                           	callstack 0
   975  0000D4                     _init_timer_2$2165:
   976                           	callstack 0
   977                           
   978                           ; 4 bytes @ 0x1C
   979  0000D4                     	ds	2
   980  0000D6                     ?_check_temperature:
   981                           	callstack 0
   982  0000D6                     check_temperature@temp_to_be_checked:
   983                           	callstack 0
   984                           
   985                           ; 2 bytes @ 0x1E
   986  0000D6                     	ds	2
   987  0000D8                     ??_update_pwm_duty_ccp1:
   988  0000D8                     check_temperature@grad:
   989                           	callstack 0
   990                           
   991                           ; 4 bytes @ 0x20
   992  0000D8                     	ds	2
   993  0000DA                     update_pwm_duty_ccp1@new_duty:
   994                           	callstack 0
   995                           
   996                           ; 2 bytes @ 0x22
   997  0000DA                     	ds	2
   998  0000DC                     update_pwm_duty_ccp1@lsbs_duty:
   999                           	callstack 0
  1000                           
  1001                           ; 1 bytes @ 0x24
  1002  0000DC                     	ds	1
  1003  0000DD                     ??_main:
  1004                           
  1005                           ; 1 bytes @ 0x25
  1006  0000DD                     	ds	2
  1007                           
  1008                           	psect	cstackCOMRAM
  1009  000001                     __pcstackCOMRAM:
  1010                           	callstack 0
  1011  000001                     ?_strlen:
  1012                           	callstack 0
  1013  000001                     ?_isupper:
  1014                           	callstack 0
  1015  000001                     ?_isalpha:
  1016                           	callstack 0
  1017  000001                     ?_isdigit:
  1018                           	callstack 0
  1019  000001                     ?_strncmp:
  1020                           	callstack 0
  1021  000001                     ?_isspace:
  1022                           	callstack 0
  1023  000001                     ?_islower:
  1024                           	callstack 0
  1025  000001                     ?___wmul:
  1026                           	callstack 0
  1027  000001                     ?___flneg:
  1028                           	callstack 0
  1029  000001                     ?___aodiv:
  1030                           	callstack 0
  1031  000001                     ?___aomod:
  1032                           	callstack 0
  1033  000001                     ?___lodiv:
  1034                           	callstack 0
  1035  000001                     ?___lomod:
  1036                           	callstack 0
  1037  000001                     serial_tx_char@val:
  1038                           	callstack 0
  1039  000001                     get_reg_value@rx_char:
  1040                           	callstack 0
  1041  000001                     lcd_wr@val:
  1042                           	callstack 0
  1043  000001                     state_translator_micro_to_fpga@state:
  1044                           	callstack 0
  1045  000001                     init_stepper@stepper_motor:
  1046                           	callstack 0
  1047  000001                     turn_on_current_coil@stepper_motor:
  1048                           	callstack 0
  1049  000001                     update_current_coil@stepper_motor:
  1050                           	callstack 0
  1051  000001                     change_direction@stepper_motor:
  1052                           	callstack 0
  1053  000001                     ___wmul@multiplier:
  1054                           	callstack 0
  1055  000001                     isalpha@c:
  1056                           	callstack 0
  1057  000001                     isdigit@c:
  1058                           	callstack 0
  1059  000001                     isspace@c:
  1060                           	callstack 0
  1061  000001                     isupper@c:
  1062                           	callstack 0
  1063  000001                     fputc@c:
  1064                           	callstack 0
  1065  000001                     strlen@s:
  1066                           	callstack 0
  1067  000001                     strncmp@_l:
  1068                           	callstack 0
  1069  000001                     islower@c:
  1070                           	callstack 0
  1071  000001                     ___flge@ff1:
  1072                           	callstack 0
  1073  000001                     ___flneg@f1:
  1074                           	callstack 0
  1075  000001                     ___aodiv@dividend:
  1076                           	callstack 0
  1077  000001                     ___aomod@dividend:
  1078                           	callstack 0
  1079  000001                     ___lodiv@dividend:
  1080                           	callstack 0
  1081  000001                     ___lomod@dividend:
  1082                           	callstack 0
  1083                           
  1084                           ; 8 bytes @ 0x0
  1085  000001                     	ds	1
  1086  000002                     lcd_cmd@val:
  1087                           	callstack 0
  1088  000002                     lcd_dat@val:
  1089                           	callstack 0
  1090                           
  1091                           ; 1 bytes @ 0x1
  1092  000002                     	ds	1
  1093  000003                     ??_lcd_init:
  1094  000003                     ??_change_direction:
  1095  000003                     ??_isupper:
  1096  000003                     ??_isalpha:
  1097  000003                     ??_isdigit:
  1098  000003                     ??_isspace:
  1099  000003                     ??_islower:
  1100  000003                     ??_turn_on_current_coil:
  1101  000003                     ??_update_current_coil:
  1102  000003                     lcd_str@str:
  1103                           	callstack 0
  1104  000003                     state_translator_fpga_to_micro@state:
  1105                           	callstack 0
  1106  000003                     init_stepper@current_coil:
  1107                           	callstack 0
  1108  000003                     ___wmul@multiplicand:
  1109                           	callstack 0
  1110  000003                     fputc@fp:
  1111                           	callstack 0
  1112  000003                     strlen@a:
  1113                           	callstack 0
  1114  000003                     strncmp@_r:
  1115                           	callstack 0
  1116                           
  1117                           ; 2 bytes @ 0x2
  1118  000003                     	ds	2
  1119  000005                     ??_lcd_str:
  1120  000005                     ??_fputc:
  1121  000005                     state_translator_fpga_to_micro@state_machine_code:
  1122                           	callstack 0
  1123  000005                     state_translator_micro_to_fpga@state_machine_code:
  1124                           	callstack 0
  1125  000005                     init_stepper@step_counter:
  1126                           	callstack 0
  1127  000005                     ___wmul@product:
  1128                           	callstack 0
  1129  000005                     strncmp@n:
  1130                           	callstack 0
  1131  000005                     ___flge@ff2:
  1132                           	callstack 0
  1133                           
  1134                           ; 4 bytes @ 0x4
  1135  000005                     	ds	2
  1136  000007                     ??_strncmp:
  1137  000007                     ?_toupper:
  1138                           	callstack 0
  1139  000007                     lcd_str@i:
  1140                           	callstack 0
  1141  000007                     _isspace$1868:
  1142                           	callstack 0
  1143  000007                     init_stepper@direction:
  1144                           	callstack 0
  1145  000007                     toupper@c:
  1146                           	callstack 0
  1147                           
  1148                           ; 2 bytes @ 0x6
  1149  000007                     	ds	1
  1150  000008                     ?_atoi:
  1151                           	callstack 0
  1152  000008                     atoi@s:
  1153                           	callstack 0
  1154  000008                     strncmp@l:
  1155                           	callstack 0
  1156                           
  1157                           ; 2 bytes @ 0x7
  1158  000008                     	ds	1
  1159  000009                     ??_toupper:
  1160  000009                     ??___flge:
  1161  000009                     ?_reach_goal:
  1162                           	callstack 0
  1163  000009                     init_stepper@hex_coil_register_values:
  1164                           	callstack 0
  1165  000009                     reach_goal@stepper_motor:
  1166                           	callstack 0
  1167  000009                     ___aodiv@divisor:
  1168                           	callstack 0
  1169  000009                     ___aomod@divisor:
  1170                           	callstack 0
  1171  000009                     ___lodiv@divisor:
  1172                           	callstack 0
  1173  000009                     ___lomod@divisor:
  1174                           	callstack 0
  1175                           
  1176                           ; 8 bytes @ 0x8
  1177  000009                     	ds	1
  1178  00000A                     ??_atoi:
  1179  00000A                     ?_stoa:
  1180                           	callstack 0
  1181  00000A                     stoa@fp:
  1182                           	callstack 0
  1183  00000A                     fputs@s:
  1184                           	callstack 0
  1185  00000A                     strncmp@r:
  1186                           	callstack 0
  1187                           
  1188                           ; 2 bytes @ 0x9
  1189  00000A                     	ds	1
  1190  00000B                     init_stepper@register_name:
  1191                           	callstack 0
  1192  00000B                     reach_goal@goal_to_reach:
  1193                           	callstack 0
  1194                           
  1195                           ; 2 bytes @ 0xA
  1196  00000B                     	ds	1
  1197  00000C                     stoa@s:
  1198                           	callstack 0
  1199  00000C                     fputs@fp:
  1200                           	callstack 0
  1201                           
  1202                           ; 2 bytes @ 0xB
  1203  00000C                     	ds	1
  1204  00000D                     ??_init_stepper:
  1205  00000D                     ??_reach_goal:
  1206  00000D                     _toupper$1928:
  1207                           	callstack 0
  1208                           
  1209                           ; 2 bytes @ 0xC
  1210  00000D                     	ds	1
  1211  00000E                     ??_stoa:
  1212  00000E                     fputs@c:
  1213                           	callstack 0
  1214  00000E                     atoi@neg:
  1215                           	callstack 0
  1216                           
  1217                           ; 2 bytes @ 0xD
  1218  00000E                     	ds	1
  1219  00000F                     init_stepper@i:
  1220                           	callstack 0
  1221  00000F                     fputs@i:
  1222                           	callstack 0
  1223  00000F                     stoa@nuls:
  1224                           	callstack 0
  1225                           
  1226                           ; 7 bytes @ 0xE
  1227  00000F                     	ds	1
  1228  000010                     _atoi$1840:
  1229                           	callstack 0
  1230                           
  1231                           ; 2 bytes @ 0xF
  1232  000010                     	ds	1
  1233  000011                     ?_pad:
  1234                           	callstack 0
  1235  000011                     ___aodiv@counter:
  1236                           	callstack 0
  1237  000011                     ___aomod@counter:
  1238                           	callstack 0
  1239  000011                     ___lomod@counter:
  1240                           	callstack 0
  1241  000011                     pad@fp:
  1242                           	callstack 0
  1243  000011                     ___lodiv@quotient:
  1244                           	callstack 0
  1245                           
  1246                           ; 8 bytes @ 0x10
  1247  000011                     	ds	1
  1248  000012                     ___aodiv@sign:
  1249                           	callstack 0
  1250  000012                     ___aomod@sign:
  1251                           	callstack 0
  1252  000012                     _atoi$1842:
  1253                           	callstack 0
  1254                           
  1255                           ; 2 bytes @ 0x11
  1256  000012                     	ds	1
  1257  000013                     ?_abs:
  1258                           	callstack 0
  1259  000013                     abs@a:
  1260                           	callstack 0
  1261  000013                     pad@buf:
  1262                           	callstack 0
  1263  000013                     ___aodiv@quotient:
  1264                           	callstack 0
  1265                           
  1266                           ; 8 bytes @ 0x12
  1267  000013                     	ds	1
  1268  000014                     _atoi$1841:
  1269                           	callstack 0
  1270                           
  1271                           ; 1 bytes @ 0x13
  1272  000014                     	ds	1
  1273  000015                     ??_abs:
  1274  000015                     pad@p:
  1275                           	callstack 0
  1276  000015                     atoi@n:
  1277                           	callstack 0
  1278                           
  1279                           ; 2 bytes @ 0x14
  1280  000015                     	ds	1
  1281  000016                     stoa@i:
  1282                           	callstack 0
  1283                           
  1284                           ; 2 bytes @ 0x15
  1285  000016                     	ds	1
  1286  000017                     ??_pad:
  1287  000017                     ?___awdiv:
  1288                           	callstack 0
  1289  000017                     ___awdiv@dividend:
  1290                           	callstack 0
  1291                           
  1292                           ; 2 bytes @ 0x16
  1293  000017                     	ds	1
  1294  000018                     pad@i:
  1295                           	callstack 0
  1296  000018                     stoa@w:
  1297                           	callstack 0
  1298                           
  1299                           ; 2 bytes @ 0x17
  1300  000018                     	ds	1
  1301  000019                     ___lodiv@counter:
  1302                           	callstack 0
  1303  000019                     ___awdiv@divisor:
  1304                           	callstack 0
  1305                           
  1306                           ; 2 bytes @ 0x18
  1307  000019                     	ds	1
  1308  00001A                     pad@w:
  1309                           	callstack 0
  1310  00001A                     stoa@cp:
  1311                           	callstack 0
  1312                           
  1313                           ; 2 bytes @ 0x19
  1314  00001A                     	ds	1
  1315  00001B                     ___awdiv@counter:
  1316                           	callstack 0
  1317                           
  1318                           ; 1 bytes @ 0x1A
  1319  00001B                     	ds	1
  1320  00001C                     ?_ctoa:
  1321                           	callstack 0
  1322  00001C                     ?_dtoa:
  1323                           	callstack 0
  1324  00001C                     ?_otoa:
  1325                           	callstack 0
  1326  00001C                     ?_utoa:
  1327                           	callstack 0
  1328  00001C                     ?_xtoa:
  1329                           	callstack 0
  1330  00001C                     ___awdiv@sign:
  1331                           	callstack 0
  1332  00001C                     ctoa@fp:
  1333                           	callstack 0
  1334  00001C                     dtoa@fp:
  1335                           	callstack 0
  1336  00001C                     otoa@fp:
  1337                           	callstack 0
  1338  00001C                     stoa@p:
  1339                           	callstack 0
  1340  00001C                     utoa@fp:
  1341                           	callstack 0
  1342  00001C                     xtoa@fp:
  1343                           	callstack 0
  1344                           
  1345                           ; 2 bytes @ 0x1B
  1346  00001C                     	ds	1
  1347  00001D                     ___awdiv@quotient:
  1348                           	callstack 0
  1349                           
  1350                           ; 2 bytes @ 0x1C
  1351  00001D                     	ds	1
  1352  00001E                     ctoa@c:
  1353                           	callstack 0
  1354  00001E                     stoa@l:
  1355                           	callstack 0
  1356  00001E                     dtoa@d:
  1357                           	callstack 0
  1358  00001E                     otoa@d:
  1359                           	callstack 0
  1360  00001E                     utoa@d:
  1361                           	callstack 0
  1362  00001E                     xtoa@d:
  1363                           	callstack 0
  1364                           
  1365                           ; 8 bytes @ 0x1D
  1366  00001E                     	ds	1
  1367  00001F                     ?___xxtofl:
  1368                           	callstack 0
  1369  00001F                     ctoa@w:
  1370                           	callstack 0
  1371  00001F                     ___xxtofl@val:
  1372                           	callstack 0
  1373                           
  1374                           ; 4 bytes @ 0x1E
  1375  00001F                     	ds	4
  1376  000023                     ??___xxtofl:
  1377                           
  1378                           ; 1 bytes @ 0x22
  1379  000023                     	ds	3
  1380  000026                     ??_dtoa:
  1381  000026                     ??_otoa:
  1382  000026                     ??_utoa:
  1383  000026                     xtoa@x:
  1384                           	callstack 0
  1385                           
  1386                           ; 1 bytes @ 0x25
  1387  000026                     	ds	1
  1388  000027                     ??_xtoa:
  1389  000027                     ___xxtofl@sign:
  1390                           	callstack 0
  1391                           
  1392                           ; 1 bytes @ 0x26
  1393  000027                     	ds	1
  1394  000028                     ___xxtofl@exp:
  1395                           	callstack 0
  1396                           
  1397                           ; 1 bytes @ 0x27
  1398  000028                     	ds	1
  1399  000029                     ___xxtofl@arg:
  1400                           	callstack 0
  1401                           
  1402                           ; 4 bytes @ 0x28
  1403  000029                     	ds	4
  1404  00002D                     ?___flmul:
  1405                           	callstack 0
  1406  00002D                     ___flmul@b:
  1407                           	callstack 0
  1408                           
  1409                           ; 4 bytes @ 0x2C
  1410  00002D                     	ds	1
  1411  00002E                     _dtoa$1666:
  1412                           	callstack 0
  1413  00002E                     otoa@p:
  1414                           	callstack 0
  1415  00002E                     utoa@p:
  1416                           	callstack 0
  1417                           
  1418                           ; 2 bytes @ 0x2D
  1419  00002E                     	ds	1
  1420  00002F                     _xtoa$1702:
  1421                           	callstack 0
  1422                           
  1423                           ; 2 bytes @ 0x2E
  1424  00002F                     	ds	1
  1425  000030                     dtoa@p:
  1426                           	callstack 0
  1427  000030                     otoa@t:
  1428                           	callstack 0
  1429  000030                     utoa@w:
  1430                           	callstack 0
  1431                           
  1432                           ; 2 bytes @ 0x2F
  1433  000030                     	ds	1
  1434  000031                     _xtoa$1703:
  1435                           	callstack 0
  1436  000031                     ___flmul@a:
  1437                           	callstack 0
  1438                           
  1439                           ; 4 bytes @ 0x30
  1440  000031                     	ds	1
  1441  000032                     dtoa@w:
  1442                           	callstack 0
  1443  000032                     otoa@w:
  1444                           	callstack 0
  1445  000032                     utoa@n:
  1446                           	callstack 0
  1447                           
  1448                           ; 8 bytes @ 0x31
  1449  000032                     	ds	1
  1450  000033                     xtoa@p:
  1451                           	callstack 0
  1452                           
  1453                           ; 2 bytes @ 0x32
  1454  000033                     	ds	1
  1455  000034                     dtoa@s:
  1456                           	callstack 0
  1457  000034                     otoa@n:
  1458                           	callstack 0
  1459                           
  1460                           ; 8 bytes @ 0x33
  1461  000034                     	ds	1
  1462  000035                     ??___flmul:
  1463  000035                     xtoa@w:
  1464                           	callstack 0
  1465                           
  1466                           ; 2 bytes @ 0x34
  1467  000035                     	ds	1
  1468  000036                     dtoa@n:
  1469                           	callstack 0
  1470                           
  1471                           ; 8 bytes @ 0x35
  1472  000036                     	ds	1
  1473  000037                     xtoa@n:
  1474                           	callstack 0
  1475                           
  1476                           ; 8 bytes @ 0x36
  1477  000037                     	ds	2
  1478  000039                     ___flmul@sign:
  1479                           	callstack 0
  1480                           
  1481                           ; 1 bytes @ 0x38
  1482  000039                     	ds	1
  1483  00003A                     utoa@i:
  1484                           	callstack 0
  1485  00003A                     ___flmul@grs:
  1486                           	callstack 0
  1487                           
  1488                           ; 4 bytes @ 0x39
  1489  00003A                     	ds	2
  1490  00003C                     otoa@i:
  1491                           	callstack 0
  1492                           
  1493                           ; 2 bytes @ 0x3B
  1494  00003C                     	ds	2
  1495  00003E                     ___flmul@aexp:
  1496                           	callstack 0
  1497  00003E                     dtoa@i:
  1498                           	callstack 0
  1499                           
  1500                           ; 2 bytes @ 0x3D
  1501  00003E                     	ds	1
  1502  00003F                     ___flmul@bexp:
  1503                           	callstack 0
  1504  00003F                     xtoa@i:
  1505                           	callstack 0
  1506                           
  1507                           ; 2 bytes @ 0x3E
  1508  00003F                     	ds	1
  1509  000040                     ___flmul@prod:
  1510                           	callstack 0
  1511                           
  1512                           ; 4 bytes @ 0x3F
  1513  000040                     	ds	1
  1514  000041                     xtoa@c:
  1515                           	callstack 0
  1516                           
  1517                           ; 2 bytes @ 0x40
  1518  000041                     	ds	2
  1519  000043                     ?_vfpfcnvrt:
  1520                           	callstack 0
  1521  000043                     vfpfcnvrt@fp:
  1522                           	callstack 0
  1523                           
  1524                           ; 2 bytes @ 0x42
  1525  000043                     	ds	1
  1526  000044                     ___flmul@temp:
  1527                           	callstack 0
  1528                           
  1529                           ; 2 bytes @ 0x43
  1530  000044                     	ds	1
  1531  000045                     vfpfcnvrt@fmt:
  1532                           	callstack 0
  1533                           
  1534                           ; 2 bytes @ 0x44
  1535  000045                     	ds	1
  1536  000046                     ?___fldiv:
  1537                           	callstack 0
  1538  000046                     ___fldiv@b:
  1539                           	callstack 0
  1540                           
  1541                           ; 4 bytes @ 0x45
  1542  000046                     	ds	1
  1543  000047                     vfpfcnvrt@ap:
  1544                           	callstack 0
  1545                           
  1546                           ; 2 bytes @ 0x46
  1547  000047                     	ds	2
  1548  000049                     ??_vfpfcnvrt:
  1549                           
  1550                           ; 1 bytes @ 0x48
  1551  000049                     	ds	1
  1552  00004A                     ___fldiv@a:
  1553                           	callstack 0
  1554                           
  1555                           ; 4 bytes @ 0x49
  1556  00004A                     	ds	3
  1557  00004D                     vfpfcnvrt@cp:
  1558                           	callstack 0
  1559                           
  1560                           ; 2 bytes @ 0x4C
  1561  00004D                     	ds	1
  1562  00004E                     ??___fldiv:
  1563                           
  1564                           ; 1 bytes @ 0x4D
  1565  00004E                     	ds	1
  1566  00004F                     vfpfcnvrt@done:
  1567                           	callstack 0
  1568                           
  1569                           ; 2 bytes @ 0x4E
  1570  00004F                     	ds	2
  1571  000051                     _vfpfcnvrt$1717:
  1572                           	callstack 0
  1573                           
  1574                           ; 2 bytes @ 0x50
  1575  000051                     	ds	1
  1576  000052                     ___fldiv@rem:
  1577                           	callstack 0
  1578                           
  1579                           ; 4 bytes @ 0x51
  1580  000052                     	ds	1
  1581  000053                     _vfpfcnvrt$1718:
  1582                           	callstack 0
  1583                           
  1584                           ; 2 bytes @ 0x52
  1585  000053                     	ds	2
  1586  000055                     vfpfcnvrt@ll:
  1587                           	callstack 0
  1588                           
  1589                           ; 8 bytes @ 0x54
  1590  000055                     	ds	1
  1591  000056                     ___fldiv@sign:
  1592                           	callstack 0
  1593                           
  1594                           ; 1 bytes @ 0x55
  1595  000056                     	ds	1
  1596  000057                     ___fldiv@new_exp:
  1597                           	callstack 0
  1598                           
  1599                           ; 2 bytes @ 0x56
  1600  000057                     	ds	2
  1601  000059                     ___fldiv@grs:
  1602                           	callstack 0
  1603                           
  1604                           ; 4 bytes @ 0x58
  1605  000059                     	ds	4
  1606  00005D                     ___fldiv@bexp:
  1607                           	callstack 0
  1608  00005D                     vfpfcnvrt@vp:
  1609                           	callstack 0
  1610                           
  1611                           ; 2 bytes @ 0x5C
  1612  00005D                     	ds	1
  1613  00005E                     ___fldiv@aexp:
  1614                           	callstack 0
  1615                           
  1616                           ; 1 bytes @ 0x5D
  1617  00005E                     	ds	1
  1618  00005F                     ?___fladd:
  1619                           	callstack 0
  1620  00005F                     vfpfcnvrt@c:
  1621                           	callstack 0
  1622  00005F                     ___fladd@b:
  1623                           	callstack 0
  1624                           
  1625                           ; 4 bytes @ 0x5E
  1626  00005F                     	ds	1
  1627  000060                     vfpfcnvrt@llu:
  1628                           	callstack 0
  1629                           
  1630                           ; 8 bytes @ 0x5F
  1631  000060                     	ds	3
  1632  000063                     ___fladd@a:
  1633                           	callstack 0
  1634                           
  1635                           ; 4 bytes @ 0x62
  1636  000063                     	ds	4
  1637  000067                     ??___fladd:
  1638                           
  1639                           ; 1 bytes @ 0x66
  1640  000067                     	ds	1
  1641  000068                     ?_vfprintf:
  1642                           	callstack 0
  1643  000068                     vfprintf@fp:
  1644                           	callstack 0
  1645                           
  1646                           ; 2 bytes @ 0x67
  1647  000068                     	ds	2
  1648  00006A                     vfprintf@fmt:
  1649                           	callstack 0
  1650                           
  1651                           ; 2 bytes @ 0x69
  1652  00006A                     	ds	1
  1653  00006B                     ___fladd@signs:
  1654                           	callstack 0
  1655                           
  1656                           ; 1 bytes @ 0x6A
  1657  00006B                     	ds	1
  1658  00006C                     ___fladd@aexp:
  1659                           	callstack 0
  1660  00006C                     vfprintf@ap:
  1661                           	callstack 0
  1662                           
  1663                           ; 2 bytes @ 0x6B
  1664  00006C                     	ds	1
  1665  00006D                     ___fladd@bexp:
  1666                           	callstack 0
  1667                           
  1668                           ; 1 bytes @ 0x6C
  1669  00006D                     	ds	1
  1670  00006E                     ___fladd@grs:
  1671                           	callstack 0
  1672  00006E                     vfprintf@cfmt:
  1673                           	callstack 0
  1674                           
  1675                           ; 2 bytes @ 0x6D
  1676  00006E                     	ds	1
  1677  00006F                     ?___flsub:
  1678                           	callstack 0
  1679  00006F                     ___flsub@b:
  1680                           	callstack 0
  1681                           
  1682                           ; 4 bytes @ 0x6E
  1683  00006F                     	ds	1
  1684  000070                     ?_vsnprintf:
  1685                           	callstack 0
  1686  000070                     vsnprintf@s:
  1687                           	callstack 0
  1688                           
  1689                           ; 2 bytes @ 0x6F
  1690  000070                     	ds	2
  1691  000072                     vsnprintf@n:
  1692                           	callstack 0
  1693                           
  1694                           ; 2 bytes @ 0x71
  1695  000072                     	ds	1
  1696  000073                     ___flsub@a:
  1697                           	callstack 0
  1698                           
  1699                           ; 4 bytes @ 0x72
  1700  000073                     	ds	1
  1701  000074                     vsnprintf@fmt:
  1702                           	callstack 0
  1703                           
  1704                           ; 2 bytes @ 0x73
  1705  000074                     	ds	2
  1706  000076                     vsnprintf@ap:
  1707                           	callstack 0
  1708                           
  1709                           ; 2 bytes @ 0x75
  1710  000076                     	ds	1
  1711  000077                     ?_roundf:
  1712                           	callstack 0
  1713  000077                     roundf@x:
  1714                           	callstack 0
  1715                           
  1716                           ; 4 bytes @ 0x76
  1717  000077                     	ds	1
  1718  000078                     ??_vsnprintf:
  1719                           
  1720                           ; 1 bytes @ 0x77
  1721  000078                     	ds	3
  1722  00007B                     ??_roundf:
  1723                           
  1724                           ; 1 bytes @ 0x7A
  1725  00007B                     	ds	1
  1726  00007C                     
  1727                           ; 1 bytes @ 0x7B
  1728  00007C                     	ds	3
  1729  00007F                     
  1730                           ; 1 bytes @ 0x7E
  1731 ;;
  1732 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1733 ;;
  1734 ;; *************** function _main *****************
  1735 ;; Defined at:
  1736 ;;		line 65 in file "main.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;		None
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;  current_temp    2  160[BANK1 ] int 
  1741 ;;  greet_str     160    0[BANK1 ] PTR const unsigned char 
  1742 ;;		 -> ?_snprintf(2), STR_8(50), STR_7(9), STR_6(7), 
  1743 ;;		 -> STR_5(9), STR_4(39), STR_3(9), STR_2(64), 
  1744 ;;		 -> STR_1(49), 
  1745 ;;  rx_char         1  162[BANK1 ] unsigned char 
  1746 ;; Return value:  Size  Location     Type
  1747 ;;                  1    wreg      void 
  1748 ;; Registers used:
  1749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1750 ;; Tracked objects:
  1751 ;;		On entry : 0/0
  1752 ;;		On exit  : 0/0
  1753 ;;		Unchanged: 0/0
  1754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1755 ;;      Params:         0       0       0       0       0       0       0
  1756 ;;      Locals:         0       0     163       0       0       0       0
  1757 ;;      Temps:          0       2       0       0       0       0       0
  1758 ;;      Totals:         0       2     163       0       0       0       0
  1759 ;;Total ram usage:      165 bytes
  1760 ;; Hardware stack levels required when called:   10
  1761 ;; This function calls:
  1762 ;;		___wmul
  1763 ;;		_change_direction
  1764 ;;		_check_temperature
  1765 ;;		_configure_ad_conversion_oven
  1766 ;;		_configure_ad_conversion_tank
  1767 ;;		_get_liters
  1768 ;;		_get_reg_value
  1769 ;;		_get_temperature
  1770 ;;		_init_PORTS
  1771 ;;		_init_USART
  1772 ;;		_init_ccp1
  1773 ;;		_init_interrupts
  1774 ;;		_init_stepper
  1775 ;;		_init_timer_0
  1776 ;;		_init_timer_2
  1777 ;;		_lcd_cmd
  1778 ;;		_lcd_init
  1779 ;;		_lcd_str
  1780 ;;		_reach_goal
  1781 ;;		_serial_tx_char
  1782 ;;		_snprintf
  1783 ;;		_state_translator_fpga_to_micro
  1784 ;;		_state_translator_micro_to_fpga
  1785 ;;		_wait_for_zero
  1786 ;; This function is called by:
  1787 ;;		Startup code after reset
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791                           	psect	text0
  1792  001462                     __ptext0:
  1793                           	callstack 0
  1794  001462                     _main:
  1795                           	callstack 21
  1796  001462  FFFF               	dw	65535	; assembler added errata NOP
  1797                           
  1798                           ;main.c: 67:     init_PORTS();
  1799  001464  ECD6  F031         	call	_init_PORTS	;wreg free
  1800  001468                     
  1801                           ;main.c: 68:     init_USART();
  1802  001468  EC42  F032         	call	_init_USART	;wreg free
  1803  00146C                     
  1804                           ;main.c: 69:     init_timer_2();
  1805  00146C  ECE2  F036         	call	_init_timer_2	;wreg free
  1806  001470                     
  1807                           ;main.c: 70:     init_ccp1();
  1808  001470  EC71  F031         	call	_init_ccp1	;wreg free
  1809  001474                     
  1810                           ;main.c: 71:     init_interrupts();
  1811  001474  EC08  F031         	call	_init_interrupts	;wreg free
  1812  001478                     
  1813                           ;main.c: 73:     init_stepper(&joint_stepper, 0, 0, 1, hex_joint_values, &LATB);
  1814  001478  0ED3               	movlw	low _joint_stepper
  1815  00147A  6E01               	movwf	init_stepper@stepper_motor^0,c
  1816  00147C  0E01               	movlw	high _joint_stepper
  1817  00147E  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  1818  001480  0E00               	movlw	0
  1819  001482  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  1820  001484  0E00               	movlw	0
  1821  001486  6E03               	movwf	init_stepper@current_coil^0,c
  1822  001488  0E00               	movlw	0
  1823  00148A  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  1824  00148C  0E00               	movlw	0
  1825  00148E  6E05               	movwf	init_stepper@step_counter^0,c
  1826  001490  0E00               	movlw	0
  1827  001492  6E08               	movwf	(init_stepper@direction+1)^0,c
  1828  001494  0E01               	movlw	1
  1829  001496  6E07               	movwf	init_stepper@direction^0,c
  1830  001498  0EF5               	movlw	low _hex_joint_values
  1831  00149A  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  1832  00149C  0E01               	movlw	high _hex_joint_values
  1833  00149E  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  1834  0014A0  0E8A               	movlw	138
  1835  0014A2  6E0B               	movwf	init_stepper@register_name^0,c
  1836  0014A4  0E0F               	movlw	15
  1837  0014A6  6E0C               	movwf	(init_stepper@register_name+1)^0,c
  1838  0014A8  EC2C  F036         	call	_init_stepper	;wreg free
  1839  0014AC                     
  1840                           ;main.c: 74:     init_stepper(&end_effector_stepper, 0, 0, 1, hex_end_effector_values, &
      +                          LATB);
  1841  0014AC  0EC7               	movlw	low _end_effector_stepper
  1842  0014AE  6E01               	movwf	init_stepper@stepper_motor^0,c
  1843  0014B0  0E01               	movlw	high _end_effector_stepper
  1844  0014B2  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  1845  0014B4  0E00               	movlw	0
  1846  0014B6  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  1847  0014B8  0E00               	movlw	0
  1848  0014BA  6E03               	movwf	init_stepper@current_coil^0,c
  1849  0014BC  0E00               	movlw	0
  1850  0014BE  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  1851  0014C0  0E00               	movlw	0
  1852  0014C2  6E05               	movwf	init_stepper@step_counter^0,c
  1853  0014C4  0E00               	movlw	0
  1854  0014C6  6E08               	movwf	(init_stepper@direction+1)^0,c
  1855  0014C8  0E01               	movlw	1
  1856  0014CA  6E07               	movwf	init_stepper@direction^0,c
  1857  0014CC  0EF1               	movlw	low _hex_end_effector_values
  1858  0014CE  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  1859  0014D0  0E01               	movlw	high _hex_end_effector_values
  1860  0014D2  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  1861  0014D4  0E8A               	movlw	138
  1862  0014D6  6E0B               	movwf	init_stepper@register_name^0,c
  1863  0014D8  0E0F               	movlw	15
  1864  0014DA  6E0C               	movwf	(init_stepper@register_name+1)^0,c
  1865  0014DC  EC2C  F036         	call	_init_stepper	;wreg free
  1866  0014E0                     
  1867                           ;main.c: 75:     init_stepper(&joint_dilutor_stepper, 0, 0, 1, hex_joint_values, &LATC);
  1868  0014E0  0EBB               	movlw	low _joint_dilutor_stepper
  1869  0014E2  6E01               	movwf	init_stepper@stepper_motor^0,c
  1870  0014E4  0E01               	movlw	high _joint_dilutor_stepper
  1871  0014E6  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  1872  0014E8  0E00               	movlw	0
  1873  0014EA  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  1874  0014EC  0E00               	movlw	0
  1875  0014EE  6E03               	movwf	init_stepper@current_coil^0,c
  1876  0014F0  0E00               	movlw	0
  1877  0014F2  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  1878  0014F4  0E00               	movlw	0
  1879  0014F6  6E05               	movwf	init_stepper@step_counter^0,c
  1880  0014F8  0E00               	movlw	0
  1881  0014FA  6E08               	movwf	(init_stepper@direction+1)^0,c
  1882  0014FC  0E01               	movlw	1
  1883  0014FE  6E07               	movwf	init_stepper@direction^0,c
  1884  001500  0EF5               	movlw	low _hex_joint_values
  1885  001502  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  1886  001504  0E01               	movlw	high _hex_joint_values
  1887  001506  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  1888  001508  0E8B               	movlw	139
  1889  00150A  6E0B               	movwf	init_stepper@register_name^0,c
  1890  00150C  0E0F               	movlw	15
  1891  00150E  6E0C               	movwf	(init_stepper@register_name+1)^0,c
  1892  001510  EC2C  F036         	call	_init_stepper	;wreg free
  1893  001514                     
  1894                           ;main.c: 77:     lcd_init();
  1895  001514  EC64  F035         	call	_lcd_init	;wreg free
  1896  001518                     
  1897                           ;main.c: 78:     lcd_cmd(0x0C);
  1898  001518  0E0C               	movlw	12
  1899  00151A  EC97  F031         	call	_lcd_cmd
  1900  00151E                     
  1901                           ;main.c: 80:     lcd_cmd(0x01);
  1902  00151E  0E01               	movlw	1
  1903  001520  EC97  F031         	call	_lcd_cmd
  1904  001524                     
  1905                           ;main.c: 81:     lcd_cmd(0x80);
  1906  001524  0E80               	movlw	128
  1907  001526  EC97  F031         	call	_lcd_cmd
  1908  00152A                     
  1909                           ;main.c: 82:     lcd_str("Device has been reset");
  1910  00152A  0E82               	movlw	low STR_9
  1911  00152C  6E03               	movwf	lcd_str@str^0,c
  1912  00152E  0E7F               	movlw	high STR_9
  1913  001530  6E04               	movwf	(lcd_str@str+1)^0,c
  1914  001532  ECA3  F035         	call	_lcd_str	;wreg free
  1915  001536                     
  1916                           ;main.c: 84:     (INTCONbits.GIE = 1);
  1917  001536  8EF2               	bsf	242,7,c	;volatile
  1918  001538                     
  1919                           ;main.c: 86:     mix_counter = 0;
  1920  001538  0E00               	movlw	0
  1921  00153A  0101               	movlb	1	; () banked
  1922  00153C  6FB6               	movwf	(_mix_counter+1)& (0+255),b
  1923  00153E  0E00               	movlw	0
  1924  001540  6FB5               	movwf	_mix_counter& (0+255),b
  1925  001542                     l5667:
  1926  001542  FFFF               	dw	65535	; assembler added errata NOP
  1927                           
  1928                           ;main.c: 89:         if (state_changed){
  1929  001544  0101               	movlb	1	; () banked
  1930  001546  51BA               	movf	_state_changed& (0+255),w,b
  1931  001548  B4D8               	btfsc	status,2,c
  1932  00154A  EFA9  F00A         	goto	u6851
  1933  00154E  EFAC  F00A         	goto	u6850
  1934  001552                     u6851:
  1935  001552  FFFF               	dw	65535	; assembler added errata NOP
  1936  001554  EFFF  F00A         	goto	l5691
  1937  001558                     u6850:
  1938  001558  FFFF               	dw	65535	; assembler added errata NOP
  1939  00155A                     
  1940                           ; BSR set to: 1
  1941                           ;main.c: 90:             const char* greet_str[80];;main.c: 91:             if (read_new
      +                          _char){
  1942  00155A  51B8               	movf	_read_new_char& (0+255),w,b
  1943  00155C  B4D8               	btfsc	status,2,c
  1944  00155E  EFB3  F00A         	goto	u6861
  1945  001562  EFB6  F00A         	goto	u6860
  1946  001566                     u6861:
  1947  001566  FFFF               	dw	65535	; assembler added errata NOP
  1948  001568  EFF0  F00A         	goto	l5685
  1949  00156C                     u6860:
  1950  00156C  FFFF               	dw	65535	; assembler added errata NOP
  1951  00156E                     
  1952                           ; BSR set to: 1
  1953                           ;main.c: 92:                 rx_char = get_reg_value();
  1954  00156E  EC14  F031         	call	_get_reg_value	;wreg free
  1955  001572  0101               	movlb	1	; () banked
  1956  001574  6FA2               	movwf	main@rx_char& (0+255),b
  1957  001576                     
  1958                           ; BSR set to: 1
  1959                           ;main.c: 95:                 state_translator_fpga_to_micro(rx_char, &state);
  1960  001576  0EDF               	movlw	low _state
  1961  001578  6E03               	movwf	state_translator_fpga_to_micro@state^0,c
  1962  00157A  0E01               	movlw	high _state
  1963  00157C  6E04               	movwf	(state_translator_fpga_to_micro@state+1)^0,c
  1964  00157E  51A2               	movf	main@rx_char& (0+255),w,b
  1965  001580  ECCB  F03C         	call	_state_translator_fpga_to_micro
  1966  001584                     
  1967                           ;main.c: 96:                 read_new_char = 0;
  1968  001584  0E00               	movlw	0
  1969  001586  0101               	movlb	1	; () banked
  1970  001588  6FB8               	movwf	_read_new_char& (0+255),b
  1971  00158A                     
  1972                           ; BSR set to: 1
  1973                           ;main.c: 97:                 snprintf(greet_str, sizeof(greet_str), "%s", state_msgs[sta
      +                          te]);
  1974  00158A  0E00               	movlw	low main@greet_str
  1975  00158C  0100               	movlb	0	; () banked
  1976  00158E  6FC2               	movwf	snprintf@s& (0+255),b
  1977  001590  0E01               	movlw	high main@greet_str
  1978  001592  6FC3               	movwf	(snprintf@s+1)& (0+255),b
  1979  001594  0E00               	movlw	0
  1980  001596  6FC5               	movwf	(snprintf@n+1)& (0+255),b
  1981  001598  0EA0               	movlw	160
  1982  00159A  6FC4               	movwf	snprintf@n& (0+255),b
  1983  00159C  0EFC               	movlw	low STR_10
  1984  00159E  6FC6               	movwf	snprintf@fmt& (0+255),b
  1985  0015A0  0E7F               	movlw	high STR_10
  1986  0015A2  6FC7               	movwf	(snprintf@fmt+1)& (0+255),b
  1987  0015A4  90D8               	bcf	status,0,c
  1988  0015A6  0101               	movlb	1	; () banked
  1989  0015A8  35DF               	rlcf	_state& (0+255),w,b
  1990  0015AA  6ED9               	movwf	fsr2l,c
  1991  0015AC  35E0               	rlcf	(_state+1)& (0+255),w,b
  1992  0015AE  6EDA               	movwf	fsr2h,c
  1993  0015B0  0EE1               	movlw	low _state_msgs
  1994  0015B2  26D9               	addwf	fsr2l,f,c
  1995  0015B4  0E01               	movlw	high _state_msgs
  1996  0015B6  22DA               	addwfc	fsr2h,f,c
  1997  0015B8  CFDE F0C8          	movff	postinc2,?_snprintf+6
  1998  0015BC  CFDD F0C9          	movff	postdec2,?_snprintf+7
  1999  0015C0  ECEC  F031         	call	_snprintf	;wreg free
  2000  0015C4                     
  2001                           ;main.c: 98:                 lcd_cmd(0x01);
  2002  0015C4  0E01               	movlw	1
  2003  0015C6  EC97  F031         	call	_lcd_cmd
  2004  0015CA                     
  2005                           ;main.c: 99:                 lcd_cmd(0x80);
  2006  0015CA  0E80               	movlw	128
  2007  0015CC  EC97  F031         	call	_lcd_cmd
  2008  0015D0                     
  2009                           ;main.c: 100:                 lcd_str(greet_str);
  2010  0015D0  0E00               	movlw	low main@greet_str
  2011  0015D2  6E03               	movwf	lcd_str@str^0,c
  2012  0015D4  0E01               	movlw	high main@greet_str
  2013  0015D6  6E04               	movwf	(lcd_str@str+1)^0,c
  2014  0015D8  ECA3  F035         	call	_lcd_str	;wreg free
  2015                           
  2016                           ;main.c: 101:             } else {
  2017  0015DC  EFF9  F00A         	goto	l5687
  2018  0015E0                     l5685:
  2019  0015E0  FFFF               	dw	65535	; assembler added errata NOP
  2020                           
  2021                           ; BSR set to: 1
  2022                           ;main.c: 102:                 serial_tx_char(state_translator_micro_to_fpga(&state));
  2023  0015E2  0EDF               	movlw	low _state
  2024  0015E4  6E01               	movwf	state_translator_micro_to_fpga@state^0,c
  2025  0015E6  0E01               	movlw	high _state
  2026  0015E8  6E02               	movwf	(state_translator_micro_to_fpga@state+1)^0,c
  2027  0015EA  ECE7  F035         	call	_state_translator_micro_to_fpga	;wreg free
  2028  0015EE  EC50  F031         	call	_serial_tx_char
  2029  0015F2                     l5687:
  2030  0015F2  FFFF               	dw	65535	; assembler added errata NOP
  2031                           
  2032                           ;main.c: 105:             state_changed = 0;
  2033  0015F4  0E00               	movlw	0
  2034  0015F6  0101               	movlb	1	; () banked
  2035  0015F8  6FBA               	movwf	_state_changed& (0+255),b
  2036  0015FA                     
  2037                           ; BSR set to: 1
  2038                           ;main.c: 106:             idle_msg_sent = 0;
  2039  0015FA  0E00               	movlw	0
  2040  0015FC  6FB9               	movwf	_idle_msg_sent& (0+255),b
  2041  0015FE                     l5691:
  2042  0015FE  FFFF               	dw	65535	; assembler added errata NOP
  2043                           
  2044                           ; BSR set to: 1
  2045                           ;main.c: 109:         configure_ad_conversion_tank();
  2046  001600  EC41  F031         	call	_configure_ad_conversion_tank	;wreg free
  2047  001604                     
  2048                           ;main.c: 110:         if (get_liters() < 5){
  2049  001604  EC49  F034         	call	_get_liters	;wreg free
  2050  001608  0100               	movlb	0	; () banked
  2051  00160A  BFD5               	btfsc	(?_get_liters+1)& (0+255),7,b
  2052  00160C  EF14  F00B         	goto	u6870
  2053  001610  51D5               	movf	(?_get_liters+1)& (0+255),w,b
  2054  001612  E107               	bnz	u6871
  2055  001614  0E05               	movlw	5
  2056  001616  5DD4               	subwf	?_get_liters& (0+255),w,b
  2057  001618  B0D8               	btfsc	status,0,c
  2058  00161A  EF11  F00B         	goto	u6871
  2059  00161E  EF14  F00B         	goto	u6870
  2060  001622                     u6871:
  2061  001622  FFFF               	dw	65535	; assembler added errata NOP
  2062  001624  EF21  F00B         	goto	l5699
  2063  001628                     u6870:
  2064  001628  FFFF               	dw	65535	; assembler added errata NOP
  2065  00162A                     
  2066                           ; BSR set to: 0
  2067                           ;main.c: 111:             lcd_cmd(0x01);
  2068  00162A  0E01               	movlw	1
  2069  00162C  EC97  F031         	call	_lcd_cmd
  2070                           
  2071                           ;main.c: 112:             lcd_cmd(0x80);
  2072  001630  0E80               	movlw	128
  2073  001632  EC97  F031         	call	_lcd_cmd
  2074  001636                     
  2075                           ;main.c: 113:             lcd_str("Not enough diluting solution, please refill");
  2076  001636  0E0A               	movlw	low STR_11
  2077  001638  6E03               	movwf	lcd_str@str^0,c
  2078  00163A  0E7F               	movlw	high STR_11
  2079  00163C  6E04               	movwf	(lcd_str@str+1)^0,c
  2080  00163E  ECA3  F035         	call	_lcd_str	;wreg free
  2081  001642                     l5699:
  2082  001642  FFFF               	dw	65535	; assembler added errata NOP
  2083                           
  2084                           ;main.c: 117:         if (state == 2){
  2085  001644  0E02               	movlw	2
  2086  001646  0101               	movlb	1	; () banked
  2087  001648  19DF               	xorwf	_state& (0+255),w,b
  2088  00164A  11E0               	iorwf	(_state+1)& (0+255),w,b
  2089  00164C  A4D8               	btfss	status,2,c
  2090  00164E  EF2B  F00B         	goto	u6881
  2091  001652  EF2E  F00B         	goto	u6880
  2092  001656                     u6881:
  2093  001656  FFFF               	dw	65535	; assembler added errata NOP
  2094  001658  EF82  F00B         	goto	l158
  2095  00165C                     u6880:
  2096  00165C  FFFF               	dw	65535	; assembler added errata NOP
  2097  00165E                     
  2098                           ; BSR set to: 1
  2099                           ;main.c: 118:             LATAbits.LATA1 = 1;
  2100  00165E  8289               	bsf	137,1,c	;volatile
  2101  001660                     
  2102                           ; BSR set to: 1
  2103                           ;main.c: 119:             if (move_to_trash && trash_counter < 100){
  2104  001660  51AF               	movf	_move_to_trash& (0+255),w,b
  2105  001662  11B0               	iorwf	(_move_to_trash+1)& (0+255),w,b
  2106  001664  B4D8               	btfsc	status,2,c
  2107  001666  EF37  F00B         	goto	u6891
  2108  00166A  EF3A  F00B         	goto	u6890
  2109  00166E                     u6891:
  2110  00166E  FFFF               	dw	65535	; assembler added errata NOP
  2111  001670  EF5A  F00B         	goto	l5711
  2112  001674                     u6890:
  2113  001674  FFFF               	dw	65535	; assembler added errata NOP
  2114  001676                     
  2115                           ; BSR set to: 1
  2116  001676  BFB2               	btfsc	(_trash_counter+1)& (0+255),7,b
  2117  001678  EF4A  F00B         	goto	u6900
  2118  00167C  51B2               	movf	(_trash_counter+1)& (0+255),w,b
  2119  00167E  E107               	bnz	u6901
  2120  001680  0E64               	movlw	100
  2121  001682  5DB1               	subwf	_trash_counter& (0+255),w,b
  2122  001684  B0D8               	btfsc	status,0,c
  2123  001686  EF47  F00B         	goto	u6901
  2124  00168A  EF4A  F00B         	goto	u6900
  2125  00168E                     u6901:
  2126  00168E  FFFF               	dw	65535	; assembler added errata NOP
  2127  001690  EF5A  F00B         	goto	l5711
  2128  001694                     u6900:
  2129  001694  FFFF               	dw	65535	; assembler added errata NOP
  2130  001696                     
  2131                           ; BSR set to: 1
  2132                           ;main.c: 120:                 _delay((unsigned long)((10)*(4000000/4000.0)));
  2133  001696  0E0A               	movlw	10
  2134  001698  0100               	movlb	0	; () banked
  2135  00169A  6FDD               	movwf	??_main& (0+255),b
  2136  00169C  0EBE               	movlw	190
  2137  00169E                     u7337:
  2138  00169E  FFFF               	dw	65535	; errata NOP
  2139  0016A0  2EE8               	decfsz	wreg,f,c
  2140  0016A2  D7FD               	bra	u7337
  2141  0016A4  2FDD               	decfsz	??_main& (0+255),f,b
  2142  0016A6  D7FB               	bra	u7337
  2143  0016A8  F000               	nop	
  2144  0016AA                     
  2145                           ;main.c: 121:                 trash_counter++;
  2146  0016AA  0101               	movlb	1	; () banked
  2147  0016AC  4BB1               	infsnz	_trash_counter& (0+255),f,b
  2148  0016AE  2BB2               	incf	(_trash_counter+1)& (0+255),f,b
  2149                           
  2150                           ;main.c: 122:             } else if (move_to_trash && trash_counter >= 100){
  2151  0016B0  EFA1  F00A         	goto	l5667
  2152  0016B4                     l5711:
  2153  0016B4  FFFF               	dw	65535	; assembler added errata NOP
  2154                           
  2155                           ; BSR set to: 1
  2156  0016B6  51AF               	movf	_move_to_trash& (0+255),w,b
  2157  0016B8  11B0               	iorwf	(_move_to_trash+1)& (0+255),w,b
  2158  0016BA  B4D8               	btfsc	status,2,c
  2159  0016BC  EF62  F00B         	goto	u6911
  2160  0016C0  EF65  F00B         	goto	u6910
  2161  0016C4                     u6911:
  2162  0016C4  FFFF               	dw	65535	; assembler added errata NOP
  2163  0016C6  EF91  F00B         	goto	l5719
  2164  0016CA                     u6910:
  2165  0016CA  FFFF               	dw	65535	; assembler added errata NOP
  2166  0016CC                     
  2167                           ; BSR set to: 1
  2168  0016CC  BFB2               	btfsc	(_trash_counter+1)& (0+255),7,b
  2169  0016CE  EF72  F00B         	goto	u6921
  2170  0016D2  51B2               	movf	(_trash_counter+1)& (0+255),w,b
  2171  0016D4  E10A               	bnz	u6920
  2172  0016D6  0E64               	movlw	100
  2173  0016D8  5DB1               	subwf	_trash_counter& (0+255),w,b
  2174  0016DA  A0D8               	btfss	status,0,c
  2175  0016DC  EF72  F00B         	goto	u6921
  2176  0016E0  EF75  F00B         	goto	u6920
  2177  0016E4                     u6921:
  2178  0016E4  FFFF               	dw	65535	; assembler added errata NOP
  2179  0016E6  EF91  F00B         	goto	l5719
  2180  0016EA                     u6920:
  2181  0016EA  FFFF               	dw	65535	; assembler added errata NOP
  2182  0016EC                     
  2183                           ; BSR set to: 1
  2184                           ;main.c: 123:                 move_to_trash = 0;
  2185  0016EC  0E00               	movlw	0
  2186  0016EE  6FB0               	movwf	(_move_to_trash+1)& (0+255),b
  2187  0016F0  0E00               	movlw	0
  2188  0016F2  6FAF               	movwf	_move_to_trash& (0+255),b
  2189                           
  2190                           ;main.c: 124:                 state = 0;
  2191  0016F4  0E00               	movlw	0
  2192  0016F6  6FE0               	movwf	(_state+1)& (0+255),b
  2193  0016F8  0E00               	movlw	0
  2194  0016FA  6FDF               	movwf	_state& (0+255),b
  2195                           
  2196                           ;main.c: 125:                 state_changed = 1;
  2197  0016FC  0E01               	movlw	1
  2198  0016FE  6FBA               	movwf	_state_changed& (0+255),b
  2199  001700  EFA1  F00A         	goto	l5667
  2200  001704                     l158:
  2201  001704  FFFF               	dw	65535	; assembler added errata NOP
  2202                           
  2203                           ; BSR set to: 1
  2204                           ;main.c: 128:             LATAbits.LATA1 = 0;
  2205  001706  9289               	bcf	137,1,c	;volatile
  2206  001708                     
  2207                           ; BSR set to: 1
  2208                           ;main.c: 129:             if (state == 0) {
  2209  001708  51DF               	movf	_state& (0+255),w,b
  2210  00170A  11E0               	iorwf	(_state+1)& (0+255),w,b
  2211  00170C  A4D8               	btfss	status,2,c
  2212  00170E  EF8B  F00B         	goto	u6931
  2213  001712  EF8E  F00B         	goto	u6930
  2214  001716                     u6931:
  2215  001716  FFFF               	dw	65535	; assembler added errata NOP
  2216  001718  EF94  F00B         	goto	l5721
  2217  00171C                     u6930:
  2218  00171C  FFFF               	dw	65535	; assembler added errata NOP
  2219  00171E  EFA1  F00A         	goto	l5667
  2220  001722                     l5719:
  2221  001722  FFFF               	dw	65535	; assembler added errata NOP
  2222                           
  2223                           ;main.c: 131:             } else if (state == 1){
  2224  001724  EFA1  F00A         	goto	l5667
  2225  001728                     l5721:
  2226  001728  FFFF               	dw	65535	; assembler added errata NOP
  2227                           
  2228                           ; BSR set to: 1
  2229  00172A  05DF               	decf	_state& (0+255),w,b
  2230  00172C  11E0               	iorwf	(_state+1)& (0+255),w,b
  2231  00172E  A4D8               	btfss	status,2,c
  2232  001730  EF9C  F00B         	goto	u6941
  2233  001734  EF9F  F00B         	goto	u6940
  2234  001738                     u6941:
  2235  001738  FFFF               	dw	65535	; assembler added errata NOP
  2236  00173A  EFAA  F00B         	goto	l5725
  2237  00173E                     u6940:
  2238  00173E  FFFF               	dw	65535	; assembler added errata NOP
  2239  001740                     l5723:
  2240  001740  FFFF               	dw	65535	; assembler added errata NOP
  2241                           
  2242                           ;main.c: 132:                 state = 2;
  2243  001742  0E00               	movlw	0
  2244  001744  0101               	movlb	1	; () banked
  2245  001746  6FE0               	movwf	(_state+1)& (0+255),b
  2246  001748  0E02               	movlw	2
  2247  00174A  6FDF               	movwf	_state& (0+255),b
  2248                           
  2249                           ;main.c: 133:                 state_changed = 1;
  2250  00174C  0E01               	movlw	1
  2251  00174E  6FBA               	movwf	_state_changed& (0+255),b
  2252                           
  2253                           ;main.c: 134:             } else if (state == 3){
  2254  001750  EFA1  F00A         	goto	l5667
  2255  001754                     l5725:
  2256  001754  FFFF               	dw	65535	; assembler added errata NOP
  2257                           
  2258                           ; BSR set to: 1
  2259  001756  0E03               	movlw	3
  2260  001758  19DF               	xorwf	_state& (0+255),w,b
  2261  00175A  11E0               	iorwf	(_state+1)& (0+255),w,b
  2262  00175C  A4D8               	btfss	status,2,c
  2263  00175E  EFB3  F00B         	goto	u6951
  2264  001762  EFB6  F00B         	goto	u6950
  2265  001766                     u6951:
  2266  001766  FFFF               	dw	65535	; assembler added errata NOP
  2267  001768  EFBF  F00B         	goto	l5729
  2268  00176C                     u6950:
  2269  00176C  FFFF               	dw	65535	; assembler added errata NOP
  2270  00176E                     
  2271                           ; BSR set to: 1
  2272                           ;main.c: 135:                 state = 9;
  2273  00176E  0E00               	movlw	0
  2274  001770  6FE0               	movwf	(_state+1)& (0+255),b
  2275  001772  0E09               	movlw	9
  2276  001774  6FDF               	movwf	_state& (0+255),b
  2277                           
  2278                           ;main.c: 136:                 state_changed = 1;
  2279  001776  0E01               	movlw	1
  2280  001778  6FBA               	movwf	_state_changed& (0+255),b
  2281                           
  2282                           ;main.c: 137:             } else if (state == 9){
  2283  00177A  EFA1  F00A         	goto	l5667
  2284  00177E                     l5729:
  2285  00177E  FFFF               	dw	65535	; assembler added errata NOP
  2286                           
  2287                           ; BSR set to: 1
  2288  001780  0E09               	movlw	9
  2289  001782  19DF               	xorwf	_state& (0+255),w,b
  2290  001784  11E0               	iorwf	(_state+1)& (0+255),w,b
  2291  001786  A4D8               	btfss	status,2,c
  2292  001788  EFC8  F00B         	goto	u6961
  2293  00178C  EFCB  F00B         	goto	u6960
  2294  001790                     u6961:
  2295  001790  FFFF               	dw	65535	; assembler added errata NOP
  2296  001792  EF0E  F00C         	goto	l5743
  2297  001796                     u6960:
  2298  001796  FFFF               	dw	65535	; assembler added errata NOP
  2299  001798                     
  2300                           ; BSR set to: 1
  2301                           ;main.c: 138:                 if (timer_done){
  2302  001798  51B7               	movf	_timer_done& (0+255),w,b
  2303  00179A  B4D8               	btfsc	status,2,c
  2304  00179C  EFD2  F00B         	goto	u6971
  2305  0017A0  EFD5  F00B         	goto	u6970
  2306  0017A4                     u6971:
  2307  0017A4  FFFF               	dw	65535	; assembler added errata NOP
  2308  0017A6  EFF5  F00B         	goto	l170
  2309  0017AA                     u6970:
  2310  0017AA  FFFF               	dw	65535	; assembler added errata NOP
  2311  0017AC                     
  2312                           ; BSR set to: 1
  2313                           ;main.c: 139:                     if(check_temperature(get_temperature())){
  2314  0017AC  ECEF  F034         	call	_get_temperature	;wreg free
  2315  0017B0  C0D4  F0D6         	movff	?_get_temperature,check_temperature@temp_to_be_checked
  2316  0017B4  C0D5  F0D7         	movff	?_get_temperature+1,check_temperature@temp_to_be_checked+1
  2317  0017B8  ECB6  F037         	call	_check_temperature	;wreg free
  2318  0017BC  0100               	movlb	0	; () banked
  2319  0017BE  51D6               	movf	?_check_temperature& (0+255),w,b
  2320  0017C0  11D7               	iorwf	(?_check_temperature+1)& (0+255),w,b
  2321  0017C2  B4D8               	btfsc	status,2,c
  2322  0017C4  EFE6  F00B         	goto	u6981
  2323  0017C8  EFE9  F00B         	goto	u6980
  2324  0017CC                     u6981:
  2325  0017CC  FFFF               	dw	65535	; assembler added errata NOP
  2326  0017CE  EF91  F00B         	goto	l5719
  2327  0017D2                     u6980:
  2328  0017D2  FFFF               	dw	65535	; assembler added errata NOP
  2329  0017D4                     
  2330                           ; BSR set to: 0
  2331                           ;main.c: 140:                         state = 2;
  2332  0017D4  0E00               	movlw	0
  2333  0017D6  0101               	movlb	1	; () banked
  2334  0017D8  6FE0               	movwf	(_state+1)& (0+255),b
  2335  0017DA  0E02               	movlw	2
  2336  0017DC  6FDF               	movwf	_state& (0+255),b
  2337                           
  2338                           ;main.c: 141:                         state_changed = 1;
  2339  0017DE  0E01               	movlw	1
  2340  0017E0  6FBA               	movwf	_state_changed& (0+255),b
  2341                           
  2342                           ;main.c: 142:                         timer_done = 0;
  2343  0017E2  0E00               	movlw	0
  2344  0017E4  6FB7               	movwf	_timer_done& (0+255),b
  2345                           
  2346                           ;main.c: 143:                     } else{
  2347  0017E6  EFA1  F00A         	goto	l5667
  2348  0017EA                     l170:
  2349  0017EA  FFFF               	dw	65535	; assembler added errata NOP
  2350                           
  2351                           ; BSR set to: 1
  2352                           ;main.c: 148:                     if (T0CONbits.TMR0ON == 0){
  2353  0017EC  BED5               	btfsc	213,7,c	;volatile
  2354  0017EE  EFFB  F00B         	goto	u6991
  2355  0017F2  EFFE  F00B         	goto	u6990
  2356  0017F6                     u6991:
  2357  0017F6  FFFF               	dw	65535	; assembler added errata NOP
  2358  0017F8  EF05  F00C         	goto	l174
  2359  0017FC                     u6990:
  2360  0017FC  FFFF               	dw	65535	; assembler added errata NOP
  2361  0017FE                     
  2362                           ; BSR set to: 1
  2363                           ;main.c: 149:                         configure_ad_conversion_oven();
  2364  0017FE  EC32  F031         	call	_configure_ad_conversion_oven	;wreg free
  2365  001802                     
  2366                           ;main.c: 150:                         wait_for_zero();
  2367  001802  EC83  F031         	call	_wait_for_zero	;wreg free
  2368  001806                     
  2369                           ;main.c: 151:                         init_timer_0();
  2370  001806  EC60  F031         	call	_init_timer_0	;wreg free
  2371  00180A                     l174:
  2372  00180A  FFFF               	dw	65535	; assembler added errata NOP
  2373                           
  2374                           ;main.c: 153:                     int current_temp = get_temperature();
  2375  00180C  ECEF  F034         	call	_get_temperature	;wreg free
  2376  001810  C0D4  F1A0         	movff	?_get_temperature,main@current_temp
  2377  001814  C0D5  F1A1         	movff	?_get_temperature+1,main@current_temp+1
  2378  001818  EFA1  F00A         	goto	l5667
  2379  00181C                     l5743:
  2380  00181C  FFFF               	dw	65535	; assembler added errata NOP
  2381                           
  2382                           ; BSR set to: 1
  2383  00181E  0E04               	movlw	4
  2384  001820  19DF               	xorwf	_state& (0+255),w,b
  2385  001822  11E0               	iorwf	(_state+1)& (0+255),w,b
  2386  001824  A4D8               	btfss	status,2,c
  2387  001826  EF17  F00C         	goto	u7001
  2388  00182A  EF1A  F00C         	goto	u7000
  2389  00182E                     u7001:
  2390  00182E  FFFF               	dw	65535	; assembler added errata NOP
  2391  001830  EF23  F00C         	goto	l5747
  2392  001834                     u7000:
  2393  001834  FFFF               	dw	65535	; assembler added errata NOP
  2394  001836                     
  2395                           ; BSR set to: 1
  2396                           ;main.c: 157:                 state = 10;
  2397  001836  0E00               	movlw	0
  2398  001838  6FE0               	movwf	(_state+1)& (0+255),b
  2399  00183A  0E0A               	movlw	10
  2400  00183C  6FDF               	movwf	_state& (0+255),b
  2401                           
  2402                           ;main.c: 158:                 state_changed = 1;
  2403  00183E  0E01               	movlw	1
  2404  001840  6FBA               	movwf	_state_changed& (0+255),b
  2405                           
  2406                           ;main.c: 159:             }else if (state == 10){
  2407  001842  EFA1  F00A         	goto	l5667
  2408  001846                     l5747:
  2409  001846  FFFF               	dw	65535	; assembler added errata NOP
  2410                           
  2411                           ; BSR set to: 1
  2412  001848  0E0A               	movlw	10
  2413  00184A  19DF               	xorwf	_state& (0+255),w,b
  2414  00184C  11E0               	iorwf	(_state+1)& (0+255),w,b
  2415  00184E  A4D8               	btfss	status,2,c
  2416  001850  EF2C  F00C         	goto	u7011
  2417  001854  EF2F  F00C         	goto	u7010
  2418  001858                     u7011:
  2419  001858  FFFF               	dw	65535	; assembler added errata NOP
  2420  00185A  EF9A  F00C         	goto	l5765
  2421  00185E                     u7010:
  2422  00185E  FFFF               	dw	65535	; assembler added errata NOP
  2423  001860                     
  2424                           ; BSR set to: 1
  2425                           ;main.c: 160:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  2426  001860  0E03               	movlw	3
  2427  001862  0100               	movlb	0	; () banked
  2428  001864  6FDD               	movwf	??_main& (0+255),b
  2429  001866  0EEB               	movlw	235
  2430  001868                     u7347:
  2431  001868  FFFF               	dw	65535	; errata NOP
  2432  00186A  2EE8               	decfsz	wreg,f,c
  2433  00186C  D7FD               	bra	u7347
  2434  00186E  2FDD               	decfsz	??_main& (0+255),f,b
  2435  001870  D7FB               	bra	u7347
  2436  001872  D000               	nop2	
  2437  001874  F000               	nop	
  2438  001876                     
  2439                           ;main.c: 161:                 if (!grasping_joint_position_reached){
  2440  001876  0101               	movlb	1	; () banked
  2441  001878  51AD               	movf	_grasping_joint_position_reached& (0+255),w,b
  2442  00187A  11AE               	iorwf	(_grasping_joint_position_reached+1)& (0+255),w,b
  2443  00187C  A4D8               	btfss	status,2,c
  2444  00187E  EF43  F00C         	goto	u7021
  2445  001882  EF46  F00C         	goto	u7020
  2446  001886                     u7021:
  2447  001886  FFFF               	dw	65535	; assembler added errata NOP
  2448  001888  EF55  F00C         	goto	l5755
  2449  00188C                     u7020:
  2450  00188C  FFFF               	dw	65535	; assembler added errata NOP
  2451  00188E                     
  2452                           ; BSR set to: 1
  2453                           ;main.c: 162:                     grasping_joint_position_reached = reach_goal(&joint_st
      +                          epper, 50);
  2454  00188E  0ED3               	movlw	low _joint_stepper
  2455  001890  6E09               	movwf	reach_goal@stepper_motor^0,c
  2456  001892  0E01               	movlw	high _joint_stepper
  2457  001894  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  2458  001896  0E00               	movlw	0
  2459  001898  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2460  00189A  0E32               	movlw	50
  2461  00189C  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  2462  00189E  EC28  F035         	call	_reach_goal	;wreg free
  2463  0018A2  C009  F1AD         	movff	?_reach_goal,_grasping_joint_position_reached
  2464  0018A6  C00A  F1AE         	movff	?_reach_goal+1,_grasping_joint_position_reached+1
  2465  0018AA                     l5755:
  2466  0018AA  FFFF               	dw	65535	; assembler added errata NOP
  2467                           
  2468                           ;main.c: 165:                 if (grasping_joint_position_reached && !grasping_ee_positi
      +                          on_reached){
  2469  0018AC  0101               	movlb	1	; () banked
  2470  0018AE  51AD               	movf	_grasping_joint_position_reached& (0+255),w,b
  2471  0018B0  11AE               	iorwf	(_grasping_joint_position_reached+1)& (0+255),w,b
  2472  0018B2  B4D8               	btfsc	status,2,c
  2473  0018B4  EF5E  F00C         	goto	u7031
  2474  0018B8  EF61  F00C         	goto	u7030
  2475  0018BC                     u7031:
  2476  0018BC  FFFF               	dw	65535	; assembler added errata NOP
  2477  0018BE  EF7B  F00C         	goto	l5761
  2478  0018C2                     u7030:
  2479  0018C2  FFFF               	dw	65535	; assembler added errata NOP
  2480  0018C4                     
  2481                           ; BSR set to: 1
  2482  0018C4  51AB               	movf	_grasping_ee_position_reached& (0+255),w,b
  2483  0018C6  11AC               	iorwf	(_grasping_ee_position_reached+1)& (0+255),w,b
  2484  0018C8  A4D8               	btfss	status,2,c
  2485  0018CA  EF69  F00C         	goto	u7041
  2486  0018CE  EF6C  F00C         	goto	u7040
  2487  0018D2                     u7041:
  2488  0018D2  FFFF               	dw	65535	; assembler added errata NOP
  2489  0018D4  EF7B  F00C         	goto	l5761
  2490  0018D8                     u7040:
  2491  0018D8  FFFF               	dw	65535	; assembler added errata NOP
  2492  0018DA                     
  2493                           ; BSR set to: 1
  2494                           ;main.c: 166:                     grasping_ee_position_reached = reach_goal(&end_effecto
      +                          r_stepper, 100);
  2495  0018DA  0EC7               	movlw	low _end_effector_stepper
  2496  0018DC  6E09               	movwf	reach_goal@stepper_motor^0,c
  2497  0018DE  0E01               	movlw	high _end_effector_stepper
  2498  0018E0  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  2499  0018E2  0E00               	movlw	0
  2500  0018E4  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2501  0018E6  0E64               	movlw	100
  2502  0018E8  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  2503  0018EA  EC28  F035         	call	_reach_goal	;wreg free
  2504  0018EE  C009  F1AB         	movff	?_reach_goal,_grasping_ee_position_reached
  2505  0018F2  C00A  F1AC         	movff	?_reach_goal+1,_grasping_ee_position_reached+1
  2506  0018F6                     l5761:
  2507  0018F6  FFFF               	dw	65535	; assembler added errata NOP
  2508                           
  2509                           ;main.c: 168:                 if (grasping_joint_position_reached * grasping_ee_position
      +                          _reached){
  2510  0018F8  C1AD  F001         	movff	_grasping_joint_position_reached,___wmul@multiplier
  2511  0018FC  C1AE  F002         	movff	_grasping_joint_position_reached+1,___wmul@multiplier+1
  2512  001900  C1AB  F003         	movff	_grasping_ee_position_reached,___wmul@multiplicand
  2513  001904  C1AC  F004         	movff	_grasping_ee_position_reached+1,___wmul@multiplicand+1
  2514  001908  ECC1  F031         	call	___wmul	;wreg free
  2515  00190C  5001               	movf	?___wmul^0,w,c
  2516  00190E  1002               	iorwf	(?___wmul+1)^0,w,c
  2517  001910  B4D8               	btfsc	status,2,c
  2518  001912  EF8D  F00C         	goto	u7051
  2519  001916  EF90  F00C         	goto	u7050
  2520  00191A                     u7051:
  2521  00191A  FFFF               	dw	65535	; assembler added errata NOP
  2522  00191C  EFA1  F00A         	goto	l5667
  2523  001920                     u7050:
  2524  001920  FFFF               	dw	65535	; assembler added errata NOP
  2525  001922                     
  2526                           ;main.c: 169:                     state = 5;
  2527  001922  0E00               	movlw	0
  2528  001924  0101               	movlb	1	; () banked
  2529  001926  6FE0               	movwf	(_state+1)& (0+255),b
  2530  001928  0E05               	movlw	5
  2531  00192A  6FDF               	movwf	_state& (0+255),b
  2532                           
  2533                           ;main.c: 170:                     state_changed = 1;
  2534  00192C  0E01               	movlw	1
  2535  00192E  6FBA               	movwf	_state_changed& (0+255),b
  2536  001930  EFA1  F00A         	goto	l5667
  2537  001934                     l5765:
  2538  001934  FFFF               	dw	65535	; assembler added errata NOP
  2539                           
  2540                           ; BSR set to: 1
  2541  001936  0E05               	movlw	5
  2542  001938  19DF               	xorwf	_state& (0+255),w,b
  2543  00193A  11E0               	iorwf	(_state+1)& (0+255),w,b
  2544  00193C  A4D8               	btfss	status,2,c
  2545  00193E  EFA3  F00C         	goto	u7061
  2546  001942  EFA6  F00C         	goto	u7060
  2547  001946                     u7061:
  2548  001946  FFFF               	dw	65535	; assembler added errata NOP
  2549  001948  EF16  F00D         	goto	l5789
  2550  00194C                     u7060:
  2551  00194C  FFFF               	dw	65535	; assembler added errata NOP
  2552  00194E                     
  2553                           ; BSR set to: 1
  2554                           ;main.c: 173:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  2555  00194E  0E03               	movlw	3
  2556  001950  0100               	movlb	0	; () banked
  2557  001952  6FDD               	movwf	??_main& (0+255),b
  2558  001954  0EEB               	movlw	235
  2559  001956                     u7357:
  2560  001956  FFFF               	dw	65535	; errata NOP
  2561  001958  2EE8               	decfsz	wreg,f,c
  2562  00195A  D7FD               	bra	u7357
  2563  00195C  2FDD               	decfsz	??_main& (0+255),f,b
  2564  00195E  D7FB               	bra	u7357
  2565  001960  D000               	nop2	
  2566  001962  F000               	nop	
  2567  001964                     
  2568                           ;main.c: 174:                 if (reach_goal(&joint_stepper, 100)) {
  2569  001964  0ED3               	movlw	low _joint_stepper
  2570  001966  6E09               	movwf	reach_goal@stepper_motor^0,c
  2571  001968  0E01               	movlw	high _joint_stepper
  2572  00196A  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  2573  00196C  0E00               	movlw	0
  2574  00196E  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2575  001970  0E64               	movlw	100
  2576  001972  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  2577  001974  EC28  F035         	call	_reach_goal	;wreg free
  2578  001978  5009               	movf	?_reach_goal^0,w,c
  2579  00197A  100A               	iorwf	(?_reach_goal+1)^0,w,c
  2580  00197C  B4D8               	btfsc	status,2,c
  2581  00197E  EFC3  F00C         	goto	u7071
  2582  001982  EFC6  F00C         	goto	u7070
  2583  001986                     u7071:
  2584  001986  FFFF               	dw	65535	; assembler added errata NOP
  2585  001988  EFD0  F00C         	goto	l5775
  2586  00198C                     u7070:
  2587  00198C  FFFF               	dw	65535	; assembler added errata NOP
  2588  00198E                     
  2589                           ;main.c: 175:                     change_direction(&joint_stepper);
  2590  00198E  0ED3               	movlw	low _joint_stepper
  2591  001990  6E01               	movwf	change_direction@stepper_motor^0,c
  2592  001992  0E01               	movlw	high _joint_stepper
  2593  001994  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2594  001996  EC06  F032         	call	_change_direction	;wreg free
  2595  00199A                     
  2596                           ;main.c: 176:                     mix_counter++;
  2597  00199A  0101               	movlb	1	; () banked
  2598  00199C  4BB5               	infsnz	_mix_counter& (0+255),f,b
  2599  00199E  2BB6               	incf	(_mix_counter+1)& (0+255),f,b
  2600  0019A0                     l5775:
  2601  0019A0  FFFF               	dw	65535	; assembler added errata NOP
  2602                           
  2603                           ;main.c: 179:                 if (mix_counter == 20 && !dilution_done){
  2604  0019A2  0E14               	movlw	20
  2605  0019A4  0101               	movlb	1	; () banked
  2606  0019A6  19B5               	xorwf	_mix_counter& (0+255),w,b
  2607  0019A8  11B6               	iorwf	(_mix_counter+1)& (0+255),w,b
  2608  0019AA  A4D8               	btfss	status,2,c
  2609  0019AC  EFDA  F00C         	goto	u7081
  2610  0019B0  EFDD  F00C         	goto	u7080
  2611  0019B4                     u7081:
  2612  0019B4  FFFF               	dw	65535	; assembler added errata NOP
  2613  0019B6  EFEF  F00C         	goto	l5781
  2614  0019BA                     u7080:
  2615  0019BA  FFFF               	dw	65535	; assembler added errata NOP
  2616  0019BC                     
  2617                           ; BSR set to: 1
  2618  0019BC  51B3               	movf	_dilution_done& (0+255),w,b
  2619  0019BE  11B4               	iorwf	(_dilution_done+1)& (0+255),w,b
  2620  0019C0  A4D8               	btfss	status,2,c
  2621  0019C2  EFE5  F00C         	goto	u7091
  2622  0019C6  EFE8  F00C         	goto	u7090
  2623  0019CA                     u7091:
  2624  0019CA  FFFF               	dw	65535	; assembler added errata NOP
  2625  0019CC  EFEF  F00C         	goto	l5781
  2626  0019D0                     u7090:
  2627  0019D0  FFFF               	dw	65535	; assembler added errata NOP
  2628  0019D2                     
  2629                           ; BSR set to: 1
  2630                           ;main.c: 180:                     state = 15;
  2631  0019D2  0E00               	movlw	0
  2632  0019D4  6FE0               	movwf	(_state+1)& (0+255),b
  2633  0019D6  0E0F               	movlw	15
  2634  0019D8  6FDF               	movwf	_state& (0+255),b
  2635                           
  2636                           ;main.c: 181:                 } else if (mix_counter == 40) {
  2637  0019DA  EFA1  F00A         	goto	l5667
  2638  0019DE                     l5781:
  2639  0019DE  FFFF               	dw	65535	; assembler added errata NOP
  2640                           
  2641                           ; BSR set to: 1
  2642  0019E0  0E28               	movlw	40
  2643  0019E2  19B5               	xorwf	_mix_counter& (0+255),w,b
  2644  0019E4  11B6               	iorwf	(_mix_counter+1)& (0+255),w,b
  2645  0019E6  A4D8               	btfss	status,2,c
  2646  0019E8  EFF8  F00C         	goto	u7101
  2647  0019EC  EFFB  F00C         	goto	u7100
  2648  0019F0                     u7101:
  2649  0019F0  FFFF               	dw	65535	; assembler added errata NOP
  2650  0019F2  EF91  F00B         	goto	l5719
  2651  0019F6                     u7100:
  2652  0019F6  FFFF               	dw	65535	; assembler added errata NOP
  2653  0019F8                     
  2654                           ; BSR set to: 1
  2655                           ;main.c: 182:                     dilution_done = 0;
  2656  0019F8  0E00               	movlw	0
  2657  0019FA  6FB4               	movwf	(_dilution_done+1)& (0+255),b
  2658  0019FC  0E00               	movlw	0
  2659  0019FE  6FB3               	movwf	_dilution_done& (0+255),b
  2660                           
  2661                           ;main.c: 183:                     state = 6;
  2662  001A00  0E00               	movlw	0
  2663  001A02  6FE0               	movwf	(_state+1)& (0+255),b
  2664  001A04  0E06               	movlw	6
  2665  001A06  6FDF               	movwf	_state& (0+255),b
  2666                           
  2667                           ;main.c: 184:                     mix_counter = 0;
  2668  001A08  0E00               	movlw	0
  2669  001A0A  6FB6               	movwf	(_mix_counter+1)& (0+255),b
  2670  001A0C  0E00               	movlw	0
  2671  001A0E  6FB5               	movwf	_mix_counter& (0+255),b
  2672  001A10                     
  2673                           ; BSR set to: 1
  2674                           ;main.c: 186:                     change_direction(&joint_stepper);
  2675  001A10  0ED3               	movlw	low _joint_stepper
  2676  001A12  6E01               	movwf	change_direction@stepper_motor^0,c
  2677  001A14  0E01               	movlw	high _joint_stepper
  2678  001A16  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2679  001A18  EC06  F032         	call	_change_direction	;wreg free
  2680  001A1C                     
  2681                           ;main.c: 187:                     change_direction(&end_effector_stepper);
  2682  001A1C  0EC7               	movlw	low _end_effector_stepper
  2683  001A1E  6E01               	movwf	change_direction@stepper_motor^0,c
  2684  001A20  0E01               	movlw	high _end_effector_stepper
  2685  001A22  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2686  001A24  EC06  F032         	call	_change_direction	;wreg free
  2687  001A28  EFA1  F00A         	goto	l5667
  2688  001A2C                     l5789:
  2689  001A2C  FFFF               	dw	65535	; assembler added errata NOP
  2690                           
  2691                           ; BSR set to: 1
  2692  001A2E  0E06               	movlw	6
  2693  001A30  19DF               	xorwf	_state& (0+255),w,b
  2694  001A32  11E0               	iorwf	(_state+1)& (0+255),w,b
  2695  001A34  A4D8               	btfss	status,2,c
  2696  001A36  EF1F  F00D         	goto	u7111
  2697  001A3A  EF22  F00D         	goto	u7110
  2698  001A3E                     u7111:
  2699  001A3E  FFFF               	dw	65535	; assembler added errata NOP
  2700  001A40  EF86  F00D         	goto	l5807
  2701  001A44                     u7110:
  2702  001A44  FFFF               	dw	65535	; assembler added errata NOP
  2703  001A46                     
  2704                           ; BSR set to: 1
  2705                           ;main.c: 190:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  2706  001A46  0E03               	movlw	3
  2707  001A48  0100               	movlb	0	; () banked
  2708  001A4A  6FDD               	movwf	??_main& (0+255),b
  2709  001A4C  0EEB               	movlw	235
  2710  001A4E                     u7367:
  2711  001A4E  FFFF               	dw	65535	; errata NOP
  2712  001A50  2EE8               	decfsz	wreg,f,c
  2713  001A52  D7FD               	bra	u7367
  2714  001A54  2FDD               	decfsz	??_main& (0+255),f,b
  2715  001A56  D7FB               	bra	u7367
  2716  001A58  D000               	nop2	
  2717  001A5A  F000               	nop	
  2718  001A5C                     
  2719                           ;main.c: 192:                 if (!end_effector_homed){
  2720  001A5C  0101               	movlb	1	; () banked
  2721  001A5E  51A5               	movf	_end_effector_homed& (0+255),w,b
  2722  001A60  11A6               	iorwf	(_end_effector_homed+1)& (0+255),w,b
  2723  001A62  A4D8               	btfss	status,2,c
  2724  001A64  EF36  F00D         	goto	u7121
  2725  001A68  EF39  F00D         	goto	u7120
  2726  001A6C                     u7121:
  2727  001A6C  FFFF               	dw	65535	; assembler added errata NOP
  2728  001A6E  EF48  F00D         	goto	l5797
  2729  001A72                     u7120:
  2730  001A72  FFFF               	dw	65535	; assembler added errata NOP
  2731  001A74                     
  2732                           ; BSR set to: 1
  2733                           ;main.c: 193:                     end_effector_homed = reach_goal(&end_effector_stepper,
      +                           100);
  2734  001A74  0EC7               	movlw	low _end_effector_stepper
  2735  001A76  6E09               	movwf	reach_goal@stepper_motor^0,c
  2736  001A78  0E01               	movlw	high _end_effector_stepper
  2737  001A7A  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  2738  001A7C  0E00               	movlw	0
  2739  001A7E  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2740  001A80  0E64               	movlw	100
  2741  001A82  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  2742  001A84  EC28  F035         	call	_reach_goal	;wreg free
  2743  001A88  C009  F1A5         	movff	?_reach_goal,_end_effector_homed
  2744  001A8C  C00A  F1A6         	movff	?_reach_goal+1,_end_effector_homed+1
  2745  001A90                     l5797:
  2746  001A90  FFFF               	dw	65535	; assembler added errata NOP
  2747                           
  2748                           ;main.c: 196:                 if (end_effector_homed && !joint_homed){
  2749  001A92  0101               	movlb	1	; () banked
  2750  001A94  51A5               	movf	_end_effector_homed& (0+255),w,b
  2751  001A96  11A6               	iorwf	(_end_effector_homed+1)& (0+255),w,b
  2752  001A98  B4D8               	btfsc	status,2,c
  2753  001A9A  EF51  F00D         	goto	u7131
  2754  001A9E  EF54  F00D         	goto	u7130
  2755  001AA2                     u7131:
  2756  001AA2  FFFF               	dw	65535	; assembler added errata NOP
  2757  001AA4  EF6E  F00D         	goto	l5803
  2758  001AA8                     u7130:
  2759  001AA8  FFFF               	dw	65535	; assembler added errata NOP
  2760  001AAA                     
  2761                           ; BSR set to: 1
  2762  001AAA  51A7               	movf	_joint_homed& (0+255),w,b
  2763  001AAC  11A8               	iorwf	(_joint_homed+1)& (0+255),w,b
  2764  001AAE  A4D8               	btfss	status,2,c
  2765  001AB0  EF5C  F00D         	goto	u7141
  2766  001AB4  EF5F  F00D         	goto	u7140
  2767  001AB8                     u7141:
  2768  001AB8  FFFF               	dw	65535	; assembler added errata NOP
  2769  001ABA  EF6E  F00D         	goto	l5803
  2770  001ABE                     u7140:
  2771  001ABE  FFFF               	dw	65535	; assembler added errata NOP
  2772  001AC0                     
  2773                           ; BSR set to: 1
  2774                           ;main.c: 197:                     joint_homed = reach_goal(&joint_stepper, 50);
  2775  001AC0  0ED3               	movlw	low _joint_stepper
  2776  001AC2  6E09               	movwf	reach_goal@stepper_motor^0,c
  2777  001AC4  0E01               	movlw	high _joint_stepper
  2778  001AC6  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  2779  001AC8  0E00               	movlw	0
  2780  001ACA  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2781  001ACC  0E32               	movlw	50
  2782  001ACE  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  2783  001AD0  EC28  F035         	call	_reach_goal	;wreg free
  2784  001AD4  C009  F1A7         	movff	?_reach_goal,_joint_homed
  2785  001AD8  C00A  F1A8         	movff	?_reach_goal+1,_joint_homed+1
  2786  001ADC                     l5803:
  2787  001ADC  FFFF               	dw	65535	; assembler added errata NOP
  2788                           
  2789                           ;main.c: 200:                 if (end_effector_homed * joint_homed){
  2790  001ADE  C1A5  F001         	movff	_end_effector_homed,___wmul@multiplier
  2791  001AE2  C1A6  F002         	movff	_end_effector_homed+1,___wmul@multiplier+1
  2792  001AE6  C1A7  F003         	movff	_joint_homed,___wmul@multiplicand
  2793  001AEA  C1A8  F004         	movff	_joint_homed+1,___wmul@multiplicand+1
  2794  001AEE  ECC1  F031         	call	___wmul	;wreg free
  2795  001AF2  5001               	movf	?___wmul^0,w,c
  2796  001AF4  1002               	iorwf	(?___wmul+1)^0,w,c
  2797  001AF6  B4D8               	btfsc	status,2,c
  2798  001AF8  EF80  F00D         	goto	u7151
  2799  001AFC  EF83  F00D         	goto	u7150
  2800  001B00                     u7151:
  2801  001B00  FFFF               	dw	65535	; assembler added errata NOP
  2802  001B02  EFA1  F00A         	goto	l5667
  2803  001B06                     u7150:
  2804  001B06  FFFF               	dw	65535	; assembler added errata NOP
  2805  001B08  EFA0  F00B         	goto	l5723
  2806  001B0C                     l5807:
  2807  001B0C  FFFF               	dw	65535	; assembler added errata NOP
  2808                           
  2809                           ; BSR set to: 1
  2810  001B0E  0E0F               	movlw	15
  2811  001B10  19DF               	xorwf	_state& (0+255),w,b
  2812  001B12  11E0               	iorwf	(_state+1)& (0+255),w,b
  2813  001B14  A4D8               	btfss	status,2,c
  2814  001B16  EF8F  F00D         	goto	u7161
  2815  001B1A  EF92  F00D         	goto	u7160
  2816  001B1E                     u7161:
  2817  001B1E  FFFF               	dw	65535	; assembler added errata NOP
  2818  001B20  EF40  F00E         	goto	l5841
  2819  001B24                     u7160:
  2820  001B24  FFFF               	dw	65535	; assembler added errata NOP
  2821  001B26                     
  2822                           ; BSR set to: 1
  2823                           ;main.c: 205:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  2824  001B26  0E03               	movlw	3
  2825  001B28  0100               	movlb	0	; () banked
  2826  001B2A  6FDD               	movwf	??_main& (0+255),b
  2827  001B2C  0EEB               	movlw	235
  2828  001B2E                     u7377:
  2829  001B2E  FFFF               	dw	65535	; errata NOP
  2830  001B30  2EE8               	decfsz	wreg,f,c
  2831  001B32  D7FD               	bra	u7377
  2832  001B34  2FDD               	decfsz	??_main& (0+255),f,b
  2833  001B36  D7FB               	bra	u7377
  2834  001B38  D000               	nop2	
  2835  001B3A  F000               	nop	
  2836  001B3C                     
  2837                           ;main.c: 206:                 if (!diluting_position_reached){
  2838  001B3C  0101               	movlb	1	; () banked
  2839  001B3E  51A9               	movf	_diluting_position_reached& (0+255),w,b
  2840  001B40  11AA               	iorwf	(_diluting_position_reached+1)& (0+255),w,b
  2841  001B42  A4D8               	btfss	status,2,c
  2842  001B44  EFA6  F00D         	goto	u7171
  2843  001B48  EFA9  F00D         	goto	u7170
  2844  001B4C                     u7171:
  2845  001B4C  FFFF               	dw	65535	; assembler added errata NOP
  2846  001B4E  EFBA  F00D         	goto	l5815
  2847  001B52                     u7170:
  2848  001B52  FFFF               	dw	65535	; assembler added errata NOP
  2849  001B54                     
  2850                           ; BSR set to: 1
  2851                           ;main.c: 207:                     diluting_position_reached = reach_goal(&joint_dilutor_
      +                          stepper, 200);
  2852  001B54  0EBB               	movlw	low _joint_dilutor_stepper
  2853  001B56  6E09               	movwf	reach_goal@stepper_motor^0,c
  2854  001B58  0E01               	movlw	high _joint_dilutor_stepper
  2855  001B5A  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  2856  001B5C  0E00               	movlw	0
  2857  001B5E  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2858  001B60  0EC8               	movlw	200
  2859  001B62  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  2860  001B64  EC28  F035         	call	_reach_goal	;wreg free
  2861  001B68  C009  F1A9         	movff	?_reach_goal,_diluting_position_reached
  2862  001B6C  C00A  F1AA         	movff	?_reach_goal+1,_diluting_position_reached+1
  2863                           
  2864                           ;main.c: 208:                 } else if (!dilution_done && diluting_position_reached){
  2865  001B70  EFA1  F00A         	goto	l5667
  2866  001B74                     l5815:
  2867  001B74  FFFF               	dw	65535	; assembler added errata NOP
  2868                           
  2869                           ; BSR set to: 1
  2870  001B76  51B3               	movf	_dilution_done& (0+255),w,b
  2871  001B78  11B4               	iorwf	(_dilution_done+1)& (0+255),w,b
  2872  001B7A  A4D8               	btfss	status,2,c
  2873  001B7C  EFC2  F00D         	goto	u7181
  2874  001B80  EFC5  F00D         	goto	u7180
  2875  001B84                     u7181:
  2876  001B84  FFFF               	dw	65535	; assembler added errata NOP
  2877  001B86  EFF8  F00D         	goto	l5829
  2878  001B8A                     u7180:
  2879  001B8A  FFFF               	dw	65535	; assembler added errata NOP
  2880  001B8C                     
  2881                           ; BSR set to: 1
  2882  001B8C  51A9               	movf	_diluting_position_reached& (0+255),w,b
  2883  001B8E  11AA               	iorwf	(_diluting_position_reached+1)& (0+255),w,b
  2884  001B90  B4D8               	btfsc	status,2,c
  2885  001B92  EFCD  F00D         	goto	u7191
  2886  001B96  EFD0  F00D         	goto	u7190
  2887  001B9A                     u7191:
  2888  001B9A  FFFF               	dw	65535	; assembler added errata NOP
  2889  001B9C  EFF8  F00D         	goto	l5829
  2890  001BA0                     u7190:
  2891  001BA0  FFFF               	dw	65535	; assembler added errata NOP
  2892  001BA2                     
  2893                           ; BSR set to: 1
  2894                           ;main.c: 210:                     lcd_cmd(0x01);
  2895  001BA2  0E01               	movlw	1
  2896  001BA4  EC97  F031         	call	_lcd_cmd
  2897                           
  2898                           ;main.c: 211:                     lcd_cmd(0x80);
  2899  001BA8  0E80               	movlw	128
  2900  001BAA  EC97  F031         	call	_lcd_cmd
  2901  001BAE                     
  2902                           ;main.c: 212:                     lcd_str("Dilution ongoing");
  2903  001BAE  0E98               	movlw	low STR_12
  2904  001BB0  6E03               	movwf	lcd_str@str^0,c
  2905  001BB2  0E7F               	movlw	high STR_12
  2906  001BB4  6E04               	movwf	(lcd_str@str+1)^0,c
  2907  001BB6  ECA3  F035         	call	_lcd_str	;wreg free
  2908  001BBA                     
  2909                           ;main.c: 213:                     _delay((unsigned long)((1000)*(4000000/4000.0)));
  2910  001BBA  0E04               	movlw	4
  2911  001BBC  0100               	movlb	0	; () banked
  2912  001BBE  6FDE               	movwf	(??_main+1)& (0+255),b
  2913  001BC0  0ECF               	movlw	207
  2914  001BC2  6FDD               	movwf	??_main& (0+255),b
  2915  001BC4  0EA5               	movlw	165
  2916  001BC6                     u7387:
  2917  001BC6  FFFF               	dw	65535	; errata NOP
  2918  001BC8  2EE8               	decfsz	wreg,f,c
  2919  001BCA  D7FD               	bra	u7387
  2920  001BCC  2FDD               	decfsz	??_main& (0+255),f,b
  2921  001BCE  D7FB               	bra	u7387
  2922  001BD0  2FDE               	decfsz	(??_main+1)& (0+255),f,b
  2923  001BD2  D7F9               	bra	u7387
  2924  001BD4  F000               	nop	
  2925  001BD6                     
  2926                           ;main.c: 214:                     dilution_done = 1;
  2927  001BD6  0E00               	movlw	0
  2928  001BD8  0101               	movlb	1	; () banked
  2929  001BDA  6FB4               	movwf	(_dilution_done+1)& (0+255),b
  2930  001BDC  0E01               	movlw	1
  2931  001BDE  6FB3               	movwf	_dilution_done& (0+255),b
  2932  001BE0                     
  2933                           ; BSR set to: 1
  2934                           ;main.c: 215:                     change_direction(&joint_dilutor_stepper);
  2935  001BE0  0EBB               	movlw	low _joint_dilutor_stepper
  2936  001BE2  6E01               	movwf	change_direction@stepper_motor^0,c
  2937  001BE4  0E01               	movlw	high _joint_dilutor_stepper
  2938  001BE6  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2939  001BE8  EC06  F032         	call	_change_direction	;wreg free
  2940                           
  2941                           ;main.c: 216:                 } else if (dilution_done && !joint_dilutor_homed){
  2942  001BEC  EFA1  F00A         	goto	l5667
  2943  001BF0                     l5829:
  2944  001BF0  FFFF               	dw	65535	; assembler added errata NOP
  2945                           
  2946                           ; BSR set to: 1
  2947  001BF2  51B3               	movf	_dilution_done& (0+255),w,b
  2948  001BF4  11B4               	iorwf	(_dilution_done+1)& (0+255),w,b
  2949  001BF6  B4D8               	btfsc	status,2,c
  2950  001BF8  EF00  F00E         	goto	u7201
  2951  001BFC  EF03  F00E         	goto	u7200
  2952  001C00                     u7201:
  2953  001C00  FFFF               	dw	65535	; assembler added errata NOP
  2954  001C02  EF1F  F00E         	goto	l5835
  2955  001C06                     u7200:
  2956  001C06  FFFF               	dw	65535	; assembler added errata NOP
  2957  001C08                     
  2958                           ; BSR set to: 1
  2959  001C08  51A3               	movf	_joint_dilutor_homed& (0+255),w,b
  2960  001C0A  11A4               	iorwf	(_joint_dilutor_homed+1)& (0+255),w,b
  2961  001C0C  A4D8               	btfss	status,2,c
  2962  001C0E  EF0B  F00E         	goto	u7211
  2963  001C12  EF0E  F00E         	goto	u7210
  2964  001C16                     u7211:
  2965  001C16  FFFF               	dw	65535	; assembler added errata NOP
  2966  001C18  EF1F  F00E         	goto	l5835
  2967  001C1C                     u7210:
  2968  001C1C  FFFF               	dw	65535	; assembler added errata NOP
  2969  001C1E                     
  2970                           ; BSR set to: 1
  2971                           ;main.c: 217:                     joint_dilutor_homed = reach_goal(&joint_dilutor_steppe
      +                          r, 200);
  2972  001C1E  0EBB               	movlw	low _joint_dilutor_stepper
  2973  001C20  6E09               	movwf	reach_goal@stepper_motor^0,c
  2974  001C22  0E01               	movlw	high _joint_dilutor_stepper
  2975  001C24  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  2976  001C26  0E00               	movlw	0
  2977  001C28  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2978  001C2A  0EC8               	movlw	200
  2979  001C2C  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  2980  001C2E  EC28  F035         	call	_reach_goal	;wreg free
  2981  001C32  C009  F1A3         	movff	?_reach_goal,_joint_dilutor_homed
  2982  001C36  C00A  F1A4         	movff	?_reach_goal+1,_joint_dilutor_homed+1
  2983                           
  2984                           ;main.c: 218:                 } else if (dilution_done && joint_dilutor_homed){
  2985  001C3A  EFA1  F00A         	goto	l5667
  2986  001C3E                     l5835:
  2987  001C3E  FFFF               	dw	65535	; assembler added errata NOP
  2988                           
  2989                           ; BSR set to: 1
  2990  001C40  51B3               	movf	_dilution_done& (0+255),w,b
  2991  001C42  11B4               	iorwf	(_dilution_done+1)& (0+255),w,b
  2992  001C44  B4D8               	btfsc	status,2,c
  2993  001C46  EF27  F00E         	goto	u7221
  2994  001C4A  EF2A  F00E         	goto	u7220
  2995  001C4E                     u7221:
  2996  001C4E  FFFF               	dw	65535	; assembler added errata NOP
  2997  001C50  EF91  F00B         	goto	l5719
  2998  001C54                     u7220:
  2999  001C54  FFFF               	dw	65535	; assembler added errata NOP
  3000  001C56                     
  3001                           ; BSR set to: 1
  3002  001C56  51A3               	movf	_joint_dilutor_homed& (0+255),w,b
  3003  001C58  11A4               	iorwf	(_joint_dilutor_homed+1)& (0+255),w,b
  3004  001C5A  B4D8               	btfsc	status,2,c
  3005  001C5C  EF32  F00E         	goto	u7231
  3006  001C60  EF35  F00E         	goto	u7230
  3007  001C64                     u7231:
  3008  001C64  FFFF               	dw	65535	; assembler added errata NOP
  3009  001C66  EF91  F00B         	goto	l5719
  3010  001C6A                     u7230:
  3011  001C6A  FFFF               	dw	65535	; assembler added errata NOP
  3012  001C6C                     
  3013                           ; BSR set to: 1
  3014                           ;main.c: 219:                     state = 5;
  3015  001C6C  0E00               	movlw	0
  3016  001C6E  6FE0               	movwf	(_state+1)& (0+255),b
  3017  001C70  0E05               	movlw	5
  3018  001C72  6FDF               	movwf	_state& (0+255),b
  3019                           
  3020                           ;main.c: 220:                     diluting_position_reached = 0;
  3021  001C74  0E00               	movlw	0
  3022  001C76  6FAA               	movwf	(_diluting_position_reached+1)& (0+255),b
  3023  001C78  0E00               	movlw	0
  3024  001C7A  6FA9               	movwf	_diluting_position_reached& (0+255),b
  3025  001C7C  EFA1  F00A         	goto	l5667
  3026  001C80                     l5841:
  3027  001C80  FFFF               	dw	65535	; assembler added errata NOP
  3028                           
  3029                           ; BSR set to: 1
  3030  001C82  0E07               	movlw	7
  3031  001C84  19DF               	xorwf	_state& (0+255),w,b
  3032  001C86  11E0               	iorwf	(_state+1)& (0+255),w,b
  3033  001C88  A4D8               	btfss	status,2,c
  3034  001C8A  EF49  F00E         	goto	u7241
  3035  001C8E  EF4C  F00E         	goto	u7240
  3036  001C92                     u7241:
  3037  001C92  FFFF               	dw	65535	; assembler added errata NOP
  3038  001C94  EF55  F00E         	goto	l5845
  3039  001C98                     u7240:
  3040  001C98  FFFF               	dw	65535	; assembler added errata NOP
  3041  001C9A                     
  3042                           ; BSR set to: 1
  3043                           ;main.c: 224:                 state = 11;
  3044  001C9A  0E00               	movlw	0
  3045  001C9C  6FE0               	movwf	(_state+1)& (0+255),b
  3046  001C9E  0E0B               	movlw	11
  3047  001CA0  6FDF               	movwf	_state& (0+255),b
  3048                           
  3049                           ;main.c: 225:                 state_changed = 1;
  3050  001CA2  0E01               	movlw	1
  3051  001CA4  6FBA               	movwf	_state_changed& (0+255),b
  3052                           
  3053                           ;main.c: 226:             }else if (state == 11){
  3054  001CA6  EFA1  F00A         	goto	l5667
  3055  001CAA                     l5845:
  3056  001CAA  FFFF               	dw	65535	; assembler added errata NOP
  3057                           
  3058                           ; BSR set to: 1
  3059  001CAC  0E0B               	movlw	11
  3060  001CAE  19DF               	xorwf	_state& (0+255),w,b
  3061  001CB0  11E0               	iorwf	(_state+1)& (0+255),w,b
  3062  001CB2  A4D8               	btfss	status,2,c
  3063  001CB4  EF5E  F00E         	goto	u7251
  3064  001CB8  EF61  F00E         	goto	u7250
  3065  001CBC                     u7251:
  3066  001CBC  FFFF               	dw	65535	; assembler added errata NOP
  3067  001CBE  EF96  F00E         	goto	l5859
  3068  001CC2                     u7250:
  3069  001CC2  FFFF               	dw	65535	; assembler added errata NOP
  3070  001CC4                     
  3071                           ; BSR set to: 1
  3072                           ;main.c: 227:                 if (timer_done){
  3073  001CC4  51B7               	movf	_timer_done& (0+255),w,b
  3074  001CC6  B4D8               	btfsc	status,2,c
  3075  001CC8  EF68  F00E         	goto	u7261
  3076  001CCC  EF6B  F00E         	goto	u7260
  3077  001CD0                     u7261:
  3078  001CD0  FFFF               	dw	65535	; assembler added errata NOP
  3079  001CD2  EF88  F00E         	goto	l206
  3080  001CD6                     u7260:
  3081  001CD6  FFFF               	dw	65535	; assembler added errata NOP
  3082  001CD8                     
  3083                           ; BSR set to: 1
  3084                           ;main.c: 228:                     state_changed = 1;
  3085  001CD8  0E01               	movlw	1
  3086  001CDA  6FBA               	movwf	_state_changed& (0+255),b
  3087                           
  3088                           ;main.c: 229:                     state = 2;
  3089  001CDC  0E00               	movlw	0
  3090  001CDE  6FE0               	movwf	(_state+1)& (0+255),b
  3091  001CE0  0E02               	movlw	2
  3092  001CE2  6FDF               	movwf	_state& (0+255),b
  3093                           
  3094                           ;main.c: 230:                     move_to_trash = 1;
  3095  001CE4  0E00               	movlw	0
  3096  001CE6  6FB0               	movwf	(_move_to_trash+1)& (0+255),b
  3097  001CE8  0E01               	movlw	1
  3098  001CEA  6FAF               	movwf	_move_to_trash& (0+255),b
  3099                           
  3100                           ;main.c: 231:                     trash_counter = 0;
  3101  001CEC  0E00               	movlw	0
  3102  001CEE  6FB2               	movwf	(_trash_counter+1)& (0+255),b
  3103  001CF0  0E00               	movlw	0
  3104  001CF2  6FB1               	movwf	_trash_counter& (0+255),b
  3105  001CF4                     
  3106                           ; BSR set to: 1
  3107                           ;main.c: 232:                     lcd_cmd(0x01);
  3108  001CF4  0E01               	movlw	1
  3109  001CF6  EC97  F031         	call	_lcd_cmd
  3110  001CFA                     
  3111                           ;main.c: 233:                     lcd_cmd(0x80);
  3112  001CFA  0E80               	movlw	128
  3113  001CFC  EC97  F031         	call	_lcd_cmd
  3114  001D00                     
  3115                           ;main.c: 234:                     lcd_str("Moved to trash! Restarting from Idle");
  3116  001D00  0E5D               	movlw	low STR_13
  3117  001D02  6E03               	movwf	lcd_str@str^0,c
  3118  001D04  0E7F               	movlw	high STR_13
  3119  001D06  6E04               	movwf	(lcd_str@str+1)^0,c
  3120  001D08  ECA3  F035         	call	_lcd_str	;wreg free
  3121                           
  3122                           ;main.c: 235:                 } else {
  3123  001D0C  EFA1  F00A         	goto	l5667
  3124  001D10                     l206:
  3125  001D10  FFFF               	dw	65535	; assembler added errata NOP
  3126                           
  3127                           ; BSR set to: 1
  3128                           ;main.c: 236:                     if (T0CONbits.TMR0ON == 0){
  3129  001D12  BED5               	btfsc	213,7,c	;volatile
  3130  001D14  EF8E  F00E         	goto	u7271
  3131  001D18  EF91  F00E         	goto	u7270
  3132  001D1C                     u7271:
  3133  001D1C  FFFF               	dw	65535	; assembler added errata NOP
  3134  001D1E  EF91  F00B         	goto	l5719
  3135  001D22                     u7270:
  3136  001D22  FFFF               	dw	65535	; assembler added errata NOP
  3137  001D24                     
  3138                           ; BSR set to: 1
  3139                           ;main.c: 237:                         init_timer_0();
  3140  001D24  EC60  F031         	call	_init_timer_0	;wreg free
  3141  001D28  EFA1  F00A         	goto	l5667
  3142  001D2C                     l5859:
  3143  001D2C  FFFF               	dw	65535	; assembler added errata NOP
  3144                           
  3145                           ; BSR set to: 1
  3146  001D2E  0E0C               	movlw	12
  3147  001D30  19DF               	xorwf	_state& (0+255),w,b
  3148  001D32  11E0               	iorwf	(_state+1)& (0+255),w,b
  3149  001D34  A4D8               	btfss	status,2,c
  3150  001D36  EF9F  F00E         	goto	u7281
  3151  001D3A  EFA2  F00E         	goto	u7280
  3152  001D3E                     u7281:
  3153  001D3E  FFFF               	dw	65535	; assembler added errata NOP
  3154  001D40  EF91  F00B         	goto	l5719
  3155  001D44                     u7280:
  3156  001D44  FFFF               	dw	65535	; assembler added errata NOP
  3157  001D46                     
  3158                           ; BSR set to: 1
  3159                           ;main.c: 242:                 state = 0;
  3160  001D46  0E00               	movlw	0
  3161  001D48  6FE0               	movwf	(_state+1)& (0+255),b
  3162  001D4A  0E00               	movlw	0
  3163  001D4C  6FDF               	movwf	_state& (0+255),b
  3164                           
  3165                           ;main.c: 243:                 state_changed = 1;
  3166  001D4E  0E01               	movlw	1
  3167  001D50  6FBA               	movwf	_state_changed& (0+255),b
  3168  001D52                     
  3169                           ; BSR set to: 1
  3170                           ;main.c: 244:                 T0CONbits.TMR0ON = 0;
  3171  001D52  9ED5               	bcf	213,7,c	;volatile
  3172  001D54  EFA1  F00A         	goto	l5667
  3173  001D58  EF3B  F000         	goto	start
  3174  001D5C                     __end_of_main:
  3175                           	callstack 0
  3176                           
  3177 ;; *************** function _wait_for_zero *****************
  3178 ;; Defined at:
  3179 ;;		line 42 in file "oven.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;		None
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;		None
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  1    wreg      void 
  3186 ;; Registers used:
  3187 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3193 ;;      Params:         0       0       0       0       0       0       0
  3194 ;;      Locals:         0       0       0       0       0       0       0
  3195 ;;      Temps:          0       0       0       0       0       0       0
  3196 ;;      Totals:         0       0       0       0       0       0       0
  3197 ;;Total ram usage:        0 bytes
  3198 ;; Hardware stack levels used:    1
  3199 ;; Hardware stack levels required when called:    3
  3200 ;; This function calls:
  3201 ;;		_get_temperature
  3202 ;; This function is called by:
  3203 ;;		_main
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207                           	psect	text1
  3208  006306                     __ptext1:
  3209                           	callstack 0
  3210  006306                     _wait_for_zero:
  3211                           	callstack 0
  3212  006306  FFFF               	dw	65535	; assembler added errata NOP
  3213  006308                     l415:
  3214  006308  FFFF               	dw	65535	; assembler added errata NOP
  3215  00630A                     
  3216                           ;oven.c: 44:         if (get_temperature() == -55){
  3217  00630A  ECEF  F034         	call	_get_temperature	;wreg free
  3218  00630E  0EC9               	movlw	201
  3219  006310  0100               	movlb	0	; () banked
  3220  006312  19D4               	xorwf	?_get_temperature& (0+255),w,b
  3221  006314  E106               	bnz	u6821
  3222  006316  29D5               	incf	(?_get_temperature+1)& (0+255),w,b
  3223  006318  A4D8               	btfss	status,2,c
  3224  00631A  EF91  F031         	goto	u6821
  3225  00631E  EF94  F031         	goto	u6820
  3226  006322                     u6821:
  3227  006322  FFFF               	dw	65535	; assembler added errata NOP
  3228  006324  EF84  F031         	goto	l415
  3229  006328                     u6820:
  3230  006328  FFFF               	dw	65535	; assembler added errata NOP
  3231  00632A                     
  3232                           ; BSR set to: 0
  3233  00632A  0012               	return		;funcret
  3234  00632C  FFFF               	dw	65535	; errata NOP
  3235  00632E                     __end_of_wait_for_zero:
  3236                           	callstack 0
  3237                           
  3238 ;; *************** function _get_temperature *****************
  3239 ;; Defined at:
  3240 ;;		line 30 in file "oven.c"
  3241 ;; Parameters:    Size  Location     Type
  3242 ;;		None
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;		None
  3245 ;; Return value:  Size  Location     Type
  3246 ;;                  2   28[BANK0 ] int 
  3247 ;; Registers used:
  3248 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3249 ;; Tracked objects:
  3250 ;;		On entry : 0/0
  3251 ;;		On exit  : 0/0
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3254 ;;      Params:         0       2       0       0       0       0       0
  3255 ;;      Locals:         0       0       0       0       0       0       0
  3256 ;;      Temps:          0       0       0       0       0       0       0
  3257 ;;      Totals:         0       2       0       0       0       0       0
  3258 ;;Total ram usage:        2 bytes
  3259 ;; Hardware stack levels used:    1
  3260 ;; Hardware stack levels required when called:    2
  3261 ;; This function calls:
  3262 ;;		___flmul
  3263 ;;		___fltol
  3264 ;;		___xxtofl
  3265 ;; This function is called by:
  3266 ;;		_main
  3267 ;;		_wait_for_zero
  3268 ;; This function uses a non-reentrant model
  3269 ;;
  3270                           
  3271                           	psect	text2
  3272  0069DE                     __ptext2:
  3273                           	callstack 0
  3274  0069DE                     _get_temperature:
  3275                           	callstack 0
  3276  0069DE  FFFF               	dw	65535	; assembler added errata NOP
  3277  0069E0                     
  3278                           ;oven.c: 31:     ADCON0bits.GO = 1;
  3279  0069E0  84C2               	bsf	194,2,c	;volatile
  3280  0069E2                     l403:
  3281  0069E2  FFFF               	dw	65535	; assembler added errata NOP
  3282  0069E4  B4C2               	btfsc	194,2,c	;volatile
  3283  0069E6  EFF7  F034         	goto	u6471
  3284  0069EA  EFFA  F034         	goto	u6470
  3285  0069EE                     u6471:
  3286  0069EE  FFFF               	dw	65535	; assembler added errata NOP
  3287  0069F0  EFF1  F034         	goto	l403
  3288  0069F4                     u6470:
  3289  0069F4  FFFF               	dw	65535	; assembler added errata NOP
  3290  0069F6                     
  3291                           ;oven.c: 33:     return (int) (ADRESH * 0.25) + -55;
  3292  0069F6  0E00               	movlw	0
  3293  0069F8  6E31               	movwf	___flmul@a^0,c
  3294  0069FA  0E00               	movlw	0
  3295  0069FC  6E32               	movwf	(___flmul@a+1)^0,c
  3296  0069FE  0E80               	movlw	128
  3297  006A00  6E33               	movwf	(___flmul@a+2)^0,c
  3298  006A02  0E3E               	movlw	62
  3299  006A04  6E34               	movwf	(___flmul@a+3)^0,c
  3300  006A06  50C4               	movf	196,w,c	;volatile
  3301  006A08  6E1F               	movwf	___xxtofl@val^0,c
  3302  006A0A  6A20               	clrf	(___xxtofl@val+1)^0,c
  3303  006A0C  6A21               	clrf	(___xxtofl@val+2)^0,c
  3304  006A0E  6A22               	clrf	(___xxtofl@val+3)^0,c
  3305  006A10  0E01               	movlw	1
  3306  006A12  EC3D  F01D         	call	___xxtofl
  3307  006A16  C01F  F02D         	movff	?___xxtofl,___flmul@b
  3308  006A1A  C020  F02E         	movff	?___xxtofl+1,___flmul@b+1
  3309  006A1E  C021  F02F         	movff	?___xxtofl+2,___flmul@b+2
  3310  006A22  C022  F030         	movff	?___xxtofl+3,___flmul@b+3
  3311  006A26  EC82  F011         	call	___flmul	;wreg free
  3312  006A2A  C02D  F0CA         	movff	?___flmul,___fltol@f1
  3313  006A2E  C02E  F0CB         	movff	?___flmul+1,___fltol@f1+1
  3314  006A32  C02F  F0CC         	movff	?___flmul+2,___fltol@f1+2
  3315  006A36  C030  F0CD         	movff	?___flmul+3,___fltol@f1+3
  3316  006A3A  EC92  F03B         	call	___fltol	;wreg free
  3317  006A3E  0EC9               	movlw	201
  3318  006A40  0100               	movlb	0	; () banked
  3319  006A42  25CA               	addwf	?___fltol& (0+255),w,b
  3320  006A44  6FD4               	movwf	?_get_temperature& (0+255),b
  3321  006A46  0EFF               	movlw	255
  3322  006A48  21CB               	addwfc	(?___fltol+1)& (0+255),w,b
  3323  006A4A  6FD5               	movwf	(?_get_temperature+1)& (0+255),b
  3324  006A4C                     
  3325                           ; BSR set to: 0
  3326  006A4C  0012               	return		;funcret
  3327  006A4E  FFFF               	dw	65535	; errata NOP
  3328  006A50                     __end_of_get_temperature:
  3329                           	callstack 0
  3330                           
  3331 ;; *************** function _state_translator_micro_to_fpga *****************
  3332 ;; Defined at:
  3333 ;;		line 26 in file "utils.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;  state           2    0[COMRAM] PTR int 
  3336 ;;		 -> state(2), 
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;  state_machin    1    4[COMRAM] unsigned char 
  3339 ;; Return value:  Size  Location     Type
  3340 ;;                  1    wreg      unsigned char 
  3341 ;; Registers used:
  3342 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3343 ;; Tracked objects:
  3344 ;;		On entry : 0/0
  3345 ;;		On exit  : 0/0
  3346 ;;		Unchanged: 0/0
  3347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3348 ;;      Params:         2       0       0       0       0       0       0
  3349 ;;      Locals:         1       0       0       0       0       0       0
  3350 ;;      Temps:          2       0       0       0       0       0       0
  3351 ;;      Totals:         5       0       0       0       0       0       0
  3352 ;;Total ram usage:        5 bytes
  3353 ;; Hardware stack levels used:    1
  3354 ;; Hardware stack levels required when called:    1
  3355 ;; This function calls:
  3356 ;;		Nothing
  3357 ;; This function is called by:
  3358 ;;		_main
  3359 ;; This function uses a non-reentrant model
  3360 ;;
  3361                           
  3362                           	psect	text3
  3363  006BCE                     __ptext3:
  3364                           	callstack 0
  3365  006BCE                     _state_translator_micro_to_fpga:
  3366                           	callstack 0
  3367  006BCE  FFFF               	dw	65535	; assembler added errata NOP
  3368  006BD0                     
  3369                           ;utils.c: 27:     unsigned char state_machine_code;;utils.c: 28:     if (*state == 2){
  3370  006BD0  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  3371  006BD4  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  3372  006BD8  0E02               	movlw	2
  3373  006BDA  18DE               	xorwf	postinc2,w,c
  3374  006BDC  10DE               	iorwf	postinc2,w,c
  3375  006BDE  A4D8               	btfss	status,2,c
  3376  006BE0  EFF4  F035         	goto	u6761
  3377  006BE4  EFF7  F035         	goto	u6760
  3378  006BE8                     u6761:
  3379  006BE8  FFFF               	dw	65535	; assembler added errata NOP
  3380  006BEA  EFFC  F035         	goto	l5531
  3381  006BEE                     u6760:
  3382  006BEE  FFFF               	dw	65535	; assembler added errata NOP
  3383  006BF0                     
  3384                           ;utils.c: 29:         state_machine_code = 0x10;
  3385  006BF0  0E10               	movlw	16
  3386  006BF2  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  3387                           
  3388                           ;utils.c: 30:     } else if (*state == 0) {
  3389  006BF4  EF28  F036         	goto	l301
  3390  006BF8                     l5531:
  3391  006BF8  FFFF               	dw	65535	; assembler added errata NOP
  3392  006BFA  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  3393  006BFE  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  3394  006C02  50DE               	movf	postinc2,w,c
  3395  006C04  10DE               	iorwf	postinc2,w,c
  3396  006C06  A4D8               	btfss	status,2,c
  3397  006C08  EF08  F036         	goto	u6771
  3398  006C0C  EF0B  F036         	goto	u6770
  3399  006C10                     u6771:
  3400  006C10  FFFF               	dw	65535	; assembler added errata NOP
  3401  006C12  EF10  F036         	goto	l5535
  3402  006C16                     u6770:
  3403  006C16  FFFF               	dw	65535	; assembler added errata NOP
  3404  006C18                     
  3405                           ;utils.c: 31:         state_machine_code = 0x09;
  3406  006C18  0E09               	movlw	9
  3407  006C1A  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  3408                           
  3409                           ;utils.c: 32:     } else if (*state == 8) {
  3410  006C1C  EF28  F036         	goto	l301
  3411  006C20                     l5535:
  3412  006C20  FFFF               	dw	65535	; assembler added errata NOP
  3413  006C22  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  3414  006C26  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  3415  006C2A  0E08               	movlw	8
  3416  006C2C  18DE               	xorwf	postinc2,w,c
  3417  006C2E  10DE               	iorwf	postinc2,w,c
  3418  006C30  A4D8               	btfss	status,2,c
  3419  006C32  EF1D  F036         	goto	u6781
  3420  006C36  EF20  F036         	goto	u6780
  3421  006C3A                     u6781:
  3422  006C3A  FFFF               	dw	65535	; assembler added errata NOP
  3423  006C3C  EF25  F036         	goto	l5539
  3424  006C40                     u6780:
  3425  006C40  FFFF               	dw	65535	; assembler added errata NOP
  3426  006C42                     
  3427                           ;utils.c: 33:         state_machine_code = 0x40;
  3428  006C42  0E40               	movlw	64
  3429  006C44  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  3430                           
  3431                           ;utils.c: 34:     } else {
  3432  006C46  EF28  F036         	goto	l301
  3433  006C4A                     l5539:
  3434  006C4A  FFFF               	dw	65535	; assembler added errata NOP
  3435                           
  3436                           ;utils.c: 35:         state_machine_code = 0x80;
  3437  006C4C  0E80               	movlw	128
  3438  006C4E  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  3439  006C50                     l301:
  3440  006C50  FFFF               	dw	65535	; assembler added errata NOP
  3441                           
  3442                           ;utils.c: 37:     return state_machine_code;
  3443  006C52  5005               	movf	state_translator_micro_to_fpga@state_machine_code^0,w,c
  3444  006C54  0012               	return		;funcret
  3445  006C56  FFFF               	dw	65535	; errata NOP
  3446  006C58                     __end_of_state_translator_micro_to_fpga:
  3447                           	callstack 0
  3448                           
  3449 ;; *************** function _state_translator_fpga_to_micro *****************
  3450 ;; Defined at:
  3451 ;;		line 2 in file "utils.c"
  3452 ;; Parameters:    Size  Location     Type
  3453 ;;  state_machin    1    wreg     unsigned char 
  3454 ;;  state           2    2[COMRAM] PTR int 
  3455 ;;		 -> state(2), 
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;  state_machin    1    4[COMRAM] unsigned char 
  3458 ;; Return value:  Size  Location     Type
  3459 ;;                  1    wreg      void 
  3460 ;; Registers used:
  3461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3462 ;; Tracked objects:
  3463 ;;		On entry : 0/0
  3464 ;;		On exit  : 0/0
  3465 ;;		Unchanged: 0/0
  3466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3467 ;;      Params:         2       0       0       0       0       0       0
  3468 ;;      Locals:         1       0       0       0       0       0       0
  3469 ;;      Temps:          0       0       0       0       0       0       0
  3470 ;;      Totals:         3       0       0       0       0       0       0
  3471 ;;Total ram usage:        3 bytes
  3472 ;; Hardware stack levels used:    1
  3473 ;; Hardware stack levels required when called:    3
  3474 ;; This function calls:
  3475 ;;		_lcd_dat
  3476 ;; This function is called by:
  3477 ;;		_main
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480                           
  3481                           	psect	text4
  3482  007996                     __ptext4:
  3483                           	callstack 0
  3484  007996                     _state_translator_fpga_to_micro:
  3485                           	callstack 0
  3486  007996  FFFF               	dw	65535	; assembler added errata NOP
  3487                           
  3488                           ;incstack = 0
  3489                           ;state_translator_fpga_to_micro@state_machine_code stored from wreg
  3490  007998  6E05               	movwf	state_translator_fpga_to_micro@state_machine_code^0,c
  3491  00799A                     
  3492                           ;utils.c: 3:     lcd_dat(state_machine_code);
  3493  00799A  5005               	movf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3494  00799C  ECAC  F031         	call	_lcd_dat
  3495  0079A0                     
  3496                           ;utils.c: 4:     if (state_machine_code == 0x01){
  3497  0079A0  0405               	decf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3498  0079A2  A4D8               	btfss	status,2,c
  3499  0079A4  EFD6  F03C         	goto	u6681
  3500  0079A8  EFD9  F03C         	goto	u6680
  3501  0079AC                     u6681:
  3502  0079AC  FFFF               	dw	65535	; assembler added errata NOP
  3503  0079AE  EFE4  F03C         	goto	l5489
  3504  0079B2                     u6680:
  3505  0079B2  FFFF               	dw	65535	; assembler added errata NOP
  3506  0079B4                     
  3507                           ;utils.c: 5:         *state = 1;
  3508  0079B4  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3509  0079B8  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3510  0079BC  0E01               	movlw	1
  3511  0079BE  6EDE               	movwf	postinc2,c
  3512  0079C0  0E00               	movlw	0
  3513  0079C2  6EDD               	movwf	postdec2,c
  3514                           
  3515                           ;utils.c: 6:     } else if (state_machine_code == 0x02){
  3516  0079C4  EF77  F03D         	goto	l297
  3517  0079C8                     l5489:
  3518  0079C8  FFFF               	dw	65535	; assembler added errata NOP
  3519  0079CA  0E02               	movlw	2
  3520  0079CC  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3521  0079CE  A4D8               	btfss	status,2,c
  3522  0079D0  EFEC  F03C         	goto	u6691
  3523  0079D4  EFEF  F03C         	goto	u6690
  3524  0079D8                     u6691:
  3525  0079D8  FFFF               	dw	65535	; assembler added errata NOP
  3526  0079DA  EFFA  F03C         	goto	l5493
  3527  0079DE                     u6690:
  3528  0079DE  FFFF               	dw	65535	; assembler added errata NOP
  3529  0079E0                     
  3530                           ;utils.c: 7:         *state = 3;
  3531  0079E0  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3532  0079E4  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3533  0079E8  0E03               	movlw	3
  3534  0079EA  6EDE               	movwf	postinc2,c
  3535  0079EC  0E00               	movlw	0
  3536  0079EE  6EDD               	movwf	postdec2,c
  3537                           
  3538                           ;utils.c: 8:     } else if (state_machine_code == 0x04){
  3539  0079F0  EF77  F03D         	goto	l297
  3540  0079F4                     l5493:
  3541  0079F4  FFFF               	dw	65535	; assembler added errata NOP
  3542  0079F6  0E04               	movlw	4
  3543  0079F8  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3544  0079FA  A4D8               	btfss	status,2,c
  3545  0079FC  EF02  F03D         	goto	u6701
  3546  007A00  EF05  F03D         	goto	u6700
  3547  007A04                     u6701:
  3548  007A04  FFFF               	dw	65535	; assembler added errata NOP
  3549  007A06  EF10  F03D         	goto	l5497
  3550  007A0A                     u6700:
  3551  007A0A  FFFF               	dw	65535	; assembler added errata NOP
  3552  007A0C                     
  3553                           ;utils.c: 9:         *state = 4;
  3554  007A0C  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3555  007A10  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3556  007A14  0E04               	movlw	4
  3557  007A16  6EDE               	movwf	postinc2,c
  3558  007A18  0E00               	movlw	0
  3559  007A1A  6EDD               	movwf	postdec2,c
  3560                           
  3561                           ;utils.c: 10:     } else if (state_machine_code == 0x08){
  3562  007A1C  EF77  F03D         	goto	l297
  3563  007A20                     l5497:
  3564  007A20  FFFF               	dw	65535	; assembler added errata NOP
  3565  007A22  0E08               	movlw	8
  3566  007A24  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3567  007A26  A4D8               	btfss	status,2,c
  3568  007A28  EF18  F03D         	goto	u6711
  3569  007A2C  EF1B  F03D         	goto	u6710
  3570  007A30                     u6711:
  3571  007A30  FFFF               	dw	65535	; assembler added errata NOP
  3572  007A32  EF26  F03D         	goto	l5501
  3573  007A36                     u6710:
  3574  007A36  FFFF               	dw	65535	; assembler added errata NOP
  3575  007A38                     
  3576                           ;utils.c: 11:         *state = 7;
  3577  007A38  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3578  007A3C  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3579  007A40  0E07               	movlw	7
  3580  007A42  6EDE               	movwf	postinc2,c
  3581  007A44  0E00               	movlw	0
  3582  007A46  6EDD               	movwf	postdec2,c
  3583                           
  3584                           ;utils.c: 12:     } else if (state_machine_code == 0x10){
  3585  007A48  EF77  F03D         	goto	l297
  3586  007A4C                     l5501:
  3587  007A4C  FFFF               	dw	65535	; assembler added errata NOP
  3588  007A4E  0E10               	movlw	16
  3589  007A50  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3590  007A52  A4D8               	btfss	status,2,c
  3591  007A54  EF2E  F03D         	goto	u6721
  3592  007A58  EF31  F03D         	goto	u6720
  3593  007A5C                     u6721:
  3594  007A5C  FFFF               	dw	65535	; assembler added errata NOP
  3595  007A5E  EF3C  F03D         	goto	l5505
  3596  007A62                     u6720:
  3597  007A62  FFFF               	dw	65535	; assembler added errata NOP
  3598  007A64                     
  3599                           ;utils.c: 13:         *state = 2;
  3600  007A64  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3601  007A68  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3602  007A6C  0E02               	movlw	2
  3603  007A6E  6EDE               	movwf	postinc2,c
  3604  007A70  0E00               	movlw	0
  3605  007A72  6EDD               	movwf	postdec2,c
  3606                           
  3607                           ;utils.c: 14:     } else if (state_machine_code == 0x40){
  3608  007A74  EF77  F03D         	goto	l297
  3609  007A78                     l5505:
  3610  007A78  FFFF               	dw	65535	; assembler added errata NOP
  3611  007A7A  0E40               	movlw	64
  3612  007A7C  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3613  007A7E  A4D8               	btfss	status,2,c
  3614  007A80  EF44  F03D         	goto	u6731
  3615  007A84  EF47  F03D         	goto	u6730
  3616  007A88                     u6731:
  3617  007A88  FFFF               	dw	65535	; assembler added errata NOP
  3618  007A8A  EF52  F03D         	goto	l5509
  3619  007A8E                     u6730:
  3620  007A8E  FFFF               	dw	65535	; assembler added errata NOP
  3621  007A90                     
  3622                           ;utils.c: 15:         *state = 8;
  3623  007A90  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3624  007A94  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3625  007A98  0E08               	movlw	8
  3626  007A9A  6EDE               	movwf	postinc2,c
  3627  007A9C  0E00               	movlw	0
  3628  007A9E  6EDD               	movwf	postdec2,c
  3629                           
  3630                           ;utils.c: 16:     } else if (state_machine_code == 0x80){
  3631  007AA0  EF77  F03D         	goto	l297
  3632  007AA4                     l5509:
  3633  007AA4  FFFF               	dw	65535	; assembler added errata NOP
  3634  007AA6  0E80               	movlw	128
  3635  007AA8  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3636  007AAA  A4D8               	btfss	status,2,c
  3637  007AAC  EF5A  F03D         	goto	u6741
  3638  007AB0  EF5D  F03D         	goto	u6740
  3639  007AB4                     u6741:
  3640  007AB4  FFFF               	dw	65535	; assembler added errata NOP
  3641  007AB6  EF60  F03D         	goto	l5513
  3642  007ABA                     u6740:
  3643  007ABA  FFFF               	dw	65535	; assembler added errata NOP
  3644  007ABC  EF77  F03D         	goto	l297
  3645  007AC0                     l5513:
  3646  007AC0  FFFF               	dw	65535	; assembler added errata NOP
  3647  007AC2  0E20               	movlw	32
  3648  007AC4  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3649  007AC6  A4D8               	btfss	status,2,c
  3650  007AC8  EF68  F03D         	goto	u6751
  3651  007ACC  EF6B  F03D         	goto	u6750
  3652  007AD0                     u6751:
  3653  007AD0  FFFF               	dw	65535	; assembler added errata NOP
  3654  007AD2  EF6E  F03D         	goto	l5517
  3655  007AD6                     u6750:
  3656  007AD6  FFFF               	dw	65535	; assembler added errata NOP
  3657  007AD8  EF77  F03D         	goto	l297
  3658  007ADC                     l5517:
  3659  007ADC  FFFF               	dw	65535	; assembler added errata NOP
  3660                           
  3661                           ;utils.c: 21:         *state = 0;
  3662  007ADE  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3663  007AE2  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3664  007AE6  0E00               	movlw	0
  3665  007AE8  6EDE               	movwf	postinc2,c
  3666  007AEA  0E00               	movlw	0
  3667  007AEC  6EDD               	movwf	postdec2,c
  3668  007AEE                     l297:
  3669  007AEE  FFFF               	dw	65535	; assembler added errata NOP
  3670  007AF0  0012               	return		;funcret
  3671  007AF2  FFFF               	dw	65535	; errata NOP
  3672  007AF4                     __end_of_state_translator_fpga_to_micro:
  3673                           	callstack 0
  3674                           
  3675 ;; *************** function _snprintf *****************
  3676 ;; Defined at:
  3677 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\snprintf.c"
  3678 ;; Parameters:    Size  Location     Type
  3679 ;;  s               2   10[BANK0 ] PTR unsigned char 
  3680 ;;		 -> main@greet_str(160), 
  3681 ;;  n               2   12[BANK0 ] unsigned int 
  3682 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  3683 ;;		 -> STR_10(3), 
  3684 ;; Auto vars:     Size  Location     Type
  3685 ;;  ap              2   20[BANK0 ] PTR void [1]
  3686 ;;		 -> ?_snprintf(2), 
  3687 ;;  ret             2    0        int 
  3688 ;; Return value:  Size  Location     Type
  3689 ;;                  2   10[BANK0 ] int 
  3690 ;; Registers used:
  3691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3692 ;; Tracked objects:
  3693 ;;		On entry : 0/0
  3694 ;;		On exit  : 0/0
  3695 ;;		Unchanged: 0/0
  3696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3697 ;;      Params:         0       8       0       0       0       0       0
  3698 ;;      Locals:         0       4       0       0       0       0       0
  3699 ;;      Temps:          0       0       0       0       0       0       0
  3700 ;;      Totals:         0      12       0       0       0       0       0
  3701 ;;Total ram usage:       12 bytes
  3702 ;; Hardware stack levels used:    1
  3703 ;; Hardware stack levels required when called:    9
  3704 ;; This function calls:
  3705 ;;		_vsnprintf
  3706 ;; This function is called by:
  3707 ;;		_main
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710                           
  3711                           	psect	text5
  3712  0063D8                     __ptext5:
  3713                           	callstack 0
  3714  0063D8                     _snprintf:
  3715                           	callstack 0
  3716  0063D8  FFFF               	dw	65535	; assembler added errata NOP
  3717  0063DA  0EC8               	movlw	low (?_snprintf+6)
  3718  0063DC  0100               	movlb	0	; () banked
  3719  0063DE  6FCC               	movwf	snprintf@ap& (0+255),b
  3720  0063E0  0E00               	movlw	high (?_snprintf+6)
  3721  0063E2  6FCD               	movwf	(snprintf@ap+1)& (0+255),b
  3722  0063E4                     
  3723                           ; BSR set to: 0
  3724  0063E4  C0C2  F070         	movff	snprintf@s,vsnprintf@s
  3725  0063E8  C0C3  F071         	movff	snprintf@s+1,vsnprintf@s+1
  3726  0063EC  C0C4  F072         	movff	snprintf@n,vsnprintf@n
  3727  0063F0  C0C5  F073         	movff	snprintf@n+1,vsnprintf@n+1
  3728  0063F4  C0C6  F074         	movff	snprintf@fmt,vsnprintf@fmt
  3729  0063F8  C0C7  F075         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  3730  0063FC  0ECC               	movlw	low snprintf@ap
  3731  0063FE  6E76               	movwf	vsnprintf@ap^0,c
  3732  006400  0E00               	movlw	high snprintf@ap
  3733  006402  6E77               	movwf	(vsnprintf@ap+1)^0,c
  3734  006404  EC2E  F03C         	call	_vsnprintf	;wreg free
  3735  006408  0012               	return		;funcret
  3736  00640A  FFFF               	dw	65535	; errata NOP
  3737  00640C                     __end_of_snprintf:
  3738                           	callstack 0
  3739                           
  3740 ;; *************** function _vsnprintf *****************
  3741 ;; Defined at:
  3742 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_vsnprintf.c"
  3743 ;; Parameters:    Size  Location     Type
  3744 ;;  s               2  111[COMRAM] PTR unsigned char 
  3745 ;;		 -> main@greet_str(160), 
  3746 ;;  n               2  113[COMRAM] unsigned int 
  3747 ;;  fmt             2  115[COMRAM] PTR const unsigned char 
  3748 ;;		 -> STR_10(3), 
  3749 ;;  ap              2  117[COMRAM] PTR PTR void 
  3750 ;;		 -> snprintf@ap(2), 
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;  f               6    4[BANK0 ] struct _IO_FILE
  3753 ;;  cnt             2    2[BANK0 ] int 
  3754 ;; Return value:  Size  Location     Type
  3755 ;;                  2  111[COMRAM] int 
  3756 ;; Registers used:
  3757 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3758 ;; Tracked objects:
  3759 ;;		On entry : 0/0
  3760 ;;		On exit  : 0/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3763 ;;      Params:         8       0       0       0       0       0       0
  3764 ;;      Locals:         0      10       0       0       0       0       0
  3765 ;;      Temps:          4       0       0       0       0       0       0
  3766 ;;      Totals:        12      10       0       0       0       0       0
  3767 ;;Total ram usage:       22 bytes
  3768 ;; Hardware stack levels used:    1
  3769 ;; Hardware stack levels required when called:    8
  3770 ;; This function calls:
  3771 ;;		_vfprintf
  3772 ;; This function is called by:
  3773 ;;		_snprintf
  3774 ;; This function uses a non-reentrant model
  3775 ;;
  3776                           
  3777                           	psect	text6
  3778  00785C                     __ptext6:
  3779                           	callstack 0
  3780  00785C                     _vsnprintf:
  3781                           	callstack 0
  3782  00785C  FFFF               	dw	65535	; assembler added errata NOP
  3783  00785E  0E80               	movlw	128
  3784  007860  5C73               	subwf	(vsnprintf@n+1)^0,w,c
  3785  007862  A0D8               	btfss	status,0,c
  3786  007864  EF36  F03C         	goto	u6581
  3787  007868  EF39  F03C         	goto	u6580
  3788  00786C                     u6581:
  3789  00786C  FFFF               	dw	65535	; assembler added errata NOP
  3790  00786E  EF43  F03C         	goto	l5349
  3791  007872                     u6580:
  3792  007872  FFFF               	dw	65535	; assembler added errata NOP
  3793  007874  0E00               	movlw	0
  3794  007876  0100               	movlb	0	; () banked
  3795  007878  6F8D               	movwf	(_errno+1)& (0+255),b
  3796  00787A  0E4B               	movlw	75
  3797  00787C  6F8C               	movwf	_errno& (0+255),b
  3798  00787E                     
  3799                           ; BSR set to: 0
  3800  00787E  6870               	setf	?_vsnprintf^0,c
  3801  007880  6871               	setf	(?_vsnprintf+1)^0,c
  3802  007882  EFC8  F03C         	goto	l1135
  3803  007886                     l5349:
  3804  007886  FFFF               	dw	65535	; assembler added errata NOP
  3805  007888  C070  F0BC         	movff	vsnprintf@s,vsnprintf@f
  3806  00788C  C071  F0BD         	movff	vsnprintf@s+1,vsnprintf@f+1
  3807  007890  5073               	movf	(vsnprintf@n+1)^0,w,c
  3808  007892  E10A               	bnz	u6590
  3809  007894  0E02               	movlw	2
  3810  007896  5C72               	subwf	vsnprintf@n^0,w,c
  3811  007898  A0D8               	btfss	status,0,c
  3812  00789A  EF51  F03C         	goto	u6591
  3813  00789E  EF54  F03C         	goto	u6590
  3814  0078A2                     u6591:
  3815  0078A2  FFFF               	dw	65535	; assembler added errata NOP
  3816  0078A4  EF62  F03C         	goto	l5355
  3817  0078A8                     u6590:
  3818  0078A8  FFFF               	dw	65535	; assembler added errata NOP
  3819  0078AA  0EFF               	movlw	255
  3820  0078AC  2472               	addwf	vsnprintf@n^0,w,c
  3821  0078AE  0100               	movlb	0	; () banked
  3822  0078B0  6FC0               	movwf	(vsnprintf@f+4)& (0+255),b
  3823  0078B2  0EFF               	movlw	255
  3824  0078B4  2073               	addwfc	(vsnprintf@n+1)^0,w,c
  3825  0078B6  6FC1               	movwf	(vsnprintf@f+5)& (0+255),b
  3826  0078B8                     
  3827                           ; BSR set to: 0
  3828  0078B8  0E00               	movlw	0
  3829  0078BA  6FBF               	movwf	(vsnprintf@f+3)& (0+255),b
  3830  0078BC  0E00               	movlw	0
  3831  0078BE  6FBE               	movwf	(vsnprintf@f+2)& (0+255),b
  3832  0078C0  EF6C  F03C         	goto	l5357
  3833  0078C4                     l5355:
  3834  0078C4  FFFF               	dw	65535	; assembler added errata NOP
  3835  0078C6  0E00               	movlw	0
  3836  0078C8  0100               	movlb	0	; () banked
  3837  0078CA  6FC1               	movwf	(vsnprintf@f+5)& (0+255),b
  3838  0078CC  0E01               	movlw	1
  3839  0078CE  6FC0               	movwf	(vsnprintf@f+4)& (0+255),b
  3840  0078D0  0E00               	movlw	0
  3841  0078D2  6FBF               	movwf	(vsnprintf@f+3)& (0+255),b
  3842  0078D4  0E01               	movlw	1
  3843  0078D6  6FBE               	movwf	(vsnprintf@f+2)& (0+255),b
  3844  0078D8                     l5357:
  3845  0078D8  FFFF               	dw	65535	; assembler added errata NOP
  3846                           
  3847                           ; BSR set to: 0
  3848  0078DA  0EBC               	movlw	low vsnprintf@f
  3849  0078DC  6E68               	movwf	vfprintf@fp^0,c
  3850  0078DE  0E00               	movlw	high vsnprintf@f
  3851  0078E0  6E69               	movwf	(vfprintf@fp+1)^0,c
  3852  0078E2  C074  F06A         	movff	vsnprintf@fmt,vfprintf@fmt
  3853  0078E6  C075  F06B         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  3854  0078EA  C076  F06C         	movff	vsnprintf@ap,vfprintf@ap
  3855  0078EE  C077  F06D         	movff	vsnprintf@ap+1,vfprintf@ap+1
  3856  0078F2  ECB7  F034         	call	_vfprintf	;wreg free
  3857  0078F6  C068  F0BA         	movff	?_vfprintf,vsnprintf@cnt
  3858  0078FA  C069  F0BB         	movff	?_vfprintf+1,vsnprintf@cnt+1
  3859  0078FE  5072               	movf	vsnprintf@n^0,w,c
  3860  007900  1073               	iorwf	(vsnprintf@n+1)^0,w,c
  3861  007902  B4D8               	btfsc	status,2,c
  3862  007904  EF86  F03C         	goto	u6601
  3863  007908  EF89  F03C         	goto	u6600
  3864  00790C                     u6601:
  3865  00790C  FFFF               	dw	65535	; assembler added errata NOP
  3866  00790E  EFC3  F03C         	goto	l5369
  3867  007912                     u6600:
  3868  007912  FFFF               	dw	65535	; assembler added errata NOP
  3869  007914  0100               	movlb	0	; () banked
  3870  007916  BFBB               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  3871  007918  EF90  F03C         	goto	u6611
  3872  00791C  EF93  F03C         	goto	u6610
  3873  007920                     u6611:
  3874  007920  FFFF               	dw	65535	; assembler added errata NOP
  3875  007922  EFC3  F03C         	goto	l5369
  3876  007926                     u6610:
  3877  007926  FFFF               	dw	65535	; assembler added errata NOP
  3878  007928                     
  3879                           ; BSR set to: 0
  3880  007928  0EFF               	movlw	255
  3881  00792A  6E78               	movwf	??_vsnprintf^0,c
  3882  00792C  0EFF               	movlw	255
  3883  00792E  6E79               	movwf	(??_vsnprintf+1)^0,c
  3884  007930  C072  F07A         	movff	vsnprintf@n,??_vsnprintf+2
  3885  007934  C073  F07B         	movff	vsnprintf@n+1,??_vsnprintf+3
  3886  007938  5078               	movf	??_vsnprintf^0,w,c
  3887  00793A  267A               	addwf	(??_vsnprintf+2)^0,f,c
  3888  00793C  5079               	movf	(??_vsnprintf+1)^0,w,c
  3889  00793E  227B               	addwfc	(??_vsnprintf+3)^0,f,c
  3890  007940  507A               	movf	(??_vsnprintf+2)^0,w,c
  3891  007942  5DBA               	subwf	vsnprintf@cnt& (0+255),w,b
  3892  007944  507B               	movf	(??_vsnprintf+3)^0,w,c
  3893  007946  59BB               	subwfb	(vsnprintf@cnt+1)& (0+255),w,b
  3894  007948  A0D8               	btfss	status,0,c
  3895  00794A  EFA9  F03C         	goto	u6621
  3896  00794E  EFAC  F03C         	goto	u6620
  3897  007952                     u6621:
  3898  007952  FFFF               	dw	65535	; assembler added errata NOP
  3899  007954  EFB5  F03C         	goto	l1140
  3900  007958                     u6620:
  3901  007958  FFFF               	dw	65535	; assembler added errata NOP
  3902  00795A                     
  3903                           ; BSR set to: 0
  3904  00795A  0EFF               	movlw	255
  3905  00795C  2472               	addwf	vsnprintf@n^0,w,c
  3906  00795E  6FB8               	movwf	_vsnprintf$1584& (0+255),b
  3907  007960  0EFF               	movlw	255
  3908  007962  2073               	addwfc	(vsnprintf@n+1)^0,w,c
  3909  007964  6FB9               	movwf	(_vsnprintf$1584+1)& (0+255),b
  3910  007966  EFBA  F03C         	goto	l5367
  3911  00796A                     l1140:
  3912  00796A  FFFF               	dw	65535	; assembler added errata NOP
  3913                           
  3914                           ; BSR set to: 0
  3915  00796C  C0BA  F0B8         	movff	vsnprintf@cnt,_vsnprintf$1584
  3916  007970  C0BB  F0B9         	movff	vsnprintf@cnt+1,_vsnprintf$1584+1
  3917  007974                     l5367:
  3918  007974  FFFF               	dw	65535	; assembler added errata NOP
  3919                           
  3920                           ; BSR set to: 0
  3921  007976  51B8               	movf	_vsnprintf$1584& (0+255),w,b
  3922  007978  2470               	addwf	vsnprintf@s^0,w,c
  3923  00797A  6ED9               	movwf	fsr2l,c
  3924  00797C  51B9               	movf	(_vsnprintf$1584+1)& (0+255),w,b
  3925  00797E  2071               	addwfc	(vsnprintf@s+1)^0,w,c
  3926  007980  6EDA               	movwf	fsr2h,c
  3927  007982  0E00               	movlw	0
  3928  007984  6EDF               	movwf	indf2,c
  3929  007986                     l5369:
  3930  007986  FFFF               	dw	65535	; assembler added errata NOP
  3931  007988  C0BA  F070         	movff	vsnprintf@cnt,?_vsnprintf
  3932  00798C  C0BB  F071         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  3933  007990                     l1135:
  3934  007990  FFFF               	dw	65535	; assembler added errata NOP
  3935  007992  0012               	return		;funcret
  3936  007994  FFFF               	dw	65535	; errata NOP
  3937  007996                     __end_of_vsnprintf:
  3938                           	callstack 0
  3939                           
  3940 ;; *************** function _vfprintf *****************
  3941 ;; Defined at:
  3942 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3943 ;; Parameters:    Size  Location     Type
  3944 ;;  fp              2  103[COMRAM] PTR struct _IO_FILE
  3945 ;;		 -> vsnprintf@f(6), 
  3946 ;;  fmt             2  105[COMRAM] PTR const unsigned char 
  3947 ;;		 -> STR_10(3), 
  3948 ;;  ap              2  107[COMRAM] PTR PTR void 
  3949 ;;		 -> snprintf@ap(2), 
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;  cfmt            2  109[COMRAM] PTR unsigned char 
  3952 ;;		 -> STR_10(3), 
  3953 ;; Return value:  Size  Location     Type
  3954 ;;                  2  103[COMRAM] int 
  3955 ;; Registers used:
  3956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3957 ;; Tracked objects:
  3958 ;;		On entry : 0/0
  3959 ;;		On exit  : 0/0
  3960 ;;		Unchanged: 0/0
  3961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3962 ;;      Params:         6       0       0       0       0       0       0
  3963 ;;      Locals:         2       0       0       0       0       0       0
  3964 ;;      Temps:          0       0       0       0       0       0       0
  3965 ;;      Totals:         8       0       0       0       0       0       0
  3966 ;;Total ram usage:        8 bytes
  3967 ;; Hardware stack levels used:    1
  3968 ;; Hardware stack levels required when called:    7
  3969 ;; This function calls:
  3970 ;;		_vfpfcnvrt
  3971 ;; This function is called by:
  3972 ;;		_vsnprintf
  3973 ;; This function uses a non-reentrant model
  3974 ;;
  3975                           
  3976                           	psect	text7
  3977  00696E                     __ptext7:
  3978                           	callstack 0
  3979  00696E                     _vfprintf:
  3980                           	callstack 0
  3981  00696E  FFFF               	dw	65535	; assembler added errata NOP
  3982  006970                     
  3983                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3984  006970  C06A  F06E         	movff	vfprintf@fmt,vfprintf@cfmt
  3985  006974  C06B  F06F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3986  006978                     
  3987                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  3988  006978  0E00               	movlw	0
  3989  00697A  0100               	movlb	0	; () banked
  3990  00697C  6F85               	movwf	(_nout+1)& (0+255),b
  3991  00697E  0E00               	movlw	0
  3992  006980  6F84               	movwf	_nout& (0+255),b
  3993                           
  3994                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  3995  006982  EFD7  F034         	goto	l5195
  3996  006986                     l5193:
  3997  006986  FFFF               	dw	65535	; assembler added errata NOP
  3998                           
  3999                           ; BSR set to: 0
  4000                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4001  006988  C068  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  4002  00698C  C069  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4003  006990  0E6E               	movlw	low vfprintf@cfmt
  4004  006992  6E45               	movwf	vfpfcnvrt@fmt^0,c
  4005  006994  0E00               	movlw	high vfprintf@cfmt
  4006  006996  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  4007  006998  C06C  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  4008  00699C  C06D  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4009  0069A0  EC3D  F000         	call	_vfpfcnvrt	;wreg free
  4010  0069A4  5043               	movf	?_vfpfcnvrt^0,w,c
  4011  0069A6  0100               	movlb	0	; () banked
  4012  0069A8  2784               	addwf	_nout& (0+255),f,b
  4013  0069AA  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  4014  0069AC  2385               	addwfc	(_nout+1)& (0+255),f,b
  4015  0069AE                     l5195:
  4016  0069AE  FFFF               	dw	65535	; assembler added errata NOP
  4017                           
  4018                           ; BSR set to: 0
  4019                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  4020  0069B0  C06E  FFF6         	movff	vfprintf@cfmt,tblptrl
  4021  0069B4  C06F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4022  0069B8                     	if	0	;tblptru may be non-zero
  4023  0069B8                     	endif
  4024  0069B8                     	if	0	;tblptru may be non-zero
  4025  0069B8                     	endif
  4026  0069B8  0008               	tblrd		*
  4027  0069BA  FFFF               	dw	65535	; errata NOP
  4028  0069BC  50F5               	movf	tablat,w,c
  4029  0069BE  0900               	iorlw	0
  4030  0069C0  A4D8               	btfss	status,2,c
  4031  0069C2  EFE5  F034         	goto	u6371
  4032  0069C6  EFE8  F034         	goto	u6370
  4033  0069CA                     u6371:
  4034  0069CA  FFFF               	dw	65535	; assembler added errata NOP
  4035  0069CC  EFC3  F034         	goto	l5193
  4036  0069D0                     u6370:
  4037  0069D0  FFFF               	dw	65535	; assembler added errata NOP
  4038  0069D2                     
  4039                           ; BSR set to: 0
  4040                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  4041  0069D2  C084  F068         	movff	_nout,?_vfprintf
  4042  0069D6  C085  F069         	movff	_nout+1,?_vfprintf+1
  4043  0069DA                     
  4044                           ; BSR set to: 0
  4045  0069DA  0012               	return		;funcret
  4046  0069DC  FFFF               	dw	65535	; errata NOP
  4047  0069DE                     __end_of_vfprintf:
  4048                           	callstack 0
  4049                           
  4050 ;; *************** function _vfpfcnvrt *****************
  4051 ;; Defined at:
  4052 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  4053 ;; Parameters:    Size  Location     Type
  4054 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  4055 ;;		 -> vsnprintf@f(6), 
  4056 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  4057 ;;		 -> vfprintf@cfmt(2), 
  4058 ;;  ap              2   70[COMRAM] PTR PTR void 
  4059 ;;		 -> snprintf@ap(2), 
  4060 ;; Auto vars:     Size  Location     Type
  4061 ;;  llu             8   95[COMRAM] unsigned long long 
  4062 ;;  ll              8   84[COMRAM] long long 
  4063 ;;  f               4    0        long long 
  4064 ;;  ct              3    0        unsigned char [3]
  4065 ;;  vp              2   92[COMRAM] PTR void 
  4066 ;;		 -> ?_snprintf(2), STR_8(50), STR_7(9), STR_6(7), 
  4067 ;;		 -> STR_5(9), STR_4(39), STR_3(9), STR_2(64), 
  4068 ;;		 -> STR_1(49), 
  4069 ;;  done            2   78[COMRAM] int 
  4070 ;;  cp              2   76[COMRAM] PTR unsigned char 
  4071 ;;		 -> ?_snprintf(2), STR_8(50), STR_7(9), STR_6(7), 
  4072 ;;		 -> STR_5(9), STR_4(39), STR_3(9), STR_2(64), 
  4073 ;;		 -> STR_1(49), 
  4074 ;;  i               2    0        int 
  4075 ;;  c               1   94[COMRAM] unsigned char 
  4076 ;; Return value:  Size  Location     Type
  4077 ;;                  2   66[COMRAM] int 
  4078 ;; Registers used:
  4079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4085 ;;      Params:         6       0       0       0       0       0       0
  4086 ;;      Locals:        27       0       0       0       0       0       0
  4087 ;;      Temps:          4       0       0       0       0       0       0
  4088 ;;      Totals:        37       0       0       0       0       0       0
  4089 ;;Total ram usage:       37 bytes
  4090 ;; Hardware stack levels used:    1
  4091 ;; Hardware stack levels required when called:    6
  4092 ;; This function calls:
  4093 ;;		_atoi
  4094 ;;		_ctoa
  4095 ;;		_dtoa
  4096 ;;		_fputc
  4097 ;;		_isdigit
  4098 ;;		_otoa
  4099 ;;		_stoa
  4100 ;;		_strncmp
  4101 ;;		_utoa
  4102 ;;		_xtoa
  4103 ;; This function is called by:
  4104 ;;		_vfprintf
  4105 ;; This function uses a non-reentrant model
  4106 ;;
  4107                           
  4108                           	psect	text8
  4109  00007A                     __ptext8:
  4110                           	callstack 0
  4111  00007A                     _vfpfcnvrt:
  4112                           	callstack 0
  4113  00007A  FFFF               	dw	65535	; assembler added errata NOP
  4114  00007C                     
  4115                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  4116  00007C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4117  000080  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4118  000084  CFDE FFF6          	movff	postinc2,tblptrl
  4119  000088  CFDD FFF7          	movff	postdec2,tblptrh
  4120  00008C                     	if	0	;tblptru may be non-zero
  4121  00008C                     	endif
  4122  00008C                     	if	0	;tblptru may be non-zero
  4123  00008C                     	endif
  4124  00008C  0008               	tblrd		*
  4125  00008E  FFFF               	dw	65535	; errata NOP
  4126  000090  50F5               	movf	tablat,w,c
  4127  000092  0A25               	xorlw	37
  4128  000094  A4D8               	btfss	status,2,c
  4129  000096  EF4F  F000         	goto	u5231
  4130  00009A  EF52  F000         	goto	u5230
  4131  00009E                     u5231:
  4132  00009E  FFFF               	dw	65535	; assembler added errata NOP
  4133  0000A0  EF11  F00A         	goto	l4779
  4134  0000A4                     u5230:
  4135  0000A4  FFFF               	dw	65535	; assembler added errata NOP
  4136  0000A6                     
  4137                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  4138  0000A6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4139  0000AA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4140  0000AE  2ADE               	incf	postinc2,f,c
  4141  0000B0  0E00               	movlw	0
  4142  0000B2  22DD               	addwfc	postdec2,f,c
  4143  0000B4                     
  4144                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  4145  0000B4  0E00               	movlw	0
  4146  0000B6  0100               	movlb	0	; () banked
  4147  0000B8  6F87               	movwf	(_width+1)& (0+255),b
  4148  0000BA  0E00               	movlw	0
  4149  0000BC  6F86               	movwf	_width& (0+255),b
  4150  0000BE  C086  F08A         	movff	_width,_flags
  4151  0000C2  C087  F08B         	movff	_width+1,_flags+1
  4152  0000C6                     
  4153                           ; BSR set to: 0
  4154                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  4155  0000C6  6988               	setf	_prec& (0+255),b
  4156  0000C8  6989               	setf	(_prec+1)& (0+255),b
  4157  0000CA                     
  4158                           ; BSR set to: 0
  4159                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 688:         done
      +                           = 0;
  4160  0000CA  0E00               	movlw	0
  4161  0000CC  6E50               	movwf	(vfpfcnvrt@done+1)^0,c
  4162  0000CE  0E00               	movlw	0
  4163  0000D0  6E4F               	movwf	vfpfcnvrt@done^0,c
  4164                           
  4165                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  4166  0000D2  EFC0  F000         	goto	l4497
  4167  0000D6                     l4471:
  4168  0000D6  FFFF               	dw	65535	; assembler added errata NOP
  4169                           
  4170                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 692:             
      +                                  flags |= (1 << 0);
  4171  0000D8  0100               	movlb	0	; () banked
  4172  0000DA  818A               	bsf	_flags& (0+255),0,b
  4173  0000DC                     l4473:
  4174  0000DC  FFFF               	dw	65535	; assembler added errata NOP
  4175                           
  4176                           ; BSR set to: 0
  4177                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 693:             
      +                                  ++*fmt;
  4178  0000DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4179  0000E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4180  0000E6  2ADE               	incf	postinc2,f,c
  4181  0000E8  0E00               	movlw	0
  4182  0000EA  22DD               	addwfc	postdec2,f,c
  4183                           
  4184                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 694:             
      +                                  break;
  4185  0000EC  EFC0  F000         	goto	l4497
  4186  0000F0                     l4475:
  4187  0000F0  FFFF               	dw	65535	; assembler added errata NOP
  4188                           
  4189                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 696:             
      +                                  flags |= (1 << 1);
  4190  0000F2  0100               	movlb	0	; () banked
  4191  0000F4  838A               	bsf	_flags& (0+255),1,b
  4192  0000F6  EF6E  F000         	goto	l4473
  4193  0000FA                     l4479:
  4194  0000FA  FFFF               	dw	65535	; assembler added errata NOP
  4195                           
  4196                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 700:             
      +                                  flags |= (1 << 2);
  4197  0000FC  0100               	movlb	0	; () banked
  4198  0000FE  858A               	bsf	_flags& (0+255),2,b
  4199  000100  EF6E  F000         	goto	l4473
  4200  000104                     l4483:
  4201  000104  FFFF               	dw	65535	; assembler added errata NOP
  4202                           
  4203                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 704:             
      +                                  flags |= (1 << 3);
  4204  000106  0100               	movlb	0	; () banked
  4205  000108  878A               	bsf	_flags& (0+255),3,b
  4206  00010A  EF6E  F000         	goto	l4473
  4207  00010E                     l4487:
  4208  00010E  FFFF               	dw	65535	; assembler added errata NOP
  4209                           
  4210                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 708:             
      +                                  flags |= (1 << 4);
  4211  000110  0100               	movlb	0	; () banked
  4212  000112  898A               	bsf	_flags& (0+255),4,b
  4213  000114  EF6E  F000         	goto	l4473
  4214  000118                     l4491:
  4215  000118  FFFF               	dw	65535	; assembler added errata NOP
  4216                           
  4217                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 712:             
      +                                  done = 1;
  4218  00011A  0E00               	movlw	0
  4219  00011C  6E50               	movwf	(vfpfcnvrt@done+1)^0,c
  4220  00011E  0E01               	movlw	1
  4221  000120  6E4F               	movwf	vfpfcnvrt@done^0,c
  4222                           
  4223                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 713:             
      +                                  break;
  4224  000122  EFC0  F000         	goto	l4497
  4225  000126                     l4495:
  4226  000126  FFFF               	dw	65535	; assembler added errata NOP
  4227  000128  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4228  00012C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4229  000130  CFDE FFF6          	movff	postinc2,tblptrl
  4230  000134  CFDD FFF7          	movff	postdec2,tblptrh
  4231  000138                     	if	0	;tblptru may be non-zero
  4232  000138                     	endif
  4233  000138                     	if	0	;tblptru may be non-zero
  4234  000138                     	endif
  4235  000138  0008               	tblrd		*
  4236  00013A  FFFF               	dw	65535	; errata NOP
  4237  00013C  50F5               	movf	tablat,w,c
  4238  00013E  6E49               	movwf	??_vfpfcnvrt^0,c
  4239  000140  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  4240                           
  4241                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4242                           ; Switch size 1, requested type "simple"
  4243                           ; Number of cases is 1, Range of values is 0 to 0
  4244                           ; switch strategies available:
  4245                           ; Name         Instructions Cycles
  4246                           ; simple_byte            4     3 (average)
  4247                           ;	Chosen strategy is simple_byte
  4248  000142  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  4249  000144  0A00               	xorlw	0	; case 0
  4250  000146  B4D8               	btfsc	status,2,c
  4251  000148  EFA8  F000         	goto	l5931
  4252  00014C  EF8C  F000         	goto	l4491
  4253  000150                     l5931:
  4254  000150  FFFF               	dw	65535	; assembler added errata NOP
  4255                           
  4256                           ; Switch size 1, requested type "simple"
  4257                           ; Number of cases is 5, Range of values is 32 to 48
  4258                           ; switch strategies available:
  4259                           ; Name         Instructions Cycles
  4260                           ; simple_byte           16     9 (average)
  4261                           ;	Chosen strategy is simple_byte
  4262  000152  5049               	movf	??_vfpfcnvrt^0,w,c
  4263  000154  0A20               	xorlw	32	; case 32
  4264  000156  B4D8               	btfsc	status,2,c
  4265  000158  EF82  F000         	goto	l4483
  4266  00015C  0A03               	xorlw	3	; case 35
  4267  00015E  B4D8               	btfsc	status,2,c
  4268  000160  EF87  F000         	goto	l4487
  4269  000164  0A08               	xorlw	8	; case 43
  4270  000166  B4D8               	btfsc	status,2,c
  4271  000168  EF7D  F000         	goto	l4479
  4272  00016C  0A06               	xorlw	6	; case 45
  4273  00016E  B4D8               	btfsc	status,2,c
  4274  000170  EF6B  F000         	goto	l4471
  4275  000174  0A1D               	xorlw	29	; case 48
  4276  000176  B4D8               	btfsc	status,2,c
  4277  000178  EF78  F000         	goto	l4475
  4278  00017C  EF8C  F000         	goto	l4491
  4279  000180                     l4497:
  4280  000180  FFFF               	dw	65535	; assembler added errata NOP
  4281                           
  4282                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  4283  000182  504F               	movf	vfpfcnvrt@done^0,w,c
  4284  000184  1050               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  4285  000186  B4D8               	btfsc	status,2,c
  4286  000188  EFC8  F000         	goto	u5241
  4287  00018C  EFCB  F000         	goto	u5240
  4288  000190                     u5241:
  4289  000190  FFFF               	dw	65535	; assembler added errata NOP
  4290  000192  EF93  F000         	goto	l4495
  4291  000196                     u5240:
  4292  000196  FFFF               	dw	65535	; assembler added errata NOP
  4293  000198                     
  4294                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 716:         if (
      +                          flags & (1 << 0)) {
  4295  000198  0100               	movlb	0	; () banked
  4296  00019A  A18A               	btfss	_flags& (0+255),0,b
  4297  00019C  EFD2  F000         	goto	u5251
  4298  0001A0  EFD5  F000         	goto	u5250
  4299  0001A4                     u5251:
  4300  0001A4  FFFF               	dw	65535	; assembler added errata NOP
  4301  0001A6  EFD7  F000         	goto	l4501
  4302  0001AA                     u5250:
  4303  0001AA  FFFF               	dw	65535	; assembler added errata NOP
  4304  0001AC                     
  4305                           ; BSR set to: 0
  4306                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 717:             
      +                          flags &= ~(1 << 1);
  4307  0001AC  938A               	bcf	_flags& (0+255),1,b
  4308  0001AE                     l4501:
  4309  0001AE  FFFF               	dw	65535	; assembler added errata NOP
  4310                           
  4311                           ; BSR set to: 0
  4312                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  4313  0001B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4314  0001B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4315  0001B8  CFDE FFF6          	movff	postinc2,tblptrl
  4316  0001BC  CFDD FFF7          	movff	postdec2,tblptrh
  4317  0001C0                     	if	0	;tblptru may be non-zero
  4318  0001C0                     	endif
  4319  0001C0                     	if	0	;tblptru may be non-zero
  4320  0001C0                     	endif
  4321  0001C0  0008               	tblrd		*
  4322  0001C2  FFFF               	dw	65535	; errata NOP
  4323  0001C4  50F5               	movf	tablat,w,c
  4324  0001C6  0A2A               	xorlw	42
  4325  0001C8  A4D8               	btfss	status,2,c
  4326  0001CA  EFE9  F000         	goto	u5261
  4327  0001CE  EFEC  F000         	goto	u5260
  4328  0001D2                     u5261:
  4329  0001D2  FFFF               	dw	65535	; assembler added errata NOP
  4330  0001D4  EF18  F001         	goto	l4509
  4331  0001D8                     u5260:
  4332  0001D8  FFFF               	dw	65535	; assembler added errata NOP
  4333  0001DA                     
  4334                           ; BSR set to: 0
  4335                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  4336  0001DA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4337  0001DE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4338  0001E2  2ADE               	incf	postinc2,f,c
  4339  0001E4  0E00               	movlw	0
  4340  0001E6  22DD               	addwfc	postdec2,f,c
  4341                           
  4342                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  4343  0001E8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4344  0001EC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4345  0001F0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4346  0001F4  0E02               	movlw	2
  4347  0001F6  26DE               	addwf	postinc2,f,c
  4348  0001F8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4349  0001FC  0E00               	movlw	0
  4350  0001FE  22DD               	addwfc	postdec2,f,c
  4351  000200  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4352  000204  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4353  000208  CFDE F086          	movff	postinc2,_width
  4354  00020C  CFDD F087          	movff	postdec2,_width+1
  4355  000210                     
  4356                           ; BSR set to: 0
  4357                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  4358  000210  BF87               	btfsc	(_width+1)& (0+255),7,b
  4359  000212  EF10  F001         	goto	u5270
  4360  000216  EF0D  F001         	goto	u5271
  4361  00021A                     u5271:
  4362  00021A  FFFF               	dw	65535	; assembler added errata NOP
  4363  00021C  EF63  F001         	goto	l4519
  4364  000220                     u5270:
  4365  000220  FFFF               	dw	65535	; assembler added errata NOP
  4366  000222                     
  4367                           ; BSR set to: 0
  4368                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  4369  000222  818A               	bsf	_flags& (0+255),0,b
  4370                           
  4371                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  4372  000224  6D86               	negf	_width& (0+255),b
  4373  000226  1F87               	comf	(_width+1)& (0+255),f,b
  4374  000228  B0D8               	btfsc	status,0,c
  4375  00022A  2B87               	incf	(_width+1)& (0+255),f,b
  4376  00022C  EF63  F001         	goto	l4519
  4377  000230                     l4509:
  4378  000230  FFFF               	dw	65535	; assembler added errata NOP
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  4382  000232  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4383  000236  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4384  00023A  CFDE F008          	movff	postinc2,atoi@s
  4385  00023E  CFDD F009          	movff	postdec2,atoi@s+1
  4386  000242  EC42  F03E         	call	_atoi	;wreg free
  4387  000246  C008  F086         	movff	?_atoi,_width
  4388  00024A  C009  F087         	movff	?_atoi+1,_width+1
  4389                           
  4390                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4391  00024E  EF31  F001         	goto	l4513
  4392  000252                     l4511:
  4393  000252  FFFF               	dw	65535	; assembler added errata NOP
  4394                           
  4395                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  4396  000254  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4397  000258  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4398  00025C  2ADE               	incf	postinc2,f,c
  4399  00025E  0E00               	movlw	0
  4400  000260  22DD               	addwfc	postdec2,f,c
  4401  000262                     l4513:
  4402  000262  FFFF               	dw	65535	; assembler added errata NOP
  4403  000264  0ED0               	movlw	208
  4404  000266  6E49               	movwf	??_vfpfcnvrt^0,c
  4405  000268  0EFF               	movlw	255
  4406  00026A  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  4407  00026C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4408  000270  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4409  000274  CFDE FFF6          	movff	postinc2,tblptrl
  4410  000278  CFDD FFF7          	movff	postdec2,tblptrh
  4411  00027C                     	if	0	;tblptru may be non-zero
  4412  00027C                     	endif
  4413  00027C                     	if	0	;tblptru may be non-zero
  4414  00027C                     	endif
  4415  00027C  0008               	tblrd		*
  4416  00027E  FFFF               	dw	65535	; errata NOP
  4417  000280  50F5               	movf	tablat,w,c
  4418  000282  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  4419  000284  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  4420  000286  5049               	movf	??_vfpfcnvrt^0,w,c
  4421  000288  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4422  00028A  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  4423  00028C  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4424  00028E  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  4425  000290  E10B               	bnz	u5280
  4426  000292  0E0A               	movlw	10
  4427  000294  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4428  000296  A0D8               	btfss	status,0,c
  4429  000298  EF50  F001         	goto	u5281
  4430  00029C  EF54  F001         	goto	u5280
  4431  0002A0                     u5281:
  4432  0002A0  FFFF               	dw	65535	; assembler added errata NOP
  4433  0002A2  0E01               	movlw	1
  4434  0002A4  EF56  F001         	goto	u5290
  4435  0002A8                     u5280:
  4436  0002A8  FFFF               	dw	65535	; assembler added errata NOP
  4437  0002AA  0E00               	movlw	0
  4438  0002AC                     u5290:
  4439  0002AC  FFFF               	dw	65535	; assembler added errata NOP
  4440  0002AE  6E51               	movwf	_vfpfcnvrt$1717^0,c
  4441  0002B0  6A52               	clrf	(_vfpfcnvrt$1717+1)^0,c
  4442  0002B2  5051               	movf	_vfpfcnvrt$1717^0,w,c
  4443  0002B4  1052               	iorwf	(_vfpfcnvrt$1717+1)^0,w,c
  4444  0002B6  A4D8               	btfss	status,2,c
  4445  0002B8  EF60  F001         	goto	u5301
  4446  0002BC  EF63  F001         	goto	u5300
  4447  0002C0                     u5301:
  4448  0002C0  FFFF               	dw	65535	; assembler added errata NOP
  4449  0002C2  EF29  F001         	goto	l4511
  4450  0002C6                     u5300:
  4451  0002C6                     l4519:
  4452  0002C6  FFFF               	dw	65535	; assembler added errata NOP
  4453                           
  4454                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  4455  0002C8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4456  0002CC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4457  0002D0  CFDE FFF6          	movff	postinc2,tblptrl
  4458  0002D4  CFDD FFF7          	movff	postdec2,tblptrh
  4459  0002D8                     	if	0	;tblptru may be non-zero
  4460  0002D8                     	endif
  4461  0002D8                     	if	0	;tblptru may be non-zero
  4462  0002D8                     	endif
  4463  0002D8  0008               	tblrd		*
  4464  0002DA  FFFF               	dw	65535	; errata NOP
  4465  0002DC  50F5               	movf	tablat,w,c
  4466  0002DE  0A2E               	xorlw	46
  4467  0002E0  A4D8               	btfss	status,2,c
  4468  0002E2  EF75  F001         	goto	u5311
  4469  0002E6  EF78  F001         	goto	u5310
  4470  0002EA                     u5311:
  4471  0002EA  FFFF               	dw	65535	; assembler added errata NOP
  4472  0002EC  EF02  F002         	goto	l4539
  4473  0002F0                     u5310:
  4474  0002F0  FFFF               	dw	65535	; assembler added errata NOP
  4475  0002F2                     
  4476                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  4477  0002F2  0E00               	movlw	0
  4478  0002F4  0100               	movlb	0	; () banked
  4479  0002F6  6F89               	movwf	(_prec+1)& (0+255),b
  4480  0002F8  0E00               	movlw	0
  4481  0002FA  6F88               	movwf	_prec& (0+255),b
  4482  0002FC                     
  4483                           ; BSR set to: 0
  4484                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  4485  0002FC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4486  000300  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4487  000304  2ADE               	incf	postinc2,f,c
  4488  000306  0E00               	movlw	0
  4489  000308  22DD               	addwfc	postdec2,f,c
  4490  00030A                     
  4491                           ; BSR set to: 0
  4492                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  4493  00030A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4494  00030E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4495  000312  CFDE FFF6          	movff	postinc2,tblptrl
  4496  000316  CFDD FFF7          	movff	postdec2,tblptrh
  4497  00031A                     	if	0	;tblptru may be non-zero
  4498  00031A                     	endif
  4499  00031A                     	if	0	;tblptru may be non-zero
  4500  00031A                     	endif
  4501  00031A  0008               	tblrd		*
  4502  00031C  FFFF               	dw	65535	; errata NOP
  4503  00031E  50F5               	movf	tablat,w,c
  4504  000320  0A2A               	xorlw	42
  4505  000322  A4D8               	btfss	status,2,c
  4506  000324  EF96  F001         	goto	u5321
  4507  000328  EF99  F001         	goto	u5320
  4508  00032C                     u5321:
  4509  00032C  FFFF               	dw	65535	; assembler added errata NOP
  4510  00032E  EFB7  F001         	goto	l4529
  4511  000332                     u5320:
  4512  000332  FFFF               	dw	65535	; assembler added errata NOP
  4513  000334                     
  4514                           ; BSR set to: 0
  4515                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  4516  000334  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4517  000338  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4518  00033C  2ADE               	incf	postinc2,f,c
  4519  00033E  0E00               	movlw	0
  4520  000340  22DD               	addwfc	postdec2,f,c
  4521                           
  4522                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4523  000342  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4524  000346  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4525  00034A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4526  00034E  0E02               	movlw	2
  4527  000350  26DE               	addwf	postinc2,f,c
  4528  000352  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4529  000356  0E00               	movlw	0
  4530  000358  22DD               	addwfc	postdec2,f,c
  4531  00035A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4532  00035E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4533  000362  CFDE F088          	movff	postinc2,_prec
  4534  000366  CFDD F089          	movff	postdec2,_prec+1
  4535                           
  4536                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  4537  00036A  EF02  F002         	goto	l4539
  4538  00036E                     l4529:
  4539  00036E  FFFF               	dw	65535	; assembler added errata NOP
  4540                           
  4541                           ; BSR set to: 0
  4542                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  4543  000370  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4544  000374  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4545  000378  CFDE F008          	movff	postinc2,atoi@s
  4546  00037C  CFDD F009          	movff	postdec2,atoi@s+1
  4547  000380  EC42  F03E         	call	_atoi	;wreg free
  4548  000384  C008  F088         	movff	?_atoi,_prec
  4549  000388  C009  F089         	movff	?_atoi+1,_prec+1
  4550                           
  4551                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4552  00038C  EFD0  F001         	goto	l4533
  4553  000390                     l4531:
  4554  000390  FFFF               	dw	65535	; assembler added errata NOP
  4555                           
  4556                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  4557  000392  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4558  000396  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4559  00039A  2ADE               	incf	postinc2,f,c
  4560  00039C  0E00               	movlw	0
  4561  00039E  22DD               	addwfc	postdec2,f,c
  4562  0003A0                     l4533:
  4563  0003A0  FFFF               	dw	65535	; assembler added errata NOP
  4564  0003A2  0ED0               	movlw	208
  4565  0003A4  6E49               	movwf	??_vfpfcnvrt^0,c
  4566  0003A6  0EFF               	movlw	255
  4567  0003A8  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  4568  0003AA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4569  0003AE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4570  0003B2  CFDE FFF6          	movff	postinc2,tblptrl
  4571  0003B6  CFDD FFF7          	movff	postdec2,tblptrh
  4572  0003BA                     	if	0	;tblptru may be non-zero
  4573  0003BA                     	endif
  4574  0003BA                     	if	0	;tblptru may be non-zero
  4575  0003BA                     	endif
  4576  0003BA  0008               	tblrd		*
  4577  0003BC  FFFF               	dw	65535	; errata NOP
  4578  0003BE  50F5               	movf	tablat,w,c
  4579  0003C0  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  4580  0003C2  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  4581  0003C4  5049               	movf	??_vfpfcnvrt^0,w,c
  4582  0003C6  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4583  0003C8  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  4584  0003CA  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4585  0003CC  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  4586  0003CE  E10B               	bnz	u5330
  4587  0003D0  0E0A               	movlw	10
  4588  0003D2  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4589  0003D4  A0D8               	btfss	status,0,c
  4590  0003D6  EFEF  F001         	goto	u5331
  4591  0003DA  EFF3  F001         	goto	u5330
  4592  0003DE                     u5331:
  4593  0003DE  FFFF               	dw	65535	; assembler added errata NOP
  4594  0003E0  0E01               	movlw	1
  4595  0003E2  EFF5  F001         	goto	u5340
  4596  0003E6                     u5330:
  4597  0003E6  FFFF               	dw	65535	; assembler added errata NOP
  4598  0003E8  0E00               	movlw	0
  4599  0003EA                     u5340:
  4600  0003EA  FFFF               	dw	65535	; assembler added errata NOP
  4601  0003EC  6E53               	movwf	_vfpfcnvrt$1718^0,c
  4602  0003EE  6A54               	clrf	(_vfpfcnvrt$1718+1)^0,c
  4603  0003F0  5053               	movf	_vfpfcnvrt$1718^0,w,c
  4604  0003F2  1054               	iorwf	(_vfpfcnvrt$1718+1)^0,w,c
  4605  0003F4  A4D8               	btfss	status,2,c
  4606  0003F6  EFFF  F001         	goto	u5351
  4607  0003FA  EF02  F002         	goto	u5350
  4608  0003FE                     u5351:
  4609  0003FE  FFFF               	dw	65535	; assembler added errata NOP
  4610  000400  EFC8  F001         	goto	l4531
  4611  000404                     u5350:
  4612  000404                     l4539:
  4613  000404  FFFF               	dw	65535	; assembler added errata NOP
  4614                           
  4615                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 792:         if (
      +                          *fmt[0] == 'c') {
  4616  000406  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4617  00040A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4618  00040E  CFDE FFF6          	movff	postinc2,tblptrl
  4619  000412  CFDD FFF7          	movff	postdec2,tblptrh
  4620  000416                     	if	0	;tblptru may be non-zero
  4621  000416                     	endif
  4622  000416                     	if	0	;tblptru may be non-zero
  4623  000416                     	endif
  4624  000416  0008               	tblrd		*
  4625  000418  FFFF               	dw	65535	; errata NOP
  4626  00041A  50F5               	movf	tablat,w,c
  4627  00041C  0A63               	xorlw	99
  4628  00041E  A4D8               	btfss	status,2,c
  4629  000420  EF14  F002         	goto	u5361
  4630  000424  EF17  F002         	goto	u5360
  4631  000428                     u5361:
  4632  000428  FFFF               	dw	65535	; assembler added errata NOP
  4633  00042A  EF3F  F002         	goto	l4547
  4634  00042E                     u5360:
  4635  00042E  FFFF               	dw	65535	; assembler added errata NOP
  4636  000430                     
  4637                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 793:             
      +                          ++*fmt;
  4638  000430  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4639  000434  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4640  000438  2ADE               	incf	postinc2,f,c
  4641  00043A  0E00               	movlw	0
  4642  00043C  22DD               	addwfc	postdec2,f,c
  4643                           
  4644                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 794:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4645  00043E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4646  000442  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4647  000446  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4648  00044A  0E02               	movlw	2
  4649  00044C  26DE               	addwf	postinc2,f,c
  4650  00044E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4651  000452  0E00               	movlw	0
  4652  000454  22DD               	addwfc	postdec2,f,c
  4653  000456  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4654  00045A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4655  00045E  50DF               	movf	indf2,w,c
  4656  000460  6E5F               	movwf	vfpfcnvrt@c^0,c
  4657  000462                     
  4658                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 795:             
      +                          return ctoa(fp, c);
  4659  000462  C043  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  4660  000466  C044  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  4661  00046A  C05F  F01E         	movff	vfpfcnvrt@c,ctoa@c
  4662  00046E  ECE3  F033         	call	_ctoa	;wreg free
  4663  000472  C01C  F043         	movff	?_ctoa,?_vfpfcnvrt
  4664  000476  C01D  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  4665  00047A  EF2E  F00A         	goto	l1340
  4666  00047E                     l4547:
  4667  00047E  FFFF               	dw	65535	; assembler added errata NOP
  4668                           
  4669                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 802:         if (
      +                          !strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi", ((s
      +                          izeof("hhi")/sizeof("hhi"[0]))-1))) {
  4670  000480  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4671  000484  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4672  000488  CFDE F001          	movff	postinc2,strncmp@_l
  4673  00048C  CFDD F002          	movff	postdec2,strncmp@_l+1
  4674  000490  0ECF               	movlw	low STR_14
  4675  000492  6E03               	movwf	strncmp@_r^0,c
  4676  000494  0E7F               	movlw	high STR_14
  4677  000496  6E04               	movwf	(strncmp@_r+1)^0,c
  4678  000498  0E00               	movlw	0
  4679  00049A  6E06               	movwf	(strncmp@n+1)^0,c
  4680  00049C  0E03               	movlw	3
  4681  00049E  6E05               	movwf	strncmp@n^0,c
  4682  0004A0  ECF5  F039         	call	_strncmp	;wreg free
  4683  0004A4  5001               	movf	?_strncmp^0,w,c
  4684  0004A6  1002               	iorwf	(?_strncmp+1)^0,w,c
  4685  0004A8  B4D8               	btfsc	status,2,c
  4686  0004AA  EF59  F002         	goto	u5371
  4687  0004AE  EF5C  F002         	goto	u5370
  4688  0004B2                     u5371:
  4689  0004B2  FFFF               	dw	65535	; assembler added errata NOP
  4690  0004B4  EF79  F002         	goto	l4551
  4691  0004B8                     u5370:
  4692  0004B8  FFFF               	dw	65535	; assembler added errata NOP
  4693  0004BA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4694  0004BE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4695  0004C2  CFDE F001          	movff	postinc2,strncmp@_l
  4696  0004C6  CFDD F002          	movff	postdec2,strncmp@_l+1
  4697  0004CA  0ED3               	movlw	low STR_18
  4698  0004CC  6E03               	movwf	strncmp@_r^0,c
  4699  0004CE  0E7F               	movlw	high STR_18
  4700  0004D0  6E04               	movwf	(strncmp@_r+1)^0,c
  4701  0004D2  0E00               	movlw	0
  4702  0004D4  6E06               	movwf	(strncmp@n+1)^0,c
  4703  0004D6  0E03               	movlw	3
  4704  0004D8  6E05               	movwf	strncmp@n^0,c
  4705  0004DA  ECF5  F039         	call	_strncmp	;wreg free
  4706  0004DE  5001               	movf	?_strncmp^0,w,c
  4707  0004E0  1002               	iorwf	(?_strncmp+1)^0,w,c
  4708  0004E2  A4D8               	btfss	status,2,c
  4709  0004E4  EF76  F002         	goto	u5381
  4710  0004E8  EF79  F002         	goto	u5380
  4711  0004EC                     u5381:
  4712  0004EC  FFFF               	dw	65535	; assembler added errata NOP
  4713  0004EE  EFBB  F002         	goto	l4557
  4714  0004F2                     u5380:
  4715  0004F2                     l4551:
  4716  0004F2  FFFF               	dw	65535	; assembler added errata NOP
  4717                           
  4718                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 803: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 805:             *fmt += ((si
      +                          zeof("hhd")/sizeof("hhd"[0]))-1);
  4719  0004F4  0E03               	movlw	3
  4720  0004F6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4721  0004FA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4722  0004FE  26DE               	addwf	postinc2,f,c
  4723  000500  0E00               	movlw	0
  4724  000502  22DD               	addwfc	postdec2,f,c
  4725                           
  4726                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 806:             
      +                          ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4727  000504  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4728  000508  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4729  00050C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4730  000510  0E02               	movlw	2
  4731  000512  26DE               	addwf	postinc2,f,c
  4732  000514  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4733  000518  0E00               	movlw	0
  4734  00051A  22DD               	addwfc	postdec2,f,c
  4735  00051C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4736  000520  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4737  000524  50DF               	movf	indf2,w,c
  4738  000526  6E55               	movwf	vfpfcnvrt@ll^0,c
  4739  000528  0E00               	movlw	0
  4740  00052A  BE55               	btfsc	vfpfcnvrt@ll^0,7,c
  4741  00052C  0EFF               	movlw	-1
  4742  00052E  6E56               	movwf	(vfpfcnvrt@ll+1)^0,c
  4743  000530  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  4744  000532  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  4745  000534  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  4746  000536  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  4747  000538  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  4748  00053A  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  4749  00053C                     l4553:
  4750  00053C  FFFF               	dw	65535	; assembler added errata NOP
  4751                           
  4752                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 808:             
      +                          return dtoa(fp, ll);
  4753  00053E  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  4754  000542  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4755  000546  C055  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  4756  00054A  C056  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4757  00054E  C057  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4758  000552  C058  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4759  000556  C059  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4760  00055A  C05A  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4761  00055E  C05B  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4762  000562  C05C  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4763  000566  ECE2  F017         	call	_dtoa	;wreg free
  4764  00056A  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  4765  00056E  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4766  000572  EF2E  F00A         	goto	l1340
  4767  000576                     l4557:
  4768  000576  FFFF               	dw	65535	; assembler added errata NOP
  4769                           
  4770                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          !strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", ((sizeo
      +                          f("hi")/sizeof("hi"[0]))-1))) {
  4771  000578  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4772  00057C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4773  000580  CFDE F001          	movff	postinc2,strncmp@_l
  4774  000584  CFDD F002          	movff	postdec2,strncmp@_l+1
  4775  000588  0ED0               	movlw	low (STR_14+1)
  4776  00058A  6E03               	movwf	strncmp@_r^0,c
  4777  00058C  0E7F               	movlw	high (STR_14+1)
  4778  00058E  6E04               	movwf	(strncmp@_r+1)^0,c
  4779  000590  0E00               	movlw	0
  4780  000592  6E06               	movwf	(strncmp@n+1)^0,c
  4781  000594  0E02               	movlw	2
  4782  000596  6E05               	movwf	strncmp@n^0,c
  4783  000598  ECF5  F039         	call	_strncmp	;wreg free
  4784  00059C  5001               	movf	?_strncmp^0,w,c
  4785  00059E  1002               	iorwf	(?_strncmp+1)^0,w,c
  4786  0005A0  B4D8               	btfsc	status,2,c
  4787  0005A2  EFD5  F002         	goto	u5391
  4788  0005A6  EFD8  F002         	goto	u5390
  4789  0005AA                     u5391:
  4790  0005AA  FFFF               	dw	65535	; assembler added errata NOP
  4791  0005AC  EFF5  F002         	goto	l4561
  4792  0005B0                     u5390:
  4793  0005B0  FFFF               	dw	65535	; assembler added errata NOP
  4794  0005B2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4795  0005B6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4796  0005BA  CFDE F001          	movff	postinc2,strncmp@_l
  4797  0005BE  CFDD F002          	movff	postdec2,strncmp@_l+1
  4798  0005C2  0ED4               	movlw	low (STR_18+1)
  4799  0005C4  6E03               	movwf	strncmp@_r^0,c
  4800  0005C6  0E7F               	movlw	high (STR_18+1)
  4801  0005C8  6E04               	movwf	(strncmp@_r+1)^0,c
  4802  0005CA  0E00               	movlw	0
  4803  0005CC  6E06               	movwf	(strncmp@n+1)^0,c
  4804  0005CE  0E02               	movlw	2
  4805  0005D0  6E05               	movwf	strncmp@n^0,c
  4806  0005D2  ECF5  F039         	call	_strncmp	;wreg free
  4807  0005D6  5001               	movf	?_strncmp^0,w,c
  4808  0005D8  1002               	iorwf	(?_strncmp+1)^0,w,c
  4809  0005DA  A4D8               	btfss	status,2,c
  4810  0005DC  EFF2  F002         	goto	u5401
  4811  0005E0  EFF5  F002         	goto	u5400
  4812  0005E4                     u5401:
  4813  0005E4  FFFF               	dw	65535	; assembler added errata NOP
  4814  0005E6  EF1D  F003         	goto	l4567
  4815  0005EA                     u5400:
  4816  0005EA                     l4561:
  4817  0005EA  FFFF               	dw	65535	; assembler added errata NOP
  4818                           
  4819                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 815: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 817:             *fmt += ((si
      +                          zeof("hd")/sizeof("hd"[0]))-1);
  4820  0005EC  0E02               	movlw	2
  4821  0005EE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4822  0005F2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4823  0005F6  26DE               	addwf	postinc2,f,c
  4824  0005F8  0E00               	movlw	0
  4825  0005FA  22DD               	addwfc	postdec2,f,c
  4826                           
  4827                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 818:             
      +                          ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4828  0005FC  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4829  000600  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4830  000604  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4831  000608  0E02               	movlw	2
  4832  00060A  26DE               	addwf	postinc2,f,c
  4833  00060C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4834  000610  0E00               	movlw	0
  4835  000612  22DD               	addwfc	postdec2,f,c
  4836  000614  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4837  000618  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4838  00061C  CFDE F055          	movff	postinc2,vfpfcnvrt@ll
  4839  000620  CFDD F056          	movff	postdec2,vfpfcnvrt@ll+1
  4840  000624  0E00               	movlw	0
  4841  000626  BE56               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  4842  000628  0EFF               	movlw	-1
  4843  00062A  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  4844  00062C  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  4845  00062E  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  4846  000630  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  4847  000632  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  4848  000634  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  4849  000636  EF9E  F002         	goto	l4553
  4850  00063A                     l4567:
  4851  00063A  FFFF               	dw	65535	; assembler added errata NOP
  4852                           
  4853                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4854  00063C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4855  000640  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4856  000644  CFDE FFF6          	movff	postinc2,tblptrl
  4857  000648  CFDD FFF7          	movff	postdec2,tblptrh
  4858  00064C                     	if	0	;tblptru may be non-zero
  4859  00064C                     	endif
  4860  00064C                     	if	0	;tblptru may be non-zero
  4861  00064C                     	endif
  4862  00064C  0008               	tblrd		*
  4863  00064E  FFFF               	dw	65535	; errata NOP
  4864  000650  50F5               	movf	tablat,w,c
  4865  000652  0A64               	xorlw	100
  4866  000654  B4D8               	btfsc	status,2,c
  4867  000656  EF2F  F003         	goto	u5411
  4868  00065A  EF32  F003         	goto	u5410
  4869  00065E                     u5411:
  4870  00065E  FFFF               	dw	65535	; assembler added errata NOP
  4871  000660  EF47  F003         	goto	l4571
  4872  000664                     u5410:
  4873  000664  FFFF               	dw	65535	; assembler added errata NOP
  4874  000666  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4875  00066A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4876  00066E  CFDE FFF6          	movff	postinc2,tblptrl
  4877  000672  CFDD FFF7          	movff	postdec2,tblptrh
  4878  000676                     	if	0	;tblptru may be non-zero
  4879  000676                     	endif
  4880  000676                     	if	0	;tblptru may be non-zero
  4881  000676                     	endif
  4882  000676  0008               	tblrd		*
  4883  000678  FFFF               	dw	65535	; errata NOP
  4884  00067A  50F5               	movf	tablat,w,c
  4885  00067C  0A69               	xorlw	105
  4886  00067E  A4D8               	btfss	status,2,c
  4887  000680  EF44  F003         	goto	u5421
  4888  000684  EF47  F003         	goto	u5420
  4889  000688                     u5421:
  4890  000688  FFFF               	dw	65535	; assembler added errata NOP
  4891  00068A  EF6E  F003         	goto	l4577
  4892  00068E                     u5420:
  4893  00068E                     l4571:
  4894  00068E  FFFF               	dw	65535	; assembler added errata NOP
  4895                           
  4896                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  4897  000690  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4898  000694  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4899  000698  2ADE               	incf	postinc2,f,c
  4900  00069A  0E00               	movlw	0
  4901  00069C  22DD               	addwfc	postdec2,f,c
  4902                           
  4903                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4904  00069E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4905  0006A2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4906  0006A6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4907  0006AA  0E02               	movlw	2
  4908  0006AC  26DE               	addwf	postinc2,f,c
  4909  0006AE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4910  0006B2  0E00               	movlw	0
  4911  0006B4  22DD               	addwfc	postdec2,f,c
  4912  0006B6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4913  0006BA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4914  0006BE  CFDE F055          	movff	postinc2,vfpfcnvrt@ll
  4915  0006C2  CFDD F056          	movff	postdec2,vfpfcnvrt@ll+1
  4916  0006C6  0E00               	movlw	0
  4917  0006C8  BE56               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  4918  0006CA  0EFF               	movlw	-1
  4919  0006CC  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  4920  0006CE  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  4921  0006D0  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  4922  0006D2  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  4923  0006D4  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  4924  0006D6  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  4925  0006D8  EF9E  F002         	goto	l4553
  4926  0006DC                     l4577:
  4927  0006DC  FFFF               	dw	65535	; assembler added errata NOP
  4928                           
  4929                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 883:         if (
      +                          !strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", ((sizeo
      +                          f("zi")/sizeof("zi"[0]))-1))) {
  4930  0006DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4931  0006E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4932  0006E6  CFDE F001          	movff	postinc2,strncmp@_l
  4933  0006EA  CFDD F002          	movff	postdec2,strncmp@_l+1
  4934  0006EE  0EEA               	movlw	low STR_32
  4935  0006F0  6E03               	movwf	strncmp@_r^0,c
  4936  0006F2  0E7F               	movlw	high STR_32
  4937  0006F4  6E04               	movwf	(strncmp@_r+1)^0,c
  4938  0006F6  0E00               	movlw	0
  4939  0006F8  6E06               	movwf	(strncmp@n+1)^0,c
  4940  0006FA  0E02               	movlw	2
  4941  0006FC  6E05               	movwf	strncmp@n^0,c
  4942  0006FE  ECF5  F039         	call	_strncmp	;wreg free
  4943  000702  5001               	movf	?_strncmp^0,w,c
  4944  000704  1002               	iorwf	(?_strncmp+1)^0,w,c
  4945  000706  B4D8               	btfsc	status,2,c
  4946  000708  EF88  F003         	goto	u5431
  4947  00070C  EF8B  F003         	goto	u5430
  4948  000710                     u5431:
  4949  000710  FFFF               	dw	65535	; assembler added errata NOP
  4950  000712  EFA8  F003         	goto	l4581
  4951  000716                     u5430:
  4952  000716  FFFF               	dw	65535	; assembler added errata NOP
  4953  000718  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4954  00071C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4955  000720  CFDE F001          	movff	postinc2,strncmp@_l
  4956  000724  CFDD F002          	movff	postdec2,strncmp@_l+1
  4957  000728  0EED               	movlw	low STR_36
  4958  00072A  6E03               	movwf	strncmp@_r^0,c
  4959  00072C  0E7F               	movlw	high STR_36
  4960  00072E  6E04               	movwf	(strncmp@_r+1)^0,c
  4961  000730  0E00               	movlw	0
  4962  000732  6E06               	movwf	(strncmp@n+1)^0,c
  4963  000734  0E02               	movlw	2
  4964  000736  6E05               	movwf	strncmp@n^0,c
  4965  000738  ECF5  F039         	call	_strncmp	;wreg free
  4966  00073C  5001               	movf	?_strncmp^0,w,c
  4967  00073E  1002               	iorwf	(?_strncmp+1)^0,w,c
  4968  000740  A4D8               	btfss	status,2,c
  4969  000742  EFA5  F003         	goto	u5441
  4970  000746  EFA8  F003         	goto	u5440
  4971  00074A                     u5441:
  4972  00074A  FFFF               	dw	65535	; assembler added errata NOP
  4973  00074C  EFD1  F003         	goto	l4587
  4974  000750                     u5440:
  4975  000750                     l4581:
  4976  000750  FFFF               	dw	65535	; assembler added errata NOP
  4977                           
  4978                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 884: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 886:             *fmt += ((si
      +                          zeof("zd")/sizeof("zd"[0]))-1);
  4979  000752  0E02               	movlw	2
  4980  000754  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4981  000758  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4982  00075C  26DE               	addwf	postinc2,f,c
  4983  00075E  0E00               	movlw	0
  4984  000760  22DD               	addwfc	postdec2,f,c
  4985                           
  4986                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 887:             
      +                          ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4987  000762  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4988  000766  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4989  00076A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4990  00076E  0E02               	movlw	2
  4991  000770  26DE               	addwf	postinc2,f,c
  4992  000772  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4993  000776  0E00               	movlw	0
  4994  000778  22DD               	addwfc	postdec2,f,c
  4995  00077A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4996  00077E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4997  000782  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4998  000786  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4999  00078A  C04B  F055         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  5000  00078E  C04C  F056         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  5001  000792  6A57               	clrf	(vfpfcnvrt@ll+2)^0,c
  5002  000794  6A58               	clrf	(vfpfcnvrt@ll+3)^0,c
  5003  000796  6A59               	clrf	(vfpfcnvrt@ll+4)^0,c
  5004  000798  6A5A               	clrf	(vfpfcnvrt@ll+5)^0,c
  5005  00079A  6A5B               	clrf	(vfpfcnvrt@ll+6)^0,c
  5006  00079C  6A5C               	clrf	(vfpfcnvrt@ll+7)^0,c
  5007  00079E  EF9E  F002         	goto	l4553
  5008  0007A2                     l4587:
  5009  0007A2  FFFF               	dw	65535	; assembler added errata NOP
  5010                           
  5011                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 969:         if (
      +                          !strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  5012  0007A4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5013  0007A8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5014  0007AC  CFDE F001          	movff	postinc2,strncmp@_l
  5015  0007B0  CFDD F002          	movff	postdec2,strncmp@_l+1
  5016  0007B4  0EDB               	movlw	low STR_41
  5017  0007B6  6E03               	movwf	strncmp@_r^0,c
  5018  0007B8  0E7F               	movlw	high STR_41
  5019  0007BA  6E04               	movwf	(strncmp@_r+1)^0,c
  5020  0007BC  0E00               	movlw	0
  5021  0007BE  6E06               	movwf	(strncmp@n+1)^0,c
  5022  0007C0  0E03               	movlw	3
  5023  0007C2  6E05               	movwf	strncmp@n^0,c
  5024  0007C4  ECF5  F039         	call	_strncmp	;wreg free
  5025  0007C8  5001               	movf	?_strncmp^0,w,c
  5026  0007CA  1002               	iorwf	(?_strncmp+1)^0,w,c
  5027  0007CC  A4D8               	btfss	status,2,c
  5028  0007CE  EFEB  F003         	goto	u5451
  5029  0007D2  EFEE  F003         	goto	u5450
  5030  0007D6                     u5451:
  5031  0007D6  FFFF               	dw	65535	; assembler added errata NOP
  5032  0007D8  EF2F  F004         	goto	l4595
  5033  0007DC                     u5450:
  5034  0007DC  FFFF               	dw	65535	; assembler added errata NOP
  5035  0007DE                     
  5036                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 971:             
      +                          *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  5037  0007DE  0E03               	movlw	3
  5038  0007E0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5039  0007E4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5040  0007E8  26DE               	addwf	postinc2,f,c
  5041  0007EA  0E00               	movlw	0
  5042  0007EC  22DD               	addwfc	postdec2,f,c
  5043                           
  5044                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 972:             
      +                          llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5045  0007EE  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5046  0007F2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5047  0007F6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5048  0007FA  0E02               	movlw	2
  5049  0007FC  26DE               	addwf	postinc2,f,c
  5050  0007FE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5051  000802  0E00               	movlw	0
  5052  000804  22DD               	addwfc	postdec2,f,c
  5053  000806  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5054  00080A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5055  00080E  50DF               	movf	indf2,w,c
  5056  000810  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  5057  000812  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  5058  000814  6E60               	movwf	vfpfcnvrt@llu^0,c
  5059  000816  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  5060  000818  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5061  00081A  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5062  00081C  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5063  00081E  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5064  000820  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5065  000822  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5066  000824                     l4591:
  5067  000824  FFFF               	dw	65535	; assembler added errata NOP
  5068                           
  5069                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 974:             
      +                          return otoa(fp, llu);
  5070  000826  C043  F01C         	movff	vfpfcnvrt@fp,otoa@fp
  5071  00082A  C044  F01D         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  5072  00082E  C060  F01E         	movff	vfpfcnvrt@llu,otoa@d
  5073  000832  C061  F01F         	movff	vfpfcnvrt@llu+1,otoa@d+1
  5074  000836  C062  F020         	movff	vfpfcnvrt@llu+2,otoa@d+2
  5075  00083A  C063  F021         	movff	vfpfcnvrt@llu+3,otoa@d+3
  5076  00083E  C064  F022         	movff	vfpfcnvrt@llu+4,otoa@d+4
  5077  000842  C065  F023         	movff	vfpfcnvrt@llu+5,otoa@d+5
  5078  000846  C066  F024         	movff	vfpfcnvrt@llu+6,otoa@d+6
  5079  00084A  C067  F025         	movff	vfpfcnvrt@llu+7,otoa@d+7
  5080  00084E  EC2A  F01C         	call	_otoa	;wreg free
  5081  000852  C01C  F043         	movff	?_otoa,?_vfpfcnvrt
  5082  000856  C01D  F044         	movff	?_otoa+1,?_vfpfcnvrt+1
  5083  00085A  EF2E  F00A         	goto	l1340
  5084  00085E                     l4595:
  5085  00085E  FFFF               	dw	65535	; assembler added errata NOP
  5086                           
  5087                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 980:         if (
      +                          !strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  5088  000860  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5089  000864  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5090  000868  CFDE F001          	movff	postinc2,strncmp@_l
  5091  00086C  CFDD F002          	movff	postdec2,strncmp@_l+1
  5092  000870  0EDC               	movlw	low (STR_41+1)
  5093  000872  6E03               	movwf	strncmp@_r^0,c
  5094  000874  0E7F               	movlw	high (STR_41+1)
  5095  000876  6E04               	movwf	(strncmp@_r+1)^0,c
  5096  000878  0E00               	movlw	0
  5097  00087A  6E06               	movwf	(strncmp@n+1)^0,c
  5098  00087C  0E02               	movlw	2
  5099  00087E  6E05               	movwf	strncmp@n^0,c
  5100  000880  ECF5  F039         	call	_strncmp	;wreg free
  5101  000884  5001               	movf	?_strncmp^0,w,c
  5102  000886  1002               	iorwf	(?_strncmp+1)^0,w,c
  5103  000888  A4D8               	btfss	status,2,c
  5104  00088A  EF49  F004         	goto	u5461
  5105  00088E  EF4C  F004         	goto	u5460
  5106  000892                     u5461:
  5107  000892  FFFF               	dw	65535	; assembler added errata NOP
  5108  000894  EF75  F004         	goto	l4603
  5109  000898                     u5460:
  5110  000898  FFFF               	dw	65535	; assembler added errata NOP
  5111  00089A                     
  5112                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 982:             
      +                          *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  5113  00089A  0E02               	movlw	2
  5114  00089C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5115  0008A0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5116  0008A4  26DE               	addwf	postinc2,f,c
  5117  0008A6  0E00               	movlw	0
  5118  0008A8  22DD               	addwfc	postdec2,f,c
  5119                           
  5120                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 983:             
      +                          llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5121  0008AA  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5122  0008AE  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5123  0008B2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5124  0008B6  0E02               	movlw	2
  5125  0008B8  26DE               	addwf	postinc2,f,c
  5126  0008BA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5127  0008BE  0E00               	movlw	0
  5128  0008C0  22DD               	addwfc	postdec2,f,c
  5129  0008C2  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5130  0008C6  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5131  0008CA  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5132  0008CE  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5133  0008D2  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5134  0008D6  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5135  0008DA  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5136  0008DC  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5137  0008DE  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5138  0008E0  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5139  0008E2  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5140  0008E4  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5141  0008E6  EF12  F004         	goto	l4591
  5142  0008EA                     l4603:
  5143  0008EA  FFFF               	dw	65535	; assembler added errata NOP
  5144                           
  5145                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 990:         if (
      +                          *fmt[0] == 'o') {
  5146  0008EC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5147  0008F0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5148  0008F4  CFDE FFF6          	movff	postinc2,tblptrl
  5149  0008F8  CFDD FFF7          	movff	postdec2,tblptrh
  5150  0008FC                     	if	0	;tblptru may be non-zero
  5151  0008FC                     	endif
  5152  0008FC                     	if	0	;tblptru may be non-zero
  5153  0008FC                     	endif
  5154  0008FC  0008               	tblrd		*
  5155  0008FE  FFFF               	dw	65535	; errata NOP
  5156  000900  50F5               	movf	tablat,w,c
  5157  000902  0A6F               	xorlw	111
  5158  000904  A4D8               	btfss	status,2,c
  5159  000906  EF87  F004         	goto	u5471
  5160  00090A  EF8A  F004         	goto	u5470
  5161  00090E                     u5471:
  5162  00090E  FFFF               	dw	65535	; assembler added errata NOP
  5163  000910  EFB2  F004         	goto	l4611
  5164  000914                     u5470:
  5165  000914  FFFF               	dw	65535	; assembler added errata NOP
  5166  000916                     
  5167                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 992:             
      +                          ++*fmt;
  5168  000916  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5169  00091A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5170  00091E  2ADE               	incf	postinc2,f,c
  5171  000920  0E00               	movlw	0
  5172  000922  22DD               	addwfc	postdec2,f,c
  5173                           
  5174                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 993:             
      +                          llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int
      +                          )0));
  5175  000924  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5176  000928  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5177  00092C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5178  000930  0E02               	movlw	2
  5179  000932  26DE               	addwf	postinc2,f,c
  5180  000934  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5181  000938  0E00               	movlw	0
  5182  00093A  22DD               	addwfc	postdec2,f,c
  5183  00093C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5184  000940  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5185  000944  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5186  000948  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5187  00094C  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5188  000950  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5189  000954  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5190  000956  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5191  000958  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5192  00095A  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5193  00095C  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5194  00095E  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5195  000960  EF12  F004         	goto	l4591
  5196  000964                     l4611:
  5197  000964  FFFF               	dw	65535	; assembler added errata NOP
  5198                           
  5199                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1044:         if 
      +                          (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  5200  000966  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5201  00096A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5202  00096E  CFDE F001          	movff	postinc2,strncmp@_l
  5203  000972  CFDD F002          	movff	postdec2,strncmp@_l+1
  5204  000976  0EF3               	movlw	low STR_51
  5205  000978  6E03               	movwf	strncmp@_r^0,c
  5206  00097A  0E7F               	movlw	high STR_51
  5207  00097C  6E04               	movwf	(strncmp@_r+1)^0,c
  5208  00097E  0E00               	movlw	0
  5209  000980  6E06               	movwf	(strncmp@n+1)^0,c
  5210  000982  0E02               	movlw	2
  5211  000984  6E05               	movwf	strncmp@n^0,c
  5212  000986  ECF5  F039         	call	_strncmp	;wreg free
  5213  00098A  5001               	movf	?_strncmp^0,w,c
  5214  00098C  1002               	iorwf	(?_strncmp+1)^0,w,c
  5215  00098E  A4D8               	btfss	status,2,c
  5216  000990  EFCC  F004         	goto	u5481
  5217  000994  EFCF  F004         	goto	u5480
  5218  000998                     u5481:
  5219  000998  FFFF               	dw	65535	; assembler added errata NOP
  5220  00099A  EFF8  F004         	goto	l4619
  5221  00099E                     u5480:
  5222  00099E  FFFF               	dw	65535	; assembler added errata NOP
  5223  0009A0                     
  5224                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1046:            
      +                           *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  5225  0009A0  0E02               	movlw	2
  5226  0009A2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5227  0009A6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5228  0009AA  26DE               	addwf	postinc2,f,c
  5229  0009AC  0E00               	movlw	0
  5230  0009AE  22DD               	addwfc	postdec2,f,c
  5231                           
  5232                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1047:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5233  0009B0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5234  0009B4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5235  0009B8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5236  0009BC  0E02               	movlw	2
  5237  0009BE  26DE               	addwf	postinc2,f,c
  5238  0009C0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5239  0009C4  0E00               	movlw	0
  5240  0009C6  22DD               	addwfc	postdec2,f,c
  5241  0009C8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5242  0009CC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5243  0009D0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5244  0009D4  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5245  0009D8  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5246  0009DC  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5247  0009E0  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5248  0009E2  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5249  0009E4  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5250  0009E6  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5251  0009E8  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5252  0009EA  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5253  0009EC  EF12  F004         	goto	l4591
  5254  0009F0                     l4619:
  5255  0009F0  FFFF               	dw	65535	; assembler added errata NOP
  5256                           
  5257                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1058:         if 
      +                          (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  5258  0009F2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5259  0009F6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5260  0009FA  CFDE F001          	movff	postinc2,strncmp@_l
  5261  0009FE  CFDD F002          	movff	postdec2,strncmp@_l+1
  5262  000A02  0ED7               	movlw	low STR_56
  5263  000A04  6E03               	movwf	strncmp@_r^0,c
  5264  000A06  0E7F               	movlw	high STR_56
  5265  000A08  6E04               	movwf	(strncmp@_r+1)^0,c
  5266  000A0A  0E00               	movlw	0
  5267  000A0C  6E06               	movwf	(strncmp@n+1)^0,c
  5268  000A0E  0E03               	movlw	3
  5269  000A10  6E05               	movwf	strncmp@n^0,c
  5270  000A12  ECF5  F039         	call	_strncmp	;wreg free
  5271  000A16  5001               	movf	?_strncmp^0,w,c
  5272  000A18  1002               	iorwf	(?_strncmp+1)^0,w,c
  5273  000A1A  A4D8               	btfss	status,2,c
  5274  000A1C  EF12  F005         	goto	u5491
  5275  000A20  EF15  F005         	goto	u5490
  5276  000A24                     u5491:
  5277  000A24  FFFF               	dw	65535	; assembler added errata NOP
  5278  000A26  EF4B  F005         	goto	l4629
  5279  000A2A                     u5490:
  5280  000A2A  FFFF               	dw	65535	; assembler added errata NOP
  5281  000A2C                     
  5282                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1060:            
      +                           *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  5283  000A2C  0E03               	movlw	3
  5284  000A2E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5285  000A32  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5286  000A36  26DE               	addwf	postinc2,f,c
  5287  000A38  0E00               	movlw	0
  5288  000A3A  22DD               	addwfc	postdec2,f,c
  5289                           
  5290                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1061:            
      +                           vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5291  000A3C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5292  000A40  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5293  000A44  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5294  000A48  0E02               	movlw	2
  5295  000A4A  26DE               	addwf	postinc2,f,c
  5296  000A4C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5297  000A50  0E00               	movlw	0
  5298  000A52  22DD               	addwfc	postdec2,f,c
  5299  000A54  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5300  000A58  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5301  000A5C  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  5302  000A60  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  5303  000A64                     
  5304                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1062:            
      +                           *(char *)vp = (char)nout;
  5305  000A64  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  5306  000A68  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  5307  000A6C  6AF8               	clrf	tblptru,c
  5308  000A6E  0E05               	movlw	(high __ramtop+-1)
  5309  000A70  64F7               	cpfsgt	tblptrh,c
  5310  000A72  D004               	bra	u5507
  5311  000A74  C084  FFF5         	movff	_nout,tablat
  5312  000A78  000C               	tblwt		*
  5313  000A7A  D006               	bra	u5500
  5314  000A7C                     u5507:
  5315  000A7C  CFF6 FFE1          	movff	tblptrl,fsr1l
  5316  000A80  CFF7 FFE2          	movff	tblptrh,fsr1h
  5317  000A84  C084  FFE7         	movff	_nout,indf1
  5318  000A88                     u5500:
  5319  000A88                     l4625:
  5320  000A88  FFFF               	dw	65535	; assembler added errata NOP
  5321                           
  5322                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1063:            
      +                           return 0;
  5323  000A8A  0E00               	movlw	0
  5324  000A8C  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  5325  000A8E  0E00               	movlw	0
  5326  000A90  6E43               	movwf	?_vfpfcnvrt^0,c
  5327  000A92  EF2E  F00A         	goto	l1340
  5328  000A96                     l4629:
  5329  000A96  FFFF               	dw	65535	; assembler added errata NOP
  5330                           
  5331                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1068:         if 
      +                          (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  5332  000A98  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5333  000A9C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5334  000AA0  CFDE F001          	movff	postinc2,strncmp@_l
  5335  000AA4  CFDD F002          	movff	postdec2,strncmp@_l+1
  5336  000AA8  0ED8               	movlw	low (STR_56+1)
  5337  000AAA  6E03               	movwf	strncmp@_r^0,c
  5338  000AAC  0E7F               	movlw	high (STR_56+1)
  5339  000AAE  6E04               	movwf	(strncmp@_r+1)^0,c
  5340  000AB0  0E00               	movlw	0
  5341  000AB2  6E06               	movwf	(strncmp@n+1)^0,c
  5342  000AB4  0E02               	movlw	2
  5343  000AB6  6E05               	movwf	strncmp@n^0,c
  5344  000AB8  ECF5  F039         	call	_strncmp	;wreg free
  5345  000ABC  5001               	movf	?_strncmp^0,w,c
  5346  000ABE  1002               	iorwf	(?_strncmp+1)^0,w,c
  5347  000AC0  A4D8               	btfss	status,2,c
  5348  000AC2  EF65  F005         	goto	u5511
  5349  000AC6  EF68  F005         	goto	u5510
  5350  000ACA                     u5511:
  5351  000ACA  FFFF               	dw	65535	; assembler added errata NOP
  5352  000ACC  EF9E  F005         	goto	l4639
  5353  000AD0                     u5510:
  5354  000AD0  FFFF               	dw	65535	; assembler added errata NOP
  5355  000AD2                     
  5356                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1070:            
      +                           *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  5357  000AD2  0E02               	movlw	2
  5358  000AD4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5359  000AD8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5360  000ADC  26DE               	addwf	postinc2,f,c
  5361  000ADE  0E00               	movlw	0
  5362  000AE0  22DD               	addwfc	postdec2,f,c
  5363                           
  5364                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1071:            
      +                           vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  5365  000AE2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5366  000AE6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5367  000AEA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5368  000AEE  0E02               	movlw	2
  5369  000AF0  26DE               	addwf	postinc2,f,c
  5370  000AF2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5371  000AF6  0E00               	movlw	0
  5372  000AF8  22DD               	addwfc	postdec2,f,c
  5373  000AFA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5374  000AFE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5375  000B02  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  5376  000B06  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  5377  000B0A                     
  5378                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1072:            
      +                           *(short *)vp = (short)nout;
  5379  000B0A  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  5380  000B0E  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  5381  000B12  6AF8               	clrf	tblptru,c
  5382  000B14  0E05               	movlw	(high __ramtop+-1)
  5383  000B16  64F7               	cpfsgt	tblptrh,c
  5384  000B18  D007               	bra	u5527
  5385  000B1A  C084  FFF5         	movff	_nout,tablat
  5386  000B1E  000D               	tblwt		*+
  5387  000B20  C085  FFF5         	movff	_nout+1,tablat
  5388  000B24  000C               	tblwt		*
  5389  000B26  D008               	bra	u5520
  5390  000B28                     u5527:
  5391  000B28  CFF6 FFE1          	movff	tblptrl,fsr1l
  5392  000B2C  CFF7 FFE2          	movff	tblptrh,fsr1h
  5393  000B30  C084  FFE6         	movff	_nout,postinc1
  5394  000B34  C085  FFE7         	movff	_nout+1,indf1
  5395  000B38                     u5520:
  5396  000B38  EF44  F005         	goto	l4625
  5397  000B3C                     l4639:
  5398  000B3C  FFFF               	dw	65535	; assembler added errata NOP
  5399                           
  5400                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1077:         if 
      +                          (*fmt[0] == 'n') {
  5401  000B3E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5402  000B42  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5403  000B46  CFDE FFF6          	movff	postinc2,tblptrl
  5404  000B4A  CFDD FFF7          	movff	postdec2,tblptrh
  5405  000B4E                     	if	0	;tblptru may be non-zero
  5406  000B4E                     	endif
  5407  000B4E                     	if	0	;tblptru may be non-zero
  5408  000B4E                     	endif
  5409  000B4E  0008               	tblrd		*
  5410  000B50  FFFF               	dw	65535	; errata NOP
  5411  000B52  50F5               	movf	tablat,w,c
  5412  000B54  0A6E               	xorlw	110
  5413  000B56  A4D8               	btfss	status,2,c
  5414  000B58  EFB0  F005         	goto	u5531
  5415  000B5C  EFB3  F005         	goto	u5530
  5416  000B60                     u5531:
  5417  000B60  FFFF               	dw	65535	; assembler added errata NOP
  5418  000B62  EFE8  F005         	goto	l4649
  5419  000B66                     u5530:
  5420  000B66  FFFF               	dw	65535	; assembler added errata NOP
  5421  000B68                     
  5422                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1078:            
      +                           ++*fmt;
  5423  000B68  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5424  000B6C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5425  000B70  2ADE               	incf	postinc2,f,c
  5426  000B72  0E00               	movlw	0
  5427  000B74  22DD               	addwfc	postdec2,f,c
  5428                           
  5429                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1079:            
      +                           vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  5430  000B76  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5431  000B7A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5432  000B7E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5433  000B82  0E02               	movlw	2
  5434  000B84  26DE               	addwf	postinc2,f,c
  5435  000B86  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5436  000B8A  0E00               	movlw	0
  5437  000B8C  22DD               	addwfc	postdec2,f,c
  5438  000B8E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5439  000B92  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5440  000B96  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  5441  000B9A  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  5442  000B9E                     
  5443                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1080:            
      +                           *(int *)vp = nout;
  5444  000B9E  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  5445  000BA2  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  5446  000BA6  6AF8               	clrf	tblptru,c
  5447  000BA8  0E05               	movlw	(high __ramtop+-1)
  5448  000BAA  64F7               	cpfsgt	tblptrh,c
  5449  000BAC  D007               	bra	u5547
  5450  000BAE  C084  FFF5         	movff	_nout,tablat
  5451  000BB2  000D               	tblwt		*+
  5452  000BB4  C085  FFF5         	movff	_nout+1,tablat
  5453  000BB8  000C               	tblwt		*
  5454  000BBA  D008               	bra	u5540
  5455  000BBC                     u5547:
  5456  000BBC  CFF6 FFE1          	movff	tblptrl,fsr1l
  5457  000BC0  CFF7 FFE2          	movff	tblptrh,fsr1h
  5458  000BC4  C084  FFE6         	movff	_nout,postinc1
  5459  000BC8  C085  FFE7         	movff	_nout+1,indf1
  5460  000BCC                     u5540:
  5461  000BCC  EF44  F005         	goto	l4625
  5462  000BD0                     l4649:
  5463  000BD0  FFFF               	dw	65535	; assembler added errata NOP
  5464                           
  5465                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1125:         if 
      +                          (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  5466  000BD2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5467  000BD6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5468  000BDA  CFDE F001          	movff	postinc2,strncmp@_l
  5469  000BDE  CFDD F002          	movff	postdec2,strncmp@_l+1
  5470  000BE2  0EF0               	movlw	low STR_66
  5471  000BE4  6E03               	movwf	strncmp@_r^0,c
  5472  000BE6  0E7F               	movlw	high STR_66
  5473  000BE8  6E04               	movwf	(strncmp@_r+1)^0,c
  5474  000BEA  0E00               	movlw	0
  5475  000BEC  6E06               	movwf	(strncmp@n+1)^0,c
  5476  000BEE  0E02               	movlw	2
  5477  000BF0  6E05               	movwf	strncmp@n^0,c
  5478  000BF2  ECF5  F039         	call	_strncmp	;wreg free
  5479  000BF6  5001               	movf	?_strncmp^0,w,c
  5480  000BF8  1002               	iorwf	(?_strncmp+1)^0,w,c
  5481  000BFA  A4D8               	btfss	status,2,c
  5482  000BFC  EF02  F006         	goto	u5551
  5483  000C00  EF05  F006         	goto	u5550
  5484  000C04                     u5551:
  5485  000C04  FFFF               	dw	65535	; assembler added errata NOP
  5486  000C06  EF3B  F006         	goto	l4659
  5487  000C0A                     u5550:
  5488  000C0A  FFFF               	dw	65535	; assembler added errata NOP
  5489  000C0C                     
  5490                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1127:            
      +                           *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  5491  000C0C  0E02               	movlw	2
  5492  000C0E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5493  000C12  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5494  000C16  26DE               	addwf	postinc2,f,c
  5495  000C18  0E00               	movlw	0
  5496  000C1A  22DD               	addwfc	postdec2,f,c
  5497                           
  5498                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1128:            
      +                           vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  5499  000C1C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5500  000C20  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5501  000C24  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5502  000C28  0E02               	movlw	2
  5503  000C2A  26DE               	addwf	postinc2,f,c
  5504  000C2C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5505  000C30  0E00               	movlw	0
  5506  000C32  22DD               	addwfc	postdec2,f,c
  5507  000C34  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5508  000C38  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5509  000C3C  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  5510  000C40  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  5511  000C44                     
  5512                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1129:            
      +                           *(size_t *)vp = (size_t)nout;
  5513  000C44  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  5514  000C48  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  5515  000C4C  6AF8               	clrf	tblptru,c
  5516  000C4E  0E05               	movlw	(high __ramtop+-1)
  5517  000C50  64F7               	cpfsgt	tblptrh,c
  5518  000C52  D007               	bra	u5567
  5519  000C54  C084  FFF5         	movff	_nout,tablat
  5520  000C58  000D               	tblwt		*+
  5521  000C5A  C085  FFF5         	movff	_nout+1,tablat
  5522  000C5E  000C               	tblwt		*
  5523  000C60  D008               	bra	u5560
  5524  000C62                     u5567:
  5525  000C62  CFF6 FFE1          	movff	tblptrl,fsr1l
  5526  000C66  CFF7 FFE2          	movff	tblptrh,fsr1h
  5527  000C6A  C084  FFE6         	movff	_nout,postinc1
  5528  000C6E  C085  FFE7         	movff	_nout+1,indf1
  5529  000C72                     u5560:
  5530  000C72  EF44  F005         	goto	l4625
  5531  000C76                     l4659:
  5532  000C76  FFFF               	dw	65535	; assembler added errata NOP
  5533                           
  5534                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1138:         if 
      +                          (*fmt[0] == 'p') {
  5535  000C78  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5536  000C7C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5537  000C80  CFDE FFF6          	movff	postinc2,tblptrl
  5538  000C84  CFDD FFF7          	movff	postdec2,tblptrh
  5539  000C88                     	if	0	;tblptru may be non-zero
  5540  000C88                     	endif
  5541  000C88                     	if	0	;tblptru may be non-zero
  5542  000C88                     	endif
  5543  000C88  0008               	tblrd		*
  5544  000C8A  FFFF               	dw	65535	; errata NOP
  5545  000C8C  50F5               	movf	tablat,w,c
  5546  000C8E  0A70               	xorlw	112
  5547  000C90  A4D8               	btfss	status,2,c
  5548  000C92  EF4D  F006         	goto	u5571
  5549  000C96  EF50  F006         	goto	u5570
  5550  000C9A                     u5571:
  5551  000C9A  FFFF               	dw	65535	; assembler added errata NOP
  5552  000C9C  EF94  F006         	goto	l4667
  5553  000CA0                     u5570:
  5554  000CA0  FFFF               	dw	65535	; assembler added errata NOP
  5555  000CA2                     
  5556                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1140:            
      +                           ++*fmt;
  5557  000CA2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5558  000CA6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5559  000CAA  2ADE               	incf	postinc2,f,c
  5560  000CAC  0E00               	movlw	0
  5561  000CAE  22DD               	addwfc	postdec2,f,c
  5562                           
  5563                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1141:            
      +                           llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0));
  5564  000CB0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5565  000CB4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5566  000CB8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5567  000CBC  0E02               	movlw	2
  5568  000CBE  26DE               	addwf	postinc2,f,c
  5569  000CC0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5570  000CC4  0E00               	movlw	0
  5571  000CC6  22DD               	addwfc	postdec2,f,c
  5572  000CC8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5573  000CCC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5574  000CD0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5575  000CD4  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5576  000CD8  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5577  000CDC  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5578  000CE0  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5579  000CE2  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5580  000CE4  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5581  000CE6  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5582  000CE8  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5583  000CEA  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5584  000CEC                     
  5585                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1143:            
      +                           return xtoa(fp, llu, 'x');
  5586  000CEC  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  5587  000CF0  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5588  000CF4  C060  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  5589  000CF8  C061  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5590  000CFC  C062  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5591  000D00  C063  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5592  000D04  C064  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5593  000D08  C065  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5594  000D0C  C066  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5595  000D10  C067  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5596  000D14  0E78               	movlw	120
  5597  000D16  6E26               	movwf	xtoa@x^0,c
  5598  000D18  EC7C  F019         	call	_xtoa	;wreg free
  5599  000D1C  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  5600  000D20  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5601  000D24  EF2E  F00A         	goto	l1340
  5602  000D28                     l4667:
  5603  000D28  FFFF               	dw	65535	; assembler added errata NOP
  5604                           
  5605                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1149:         if 
      +                          (*fmt[0] == 's') {
  5606  000D2A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5607  000D2E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5608  000D32  CFDE FFF6          	movff	postinc2,tblptrl
  5609  000D36  CFDD FFF7          	movff	postdec2,tblptrh
  5610  000D3A                     	if	0	;tblptru may be non-zero
  5611  000D3A                     	endif
  5612  000D3A                     	if	0	;tblptru may be non-zero
  5613  000D3A                     	endif
  5614  000D3A  0008               	tblrd		*
  5615  000D3C  FFFF               	dw	65535	; errata NOP
  5616  000D3E  50F5               	movf	tablat,w,c
  5617  000D40  0A73               	xorlw	115
  5618  000D42  A4D8               	btfss	status,2,c
  5619  000D44  EFA6  F006         	goto	u5581
  5620  000D48  EFA9  F006         	goto	u5580
  5621  000D4C                     u5581:
  5622  000D4C  FFFF               	dw	65535	; assembler added errata NOP
  5623  000D4E  EFD5  F006         	goto	l4675
  5624  000D52                     u5580:
  5625  000D52  FFFF               	dw	65535	; assembler added errata NOP
  5626  000D54                     
  5627                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1151:            
      +                           ++*fmt;
  5628  000D54  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5629  000D58  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5630  000D5C  2ADE               	incf	postinc2,f,c
  5631  000D5E  0E00               	movlw	0
  5632  000D60  22DD               	addwfc	postdec2,f,c
  5633                           
  5634                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1152:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5635  000D62  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5636  000D66  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5637  000D6A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5638  000D6E  0E02               	movlw	2
  5639  000D70  26DE               	addwf	postinc2,f,c
  5640  000D72  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5641  000D76  0E00               	movlw	0
  5642  000D78  22DD               	addwfc	postdec2,f,c
  5643  000D7A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5644  000D7E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5645  000D82  CFDE F04D          	movff	postinc2,vfpfcnvrt@cp
  5646  000D86  CFDD F04E          	movff	postdec2,vfpfcnvrt@cp+1
  5647  000D8A                     
  5648                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1154:            
      +                           return stoa(fp, cp);
  5649  000D8A  C043  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  5650  000D8E  C044  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  5651  000D92  C04D  F00C         	movff	vfpfcnvrt@cp,stoa@s
  5652  000D96  C04E  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  5653  000D9A  EC39  F01E         	call	_stoa	;wreg free
  5654  000D9E  C00A  F043         	movff	?_stoa,?_vfpfcnvrt
  5655  000DA2  C00B  F044         	movff	?_stoa+1,?_vfpfcnvrt+1
  5656  000DA6  EF2E  F00A         	goto	l1340
  5657  000DAA                     l4675:
  5658  000DAA  FFFF               	dw	65535	; assembler added errata NOP
  5659                           
  5660                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1161:         if 
      +                          (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  5661  000DAC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5662  000DB0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5663  000DB4  CFDE F001          	movff	postinc2,strncmp@_l
  5664  000DB8  CFDD F002          	movff	postdec2,strncmp@_l+1
  5665  000DBC  0EDF               	movlw	low STR_71
  5666  000DBE  6E03               	movwf	strncmp@_r^0,c
  5667  000DC0  0E7F               	movlw	high STR_71
  5668  000DC2  6E04               	movwf	(strncmp@_r+1)^0,c
  5669  000DC4  0E00               	movlw	0
  5670  000DC6  6E06               	movwf	(strncmp@n+1)^0,c
  5671  000DC8  0E03               	movlw	3
  5672  000DCA  6E05               	movwf	strncmp@n^0,c
  5673  000DCC  ECF5  F039         	call	_strncmp	;wreg free
  5674  000DD0  5001               	movf	?_strncmp^0,w,c
  5675  000DD2  1002               	iorwf	(?_strncmp+1)^0,w,c
  5676  000DD4  A4D8               	btfss	status,2,c
  5677  000DD6  EFEF  F006         	goto	u5591
  5678  000DDA  EFF2  F006         	goto	u5590
  5679  000DDE                     u5591:
  5680  000DDE  FFFF               	dw	65535	; assembler added errata NOP
  5681  000DE0  EF33  F007         	goto	l4683
  5682  000DE4                     u5590:
  5683  000DE4  FFFF               	dw	65535	; assembler added errata NOP
  5684  000DE6                     
  5685                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1163:            
      +                           *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  5686  000DE6  0E03               	movlw	3
  5687  000DE8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5688  000DEC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5689  000DF0  26DE               	addwf	postinc2,f,c
  5690  000DF2  0E00               	movlw	0
  5691  000DF4  22DD               	addwfc	postdec2,f,c
  5692                           
  5693                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1164:            
      +                           llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5694  000DF6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5695  000DFA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5696  000DFE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5697  000E02  0E02               	movlw	2
  5698  000E04  26DE               	addwf	postinc2,f,c
  5699  000E06  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5700  000E0A  0E00               	movlw	0
  5701  000E0C  22DD               	addwfc	postdec2,f,c
  5702  000E0E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5703  000E12  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5704  000E16  50DF               	movf	indf2,w,c
  5705  000E18  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  5706  000E1A  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  5707  000E1C  6E60               	movwf	vfpfcnvrt@llu^0,c
  5708  000E1E  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  5709  000E20  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5710  000E22  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5711  000E24  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5712  000E26  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5713  000E28  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5714  000E2A  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5715  000E2C                     l4679:
  5716  000E2C  FFFF               	dw	65535	; assembler added errata NOP
  5717                           
  5718                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1166:            
      +                           return utoa(fp, llu);
  5719  000E2E  C043  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  5720  000E32  C044  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  5721  000E36  C060  F01E         	movff	vfpfcnvrt@llu,utoa@d
  5722  000E3A  C061  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  5723  000E3E  C062  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  5724  000E42  C063  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  5725  000E46  C064  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  5726  000E4A  C065  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  5727  000E4E  C066  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  5728  000E52  C067  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  5729  000E56  EC14  F01B         	call	_utoa	;wreg free
  5730  000E5A  C01C  F043         	movff	?_utoa,?_vfpfcnvrt
  5731  000E5E  C01D  F044         	movff	?_utoa+1,?_vfpfcnvrt+1
  5732  000E62  EF2E  F00A         	goto	l1340
  5733  000E66                     l4683:
  5734  000E66  FFFF               	dw	65535	; assembler added errata NOP
  5735                           
  5736                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1172:         if 
      +                          (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  5737  000E68  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5738  000E6C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5739  000E70  CFDE F001          	movff	postinc2,strncmp@_l
  5740  000E74  CFDD F002          	movff	postdec2,strncmp@_l+1
  5741  000E78  0EE0               	movlw	low (STR_71+1)
  5742  000E7A  6E03               	movwf	strncmp@_r^0,c
  5743  000E7C  0E7F               	movlw	high (STR_71+1)
  5744  000E7E  6E04               	movwf	(strncmp@_r+1)^0,c
  5745  000E80  0E00               	movlw	0
  5746  000E82  6E06               	movwf	(strncmp@n+1)^0,c
  5747  000E84  0E02               	movlw	2
  5748  000E86  6E05               	movwf	strncmp@n^0,c
  5749  000E88  ECF5  F039         	call	_strncmp	;wreg free
  5750  000E8C  5001               	movf	?_strncmp^0,w,c
  5751  000E8E  1002               	iorwf	(?_strncmp+1)^0,w,c
  5752  000E90  A4D8               	btfss	status,2,c
  5753  000E92  EF4D  F007         	goto	u5601
  5754  000E96  EF50  F007         	goto	u5600
  5755  000E9A                     u5601:
  5756  000E9A  FFFF               	dw	65535	; assembler added errata NOP
  5757  000E9C  EF79  F007         	goto	l4691
  5758  000EA0                     u5600:
  5759  000EA0  FFFF               	dw	65535	; assembler added errata NOP
  5760  000EA2                     
  5761                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1174:            
      +                           *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  5762  000EA2  0E02               	movlw	2
  5763  000EA4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5764  000EA8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5765  000EAC  26DE               	addwf	postinc2,f,c
  5766  000EAE  0E00               	movlw	0
  5767  000EB0  22DD               	addwfc	postdec2,f,c
  5768                           
  5769                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1175:            
      +                           llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5770  000EB2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5771  000EB6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5772  000EBA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5773  000EBE  0E02               	movlw	2
  5774  000EC0  26DE               	addwf	postinc2,f,c
  5775  000EC2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5776  000EC6  0E00               	movlw	0
  5777  000EC8  22DD               	addwfc	postdec2,f,c
  5778  000ECA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5779  000ECE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5780  000ED2  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5781  000ED6  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5782  000EDA  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5783  000EDE  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5784  000EE2  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5785  000EE4  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5786  000EE6  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5787  000EE8  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5788  000EEA  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5789  000EEC  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5790  000EEE  EF16  F007         	goto	l4679
  5791  000EF2                     l4691:
  5792  000EF2  FFFF               	dw	65535	; assembler added errata NOP
  5793                           
  5794                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1182:         if 
      +                          (*fmt[0] == 'u') {
  5795  000EF4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5796  000EF8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5797  000EFC  CFDE FFF6          	movff	postinc2,tblptrl
  5798  000F00  CFDD FFF7          	movff	postdec2,tblptrh
  5799  000F04                     	if	0	;tblptru may be non-zero
  5800  000F04                     	endif
  5801  000F04                     	if	0	;tblptru may be non-zero
  5802  000F04                     	endif
  5803  000F04  0008               	tblrd		*
  5804  000F06  FFFF               	dw	65535	; errata NOP
  5805  000F08  50F5               	movf	tablat,w,c
  5806  000F0A  0A75               	xorlw	117
  5807  000F0C  A4D8               	btfss	status,2,c
  5808  000F0E  EF8B  F007         	goto	u5611
  5809  000F12  EF8E  F007         	goto	u5610
  5810  000F16                     u5611:
  5811  000F16  FFFF               	dw	65535	; assembler added errata NOP
  5812  000F18  EFB6  F007         	goto	l4699
  5813  000F1C                     u5610:
  5814  000F1C  FFFF               	dw	65535	; assembler added errata NOP
  5815  000F1E                     
  5816                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1184:            
      +                           ++*fmt;
  5817  000F1E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5818  000F22  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5819  000F26  2ADE               	incf	postinc2,f,c
  5820  000F28  0E00               	movlw	0
  5821  000F2A  22DD               	addwfc	postdec2,f,c
  5822                           
  5823                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1185:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  5824  000F2C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5825  000F30  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5826  000F34  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5827  000F38  0E02               	movlw	2
  5828  000F3A  26DE               	addwf	postinc2,f,c
  5829  000F3C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5830  000F40  0E00               	movlw	0
  5831  000F42  22DD               	addwfc	postdec2,f,c
  5832  000F44  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5833  000F48  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5834  000F4C  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5835  000F50  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5836  000F54  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5837  000F58  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5838  000F5C  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5839  000F5E  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5840  000F60  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5841  000F62  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5842  000F64  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5843  000F66  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5844  000F68  EF16  F007         	goto	l4679
  5845  000F6C                     l4699:
  5846  000F6C  FFFF               	dw	65535	; assembler added errata NOP
  5847                           
  5848                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1236:         if 
      +                          (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  5849  000F6E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5850  000F72  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5851  000F76  CFDE F001          	movff	postinc2,strncmp@_l
  5852  000F7A  CFDD F002          	movff	postdec2,strncmp@_l+1
  5853  000F7E  0EF6               	movlw	low STR_81
  5854  000F80  6E03               	movwf	strncmp@_r^0,c
  5855  000F82  0E7F               	movlw	high STR_81
  5856  000F84  6E04               	movwf	(strncmp@_r+1)^0,c
  5857  000F86  0E00               	movlw	0
  5858  000F88  6E06               	movwf	(strncmp@n+1)^0,c
  5859  000F8A  0E02               	movlw	2
  5860  000F8C  6E05               	movwf	strncmp@n^0,c
  5861  000F8E  ECF5  F039         	call	_strncmp	;wreg free
  5862  000F92  5001               	movf	?_strncmp^0,w,c
  5863  000F94  1002               	iorwf	(?_strncmp+1)^0,w,c
  5864  000F96  A4D8               	btfss	status,2,c
  5865  000F98  EFD0  F007         	goto	u5621
  5866  000F9C  EFD3  F007         	goto	u5620
  5867  000FA0                     u5621:
  5868  000FA0  FFFF               	dw	65535	; assembler added errata NOP
  5869  000FA2  EFFC  F007         	goto	l4707
  5870  000FA6                     u5620:
  5871  000FA6  FFFF               	dw	65535	; assembler added errata NOP
  5872  000FA8                     
  5873                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1238:            
      +                           *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  5874  000FA8  0E02               	movlw	2
  5875  000FAA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5876  000FAE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5877  000FB2  26DE               	addwf	postinc2,f,c
  5878  000FB4  0E00               	movlw	0
  5879  000FB6  22DD               	addwfc	postdec2,f,c
  5880                           
  5881                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1239:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5882  000FB8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5883  000FBC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5884  000FC0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5885  000FC4  0E02               	movlw	2
  5886  000FC6  26DE               	addwf	postinc2,f,c
  5887  000FC8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5888  000FCC  0E00               	movlw	0
  5889  000FCE  22DD               	addwfc	postdec2,f,c
  5890  000FD0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5891  000FD4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5892  000FD8  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5893  000FDC  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5894  000FE0  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5895  000FE4  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5896  000FE8  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5897  000FEA  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5898  000FEC  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5899  000FEE  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5900  000FF0  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5901  000FF2  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5902  000FF4  EF16  F007         	goto	l4679
  5903  000FF8                     l4707:
  5904  000FF8  FFFF               	dw	65535	; assembler added errata NOP
  5905                           
  5906                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1249:         if 
      +                          (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hhX", ((
      +                          sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  5907  000FFA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5908  000FFE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5909  001002  CFDE F001          	movff	postinc2,strncmp@_l
  5910  001006  CFDD F002          	movff	postdec2,strncmp@_l+1
  5911  00100A  0EE3               	movlw	low STR_86
  5912  00100C  6E03               	movwf	strncmp@_r^0,c
  5913  00100E  0E7F               	movlw	high STR_86
  5914  001010  6E04               	movwf	(strncmp@_r+1)^0,c
  5915  001012  0E00               	movlw	0
  5916  001014  6E06               	movwf	(strncmp@n+1)^0,c
  5917  001016  0E03               	movlw	3
  5918  001018  6E05               	movwf	strncmp@n^0,c
  5919  00101A  ECF5  F039         	call	_strncmp	;wreg free
  5920  00101E  5001               	movf	?_strncmp^0,w,c
  5921  001020  1002               	iorwf	(?_strncmp+1)^0,w,c
  5922  001022  B4D8               	btfsc	status,2,c
  5923  001024  EF16  F008         	goto	u5631
  5924  001028  EF19  F008         	goto	u5630
  5925  00102C                     u5631:
  5926  00102C  FFFF               	dw	65535	; assembler added errata NOP
  5927  00102E  EF36  F008         	goto	l4711
  5928  001032                     u5630:
  5929  001032  FFFF               	dw	65535	; assembler added errata NOP
  5930  001034  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5931  001038  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5932  00103C  CFDE F001          	movff	postinc2,strncmp@_l
  5933  001040  CFDD F002          	movff	postdec2,strncmp@_l+1
  5934  001044  0ECB               	movlw	low STR_90
  5935  001046  6E03               	movwf	strncmp@_r^0,c
  5936  001048  0E7F               	movlw	high STR_90
  5937  00104A  6E04               	movwf	(strncmp@_r+1)^0,c
  5938  00104C  0E00               	movlw	0
  5939  00104E  6E06               	movwf	(strncmp@n+1)^0,c
  5940  001050  0E03               	movlw	3
  5941  001052  6E05               	movwf	strncmp@n^0,c
  5942  001054  ECF5  F039         	call	_strncmp	;wreg free
  5943  001058  5001               	movf	?_strncmp^0,w,c
  5944  00105A  1002               	iorwf	(?_strncmp+1)^0,w,c
  5945  00105C  A4D8               	btfss	status,2,c
  5946  00105E  EF33  F008         	goto	u5641
  5947  001062  EF36  F008         	goto	u5640
  5948  001066                     u5641:
  5949  001066  FFFF               	dw	65535	; assembler added errata NOP
  5950  001068  EF8D  F008         	goto	l4721
  5951  00106C                     u5640:
  5952  00106C                     l4711:
  5953  00106C  FFFF               	dw	65535	; assembler added errata NOP
  5954                           
  5955                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1250: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1252:             c = (*fmt)
      +                          [2];
  5956  00106E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5957  001072  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5958  001076  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  5959  00107A  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  5960  00107E  0E02               	movlw	2
  5961  001080  2649               	addwf	??_vfpfcnvrt^0,f,c
  5962  001082  0E00               	movlw	0
  5963  001084  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5964  001086  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5965  00108A  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5966  00108E                     	if	0	;tblptru may be non-zero
  5967  00108E                     	endif
  5968  00108E                     	if	0	;tblptru may be non-zero
  5969  00108E                     	endif
  5970  00108E  0008               	tblrd		*
  5971  001090  FFFF               	dw	65535	; errata NOP
  5972  001092  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  5973  001096                     
  5974                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1253:            
      +                           *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  5975  001096  0E03               	movlw	3
  5976  001098  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5977  00109C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5978  0010A0  26DE               	addwf	postinc2,f,c
  5979  0010A2  0E00               	movlw	0
  5980  0010A4  22DD               	addwfc	postdec2,f,c
  5981  0010A6                     
  5982                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1254:            
      +                           llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5983  0010A6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5984  0010AA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5985  0010AE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5986  0010B2  0E02               	movlw	2
  5987  0010B4  26DE               	addwf	postinc2,f,c
  5988  0010B6  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5989  0010BA  0E00               	movlw	0
  5990  0010BC  22DD               	addwfc	postdec2,f,c
  5991  0010BE  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5992  0010C2  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5993  0010C6  50DF               	movf	indf2,w,c
  5994  0010C8  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  5995  0010CA  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  5996  0010CC  6E60               	movwf	vfpfcnvrt@llu^0,c
  5997  0010CE  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  5998  0010D0  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5999  0010D2  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  6000  0010D4  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  6001  0010D6  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  6002  0010D8  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  6003  0010DA  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  6004  0010DC                     l4717:
  6005  0010DC  FFFF               	dw	65535	; assembler added errata NOP
  6006                           
  6007                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1256:            
      +                           return xtoa(fp, llu, c);
  6008  0010DE  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  6009  0010E2  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6010  0010E6  C060  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  6011  0010EA  C061  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  6012  0010EE  C062  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  6013  0010F2  C063  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  6014  0010F6  C064  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  6015  0010FA  C065  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  6016  0010FE  C066  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  6017  001102  C067  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  6018  001106  C05F  F026         	movff	vfpfcnvrt@c,xtoa@x
  6019  00110A  EC7C  F019         	call	_xtoa	;wreg free
  6020  00110E  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  6021  001112  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  6022  001116  EF2E  F00A         	goto	l1340
  6023  00111A                     l4721:
  6024  00111A  FFFF               	dw	65535	; assembler added errata NOP
  6025                           
  6026                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1262:         if 
      +                          (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", ((size
      +                          of("hX")/sizeof("hX"[0]))-1))) {
  6027  00111C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6028  001120  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6029  001124  CFDE F001          	movff	postinc2,strncmp@_l
  6030  001128  CFDD F002          	movff	postdec2,strncmp@_l+1
  6031  00112C  0EE4               	movlw	low (STR_86+1)
  6032  00112E  6E03               	movwf	strncmp@_r^0,c
  6033  001130  0E7F               	movlw	high (STR_86+1)
  6034  001132  6E04               	movwf	(strncmp@_r+1)^0,c
  6035  001134  0E00               	movlw	0
  6036  001136  6E06               	movwf	(strncmp@n+1)^0,c
  6037  001138  0E02               	movlw	2
  6038  00113A  6E05               	movwf	strncmp@n^0,c
  6039  00113C  ECF5  F039         	call	_strncmp	;wreg free
  6040  001140  5001               	movf	?_strncmp^0,w,c
  6041  001142  1002               	iorwf	(?_strncmp+1)^0,w,c
  6042  001144  B4D8               	btfsc	status,2,c
  6043  001146  EFA7  F008         	goto	u5651
  6044  00114A  EFAA  F008         	goto	u5650
  6045  00114E                     u5651:
  6046  00114E  FFFF               	dw	65535	; assembler added errata NOP
  6047  001150  EFC7  F008         	goto	l4725
  6048  001154                     u5650:
  6049  001154  FFFF               	dw	65535	; assembler added errata NOP
  6050  001156  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6051  00115A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6052  00115E  CFDE F001          	movff	postinc2,strncmp@_l
  6053  001162  CFDD F002          	movff	postdec2,strncmp@_l+1
  6054  001166  0ECC               	movlw	low (STR_90+1)
  6055  001168  6E03               	movwf	strncmp@_r^0,c
  6056  00116A  0E7F               	movlw	high (STR_90+1)
  6057  00116C  6E04               	movwf	(strncmp@_r+1)^0,c
  6058  00116E  0E00               	movlw	0
  6059  001170  6E06               	movwf	(strncmp@n+1)^0,c
  6060  001172  0E02               	movlw	2
  6061  001174  6E05               	movwf	strncmp@n^0,c
  6062  001176  ECF5  F039         	call	_strncmp	;wreg free
  6063  00117A  5001               	movf	?_strncmp^0,w,c
  6064  00117C  1002               	iorwf	(?_strncmp+1)^0,w,c
  6065  00117E  A4D8               	btfss	status,2,c
  6066  001180  EFC4  F008         	goto	u5661
  6067  001184  EFC7  F008         	goto	u5660
  6068  001188                     u5661:
  6069  001188  FFFF               	dw	65535	; assembler added errata NOP
  6070  00118A  EF04  F009         	goto	l4735
  6071  00118E                     u5660:
  6072  00118E                     l4725:
  6073  00118E  FFFF               	dw	65535	; assembler added errata NOP
  6074                           
  6075                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1263: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1265:             c = (*fmt)
      +                          [1];
  6076  001190  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6077  001194  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6078  001198  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  6079  00119C  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  6080  0011A0  0E01               	movlw	1
  6081  0011A2  2649               	addwf	??_vfpfcnvrt^0,f,c
  6082  0011A4  0E00               	movlw	0
  6083  0011A6  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  6084  0011A8  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6085  0011AC  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6086  0011B0                     	if	0	;tblptru may be non-zero
  6087  0011B0                     	endif
  6088  0011B0                     	if	0	;tblptru may be non-zero
  6089  0011B0                     	endif
  6090  0011B0  0008               	tblrd		*
  6091  0011B2  FFFF               	dw	65535	; errata NOP
  6092  0011B4  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  6093  0011B8                     
  6094                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1266:            
      +                           *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  6095  0011B8  0E02               	movlw	2
  6096  0011BA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6097  0011BE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6098  0011C2  26DE               	addwf	postinc2,f,c
  6099  0011C4  0E00               	movlw	0
  6100  0011C6  22DD               	addwfc	postdec2,f,c
  6101  0011C8                     
  6102                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1267:            
      +                           llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  6103  0011C8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6104  0011CC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6105  0011D0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6106  0011D4  0E02               	movlw	2
  6107  0011D6  26DE               	addwf	postinc2,f,c
  6108  0011D8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6109  0011DC  0E00               	movlw	0
  6110  0011DE  22DD               	addwfc	postdec2,f,c
  6111  0011E0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6112  0011E4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6113  0011E8  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  6114  0011EC  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  6115  0011F0  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6116  0011F4  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6117  0011F8  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  6118  0011FA  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  6119  0011FC  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  6120  0011FE  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  6121  001200  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  6122  001202  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  6123  001204  EF6E  F008         	goto	l4717
  6124  001208                     l4735:
  6125  001208  FFFF               	dw	65535	; assembler added errata NOP
  6126                           
  6127                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1274:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  6128  00120A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6129  00120E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6130  001212  CFDE FFF6          	movff	postinc2,tblptrl
  6131  001216  CFDD FFF7          	movff	postdec2,tblptrh
  6132  00121A                     	if	0	;tblptru may be non-zero
  6133  00121A                     	endif
  6134  00121A                     	if	0	;tblptru may be non-zero
  6135  00121A                     	endif
  6136  00121A  0008               	tblrd		*
  6137  00121C  FFFF               	dw	65535	; errata NOP
  6138  00121E  50F5               	movf	tablat,w,c
  6139  001220  0A78               	xorlw	120
  6140  001222  B4D8               	btfsc	status,2,c
  6141  001224  EF16  F009         	goto	u5671
  6142  001228  EF19  F009         	goto	u5670
  6143  00122C                     u5671:
  6144  00122C  FFFF               	dw	65535	; assembler added errata NOP
  6145  00122E  EF2E  F009         	goto	l4739
  6146  001232                     u5670:
  6147  001232  FFFF               	dw	65535	; assembler added errata NOP
  6148  001234  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6149  001238  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6150  00123C  CFDE FFF6          	movff	postinc2,tblptrl
  6151  001240  CFDD FFF7          	movff	postdec2,tblptrh
  6152  001244                     	if	0	;tblptru may be non-zero
  6153  001244                     	endif
  6154  001244                     	if	0	;tblptru may be non-zero
  6155  001244                     	endif
  6156  001244  0008               	tblrd		*
  6157  001246  FFFF               	dw	65535	; errata NOP
  6158  001248  50F5               	movf	tablat,w,c
  6159  00124A  0A58               	xorlw	88
  6160  00124C  A4D8               	btfss	status,2,c
  6161  00124E  EF2B  F009         	goto	u5681
  6162  001252  EF2E  F009         	goto	u5680
  6163  001256                     u5681:
  6164  001256  FFFF               	dw	65535	; assembler added errata NOP
  6165  001258  EF62  F009         	goto	l4749
  6166  00125C                     u5680:
  6167  00125C                     l4739:
  6168  00125C  FFFF               	dw	65535	; assembler added errata NOP
  6169                           
  6170                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1276:            
      +                           c = (*fmt)[0];
  6171  00125E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6172  001262  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6173  001266  CFDE FFF6          	movff	postinc2,tblptrl
  6174  00126A  CFDD FFF7          	movff	postdec2,tblptrh
  6175  00126E                     	if	0	;tblptru may be non-zero
  6176  00126E                     	endif
  6177  00126E                     	if	0	;tblptru may be non-zero
  6178  00126E                     	endif
  6179  00126E  0008               	tblrd		*
  6180  001270  FFFF               	dw	65535	; errata NOP
  6181  001272  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  6182  001276                     
  6183                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1277:            
      +                           ++*fmt;
  6184  001276  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6185  00127A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6186  00127E  2ADE               	incf	postinc2,f,c
  6187  001280  0E00               	movlw	0
  6188  001282  22DD               	addwfc	postdec2,f,c
  6189  001284                     
  6190                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1278:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  6191  001284  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6192  001288  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6193  00128C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6194  001290  0E02               	movlw	2
  6195  001292  26DE               	addwf	postinc2,f,c
  6196  001294  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6197  001298  0E00               	movlw	0
  6198  00129A  22DD               	addwfc	postdec2,f,c
  6199  00129C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6200  0012A0  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6201  0012A4  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  6202  0012A8  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  6203  0012AC  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6204  0012B0  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6205  0012B4  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  6206  0012B6  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  6207  0012B8  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  6208  0012BA  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  6209  0012BC  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  6210  0012BE  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  6211  0012C0  EF6E  F008         	goto	l4717
  6212  0012C4                     l4749:
  6213  0012C4  FFFF               	dw	65535	; assembler added errata NOP
  6214                           
  6215                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1337:         if 
      +                          (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", ((size
      +                          of("zX")/sizeof("zX"[0]))-1))) {
  6216  0012C6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6217  0012CA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6218  0012CE  CFDE F001          	movff	postinc2,strncmp@_l
  6219  0012D2  CFDD F002          	movff	postdec2,strncmp@_l+1
  6220  0012D6  0EF9               	movlw	low STR_104
  6221  0012D8  6E03               	movwf	strncmp@_r^0,c
  6222  0012DA  0E7F               	movlw	high STR_104
  6223  0012DC  6E04               	movwf	(strncmp@_r+1)^0,c
  6224  0012DE  0E00               	movlw	0
  6225  0012E0  6E06               	movwf	(strncmp@n+1)^0,c
  6226  0012E2  0E02               	movlw	2
  6227  0012E4  6E05               	movwf	strncmp@n^0,c
  6228  0012E6  ECF5  F039         	call	_strncmp	;wreg free
  6229  0012EA  5001               	movf	?_strncmp^0,w,c
  6230  0012EC  1002               	iorwf	(?_strncmp+1)^0,w,c
  6231  0012EE  B4D8               	btfsc	status,2,c
  6232  0012F0  EF7C  F009         	goto	u5691
  6233  0012F4  EF7F  F009         	goto	u5690
  6234  0012F8                     u5691:
  6235  0012F8  FFFF               	dw	65535	; assembler added errata NOP
  6236  0012FA  EF9C  F009         	goto	l4753
  6237  0012FE                     u5690:
  6238  0012FE  FFFF               	dw	65535	; assembler added errata NOP
  6239  001300  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6240  001304  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6241  001308  CFDE F001          	movff	postinc2,strncmp@_l
  6242  00130C  CFDD F002          	movff	postdec2,strncmp@_l+1
  6243  001310  0EE7               	movlw	low STR_108
  6244  001312  6E03               	movwf	strncmp@_r^0,c
  6245  001314  0E7F               	movlw	high STR_108
  6246  001316  6E04               	movwf	(strncmp@_r+1)^0,c
  6247  001318  0E00               	movlw	0
  6248  00131A  6E06               	movwf	(strncmp@n+1)^0,c
  6249  00131C  0E02               	movlw	2
  6250  00131E  6E05               	movwf	strncmp@n^0,c
  6251  001320  ECF5  F039         	call	_strncmp	;wreg free
  6252  001324  5001               	movf	?_strncmp^0,w,c
  6253  001326  1002               	iorwf	(?_strncmp+1)^0,w,c
  6254  001328  A4D8               	btfss	status,2,c
  6255  00132A  EF99  F009         	goto	u5701
  6256  00132E  EF9C  F009         	goto	u5700
  6257  001332                     u5701:
  6258  001332  FFFF               	dw	65535	; assembler added errata NOP
  6259  001334  EFD9  F009         	goto	l4763
  6260  001338                     u5700:
  6261  001338                     l4753:
  6262  001338  FFFF               	dw	65535	; assembler added errata NOP
  6263                           
  6264                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1338: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1340:             c = (*fmt)
      +                          [1];
  6265  00133A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6266  00133E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6267  001342  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  6268  001346  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  6269  00134A  0E01               	movlw	1
  6270  00134C  2649               	addwf	??_vfpfcnvrt^0,f,c
  6271  00134E  0E00               	movlw	0
  6272  001350  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  6273  001352  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6274  001356  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6275  00135A                     	if	0	;tblptru may be non-zero
  6276  00135A                     	endif
  6277  00135A                     	if	0	;tblptru may be non-zero
  6278  00135A                     	endif
  6279  00135A  0008               	tblrd		*
  6280  00135C  FFFF               	dw	65535	; errata NOP
  6281  00135E  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  6282  001362                     
  6283                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1341:            
      +                           *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  6284  001362  0E02               	movlw	2
  6285  001364  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6286  001368  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6287  00136C  26DE               	addwf	postinc2,f,c
  6288  00136E  0E00               	movlw	0
  6289  001370  22DD               	addwfc	postdec2,f,c
  6290  001372                     
  6291                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1342:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  6292  001372  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6293  001376  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6294  00137A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6295  00137E  0E02               	movlw	2
  6296  001380  26DE               	addwf	postinc2,f,c
  6297  001382  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6298  001386  0E00               	movlw	0
  6299  001388  22DD               	addwfc	postdec2,f,c
  6300  00138A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6301  00138E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6302  001392  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  6303  001396  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  6304  00139A  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6305  00139E  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6306  0013A2  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  6307  0013A4  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  6308  0013A6  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  6309  0013A8  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  6310  0013AA  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  6311  0013AC  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  6312  0013AE  EF6E  F008         	goto	l4717
  6313  0013B2                     l4763:
  6314  0013B2  FFFF               	dw	65535	; assembler added errata NOP
  6315                           
  6316                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  6317  0013B4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6318  0013B8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6319  0013BC  CFDE FFF6          	movff	postinc2,tblptrl
  6320  0013C0  CFDD FFF7          	movff	postdec2,tblptrh
  6321  0013C4                     	if	0	;tblptru may be non-zero
  6322  0013C4                     	endif
  6323  0013C4                     	if	0	;tblptru may be non-zero
  6324  0013C4                     	endif
  6325  0013C4  0008               	tblrd		*
  6326  0013C6  FFFF               	dw	65535	; errata NOP
  6327  0013C8  50F5               	movf	tablat,w,c
  6328  0013CA  0A25               	xorlw	37
  6329  0013CC  A4D8               	btfss	status,2,c
  6330  0013CE  EFEB  F009         	goto	u5711
  6331  0013D2  EFEE  F009         	goto	u5710
  6332  0013D6                     u5711:
  6333  0013D6  FFFF               	dw	65535	; assembler added errata NOP
  6334  0013D8  EF07  F00A         	goto	l4773
  6335  0013DC                     u5710:
  6336  0013DC  FFFF               	dw	65535	; assembler added errata NOP
  6337  0013DE                     
  6338                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  6339  0013DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6340  0013E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6341  0013E6  2ADE               	incf	postinc2,f,c
  6342  0013E8  0E00               	movlw	0
  6343  0013EA  22DD               	addwfc	postdec2,f,c
  6344  0013EC                     
  6345                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  6346  0013EC  0E00               	movlw	0
  6347  0013EE  6E02               	movwf	(fputc@c+1)^0,c
  6348  0013F0  0E25               	movlw	37
  6349  0013F2  6E01               	movwf	fputc@c^0,c
  6350  0013F4  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6351  0013F8  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6352  0013FC  EC24  F038         	call	_fputc	;wreg free
  6353  001400                     l4769:
  6354  001400  FFFF               	dw	65535	; assembler added errata NOP
  6355                           
  6356                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  6357  001402  0E00               	movlw	0
  6358  001404  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  6359  001406  0E01               	movlw	1
  6360  001408  6E43               	movwf	?_vfpfcnvrt^0,c
  6361  00140A  EF2E  F00A         	goto	l1340
  6362  00140E                     l4773:
  6363  00140E  FFFF               	dw	65535	; assembler added errata NOP
  6364                           
  6365                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  6366  001410  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6367  001414  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6368  001418  2ADE               	incf	postinc2,f,c
  6369  00141A  0E00               	movlw	0
  6370  00141C  22DD               	addwfc	postdec2,f,c
  6371  00141E  EF44  F005         	goto	l4625
  6372  001422                     l4779:
  6373  001422  FFFF               	dw	65535	; assembler added errata NOP
  6374                           
  6375                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  6376  001424  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6377  001428  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6378  00142C  CFDE FFF6          	movff	postinc2,tblptrl
  6379  001430  CFDD FFF7          	movff	postdec2,tblptrh
  6380  001434                     	if	0	;tblptru may be non-zero
  6381  001434                     	endif
  6382  001434                     	if	0	;tblptru may be non-zero
  6383  001434                     	endif
  6384  001434  0008               	tblrd		*
  6385  001436  FFFF               	dw	65535	; errata NOP
  6386  001438  50F5               	movf	tablat,w,c
  6387  00143A  6E01               	movwf	fputc@c^0,c
  6388  00143C  6A02               	clrf	(fputc@c+1)^0,c
  6389  00143E  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6390  001442  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6391  001446  EC24  F038         	call	_fputc	;wreg free
  6392  00144A                     
  6393                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  6394  00144A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6395  00144E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6396  001452  2ADE               	incf	postinc2,f,c
  6397  001454  0E00               	movlw	0
  6398  001456  22DD               	addwfc	postdec2,f,c
  6399  001458  EF00  F00A         	goto	l4769
  6400  00145C                     l1340:
  6401  00145C  FFFF               	dw	65535	; assembler added errata NOP
  6402  00145E  0012               	return		;funcret
  6403  001460  FFFF               	dw	65535	; errata NOP
  6404  001462                     __end_of_vfpfcnvrt:
  6405                           	callstack 0
  6406                           
  6407 ;; *************** function _xtoa *****************
  6408 ;; Defined at:
  6409 ;;		line 623 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6410 ;; Parameters:    Size  Location     Type
  6411 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6412 ;;		 -> vsnprintf@f(6), 
  6413 ;;  d               8   29[COMRAM] unsigned long long 
  6414 ;;  x               1   37[COMRAM] unsigned char 
  6415 ;; Auto vars:     Size  Location     Type
  6416 ;;  n               8   54[COMRAM] unsigned long long 
  6417 ;;  c               2   64[COMRAM] int 
  6418 ;;  i               2   62[COMRAM] int 
  6419 ;;  w               2   52[COMRAM] int 
  6420 ;;  p               2   50[COMRAM] int 
  6421 ;; Return value:  Size  Location     Type
  6422 ;;                  2   27[COMRAM] int 
  6423 ;; Registers used:
  6424 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6425 ;; Tracked objects:
  6426 ;;		On entry : 0/0
  6427 ;;		On exit  : 0/0
  6428 ;;		Unchanged: 0/0
  6429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6430 ;;      Params:        11       0       0       0       0       0       0
  6431 ;;      Locals:        20       0       0       0       0       0       0
  6432 ;;      Temps:          8       0       0       0       0       0       0
  6433 ;;      Totals:        39       0       0       0       0       0       0
  6434 ;;Total ram usage:       39 bytes
  6435 ;; Hardware stack levels used:    1
  6436 ;; Hardware stack levels required when called:    5
  6437 ;; This function calls:
  6438 ;;		_isalpha
  6439 ;;		_isupper
  6440 ;;		_pad
  6441 ;;		_toupper
  6442 ;; This function is called by:
  6443 ;;		_vfpfcnvrt
  6444 ;; This function uses a non-reentrant model
  6445 ;;
  6446                           
  6447                           	psect	text9
  6448  0032F8                     __ptext9:
  6449                           	callstack 0
  6450  0032F8                     _xtoa:
  6451                           	callstack 0
  6452  0032F8  FFFF               	dw	65535	; assembler added errata NOP
  6453  0032FA                     
  6454                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 623: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 624: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 625:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources
      +                          \c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0)) {
  6455  0032FA  0100               	movlb	0	; () banked
  6456  0032FC  BF89               	btfsc	(_prec+1)& (0+255),7,b
  6457  0032FE  EF83  F019         	goto	u4551
  6458  003302  EF86  F019         	goto	u4550
  6459  003306                     u4551:
  6460  003306  FFFF               	dw	65535	; assembler added errata NOP
  6461  003308  EF88  F019         	goto	l4135
  6462  00330C                     u4550:
  6463  00330C  FFFF               	dw	65535	; assembler added errata NOP
  6464  00330E                     
  6465                           ; BSR set to: 0
  6466                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 630:         flag
      +                          s &= ~(1 << 1);
  6467  00330E  938A               	bcf	_flags& (0+255),1,b
  6468  003310                     l4135:
  6469  003310  FFFF               	dw	65535	; assembler added errata NOP
  6470                           
  6471                           ; BSR set to: 0
  6472                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 632:     p = (0 <
      +                           prec) ? prec : 1;
  6473  003312  BF89               	btfsc	(_prec+1)& (0+255),7,b
  6474  003314  EF97  F019         	goto	u4560
  6475  003318  5189               	movf	(_prec+1)& (0+255),w,b
  6476  00331A  E106               	bnz	u4561
  6477  00331C  0588               	decf	_prec& (0+255),w,b
  6478  00331E  B0D8               	btfsc	status,0,c
  6479  003320  EF94  F019         	goto	u4561
  6480  003324  EF97  F019         	goto	u4560
  6481  003328                     u4561:
  6482  003328  FFFF               	dw	65535	; assembler added errata NOP
  6483  00332A  EF9E  F019         	goto	l1278
  6484  00332E                     u4560:
  6485  00332E  FFFF               	dw	65535	; assembler added errata NOP
  6486  003330                     
  6487                           ; BSR set to: 0
  6488  003330  0E00               	movlw	0
  6489  003332  6E34               	movwf	(xtoa@p+1)^0,c
  6490  003334  0E01               	movlw	1
  6491  003336  6E33               	movwf	xtoa@p^0,c
  6492  003338  EFA3  F019         	goto	l1280
  6493  00333C                     l1278:
  6494  00333C  FFFF               	dw	65535	; assembler added errata NOP
  6495                           
  6496                           ; BSR set to: 0
  6497  00333E  C088  F033         	movff	_prec,xtoa@p
  6498  003342  C089  F034         	movff	_prec+1,xtoa@p+1
  6499  003346                     l1280:
  6500  003346  FFFF               	dw	65535	; assembler added errata NOP
  6501                           
  6502                           ; BSR set to: 0
  6503                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 633:     w = widt
      +                          h;
  6504  003348  C086  F035         	movff	_width,xtoa@w
  6505  00334C  C087  F036         	movff	_width+1,xtoa@w+1
  6506                           
  6507                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 634:     if (flag
      +                          s & (1 << 4)) {
  6508  003350  A98A               	btfss	_flags& (0+255),4,b
  6509  003352  EFAD  F019         	goto	u4571
  6510  003356  EFB0  F019         	goto	u4570
  6511  00335A                     u4571:
  6512  00335A  FFFF               	dw	65535	; assembler added errata NOP
  6513  00335C  EFB5  F019         	goto	l4141
  6514  003360                     u4570:
  6515  003360  FFFF               	dw	65535	; assembler added errata NOP
  6516  003362                     
  6517                           ; BSR set to: 0
  6518                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 635:         w -=
      +                           2;
  6519  003362  0EFE               	movlw	254
  6520  003364  2635               	addwf	xtoa@w^0,f,c
  6521  003366  0EFF               	movlw	255
  6522  003368  2236               	addwfc	(xtoa@w+1)^0,f,c
  6523  00336A                     l4141:
  6524  00336A  FFFF               	dw	65535	; assembler added errata NOP
  6525                           
  6526                           ; BSR set to: 0
  6527                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 639:     n = d;
  6528  00336C  C01E  F037         	movff	xtoa@d,xtoa@n
  6529  003370  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  6530  003374  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  6531  003378  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  6532  00337C  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  6533  003380  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  6534  003384  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  6535  003388  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  6536  00338C                     
  6537                           ; BSR set to: 0
  6538                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 640:     i = size
      +                          of(dbuf) - 1;
  6539  00338C  0E00               	movlw	0
  6540  00338E  6E40               	movwf	(xtoa@i+1)^0,c
  6541  003390  0E1F               	movlw	31
  6542  003392  6E3F               	movwf	xtoa@i^0,c
  6543  003394                     
  6544                           ; BSR set to: 0
  6545                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 641:     dbuf[i] 
      +                          = '\0';
  6546  003394  0E00               	movlw	0
  6547  003396  6FB7               	movwf	(_dbuf+31)& (0+255),b
  6548                           
  6549                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6550  003398  EF93  F01A         	goto	l4177
  6551  00339C                     l4147:
  6552  00339C  FFFF               	dw	65535	; assembler added errata NOP
  6553                           
  6554                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 643:         --i;
  6555  00339E  063F               	decf	xtoa@i^0,f,c
  6556  0033A0  A0D8               	btfss	status,0,c
  6557  0033A2  0640               	decf	(xtoa@i+1)^0,f,c
  6558  0033A4                     
  6559                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 644:         c = 
      +                          n & 0x0f;
  6560  0033A4  0E0F               	movlw	15
  6561  0033A6  1437               	andwf	xtoa@n^0,w,c
  6562  0033A8  6E41               	movwf	xtoa@c^0,c
  6563  0033AA  6A42               	clrf	(xtoa@c+1)^0,c
  6564  0033AC                     
  6565                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 645:         c = 
      +                          (c < 10) ? '0' + c : 'a' + (c - 10);
  6566  0033AC  BE42               	btfsc	(xtoa@c+1)^0,7,c
  6567  0033AE  EFE2  F019         	goto	u4581
  6568  0033B2  5042               	movf	(xtoa@c+1)^0,w,c
  6569  0033B4  E10A               	bnz	u4580
  6570  0033B6  0E0A               	movlw	10
  6571  0033B8  5C41               	subwf	xtoa@c^0,w,c
  6572  0033BA  A0D8               	btfss	status,0,c
  6573  0033BC  EFE2  F019         	goto	u4581
  6574  0033C0  EFE5  F019         	goto	u4580
  6575  0033C4                     u4581:
  6576  0033C4  FFFF               	dw	65535	; assembler added errata NOP
  6577  0033C6  EFEE  F019         	goto	l4155
  6578  0033CA                     u4580:
  6579  0033CA  FFFF               	dw	65535	; assembler added errata NOP
  6580  0033CC  0E57               	movlw	87
  6581  0033CE  2441               	addwf	xtoa@c^0,w,c
  6582  0033D0  6E41               	movwf	xtoa@c^0,c
  6583  0033D2  0E00               	movlw	0
  6584  0033D4  2042               	addwfc	(xtoa@c+1)^0,w,c
  6585  0033D6  6E42               	movwf	(xtoa@c+1)^0,c
  6586  0033D8  EFF5  F019         	goto	l1287
  6587  0033DC                     l4155:
  6588  0033DC  FFFF               	dw	65535	; assembler added errata NOP
  6589  0033DE  0E30               	movlw	48
  6590  0033E0  2441               	addwf	xtoa@c^0,w,c
  6591  0033E2  6E41               	movwf	xtoa@c^0,c
  6592  0033E4  0E00               	movlw	0
  6593  0033E6  2042               	addwfc	(xtoa@c+1)^0,w,c
  6594  0033E8  6E42               	movwf	(xtoa@c+1)^0,c
  6595  0033EA                     l1287:
  6596  0033EA  FFFF               	dw	65535	; assembler added errata NOP
  6597  0033EC  0EBF               	movlw	191
  6598  0033EE  6E27               	movwf	??_xtoa^0,c
  6599  0033F0  0EFF               	movlw	255
  6600  0033F2  6E28               	movwf	(??_xtoa+1)^0,c
  6601  0033F4  5026               	movf	xtoa@x^0,w,c
  6602  0033F6  6E29               	movwf	(??_xtoa+2)^0,c
  6603  0033F8  6A2A               	clrf	(??_xtoa+3)^0,c
  6604  0033FA  5027               	movf	??_xtoa^0,w,c
  6605  0033FC  2629               	addwf	(??_xtoa+2)^0,f,c
  6606  0033FE  5028               	movf	(??_xtoa+1)^0,w,c
  6607  003400  222A               	addwfc	(??_xtoa+3)^0,f,c
  6608  003402  502A               	movf	(??_xtoa+3)^0,w,c
  6609  003404  E10B               	bnz	u4590
  6610  003406  0E1A               	movlw	26
  6611  003408  5C29               	subwf	(??_xtoa+2)^0,w,c
  6612  00340A  A0D8               	btfss	status,0,c
  6613  00340C  EF0A  F01A         	goto	u4591
  6614  003410  EF0E  F01A         	goto	u4590
  6615  003414                     u4591:
  6616  003414  FFFF               	dw	65535	; assembler added errata NOP
  6617  003416  0E01               	movlw	1
  6618  003418  EF10  F01A         	goto	u4600
  6619  00341C                     u4590:
  6620  00341C  FFFF               	dw	65535	; assembler added errata NOP
  6621  00341E  0E00               	movlw	0
  6622  003420                     u4600:
  6623  003420  FFFF               	dw	65535	; assembler added errata NOP
  6624  003422  6E2F               	movwf	_xtoa$1702^0,c
  6625  003424  6A30               	clrf	(_xtoa$1702+1)^0,c
  6626  003426  502F               	movf	_xtoa$1702^0,w,c
  6627  003428  1030               	iorwf	(_xtoa$1702+1)^0,w,c
  6628  00342A  B4D8               	btfsc	status,2,c
  6629  00342C  EF1A  F01A         	goto	u4611
  6630  003430  EF1D  F01A         	goto	u4610
  6631  003434                     u4611:
  6632  003434  FFFF               	dw	65535	; assembler added errata NOP
  6633  003436  EF53  F01A         	goto	l4169
  6634  00343A                     u4610:
  6635  00343A  FFFF               	dw	65535	; assembler added errata NOP
  6636  00343C  0E9F               	movlw	159
  6637  00343E  6E27               	movwf	??_xtoa^0,c
  6638  003440  0EFF               	movlw	255
  6639  003442  6E28               	movwf	(??_xtoa+1)^0,c
  6640  003444  0E20               	movlw	32
  6641  003446  1041               	iorwf	xtoa@c^0,w,c
  6642  003448  6E29               	movwf	(??_xtoa+2)^0,c
  6643  00344A  0E00               	movlw	0
  6644  00344C  1042               	iorwf	(xtoa@c+1)^0,w,c
  6645  00344E  6E2A               	movwf	(??_xtoa+3)^0,c
  6646  003450  5027               	movf	??_xtoa^0,w,c
  6647  003452  2629               	addwf	(??_xtoa+2)^0,f,c
  6648  003454  5028               	movf	(??_xtoa+1)^0,w,c
  6649  003456  222A               	addwfc	(??_xtoa+3)^0,f,c
  6650  003458  502A               	movf	(??_xtoa+3)^0,w,c
  6651  00345A  E10B               	bnz	u4620
  6652  00345C  0E1A               	movlw	26
  6653  00345E  5C29               	subwf	(??_xtoa+2)^0,w,c
  6654  003460  A0D8               	btfss	status,0,c
  6655  003462  EF35  F01A         	goto	u4621
  6656  003466  EF39  F01A         	goto	u4620
  6657  00346A                     u4621:
  6658  00346A  FFFF               	dw	65535	; assembler added errata NOP
  6659  00346C  0E01               	movlw	1
  6660  00346E  EF3B  F01A         	goto	u4630
  6661  003472                     u4620:
  6662  003472  FFFF               	dw	65535	; assembler added errata NOP
  6663  003474  0E00               	movlw	0
  6664  003476                     u4630:
  6665  003476  FFFF               	dw	65535	; assembler added errata NOP
  6666  003478  6E31               	movwf	_xtoa$1703^0,c
  6667  00347A  6A32               	clrf	(_xtoa$1703+1)^0,c
  6668  00347C  5031               	movf	_xtoa$1703^0,w,c
  6669  00347E  1032               	iorwf	(_xtoa$1703+1)^0,w,c
  6670  003480  B4D8               	btfsc	status,2,c
  6671  003482  EF45  F01A         	goto	u4641
  6672  003486  EF48  F01A         	goto	u4640
  6673  00348A                     u4641:
  6674  00348A  FFFF               	dw	65535	; assembler added errata NOP
  6675  00348C  EF53  F01A         	goto	l4169
  6676  003490                     u4640:
  6677  003490  FFFF               	dw	65535	; assembler added errata NOP
  6678  003492                     
  6679                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 647:             
      +                          c = toupper(c);
  6680  003492  C041  F007         	movff	xtoa@c,toupper@c
  6681  003496  C042  F008         	movff	xtoa@c+1,toupper@c+1
  6682  00349A  EC7F  F034         	call	_toupper	;wreg free
  6683  00349E  C007  F041         	movff	?_toupper,xtoa@c
  6684  0034A2  C008  F042         	movff	?_toupper+1,xtoa@c+1
  6685  0034A6                     l4169:
  6686  0034A6  FFFF               	dw	65535	; assembler added errata NOP
  6687                           
  6688                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 649:         dbuf
      +                          [i] = (char)c;
  6689  0034A8  0E98               	movlw	low _dbuf
  6690  0034AA  243F               	addwf	xtoa@i^0,w,c
  6691  0034AC  6ED9               	movwf	fsr2l,c
  6692  0034AE  0E00               	movlw	high _dbuf
  6693  0034B0  2040               	addwfc	(xtoa@i+1)^0,w,c
  6694  0034B2  6EDA               	movwf	fsr2h,c
  6695  0034B4  C041  FFDF         	movff	xtoa@c,indf2
  6696  0034B8                     
  6697                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 650:         --p;
  6698  0034B8  0633               	decf	xtoa@p^0,f,c
  6699  0034BA  A0D8               	btfss	status,0,c
  6700  0034BC  0634               	decf	(xtoa@p+1)^0,f,c
  6701  0034BE                     
  6702                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 651:         --w;
  6703  0034BE  0635               	decf	xtoa@w^0,f,c
  6704  0034C0  A0D8               	btfss	status,0,c
  6705  0034C2  0636               	decf	(xtoa@w+1)^0,f,c
  6706  0034C4                     
  6707                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 652:         n = 
      +                          n >> 4;
  6708  0034C4  C037  F027         	movff	xtoa@n,??_xtoa
  6709  0034C8  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  6710  0034CC  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  6711  0034D0  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  6712  0034D4  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  6713  0034D8  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  6714  0034DC  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  6715  0034E0  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  6716  0034E4  0E05               	movlw	5
  6717  0034E6  EF7F  F01A         	goto	u4650
  6718  0034EA                     u4655:
  6719  0034EA  FFFF               	dw	65535	; assembler added errata NOP
  6720  0034EC  90D8               	bcf	status,0,c
  6721  0034EE  322E               	rrcf	(??_xtoa+7)^0,f,c
  6722  0034F0  322D               	rrcf	(??_xtoa+6)^0,f,c
  6723  0034F2  322C               	rrcf	(??_xtoa+5)^0,f,c
  6724  0034F4  322B               	rrcf	(??_xtoa+4)^0,f,c
  6725  0034F6  322A               	rrcf	(??_xtoa+3)^0,f,c
  6726  0034F8  3229               	rrcf	(??_xtoa+2)^0,f,c
  6727  0034FA  3228               	rrcf	(??_xtoa+1)^0,f,c
  6728  0034FC  3227               	rrcf	??_xtoa^0,f,c
  6729  0034FE                     u4650:
  6730  0034FE  FFFF               	dw	65535	; assembler added errata NOP
  6731  003500  2EE8               	decfsz	wreg,f,c
  6732  003502  EF75  F01A         	goto	u4655
  6733  003506  C027  F037         	movff	??_xtoa,xtoa@n
  6734  00350A  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  6735  00350E  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  6736  003512  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  6737  003516  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  6738  00351A  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  6739  00351E  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  6740  003522  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  6741  003526                     l4177:
  6742  003526  FFFF               	dw	65535	; assembler added errata NOP
  6743                           
  6744                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6745  003528  BE40               	btfsc	(xtoa@i+1)^0,7,c
  6746  00352A  EFA0  F01A         	goto	u4661
  6747  00352E  5040               	movf	(xtoa@i+1)^0,w,c
  6748  003530  E10A               	bnz	u4660
  6749  003532  0E02               	movlw	2
  6750  003534  5C3F               	subwf	xtoa@i^0,w,c
  6751  003536  A0D8               	btfss	status,0,c
  6752  003538  EFA0  F01A         	goto	u4661
  6753  00353C  EFA3  F01A         	goto	u4660
  6754  003540                     u4661:
  6755  003540  FFFF               	dw	65535	; assembler added errata NOP
  6756  003542  EFDC  F01A         	goto	l1301
  6757  003546                     u4660:
  6758  003546  FFFF               	dw	65535	; assembler added errata NOP
  6759  003548  5037               	movf	xtoa@n^0,w,c
  6760  00354A  1038               	iorwf	(xtoa@n+1)^0,w,c
  6761  00354C  1039               	iorwf	(xtoa@n+2)^0,w,c
  6762  00354E  103A               	iorwf	(xtoa@n+3)^0,w,c
  6763  003550  103B               	iorwf	(xtoa@n+4)^0,w,c
  6764  003552  103C               	iorwf	(xtoa@n+5)^0,w,c
  6765  003554  103D               	iorwf	(xtoa@n+6)^0,w,c
  6766  003556  103E               	iorwf	(xtoa@n+7)^0,w,c
  6767  003558  A4D8               	btfss	status,2,c
  6768  00355A  EFB1  F01A         	goto	u4671
  6769  00355E  EFB4  F01A         	goto	u4670
  6770  003562                     u4671:
  6771  003562  FFFF               	dw	65535	; assembler added errata NOP
  6772  003564  EFCE  F019         	goto	l4147
  6773  003568                     u4670:
  6774  003568  FFFF               	dw	65535	; assembler added errata NOP
  6775  00356A  BE34               	btfsc	(xtoa@p+1)^0,7,c
  6776  00356C  EFC3  F01A         	goto	u4680
  6777  003570  5034               	movf	(xtoa@p+1)^0,w,c
  6778  003572  E106               	bnz	u4681
  6779  003574  0433               	decf	xtoa@p^0,w,c
  6780  003576  B0D8               	btfsc	status,0,c
  6781  003578  EFC0  F01A         	goto	u4681
  6782  00357C  EFC3  F01A         	goto	u4680
  6783  003580                     u4681:
  6784  003580  FFFF               	dw	65535	; assembler added errata NOP
  6785  003582  EFCE  F019         	goto	l4147
  6786  003586                     u4680:
  6787  003586  FFFF               	dw	65535	; assembler added errata NOP
  6788  003588  BE36               	btfsc	(xtoa@w+1)^0,7,c
  6789  00358A  EFCF  F01A         	goto	u4691
  6790  00358E  5036               	movf	(xtoa@w+1)^0,w,c
  6791  003590  E109               	bnz	u4690
  6792  003592  0435               	decf	xtoa@w^0,w,c
  6793  003594  A0D8               	btfss	status,0,c
  6794  003596  EFCF  F01A         	goto	u4691
  6795  00359A  EFD2  F01A         	goto	u4690
  6796  00359E                     u4691:
  6797  00359E  FFFF               	dw	65535	; assembler added errata NOP
  6798  0035A0  EFDC  F01A         	goto	l1301
  6799  0035A4                     u4690:
  6800  0035A4  FFFF               	dw	65535	; assembler added errata NOP
  6801  0035A6  0100               	movlb	0	; () banked
  6802  0035A8  B38A               	btfsc	_flags& (0+255),1,b
  6803  0035AA  EFD9  F01A         	goto	u4701
  6804  0035AE  EFDC  F01A         	goto	u4700
  6805  0035B2                     u4701:
  6806  0035B2  FFFF               	dw	65535	; assembler added errata NOP
  6807  0035B4  EFCE  F019         	goto	l4147
  6808  0035B8                     u4700:
  6809  0035B8                     l1301:
  6810  0035B8  FFFF               	dw	65535	; assembler added errata NOP
  6811                           
  6812                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  6813  0035BA  0100               	movlb	0	; () banked
  6814  0035BC  A98A               	btfss	_flags& (0+255),4,b
  6815  0035BE  EFE3  F01A         	goto	u4711
  6816  0035C2  EFE6  F01A         	goto	u4710
  6817  0035C6                     u4711:
  6818  0035C6  FFFF               	dw	65535	; assembler added errata NOP
  6819  0035C8  EFFD  F01A         	goto	l4193
  6820  0035CC                     u4710:
  6821  0035CC  FFFF               	dw	65535	; assembler added errata NOP
  6822  0035CE                     
  6823                           ; BSR set to: 0
  6824                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 657:         --i;
  6825  0035CE  063F               	decf	xtoa@i^0,f,c
  6826  0035D0  A0D8               	btfss	status,0,c
  6827  0035D2  0640               	decf	(xtoa@i+1)^0,f,c
  6828  0035D4                     
  6829                           ; BSR set to: 0
  6830                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 658:         dbuf
      +                          [i] = x;
  6831  0035D4  0E98               	movlw	low _dbuf
  6832  0035D6  243F               	addwf	xtoa@i^0,w,c
  6833  0035D8  6ED9               	movwf	fsr2l,c
  6834  0035DA  0E00               	movlw	high _dbuf
  6835  0035DC  2040               	addwfc	(xtoa@i+1)^0,w,c
  6836  0035DE  6EDA               	movwf	fsr2h,c
  6837  0035E0  C026  FFDF         	movff	xtoa@x,indf2
  6838  0035E4                     
  6839                           ; BSR set to: 0
  6840                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 659:         --i;
  6841  0035E4  063F               	decf	xtoa@i^0,f,c
  6842  0035E6  A0D8               	btfss	status,0,c
  6843  0035E8  0640               	decf	(xtoa@i+1)^0,f,c
  6844                           
  6845                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 660:         dbuf
      +                          [i] = '0';
  6846  0035EA  0E98               	movlw	low _dbuf
  6847  0035EC  243F               	addwf	xtoa@i^0,w,c
  6848  0035EE  6ED9               	movwf	fsr2l,c
  6849  0035F0  0E00               	movlw	high _dbuf
  6850  0035F2  2040               	addwfc	(xtoa@i+1)^0,w,c
  6851  0035F4  6EDA               	movwf	fsr2h,c
  6852  0035F6  0E30               	movlw	48
  6853  0035F8  6EDF               	movwf	indf2,c
  6854  0035FA                     l4193:
  6855  0035FA  FFFF               	dw	65535	; assembler added errata NOP
  6856                           
  6857                           ; BSR set to: 0
  6858                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 664:     return p
      +                          ad(fp, &dbuf[i], w);
  6859  0035FC  C01C  F011         	movff	xtoa@fp,pad@fp
  6860  003600  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  6861  003604  0E98               	movlw	low _dbuf
  6862  003606  243F               	addwf	xtoa@i^0,w,c
  6863  003608  6E13               	movwf	pad@buf^0,c
  6864  00360A  0E00               	movlw	high _dbuf
  6865  00360C  2040               	addwfc	(xtoa@i+1)^0,w,c
  6866  00360E  6E14               	movwf	(pad@buf+1)^0,c
  6867  003610  C035  F015         	movff	xtoa@w,pad@p
  6868  003614  C036  F016         	movff	xtoa@w+1,pad@p+1
  6869  003618  EC95  F038         	call	_pad	;wreg free
  6870  00361C  C011  F01C         	movff	?_pad,?_xtoa
  6871  003620  C012  F01D         	movff	?_pad+1,?_xtoa+1
  6872  003624  0012               	return		;funcret
  6873  003626  FFFF               	dw	65535	; errata NOP
  6874  003628                     __end_of_xtoa:
  6875                           	callstack 0
  6876                           
  6877 ;; *************** function _toupper *****************
  6878 ;; Defined at:
  6879 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\toupper.c"
  6880 ;; Parameters:    Size  Location     Type
  6881 ;;  c               2    6[COMRAM] int 
  6882 ;; Auto vars:     Size  Location     Type
  6883 ;;		None
  6884 ;; Return value:  Size  Location     Type
  6885 ;;                  2    6[COMRAM] int 
  6886 ;; Registers used:
  6887 ;;		wreg, status,2, status,0
  6888 ;; Tracked objects:
  6889 ;;		On entry : 0/0
  6890 ;;		On exit  : 0/0
  6891 ;;		Unchanged: 0/0
  6892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6893 ;;      Params:         2       0       0       0       0       0       0
  6894 ;;      Locals:         2       0       0       0       0       0       0
  6895 ;;      Temps:          4       0       0       0       0       0       0
  6896 ;;      Totals:         8       0       0       0       0       0       0
  6897 ;;Total ram usage:        8 bytes
  6898 ;; Hardware stack levels used:    1
  6899 ;; Hardware stack levels required when called:    2
  6900 ;; This function calls:
  6901 ;;		_islower
  6902 ;; This function is called by:
  6903 ;;		_xtoa
  6904 ;; This function uses a non-reentrant model
  6905 ;;
  6906                           
  6907                           	psect	text10
  6908  0068FE                     __ptext10:
  6909                           	callstack 0
  6910  0068FE                     _toupper:
  6911                           	callstack 0
  6912  0068FE  FFFF               	dw	65535	; assembler added errata NOP
  6913  006900  0E9F               	movlw	159
  6914  006902  6E09               	movwf	??_toupper^0,c
  6915  006904  0EFF               	movlw	255
  6916  006906  6E0A               	movwf	(??_toupper+1)^0,c
  6917  006908  C007  F00B         	movff	toupper@c,??_toupper+2
  6918  00690C  C008  F00C         	movff	toupper@c+1,??_toupper+3
  6919  006910  5009               	movf	??_toupper^0,w,c
  6920  006912  260B               	addwf	(??_toupper+2)^0,f,c
  6921  006914  500A               	movf	(??_toupper+1)^0,w,c
  6922  006916  220C               	addwfc	(??_toupper+3)^0,f,c
  6923  006918  500C               	movf	(??_toupper+3)^0,w,c
  6924  00691A  E10B               	bnz	u4050
  6925  00691C  0E1A               	movlw	26
  6926  00691E  5C0B               	subwf	(??_toupper+2)^0,w,c
  6927  006920  A0D8               	btfss	status,0,c
  6928  006922  EF95  F034         	goto	u4051
  6929  006926  EF99  F034         	goto	u4050
  6930  00692A                     u4051:
  6931  00692A  FFFF               	dw	65535	; assembler added errata NOP
  6932  00692C  0E01               	movlw	1
  6933  00692E  EF9B  F034         	goto	u4060
  6934  006932                     u4050:
  6935  006932  FFFF               	dw	65535	; assembler added errata NOP
  6936  006934  0E00               	movlw	0
  6937  006936                     u4060:
  6938  006936  FFFF               	dw	65535	; assembler added errata NOP
  6939  006938  6E0D               	movwf	_toupper$1928^0,c
  6940  00693A  6A0E               	clrf	(_toupper$1928+1)^0,c
  6941  00693C  500D               	movf	_toupper$1928^0,w,c
  6942  00693E  100E               	iorwf	(_toupper$1928+1)^0,w,c
  6943  006940  B4D8               	btfsc	status,2,c
  6944  006942  EFA5  F034         	goto	u4071
  6945  006946  EFA8  F034         	goto	u4070
  6946  00694A                     u4071:
  6947  00694A  FFFF               	dw	65535	; assembler added errata NOP
  6948  00694C  EFAF  F034         	goto	l1487
  6949  006950                     u4070:
  6950  006950  FFFF               	dw	65535	; assembler added errata NOP
  6951  006952  0E5F               	movlw	95
  6952  006954  1407               	andwf	toupper@c^0,w,c
  6953  006956  6E07               	movwf	?_toupper^0,c
  6954  006958  6A08               	clrf	(?_toupper+1)^0,c
  6955  00695A  EFB4  F034         	goto	l1492
  6956  00695E                     l1487:
  6957  00695E  FFFF               	dw	65535	; assembler added errata NOP
  6958  006960  C007  F007         	movff	toupper@c,?_toupper
  6959  006964  C008  F008         	movff	toupper@c+1,?_toupper+1
  6960  006968                     l1492:
  6961  006968  FFFF               	dw	65535	; assembler added errata NOP
  6962  00696A  0012               	return		;funcret
  6963  00696C  FFFF               	dw	65535	; errata NOP
  6964  00696E                     __end_of_toupper:
  6965                           	callstack 0
  6966                           
  6967 ;; *************** function _islower *****************
  6968 ;; Defined at:
  6969 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\islower.c"
  6970 ;; Parameters:    Size  Location     Type
  6971 ;;  c               2    0[COMRAM] int 
  6972 ;; Auto vars:     Size  Location     Type
  6973 ;;		None
  6974 ;; Return value:  Size  Location     Type
  6975 ;;                  2    0[COMRAM] int 
  6976 ;; Registers used:
  6977 ;;		wreg, status,2, status,0
  6978 ;; Tracked objects:
  6979 ;;		On entry : 0/0
  6980 ;;		On exit  : 0/0
  6981 ;;		Unchanged: 0/0
  6982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6983 ;;      Params:         2       0       0       0       0       0       0
  6984 ;;      Locals:         0       0       0       0       0       0       0
  6985 ;;      Temps:          4       0       0       0       0       0       0
  6986 ;;      Totals:         6       0       0       0       0       0       0
  6987 ;;Total ram usage:        6 bytes
  6988 ;; Hardware stack levels used:    1
  6989 ;; Hardware stack levels required when called:    1
  6990 ;; This function calls:
  6991 ;;		Nothing
  6992 ;; This function is called by:
  6993 ;;		_toupper
  6994 ;; This function uses a non-reentrant model
  6995 ;;
  6996                           
  6997                           	psect	text11
  6998  00654A                     __ptext11:
  6999                           	callstack 0
  7000  00654A                     _islower:
  7001                           	callstack 23
  7002  00654A  FFFF               	dw	65535	; assembler added errata NOP
  7003  00654C  0E9F               	movlw	159
  7004  00654E  6E03               	movwf	??_islower^0,c
  7005  006550  0EFF               	movlw	255
  7006  006552  6E04               	movwf	(??_islower+1)^0,c
  7007  006554  C001  F005         	movff	islower@c,??_islower+2
  7008  006558  C002  F006         	movff	islower@c+1,??_islower+3
  7009  00655C  5003               	movf	??_islower^0,w,c
  7010  00655E  2605               	addwf	(??_islower+2)^0,f,c
  7011  006560  5004               	movf	(??_islower+1)^0,w,c
  7012  006562  2206               	addwfc	(??_islower+3)^0,f,c
  7013  006564  5006               	movf	(??_islower+3)^0,w,c
  7014  006566  E10B               	bnz	u3740
  7015  006568  0E1A               	movlw	26
  7016  00656A  5C05               	subwf	(??_islower+2)^0,w,c
  7017  00656C  A0D8               	btfss	status,0,c
  7018  00656E  EFBB  F032         	goto	u3741
  7019  006572  EFBF  F032         	goto	u3740
  7020  006576                     u3741:
  7021  006576  FFFF               	dw	65535	; assembler added errata NOP
  7022  006578  0E01               	movlw	1
  7023  00657A  EFC1  F032         	goto	u3750
  7024  00657E                     u3740:
  7025  00657E  FFFF               	dw	65535	; assembler added errata NOP
  7026  006580  0E00               	movlw	0
  7027  006582                     u3750:
  7028  006582  FFFF               	dw	65535	; assembler added errata NOP
  7029  006584  6E01               	movwf	?_islower^0,c
  7030  006586  6A02               	clrf	(?_islower+1)^0,c
  7031  006588  0012               	return		;funcret
  7032  00658A  FFFF               	dw	65535	; errata NOP
  7033  00658C                     __end_of_islower:
  7034                           	callstack 0
  7035                           
  7036 ;; *************** function _isupper *****************
  7037 ;; Defined at:
  7038 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  7039 ;; Parameters:    Size  Location     Type
  7040 ;;  c               2    0[COMRAM] int 
  7041 ;; Auto vars:     Size  Location     Type
  7042 ;;		None
  7043 ;; Return value:  Size  Location     Type
  7044 ;;                  2    0[COMRAM] int 
  7045 ;; Registers used:
  7046 ;;		wreg, status,2, status,0
  7047 ;; Tracked objects:
  7048 ;;		On entry : 0/0
  7049 ;;		On exit  : 0/0
  7050 ;;		Unchanged: 0/0
  7051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7052 ;;      Params:         2       0       0       0       0       0       0
  7053 ;;      Locals:         0       0       0       0       0       0       0
  7054 ;;      Temps:          4       0       0       0       0       0       0
  7055 ;;      Totals:         6       0       0       0       0       0       0
  7056 ;;Total ram usage:        6 bytes
  7057 ;; Hardware stack levels used:    1
  7058 ;; Hardware stack levels required when called:    1
  7059 ;; This function calls:
  7060 ;;		Nothing
  7061 ;; This function is called by:
  7062 ;;		_xtoa
  7063 ;; This function uses a non-reentrant model
  7064 ;;
  7065                           
  7066                           	psect	text12
  7067  006508                     __ptext12:
  7068                           	callstack 0
  7069  006508                     _isupper:
  7070                           	callstack 24
  7071  006508  FFFF               	dw	65535	; assembler added errata NOP
  7072  00650A  0EBF               	movlw	191
  7073  00650C  6E03               	movwf	??_isupper^0,c
  7074  00650E  0EFF               	movlw	255
  7075  006510  6E04               	movwf	(??_isupper+1)^0,c
  7076  006512  C001  F005         	movff	isupper@c,??_isupper+2
  7077  006516  C002  F006         	movff	isupper@c+1,??_isupper+3
  7078  00651A  5003               	movf	??_isupper^0,w,c
  7079  00651C  2605               	addwf	(??_isupper+2)^0,f,c
  7080  00651E  5004               	movf	(??_isupper+1)^0,w,c
  7081  006520  2206               	addwfc	(??_isupper+3)^0,f,c
  7082  006522  5006               	movf	(??_isupper+3)^0,w,c
  7083  006524  E10B               	bnz	u4010
  7084  006526  0E1A               	movlw	26
  7085  006528  5C05               	subwf	(??_isupper+2)^0,w,c
  7086  00652A  A0D8               	btfss	status,0,c
  7087  00652C  EF9A  F032         	goto	u4011
  7088  006530  EF9E  F032         	goto	u4010
  7089  006534                     u4011:
  7090  006534  FFFF               	dw	65535	; assembler added errata NOP
  7091  006536  0E01               	movlw	1
  7092  006538  EFA0  F032         	goto	u4020
  7093  00653C                     u4010:
  7094  00653C  FFFF               	dw	65535	; assembler added errata NOP
  7095  00653E  0E00               	movlw	0
  7096  006540                     u4020:
  7097  006540  FFFF               	dw	65535	; assembler added errata NOP
  7098  006542  6E01               	movwf	?_isupper^0,c
  7099  006544  6A02               	clrf	(?_isupper+1)^0,c
  7100  006546  0012               	return		;funcret
  7101  006548  FFFF               	dw	65535	; errata NOP
  7102  00654A                     __end_of_isupper:
  7103                           	callstack 0
  7104                           
  7105 ;; *************** function _isalpha *****************
  7106 ;; Defined at:
  7107 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isalpha.c"
  7108 ;; Parameters:    Size  Location     Type
  7109 ;;  c               2    0[COMRAM] int 
  7110 ;; Auto vars:     Size  Location     Type
  7111 ;;		None
  7112 ;; Return value:  Size  Location     Type
  7113 ;;                  2    0[COMRAM] int 
  7114 ;; Registers used:
  7115 ;;		wreg, status,2, status,0
  7116 ;; Tracked objects:
  7117 ;;		On entry : 0/0
  7118 ;;		On exit  : 0/0
  7119 ;;		Unchanged: 0/0
  7120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7121 ;;      Params:         2       0       0       0       0       0       0
  7122 ;;      Locals:         0       0       0       0       0       0       0
  7123 ;;      Temps:          4       0       0       0       0       0       0
  7124 ;;      Totals:         6       0       0       0       0       0       0
  7125 ;;Total ram usage:        6 bytes
  7126 ;; Hardware stack levels used:    1
  7127 ;; Hardware stack levels required when called:    1
  7128 ;; This function calls:
  7129 ;;		Nothing
  7130 ;; This function is called by:
  7131 ;;		_xtoa
  7132 ;; This function uses a non-reentrant model
  7133 ;;
  7134                           
  7135                           	psect	text13
  7136  00658C                     __ptext13:
  7137                           	callstack 0
  7138  00658C                     _isalpha:
  7139                           	callstack 24
  7140  00658C  FFFF               	dw	65535	; assembler added errata NOP
  7141  00658E  0E9F               	movlw	159
  7142  006590  6E03               	movwf	??_isalpha^0,c
  7143  006592  0EFF               	movlw	255
  7144  006594  6E04               	movwf	(??_isalpha+1)^0,c
  7145  006596  0E20               	movlw	32
  7146  006598  1001               	iorwf	isalpha@c^0,w,c
  7147  00659A  6E05               	movwf	(??_isalpha+2)^0,c
  7148  00659C  0E00               	movlw	0
  7149  00659E  1002               	iorwf	(isalpha@c+1)^0,w,c
  7150  0065A0  6E06               	movwf	(??_isalpha+3)^0,c
  7151  0065A2  5003               	movf	??_isalpha^0,w,c
  7152  0065A4  2605               	addwf	(??_isalpha+2)^0,f,c
  7153  0065A6  5004               	movf	(??_isalpha+1)^0,w,c
  7154  0065A8  2206               	addwfc	(??_isalpha+3)^0,f,c
  7155  0065AA  5006               	movf	(??_isalpha+3)^0,w,c
  7156  0065AC  E10B               	bnz	u4030
  7157  0065AE  0E1A               	movlw	26
  7158  0065B0  5C05               	subwf	(??_isalpha+2)^0,w,c
  7159  0065B2  A0D8               	btfss	status,0,c
  7160  0065B4  EFDE  F032         	goto	u4031
  7161  0065B8  EFE2  F032         	goto	u4030
  7162  0065BC                     u4031:
  7163  0065BC  FFFF               	dw	65535	; assembler added errata NOP
  7164  0065BE  0E01               	movlw	1
  7165  0065C0  EFE4  F032         	goto	u4040
  7166  0065C4                     u4030:
  7167  0065C4  FFFF               	dw	65535	; assembler added errata NOP
  7168  0065C6  0E00               	movlw	0
  7169  0065C8                     u4040:
  7170  0065C8  FFFF               	dw	65535	; assembler added errata NOP
  7171  0065CA  6E01               	movwf	?_isalpha^0,c
  7172  0065CC  6A02               	clrf	(?_isalpha+1)^0,c
  7173  0065CE  0012               	return		;funcret
  7174  0065D0  FFFF               	dw	65535	; errata NOP
  7175  0065D2                     __end_of_isalpha:
  7176                           	callstack 0
  7177                           
  7178 ;; *************** function _utoa *****************
  7179 ;; Defined at:
  7180 ;;		line 593 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7181 ;; Parameters:    Size  Location     Type
  7182 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7183 ;;		 -> vsnprintf@f(6), 
  7184 ;;  d               8   29[COMRAM] unsigned long long 
  7185 ;; Auto vars:     Size  Location     Type
  7186 ;;  n               8   49[COMRAM] unsigned long long 
  7187 ;;  i               2   57[COMRAM] int 
  7188 ;;  w               2   47[COMRAM] int 
  7189 ;;  p               2   45[COMRAM] int 
  7190 ;; Return value:  Size  Location     Type
  7191 ;;                  2   27[COMRAM] int 
  7192 ;; Registers used:
  7193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7194 ;; Tracked objects:
  7195 ;;		On entry : 0/0
  7196 ;;		On exit  : 0/0
  7197 ;;		Unchanged: 0/0
  7198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7199 ;;      Params:        10       0       0       0       0       0       0
  7200 ;;      Locals:        14       0       0       0       0       0       0
  7201 ;;      Temps:          8       0       0       0       0       0       0
  7202 ;;      Totals:        32       0       0       0       0       0       0
  7203 ;;Total ram usage:       32 bytes
  7204 ;; Hardware stack levels used:    1
  7205 ;; Hardware stack levels required when called:    5
  7206 ;; This function calls:
  7207 ;;		___lodiv
  7208 ;;		___lomod
  7209 ;;		_pad
  7210 ;; This function is called by:
  7211 ;;		_vfpfcnvrt
  7212 ;; This function uses a non-reentrant model
  7213 ;;
  7214                           
  7215                           	psect	text14
  7216  003628                     __ptext14:
  7217                           	callstack 0
  7218  003628                     _utoa:
  7219                           	callstack 0
  7220  003628  FFFF               	dw	65535	; assembler added errata NOP
  7221  00362A                     
  7222                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 593: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99
      +                          \common\doprnt.c: 594: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\dop
      +                          rnt.c: 595:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common
      +                          \doprnt.c: 596:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sourc
      +                          es\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  7223  00362A  0100               	movlb	0	; () banked
  7224  00362C  BF89               	btfsc	(_prec+1)& (0+255),7,b
  7225  00362E  EF1B  F01B         	goto	u4481
  7226  003632  EF1E  F01B         	goto	u4480
  7227  003636                     u4481:
  7228  003636  FFFF               	dw	65535	; assembler added errata NOP
  7229  003638  EF20  F01B         	goto	l4099
  7230  00363C                     u4480:
  7231  00363C  FFFF               	dw	65535	; assembler added errata NOP
  7232  00363E                     
  7233                           ; BSR set to: 0
  7234                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 600:         flag
      +                          s &= ~(1 << 1);
  7235  00363E  938A               	bcf	_flags& (0+255),1,b
  7236  003640                     l4099:
  7237  003640  FFFF               	dw	65535	; assembler added errata NOP
  7238                           
  7239                           ; BSR set to: 0
  7240                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 602:     p = (0 <
      +                           prec) ? prec : 1;
  7241  003642  BF89               	btfsc	(_prec+1)& (0+255),7,b
  7242  003644  EF2F  F01B         	goto	u4490
  7243  003648  5189               	movf	(_prec+1)& (0+255),w,b
  7244  00364A  E106               	bnz	u4491
  7245  00364C  0588               	decf	_prec& (0+255),w,b
  7246  00364E  B0D8               	btfsc	status,0,c
  7247  003650  EF2C  F01B         	goto	u4491
  7248  003654  EF2F  F01B         	goto	u4490
  7249  003658                     u4491:
  7250  003658  FFFF               	dw	65535	; assembler added errata NOP
  7251  00365A  EF36  F01B         	goto	l1263
  7252  00365E                     u4490:
  7253  00365E  FFFF               	dw	65535	; assembler added errata NOP
  7254  003660                     
  7255                           ; BSR set to: 0
  7256  003660  0E00               	movlw	0
  7257  003662  6E2F               	movwf	(utoa@p+1)^0,c
  7258  003664  0E01               	movlw	1
  7259  003666  6E2E               	movwf	utoa@p^0,c
  7260  003668  EF3B  F01B         	goto	l1265
  7261  00366C                     l1263:
  7262  00366C  FFFF               	dw	65535	; assembler added errata NOP
  7263                           
  7264                           ; BSR set to: 0
  7265  00366E  C088  F02E         	movff	_prec,utoa@p
  7266  003672  C089  F02F         	movff	_prec+1,utoa@p+1
  7267  003676                     l1265:
  7268  003676  FFFF               	dw	65535	; assembler added errata NOP
  7269                           
  7270                           ; BSR set to: 0
  7271                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 603:     w = widt
      +                          h;
  7272  003678  C086  F030         	movff	_width,utoa@w
  7273  00367C  C087  F031         	movff	_width+1,utoa@w+1
  7274                           
  7275                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 606:     n = d;
  7276  003680  C01E  F032         	movff	utoa@d,utoa@n
  7277  003684  C01F  F033         	movff	utoa@d+1,utoa@n+1
  7278  003688  C020  F034         	movff	utoa@d+2,utoa@n+2
  7279  00368C  C021  F035         	movff	utoa@d+3,utoa@n+3
  7280  003690  C022  F036         	movff	utoa@d+4,utoa@n+4
  7281  003694  C023  F037         	movff	utoa@d+5,utoa@n+5
  7282  003698  C024  F038         	movff	utoa@d+6,utoa@n+6
  7283  00369C  C025  F039         	movff	utoa@d+7,utoa@n+7
  7284  0036A0                     
  7285                           ; BSR set to: 0
  7286                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 607:     i = size
      +                          of(dbuf) - 1;
  7287  0036A0  0E00               	movlw	0
  7288  0036A2  6E3B               	movwf	(utoa@i+1)^0,c
  7289  0036A4  0E1F               	movlw	31
  7290  0036A6  6E3A               	movwf	utoa@i^0,c
  7291  0036A8                     
  7292                           ; BSR set to: 0
  7293                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 608:     dbuf[i] 
      +                          = '\0';
  7294  0036A8  0E00               	movlw	0
  7295  0036AA  6FB7               	movwf	(_dbuf+31)& (0+255),b
  7296                           
  7297                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 609:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7298  0036AC  EFCF  F01B         	goto	l4117
  7299  0036B0                     l4107:
  7300  0036B0  FFFF               	dw	65535	; assembler added errata NOP
  7301                           
  7302                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 610:         --i;
  7303  0036B2  063A               	decf	utoa@i^0,f,c
  7304  0036B4  A0D8               	btfss	status,0,c
  7305  0036B6  063B               	decf	(utoa@i+1)^0,f,c
  7306  0036B8                     
  7307                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 611:         dbuf
      +                          [i] = '0' + (n % 10);
  7308  0036B8  0E98               	movlw	low _dbuf
  7309  0036BA  243A               	addwf	utoa@i^0,w,c
  7310  0036BC  6ED9               	movwf	fsr2l,c
  7311  0036BE  0E00               	movlw	high _dbuf
  7312  0036C0  203B               	addwfc	(utoa@i+1)^0,w,c
  7313  0036C2  6EDA               	movwf	fsr2h,c
  7314  0036C4  C032  F001         	movff	utoa@n,___lomod@dividend
  7315  0036C8  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  7316  0036CC  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  7317  0036D0  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  7318  0036D4  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  7319  0036D8  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  7320  0036DC  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  7321  0036E0  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  7322  0036E4  0E0A               	movlw	10
  7323  0036E6  6E09               	movwf	___lomod@divisor^0,c
  7324  0036E8  0E00               	movlw	0
  7325  0036EA  6E0A               	movwf	(___lomod@divisor+1)^0,c
  7326  0036EC  0E00               	movlw	0
  7327  0036EE  6E0B               	movwf	(___lomod@divisor+2)^0,c
  7328  0036F0  0E00               	movlw	0
  7329  0036F2  6E0C               	movwf	(___lomod@divisor+3)^0,c
  7330  0036F4  0E00               	movlw	0
  7331  0036F6  6E0D               	movwf	(___lomod@divisor+4)^0,c
  7332  0036F8  0E00               	movlw	0
  7333  0036FA  6E0E               	movwf	(___lomod@divisor+5)^0,c
  7334  0036FC  0E00               	movlw	0
  7335  0036FE  6E0F               	movwf	(___lomod@divisor+6)^0,c
  7336  003700  0E00               	movlw	0
  7337  003702  6E10               	movwf	(___lomod@divisor+7)^0,c
  7338  003704  EC08  F039         	call	___lomod	;wreg free
  7339  003708  C001  F026         	movff	?___lomod,??_utoa
  7340  00370C  C002  F027         	movff	?___lomod+1,??_utoa+1
  7341  003710  C003  F028         	movff	?___lomod+2,??_utoa+2
  7342  003714  C004  F029         	movff	?___lomod+3,??_utoa+3
  7343  003718  C005  F02A         	movff	?___lomod+4,??_utoa+4
  7344  00371C  C006  F02B         	movff	?___lomod+5,??_utoa+5
  7345  003720  C007  F02C         	movff	?___lomod+6,??_utoa+6
  7346  003724  C008  F02D         	movff	?___lomod+7,??_utoa+7
  7347  003728  5026               	movf	??_utoa^0,w,c
  7348  00372A  0F30               	addlw	48
  7349  00372C  6EDF               	movwf	indf2,c
  7350  00372E                     
  7351                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 612:         --p;
  7352  00372E  062E               	decf	utoa@p^0,f,c
  7353  003730  A0D8               	btfss	status,0,c
  7354  003732  062F               	decf	(utoa@p+1)^0,f,c
  7355  003734                     
  7356                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 613:         --w;
  7357  003734  0630               	decf	utoa@w^0,f,c
  7358  003736  A0D8               	btfss	status,0,c
  7359  003738  0631               	decf	(utoa@w+1)^0,f,c
  7360  00373A                     
  7361                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 614:         n = 
      +                          n / 10;
  7362  00373A  C032  F001         	movff	utoa@n,___lodiv@dividend
  7363  00373E  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  7364  003742  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  7365  003746  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  7366  00374A  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  7367  00374E  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  7368  003752  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  7369  003756  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  7370  00375A  0E0A               	movlw	10
  7371  00375C  6E09               	movwf	___lodiv@divisor^0,c
  7372  00375E  0E00               	movlw	0
  7373  003760  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  7374  003762  0E00               	movlw	0
  7375  003764  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  7376  003766  0E00               	movlw	0
  7377  003768  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  7378  00376A  0E00               	movlw	0
  7379  00376C  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  7380  00376E  0E00               	movlw	0
  7381  003770  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  7382  003772  0E00               	movlw	0
  7383  003774  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  7384  003776  0E00               	movlw	0
  7385  003778  6E10               	movwf	(___lodiv@divisor+7)^0,c
  7386  00377A  EC79  F03A         	call	___lodiv	;wreg free
  7387  00377E  C001  F032         	movff	?___lodiv,utoa@n
  7388  003782  C002  F033         	movff	?___lodiv+1,utoa@n+1
  7389  003786  C003  F034         	movff	?___lodiv+2,utoa@n+2
  7390  00378A  C004  F035         	movff	?___lodiv+3,utoa@n+3
  7391  00378E  C005  F036         	movff	?___lodiv+4,utoa@n+4
  7392  003792  C006  F037         	movff	?___lodiv+5,utoa@n+5
  7393  003796  C007  F038         	movff	?___lodiv+6,utoa@n+6
  7394  00379A  C008  F039         	movff	?___lodiv+7,utoa@n+7
  7395  00379E                     l4117:
  7396  00379E  FFFF               	dw	65535	; assembler added errata NOP
  7397                           
  7398                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 609:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7399  0037A0  503A               	movf	utoa@i^0,w,c
  7400  0037A2  103B               	iorwf	(utoa@i+1)^0,w,c
  7401  0037A4  B4D8               	btfsc	status,2,c
  7402  0037A6  EFD7  F01B         	goto	u4501
  7403  0037AA  EFDA  F01B         	goto	u4500
  7404  0037AE                     u4501:
  7405  0037AE  FFFF               	dw	65535	; assembler added errata NOP
  7406  0037B0  EF13  F01C         	goto	l4127
  7407  0037B4                     u4500:
  7408  0037B4  FFFF               	dw	65535	; assembler added errata NOP
  7409  0037B6  5032               	movf	utoa@n^0,w,c
  7410  0037B8  1033               	iorwf	(utoa@n+1)^0,w,c
  7411  0037BA  1034               	iorwf	(utoa@n+2)^0,w,c
  7412  0037BC  1035               	iorwf	(utoa@n+3)^0,w,c
  7413  0037BE  1036               	iorwf	(utoa@n+4)^0,w,c
  7414  0037C0  1037               	iorwf	(utoa@n+5)^0,w,c
  7415  0037C2  1038               	iorwf	(utoa@n+6)^0,w,c
  7416  0037C4  1039               	iorwf	(utoa@n+7)^0,w,c
  7417  0037C6  A4D8               	btfss	status,2,c
  7418  0037C8  EFE8  F01B         	goto	u4511
  7419  0037CC  EFEB  F01B         	goto	u4510
  7420  0037D0                     u4511:
  7421  0037D0  FFFF               	dw	65535	; assembler added errata NOP
  7422  0037D2  EF58  F01B         	goto	l4107
  7423  0037D6                     u4510:
  7424  0037D6  FFFF               	dw	65535	; assembler added errata NOP
  7425  0037D8  BE2F               	btfsc	(utoa@p+1)^0,7,c
  7426  0037DA  EFFA  F01B         	goto	u4520
  7427  0037DE  502F               	movf	(utoa@p+1)^0,w,c
  7428  0037E0  E106               	bnz	u4521
  7429  0037E2  042E               	decf	utoa@p^0,w,c
  7430  0037E4  B0D8               	btfsc	status,0,c
  7431  0037E6  EFF7  F01B         	goto	u4521
  7432  0037EA  EFFA  F01B         	goto	u4520
  7433  0037EE                     u4521:
  7434  0037EE  FFFF               	dw	65535	; assembler added errata NOP
  7435  0037F0  EF58  F01B         	goto	l4107
  7436  0037F4                     u4520:
  7437  0037F4  FFFF               	dw	65535	; assembler added errata NOP
  7438  0037F6  BE31               	btfsc	(utoa@w+1)^0,7,c
  7439  0037F8  EF06  F01C         	goto	u4531
  7440  0037FC  5031               	movf	(utoa@w+1)^0,w,c
  7441  0037FE  E109               	bnz	u4530
  7442  003800  0430               	decf	utoa@w^0,w,c
  7443  003802  A0D8               	btfss	status,0,c
  7444  003804  EF06  F01C         	goto	u4531
  7445  003808  EF09  F01C         	goto	u4530
  7446  00380C                     u4531:
  7447  00380C  FFFF               	dw	65535	; assembler added errata NOP
  7448  00380E  EF13  F01C         	goto	l4127
  7449  003812                     u4530:
  7450  003812  FFFF               	dw	65535	; assembler added errata NOP
  7451  003814  0100               	movlb	0	; () banked
  7452  003816  B38A               	btfsc	_flags& (0+255),1,b
  7453  003818  EF10  F01C         	goto	u4541
  7454  00381C  EF13  F01C         	goto	u4540
  7455  003820                     u4541:
  7456  003820  FFFF               	dw	65535	; assembler added errata NOP
  7457  003822  EF58  F01B         	goto	l4107
  7458  003826                     u4540:
  7459  003826                     l4127:
  7460  003826  FFFF               	dw	65535	; assembler added errata NOP
  7461                           
  7462                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 618:     return p
      +                          ad(fp, &dbuf[i], w);
  7463  003828  C01C  F011         	movff	utoa@fp,pad@fp
  7464  00382C  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  7465  003830  0E98               	movlw	low _dbuf
  7466  003832  243A               	addwf	utoa@i^0,w,c
  7467  003834  6E13               	movwf	pad@buf^0,c
  7468  003836  0E00               	movlw	high _dbuf
  7469  003838  203B               	addwfc	(utoa@i+1)^0,w,c
  7470  00383A  6E14               	movwf	(pad@buf+1)^0,c
  7471  00383C  C030  F015         	movff	utoa@w,pad@p
  7472  003840  C031  F016         	movff	utoa@w+1,pad@p+1
  7473  003844  EC95  F038         	call	_pad	;wreg free
  7474  003848  C011  F01C         	movff	?_pad,?_utoa
  7475  00384C  C012  F01D         	movff	?_pad+1,?_utoa+1
  7476  003850  0012               	return		;funcret
  7477  003852  FFFF               	dw	65535	; errata NOP
  7478  003854                     __end_of_utoa:
  7479                           	callstack 0
  7480                           
  7481 ;; *************** function ___lomod *****************
  7482 ;; Defined at:
  7483 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lomod.c"
  7484 ;; Parameters:    Size  Location     Type
  7485 ;;  dividend        8    0[COMRAM] unsigned long long 
  7486 ;;  divisor         8    8[COMRAM] unsigned long long 
  7487 ;; Auto vars:     Size  Location     Type
  7488 ;;  counter         1   16[COMRAM] unsigned char 
  7489 ;; Return value:  Size  Location     Type
  7490 ;;                  8    0[COMRAM] unsigned long long 
  7491 ;; Registers used:
  7492 ;;		wreg, status,2, status,0
  7493 ;; Tracked objects:
  7494 ;;		On entry : 0/0
  7495 ;;		On exit  : 0/0
  7496 ;;		Unchanged: 0/0
  7497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7498 ;;      Params:        16       0       0       0       0       0       0
  7499 ;;      Locals:         1       0       0       0       0       0       0
  7500 ;;      Temps:          0       0       0       0       0       0       0
  7501 ;;      Totals:        17       0       0       0       0       0       0
  7502 ;;Total ram usage:       17 bytes
  7503 ;; Hardware stack levels used:    1
  7504 ;; Hardware stack levels required when called:    1
  7505 ;; This function calls:
  7506 ;;		Nothing
  7507 ;; This function is called by:
  7508 ;;		_utoa
  7509 ;; This function uses a non-reentrant model
  7510 ;;
  7511                           
  7512                           	psect	text15
  7513  007210                     __ptext15:
  7514                           	callstack 0
  7515  007210                     ___lomod:
  7516                           	callstack 0
  7517  007210  FFFF               	dw	65535	; assembler added errata NOP
  7518  007212  5009               	movf	___lomod@divisor^0,w,c
  7519  007214  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  7520  007216  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  7521  007218  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  7522  00721A  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  7523  00721C  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  7524  00721E  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  7525  007220  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  7526  007222  B4D8               	btfsc	status,2,c
  7527  007224  EF16  F039         	goto	u3941
  7528  007228  EF19  F039         	goto	u3940
  7529  00722C                     u3941:
  7530  00722C  FFFF               	dw	65535	; assembler added errata NOP
  7531  00722E  EF6A  F039         	goto	l875
  7532  007232                     u3940:
  7533  007232  FFFF               	dw	65535	; assembler added errata NOP
  7534  007234  0E01               	movlw	1
  7535  007236  6E11               	movwf	___lomod@counter^0,c
  7536  007238  EF29  F039         	goto	l3863
  7537  00723C                     l3861:
  7538  00723C  FFFF               	dw	65535	; assembler added errata NOP
  7539  00723E  90D8               	bcf	status,0,c
  7540  007240  3609               	rlcf	___lomod@divisor^0,f,c
  7541  007242  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  7542  007244  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  7543  007246  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  7544  007248  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  7545  00724A  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  7546  00724C  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  7547  00724E  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  7548  007250  2A11               	incf	___lomod@counter^0,f,c
  7549  007252                     l3863:
  7550  007252  FFFF               	dw	65535	; assembler added errata NOP
  7551  007254  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  7552  007256  EF2F  F039         	goto	u3951
  7553  00725A  EF32  F039         	goto	u3950
  7554  00725E                     u3951:
  7555  00725E  FFFF               	dw	65535	; assembler added errata NOP
  7556  007260  EF1E  F039         	goto	l3861
  7557  007264                     u3950:
  7558  007264  FFFF               	dw	65535	; assembler added errata NOP
  7559  007266                     l3865:
  7560  007266  FFFF               	dw	65535	; assembler added errata NOP
  7561  007268  5009               	movf	___lomod@divisor^0,w,c
  7562  00726A  5C01               	subwf	___lomod@dividend^0,w,c
  7563  00726C  500A               	movf	(___lomod@divisor+1)^0,w,c
  7564  00726E  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  7565  007270  500B               	movf	(___lomod@divisor+2)^0,w,c
  7566  007272  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  7567  007274  500C               	movf	(___lomod@divisor+3)^0,w,c
  7568  007276  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  7569  007278  500D               	movf	(___lomod@divisor+4)^0,w,c
  7570  00727A  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  7571  00727C  500E               	movf	(___lomod@divisor+5)^0,w,c
  7572  00727E  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  7573  007280  500F               	movf	(___lomod@divisor+6)^0,w,c
  7574  007282  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  7575  007284  5010               	movf	(___lomod@divisor+7)^0,w,c
  7576  007286  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  7577  007288  A0D8               	btfss	status,0,c
  7578  00728A  EF49  F039         	goto	u3961
  7579  00728E  EF4C  F039         	goto	u3960
  7580  007292                     u3961:
  7581  007292  FFFF               	dw	65535	; assembler added errata NOP
  7582  007294  EF5D  F039         	goto	l3869
  7583  007298                     u3960:
  7584  007298  FFFF               	dw	65535	; assembler added errata NOP
  7585  00729A  5009               	movf	___lomod@divisor^0,w,c
  7586  00729C  5E01               	subwf	___lomod@dividend^0,f,c
  7587  00729E  500A               	movf	(___lomod@divisor+1)^0,w,c
  7588  0072A0  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  7589  0072A2  500B               	movf	(___lomod@divisor+2)^0,w,c
  7590  0072A4  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  7591  0072A6  500C               	movf	(___lomod@divisor+3)^0,w,c
  7592  0072A8  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  7593  0072AA  500D               	movf	(___lomod@divisor+4)^0,w,c
  7594  0072AC  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  7595  0072AE  500E               	movf	(___lomod@divisor+5)^0,w,c
  7596  0072B0  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  7597  0072B2  500F               	movf	(___lomod@divisor+6)^0,w,c
  7598  0072B4  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  7599  0072B6  5010               	movf	(___lomod@divisor+7)^0,w,c
  7600  0072B8  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  7601  0072BA                     l3869:
  7602  0072BA  FFFF               	dw	65535	; assembler added errata NOP
  7603  0072BC  90D8               	bcf	status,0,c
  7604  0072BE  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  7605  0072C0  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  7606  0072C2  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  7607  0072C4  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  7608  0072C6  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  7609  0072C8  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  7610  0072CA  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  7611  0072CC  3209               	rrcf	___lomod@divisor^0,f,c
  7612  0072CE  2E11               	decfsz	___lomod@counter^0,f,c
  7613  0072D0  EF33  F039         	goto	l3865
  7614  0072D4                     l875:
  7615  0072D4  FFFF               	dw	65535	; assembler added errata NOP
  7616  0072D6  C001  F001         	movff	___lomod@dividend,?___lomod
  7617  0072DA  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  7618  0072DE  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  7619  0072E2  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  7620  0072E6  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  7621  0072EA  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  7622  0072EE  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  7623  0072F2  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  7624  0072F6  0012               	return		;funcret
  7625  0072F8  FFFF               	dw	65535	; errata NOP
  7626  0072FA                     __end_of___lomod:
  7627                           	callstack 0
  7628                           
  7629 ;; *************** function ___lodiv *****************
  7630 ;; Defined at:
  7631 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lodiv.c"
  7632 ;; Parameters:    Size  Location     Type
  7633 ;;  dividend        8    0[COMRAM] unsigned long long 
  7634 ;;  divisor         8    8[COMRAM] unsigned long long 
  7635 ;; Auto vars:     Size  Location     Type
  7636 ;;  quotient        8   16[COMRAM] unsigned long long 
  7637 ;;  counter         1   24[COMRAM] unsigned char 
  7638 ;; Return value:  Size  Location     Type
  7639 ;;                  8    0[COMRAM] unsigned long long 
  7640 ;; Registers used:
  7641 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7642 ;; Tracked objects:
  7643 ;;		On entry : 0/0
  7644 ;;		On exit  : 0/0
  7645 ;;		Unchanged: 0/0
  7646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7647 ;;      Params:        16       0       0       0       0       0       0
  7648 ;;      Locals:         9       0       0       0       0       0       0
  7649 ;;      Temps:          0       0       0       0       0       0       0
  7650 ;;      Totals:        25       0       0       0       0       0       0
  7651 ;;Total ram usage:       25 bytes
  7652 ;; Hardware stack levels used:    1
  7653 ;; Hardware stack levels required when called:    1
  7654 ;; This function calls:
  7655 ;;		Nothing
  7656 ;; This function is called by:
  7657 ;;		_utoa
  7658 ;; This function uses a non-reentrant model
  7659 ;;
  7660                           
  7661                           	psect	text16
  7662  0074F2                     __ptext16:
  7663                           	callstack 0
  7664  0074F2                     ___lodiv:
  7665                           	callstack 0
  7666  0074F2  FFFF               	dw	65535	; assembler added errata NOP
  7667  0074F4  EE20  F011         	lfsr	2,___lodiv@quotient
  7668  0074F8  0E07               	movlw	7
  7669  0074FA                     u3901:
  7670  0074FA  6ADE               	clrf	postinc2,c
  7671  0074FC  06E8               	decf	wreg,f,c
  7672  0074FE  E2FD               	bc	u3901
  7673  007500  5009               	movf	___lodiv@divisor^0,w,c
  7674  007502  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  7675  007504  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  7676  007506  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  7677  007508  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  7678  00750A  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  7679  00750C  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  7680  00750E  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  7681  007510  B4D8               	btfsc	status,2,c
  7682  007512  EF8D  F03A         	goto	u3911
  7683  007516  EF90  F03A         	goto	u3910
  7684  00751A                     u3911:
  7685  00751A  FFFF               	dw	65535	; assembler added errata NOP
  7686  00751C  EFEB  F03A         	goto	l865
  7687  007520                     u3910:
  7688  007520  FFFF               	dw	65535	; assembler added errata NOP
  7689  007522  0E01               	movlw	1
  7690  007524  6E19               	movwf	___lodiv@counter^0,c
  7691  007526  EFA0  F03A         	goto	l3843
  7692  00752A                     l3841:
  7693  00752A  FFFF               	dw	65535	; assembler added errata NOP
  7694  00752C  90D8               	bcf	status,0,c
  7695  00752E  3609               	rlcf	___lodiv@divisor^0,f,c
  7696  007530  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  7697  007532  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  7698  007534  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  7699  007536  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  7700  007538  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  7701  00753A  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  7702  00753C  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  7703  00753E  2A19               	incf	___lodiv@counter^0,f,c
  7704  007540                     l3843:
  7705  007540  FFFF               	dw	65535	; assembler added errata NOP
  7706  007542  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  7707  007544  EFA6  F03A         	goto	u3921
  7708  007548  EFA9  F03A         	goto	u3920
  7709  00754C                     u3921:
  7710  00754C  FFFF               	dw	65535	; assembler added errata NOP
  7711  00754E  EF95  F03A         	goto	l3841
  7712  007552                     u3920:
  7713  007552  FFFF               	dw	65535	; assembler added errata NOP
  7714  007554                     l3845:
  7715  007554  FFFF               	dw	65535	; assembler added errata NOP
  7716  007556  90D8               	bcf	status,0,c
  7717  007558  3611               	rlcf	___lodiv@quotient^0,f,c
  7718  00755A  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  7719  00755C  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  7720  00755E  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  7721  007560  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  7722  007562  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  7723  007564  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  7724  007566  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  7725  007568  5009               	movf	___lodiv@divisor^0,w,c
  7726  00756A  5C01               	subwf	___lodiv@dividend^0,w,c
  7727  00756C  500A               	movf	(___lodiv@divisor+1)^0,w,c
  7728  00756E  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  7729  007570  500B               	movf	(___lodiv@divisor+2)^0,w,c
  7730  007572  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  7731  007574  500C               	movf	(___lodiv@divisor+3)^0,w,c
  7732  007576  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  7733  007578  500D               	movf	(___lodiv@divisor+4)^0,w,c
  7734  00757A  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  7735  00757C  500E               	movf	(___lodiv@divisor+5)^0,w,c
  7736  00757E  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  7737  007580  500F               	movf	(___lodiv@divisor+6)^0,w,c
  7738  007582  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  7739  007584  5010               	movf	(___lodiv@divisor+7)^0,w,c
  7740  007586  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  7741  007588  A0D8               	btfss	status,0,c
  7742  00758A  EFC9  F03A         	goto	u3931
  7743  00758E  EFCC  F03A         	goto	u3930
  7744  007592                     u3931:
  7745  007592  FFFF               	dw	65535	; assembler added errata NOP
  7746  007594  EFDE  F03A         	goto	l3853
  7747  007598                     u3930:
  7748  007598  FFFF               	dw	65535	; assembler added errata NOP
  7749  00759A  5009               	movf	___lodiv@divisor^0,w,c
  7750  00759C  5E01               	subwf	___lodiv@dividend^0,f,c
  7751  00759E  500A               	movf	(___lodiv@divisor+1)^0,w,c
  7752  0075A0  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  7753  0075A2  500B               	movf	(___lodiv@divisor+2)^0,w,c
  7754  0075A4  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  7755  0075A6  500C               	movf	(___lodiv@divisor+3)^0,w,c
  7756  0075A8  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  7757  0075AA  500D               	movf	(___lodiv@divisor+4)^0,w,c
  7758  0075AC  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  7759  0075AE  500E               	movf	(___lodiv@divisor+5)^0,w,c
  7760  0075B0  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  7761  0075B2  500F               	movf	(___lodiv@divisor+6)^0,w,c
  7762  0075B4  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  7763  0075B6  5010               	movf	(___lodiv@divisor+7)^0,w,c
  7764  0075B8  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  7765  0075BA  8011               	bsf	___lodiv@quotient^0,0,c
  7766  0075BC                     l3853:
  7767  0075BC  FFFF               	dw	65535	; assembler added errata NOP
  7768  0075BE  90D8               	bcf	status,0,c
  7769  0075C0  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  7770  0075C2  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  7771  0075C4  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  7772  0075C6  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  7773  0075C8  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  7774  0075CA  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  7775  0075CC  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  7776  0075CE  3209               	rrcf	___lodiv@divisor^0,f,c
  7777  0075D0  2E19               	decfsz	___lodiv@counter^0,f,c
  7778  0075D2  EFAA  F03A         	goto	l3845
  7779  0075D6                     l865:
  7780  0075D6  FFFF               	dw	65535	; assembler added errata NOP
  7781  0075D8  C011  F001         	movff	___lodiv@quotient,?___lodiv
  7782  0075DC  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  7783  0075E0  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  7784  0075E4  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  7785  0075E8  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  7786  0075EC  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  7787  0075F0  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  7788  0075F4  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  7789  0075F8  0012               	return		;funcret
  7790  0075FA  FFFF               	dw	65535	; errata NOP
  7791  0075FC                     __end_of___lodiv:
  7792                           	callstack 0
  7793                           
  7794 ;; *************** function _strncmp *****************
  7795 ;; Defined at:
  7796 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  7797 ;; Parameters:    Size  Location     Type
  7798 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  7799 ;;		 -> STR_10(3), 
  7800 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  7801 ;;		 -> STR_110(3), STR_106(3), STR_101(3), STR_97(3), 
  7802 ;;		 -> STR_92(4), STR_88(4), STR_83(3), STR_78(3), 
  7803 ;;		 -> STR_73(4), STR_68(3), STR_63(3), STR_58(4), 
  7804 ;;		 -> STR_53(3), STR_48(3), STR_43(4), STR_38(3), 
  7805 ;;		 -> STR_34(3), STR_29(3), STR_25(3), STR_20(4), 
  7806 ;;		 -> STR_16(4), 
  7807 ;;  n               2    4[COMRAM] unsigned int 
  7808 ;; Auto vars:     Size  Location     Type
  7809 ;;  r               2    9[COMRAM] PTR const unsigned char 
  7810 ;;		 -> STR_110(3), STR_106(3), STR_101(3), STR_97(3), 
  7811 ;;		 -> STR_92(4), STR_88(4), STR_83(3), STR_78(3), 
  7812 ;;		 -> STR_73(4), STR_68(3), STR_63(3), STR_58(4), 
  7813 ;;		 -> STR_53(3), STR_48(3), STR_43(4), STR_38(3), 
  7814 ;;		 -> STR_34(3), STR_29(3), STR_25(3), STR_20(4), 
  7815 ;;		 -> STR_16(4), 
  7816 ;;  l               2    7[COMRAM] PTR const unsigned char 
  7817 ;;		 -> STR_10(3), 
  7818 ;; Return value:  Size  Location     Type
  7819 ;;                  2    0[COMRAM] int 
  7820 ;; Registers used:
  7821 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  7822 ;; Tracked objects:
  7823 ;;		On entry : 0/0
  7824 ;;		On exit  : 0/0
  7825 ;;		Unchanged: 0/0
  7826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7827 ;;      Params:         6       0       0       0       0       0       0
  7828 ;;      Locals:         4       0       0       0       0       0       0
  7829 ;;      Temps:          1       0       0       0       0       0       0
  7830 ;;      Totals:        11       0       0       0       0       0       0
  7831 ;;Total ram usage:       11 bytes
  7832 ;; Hardware stack levels used:    1
  7833 ;; Hardware stack levels required when called:    1
  7834 ;; This function calls:
  7835 ;;		Nothing
  7836 ;; This function is called by:
  7837 ;;		_vfpfcnvrt
  7838 ;; This function uses a non-reentrant model
  7839 ;;
  7840                           
  7841                           	psect	text17
  7842  0073EA                     __ptext17:
  7843                           	callstack 0
  7844  0073EA                     _strncmp:
  7845                           	callstack 0
  7846  0073EA  FFFF               	dw	65535	; assembler added errata NOP
  7847  0073EC  C001  F008         	movff	strncmp@_l,strncmp@l
  7848  0073F0  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  7849  0073F4  C003  F00A         	movff	strncmp@_r,strncmp@r
  7850  0073F8  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  7851  0073FC  0605               	decf	strncmp@n^0,f,c
  7852  0073FE  A0D8               	btfss	status,0,c
  7853  007400  0606               	decf	(strncmp@n+1)^0,f,c
  7854  007402  2805               	incf	strncmp@n^0,w,c
  7855  007404  E106               	bnz	u4791
  7856  007406  2806               	incf	(strncmp@n+1)^0,w,c
  7857  007408  A4D8               	btfss	status,2,c
  7858  00740A  EF09  F03A         	goto	u4791
  7859  00740E  EF0C  F03A         	goto	u4790
  7860  007412                     u4791:
  7861  007412  FFFF               	dw	65535	; assembler added errata NOP
  7862  007414  EF1B  F03A         	goto	l4247
  7863  007418                     u4790:
  7864  007418  FFFF               	dw	65535	; assembler added errata NOP
  7865  00741A  0E00               	movlw	0
  7866  00741C  6E02               	movwf	(?_strncmp+1)^0,c
  7867  00741E  0E00               	movlw	0
  7868  007420  6E01               	movwf	?_strncmp^0,c
  7869  007422  EF76  F03A         	goto	l1477
  7870  007426                     l4245:
  7871  007426  FFFF               	dw	65535	; assembler added errata NOP
  7872  007428  4A08               	infsnz	strncmp@l^0,f,c
  7873  00742A  2A09               	incf	(strncmp@l+1)^0,f,c
  7874  00742C  4A0A               	infsnz	strncmp@r^0,f,c
  7875  00742E  2A0B               	incf	(strncmp@r+1)^0,f,c
  7876  007430  0605               	decf	strncmp@n^0,f,c
  7877  007432  A0D8               	btfss	status,0,c
  7878  007434  0606               	decf	(strncmp@n+1)^0,f,c
  7879  007436                     l4247:
  7880  007436  FFFF               	dw	65535	; assembler added errata NOP
  7881  007438  C008  FFF6         	movff	strncmp@l,tblptrl
  7882  00743C  C009  FFF7         	movff	strncmp@l+1,tblptrh
  7883  007440                     	if	0	;tblptru may be non-zero
  7884  007440                     	endif
  7885  007440                     	if	0	;tblptru may be non-zero
  7886  007440                     	endif
  7887  007440  0008               	tblrd		*
  7888  007442  FFFF               	dw	65535	; errata NOP
  7889  007444  50F5               	movf	tablat,w,c
  7890  007446  0900               	iorlw	0
  7891  007448  B4D8               	btfsc	status,2,c
  7892  00744A  EF29  F03A         	goto	u4801
  7893  00744E  EF2C  F03A         	goto	u4800
  7894  007452                     u4801:
  7895  007452  FFFF               	dw	65535	; assembler added errata NOP
  7896  007454  EF61  F03A         	goto	l4255
  7897  007458                     u4800:
  7898  007458  FFFF               	dw	65535	; assembler added errata NOP
  7899  00745A  C00A  FFF6         	movff	strncmp@r,tblptrl
  7900  00745E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7901  007462                     	if	0	;tblptru may be non-zero
  7902  007462                     	endif
  7903  007462                     	if	0	;tblptru may be non-zero
  7904  007462                     	endif
  7905  007462  0008               	tblrd		*
  7906  007464  FFFF               	dw	65535	; errata NOP
  7907  007466  50F5               	movf	tablat,w,c
  7908  007468  0900               	iorlw	0
  7909  00746A  B4D8               	btfsc	status,2,c
  7910  00746C  EF3A  F03A         	goto	u4811
  7911  007470  EF3D  F03A         	goto	u4810
  7912  007474                     u4811:
  7913  007474  FFFF               	dw	65535	; assembler added errata NOP
  7914  007476  EF61  F03A         	goto	l4255
  7915  00747A                     u4810:
  7916  00747A  FFFF               	dw	65535	; assembler added errata NOP
  7917  00747C  5005               	movf	strncmp@n^0,w,c
  7918  00747E  1006               	iorwf	(strncmp@n+1)^0,w,c
  7919  007480  B4D8               	btfsc	status,2,c
  7920  007482  EF45  F03A         	goto	u4821
  7921  007486  EF48  F03A         	goto	u4820
  7922  00748A                     u4821:
  7923  00748A  FFFF               	dw	65535	; assembler added errata NOP
  7924  00748C  EF61  F03A         	goto	l4255
  7925  007490                     u4820:
  7926  007490  FFFF               	dw	65535	; assembler added errata NOP
  7927  007492  C008  FFF6         	movff	strncmp@l,tblptrl
  7928  007496  C009  FFF7         	movff	strncmp@l+1,tblptrh
  7929  00749A                     	if	0	;tblptru may be non-zero
  7930  00749A                     	endif
  7931  00749A                     	if	0	;tblptru may be non-zero
  7932  00749A                     	endif
  7933  00749A  0008               	tblrd		*
  7934  00749C  FFFF               	dw	65535	; errata NOP
  7935  00749E  CFF5 F007          	movff	tablat,??_strncmp
  7936  0074A2  C00A  FFF6         	movff	strncmp@r,tblptrl
  7937  0074A6  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7938  0074AA                     	if	0	;tblptru may be non-zero
  7939  0074AA                     	endif
  7940  0074AA                     	if	0	;tblptru may be non-zero
  7941  0074AA                     	endif
  7942  0074AA  0008               	tblrd		*
  7943  0074AC  FFFF               	dw	65535	; errata NOP
  7944  0074AE  50F5               	movf	tablat,w,c
  7945  0074B0  1807               	xorwf	??_strncmp^0,w,c
  7946  0074B2  B4D8               	btfsc	status,2,c
  7947  0074B4  EF5E  F03A         	goto	u4831
  7948  0074B8  EF61  F03A         	goto	u4830
  7949  0074BC                     u4831:
  7950  0074BC  FFFF               	dw	65535	; assembler added errata NOP
  7951  0074BE  EF13  F03A         	goto	l4245
  7952  0074C2                     u4830:
  7953  0074C2                     l4255:
  7954  0074C2  FFFF               	dw	65535	; assembler added errata NOP
  7955  0074C4  C008  FFF6         	movff	strncmp@l,tblptrl
  7956  0074C8  C009  FFF7         	movff	strncmp@l+1,tblptrh
  7957  0074CC                     	if	0	;tblptru may be non-zero
  7958  0074CC                     	endif
  7959  0074CC                     	if	0	;tblptru may be non-zero
  7960  0074CC                     	endif
  7961  0074CC  0008               	tblrd		*
  7962  0074CE  FFFF               	dw	65535	; errata NOP
  7963  0074D0  CFF5 F007          	movff	tablat,??_strncmp
  7964  0074D4  C00A  FFF6         	movff	strncmp@r,tblptrl
  7965  0074D8  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7966  0074DC                     	if	0	;tblptru may be non-zero
  7967  0074DC                     	endif
  7968  0074DC                     	if	0	;tblptru may be non-zero
  7969  0074DC                     	endif
  7970  0074DC  0008               	tblrd		*
  7971  0074DE  FFFF               	dw	65535	; errata NOP
  7972  0074E0  50F5               	movf	tablat,w,c
  7973  0074E2  5C07               	subwf	??_strncmp^0,w,c
  7974  0074E4  6E01               	movwf	?_strncmp^0,c
  7975  0074E6  6A02               	clrf	(?_strncmp+1)^0,c
  7976  0074E8  A0D8               	btfss	status,0,c
  7977  0074EA  0602               	decf	(?_strncmp+1)^0,f,c
  7978  0074EC                     l1477:
  7979  0074EC  FFFF               	dw	65535	; assembler added errata NOP
  7980  0074EE  0012               	return		;funcret
  7981  0074F0  FFFF               	dw	65535	; errata NOP
  7982  0074F2                     __end_of_strncmp:
  7983                           	callstack 0
  7984                           
  7985 ;; *************** function _stoa *****************
  7986 ;; Defined at:
  7987 ;;		line 546 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7988 ;; Parameters:    Size  Location     Type
  7989 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  7990 ;;		 -> vsnprintf@f(6), 
  7991 ;;  s               2   11[COMRAM] PTR unsigned char 
  7992 ;;		 -> ?_snprintf(2), STR_8(50), STR_7(9), STR_6(7), 
  7993 ;;		 -> STR_5(9), STR_4(39), STR_3(9), STR_2(64), 
  7994 ;;		 -> STR_1(49), 
  7995 ;; Auto vars:     Size  Location     Type
  7996 ;;  nuls            7   14[COMRAM] unsigned char [7]
  7997 ;;  l               2   29[COMRAM] int 
  7998 ;;  p               2   27[COMRAM] int 
  7999 ;;  cp              2   25[COMRAM] PTR unsigned char 
  8000 ;;		 -> stoa@nuls(7), ?_snprintf(2), STR_8(50), STR_7(9), 
  8001 ;;		 -> STR_6(7), STR_5(9), STR_4(39), STR_3(9), 
  8002 ;;		 -> STR_2(64), STR_1(49), 
  8003 ;;  w               2   23[COMRAM] int 
  8004 ;;  i               2   21[COMRAM] int 
  8005 ;; Return value:  Size  Location     Type
  8006 ;;                  2    9[COMRAM] int 
  8007 ;; Registers used:
  8008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8009 ;; Tracked objects:
  8010 ;;		On entry : 0/0
  8011 ;;		On exit  : 0/0
  8012 ;;		Unchanged: 0/0
  8013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8014 ;;      Params:         4       0       0       0       0       0       0
  8015 ;;      Locals:        17       0       0       0       0       0       0
  8016 ;;      Temps:          1       0       0       0       0       0       0
  8017 ;;      Totals:        22       0       0       0       0       0       0
  8018 ;;Total ram usage:       22 bytes
  8019 ;; Hardware stack levels used:    1
  8020 ;; Hardware stack levels required when called:    3
  8021 ;; This function calls:
  8022 ;;		_fputc
  8023 ;;		_strlen
  8024 ;; This function is called by:
  8025 ;;		_vfpfcnvrt
  8026 ;; This function uses a non-reentrant model
  8027 ;;
  8028                           
  8029                           	psect	text18
  8030  003C72                     __ptext18:
  8031                           	callstack 0
  8032  003C72                     _stoa:
  8033                           	callstack 0
  8034  003C72  FFFF               	dw	65535	; assembler added errata NOP
  8035  003C74                     
  8036                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 546: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 547: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 548:  
      +                             char *cp, nuls[] = "(null)";
  8037  003C74  EE20  F0DF         	lfsr	2,stoa@F1152
  8038  003C78  EE10  F00F         	lfsr	1,stoa@nuls
  8039  003C7C  0E06               	movlw	6
  8040  003C7E                     u4381:
  8041  003C7E  CFDB FFE3          	movff	plusw2,plusw1
  8042  003C82  06E8               	decf	wreg,f,c
  8043  003C84  E2FC               	bc	u4381
  8044  003C86                     
  8045                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 549:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 552:     c
      +                          p = s;
  8046  003C86  C00C  F01A         	movff	stoa@s,stoa@cp
  8047  003C8A  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  8048  003C8E                     
  8049                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 553:     if (!cp)
      +                           {
  8050  003C8E  501A               	movf	stoa@cp^0,w,c
  8051  003C90  101B               	iorwf	(stoa@cp+1)^0,w,c
  8052  003C92  A4D8               	btfss	status,2,c
  8053  003C94  EF4E  F01E         	goto	u4391
  8054  003C98  EF51  F01E         	goto	u4390
  8055  003C9C                     u4391:
  8056  003C9C  FFFF               	dw	65535	; assembler added errata NOP
  8057  003C9E  EF56  F01E         	goto	l4061
  8058  003CA2                     u4390:
  8059  003CA2  FFFF               	dw	65535	; assembler added errata NOP
  8060  003CA4                     
  8061                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 554:         cp =
      +                           nuls;
  8062  003CA4  0E0F               	movlw	low stoa@nuls
  8063  003CA6  6E1A               	movwf	stoa@cp^0,c
  8064  003CA8  0E00               	movlw	high stoa@nuls
  8065  003CAA  6E1B               	movwf	(stoa@cp+1)^0,c
  8066  003CAC                     l4061:
  8067  003CAC  FFFF               	dw	65535	; assembler added errata NOP
  8068                           
  8069                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 558:     l = strl
      +                          en(cp);
  8070  003CAE  C01A  F001         	movff	stoa@cp,strlen@s
  8071  003CB2  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  8072  003CB6  EC85  F033         	call	_strlen	;wreg free
  8073  003CBA  C001  F01E         	movff	?_strlen,stoa@l
  8074  003CBE  C002  F01F         	movff	?_strlen+1,stoa@l+1
  8075  003CC2                     
  8076                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 559:     p = prec
      +                          ;
  8077  003CC2  C088  F01C         	movff	_prec,stoa@p
  8078  003CC6  C089  F01D         	movff	_prec+1,stoa@p+1
  8079  003CCA                     
  8080                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 560:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  8081  003CCA  BE1D               	btfsc	(stoa@p+1)^0,7,c
  8082  003CCC  EF6A  F01E         	goto	u4401
  8083  003CD0  EF6D  F01E         	goto	u4400
  8084  003CD4                     u4401:
  8085  003CD4  FFFF               	dw	65535	; assembler added errata NOP
  8086  003CD6  EF86  F01E         	goto	l1244
  8087  003CDA                     u4400:
  8088  003CDA  FFFF               	dw	65535	; assembler added errata NOP
  8089  003CDC  501E               	movf	stoa@l^0,w,c
  8090  003CDE  5C1C               	subwf	stoa@p^0,w,c
  8091  003CE0  501D               	movf	(stoa@p+1)^0,w,c
  8092  003CE2  0A80               	xorlw	128
  8093  003CE4  6E0E               	movwf	??_stoa^0,c
  8094  003CE6  501F               	movf	(stoa@l+1)^0,w,c
  8095  003CE8  0A80               	xorlw	128
  8096  003CEA  580E               	subwfb	??_stoa^0,w,c
  8097  003CEC  A0D8               	btfss	status,0,c
  8098  003CEE  EF7B  F01E         	goto	u4411
  8099  003CF2  EF7E  F01E         	goto	u4410
  8100  003CF6                     u4411:
  8101  003CF6  FFFF               	dw	65535	; assembler added errata NOP
  8102  003CF8  EF81  F01E         	goto	l1242
  8103  003CFC                     u4410:
  8104  003CFC  FFFF               	dw	65535	; assembler added errata NOP
  8105  003CFE  EF86  F01E         	goto	l1244
  8106  003D02                     l1242:
  8107  003D02  FFFF               	dw	65535	; assembler added errata NOP
  8108  003D04  C01C  F01E         	movff	stoa@p,stoa@l
  8109  003D08  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  8110  003D0C                     l1244:
  8111  003D0C  FFFF               	dw	65535	; assembler added errata NOP
  8112                           
  8113                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 561:     p = l;
  8114  003D0E  C01E  F01C         	movff	stoa@l,stoa@p
  8115  003D12  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  8116                           
  8117                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 562:     w = widt
      +                          h;
  8118  003D16  C086  F018         	movff	_width,stoa@w
  8119  003D1A  C087  F019         	movff	_width+1,stoa@w+1
  8120                           
  8121                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 565:     if (!(fl
      +                          ags & (1 << 0))) {
  8122  003D1E  0100               	movlb	0	; () banked
  8123  003D20  B18A               	btfsc	_flags& (0+255),0,b
  8124  003D22  EF95  F01E         	goto	u4421
  8125  003D26  EF98  F01E         	goto	u4420
  8126  003D2A                     u4421:
  8127  003D2A  FFFF               	dw	65535	; assembler added errata NOP
  8128  003D2C  EFB9  F01E         	goto	l4077
  8129  003D30                     u4420:
  8130  003D30  FFFF               	dw	65535	; assembler added errata NOP
  8131  003D32  EFA8  F01E         	goto	l4075
  8132  003D36                     l4071:
  8133  003D36  FFFF               	dw	65535	; assembler added errata NOP
  8134                           
  8135                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 567:             
      +                          fputc(' ', fp);
  8136  003D38  0E00               	movlw	0
  8137  003D3A  6E02               	movwf	(fputc@c+1)^0,c
  8138  003D3C  0E20               	movlw	32
  8139  003D3E  6E01               	movwf	fputc@c^0,c
  8140  003D40  C00A  F003         	movff	stoa@fp,fputc@fp
  8141  003D44  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  8142  003D48  EC24  F038         	call	_fputc	;wreg free
  8143  003D4C                     
  8144                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 568:             
      +                          ++l;
  8145  003D4C  4A1E               	infsnz	stoa@l^0,f,c
  8146  003D4E  2A1F               	incf	(stoa@l+1)^0,f,c
  8147  003D50                     l4075:
  8148  003D50  FFFF               	dw	65535	; assembler added errata NOP
  8149                           
  8150                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 566:         whil
      +                          e (l < w) {
  8151  003D52  5018               	movf	stoa@w^0,w,c
  8152  003D54  5C1E               	subwf	stoa@l^0,w,c
  8153  003D56  501F               	movf	(stoa@l+1)^0,w,c
  8154  003D58  0A80               	xorlw	128
  8155  003D5A  6E0E               	movwf	??_stoa^0,c
  8156  003D5C  5019               	movf	(stoa@w+1)^0,w,c
  8157  003D5E  0A80               	xorlw	128
  8158  003D60  580E               	subwfb	??_stoa^0,w,c
  8159  003D62  A0D8               	btfss	status,0,c
  8160  003D64  EFB6  F01E         	goto	u4431
  8161  003D68  EFB9  F01E         	goto	u4430
  8162  003D6C                     u4431:
  8163  003D6C  FFFF               	dw	65535	; assembler added errata NOP
  8164  003D6E  EF9B  F01E         	goto	l4071
  8165  003D72                     u4430:
  8166  003D72                     l4077:
  8167  003D72  FFFF               	dw	65535	; assembler added errata NOP
  8168                           
  8169                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 573:     i = 0;
  8170  003D74  0E00               	movlw	0
  8171  003D76  6E17               	movwf	(stoa@i+1)^0,c
  8172  003D78  0E00               	movlw	0
  8173  003D7A  6E16               	movwf	stoa@i^0,c
  8174                           
  8175                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 574:     while (i
      +                           < p) {
  8176  003D7C  EFE0  F01E         	goto	l4085
  8177  003D80                     l4079:
  8178  003D80  FFFF               	dw	65535	; assembler added errata NOP
  8179                           
  8180                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 575:         fput
      +                          c(*cp, fp);
  8181  003D82  C01A  FFF6         	movff	stoa@cp,tblptrl
  8182  003D86  C01B  FFF7         	movff	stoa@cp+1,tblptrh
  8183  003D8A  6AF8               	clrf	tblptru,c
  8184  003D8C  0E05               	movlw	(high __ramtop+-1)
  8185  003D8E  64F7               	cpfsgt	tblptrh,c
  8186  003D90  D004               	bra	u4447
  8187  003D92  0008               	tblrd		*
  8188  003D94  FFFF               	dw	65535	; errata NOP
  8189  003D96  50F5               	movf	tablat,w,c
  8190  003D98  D005               	bra	u4440
  8191  003D9A                     u4447:
  8192  003D9A  CFF6 FFE1          	movff	tblptrl,fsr1l
  8193  003D9E  CFF7 FFE2          	movff	tblptrh,fsr1h
  8194  003DA2  50E7               	movf	indf1,w,c
  8195  003DA4                     u4440:
  8196  003DA4  6E0E               	movwf	??_stoa^0,c
  8197  003DA6  500E               	movf	??_stoa^0,w,c
  8198  003DA8  6E01               	movwf	fputc@c^0,c
  8199  003DAA  6A02               	clrf	(fputc@c+1)^0,c
  8200  003DAC  C00A  F003         	movff	stoa@fp,fputc@fp
  8201  003DB0  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  8202  003DB4  EC24  F038         	call	_fputc	;wreg free
  8203  003DB8                     
  8204                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 576:         ++cp
      +                          ;
  8205  003DB8  4A1A               	infsnz	stoa@cp^0,f,c
  8206  003DBA  2A1B               	incf	(stoa@cp+1)^0,f,c
  8207  003DBC                     
  8208                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 577:         ++i;
  8209  003DBC  4A16               	infsnz	stoa@i^0,f,c
  8210  003DBE  2A17               	incf	(stoa@i+1)^0,f,c
  8211  003DC0                     l4085:
  8212  003DC0  FFFF               	dw	65535	; assembler added errata NOP
  8213                           
  8214                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 574:     while (i
      +                           < p) {
  8215  003DC2  501C               	movf	stoa@p^0,w,c
  8216  003DC4  5C16               	subwf	stoa@i^0,w,c
  8217  003DC6  5017               	movf	(stoa@i+1)^0,w,c
  8218  003DC8  0A80               	xorlw	128
  8219  003DCA  6E0E               	movwf	??_stoa^0,c
  8220  003DCC  501D               	movf	(stoa@p+1)^0,w,c
  8221  003DCE  0A80               	xorlw	128
  8222  003DD0  580E               	subwfb	??_stoa^0,w,c
  8223  003DD2  A0D8               	btfss	status,0,c
  8224  003DD4  EFEE  F01E         	goto	u4451
  8225  003DD8  EFF1  F01E         	goto	u4450
  8226  003DDC                     u4451:
  8227  003DDC  FFFF               	dw	65535	; assembler added errata NOP
  8228  003DDE  EFC0  F01E         	goto	l4079
  8229  003DE2                     u4450:
  8230  003DE2  FFFF               	dw	65535	; assembler added errata NOP
  8231  003DE4                     
  8232                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 581:     if (flag
      +                          s & (1 << 0)) {
  8233  003DE4  0100               	movlb	0	; () banked
  8234  003DE6  A18A               	btfss	_flags& (0+255),0,b
  8235  003DE8  EFF8  F01E         	goto	u4461
  8236  003DEC  EFFB  F01E         	goto	u4460
  8237  003DF0                     u4461:
  8238  003DF0  FFFF               	dw	65535	; assembler added errata NOP
  8239  003DF2  EF1C  F01F         	goto	l1254
  8240  003DF6                     u4460:
  8241  003DF6  FFFF               	dw	65535	; assembler added errata NOP
  8242  003DF8  EF0B  F01F         	goto	l4093
  8243  003DFC                     l4089:
  8244  003DFC  FFFF               	dw	65535	; assembler added errata NOP
  8245                           
  8246                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 583:             
      +                          fputc(' ', fp);
  8247  003DFE  0E00               	movlw	0
  8248  003E00  6E02               	movwf	(fputc@c+1)^0,c
  8249  003E02  0E20               	movlw	32
  8250  003E04  6E01               	movwf	fputc@c^0,c
  8251  003E06  C00A  F003         	movff	stoa@fp,fputc@fp
  8252  003E0A  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  8253  003E0E  EC24  F038         	call	_fputc	;wreg free
  8254  003E12                     
  8255                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 584:             
      +                          ++l;
  8256  003E12  4A1E               	infsnz	stoa@l^0,f,c
  8257  003E14  2A1F               	incf	(stoa@l+1)^0,f,c
  8258  003E16                     l4093:
  8259  003E16  FFFF               	dw	65535	; assembler added errata NOP
  8260                           
  8261                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 582:         whil
      +                          e (l < w) {
  8262  003E18  5018               	movf	stoa@w^0,w,c
  8263  003E1A  5C1E               	subwf	stoa@l^0,w,c
  8264  003E1C  501F               	movf	(stoa@l+1)^0,w,c
  8265  003E1E  0A80               	xorlw	128
  8266  003E20  6E0E               	movwf	??_stoa^0,c
  8267  003E22  5019               	movf	(stoa@w+1)^0,w,c
  8268  003E24  0A80               	xorlw	128
  8269  003E26  580E               	subwfb	??_stoa^0,w,c
  8270  003E28  A0D8               	btfss	status,0,c
  8271  003E2A  EF19  F01F         	goto	u4471
  8272  003E2E  EF1C  F01F         	goto	u4470
  8273  003E32                     u4471:
  8274  003E32  FFFF               	dw	65535	; assembler added errata NOP
  8275  003E34  EFFE  F01E         	goto	l4089
  8276  003E38                     u4470:
  8277  003E38                     l1254:
  8278  003E38  FFFF               	dw	65535	; assembler added errata NOP
  8279                           
  8280                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 588:     return l
      +                          ;
  8281  003E3A  C01E  F00A         	movff	stoa@l,?_stoa
  8282  003E3E  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  8283  003E42  0012               	return		;funcret
  8284  003E44  FFFF               	dw	65535	; errata NOP
  8285  003E46                     __end_of_stoa:
  8286                           	callstack 0
  8287                           
  8288 ;; *************** function _otoa *****************
  8289 ;; Defined at:
  8290 ;;		line 507 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  8291 ;; Parameters:    Size  Location     Type
  8292 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  8293 ;;		 -> vsnprintf@f(6), 
  8294 ;;  d               8   29[COMRAM] unsigned long long 
  8295 ;; Auto vars:     Size  Location     Type
  8296 ;;  n               8   51[COMRAM] unsigned long long 
  8297 ;;  i               2   59[COMRAM] int 
  8298 ;;  w               2   49[COMRAM] int 
  8299 ;;  t               2   47[COMRAM] int 
  8300 ;;  p               2   45[COMRAM] int 
  8301 ;; Return value:  Size  Location     Type
  8302 ;;                  2   27[COMRAM] int 
  8303 ;; Registers used:
  8304 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8305 ;; Tracked objects:
  8306 ;;		On entry : 0/0
  8307 ;;		On exit  : 0/0
  8308 ;;		Unchanged: 0/0
  8309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8310 ;;      Params:        10       0       0       0       0       0       0
  8311 ;;      Locals:        16       0       0       0       0       0       0
  8312 ;;      Temps:          8       0       0       0       0       0       0
  8313 ;;      Totals:        34       0       0       0       0       0       0
  8314 ;;Total ram usage:       34 bytes
  8315 ;; Hardware stack levels used:    1
  8316 ;; Hardware stack levels required when called:    5
  8317 ;; This function calls:
  8318 ;;		_pad
  8319 ;; This function is called by:
  8320 ;;		_vfpfcnvrt
  8321 ;; This function uses a non-reentrant model
  8322 ;;
  8323                           
  8324                           	psect	text19
  8325  003854                     __ptext19:
  8326                           	callstack 0
  8327  003854                     _otoa:
  8328                           	callstack 0
  8329  003854  FFFF               	dw	65535	; assembler added errata NOP
  8330  003856                     
  8331                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 507: static int o
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99
      +                          \common\doprnt.c: 508: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\dop
      +                          rnt.c: 509:     int i, p, t, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\com
      +                          mon\doprnt.c: 510:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\so
      +                          urces\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  8332  003856  0100               	movlb	0	; () banked
  8333  003858  BF89               	btfsc	(_prec+1)& (0+255),7,b
  8334  00385A  EF31  F01C         	goto	u4281
  8335  00385E  EF34  F01C         	goto	u4280
  8336  003862                     u4281:
  8337  003862  FFFF               	dw	65535	; assembler added errata NOP
  8338  003864  EF36  F01C         	goto	l4009
  8339  003868                     u4280:
  8340  003868  FFFF               	dw	65535	; assembler added errata NOP
  8341  00386A                     
  8342                           ; BSR set to: 0
  8343                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 514:         flag
      +                          s &= ~(1 << 1);
  8344  00386A  938A               	bcf	_flags& (0+255),1,b
  8345  00386C                     l4009:
  8346  00386C  FFFF               	dw	65535	; assembler added errata NOP
  8347                           
  8348                           ; BSR set to: 0
  8349                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 516:     p = (0 <
      +                           prec) ? prec : 1;
  8350  00386E  BF89               	btfsc	(_prec+1)& (0+255),7,b
  8351  003870  EF45  F01C         	goto	u4290
  8352  003874  5189               	movf	(_prec+1)& (0+255),w,b
  8353  003876  E106               	bnz	u4291
  8354  003878  0588               	decf	_prec& (0+255),w,b
  8355  00387A  B0D8               	btfsc	status,0,c
  8356  00387C  EF42  F01C         	goto	u4291
  8357  003880  EF45  F01C         	goto	u4290
  8358  003884                     u4291:
  8359  003884  FFFF               	dw	65535	; assembler added errata NOP
  8360  003886  EF4C  F01C         	goto	l1224
  8361  00388A                     u4290:
  8362  00388A  FFFF               	dw	65535	; assembler added errata NOP
  8363  00388C                     
  8364                           ; BSR set to: 0
  8365  00388C  0E00               	movlw	0
  8366  00388E  6E2F               	movwf	(otoa@p+1)^0,c
  8367  003890  0E01               	movlw	1
  8368  003892  6E2E               	movwf	otoa@p^0,c
  8369  003894  EF51  F01C         	goto	l1226
  8370  003898                     l1224:
  8371  003898  FFFF               	dw	65535	; assembler added errata NOP
  8372                           
  8373                           ; BSR set to: 0
  8374  00389A  C088  F02E         	movff	_prec,otoa@p
  8375  00389E  C089  F02F         	movff	_prec+1,otoa@p+1
  8376  0038A2                     l1226:
  8377  0038A2  FFFF               	dw	65535	; assembler added errata NOP
  8378                           
  8379                           ; BSR set to: 0
  8380                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 517:     w = widt
      +                          h;
  8381  0038A4  C086  F032         	movff	_width,otoa@w
  8382  0038A8  C087  F033         	movff	_width+1,otoa@w+1
  8383                           
  8384                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 520:     n = d;
  8385  0038AC  C01E  F034         	movff	otoa@d,otoa@n
  8386  0038B0  C01F  F035         	movff	otoa@d+1,otoa@n+1
  8387  0038B4  C020  F036         	movff	otoa@d+2,otoa@n+2
  8388  0038B8  C021  F037         	movff	otoa@d+3,otoa@n+3
  8389  0038BC  C022  F038         	movff	otoa@d+4,otoa@n+4
  8390  0038C0  C023  F039         	movff	otoa@d+5,otoa@n+5
  8391  0038C4  C024  F03A         	movff	otoa@d+6,otoa@n+6
  8392  0038C8  C025  F03B         	movff	otoa@d+7,otoa@n+7
  8393  0038CC                     
  8394                           ; BSR set to: 0
  8395                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 521:     i = size
      +                          of(dbuf) - 1;
  8396  0038CC  0E00               	movlw	0
  8397  0038CE  6E3D               	movwf	(otoa@i+1)^0,c
  8398  0038D0  0E1F               	movlw	31
  8399  0038D2  6E3C               	movwf	otoa@i^0,c
  8400  0038D4                     
  8401                           ; BSR set to: 0
  8402                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 522:     dbuf[i] 
      +                          = '\0';
  8403  0038D4  0E00               	movlw	0
  8404  0038D6  6FB7               	movwf	(_dbuf+31)& (0+255),b
  8405  0038D8                     
  8406                           ; BSR set to: 0
  8407                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 523:     t = 0;
  8408  0038D8  0E00               	movlw	0
  8409  0038DA  6E31               	movwf	(otoa@t+1)^0,c
  8410  0038DC  0E00               	movlw	0
  8411  0038DE  6E30               	movwf	otoa@t^0,c
  8412                           
  8413                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 524:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8414  0038E0  EFBA  F01C         	goto	l4031
  8415  0038E4                     l4019:
  8416  0038E4  FFFF               	dw	65535	; assembler added errata NOP
  8417                           
  8418                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 525:         --i;
  8419  0038E6  063C               	decf	otoa@i^0,f,c
  8420  0038E8  A0D8               	btfss	status,0,c
  8421  0038EA  063D               	decf	(otoa@i+1)^0,f,c
  8422  0038EC                     
  8423                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 526:         t = 
      +                          n & 07;
  8424  0038EC  0E07               	movlw	7
  8425  0038EE  1434               	andwf	otoa@n^0,w,c
  8426  0038F0  6E30               	movwf	otoa@t^0,c
  8427  0038F2  6A31               	clrf	(otoa@t+1)^0,c
  8428  0038F4                     
  8429                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 527:         dbuf
      +                          [i] = '0' + t;
  8430  0038F4  0E98               	movlw	low _dbuf
  8431  0038F6  243C               	addwf	otoa@i^0,w,c
  8432  0038F8  6ED9               	movwf	fsr2l,c
  8433  0038FA  0E00               	movlw	high _dbuf
  8434  0038FC  203D               	addwfc	(otoa@i+1)^0,w,c
  8435  0038FE  6EDA               	movwf	fsr2h,c
  8436  003900  5030               	movf	otoa@t^0,w,c
  8437  003902  0F30               	addlw	48
  8438  003904  6EDF               	movwf	indf2,c
  8439  003906                     
  8440                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 528:         --p;
  8441  003906  062E               	decf	otoa@p^0,f,c
  8442  003908  A0D8               	btfss	status,0,c
  8443  00390A  062F               	decf	(otoa@p+1)^0,f,c
  8444  00390C                     
  8445                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 529:         --w;
  8446  00390C  0632               	decf	otoa@w^0,f,c
  8447  00390E  A0D8               	btfss	status,0,c
  8448  003910  0633               	decf	(otoa@w+1)^0,f,c
  8449  003912                     
  8450                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 530:         n = 
      +                          n >> 3;
  8451  003912  C034  F026         	movff	otoa@n,??_otoa
  8452  003916  C035  F027         	movff	otoa@n+1,??_otoa+1
  8453  00391A  C036  F028         	movff	otoa@n+2,??_otoa+2
  8454  00391E  C037  F029         	movff	otoa@n+3,??_otoa+3
  8455  003922  C038  F02A         	movff	otoa@n+4,??_otoa+4
  8456  003926  C039  F02B         	movff	otoa@n+5,??_otoa+5
  8457  00392A  C03A  F02C         	movff	otoa@n+6,??_otoa+6
  8458  00392E  C03B  F02D         	movff	otoa@n+7,??_otoa+7
  8459  003932  0E04               	movlw	4
  8460  003934  EFA6  F01C         	goto	u4300
  8461  003938                     u4305:
  8462  003938  FFFF               	dw	65535	; assembler added errata NOP
  8463  00393A  90D8               	bcf	status,0,c
  8464  00393C  322D               	rrcf	(??_otoa+7)^0,f,c
  8465  00393E  322C               	rrcf	(??_otoa+6)^0,f,c
  8466  003940  322B               	rrcf	(??_otoa+5)^0,f,c
  8467  003942  322A               	rrcf	(??_otoa+4)^0,f,c
  8468  003944  3229               	rrcf	(??_otoa+3)^0,f,c
  8469  003946  3228               	rrcf	(??_otoa+2)^0,f,c
  8470  003948  3227               	rrcf	(??_otoa+1)^0,f,c
  8471  00394A  3226               	rrcf	??_otoa^0,f,c
  8472  00394C                     u4300:
  8473  00394C  FFFF               	dw	65535	; assembler added errata NOP
  8474  00394E  2EE8               	decfsz	wreg,f,c
  8475  003950  EF9C  F01C         	goto	u4305
  8476  003954  C026  F034         	movff	??_otoa,otoa@n
  8477  003958  C027  F035         	movff	??_otoa+1,otoa@n+1
  8478  00395C  C028  F036         	movff	??_otoa+2,otoa@n+2
  8479  003960  C029  F037         	movff	??_otoa+3,otoa@n+3
  8480  003964  C02A  F038         	movff	??_otoa+4,otoa@n+4
  8481  003968  C02B  F039         	movff	??_otoa+5,otoa@n+5
  8482  00396C  C02C  F03A         	movff	??_otoa+6,otoa@n+6
  8483  003970  C02D  F03B         	movff	??_otoa+7,otoa@n+7
  8484  003974                     l4031:
  8485  003974  FFFF               	dw	65535	; assembler added errata NOP
  8486                           
  8487                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 524:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8488  003976  BE3D               	btfsc	(otoa@i+1)^0,7,c
  8489  003978  EFC6  F01C         	goto	u4311
  8490  00397C  503D               	movf	(otoa@i+1)^0,w,c
  8491  00397E  E109               	bnz	u4310
  8492  003980  043C               	decf	otoa@i^0,w,c
  8493  003982  A0D8               	btfss	status,0,c
  8494  003984  EFC6  F01C         	goto	u4311
  8495  003988  EFC9  F01C         	goto	u4310
  8496  00398C                     u4311:
  8497  00398C  FFFF               	dw	65535	; assembler added errata NOP
  8498  00398E  EF02  F01D         	goto	l1233
  8499  003992                     u4310:
  8500  003992  FFFF               	dw	65535	; assembler added errata NOP
  8501  003994  5034               	movf	otoa@n^0,w,c
  8502  003996  1035               	iorwf	(otoa@n+1)^0,w,c
  8503  003998  1036               	iorwf	(otoa@n+2)^0,w,c
  8504  00399A  1037               	iorwf	(otoa@n+3)^0,w,c
  8505  00399C  1038               	iorwf	(otoa@n+4)^0,w,c
  8506  00399E  1039               	iorwf	(otoa@n+5)^0,w,c
  8507  0039A0  103A               	iorwf	(otoa@n+6)^0,w,c
  8508  0039A2  103B               	iorwf	(otoa@n+7)^0,w,c
  8509  0039A4  A4D8               	btfss	status,2,c
  8510  0039A6  EFD7  F01C         	goto	u4321
  8511  0039AA  EFDA  F01C         	goto	u4320
  8512  0039AE                     u4321:
  8513  0039AE  FFFF               	dw	65535	; assembler added errata NOP
  8514  0039B0  EF72  F01C         	goto	l4019
  8515  0039B4                     u4320:
  8516  0039B4  FFFF               	dw	65535	; assembler added errata NOP
  8517  0039B6  BE2F               	btfsc	(otoa@p+1)^0,7,c
  8518  0039B8  EFE9  F01C         	goto	u4330
  8519  0039BC  502F               	movf	(otoa@p+1)^0,w,c
  8520  0039BE  E106               	bnz	u4331
  8521  0039C0  042E               	decf	otoa@p^0,w,c
  8522  0039C2  B0D8               	btfsc	status,0,c
  8523  0039C4  EFE6  F01C         	goto	u4331
  8524  0039C8  EFE9  F01C         	goto	u4330
  8525  0039CC                     u4331:
  8526  0039CC  FFFF               	dw	65535	; assembler added errata NOP
  8527  0039CE  EF72  F01C         	goto	l4019
  8528  0039D2                     u4330:
  8529  0039D2  FFFF               	dw	65535	; assembler added errata NOP
  8530  0039D4  BE33               	btfsc	(otoa@w+1)^0,7,c
  8531  0039D6  EFF5  F01C         	goto	u4341
  8532  0039DA  5033               	movf	(otoa@w+1)^0,w,c
  8533  0039DC  E109               	bnz	u4340
  8534  0039DE  0432               	decf	otoa@w^0,w,c
  8535  0039E0  A0D8               	btfss	status,0,c
  8536  0039E2  EFF5  F01C         	goto	u4341
  8537  0039E6  EFF8  F01C         	goto	u4340
  8538  0039EA                     u4341:
  8539  0039EA  FFFF               	dw	65535	; assembler added errata NOP
  8540  0039EC  EF02  F01D         	goto	l1233
  8541  0039F0                     u4340:
  8542  0039F0  FFFF               	dw	65535	; assembler added errata NOP
  8543  0039F2  0100               	movlb	0	; () banked
  8544  0039F4  B38A               	btfsc	_flags& (0+255),1,b
  8545  0039F6  EFFF  F01C         	goto	u4351
  8546  0039FA  EF02  F01D         	goto	u4350
  8547  0039FE                     u4351:
  8548  0039FE  FFFF               	dw	65535	; assembler added errata NOP
  8549  003A00  EF72  F01C         	goto	l4019
  8550  003A04                     u4350:
  8551  003A04                     l1233:
  8552  003A04  FFFF               	dw	65535	; assembler added errata NOP
  8553                           
  8554                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 534:     if ((fla
      +                          gs & (1 << 4)) && t) {
  8555  003A06  0100               	movlb	0	; () banked
  8556  003A08  A98A               	btfss	_flags& (0+255),4,b
  8557  003A0A  EF09  F01D         	goto	u4361
  8558  003A0E  EF0C  F01D         	goto	u4360
  8559  003A12                     u4361:
  8560  003A12  FFFF               	dw	65535	; assembler added errata NOP
  8561  003A14  EF26  F01D         	goto	l4049
  8562  003A18                     u4360:
  8563  003A18  FFFF               	dw	65535	; assembler added errata NOP
  8564  003A1A                     
  8565                           ; BSR set to: 0
  8566  003A1A  5030               	movf	otoa@t^0,w,c
  8567  003A1C  1031               	iorwf	(otoa@t+1)^0,w,c
  8568  003A1E  B4D8               	btfsc	status,2,c
  8569  003A20  EF14  F01D         	goto	u4371
  8570  003A24  EF17  F01D         	goto	u4370
  8571  003A28                     u4371:
  8572  003A28  FFFF               	dw	65535	; assembler added errata NOP
  8573  003A2A  EF26  F01D         	goto	l4049
  8574  003A2E                     u4370:
  8575  003A2E  FFFF               	dw	65535	; assembler added errata NOP
  8576  003A30                     
  8577                           ; BSR set to: 0
  8578                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 535:         --i;
  8579  003A30  063C               	decf	otoa@i^0,f,c
  8580  003A32  A0D8               	btfss	status,0,c
  8581  003A34  063D               	decf	(otoa@i+1)^0,f,c
  8582  003A36                     
  8583                           ; BSR set to: 0
  8584                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 536:         dbuf
      +                          [i] = '0';
  8585  003A36  0E98               	movlw	low _dbuf
  8586  003A38  243C               	addwf	otoa@i^0,w,c
  8587  003A3A  6ED9               	movwf	fsr2l,c
  8588  003A3C  0E00               	movlw	high _dbuf
  8589  003A3E  203D               	addwfc	(otoa@i+1)^0,w,c
  8590  003A40  6EDA               	movwf	fsr2h,c
  8591  003A42  0E30               	movlw	48
  8592  003A44  6EDF               	movwf	indf2,c
  8593  003A46                     
  8594                           ; BSR set to: 0
  8595                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 537:         --w;
  8596  003A46  0632               	decf	otoa@w^0,f,c
  8597  003A48  A0D8               	btfss	status,0,c
  8598  003A4A  0633               	decf	(otoa@w+1)^0,f,c
  8599  003A4C                     l4049:
  8600  003A4C  FFFF               	dw	65535	; assembler added errata NOP
  8601                           
  8602                           ; BSR set to: 0
  8603                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 541:     return p
      +                          ad(fp, &dbuf[i], w);
  8604  003A4E  C01C  F011         	movff	otoa@fp,pad@fp
  8605  003A52  C01D  F012         	movff	otoa@fp+1,pad@fp+1
  8606  003A56  0E98               	movlw	low _dbuf
  8607  003A58  243C               	addwf	otoa@i^0,w,c
  8608  003A5A  6E13               	movwf	pad@buf^0,c
  8609  003A5C  0E00               	movlw	high _dbuf
  8610  003A5E  203D               	addwfc	(otoa@i+1)^0,w,c
  8611  003A60  6E14               	movwf	(pad@buf+1)^0,c
  8612  003A62  C032  F015         	movff	otoa@w,pad@p
  8613  003A66  C033  F016         	movff	otoa@w+1,pad@p+1
  8614  003A6A  EC95  F038         	call	_pad	;wreg free
  8615  003A6E  C011  F01C         	movff	?_pad,?_otoa
  8616  003A72  C012  F01D         	movff	?_pad+1,?_otoa+1
  8617  003A76  0012               	return		;funcret
  8618  003A78  FFFF               	dw	65535	; errata NOP
  8619  003A7A                     __end_of_otoa:
  8620                           	callstack 0
  8621                           
  8622 ;; *************** function _dtoa *****************
  8623 ;; Defined at:
  8624 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  8625 ;; Parameters:    Size  Location     Type
  8626 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  8627 ;;		 -> vsnprintf@f(6), 
  8628 ;;  d               8   29[COMRAM] long long 
  8629 ;; Auto vars:     Size  Location     Type
  8630 ;;  n               8   53[COMRAM] long long 
  8631 ;;  i               2   61[COMRAM] int 
  8632 ;;  s               2   51[COMRAM] int 
  8633 ;;  w               2   49[COMRAM] int 
  8634 ;;  p               2   47[COMRAM] int 
  8635 ;; Return value:  Size  Location     Type
  8636 ;;                  2   27[COMRAM] int 
  8637 ;; Registers used:
  8638 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8639 ;; Tracked objects:
  8640 ;;		On entry : 0/0
  8641 ;;		On exit  : 0/0
  8642 ;;		Unchanged: 0/0
  8643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8644 ;;      Params:        10       0       0       0       0       0       0
  8645 ;;      Locals:        18       0       0       0       0       0       0
  8646 ;;      Temps:          8       0       0       0       0       0       0
  8647 ;;      Totals:        36       0       0       0       0       0       0
  8648 ;;Total ram usage:       36 bytes
  8649 ;; Hardware stack levels used:    1
  8650 ;; Hardware stack levels required when called:    5
  8651 ;; This function calls:
  8652 ;;		___aodiv
  8653 ;;		___aomod
  8654 ;;		_abs
  8655 ;;		_pad
  8656 ;; This function is called by:
  8657 ;;		_vfpfcnvrt
  8658 ;; This function uses a non-reentrant model
  8659 ;;
  8660                           
  8661                           	psect	text20
  8662  002FC4                     __ptext20:
  8663                           	callstack 0
  8664  002FC4                     _dtoa:
  8665                           	callstack 0
  8666  002FC4  FFFF               	dw	65535	; assembler added errata NOP
  8667  002FC6                     
  8668                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
  8669  002FC6  C01E  F036         	movff	dtoa@d,dtoa@n
  8670  002FCA  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  8671  002FCE  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  8672  002FD2  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  8673  002FD6  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  8674  002FDA  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  8675  002FDE  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  8676  002FE2  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  8677  002FE6                     
  8678                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
  8679  002FE6  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  8680  002FE8  EFF8  F017         	goto	u4131
  8681  002FEC  EFFC  F017         	goto	u4130
  8682  002FF0                     u4131:
  8683  002FF0  FFFF               	dw	65535	; assembler added errata NOP
  8684  002FF2  0E01               	movlw	1
  8685  002FF4  EFFE  F017         	goto	u4140
  8686  002FF8                     u4130:
  8687  002FF8  FFFF               	dw	65535	; assembler added errata NOP
  8688  002FFA  0E00               	movlw	0
  8689  002FFC                     u4140:
  8690  002FFC  FFFF               	dw	65535	; assembler added errata NOP
  8691  002FFE  6E34               	movwf	dtoa@s^0,c
  8692  003000  6A35               	clrf	(dtoa@s+1)^0,c
  8693                           
  8694                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  8695  003002  5034               	movf	dtoa@s^0,w,c
  8696  003004  1035               	iorwf	(dtoa@s+1)^0,w,c
  8697  003006  B4D8               	btfsc	status,2,c
  8698  003008  EF08  F018         	goto	u4151
  8699  00300C  EF0B  F018         	goto	u4150
  8700  003010                     u4151:
  8701  003010  FFFF               	dw	65535	; assembler added errata NOP
  8702  003012  EF1C  F018         	goto	l3949
  8703  003016                     u4150:
  8704  003016  FFFF               	dw	65535	; assembler added errata NOP
  8705  003018                     
  8706                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
  8707  003018  1E3D               	comf	(dtoa@n+7)^0,f,c
  8708  00301A  1E3C               	comf	(dtoa@n+6)^0,f,c
  8709  00301C  1E3B               	comf	(dtoa@n+5)^0,f,c
  8710  00301E  1E3A               	comf	(dtoa@n+4)^0,f,c
  8711  003020  1E39               	comf	(dtoa@n+3)^0,f,c
  8712  003022  1E38               	comf	(dtoa@n+2)^0,f,c
  8713  003024  1E37               	comf	(dtoa@n+1)^0,f,c
  8714  003026  6C36               	negf	dtoa@n^0,c
  8715  003028  0E00               	movlw	0
  8716  00302A  2237               	addwfc	(dtoa@n+1)^0,f,c
  8717  00302C  2238               	addwfc	(dtoa@n+2)^0,f,c
  8718  00302E  2239               	addwfc	(dtoa@n+3)^0,f,c
  8719  003030  223A               	addwfc	(dtoa@n+4)^0,f,c
  8720  003032  223B               	addwfc	(dtoa@n+5)^0,f,c
  8721  003034  223C               	addwfc	(dtoa@n+6)^0,f,c
  8722  003036  223D               	addwfc	(dtoa@n+7)^0,f,c
  8723  003038                     l3949:
  8724  003038  FFFF               	dw	65535	; assembler added errata NOP
  8725                           
  8726                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
  8727  00303A  0100               	movlb	0	; () banked
  8728  00303C  BF89               	btfsc	(_prec+1)& (0+255),7,b
  8729  00303E  EF23  F018         	goto	u4161
  8730  003042  EF26  F018         	goto	u4160
  8731  003046                     u4161:
  8732  003046  FFFF               	dw	65535	; assembler added errata NOP
  8733  003048  EF28  F018         	goto	l3953
  8734  00304C                     u4160:
  8735  00304C  FFFF               	dw	65535	; assembler added errata NOP
  8736  00304E                     
  8737                           ; BSR set to: 0
  8738                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
  8739  00304E  938A               	bcf	_flags& (0+255),1,b
  8740  003050                     l3953:
  8741  003050  FFFF               	dw	65535	; assembler added errata NOP
  8742                           
  8743                           ; BSR set to: 0
  8744                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
  8745  003052  BF89               	btfsc	(_prec+1)& (0+255),7,b
  8746  003054  EF37  F018         	goto	u4170
  8747  003058  5189               	movf	(_prec+1)& (0+255),w,b
  8748  00305A  E106               	bnz	u4171
  8749  00305C  0588               	decf	_prec& (0+255),w,b
  8750  00305E  B0D8               	btfsc	status,0,c
  8751  003060  EF34  F018         	goto	u4171
  8752  003064  EF37  F018         	goto	u4170
  8753  003068                     u4171:
  8754  003068  FFFF               	dw	65535	; assembler added errata NOP
  8755  00306A  EF3E  F018         	goto	l1199
  8756  00306E                     u4170:
  8757  00306E  FFFF               	dw	65535	; assembler added errata NOP
  8758  003070                     
  8759                           ; BSR set to: 0
  8760  003070  0E00               	movlw	0
  8761  003072  6E31               	movwf	(dtoa@p+1)^0,c
  8762  003074  0E01               	movlw	1
  8763  003076  6E30               	movwf	dtoa@p^0,c
  8764  003078  EF43  F018         	goto	l1201
  8765  00307C                     l1199:
  8766  00307C  FFFF               	dw	65535	; assembler added errata NOP
  8767                           
  8768                           ; BSR set to: 0
  8769  00307E  C088  F030         	movff	_prec,dtoa@p
  8770  003082  C089  F031         	movff	_prec+1,dtoa@p+1
  8771  003086                     l1201:
  8772  003086  FFFF               	dw	65535	; assembler added errata NOP
  8773                           
  8774                           ; BSR set to: 0
  8775                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
  8776  003088  C086  F032         	movff	_width,dtoa@w
  8777  00308C  C087  F033         	movff	_width+1,dtoa@w+1
  8778  003090                     
  8779                           ; BSR set to: 0
  8780                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
  8781  003090  5034               	movf	dtoa@s^0,w,c
  8782  003092  1035               	iorwf	(dtoa@s+1)^0,w,c
  8783  003094  A4D8               	btfss	status,2,c
  8784  003096  EF4F  F018         	goto	u4181
  8785  00309A  EF52  F018         	goto	u4180
  8786  00309E                     u4181:
  8787  00309E  FFFF               	dw	65535	; assembler added errata NOP
  8788  0030A0  EF5B  F018         	goto	l3961
  8789  0030A4                     u4180:
  8790  0030A4  FFFF               	dw	65535	; assembler added errata NOP
  8791  0030A6                     
  8792                           ; BSR set to: 0
  8793  0030A6  A58A               	btfss	_flags& (0+255),2,b
  8794  0030A8  EF58  F018         	goto	u4191
  8795  0030AC  EF5B  F018         	goto	u4190
  8796  0030B0                     u4191:
  8797  0030B0  FFFF               	dw	65535	; assembler added errata NOP
  8798  0030B2  EF5F  F018         	goto	l3963
  8799  0030B6                     u4190:
  8800  0030B6                     l3961:
  8801  0030B6  FFFF               	dw	65535	; assembler added errata NOP
  8802                           
  8803                           ; BSR set to: 0
  8804                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
  8805  0030B8  0632               	decf	dtoa@w^0,f,c
  8806  0030BA  A0D8               	btfss	status,0,c
  8807  0030BC  0633               	decf	(dtoa@w+1)^0,f,c
  8808  0030BE                     l3963:
  8809  0030BE  FFFF               	dw	65535	; assembler added errata NOP
  8810                           
  8811                           ; BSR set to: 0
  8812                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
  8813  0030C0  0E00               	movlw	0
  8814  0030C2  6E3F               	movwf	(dtoa@i+1)^0,c
  8815  0030C4  0E1F               	movlw	31
  8816  0030C6  6E3E               	movwf	dtoa@i^0,c
  8817  0030C8                     
  8818                           ; BSR set to: 0
  8819                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
  8820  0030C8  0E00               	movlw	0
  8821  0030CA  6FB7               	movwf	(_dbuf+31)& (0+255),b
  8822                           
  8823                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8824  0030CC  EFE5  F018         	goto	l3977
  8825  0030D0                     l3967:
  8826  0030D0  FFFF               	dw	65535	; assembler added errata NOP
  8827                           
  8828                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
  8829  0030D2  063E               	decf	dtoa@i^0,f,c
  8830  0030D4  A0D8               	btfss	status,0,c
  8831  0030D6  063F               	decf	(dtoa@i+1)^0,f,c
  8832  0030D8                     
  8833                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
  8834  0030D8  0E98               	movlw	low _dbuf
  8835  0030DA  243E               	addwf	dtoa@i^0,w,c
  8836  0030DC  6ED9               	movwf	fsr2l,c
  8837  0030DE  0E00               	movlw	high _dbuf
  8838  0030E0  203F               	addwfc	(dtoa@i+1)^0,w,c
  8839  0030E2  6EDA               	movwf	fsr2h,c
  8840  0030E4  C036  F001         	movff	dtoa@n,___aomod@dividend
  8841  0030E8  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  8842  0030EC  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  8843  0030F0  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  8844  0030F4  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  8845  0030F8  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  8846  0030FC  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  8847  003100  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  8848  003104  0E0A               	movlw	10
  8849  003106  6E09               	movwf	___aomod@divisor^0,c
  8850  003108  0E00               	movlw	0
  8851  00310A  6E0A               	movwf	(___aomod@divisor+1)^0,c
  8852  00310C  0E00               	movlw	0
  8853  00310E  6E0B               	movwf	(___aomod@divisor+2)^0,c
  8854  003110  0E00               	movlw	0
  8855  003112  6E0C               	movwf	(___aomod@divisor+3)^0,c
  8856  003114  0E00               	movlw	0
  8857  003116  6E0D               	movwf	(___aomod@divisor+4)^0,c
  8858  003118  0E00               	movlw	0
  8859  00311A  6E0E               	movwf	(___aomod@divisor+5)^0,c
  8860  00311C  0E00               	movlw	0
  8861  00311E  6E0F               	movwf	(___aomod@divisor+6)^0,c
  8862  003120  0E00               	movlw	0
  8863  003122  6E10               	movwf	(___aomod@divisor+7)^0,c
  8864  003124  EC7A  F03D         	call	___aomod	;wreg free
  8865  003128  C001  F026         	movff	?___aomod,??_dtoa
  8866  00312C  C002  F027         	movff	?___aomod+1,??_dtoa+1
  8867  003130  C003  F028         	movff	?___aomod+2,??_dtoa+2
  8868  003134  C004  F029         	movff	?___aomod+3,??_dtoa+3
  8869  003138  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  8870  00313C  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  8871  003140  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  8872  003144  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  8873  003148  C026  F013         	movff	??_dtoa,abs@a
  8874  00314C  C028  F014         	movff	??_dtoa+2,abs@a+1
  8875  003150  EC0E  F033         	call	_abs	;wreg free
  8876  003154  5013               	movf	?_abs^0,w,c
  8877  003156  0F30               	addlw	48
  8878  003158  6EDF               	movwf	indf2,c
  8879  00315A                     
  8880                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
  8881  00315A  0630               	decf	dtoa@p^0,f,c
  8882  00315C  A0D8               	btfss	status,0,c
  8883  00315E  0631               	decf	(dtoa@p+1)^0,f,c
  8884  003160                     
  8885                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
  8886  003160  0632               	decf	dtoa@w^0,f,c
  8887  003162  A0D8               	btfss	status,0,c
  8888  003164  0633               	decf	(dtoa@w+1)^0,f,c
  8889  003166                     
  8890                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
  8891  003166  C036  F001         	movff	dtoa@n,___aodiv@dividend
  8892  00316A  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  8893  00316E  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  8894  003172  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  8895  003176  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  8896  00317A  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  8897  00317E  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  8898  003182  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  8899  003186  0E0A               	movlw	10
  8900  003188  6E09               	movwf	___aodiv@divisor^0,c
  8901  00318A  0E00               	movlw	0
  8902  00318C  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  8903  00318E  0E00               	movlw	0
  8904  003190  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  8905  003192  0E00               	movlw	0
  8906  003194  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  8907  003196  0E00               	movlw	0
  8908  003198  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  8909  00319A  0E00               	movlw	0
  8910  00319C  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  8911  00319E  0E00               	movlw	0
  8912  0031A0  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  8913  0031A2  0E00               	movlw	0
  8914  0031A4  6E10               	movwf	(___aodiv@divisor+7)^0,c
  8915  0031A6  EC23  F01F         	call	___aodiv	;wreg free
  8916  0031AA  C001  F036         	movff	?___aodiv,dtoa@n
  8917  0031AE  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  8918  0031B2  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  8919  0031B6  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  8920  0031BA  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  8921  0031BE  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  8922  0031C2  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  8923  0031C6  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  8924  0031CA                     l3977:
  8925  0031CA  FFFF               	dw	65535	; assembler added errata NOP
  8926                           
  8927                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8928  0031CC  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  8929  0031CE  EFF1  F018         	goto	u4201
  8930  0031D2  503F               	movf	(dtoa@i+1)^0,w,c
  8931  0031D4  E109               	bnz	u4200
  8932  0031D6  043E               	decf	dtoa@i^0,w,c
  8933  0031D8  A0D8               	btfss	status,0,c
  8934  0031DA  EFF1  F018         	goto	u4201
  8935  0031DE  EFF4  F018         	goto	u4200
  8936  0031E2                     u4201:
  8937  0031E2  FFFF               	dw	65535	; assembler added errata NOP
  8938  0031E4  EF2D  F019         	goto	l3987
  8939  0031E8                     u4200:
  8940  0031E8  FFFF               	dw	65535	; assembler added errata NOP
  8941  0031EA  5036               	movf	dtoa@n^0,w,c
  8942  0031EC  1037               	iorwf	(dtoa@n+1)^0,w,c
  8943  0031EE  1038               	iorwf	(dtoa@n+2)^0,w,c
  8944  0031F0  1039               	iorwf	(dtoa@n+3)^0,w,c
  8945  0031F2  103A               	iorwf	(dtoa@n+4)^0,w,c
  8946  0031F4  103B               	iorwf	(dtoa@n+5)^0,w,c
  8947  0031F6  103C               	iorwf	(dtoa@n+6)^0,w,c
  8948  0031F8  103D               	iorwf	(dtoa@n+7)^0,w,c
  8949  0031FA  A4D8               	btfss	status,2,c
  8950  0031FC  EF02  F019         	goto	u4211
  8951  003200  EF05  F019         	goto	u4210
  8952  003204                     u4211:
  8953  003204  FFFF               	dw	65535	; assembler added errata NOP
  8954  003206  EF68  F018         	goto	l3967
  8955  00320A                     u4210:
  8956  00320A  FFFF               	dw	65535	; assembler added errata NOP
  8957  00320C  BE31               	btfsc	(dtoa@p+1)^0,7,c
  8958  00320E  EF14  F019         	goto	u4220
  8959  003212  5031               	movf	(dtoa@p+1)^0,w,c
  8960  003214  E106               	bnz	u4221
  8961  003216  0430               	decf	dtoa@p^0,w,c
  8962  003218  B0D8               	btfsc	status,0,c
  8963  00321A  EF11  F019         	goto	u4221
  8964  00321E  EF14  F019         	goto	u4220
  8965  003222                     u4221:
  8966  003222  FFFF               	dw	65535	; assembler added errata NOP
  8967  003224  EF68  F018         	goto	l3967
  8968  003228                     u4220:
  8969  003228  FFFF               	dw	65535	; assembler added errata NOP
  8970  00322A  BE33               	btfsc	(dtoa@w+1)^0,7,c
  8971  00322C  EF20  F019         	goto	u4231
  8972  003230  5033               	movf	(dtoa@w+1)^0,w,c
  8973  003232  E109               	bnz	u4230
  8974  003234  0432               	decf	dtoa@w^0,w,c
  8975  003236  A0D8               	btfss	status,0,c
  8976  003238  EF20  F019         	goto	u4231
  8977  00323C  EF23  F019         	goto	u4230
  8978  003240                     u4231:
  8979  003240  FFFF               	dw	65535	; assembler added errata NOP
  8980  003242  EF2D  F019         	goto	l3987
  8981  003246                     u4230:
  8982  003246  FFFF               	dw	65535	; assembler added errata NOP
  8983  003248  0100               	movlb	0	; () banked
  8984  00324A  B38A               	btfsc	_flags& (0+255),1,b
  8985  00324C  EF2A  F019         	goto	u4241
  8986  003250  EF2D  F019         	goto	u4240
  8987  003254                     u4241:
  8988  003254  FFFF               	dw	65535	; assembler added errata NOP
  8989  003256  EF68  F018         	goto	l3967
  8990  00325A                     u4240:
  8991  00325A                     l3987:
  8992  00325A  FFFF               	dw	65535	; assembler added errata NOP
  8993                           
  8994                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
  8995  00325C  5034               	movf	dtoa@s^0,w,c
  8996  00325E  1035               	iorwf	(dtoa@s+1)^0,w,c
  8997  003260  A4D8               	btfss	status,2,c
  8998  003262  EF35  F019         	goto	u4251
  8999  003266  EF38  F019         	goto	u4250
  9000  00326A                     u4251:
  9001  00326A  FFFF               	dw	65535	; assembler added errata NOP
  9002  00326C  EF42  F019         	goto	l3991
  9003  003270                     u4250:
  9004  003270  FFFF               	dw	65535	; assembler added errata NOP
  9005  003272  0100               	movlb	0	; () banked
  9006  003274  A58A               	btfss	_flags& (0+255),2,b
  9007  003276  EF3F  F019         	goto	u4261
  9008  00327A  EF42  F019         	goto	u4260
  9009  00327E                     u4261:
  9010  00327E  FFFF               	dw	65535	; assembler added errata NOP
  9011  003280  EF65  F019         	goto	l4001
  9012  003284                     u4260:
  9013  003284                     l3991:
  9014  003284  FFFF               	dw	65535	; assembler added errata NOP
  9015                           
  9016                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
  9017  003286  063E               	decf	dtoa@i^0,f,c
  9018  003288  A0D8               	btfss	status,0,c
  9019  00328A  063F               	decf	(dtoa@i+1)^0,f,c
  9020  00328C                     
  9021                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
  9022  00328C  5034               	movf	dtoa@s^0,w,c
  9023  00328E  1035               	iorwf	(dtoa@s+1)^0,w,c
  9024  003290  A4D8               	btfss	status,2,c
  9025  003292  EF4D  F019         	goto	u4271
  9026  003296  EF50  F019         	goto	u4270
  9027  00329A                     u4271:
  9028  00329A  FFFF               	dw	65535	; assembler added errata NOP
  9029  00329C  EF57  F019         	goto	l3997
  9030  0032A0                     u4270:
  9031  0032A0  FFFF               	dw	65535	; assembler added errata NOP
  9032  0032A2  0E00               	movlw	0
  9033  0032A4  6E2F               	movwf	(_dtoa$1666+1)^0,c
  9034  0032A6  0E2B               	movlw	43
  9035  0032A8  6E2E               	movwf	_dtoa$1666^0,c
  9036  0032AA  EF5C  F019         	goto	l3999
  9037  0032AE                     l3997:
  9038  0032AE  FFFF               	dw	65535	; assembler added errata NOP
  9039  0032B0  0E00               	movlw	0
  9040  0032B2  6E2F               	movwf	(_dtoa$1666+1)^0,c
  9041  0032B4  0E2D               	movlw	45
  9042  0032B6  6E2E               	movwf	_dtoa$1666^0,c
  9043  0032B8                     l3999:
  9044  0032B8  FFFF               	dw	65535	; assembler added errata NOP
  9045  0032BA  0E98               	movlw	low _dbuf
  9046  0032BC  243E               	addwf	dtoa@i^0,w,c
  9047  0032BE  6ED9               	movwf	fsr2l,c
  9048  0032C0  0E00               	movlw	high _dbuf
  9049  0032C2  203F               	addwfc	(dtoa@i+1)^0,w,c
  9050  0032C4  6EDA               	movwf	fsr2h,c
  9051  0032C6  C02E  FFDF         	movff	_dtoa$1666,indf2
  9052  0032CA                     l4001:
  9053  0032CA  FFFF               	dw	65535	; assembler added errata NOP
  9054                           
  9055                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
  9056  0032CC  C01C  F011         	movff	dtoa@fp,pad@fp
  9057  0032D0  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  9058  0032D4  0E98               	movlw	low _dbuf
  9059  0032D6  243E               	addwf	dtoa@i^0,w,c
  9060  0032D8  6E13               	movwf	pad@buf^0,c
  9061  0032DA  0E00               	movlw	high _dbuf
  9062  0032DC  203F               	addwfc	(dtoa@i+1)^0,w,c
  9063  0032DE  6E14               	movwf	(pad@buf+1)^0,c
  9064  0032E0  C032  F015         	movff	dtoa@w,pad@p
  9065  0032E4  C033  F016         	movff	dtoa@w+1,pad@p+1
  9066  0032E8  EC95  F038         	call	_pad	;wreg free
  9067  0032EC  C011  F01C         	movff	?_pad,?_dtoa
  9068  0032F0  C012  F01D         	movff	?_pad+1,?_dtoa+1
  9069  0032F4  0012               	return		;funcret
  9070  0032F6  FFFF               	dw	65535	; errata NOP
  9071  0032F8                     __end_of_dtoa:
  9072                           	callstack 0
  9073                           
  9074 ;; *************** function ___aomod *****************
  9075 ;; Defined at:
  9076 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
  9077 ;; Parameters:    Size  Location     Type
  9078 ;;  dividend        8    0[COMRAM] long long 
  9079 ;;  divisor         8    8[COMRAM] long long 
  9080 ;; Auto vars:     Size  Location     Type
  9081 ;;  sign            1   17[COMRAM] unsigned char 
  9082 ;;  counter         1   16[COMRAM] unsigned char 
  9083 ;; Return value:  Size  Location     Type
  9084 ;;                  8    0[COMRAM] long long 
  9085 ;; Registers used:
  9086 ;;		wreg, status,2, status,0
  9087 ;; Tracked objects:
  9088 ;;		On entry : 0/0
  9089 ;;		On exit  : 0/0
  9090 ;;		Unchanged: 0/0
  9091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9092 ;;      Params:        16       0       0       0       0       0       0
  9093 ;;      Locals:         2       0       0       0       0       0       0
  9094 ;;      Temps:          0       0       0       0       0       0       0
  9095 ;;      Totals:        18       0       0       0       0       0       0
  9096 ;;Total ram usage:       18 bytes
  9097 ;; Hardware stack levels used:    1
  9098 ;; Hardware stack levels required when called:    1
  9099 ;; This function calls:
  9100 ;;		Nothing
  9101 ;; This function is called by:
  9102 ;;		_dtoa
  9103 ;; This function uses a non-reentrant model
  9104 ;;
  9105                           
  9106                           	psect	text21
  9107  007AF4                     __ptext21:
  9108                           	callstack 0
  9109  007AF4                     ___aomod:
  9110                           	callstack 0
  9111  007AF4  FFFF               	dw	65535	; assembler added errata NOP
  9112  007AF6  0E00               	movlw	0
  9113  007AF8  6E12               	movwf	___aomod@sign^0,c
  9114  007AFA  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  9115  007AFC  EF85  F03D         	goto	u3840
  9116  007B00  EF82  F03D         	goto	u3841
  9117  007B04                     u3841:
  9118  007B04  FFFF               	dw	65535	; assembler added errata NOP
  9119  007B06  EF98  F03D         	goto	l3807
  9120  007B0A                     u3840:
  9121  007B0A  FFFF               	dw	65535	; assembler added errata NOP
  9122  007B0C  1E08               	comf	(___aomod@dividend+7)^0,f,c
  9123  007B0E  1E07               	comf	(___aomod@dividend+6)^0,f,c
  9124  007B10  1E06               	comf	(___aomod@dividend+5)^0,f,c
  9125  007B12  1E05               	comf	(___aomod@dividend+4)^0,f,c
  9126  007B14  1E04               	comf	(___aomod@dividend+3)^0,f,c
  9127  007B16  1E03               	comf	(___aomod@dividend+2)^0,f,c
  9128  007B18  1E02               	comf	(___aomod@dividend+1)^0,f,c
  9129  007B1A  6C01               	negf	___aomod@dividend^0,c
  9130  007B1C  0E00               	movlw	0
  9131  007B1E  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  9132  007B20  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  9133  007B22  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  9134  007B24  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  9135  007B26  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  9136  007B28  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  9137  007B2A  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  9138  007B2C  0E01               	movlw	1
  9139  007B2E  6E12               	movwf	___aomod@sign^0,c
  9140  007B30                     l3807:
  9141  007B30  FFFF               	dw	65535	; assembler added errata NOP
  9142  007B32  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  9143  007B34  EFA1  F03D         	goto	u3850
  9144  007B38  EF9E  F03D         	goto	u3851
  9145  007B3C                     u3851:
  9146  007B3C  FFFF               	dw	65535	; assembler added errata NOP
  9147  007B3E  EFB2  F03D         	goto	l3811
  9148  007B42                     u3850:
  9149  007B42  FFFF               	dw	65535	; assembler added errata NOP
  9150  007B44  1E10               	comf	(___aomod@divisor+7)^0,f,c
  9151  007B46  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  9152  007B48  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  9153  007B4A  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  9154  007B4C  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  9155  007B4E  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  9156  007B50  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  9157  007B52  6C09               	negf	___aomod@divisor^0,c
  9158  007B54  0E00               	movlw	0
  9159  007B56  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  9160  007B58  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  9161  007B5A  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  9162  007B5C  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  9163  007B5E  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  9164  007B60  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  9165  007B62  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  9166  007B64                     l3811:
  9167  007B64  FFFF               	dw	65535	; assembler added errata NOP
  9168  007B66  5009               	movf	___aomod@divisor^0,w,c
  9169  007B68  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  9170  007B6A  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  9171  007B6C  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  9172  007B6E  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  9173  007B70  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  9174  007B72  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  9175  007B74  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  9176  007B76  B4D8               	btfsc	status,2,c
  9177  007B78  EFC0  F03D         	goto	u3861
  9178  007B7C  EFC3  F03D         	goto	u3860
  9179  007B80                     u3861:
  9180  007B80  FFFF               	dw	65535	; assembler added errata NOP
  9181  007B82  EF14  F03E         	goto	l3827
  9182  007B86                     u3860:
  9183  007B86  FFFF               	dw	65535	; assembler added errata NOP
  9184  007B88  0E01               	movlw	1
  9185  007B8A  6E11               	movwf	___aomod@counter^0,c
  9186  007B8C  EFD3  F03D         	goto	l3817
  9187  007B90                     l3815:
  9188  007B90  FFFF               	dw	65535	; assembler added errata NOP
  9189  007B92  90D8               	bcf	status,0,c
  9190  007B94  3609               	rlcf	___aomod@divisor^0,f,c
  9191  007B96  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  9192  007B98  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  9193  007B9A  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  9194  007B9C  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  9195  007B9E  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  9196  007BA0  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  9197  007BA2  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  9198  007BA4  2A11               	incf	___aomod@counter^0,f,c
  9199  007BA6                     l3817:
  9200  007BA6  FFFF               	dw	65535	; assembler added errata NOP
  9201  007BA8  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  9202  007BAA  EFD9  F03D         	goto	u3871
  9203  007BAE  EFDC  F03D         	goto	u3870
  9204  007BB2                     u3871:
  9205  007BB2  FFFF               	dw	65535	; assembler added errata NOP
  9206  007BB4  EFC8  F03D         	goto	l3815
  9207  007BB8                     u3870:
  9208  007BB8  FFFF               	dw	65535	; assembler added errata NOP
  9209  007BBA                     l3819:
  9210  007BBA  FFFF               	dw	65535	; assembler added errata NOP
  9211  007BBC  5009               	movf	___aomod@divisor^0,w,c
  9212  007BBE  5C01               	subwf	___aomod@dividend^0,w,c
  9213  007BC0  500A               	movf	(___aomod@divisor+1)^0,w,c
  9214  007BC2  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  9215  007BC4  500B               	movf	(___aomod@divisor+2)^0,w,c
  9216  007BC6  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  9217  007BC8  500C               	movf	(___aomod@divisor+3)^0,w,c
  9218  007BCA  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  9219  007BCC  500D               	movf	(___aomod@divisor+4)^0,w,c
  9220  007BCE  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  9221  007BD0  500E               	movf	(___aomod@divisor+5)^0,w,c
  9222  007BD2  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  9223  007BD4  500F               	movf	(___aomod@divisor+6)^0,w,c
  9224  007BD6  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  9225  007BD8  5010               	movf	(___aomod@divisor+7)^0,w,c
  9226  007BDA  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  9227  007BDC  A0D8               	btfss	status,0,c
  9228  007BDE  EFF3  F03D         	goto	u3881
  9229  007BE2  EFF6  F03D         	goto	u3880
  9230  007BE6                     u3881:
  9231  007BE6  FFFF               	dw	65535	; assembler added errata NOP
  9232  007BE8  EF07  F03E         	goto	l3823
  9233  007BEC                     u3880:
  9234  007BEC  FFFF               	dw	65535	; assembler added errata NOP
  9235  007BEE  5009               	movf	___aomod@divisor^0,w,c
  9236  007BF0  5E01               	subwf	___aomod@dividend^0,f,c
  9237  007BF2  500A               	movf	(___aomod@divisor+1)^0,w,c
  9238  007BF4  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  9239  007BF6  500B               	movf	(___aomod@divisor+2)^0,w,c
  9240  007BF8  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  9241  007BFA  500C               	movf	(___aomod@divisor+3)^0,w,c
  9242  007BFC  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  9243  007BFE  500D               	movf	(___aomod@divisor+4)^0,w,c
  9244  007C00  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  9245  007C02  500E               	movf	(___aomod@divisor+5)^0,w,c
  9246  007C04  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  9247  007C06  500F               	movf	(___aomod@divisor+6)^0,w,c
  9248  007C08  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  9249  007C0A  5010               	movf	(___aomod@divisor+7)^0,w,c
  9250  007C0C  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  9251  007C0E                     l3823:
  9252  007C0E  FFFF               	dw	65535	; assembler added errata NOP
  9253  007C10  90D8               	bcf	status,0,c
  9254  007C12  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  9255  007C14  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  9256  007C16  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  9257  007C18  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  9258  007C1A  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  9259  007C1C  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  9260  007C1E  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  9261  007C20  3209               	rrcf	___aomod@divisor^0,f,c
  9262  007C22  2E11               	decfsz	___aomod@counter^0,f,c
  9263  007C24  EFDD  F03D         	goto	l3819
  9264  007C28                     l3827:
  9265  007C28  FFFF               	dw	65535	; assembler added errata NOP
  9266  007C2A  5012               	movf	___aomod@sign^0,w,c
  9267  007C2C  B4D8               	btfsc	status,2,c
  9268  007C2E  EF1B  F03E         	goto	u3891
  9269  007C32  EF1E  F03E         	goto	u3890
  9270  007C36                     u3891:
  9271  007C36  FFFF               	dw	65535	; assembler added errata NOP
  9272  007C38  EF2F  F03E         	goto	l3831
  9273  007C3C                     u3890:
  9274  007C3C  FFFF               	dw	65535	; assembler added errata NOP
  9275  007C3E  1E08               	comf	(___aomod@dividend+7)^0,f,c
  9276  007C40  1E07               	comf	(___aomod@dividend+6)^0,f,c
  9277  007C42  1E06               	comf	(___aomod@dividend+5)^0,f,c
  9278  007C44  1E05               	comf	(___aomod@dividend+4)^0,f,c
  9279  007C46  1E04               	comf	(___aomod@dividend+3)^0,f,c
  9280  007C48  1E03               	comf	(___aomod@dividend+2)^0,f,c
  9281  007C4A  1E02               	comf	(___aomod@dividend+1)^0,f,c
  9282  007C4C  6C01               	negf	___aomod@dividend^0,c
  9283  007C4E  0E00               	movlw	0
  9284  007C50  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  9285  007C52  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  9286  007C54  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  9287  007C56  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  9288  007C58  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  9289  007C5A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  9290  007C5C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  9291  007C5E                     l3831:
  9292  007C5E  FFFF               	dw	65535	; assembler added errata NOP
  9293  007C60  C001  F001         	movff	___aomod@dividend,?___aomod
  9294  007C64  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  9295  007C68  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  9296  007C6C  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  9297  007C70  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  9298  007C74  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  9299  007C78  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  9300  007C7C  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  9301  007C80  0012               	return		;funcret
  9302  007C82  FFFF               	dw	65535	; errata NOP
  9303  007C84                     __end_of___aomod:
  9304                           	callstack 0
  9305                           
  9306 ;; *************** function ___aodiv *****************
  9307 ;; Defined at:
  9308 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
  9309 ;; Parameters:    Size  Location     Type
  9310 ;;  dividend        8    0[COMRAM] long long 
  9311 ;;  divisor         8    8[COMRAM] long long 
  9312 ;; Auto vars:     Size  Location     Type
  9313 ;;  quotient        8   18[COMRAM] long long 
  9314 ;;  sign            1   17[COMRAM] unsigned char 
  9315 ;;  counter         1   16[COMRAM] unsigned char 
  9316 ;; Return value:  Size  Location     Type
  9317 ;;                  8    0[COMRAM] long long 
  9318 ;; Registers used:
  9319 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9320 ;; Tracked objects:
  9321 ;;		On entry : 0/0
  9322 ;;		On exit  : 0/0
  9323 ;;		Unchanged: 0/0
  9324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9325 ;;      Params:        16       0       0       0       0       0       0
  9326 ;;      Locals:        10       0       0       0       0       0       0
  9327 ;;      Temps:          0       0       0       0       0       0       0
  9328 ;;      Totals:        26       0       0       0       0       0       0
  9329 ;;Total ram usage:       26 bytes
  9330 ;; Hardware stack levels used:    1
  9331 ;; Hardware stack levels required when called:    1
  9332 ;; This function calls:
  9333 ;;		Nothing
  9334 ;; This function is called by:
  9335 ;;		_dtoa
  9336 ;; This function uses a non-reentrant model
  9337 ;;
  9338                           
  9339                           	psect	text22
  9340  003E46                     __ptext22:
  9341                           	callstack 0
  9342  003E46                     ___aodiv:
  9343                           	callstack 0
  9344  003E46  FFFF               	dw	65535	; assembler added errata NOP
  9345  003E48  0E00               	movlw	0
  9346  003E4A  6E12               	movwf	___aodiv@sign^0,c
  9347  003E4C  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  9348  003E4E  EF2E  F01F         	goto	u3770
  9349  003E52  EF2B  F01F         	goto	u3771
  9350  003E56                     u3771:
  9351  003E56  FFFF               	dw	65535	; assembler added errata NOP
  9352  003E58  EF41  F01F         	goto	l3763
  9353  003E5C                     u3770:
  9354  003E5C  FFFF               	dw	65535	; assembler added errata NOP
  9355  003E5E  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  9356  003E60  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  9357  003E62  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  9358  003E64  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  9359  003E66  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  9360  003E68  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  9361  003E6A  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  9362  003E6C  6C09               	negf	___aodiv@divisor^0,c
  9363  003E6E  0E00               	movlw	0
  9364  003E70  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  9365  003E72  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  9366  003E74  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  9367  003E76  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  9368  003E78  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  9369  003E7A  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  9370  003E7C  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  9371  003E7E  0E01               	movlw	1
  9372  003E80  6E12               	movwf	___aodiv@sign^0,c
  9373  003E82                     l3763:
  9374  003E82  FFFF               	dw	65535	; assembler added errata NOP
  9375  003E84  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  9376  003E86  EF4A  F01F         	goto	u3780
  9377  003E8A  EF47  F01F         	goto	u3781
  9378  003E8E                     u3781:
  9379  003E8E  FFFF               	dw	65535	; assembler added errata NOP
  9380  003E90  EF5D  F01F         	goto	l3769
  9381  003E94                     u3780:
  9382  003E94  FFFF               	dw	65535	; assembler added errata NOP
  9383  003E96  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  9384  003E98  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  9385  003E9A  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  9386  003E9C  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  9387  003E9E  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  9388  003EA0  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  9389  003EA2  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  9390  003EA4  6C01               	negf	___aodiv@dividend^0,c
  9391  003EA6  0E00               	movlw	0
  9392  003EA8  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  9393  003EAA  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  9394  003EAC  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  9395  003EAE  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  9396  003EB0  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  9397  003EB2  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  9398  003EB4  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  9399  003EB6  0E01               	movlw	1
  9400  003EB8  1A12               	xorwf	___aodiv@sign^0,f,c
  9401  003EBA                     l3769:
  9402  003EBA  FFFF               	dw	65535	; assembler added errata NOP
  9403  003EBC  EE20  F013         	lfsr	2,___aodiv@quotient
  9404  003EC0  0E07               	movlw	7
  9405  003EC2                     u3791:
  9406  003EC2  6ADE               	clrf	postinc2,c
  9407  003EC4  06E8               	decf	wreg,f,c
  9408  003EC6  E2FD               	bc	u3791
  9409  003EC8  5009               	movf	___aodiv@divisor^0,w,c
  9410  003ECA  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  9411  003ECC  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  9412  003ECE  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  9413  003ED0  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  9414  003ED2  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  9415  003ED4  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  9416  003ED6  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  9417  003ED8  B4D8               	btfsc	status,2,c
  9418  003EDA  EF71  F01F         	goto	u3801
  9419  003EDE  EF74  F01F         	goto	u3800
  9420  003EE2                     u3801:
  9421  003EE2  FFFF               	dw	65535	; assembler added errata NOP
  9422  003EE4  EFCF  F01F         	goto	l3791
  9423  003EE8                     u3800:
  9424  003EE8  FFFF               	dw	65535	; assembler added errata NOP
  9425  003EEA  0E01               	movlw	1
  9426  003EEC  6E11               	movwf	___aodiv@counter^0,c
  9427  003EEE  EF84  F01F         	goto	l3777
  9428  003EF2                     l3775:
  9429  003EF2  FFFF               	dw	65535	; assembler added errata NOP
  9430  003EF4  90D8               	bcf	status,0,c
  9431  003EF6  3609               	rlcf	___aodiv@divisor^0,f,c
  9432  003EF8  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  9433  003EFA  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  9434  003EFC  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  9435  003EFE  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  9436  003F00  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  9437  003F02  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  9438  003F04  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  9439  003F06  2A11               	incf	___aodiv@counter^0,f,c
  9440  003F08                     l3777:
  9441  003F08  FFFF               	dw	65535	; assembler added errata NOP
  9442  003F0A  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  9443  003F0C  EF8A  F01F         	goto	u3811
  9444  003F10  EF8D  F01F         	goto	u3810
  9445  003F14                     u3811:
  9446  003F14  FFFF               	dw	65535	; assembler added errata NOP
  9447  003F16  EF79  F01F         	goto	l3775
  9448  003F1A                     u3810:
  9449  003F1A  FFFF               	dw	65535	; assembler added errata NOP
  9450  003F1C                     l3779:
  9451  003F1C  FFFF               	dw	65535	; assembler added errata NOP
  9452  003F1E  90D8               	bcf	status,0,c
  9453  003F20  3613               	rlcf	___aodiv@quotient^0,f,c
  9454  003F22  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  9455  003F24  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  9456  003F26  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  9457  003F28  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  9458  003F2A  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  9459  003F2C  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  9460  003F2E  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  9461  003F30  5009               	movf	___aodiv@divisor^0,w,c
  9462  003F32  5C01               	subwf	___aodiv@dividend^0,w,c
  9463  003F34  500A               	movf	(___aodiv@divisor+1)^0,w,c
  9464  003F36  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  9465  003F38  500B               	movf	(___aodiv@divisor+2)^0,w,c
  9466  003F3A  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  9467  003F3C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  9468  003F3E  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  9469  003F40  500D               	movf	(___aodiv@divisor+4)^0,w,c
  9470  003F42  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  9471  003F44  500E               	movf	(___aodiv@divisor+5)^0,w,c
  9472  003F46  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  9473  003F48  500F               	movf	(___aodiv@divisor+6)^0,w,c
  9474  003F4A  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  9475  003F4C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  9476  003F4E  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  9477  003F50  A0D8               	btfss	status,0,c
  9478  003F52  EFAD  F01F         	goto	u3821
  9479  003F56  EFB0  F01F         	goto	u3820
  9480  003F5A                     u3821:
  9481  003F5A  FFFF               	dw	65535	; assembler added errata NOP
  9482  003F5C  EFC2  F01F         	goto	l3787
  9483  003F60                     u3820:
  9484  003F60  FFFF               	dw	65535	; assembler added errata NOP
  9485  003F62  5009               	movf	___aodiv@divisor^0,w,c
  9486  003F64  5E01               	subwf	___aodiv@dividend^0,f,c
  9487  003F66  500A               	movf	(___aodiv@divisor+1)^0,w,c
  9488  003F68  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  9489  003F6A  500B               	movf	(___aodiv@divisor+2)^0,w,c
  9490  003F6C  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  9491  003F6E  500C               	movf	(___aodiv@divisor+3)^0,w,c
  9492  003F70  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  9493  003F72  500D               	movf	(___aodiv@divisor+4)^0,w,c
  9494  003F74  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  9495  003F76  500E               	movf	(___aodiv@divisor+5)^0,w,c
  9496  003F78  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  9497  003F7A  500F               	movf	(___aodiv@divisor+6)^0,w,c
  9498  003F7C  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  9499  003F7E  5010               	movf	(___aodiv@divisor+7)^0,w,c
  9500  003F80  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  9501  003F82  8013               	bsf	___aodiv@quotient^0,0,c
  9502  003F84                     l3787:
  9503  003F84  FFFF               	dw	65535	; assembler added errata NOP
  9504  003F86  90D8               	bcf	status,0,c
  9505  003F88  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  9506  003F8A  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  9507  003F8C  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  9508  003F8E  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  9509  003F90  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  9510  003F92  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  9511  003F94  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  9512  003F96  3209               	rrcf	___aodiv@divisor^0,f,c
  9513  003F98  2E11               	decfsz	___aodiv@counter^0,f,c
  9514  003F9A  EF8E  F01F         	goto	l3779
  9515  003F9E                     l3791:
  9516  003F9E  FFFF               	dw	65535	; assembler added errata NOP
  9517  003FA0  5012               	movf	___aodiv@sign^0,w,c
  9518  003FA2  B4D8               	btfsc	status,2,c
  9519  003FA4  EFD6  F01F         	goto	u3831
  9520  003FA8  EFD9  F01F         	goto	u3830
  9521  003FAC                     u3831:
  9522  003FAC  FFFF               	dw	65535	; assembler added errata NOP
  9523  003FAE  EFEA  F01F         	goto	l3795
  9524  003FB2                     u3830:
  9525  003FB2  FFFF               	dw	65535	; assembler added errata NOP
  9526  003FB4  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  9527  003FB6  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  9528  003FB8  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  9529  003FBA  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  9530  003FBC  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  9531  003FBE  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  9532  003FC0  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  9533  003FC2  6C13               	negf	___aodiv@quotient^0,c
  9534  003FC4  0E00               	movlw	0
  9535  003FC6  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  9536  003FC8  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  9537  003FCA  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  9538  003FCC  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  9539  003FCE  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  9540  003FD0  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  9541  003FD2  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  9542  003FD4                     l3795:
  9543  003FD4  FFFF               	dw	65535	; assembler added errata NOP
  9544  003FD6  C013  F001         	movff	___aodiv@quotient,?___aodiv
  9545  003FDA  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  9546  003FDE  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  9547  003FE2  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  9548  003FE6  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  9549  003FEA  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  9550  003FEE  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  9551  003FF2  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  9552  003FF6  0012               	return		;funcret
  9553  003FF8  FFFF               	dw	65535	; errata NOP
  9554  003FFA                     __end_of___aodiv:
  9555                           	callstack 0
  9556                           
  9557 ;; *************** function _ctoa *****************
  9558 ;; Defined at:
  9559 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  9560 ;; Parameters:    Size  Location     Type
  9561 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  9562 ;;		 -> vsnprintf@f(6), 
  9563 ;;  c               1   29[COMRAM] unsigned char 
  9564 ;; Auto vars:     Size  Location     Type
  9565 ;;  w               2   30[COMRAM] int 
  9566 ;;  l               2    0        int 
  9567 ;; Return value:  Size  Location     Type
  9568 ;;                  2   27[COMRAM] int 
  9569 ;; Registers used:
  9570 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9571 ;; Tracked objects:
  9572 ;;		On entry : 0/0
  9573 ;;		On exit  : 0/0
  9574 ;;		Unchanged: 0/0
  9575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9576 ;;      Params:         3       0       0       0       0       0       0
  9577 ;;      Locals:         2       0       0       0       0       0       0
  9578 ;;      Temps:          0       0       0       0       0       0       0
  9579 ;;      Totals:         5       0       0       0       0       0       0
  9580 ;;Total ram usage:        5 bytes
  9581 ;; Hardware stack levels used:    1
  9582 ;; Hardware stack levels required when called:    5
  9583 ;; This function calls:
  9584 ;;		_pad
  9585 ;; This function is called by:
  9586 ;;		_vfpfcnvrt
  9587 ;; This function uses a non-reentrant model
  9588 ;;
  9589                           
  9590                           	psect	text23
  9591  0067C6                     __ptext23:
  9592                           	callstack 0
  9593  0067C6                     _ctoa:
  9594                           	callstack 0
  9595  0067C6  FFFF               	dw	65535	; assembler added errata NOP
  9596  0067C8                     
  9597                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  9598  0067C8  0100               	movlb	0	; () banked
  9599  0067CA  5186               	movf	_width& (0+255),w,b
  9600  0067CC  1187               	iorwf	(_width+1)& (0+255),w,b
  9601  0067CE  A4D8               	btfss	status,2,c
  9602  0067D0  EFEC  F033         	goto	u4121
  9603  0067D4  EFEF  F033         	goto	u4120
  9604  0067D8                     u4121:
  9605  0067D8  FFFF               	dw	65535	; assembler added errata NOP
  9606  0067DA  EFF6  F033         	goto	l3933
  9607  0067DE                     u4120:
  9608  0067DE  FFFF               	dw	65535	; assembler added errata NOP
  9609  0067E0                     
  9610                           ; BSR set to: 0
  9611  0067E0  C086  F01F         	movff	_width,ctoa@w
  9612  0067E4  C087  F020         	movff	_width+1,ctoa@w+1
  9613  0067E8  EFFD  F033         	goto	l3935
  9614  0067EC                     l3933:
  9615  0067EC  FFFF               	dw	65535	; assembler added errata NOP
  9616                           
  9617                           ; BSR set to: 0
  9618  0067EE  0EFF               	movlw	255
  9619  0067F0  2586               	addwf	_width& (0+255),w,b
  9620  0067F2  6E1F               	movwf	ctoa@w^0,c
  9621  0067F4  0EFF               	movlw	255
  9622  0067F6  2187               	addwfc	(_width+1)& (0+255),w,b
  9623  0067F8  6E20               	movwf	(ctoa@w+1)^0,c
  9624  0067FA                     l3935:
  9625  0067FA  FFFF               	dw	65535	; assembler added errata NOP
  9626                           
  9627                           ; BSR set to: 0
  9628                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 267:     dbuf[0] 
      +                          = c;
  9629  0067FC  C01E  F098         	movff	ctoa@c,_dbuf
  9630  006800                     
  9631                           ; BSR set to: 0
  9632                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 268:     dbuf[1] 
      +                          = '\0';
  9633  006800  0E00               	movlw	0
  9634  006802  6F99               	movwf	(_dbuf+1)& (0+255),b
  9635  006804                     
  9636                           ; BSR set to: 0
  9637                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 269:     return p
      +                          ad(fp, &dbuf[0], w);
  9638  006804  C01C  F011         	movff	ctoa@fp,pad@fp
  9639  006808  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  9640  00680C  0E98               	movlw	low _dbuf
  9641  00680E  6E13               	movwf	pad@buf^0,c
  9642  006810  0E00               	movlw	high _dbuf
  9643  006812  6E14               	movwf	(pad@buf+1)^0,c
  9644  006814  C01F  F015         	movff	ctoa@w,pad@p
  9645  006818  C020  F016         	movff	ctoa@w+1,pad@p+1
  9646  00681C  EC95  F038         	call	_pad	;wreg free
  9647  006820  C011  F01C         	movff	?_pad,?_ctoa
  9648  006824  C012  F01D         	movff	?_pad+1,?_ctoa+1
  9649  006828  0012               	return		;funcret
  9650  00682A  FFFF               	dw	65535	; errata NOP
  9651  00682C                     __end_of_ctoa:
  9652                           	callstack 0
  9653                           
  9654 ;; *************** function _pad *****************
  9655 ;; Defined at:
  9656 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  9657 ;; Parameters:    Size  Location     Type
  9658 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  9659 ;;		 -> vsnprintf@f(6), 
  9660 ;;  buf             2   18[COMRAM] PTR unsigned char 
  9661 ;;		 -> dbuf(32), 
  9662 ;;  p               2   20[COMRAM] int 
  9663 ;; Auto vars:     Size  Location     Type
  9664 ;;  w               2   25[COMRAM] int 
  9665 ;;  i               2   23[COMRAM] int 
  9666 ;; Return value:  Size  Location     Type
  9667 ;;                  2   16[COMRAM] int 
  9668 ;; Registers used:
  9669 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9670 ;; Tracked objects:
  9671 ;;		On entry : 0/0
  9672 ;;		On exit  : 0/0
  9673 ;;		Unchanged: 0/0
  9674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9675 ;;      Params:         6       0       0       0       0       0       0
  9676 ;;      Locals:         4       0       0       0       0       0       0
  9677 ;;      Temps:          1       0       0       0       0       0       0
  9678 ;;      Totals:        11       0       0       0       0       0       0
  9679 ;;Total ram usage:       11 bytes
  9680 ;; Hardware stack levels used:    1
  9681 ;; Hardware stack levels required when called:    4
  9682 ;; This function calls:
  9683 ;;		_fputc
  9684 ;;		_fputs
  9685 ;;		_strlen
  9686 ;; This function is called by:
  9687 ;;		_ctoa
  9688 ;;		_dtoa
  9689 ;;		_otoa
  9690 ;;		_utoa
  9691 ;;		_xtoa
  9692 ;; This function uses a non-reentrant model
  9693 ;;
  9694                           
  9695                           	psect	text24
  9696  00712A                     __ptext24:
  9697                           	callstack 0
  9698  00712A                     _pad:
  9699                           	callstack 0
  9700  00712A  FFFF               	dw	65535	; assembler added errata NOP
  9701  00712C                     
  9702                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  9703  00712C  0100               	movlb	0	; () banked
  9704  00712E  A18A               	btfss	_flags& (0+255),0,b
  9705  007130  EF9C  F038         	goto	u3971
  9706  007134  EF9F  F038         	goto	u3970
  9707  007138                     u3971:
  9708  007138  FFFF               	dw	65535	; assembler added errata NOP
  9709  00713A  EFAA  F038         	goto	l3877
  9710  00713E                     u3970:
  9711  00713E  FFFF               	dw	65535	; assembler added errata NOP
  9712  007140                     
  9713                           ; BSR set to: 0
  9714                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  9715  007140  C013  F00A         	movff	pad@buf,fputs@s
  9716  007144  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9717  007148  C011  F00C         	movff	pad@fp,fputs@fp
  9718  00714C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9719  007150  EC34  F033         	call	_fputs	;wreg free
  9720  007154                     l3877:
  9721  007154  FFFF               	dw	65535	; assembler added errata NOP
  9722                           
  9723                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  9724  007156  BE16               	btfsc	(pad@p+1)^0,7,c
  9725  007158  EFB0  F038         	goto	u3981
  9726  00715C  EFB3  F038         	goto	u3980
  9727  007160                     u3981:
  9728  007160  FFFF               	dw	65535	; assembler added errata NOP
  9729  007162  EFBA  F038         	goto	l3881
  9730  007166                     u3980:
  9731  007166  FFFF               	dw	65535	; assembler added errata NOP
  9732  007168  C015  F01A         	movff	pad@p,pad@w
  9733  00716C  C016  F01B         	movff	pad@p+1,pad@w+1
  9734  007170  EFBF  F038         	goto	l1181
  9735  007174                     l3881:
  9736  007174  FFFF               	dw	65535	; assembler added errata NOP
  9737  007176  0E00               	movlw	0
  9738  007178  6E1B               	movwf	(pad@w+1)^0,c
  9739  00717A  0E00               	movlw	0
  9740  00717C  6E1A               	movwf	pad@w^0,c
  9741  00717E                     l1181:
  9742  00717E  FFFF               	dw	65535	; assembler added errata NOP
  9743                           
  9744                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  9745  007180  0E00               	movlw	0
  9746  007182  6E19               	movwf	(pad@i+1)^0,c
  9747  007184  0E00               	movlw	0
  9748  007186  6E18               	movwf	pad@i^0,c
  9749                           
  9750                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9751  007188  EFD3  F038         	goto	l3887
  9752  00718C                     l3883:
  9753  00718C  FFFF               	dw	65535	; assembler added errata NOP
  9754                           
  9755                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  9756  00718E  0E00               	movlw	0
  9757  007190  6E02               	movwf	(fputc@c+1)^0,c
  9758  007192  0E20               	movlw	32
  9759  007194  6E01               	movwf	fputc@c^0,c
  9760  007196  C011  F003         	movff	pad@fp,fputc@fp
  9761  00719A  C012  F004         	movff	pad@fp+1,fputc@fp+1
  9762  00719E  EC24  F038         	call	_fputc	;wreg free
  9763  0071A2                     
  9764                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  9765  0071A2  4A18               	infsnz	pad@i^0,f,c
  9766  0071A4  2A19               	incf	(pad@i+1)^0,f,c
  9767  0071A6                     l3887:
  9768  0071A6  FFFF               	dw	65535	; assembler added errata NOP
  9769                           
  9770                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9771  0071A8  501A               	movf	pad@w^0,w,c
  9772  0071AA  5C18               	subwf	pad@i^0,w,c
  9773  0071AC  5019               	movf	(pad@i+1)^0,w,c
  9774  0071AE  0A80               	xorlw	128
  9775  0071B0  6E17               	movwf	??_pad^0,c
  9776  0071B2  501B               	movf	(pad@w+1)^0,w,c
  9777  0071B4  0A80               	xorlw	128
  9778  0071B6  5817               	subwfb	??_pad^0,w,c
  9779  0071B8  A0D8               	btfss	status,0,c
  9780  0071BA  EFE1  F038         	goto	u3991
  9781  0071BE  EFE4  F038         	goto	u3990
  9782  0071C2                     u3991:
  9783  0071C2  FFFF               	dw	65535	; assembler added errata NOP
  9784  0071C4  EFC6  F038         	goto	l3883
  9785  0071C8                     u3990:
  9786  0071C8  FFFF               	dw	65535	; assembler added errata NOP
  9787  0071CA                     
  9788                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  9789  0071CA  0100               	movlb	0	; () banked
  9790  0071CC  B18A               	btfsc	_flags& (0+255),0,b
  9791  0071CE  EFEB  F038         	goto	u4001
  9792  0071D2  EFEE  F038         	goto	u4000
  9793  0071D6                     u4001:
  9794  0071D6  FFFF               	dw	65535	; assembler added errata NOP
  9795  0071D8  EFF9  F038         	goto	l3891
  9796  0071DC                     u4000:
  9797  0071DC  FFFF               	dw	65535	; assembler added errata NOP
  9798  0071DE                     
  9799                           ; BSR set to: 0
  9800                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  9801  0071DE  C013  F00A         	movff	pad@buf,fputs@s
  9802  0071E2  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9803  0071E6  C011  F00C         	movff	pad@fp,fputs@fp
  9804  0071EA  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9805  0071EE  EC34  F033         	call	_fputs	;wreg free
  9806  0071F2                     l3891:
  9807  0071F2  FFFF               	dw	65535	; assembler added errata NOP
  9808                           
  9809                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  9810  0071F4  C013  F001         	movff	pad@buf,strlen@s
  9811  0071F8  C014  F002         	movff	pad@buf+1,strlen@s+1
  9812  0071FC  EC85  F033         	call	_strlen	;wreg free
  9813  007200  501A               	movf	pad@w^0,w,c
  9814  007202  2401               	addwf	?_strlen^0,w,c
  9815  007204  6E11               	movwf	?_pad^0,c
  9816  007206  501B               	movf	(pad@w+1)^0,w,c
  9817  007208  2002               	addwfc	(?_strlen+1)^0,w,c
  9818  00720A  6E12               	movwf	(?_pad+1)^0,c
  9819  00720C  0012               	return		;funcret
  9820  00720E  FFFF               	dw	65535	; errata NOP
  9821  007210                     __end_of_pad:
  9822                           	callstack 0
  9823                           
  9824 ;; *************** function _strlen *****************
  9825 ;; Defined at:
  9826 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  9827 ;; Parameters:    Size  Location     Type
  9828 ;;  s               2    0[COMRAM] PTR const unsigned char 
  9829 ;;		 -> stoa@nuls(7), dbuf(32), ?_snprintf(2), STR_8(50), 
  9830 ;;		 -> STR_7(9), STR_6(7), STR_5(9), STR_4(39), 
  9831 ;;		 -> STR_3(9), STR_2(64), STR_1(49), 
  9832 ;; Auto vars:     Size  Location     Type
  9833 ;;  a               2    2[COMRAM] PTR const unsigned char 
  9834 ;;		 -> stoa@nuls(7), dbuf(32), ?_snprintf(2), STR_8(50), 
  9835 ;;		 -> STR_7(9), STR_6(7), STR_5(9), STR_4(39), 
  9836 ;;		 -> STR_3(9), STR_2(64), STR_1(49), 
  9837 ;; Return value:  Size  Location     Type
  9838 ;;                  2    0[COMRAM] unsigned int 
  9839 ;; Registers used:
  9840 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  9841 ;; Tracked objects:
  9842 ;;		On entry : 0/0
  9843 ;;		On exit  : 0/0
  9844 ;;		Unchanged: 0/0
  9845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9846 ;;      Params:         2       0       0       0       0       0       0
  9847 ;;      Locals:         2       0       0       0       0       0       0
  9848 ;;      Temps:          0       0       0       0       0       0       0
  9849 ;;      Totals:         4       0       0       0       0       0       0
  9850 ;;Total ram usage:        4 bytes
  9851 ;; Hardware stack levels used:    1
  9852 ;; Hardware stack levels required when called:    1
  9853 ;; This function calls:
  9854 ;;		Nothing
  9855 ;; This function is called by:
  9856 ;;		_pad
  9857 ;;		_stoa
  9858 ;; This function uses a non-reentrant model
  9859 ;;
  9860                           
  9861                           	psect	text25
  9862  00670A                     __ptext25:
  9863                           	callstack 0
  9864  00670A                     _strlen:
  9865                           	callstack 0
  9866  00670A  FFFF               	dw	65535	; assembler added errata NOP
  9867  00670C  C001  F003         	movff	strlen@s,strlen@a
  9868  006710  C002  F004         	movff	strlen@s+1,strlen@a+1
  9869  006714  EF8F  F033         	goto	l3735
  9870  006718                     l3733:
  9871  006718  FFFF               	dw	65535	; assembler added errata NOP
  9872  00671A  4A01               	infsnz	strlen@s^0,f,c
  9873  00671C  2A02               	incf	(strlen@s+1)^0,f,c
  9874  00671E                     l3735:
  9875  00671E  FFFF               	dw	65535	; assembler added errata NOP
  9876  006720  C001  FFF6         	movff	strlen@s,tblptrl
  9877  006724  C002  FFF7         	movff	strlen@s+1,tblptrh
  9878  006728  6AF8               	clrf	tblptru,c
  9879  00672A  0E05               	movlw	(high __ramtop+-1)
  9880  00672C  64F7               	cpfsgt	tblptrh,c
  9881  00672E  D004               	bra	u3727
  9882  006730  0008               	tblrd		*
  9883  006732  FFFF               	dw	65535	; errata NOP
  9884  006734  50F5               	movf	tablat,w,c
  9885  006736  D005               	bra	u3720
  9886  006738                     u3727:
  9887  006738  CFF6 FFE1          	movff	tblptrl,fsr1l
  9888  00673C  CFF7 FFE2          	movff	tblptrh,fsr1h
  9889  006740  50E7               	movf	indf1,w,c
  9890  006742                     u3720:
  9891  006742  0900               	iorlw	0
  9892  006744  A4D8               	btfss	status,2,c
  9893  006746  EFA7  F033         	goto	u3731
  9894  00674A  EFAA  F033         	goto	u3730
  9895  00674E                     u3731:
  9896  00674E  FFFF               	dw	65535	; assembler added errata NOP
  9897  006750  EF8C  F033         	goto	l3733
  9898  006754                     u3730:
  9899  006754  FFFF               	dw	65535	; assembler added errata NOP
  9900  006756  5003               	movf	strlen@a^0,w,c
  9901  006758  5C01               	subwf	strlen@s^0,w,c
  9902  00675A  6E01               	movwf	?_strlen^0,c
  9903  00675C  5004               	movf	(strlen@a+1)^0,w,c
  9904  00675E  5802               	subwfb	(strlen@s+1)^0,w,c
  9905  006760  6E02               	movwf	(?_strlen+1)^0,c
  9906  006762  0012               	return		;funcret
  9907  006764  FFFF               	dw	65535	; errata NOP
  9908  006766                     __end_of_strlen:
  9909                           	callstack 0
  9910                           
  9911 ;; *************** function _fputs *****************
  9912 ;; Defined at:
  9913 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  9914 ;; Parameters:    Size  Location     Type
  9915 ;;  s               2    9[COMRAM] PTR const unsigned char 
  9916 ;;		 -> dbuf(32), 
  9917 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  9918 ;;		 -> vsnprintf@f(6), 
  9919 ;; Auto vars:     Size  Location     Type
  9920 ;;  i               2   14[COMRAM] int 
  9921 ;;  c               1   13[COMRAM] unsigned char 
  9922 ;; Return value:  Size  Location     Type
  9923 ;;                  2    9[COMRAM] int 
  9924 ;; Registers used:
  9925 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9926 ;; Tracked objects:
  9927 ;;		On entry : 0/0
  9928 ;;		On exit  : 0/0
  9929 ;;		Unchanged: 0/0
  9930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9931 ;;      Params:         4       0       0       0       0       0       0
  9932 ;;      Locals:         3       0       0       0       0       0       0
  9933 ;;      Temps:          0       0       0       0       0       0       0
  9934 ;;      Totals:         7       0       0       0       0       0       0
  9935 ;;Total ram usage:        7 bytes
  9936 ;; Hardware stack levels used:    1
  9937 ;; Hardware stack levels required when called:    3
  9938 ;; This function calls:
  9939 ;;		_fputc
  9940 ;; This function is called by:
  9941 ;;		_pad
  9942 ;; This function uses a non-reentrant model
  9943 ;;
  9944                           
  9945                           	psect	text26
  9946  006668                     __ptext26:
  9947                           	callstack 0
  9948  006668                     _fputs:
  9949                           	callstack 0
  9950  006668  FFFF               	dw	65535	; assembler added errata NOP
  9951  00666A  0E00               	movlw	0
  9952  00666C  6E10               	movwf	(fputs@i+1)^0,c
  9953  00666E  0E00               	movlw	0
  9954  006670  6E0F               	movwf	fputs@i^0,c
  9955  006672  EF47  F033         	goto	l3729
  9956  006676                     l3725:
  9957  006676  FFFF               	dw	65535	; assembler added errata NOP
  9958  006678  C00E  F001         	movff	fputs@c,fputc@c
  9959  00667C  6A02               	clrf	(fputc@c+1)^0,c
  9960  00667E  C00C  F003         	movff	fputs@fp,fputc@fp
  9961  006682  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  9962  006686  EC24  F038         	call	_fputc	;wreg free
  9963  00668A  4A0F               	infsnz	fputs@i^0,f,c
  9964  00668C  2A10               	incf	(fputs@i+1)^0,f,c
  9965  00668E                     l3729:
  9966  00668E  FFFF               	dw	65535	; assembler added errata NOP
  9967  006690  500F               	movf	fputs@i^0,w,c
  9968  006692  240A               	addwf	fputs@s^0,w,c
  9969  006694  6ED9               	movwf	fsr2l,c
  9970  006696  5010               	movf	(fputs@i+1)^0,w,c
  9971  006698  200B               	addwfc	(fputs@s+1)^0,w,c
  9972  00669A  6EDA               	movwf	fsr2h,c
  9973  00669C  50DF               	movf	indf2,w,c
  9974  00669E  6E0E               	movwf	fputs@c^0,c
  9975  0066A0  500E               	movf	fputs@c^0,w,c
  9976  0066A2  A4D8               	btfss	status,2,c
  9977  0066A4  EF56  F033         	goto	u3711
  9978  0066A8  EF59  F033         	goto	u3710
  9979  0066AC                     u3711:
  9980  0066AC  FFFF               	dw	65535	; assembler added errata NOP
  9981  0066AE  EF3B  F033         	goto	l3725
  9982  0066B2                     u3710:
  9983  0066B2  FFFF               	dw	65535	; assembler added errata NOP
  9984  0066B4  0012               	return		;funcret
  9985  0066B6  FFFF               	dw	65535	; errata NOP
  9986  0066B8                     __end_of_fputs:
  9987                           	callstack 0
  9988                           
  9989 ;; *************** function _fputc *****************
  9990 ;; Defined at:
  9991 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  9992 ;; Parameters:    Size  Location     Type
  9993 ;;  c               2    0[COMRAM] int 
  9994 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  9995 ;;		 -> vsnprintf@f(6), 
  9996 ;; Auto vars:     Size  Location     Type
  9997 ;;		None
  9998 ;; Return value:  Size  Location     Type
  9999 ;;                  2    0[COMRAM] int 
 10000 ;; Registers used:
 10001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10002 ;; Tracked objects:
 10003 ;;		On entry : 0/0
 10004 ;;		On exit  : 0/0
 10005 ;;		Unchanged: 0/0
 10006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10007 ;;      Params:         4       0       0       0       0       0       0
 10008 ;;      Locals:         0       0       0       0       0       0       0
 10009 ;;      Temps:          5       0       0       0       0       0       0
 10010 ;;      Totals:         9       0       0       0       0       0       0
 10011 ;;Total ram usage:        9 bytes
 10012 ;; Hardware stack levels used:    1
 10013 ;; Hardware stack levels required when called:    2
 10014 ;; This function calls:
 10015 ;;		_putch
 10016 ;; This function is called by:
 10017 ;;		_pad
 10018 ;;		_stoa
 10019 ;;		_vfpfcnvrt
 10020 ;;		_fputs
 10021 ;; This function uses a non-reentrant model
 10022 ;;
 10023                           
 10024                           	psect	text27
 10025  007048                     __ptext27:
 10026                           	callstack 0
 10027  007048                     _fputc:
 10028                           	callstack 0
 10029  007048  FFFF               	dw	65535	; assembler added errata NOP
 10030  00704A  5003               	movf	fputc@fp^0,w,c
 10031  00704C  1004               	iorwf	(fputc@fp+1)^0,w,c
 10032  00704E  B4D8               	btfsc	status,2,c
 10033  007050  EF2C  F038         	goto	u3671
 10034  007054  EF2F  F038         	goto	u3670
 10035  007058                     u3671:
 10036  007058  FFFF               	dw	65535	; assembler added errata NOP
 10037  00705A  EF3A  F038         	goto	l3713
 10038  00705E                     u3670:
 10039  00705E  FFFF               	dw	65535	; assembler added errata NOP
 10040  007060  5003               	movf	fputc@fp^0,w,c
 10041  007062  1004               	iorwf	(fputc@fp+1)^0,w,c
 10042  007064  A4D8               	btfss	status,2,c
 10043  007066  EF37  F038         	goto	u3681
 10044  00706A  EF3A  F038         	goto	u3680
 10045  00706E                     u3681:
 10046  00706E  FFFF               	dw	65535	; assembler added errata NOP
 10047  007070  EF40  F038         	goto	l3715
 10048  007074                     u3680:
 10049  007074                     l3713:
 10050  007074  FFFF               	dw	65535	; assembler added errata NOP
 10051  007076  5001               	movf	fputc@c^0,w,c
 10052  007078  ECFD  F01F         	call	_putch
 10053  00707C  EF92  F038         	goto	l1456
 10054  007080                     l3715:
 10055  007080  FFFF               	dw	65535	; assembler added errata NOP
 10056  007082  EE20 F004          	lfsr	2,4
 10057  007086  5003               	movf	fputc@fp^0,w,c
 10058  007088  26D9               	addwf	fsr2l,f,c
 10059  00708A  5004               	movf	(fputc@fp+1)^0,w,c
 10060  00708C  22DA               	addwfc	fsr2h,f,c
 10061  00708E  50DE               	movf	postinc2,w,c
 10062  007090  10DE               	iorwf	postinc2,w,c
 10063  007092  B4D8               	btfsc	status,2,c
 10064  007094  EF4E  F038         	goto	u3691
 10065  007098  EF51  F038         	goto	u3690
 10066  00709C                     u3691:
 10067  00709C  FFFF               	dw	65535	; assembler added errata NOP
 10068  00709E  EF6E  F038         	goto	l3719
 10069  0070A2                     u3690:
 10070  0070A2  FFFF               	dw	65535	; assembler added errata NOP
 10071  0070A4  EE20 F004          	lfsr	2,4
 10072  0070A8  5003               	movf	fputc@fp^0,w,c
 10073  0070AA  26D9               	addwf	fsr2l,f,c
 10074  0070AC  5004               	movf	(fputc@fp+1)^0,w,c
 10075  0070AE  22DA               	addwfc	fsr2h,f,c
 10076  0070B0  EE10 F002          	lfsr	1,2
 10077  0070B4  5003               	movf	fputc@fp^0,w,c
 10078  0070B6  26E1               	addwf	fsr1l,f,c
 10079  0070B8  5004               	movf	(fputc@fp+1)^0,w,c
 10080  0070BA  22E2               	addwfc	fsr1h,f,c
 10081  0070BC  50DE               	movf	postinc2,w,c
 10082  0070BE  5CE6               	subwf	postinc1,w,c
 10083  0070C0  50E6               	movf	postinc1,w,c
 10084  0070C2  0A80               	xorlw	128
 10085  0070C4  6E09               	movwf	(??_fputc+4)^0,c
 10086  0070C6  50DE               	movf	postinc2,w,c
 10087  0070C8  0A80               	xorlw	128
 10088  0070CA  5809               	subwfb	(??_fputc+4)^0,w,c
 10089  0070CC  B0D8               	btfsc	status,0,c
 10090  0070CE  EF6B  F038         	goto	u3701
 10091  0070D2  EF6E  F038         	goto	u3700
 10092  0070D6                     u3701:
 10093  0070D6  FFFF               	dw	65535	; assembler added errata NOP
 10094  0070D8  EF92  F038         	goto	l1456
 10095  0070DC                     u3700:
 10096  0070DC                     l3719:
 10097  0070DC  FFFF               	dw	65535	; assembler added errata NOP
 10098  0070DE  EE20 F002          	lfsr	2,2
 10099  0070E2  5003               	movf	fputc@fp^0,w,c
 10100  0070E4  26D9               	addwf	fsr2l,f,c
 10101  0070E6  5004               	movf	(fputc@fp+1)^0,w,c
 10102  0070E8  22DA               	addwfc	fsr2h,f,c
 10103  0070EA  CFDE F005          	movff	postinc2,??_fputc
 10104  0070EE  CFDD F006          	movff	postdec2,??_fputc+1
 10105  0070F2  C003  FFD9         	movff	fputc@fp,fsr2l
 10106  0070F6  C004  FFDA         	movff	fputc@fp+1,fsr2h
 10107  0070FA  CFDE F007          	movff	postinc2,??_fputc+2
 10108  0070FE  CFDD F008          	movff	postdec2,??_fputc+3
 10109  007102  5005               	movf	??_fputc^0,w,c
 10110  007104  2407               	addwf	(??_fputc+2)^0,w,c
 10111  007106  6ED9               	movwf	fsr2l,c
 10112  007108  5006               	movf	(??_fputc+1)^0,w,c
 10113  00710A  2008               	addwfc	(??_fputc+3)^0,w,c
 10114  00710C  6EDA               	movwf	fsr2h,c
 10115  00710E  C001  FFDF         	movff	fputc@c,indf2
 10116  007112  EE20 F002          	lfsr	2,2
 10117  007116  5003               	movf	fputc@fp^0,w,c
 10118  007118  26D9               	addwf	fsr2l,f,c
 10119  00711A  5004               	movf	(fputc@fp+1)^0,w,c
 10120  00711C  22DA               	addwfc	fsr2h,f,c
 10121  00711E  2ADE               	incf	postinc2,f,c
 10122  007120  0E00               	movlw	0
 10123  007122  22DD               	addwfc	postdec2,f,c
 10124  007124                     l1456:
 10125  007124  FFFF               	dw	65535	; assembler added errata NOP
 10126  007126  0012               	return		;funcret
 10127  007128  FFFF               	dw	65535	; errata NOP
 10128  00712A                     __end_of_fputc:
 10129                           	callstack 0
 10130                           
 10131 ;; *************** function _putch *****************
 10132 ;; Defined at:
 10133 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
 10134 ;; Parameters:    Size  Location     Type
 10135 ;;  c               1    wreg     unsigned char 
 10136 ;; Auto vars:     Size  Location     Type
 10137 ;;  c               1    0[COMRAM] unsigned char 
 10138 ;; Return value:  Size  Location     Type
 10139 ;;                  1    wreg      void 
 10140 ;; Registers used:
 10141 ;;		wreg
 10142 ;; Tracked objects:
 10143 ;;		On entry : 0/0
 10144 ;;		On exit  : 0/0
 10145 ;;		Unchanged: 0/0
 10146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10147 ;;      Params:         0       0       0       0       0       0       0
 10148 ;;      Locals:         0       0       0       0       0       0       0
 10149 ;;      Temps:          0       0       0       0       0       0       0
 10150 ;;      Totals:         0       0       0       0       0       0       0
 10151 ;;Total ram usage:        0 bytes
 10152 ;; Hardware stack levels used:    1
 10153 ;; Hardware stack levels required when called:    1
 10154 ;; This function calls:
 10155 ;;		Nothing
 10156 ;; This function is called by:
 10157 ;;		_fputc
 10158 ;; This function uses a non-reentrant model
 10159 ;;
 10160                           
 10161                           	psect	text28
 10162  003FFA                     __ptext28:
 10163                           	callstack 0
 10164  003FFA                     _putch:
 10165                           	callstack 0
 10166  003FFA  FFFF               	dw	65535	; assembler added errata NOP
 10167  003FFC  0012               	return		;funcret
 10168  003FFE  FFFF               	dw	65535	; errata NOP
 10169  004000                     __end_of_putch:
 10170                           	callstack 0
 10171                           
 10172 ;; *************** function _atoi *****************
 10173 ;; Defined at:
 10174 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
 10175 ;; Parameters:    Size  Location     Type
 10176 ;;  s               2    7[COMRAM] PTR const unsigned char 
 10177 ;;		 -> STR_10(3), 
 10178 ;; Auto vars:     Size  Location     Type
 10179 ;;  n               2   20[COMRAM] int 
 10180 ;;  neg             2   13[COMRAM] int 
 10181 ;; Return value:  Size  Location     Type
 10182 ;;                  2    7[COMRAM] int 
 10183 ;; Registers used:
 10184 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10185 ;; Tracked objects:
 10186 ;;		On entry : 0/0
 10187 ;;		On exit  : 0/0
 10188 ;;		Unchanged: 0/0
 10189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10190 ;;      Params:         2       0       0       0       0       0       0
 10191 ;;      Locals:         9       0       0       0       0       0       0
 10192 ;;      Temps:          4       0       0       0       0       0       0
 10193 ;;      Totals:        15       0       0       0       0       0       0
 10194 ;;Total ram usage:       15 bytes
 10195 ;; Hardware stack levels used:    1
 10196 ;; Hardware stack levels required when called:    2
 10197 ;; This function calls:
 10198 ;;		___wmul
 10199 ;;		_isdigit
 10200 ;;		_isspace
 10201 ;; This function is called by:
 10202 ;;		_vfpfcnvrt
 10203 ;; This function uses a non-reentrant model
 10204 ;;
 10205                           
 10206                           	psect	text29
 10207  007C84                     __ptext29:
 10208                           	callstack 0
 10209  007C84                     _atoi:
 10210                           	callstack 0
 10211  007C84  FFFF               	dw	65535	; assembler added errata NOP
 10212  007C86  0E00               	movlw	0
 10213  007C88  6E16               	movwf	(atoi@n+1)^0,c
 10214  007C8A  0E00               	movlw	0
 10215  007C8C  6E15               	movwf	atoi@n^0,c
 10216  007C8E  0E00               	movlw	0
 10217  007C90  6E0F               	movwf	(atoi@neg+1)^0,c
 10218  007C92  0E00               	movlw	0
 10219  007C94  6E0E               	movwf	atoi@neg^0,c
 10220  007C96  EF50  F03E         	goto	l4201
 10221  007C9A                     l4199:
 10222  007C9A  FFFF               	dw	65535	; assembler added errata NOP
 10223  007C9C  4A08               	infsnz	atoi@s^0,f,c
 10224  007C9E  2A09               	incf	(atoi@s+1)^0,f,c
 10225  007CA0                     l4201:
 10226  007CA0  FFFF               	dw	65535	; assembler added errata NOP
 10227  007CA2  0E01               	movlw	1
 10228  007CA4  6E14               	movwf	_atoi$1841^0,c
 10229  007CA6  C008  FFF6         	movff	atoi@s,tblptrl
 10230  007CAA  C009  FFF7         	movff	atoi@s+1,tblptrh
 10231  007CAE                     	if	0	;tblptru may be non-zero
 10232  007CAE                     	endif
 10233  007CAE                     	if	0	;tblptru may be non-zero
 10234  007CAE                     	endif
 10235  007CAE  0008               	tblrd		*
 10236  007CB0  FFFF               	dw	65535	; errata NOP
 10237  007CB2  50F5               	movf	tablat,w,c
 10238  007CB4  0A20               	xorlw	32
 10239  007CB6  B4D8               	btfsc	status,2,c
 10240  007CB8  EF60  F03E         	goto	u4721
 10241  007CBC  EF63  F03E         	goto	u4720
 10242  007CC0                     u4721:
 10243  007CC0  FFFF               	dw	65535	; assembler added errata NOP
 10244  007CC2  EF84  F03E         	goto	l4209
 10245  007CC6                     u4720:
 10246  007CC6  FFFF               	dw	65535	; assembler added errata NOP
 10247  007CC8  0EF7               	movlw	247
 10248  007CCA  6E0A               	movwf	??_atoi^0,c
 10249  007CCC  0EFF               	movlw	255
 10250  007CCE  6E0B               	movwf	(??_atoi+1)^0,c
 10251  007CD0  C008  FFF6         	movff	atoi@s,tblptrl
 10252  007CD4  C009  FFF7         	movff	atoi@s+1,tblptrh
 10253  007CD8                     	if	0	;tblptru may be non-zero
 10254  007CD8                     	endif
 10255  007CD8                     	if	0	;tblptru may be non-zero
 10256  007CD8                     	endif
 10257  007CD8  0008               	tblrd		*
 10258  007CDA  FFFF               	dw	65535	; errata NOP
 10259  007CDC  50F5               	movf	tablat,w,c
 10260  007CDE  6E0C               	movwf	(??_atoi+2)^0,c
 10261  007CE0  6A0D               	clrf	(??_atoi+3)^0,c
 10262  007CE2  500A               	movf	??_atoi^0,w,c
 10263  007CE4  260C               	addwf	(??_atoi+2)^0,f,c
 10264  007CE6  500B               	movf	(??_atoi+1)^0,w,c
 10265  007CE8  220D               	addwfc	(??_atoi+3)^0,f,c
 10266  007CEA  500D               	movf	(??_atoi+3)^0,w,c
 10267  007CEC  E10A               	bnz	u4730
 10268  007CEE  0E05               	movlw	5
 10269  007CF0  5C0C               	subwf	(??_atoi+2)^0,w,c
 10270  007CF2  A0D8               	btfss	status,0,c
 10271  007CF4  EF7E  F03E         	goto	u4731
 10272  007CF8  EF81  F03E         	goto	u4730
 10273  007CFC                     u4731:
 10274  007CFC  FFFF               	dw	65535	; assembler added errata NOP
 10275  007CFE  EF84  F03E         	goto	l4209
 10276  007D02                     u4730:
 10277  007D02  FFFF               	dw	65535	; assembler added errata NOP
 10278  007D04  0E00               	movlw	0
 10279  007D06  6E14               	movwf	_atoi$1841^0,c
 10280  007D08                     l4209:
 10281  007D08  FFFF               	dw	65535	; assembler added errata NOP
 10282  007D0A  C014  F010         	movff	_atoi$1841,_atoi$1840
 10283  007D0E  6A11               	clrf	(_atoi$1840+1)^0,c
 10284  007D10  5010               	movf	_atoi$1840^0,w,c
 10285  007D12  1011               	iorwf	(_atoi$1840+1)^0,w,c
 10286  007D14  A4D8               	btfss	status,2,c
 10287  007D16  EF8F  F03E         	goto	u4741
 10288  007D1A  EF92  F03E         	goto	u4740
 10289  007D1E                     u4741:
 10290  007D1E  FFFF               	dw	65535	; assembler added errata NOP
 10291  007D20  EF4D  F03E         	goto	l4199
 10292  007D24                     u4740:
 10293  007D24  FFFF               	dw	65535	; assembler added errata NOP
 10294  007D26  EF9F  F03E         	goto	l4219
 10295  007D2A                     l4215:
 10296  007D2A  FFFF               	dw	65535	; assembler added errata NOP
 10297  007D2C  0E00               	movlw	0
 10298  007D2E  6E0F               	movwf	(atoi@neg+1)^0,c
 10299  007D30  0E01               	movlw	1
 10300  007D32  6E0E               	movwf	atoi@neg^0,c
 10301  007D34                     l4217:
 10302  007D34  FFFF               	dw	65535	; assembler added errata NOP
 10303  007D36  4A08               	infsnz	atoi@s^0,f,c
 10304  007D38  2A09               	incf	(atoi@s+1)^0,f,c
 10305  007D3A  EFD9  F03E         	goto	l4225
 10306  007D3E                     l4219:
 10307  007D3E  FFFF               	dw	65535	; assembler added errata NOP
 10308  007D40  C008  FFF6         	movff	atoi@s,tblptrl
 10309  007D44  C009  FFF7         	movff	atoi@s+1,tblptrh
 10310  007D48                     	if	0	;tblptru may be non-zero
 10311  007D48                     	endif
 10312  007D48                     	if	0	;tblptru may be non-zero
 10313  007D48                     	endif
 10314  007D48  0008               	tblrd		*
 10315  007D4A  FFFF               	dw	65535	; errata NOP
 10316  007D4C  50F5               	movf	tablat,w,c
 10317  007D4E  6E0A               	movwf	??_atoi^0,c
 10318  007D50  6A0B               	clrf	(??_atoi+1)^0,c
 10319                           
 10320                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10321                           ; Switch size 1, requested type "simple"
 10322                           ; Number of cases is 1, Range of values is 0 to 0
 10323                           ; switch strategies available:
 10324                           ; Name         Instructions Cycles
 10325                           ; simple_byte            4     3 (average)
 10326                           ;	Chosen strategy is simple_byte
 10327  007D52  500B               	movf	(??_atoi+1)^0,w,c
 10328  007D54  0A00               	xorlw	0	; case 0
 10329  007D56  B4D8               	btfsc	status,2,c
 10330  007D58  EFB0  F03E         	goto	l5933
 10331  007D5C  EFD9  F03E         	goto	l4225
 10332  007D60                     l5933:
 10333  007D60  FFFF               	dw	65535	; assembler added errata NOP
 10334                           
 10335                           ; Switch size 1, requested type "simple"
 10336                           ; Number of cases is 2, Range of values is 43 to 45
 10337                           ; switch strategies available:
 10338                           ; Name         Instructions Cycles
 10339                           ; simple_byte            7     4 (average)
 10340                           ;	Chosen strategy is simple_byte
 10341  007D62  500A               	movf	??_atoi^0,w,c
 10342  007D64  0A2B               	xorlw	43	; case 43
 10343  007D66  B4D8               	btfsc	status,2,c
 10344  007D68  EF9A  F03E         	goto	l4217
 10345  007D6C  0A06               	xorlw	6	; case 45
 10346  007D6E  B4D8               	btfsc	status,2,c
 10347  007D70  EF95  F03E         	goto	l4215
 10348  007D74  EFD9  F03E         	goto	l4225
 10349  007D78                     l4221:
 10350  007D78  FFFF               	dw	65535	; assembler added errata NOP
 10351  007D7A  C015  F001         	movff	atoi@n,___wmul@multiplier
 10352  007D7E  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 10353  007D82  0E00               	movlw	0
 10354  007D84  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10355  007D86  0E0A               	movlw	10
 10356  007D88  6E03               	movwf	___wmul@multiplicand^0,c
 10357  007D8A  ECC1  F031         	call	___wmul	;wreg free
 10358  007D8E  C008  FFF6         	movff	atoi@s,tblptrl
 10359  007D92  C009  FFF7         	movff	atoi@s+1,tblptrh
 10360  007D96                     	if	0	;tblptru may be non-zero
 10361  007D96                     	endif
 10362  007D96                     	if	0	;tblptru may be non-zero
 10363  007D96                     	endif
 10364  007D96  0008               	tblrd		*
 10365  007D98  FFFF               	dw	65535	; errata NOP
 10366  007D9A  50F5               	movf	tablat,w,c
 10367  007D9C  5E01               	subwf	?___wmul^0,f,c
 10368  007D9E  0E00               	movlw	0
 10369  007DA0  5A02               	subwfb	(?___wmul+1)^0,f,c
 10370  007DA2  0E30               	movlw	48
 10371  007DA4  2401               	addwf	?___wmul^0,w,c
 10372  007DA6  6E15               	movwf	atoi@n^0,c
 10373  007DA8  0E00               	movlw	0
 10374  007DAA  2002               	addwfc	(?___wmul+1)^0,w,c
 10375  007DAC  6E16               	movwf	(atoi@n+1)^0,c
 10376  007DAE  EF9A  F03E         	goto	l4217
 10377  007DB2                     l4225:
 10378  007DB2  FFFF               	dw	65535	; assembler added errata NOP
 10379  007DB4  0ED0               	movlw	208
 10380  007DB6  6E0A               	movwf	??_atoi^0,c
 10381  007DB8  0EFF               	movlw	255
 10382  007DBA  6E0B               	movwf	(??_atoi+1)^0,c
 10383  007DBC  C008  FFF6         	movff	atoi@s,tblptrl
 10384  007DC0  C009  FFF7         	movff	atoi@s+1,tblptrh
 10385  007DC4                     	if	0	;tblptru may be non-zero
 10386  007DC4                     	endif
 10387  007DC4                     	if	0	;tblptru may be non-zero
 10388  007DC4                     	endif
 10389  007DC4  0008               	tblrd		*
 10390  007DC6  FFFF               	dw	65535	; errata NOP
 10391  007DC8  50F5               	movf	tablat,w,c
 10392  007DCA  6E0C               	movwf	(??_atoi+2)^0,c
 10393  007DCC  6A0D               	clrf	(??_atoi+3)^0,c
 10394  007DCE  500A               	movf	??_atoi^0,w,c
 10395  007DD0  260C               	addwf	(??_atoi+2)^0,f,c
 10396  007DD2  500B               	movf	(??_atoi+1)^0,w,c
 10397  007DD4  220D               	addwfc	(??_atoi+3)^0,f,c
 10398  007DD6  500D               	movf	(??_atoi+3)^0,w,c
 10399  007DD8  E10B               	bnz	u4750
 10400  007DDA  0E0A               	movlw	10
 10401  007DDC  5C0C               	subwf	(??_atoi+2)^0,w,c
 10402  007DDE  A0D8               	btfss	status,0,c
 10403  007DE0  EFF4  F03E         	goto	u4751
 10404  007DE4  EFF8  F03E         	goto	u4750
 10405  007DE8                     u4751:
 10406  007DE8  FFFF               	dw	65535	; assembler added errata NOP
 10407  007DEA  0E01               	movlw	1
 10408  007DEC  EFFA  F03E         	goto	u4760
 10409  007DF0                     u4750:
 10410  007DF0  FFFF               	dw	65535	; assembler added errata NOP
 10411  007DF2  0E00               	movlw	0
 10412  007DF4                     u4760:
 10413  007DF4  FFFF               	dw	65535	; assembler added errata NOP
 10414  007DF6  6E12               	movwf	_atoi$1842^0,c
 10415  007DF8  6A13               	clrf	(_atoi$1842+1)^0,c
 10416  007DFA  5012               	movf	_atoi$1842^0,w,c
 10417  007DFC  1013               	iorwf	(_atoi$1842+1)^0,w,c
 10418  007DFE  A4D8               	btfss	status,2,c
 10419  007E00  EF04  F03F         	goto	u4771
 10420  007E04  EF07  F03F         	goto	u4770
 10421  007E08                     u4771:
 10422  007E08  FFFF               	dw	65535	; assembler added errata NOP
 10423  007E0A  EFBC  F03E         	goto	l4221
 10424  007E0E                     u4770:
 10425  007E0E  FFFF               	dw	65535	; assembler added errata NOP
 10426  007E10  500E               	movf	atoi@neg^0,w,c
 10427  007E12  100F               	iorwf	(atoi@neg+1)^0,w,c
 10428  007E14  A4D8               	btfss	status,2,c
 10429  007E16  EF0F  F03F         	goto	u4781
 10430  007E1A  EF12  F03F         	goto	u4780
 10431  007E1E                     u4781:
 10432  007E1E  FFFF               	dw	65535	; assembler added errata NOP
 10433  007E20  EF21  F03F         	goto	l1413
 10434  007E24                     u4780:
 10435  007E24  FFFF               	dw	65535	; assembler added errata NOP
 10436  007E26  C015  F00A         	movff	atoi@n,??_atoi
 10437  007E2A  C016  F00B         	movff	atoi@n+1,??_atoi+1
 10438  007E2E  1E0A               	comf	??_atoi^0,f,c
 10439  007E30  1E0B               	comf	(??_atoi+1)^0,f,c
 10440  007E32  4A0A               	infsnz	??_atoi^0,f,c
 10441  007E34  2A0B               	incf	(??_atoi+1)^0,f,c
 10442  007E36  C00A  F008         	movff	??_atoi,?_atoi
 10443  007E3A  C00B  F009         	movff	??_atoi+1,?_atoi+1
 10444  007E3E  EF26  F03F         	goto	l1416
 10445  007E42                     l1413:
 10446  007E42  FFFF               	dw	65535	; assembler added errata NOP
 10447  007E44  C015  F008         	movff	atoi@n,?_atoi
 10448  007E48  C016  F009         	movff	atoi@n+1,?_atoi+1
 10449  007E4C                     l1416:
 10450  007E4C  FFFF               	dw	65535	; assembler added errata NOP
 10451  007E4E  0012               	return		;funcret
 10452  007E50  FFFF               	dw	65535	; errata NOP
 10453  007E52                     __end_of_atoi:
 10454                           	callstack 0
 10455                           
 10456 ;; *************** function _isspace *****************
 10457 ;; Defined at:
 10458 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
 10459 ;; Parameters:    Size  Location     Type
 10460 ;;  c               2    0[COMRAM] int 
 10461 ;; Auto vars:     Size  Location     Type
 10462 ;;		None
 10463 ;; Return value:  Size  Location     Type
 10464 ;;                  2    0[COMRAM] int 
 10465 ;; Registers used:
 10466 ;;		wreg, status,2, status,0
 10467 ;; Tracked objects:
 10468 ;;		On entry : 0/0
 10469 ;;		On exit  : 0/0
 10470 ;;		Unchanged: 0/0
 10471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10472 ;;      Params:         2       0       0       0       0       0       0
 10473 ;;      Locals:         1       0       0       0       0       0       0
 10474 ;;      Temps:          4       0       0       0       0       0       0
 10475 ;;      Totals:         7       0       0       0       0       0       0
 10476 ;;Total ram usage:        7 bytes
 10477 ;; Hardware stack levels used:    1
 10478 ;; Hardware stack levels required when called:    1
 10479 ;; This function calls:
 10480 ;;		Nothing
 10481 ;; This function is called by:
 10482 ;;		_atoi
 10483 ;; This function uses a non-reentrant model
 10484 ;;
 10485                           
 10486                           	psect	text30
 10487  006766                     __ptext30:
 10488                           	callstack 0
 10489  006766                     _isspace:
 10490                           	callstack 24
 10491  006766  FFFF               	dw	65535	; assembler added errata NOP
 10492  006768  0E01               	movlw	1
 10493  00676A  6E07               	movwf	_isspace$1868^0,c
 10494  00676C  0E20               	movlw	32
 10495  00676E  1801               	xorwf	isspace@c^0,w,c
 10496  006770  1002               	iorwf	(isspace@c+1)^0,w,c
 10497  006772  B4D8               	btfsc	status,2,c
 10498  006774  EFBE  F033         	goto	u4101
 10499  006778  EFC1  F033         	goto	u4100
 10500  00677C                     u4101:
 10501  00677C  FFFF               	dw	65535	; assembler added errata NOP
 10502  00677E  EFDD  F033         	goto	l3925
 10503  006782                     u4100:
 10504  006782  FFFF               	dw	65535	; assembler added errata NOP
 10505  006784  0EF7               	movlw	247
 10506  006786  6E03               	movwf	??_isspace^0,c
 10507  006788  0EFF               	movlw	255
 10508  00678A  6E04               	movwf	(??_isspace+1)^0,c
 10509  00678C  C001  F005         	movff	isspace@c,??_isspace+2
 10510  006790  C002  F006         	movff	isspace@c+1,??_isspace+3
 10511  006794  5003               	movf	??_isspace^0,w,c
 10512  006796  2605               	addwf	(??_isspace+2)^0,f,c
 10513  006798  5004               	movf	(??_isspace+1)^0,w,c
 10514  00679A  2206               	addwfc	(??_isspace+3)^0,f,c
 10515  00679C  5006               	movf	(??_isspace+3)^0,w,c
 10516  00679E  E10A               	bnz	u4110
 10517  0067A0  0E05               	movlw	5
 10518  0067A2  5C05               	subwf	(??_isspace+2)^0,w,c
 10519  0067A4  A0D8               	btfss	status,0,c
 10520  0067A6  EFD7  F033         	goto	u4111
 10521  0067AA  EFDA  F033         	goto	u4110
 10522  0067AE                     u4111:
 10523  0067AE  FFFF               	dw	65535	; assembler added errata NOP
 10524  0067B0  EFDD  F033         	goto	l3925
 10525  0067B4                     u4110:
 10526  0067B4  FFFF               	dw	65535	; assembler added errata NOP
 10527  0067B6  0E00               	movlw	0
 10528  0067B8  6E07               	movwf	_isspace$1868^0,c
 10529  0067BA                     l3925:
 10530  0067BA  FFFF               	dw	65535	; assembler added errata NOP
 10531  0067BC  C007  F001         	movff	_isspace$1868,?_isspace
 10532  0067C0  6A02               	clrf	(?_isspace+1)^0,c
 10533  0067C2  0012               	return		;funcret
 10534  0067C4  FFFF               	dw	65535	; errata NOP
 10535  0067C6                     __end_of_isspace:
 10536                           	callstack 0
 10537                           
 10538 ;; *************** function _isdigit *****************
 10539 ;; Defined at:
 10540 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
 10541 ;; Parameters:    Size  Location     Type
 10542 ;;  c               2    0[COMRAM] int 
 10543 ;; Auto vars:     Size  Location     Type
 10544 ;;		None
 10545 ;; Return value:  Size  Location     Type
 10546 ;;                  2    0[COMRAM] int 
 10547 ;; Registers used:
 10548 ;;		wreg, status,2, status,0
 10549 ;; Tracked objects:
 10550 ;;		On entry : 0/0
 10551 ;;		On exit  : 0/0
 10552 ;;		Unchanged: 0/0
 10553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10554 ;;      Params:         2       0       0       0       0       0       0
 10555 ;;      Locals:         0       0       0       0       0       0       0
 10556 ;;      Temps:          4       0       0       0       0       0       0
 10557 ;;      Totals:         6       0       0       0       0       0       0
 10558 ;;Total ram usage:        6 bytes
 10559 ;; Hardware stack levels used:    1
 10560 ;; Hardware stack levels required when called:    1
 10561 ;; This function calls:
 10562 ;;		Nothing
 10563 ;; This function is called by:
 10564 ;;		_vfpfcnvrt
 10565 ;;		_atoi
 10566 ;; This function uses a non-reentrant model
 10567 ;;
 10568                           
 10569                           	psect	text31
 10570  0064C6                     __ptext31:
 10571                           	callstack 0
 10572  0064C6                     _isdigit:
 10573                           	callstack 25
 10574  0064C6  FFFF               	dw	65535	; assembler added errata NOP
 10575  0064C8  0ED0               	movlw	208
 10576  0064CA  6E03               	movwf	??_isdigit^0,c
 10577  0064CC  0EFF               	movlw	255
 10578  0064CE  6E04               	movwf	(??_isdigit+1)^0,c
 10579  0064D0  C001  F005         	movff	isdigit@c,??_isdigit+2
 10580  0064D4  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 10581  0064D8  5003               	movf	??_isdigit^0,w,c
 10582  0064DA  2605               	addwf	(??_isdigit+2)^0,f,c
 10583  0064DC  5004               	movf	(??_isdigit+1)^0,w,c
 10584  0064DE  2206               	addwfc	(??_isdigit+3)^0,f,c
 10585  0064E0  5006               	movf	(??_isdigit+3)^0,w,c
 10586  0064E2  E10B               	bnz	u4080
 10587  0064E4  0E0A               	movlw	10
 10588  0064E6  5C05               	subwf	(??_isdigit+2)^0,w,c
 10589  0064E8  A0D8               	btfss	status,0,c
 10590  0064EA  EF79  F032         	goto	u4081
 10591  0064EE  EF7D  F032         	goto	u4080
 10592  0064F2                     u4081:
 10593  0064F2  FFFF               	dw	65535	; assembler added errata NOP
 10594  0064F4  0E01               	movlw	1
 10595  0064F6  EF7F  F032         	goto	u4090
 10596  0064FA                     u4080:
 10597  0064FA  FFFF               	dw	65535	; assembler added errata NOP
 10598  0064FC  0E00               	movlw	0
 10599  0064FE                     u4090:
 10600  0064FE  FFFF               	dw	65535	; assembler added errata NOP
 10601  006500  6E01               	movwf	?_isdigit^0,c
 10602  006502  6A02               	clrf	(?_isdigit+1)^0,c
 10603  006504  0012               	return		;funcret
 10604  006506  FFFF               	dw	65535	; errata NOP
 10605  006508                     __end_of_isdigit:
 10606                           	callstack 0
 10607                           
 10608 ;; *************** function ___wmul *****************
 10609 ;; Defined at:
 10610 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
 10611 ;; Parameters:    Size  Location     Type
 10612 ;;  multiplier      2    0[COMRAM] unsigned int 
 10613 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10614 ;; Auto vars:     Size  Location     Type
 10615 ;;  product         2    4[COMRAM] unsigned int 
 10616 ;; Return value:  Size  Location     Type
 10617 ;;                  2    0[COMRAM] unsigned int 
 10618 ;; Registers used:
 10619 ;;		wreg, status,2, status,0, prodl, prodh
 10620 ;; Tracked objects:
 10621 ;;		On entry : 0/0
 10622 ;;		On exit  : 0/0
 10623 ;;		Unchanged: 0/0
 10624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10625 ;;      Params:         4       0       0       0       0       0       0
 10626 ;;      Locals:         2       0       0       0       0       0       0
 10627 ;;      Temps:          0       0       0       0       0       0       0
 10628 ;;      Totals:         6       0       0       0       0       0       0
 10629 ;;Total ram usage:        6 bytes
 10630 ;; Hardware stack levels used:    1
 10631 ;; Hardware stack levels required when called:    1
 10632 ;; This function calls:
 10633 ;;		Nothing
 10634 ;; This function is called by:
 10635 ;;		_main
 10636 ;;		_atoi
 10637 ;; This function uses a non-reentrant model
 10638 ;;
 10639                           
 10640                           	psect	text32
 10641  006382                     __ptext32:
 10642                           	callstack 0
 10643  006382                     ___wmul:
 10644                           	callstack 0
 10645  006382  FFFF               	dw	65535	; assembler added errata NOP
 10646  006384  5001               	movf	___wmul@multiplier^0,w,c
 10647  006386  0203               	mulwf	___wmul@multiplicand^0,c
 10648  006388  CFF3 F005          	movff	prodl,___wmul@product
 10649  00638C  CFF4 F006          	movff	prodh,___wmul@product+1
 10650  006390  5001               	movf	___wmul@multiplier^0,w,c
 10651  006392  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 10652  006394  50F3               	movf	243,w,c
 10653  006396  2606               	addwf	(___wmul@product+1)^0,f,c
 10654  006398  5002               	movf	(___wmul@multiplier+1)^0,w,c
 10655  00639A  0203               	mulwf	___wmul@multiplicand^0,c
 10656  00639C  50F3               	movf	243,w,c
 10657  00639E  2606               	addwf	(___wmul@product+1)^0,f,c
 10658  0063A0  C005  F001         	movff	___wmul@product,?___wmul
 10659  0063A4  C006  F002         	movff	___wmul@product+1,?___wmul+1
 10660  0063A8  0012               	return		;funcret
 10661  0063AA  FFFF               	dw	65535	; errata NOP
 10662  0063AC                     __end_of___wmul:
 10663                           	callstack 0
 10664                           
 10665 ;; *************** function _serial_tx_char *****************
 10666 ;; Defined at:
 10667 ;;		line 39 in file "serial_rs232.c"
 10668 ;; Parameters:    Size  Location     Type
 10669 ;;  val             1    wreg     unsigned char 
 10670 ;; Auto vars:     Size  Location     Type
 10671 ;;  val             1    0[COMRAM] unsigned char 
 10672 ;; Return value:  Size  Location     Type
 10673 ;;                  1    wreg      void 
 10674 ;; Registers used:
 10675 ;;		wreg
 10676 ;; Tracked objects:
 10677 ;;		On entry : 0/0
 10678 ;;		On exit  : 0/0
 10679 ;;		Unchanged: 0/0
 10680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10681 ;;      Params:         0       0       0       0       0       0       0
 10682 ;;      Locals:         1       0       0       0       0       0       0
 10683 ;;      Temps:          0       0       0       0       0       0       0
 10684 ;;      Totals:         1       0       0       0       0       0       0
 10685 ;;Total ram usage:        1 bytes
 10686 ;; Hardware stack levels used:    1
 10687 ;; Hardware stack levels required when called:    1
 10688 ;; This function calls:
 10689 ;;		Nothing
 10690 ;; This function is called by:
 10691 ;;		_main
 10692 ;;		_serial_tx_string
 10693 ;; This function uses a non-reentrant model
 10694 ;;
 10695                           
 10696                           	psect	text33
 10697  0062A0                     __ptext33:
 10698                           	callstack 0
 10699  0062A0                     _serial_tx_char:
 10700                           	callstack 0
 10701  0062A0  FFFF               	dw	65535	; assembler added errata NOP
 10702                           
 10703                           ;incstack = 0
 10704                           ;serial_tx_char@val stored from wreg
 10705  0062A2  6E01               	movwf	serial_tx_char@val^0,c
 10706  0062A4                     
 10707                           ;serial_rs232.c: 40:     TXREG = val;
 10708  0062A4  C001  FFAD         	movff	serial_tx_char@val,4013	;volatile
 10709  0062A8                     l24:
 10710  0062A8  FFFF               	dw	65535	; assembler added errata NOP
 10711  0062AA  A2AC               	btfss	172,1,c	;volatile
 10712  0062AC  EF5A  F031         	goto	u6631
 10713  0062B0  EF5D  F031         	goto	u6630
 10714  0062B4                     u6631:
 10715  0062B4  FFFF               	dw	65535	; assembler added errata NOP
 10716  0062B6  EF54  F031         	goto	l24
 10717  0062BA                     u6630:
 10718  0062BA  FFFF               	dw	65535	; assembler added errata NOP
 10719  0062BC  0012               	return		;funcret
 10720  0062BE  FFFF               	dw	65535	; errata NOP
 10721  0062C0                     __end_of_serial_tx_char:
 10722                           	callstack 0
 10723                           
 10724 ;; *************** function _reach_goal *****************
 10725 ;; Defined at:
 10726 ;;		line 30 in file "stepper_motor.c"
 10727 ;; Parameters:    Size  Location     Type
 10728 ;;  stepper_moto    2    8[COMRAM] PTR struct .
 10729 ;;		 -> joint_dilutor_stepper(12), end_effector_stepper(12), joint_stepper(12), 
 10730 ;;  goal_to_reac    2   10[COMRAM] int 
 10731 ;; Auto vars:     Size  Location     Type
 10732 ;;		None
 10733 ;; Return value:  Size  Location     Type
 10734 ;;                  2    8[COMRAM] int 
 10735 ;; Registers used:
 10736 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10737 ;; Tracked objects:
 10738 ;;		On entry : 0/0
 10739 ;;		On exit  : 0/0
 10740 ;;		Unchanged: 0/0
 10741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10742 ;;      Params:         4       0       0       0       0       0       0
 10743 ;;      Locals:         0       0       0       0       0       0       0
 10744 ;;      Temps:          3       0       0       0       0       0       0
 10745 ;;      Totals:         7       0       0       0       0       0       0
 10746 ;;Total ram usage:        7 bytes
 10747 ;; Hardware stack levels used:    1
 10748 ;; Hardware stack levels required when called:    2
 10749 ;; This function calls:
 10750 ;;		_turn_on_current_coil
 10751 ;;		_update_current_coil
 10752 ;; This function is called by:
 10753 ;;		_main
 10754 ;; This function uses a non-reentrant model
 10755 ;;
 10756                           
 10757                           	psect	text34
 10758  006A50                     __ptext34:
 10759                           	callstack 0
 10760  006A50                     _reach_goal:
 10761                           	callstack 0
 10762  006A50  FFFF               	dw	65535	; assembler added errata NOP
 10763  006A52                     
 10764                           ;stepper_motor.c: 31:     if(stepper_motor -> step_counter >= goal_to_reach){
 10765  006A52  EE20 F002          	lfsr	2,2
 10766  006A56  5009               	movf	reach_goal@stepper_motor^0,w,c
 10767  006A58  26D9               	addwf	fsr2l,f,c
 10768  006A5A  500A               	movf	(reach_goal@stepper_motor+1)^0,w,c
 10769  006A5C  22DA               	addwfc	fsr2h,f,c
 10770  006A5E  500B               	movf	reach_goal@goal_to_reach^0,w,c
 10771  006A60  5CDE               	subwf	postinc2,w,c
 10772  006A62  50DE               	movf	postinc2,w,c
 10773  006A64  0A80               	xorlw	128
 10774  006A66  6E0F               	movwf	(??_reach_goal+2)^0,c
 10775  006A68  500C               	movf	(reach_goal@goal_to_reach+1)^0,w,c
 10776  006A6A  0A80               	xorlw	128
 10777  006A6C  580F               	subwfb	(??_reach_goal+2)^0,w,c
 10778  006A6E  A0D8               	btfss	status,0,c
 10779  006A70  EF3C  F035         	goto	u6831
 10780  006A74  EF3F  F035         	goto	u6830
 10781  006A78                     u6831:
 10782  006A78  FFFF               	dw	65535	; assembler added errata NOP
 10783  006A7A  EF50  F035         	goto	l5615
 10784  006A7E                     u6830:
 10785  006A7E  FFFF               	dw	65535	; assembler added errata NOP
 10786  006A80                     
 10787                           ;stepper_motor.c: 32:         stepper_motor -> step_counter = 0;
 10788  006A80  EE20 F002          	lfsr	2,2
 10789  006A84  5009               	movf	reach_goal@stepper_motor^0,w,c
 10790  006A86  26D9               	addwf	fsr2l,f,c
 10791  006A88  500A               	movf	(reach_goal@stepper_motor+1)^0,w,c
 10792  006A8A  22DA               	addwfc	fsr2h,f,c
 10793  006A8C  0E00               	movlw	0
 10794  006A8E  6EDE               	movwf	postinc2,c
 10795  006A90  0E00               	movlw	0
 10796  006A92  6EDD               	movwf	postdec2,c
 10797  006A94                     
 10798                           ;stepper_motor.c: 33:         return 1;
 10799  006A94  0E00               	movlw	0
 10800  006A96  6E0A               	movwf	(?_reach_goal+1)^0,c
 10801  006A98  0E01               	movlw	1
 10802  006A9A  6E09               	movwf	?_reach_goal^0,c
 10803  006A9C  EF61  F035         	goto	l374
 10804  006AA0                     l5615:
 10805  006AA0  FFFF               	dw	65535	; assembler added errata NOP
 10806                           
 10807                           ;stepper_motor.c: 35:         turn_on_current_coil(stepper_motor);
 10808  006AA2  C009  F001         	movff	reach_goal@stepper_motor,turn_on_current_coil@stepper_motor
 10809  006AA6  C00A  F002         	movff	reach_goal@stepper_motor+1,turn_on_current_coil@stepper_motor+1
 10810  006AAA  EC5C  F033         	call	_turn_on_current_coil	;wreg free
 10811  006AAE                     
 10812                           ;stepper_motor.c: 36:         update_current_coil(stepper_motor);
 10813  006AAE  C009  F001         	movff	reach_goal@stepper_motor,update_current_coil@stepper_motor
 10814  006AB2  C00A  F002         	movff	reach_goal@stepper_motor+1,update_current_coil@stepper_motor+1
 10815  006AB6  EC49  F037         	call	_update_current_coil	;wreg free
 10816  006ABA                     
 10817                           ;stepper_motor.c: 37:         return 0;
 10818  006ABA  0E00               	movlw	0
 10819  006ABC  6E0A               	movwf	(?_reach_goal+1)^0,c
 10820  006ABE  0E00               	movlw	0
 10821  006AC0  6E09               	movwf	?_reach_goal^0,c
 10822  006AC2                     l374:
 10823  006AC2  FFFF               	dw	65535	; assembler added errata NOP
 10824  006AC4  0012               	return		;funcret
 10825  006AC6  FFFF               	dw	65535	; errata NOP
 10826  006AC8                     __end_of_reach_goal:
 10827                           	callstack 0
 10828                           
 10829 ;; *************** function _update_current_coil *****************
 10830 ;; Defined at:
 10831 ;;		line 19 in file "stepper_motor.c"
 10832 ;; Parameters:    Size  Location     Type
 10833 ;;  stepper_moto    2    0[COMRAM] PTR struct .
 10834 ;;		 -> joint_dilutor_stepper(12), end_effector_stepper(12), joint_stepper(12), 
 10835 ;; Auto vars:     Size  Location     Type
 10836 ;;		None
 10837 ;; Return value:  Size  Location     Type
 10838 ;;                  1    wreg      void 
 10839 ;; Registers used:
 10840 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10841 ;; Tracked objects:
 10842 ;;		On entry : 0/0
 10843 ;;		On exit  : 0/0
 10844 ;;		Unchanged: 0/0
 10845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10846 ;;      Params:         2       0       0       0       0       0       0
 10847 ;;      Locals:         0       0       0       0       0       0       0
 10848 ;;      Temps:          4       0       0       0       0       0       0
 10849 ;;      Totals:         6       0       0       0       0       0       0
 10850 ;;Total ram usage:        6 bytes
 10851 ;; Hardware stack levels used:    1
 10852 ;; Hardware stack levels required when called:    1
 10853 ;; This function calls:
 10854 ;;		Nothing
 10855 ;; This function is called by:
 10856 ;;		_reach_goal
 10857 ;; This function uses a non-reentrant model
 10858 ;;
 10859                           
 10860                           	psect	text35
 10861  006E92                     __ptext35:
 10862                           	callstack 0
 10863  006E92                     _update_current_coil:
 10864                           	callstack 0
 10865  006E92  FFFF               	dw	65535	; assembler added errata NOP
 10866  006E94                     
 10867                           ;stepper_motor.c: 20:     stepper_motor -> current_coil = stepper_motor -> current_coil 
      +                          + stepper_motor -> direction;
 10868  006E94  EE20 F004          	lfsr	2,4
 10869  006E98  5001               	movf	update_current_coil@stepper_motor^0,w,c
 10870  006E9A  26D9               	addwf	fsr2l,f,c
 10871  006E9C  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
 10872  006E9E  22DA               	addwfc	fsr2h,f,c
 10873  006EA0  CFDE F003          	movff	postinc2,??_update_current_coil
 10874  006EA4  CFDD F004          	movff	postdec2,??_update_current_coil+1
 10875  006EA8  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10876  006EAC  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10877  006EB0  CFDE F005          	movff	postinc2,??_update_current_coil+2
 10878  006EB4  CFDD F006          	movff	postdec2,??_update_current_coil+3
 10879  006EB8  5003               	movf	??_update_current_coil^0,w,c
 10880  006EBA  2605               	addwf	(??_update_current_coil+2)^0,f,c
 10881  006EBC  5004               	movf	(??_update_current_coil+1)^0,w,c
 10882  006EBE  2206               	addwfc	(??_update_current_coil+3)^0,f,c
 10883  006EC0  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10884  006EC4  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10885  006EC8  C005  FFDE         	movff	??_update_current_coil+2,postinc2
 10886  006ECC  C006  FFDD         	movff	??_update_current_coil+3,postdec2
 10887                           
 10888                           ;stepper_motor.c: 21:     stepper_motor -> step_counter = stepper_motor -> step_counter 
      +                          + 1;
 10889  006ED0  EE20 F002          	lfsr	2,2
 10890  006ED4  5001               	movf	update_current_coil@stepper_motor^0,w,c
 10891  006ED6  26D9               	addwf	fsr2l,f,c
 10892  006ED8  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
 10893  006EDA  22DA               	addwfc	fsr2h,f,c
 10894  006EDC  CFDE F003          	movff	postinc2,??_update_current_coil
 10895  006EE0  CFDD F004          	movff	postdec2,??_update_current_coil+1
 10896  006EE4  0E01               	movlw	1
 10897  006EE6  2603               	addwf	??_update_current_coil^0,f,c
 10898  006EE8  0E00               	movlw	0
 10899  006EEA  2204               	addwfc	(??_update_current_coil+1)^0,f,c
 10900  006EEC  EE20 F002          	lfsr	2,2
 10901  006EF0  5001               	movf	update_current_coil@stepper_motor^0,w,c
 10902  006EF2  26D9               	addwf	fsr2l,f,c
 10903  006EF4  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
 10904  006EF6  22DA               	addwfc	fsr2h,f,c
 10905  006EF8  C003  FFDE         	movff	??_update_current_coil,postinc2
 10906  006EFC  C004  FFDD         	movff	??_update_current_coil+1,postdec2
 10907                           
 10908                           ;stepper_motor.c: 22:     if (stepper_motor -> current_coil == -1) {
 10909  006F00  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10910  006F04  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10911  006F08  28DE               	incf	postinc2,w,c
 10912  006F0A  E106               	bnz	u6501
 10913  006F0C  28DE               	incf	postinc2,w,c
 10914  006F0E  A4D8               	btfss	status,2,c
 10915  006F10  EF8C  F037         	goto	u6501
 10916  006F14  EF8F  F037         	goto	u6500
 10917  006F18                     u6501:
 10918  006F18  FFFF               	dw	65535	; assembler added errata NOP
 10919  006F1A  EF9A  F037         	goto	l5291
 10920  006F1E                     u6500:
 10921  006F1E  FFFF               	dw	65535	; assembler added errata NOP
 10922  006F20                     
 10923                           ;stepper_motor.c: 23:         stepper_motor -> current_coil = 3;
 10924  006F20  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10925  006F24  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10926  006F28  0E03               	movlw	3
 10927  006F2A  6EDE               	movwf	postinc2,c
 10928  006F2C  0E00               	movlw	0
 10929  006F2E  6EDD               	movwf	postdec2,c
 10930                           
 10931                           ;stepper_motor.c: 24:     } else if(stepper_motor -> current_coil == 4) {
 10932  006F30  EFB3  F037         	goto	l370
 10933  006F34                     l5291:
 10934  006F34  FFFF               	dw	65535	; assembler added errata NOP
 10935  006F36  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10936  006F3A  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10937  006F3E  0E04               	movlw	4
 10938  006F40  18DE               	xorwf	postinc2,w,c
 10939  006F42  10DE               	iorwf	postinc2,w,c
 10940  006F44  A4D8               	btfss	status,2,c
 10941  006F46  EFA7  F037         	goto	u6511
 10942  006F4A  EFAA  F037         	goto	u6510
 10943  006F4E                     u6511:
 10944  006F4E  FFFF               	dw	65535	; assembler added errata NOP
 10945  006F50  EFB3  F037         	goto	l370
 10946  006F54                     u6510:
 10947  006F54  FFFF               	dw	65535	; assembler added errata NOP
 10948  006F56                     
 10949                           ;stepper_motor.c: 25:         stepper_motor -> current_coil = 0;
 10950  006F56  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10951  006F5A  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10952  006F5E  0E00               	movlw	0
 10953  006F60  6EDE               	movwf	postinc2,c
 10954  006F62  0E00               	movlw	0
 10955  006F64  6EDD               	movwf	postdec2,c
 10956  006F66                     l370:
 10957  006F66  FFFF               	dw	65535	; assembler added errata NOP
 10958  006F68  0012               	return		;funcret
 10959  006F6A  FFFF               	dw	65535	; errata NOP
 10960  006F6C                     __end_of_update_current_coil:
 10961                           	callstack 0
 10962                           
 10963 ;; *************** function _turn_on_current_coil *****************
 10964 ;; Defined at:
 10965 ;;		line 14 in file "stepper_motor.c"
 10966 ;; Parameters:    Size  Location     Type
 10967 ;;  stepper_moto    2    0[COMRAM] PTR struct .
 10968 ;;		 -> joint_dilutor_stepper(12), end_effector_stepper(12), joint_stepper(12), 
 10969 ;; Auto vars:     Size  Location     Type
 10970 ;;		None
 10971 ;; Return value:  Size  Location     Type
 10972 ;;                  1    wreg      void 
 10973 ;; Registers used:
 10974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 10975 ;; Tracked objects:
 10976 ;;		On entry : 0/0
 10977 ;;		On exit  : 0/0
 10978 ;;		Unchanged: 0/0
 10979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10980 ;;      Params:         2       0       0       0       0       0       0
 10981 ;;      Locals:         0       0       0       0       0       0       0
 10982 ;;      Temps:          6       0       0       0       0       0       0
 10983 ;;      Totals:         8       0       0       0       0       0       0
 10984 ;;Total ram usage:        8 bytes
 10985 ;; Hardware stack levels used:    1
 10986 ;; Hardware stack levels required when called:    1
 10987 ;; This function calls:
 10988 ;;		Nothing
 10989 ;; This function is called by:
 10990 ;;		_reach_goal
 10991 ;; This function uses a non-reentrant model
 10992 ;;
 10993                           
 10994                           	psect	text36
 10995  0066B8                     __ptext36:
 10996                           	callstack 0
 10997  0066B8                     _turn_on_current_coil:
 10998                           	callstack 0
 10999  0066B8  FFFF               	dw	65535	; assembler added errata NOP
 11000  0066BA                     
 11001                           ;stepper_motor.c: 15:     *(stepper_motor -> register_name) = stepper_motor -> hex_coil_
      +                          register_values[stepper_motor -> current_coil];
 11002  0066BA  C001  FFD9         	movff	turn_on_current_coil@stepper_motor,fsr2l
 11003  0066BE  C002  FFDA         	movff	turn_on_current_coil@stepper_motor+1,fsr2h
 11004  0066C2  CFDE F003          	movff	postinc2,??_turn_on_current_coil
 11005  0066C6  CFDD F004          	movff	postdec2,??_turn_on_current_coil+1
 11006  0066CA  C001  F005         	movff	turn_on_current_coil@stepper_motor,??_turn_on_current_coil+2
 11007  0066CE  C002  F006         	movff	turn_on_current_coil@stepper_motor+1,??_turn_on_current_coil+3
 11008  0066D2  5003               	movf	??_turn_on_current_coil^0,w,c
 11009  0066D4  2605               	addwf	(??_turn_on_current_coil+2)^0,f,c
 11010  0066D6  5004               	movf	(??_turn_on_current_coil+1)^0,w,c
 11011  0066D8  2206               	addwfc	(??_turn_on_current_coil+3)^0,f,c
 11012  0066DA  0E06               	movlw	6
 11013  0066DC  2405               	addwf	(??_turn_on_current_coil+2)^0,w,c
 11014  0066DE  6ED9               	movwf	fsr2l,c
 11015  0066E0  0E00               	movlw	0
 11016  0066E2  2006               	addwfc	(??_turn_on_current_coil+3)^0,w,c
 11017  0066E4  6EDA               	movwf	fsr2h,c
 11018  0066E6  EE10 F00A          	lfsr	1,10
 11019  0066EA  5001               	movf	turn_on_current_coil@stepper_motor^0,w,c
 11020  0066EC  26E1               	addwf	fsr1l,f,c
 11021  0066EE  5002               	movf	(turn_on_current_coil@stepper_motor+1)^0,w,c
 11022  0066F0  22E2               	addwfc	fsr1h,f,c
 11023  0066F2  CFE6 F007          	movff	postinc1,??_turn_on_current_coil+4
 11024  0066F6  CFE5 F008          	movff	postdec1,??_turn_on_current_coil+5
 11025  0066FA  C007  FFE1         	movff	??_turn_on_current_coil+4,fsr1l
 11026  0066FE  C008  FFE2         	movff	??_turn_on_current_coil+5,fsr1h
 11027  006702  CFDF FFE7          	movff	indf2,indf1
 11028  006706  0012               	return		;funcret
 11029  006708  FFFF               	dw	65535	; errata NOP
 11030  00670A                     __end_of_turn_on_current_coil:
 11031                           	callstack 0
 11032                           
 11033 ;; *************** function _lcd_str *****************
 11034 ;; Defined at:
 11035 ;;		line 62 in file "lcd.c"
 11036 ;; Parameters:    Size  Location     Type
 11037 ;;  str             2    2[COMRAM] PTR const unsigned char 
 11038 ;;		 -> STR_13(37), STR_12(17), STR_11(44), main@greet_str(160), 
 11039 ;;		 -> STR_9(22), 
 11040 ;; Auto vars:     Size  Location     Type
 11041 ;;  i               1    6[COMRAM] unsigned char 
 11042 ;; Return value:  Size  Location     Type
 11043 ;;                  1    wreg      void 
 11044 ;; Registers used:
 11045 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11046 ;; Tracked objects:
 11047 ;;		On entry : 0/0
 11048 ;;		On exit  : 0/0
 11049 ;;		Unchanged: 0/0
 11050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11051 ;;      Params:         2       0       0       0       0       0       0
 11052 ;;      Locals:         1       0       0       0       0       0       0
 11053 ;;      Temps:          2       0       0       0       0       0       0
 11054 ;;      Totals:         5       0       0       0       0       0       0
 11055 ;;Total ram usage:        5 bytes
 11056 ;; Hardware stack levels used:    1
 11057 ;; Hardware stack levels required when called:    3
 11058 ;; This function calls:
 11059 ;;		_lcd_dat
 11060 ;; This function is called by:
 11061 ;;		_main
 11062 ;; This function uses a non-reentrant model
 11063 ;;
 11064                           
 11065                           	psect	text37
 11066  006B46                     __ptext37:
 11067                           	callstack 0
 11068  006B46                     _lcd_str:
 11069                           	callstack 0
 11070  006B46  FFFF               	dw	65535	; assembler added errata NOP
 11071  006B48                     
 11072                           ;lcd.c: 62: void lcd_str(const char* str);lcd.c: 63: {;lcd.c: 64:     unsigned char i=0;
 11073  006B48  0E00               	movlw	0
 11074  006B4A  6E07               	movwf	lcd_str@i^0,c
 11075                           
 11076                           ;lcd.c: 66:     while(str[i] != 0 )
 11077  006B4C  EFC3  F035         	goto	l5481
 11078  006B50                     l5477:
 11079  006B50  FFFF               	dw	65535	; assembler added errata NOP
 11080                           
 11081                           ;lcd.c: 67:     {;lcd.c: 68:       lcd_dat(str[i]);
 11082  006B52  5007               	movf	lcd_str@i^0,w,c
 11083  006B54  2403               	addwf	lcd_str@str^0,w,c
 11084  006B56  6E05               	movwf	??_lcd_str^0,c
 11085  006B58  0E00               	movlw	0
 11086  006B5A  2004               	addwfc	(lcd_str@str+1)^0,w,c
 11087  006B5C  6E06               	movwf	(??_lcd_str+1)^0,c
 11088  006B5E  C005  FFF6         	movff	??_lcd_str,tblptrl
 11089  006B62  C006  FFF7         	movff	??_lcd_str+1,tblptrh
 11090  006B66  6AF8               	clrf	tblptru,c
 11091  006B68  0E05               	movlw	(high __ramtop+-1)
 11092  006B6A  64F7               	cpfsgt	tblptrh,c
 11093  006B6C  D004               	bra	u6657
 11094  006B6E  0008               	tblrd		*
 11095  006B70  FFFF               	dw	65535	; errata NOP
 11096  006B72  50F5               	movf	tablat,w,c
 11097  006B74  D005               	bra	u6650
 11098  006B76                     u6657:
 11099  006B76  CFF6 FFE1          	movff	tblptrl,fsr1l
 11100  006B7A  CFF7 FFE2          	movff	tblptrh,fsr1h
 11101  006B7E  50E7               	movf	indf1,w,c
 11102  006B80                     u6650:
 11103  006B80  ECAC  F031         	call	_lcd_dat
 11104  006B84                     
 11105                           ;lcd.c: 69:       i++;
 11106  006B84  2A07               	incf	lcd_str@i^0,f,c
 11107  006B86                     l5481:
 11108  006B86  FFFF               	dw	65535	; assembler added errata NOP
 11109                           
 11110                           ;lcd.c: 66:     while(str[i] != 0 )
 11111  006B88  5007               	movf	lcd_str@i^0,w,c
 11112  006B8A  2403               	addwf	lcd_str@str^0,w,c
 11113  006B8C  6E05               	movwf	??_lcd_str^0,c
 11114  006B8E  0E00               	movlw	0
 11115  006B90  2004               	addwfc	(lcd_str@str+1)^0,w,c
 11116  006B92  6E06               	movwf	(??_lcd_str+1)^0,c
 11117  006B94  C005  FFF6         	movff	??_lcd_str,tblptrl
 11118  006B98  C006  FFF7         	movff	??_lcd_str+1,tblptrh
 11119  006B9C  6AF8               	clrf	tblptru,c
 11120  006B9E  0E05               	movlw	(high __ramtop+-1)
 11121  006BA0  64F7               	cpfsgt	tblptrh,c
 11122  006BA2  D004               	bra	u6667
 11123  006BA4  0008               	tblrd		*
 11124  006BA6  FFFF               	dw	65535	; errata NOP
 11125  006BA8  50F5               	movf	tablat,w,c
 11126  006BAA  D005               	bra	u6660
 11127  006BAC                     u6667:
 11128  006BAC  CFF6 FFE1          	movff	tblptrl,fsr1l
 11129  006BB0  CFF7 FFE2          	movff	tblptrh,fsr1h
 11130  006BB4  50E7               	movf	indf1,w,c
 11131  006BB6                     u6660:
 11132  006BB6  0900               	iorlw	0
 11133  006BB8  A4D8               	btfss	status,2,c
 11134  006BBA  EFE1  F035         	goto	u6671
 11135  006BBE  EFE4  F035         	goto	u6670
 11136  006BC2                     u6671:
 11137  006BC2  FFFF               	dw	65535	; assembler added errata NOP
 11138  006BC4  EFA8  F035         	goto	l5477
 11139  006BC8                     u6670:
 11140  006BC8  FFFF               	dw	65535	; assembler added errata NOP
 11141  006BCA  0012               	return		;funcret
 11142  006BCC  FFFF               	dw	65535	; errata NOP
 11143  006BCE                     __end_of_lcd_str:
 11144                           	callstack 0
 11145                           
 11146 ;; *************** function _lcd_dat *****************
 11147 ;; Defined at:
 11148 ;;		line 21 in file "lcd.c"
 11149 ;; Parameters:    Size  Location     Type
 11150 ;;  val             1    wreg     unsigned char 
 11151 ;; Auto vars:     Size  Location     Type
 11152 ;;  val             1    1[COMRAM] unsigned char 
 11153 ;; Return value:  Size  Location     Type
 11154 ;;                  1    wreg      void 
 11155 ;; Registers used:
 11156 ;;		wreg, status,2, cstack
 11157 ;; Tracked objects:
 11158 ;;		On entry : 0/0
 11159 ;;		On exit  : 0/0
 11160 ;;		Unchanged: 0/0
 11161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11162 ;;      Params:         0       0       0       0       0       0       0
 11163 ;;      Locals:         1       0       0       0       0       0       0
 11164 ;;      Temps:          0       0       0       0       0       0       0
 11165 ;;      Totals:         1       0       0       0       0       0       0
 11166 ;;Total ram usage:        1 bytes
 11167 ;; Hardware stack levels used:    1
 11168 ;; Hardware stack levels required when called:    2
 11169 ;; This function calls:
 11170 ;;		_lcd_wr
 11171 ;; This function is called by:
 11172 ;;		_lcd_str
 11173 ;;		_state_translator_fpga_to_micro
 11174 ;; This function uses a non-reentrant model
 11175 ;;
 11176                           
 11177                           	psect	text38
 11178  006358                     __ptext38:
 11179                           	callstack 0
 11180  006358                     _lcd_dat:
 11181                           	callstack 0
 11182  006358  FFFF               	dw	65535	; assembler added errata NOP
 11183                           
 11184                           ;incstack = 0
 11185                           ;lcd_dat@val stored from wreg
 11186  00635A  6E02               	movwf	lcd_dat@val^0,c
 11187  00635C                     
 11188                           ;lcd.c: 21: void lcd_dat(unsigned char val);lcd.c: 22: {;lcd.c: 23:  PORTEbits.RE1=1;
 11189  00635C  8284               	bsf	132,1,c	;volatile
 11190  00635E                     
 11191                           ;lcd.c: 24:     lcd_wr(val);
 11192  00635E  5002               	movf	lcd_dat@val^0,w,c
 11193  006360  EC0E  F031         	call	_lcd_wr
 11194  006364                     
 11195                           ;lcd.c: 25:     PORTEbits.RE2=1;
 11196  006364  8484               	bsf	132,2,c	;volatile
 11197  006366                     
 11198                           ;lcd.c: 26:     _delay((unsigned long)((1)*(4000000/4000.0)));
 11199  006366  0EC8               	movlw	200
 11200  006368                     u7397:
 11201  006368  FFFF               	dw	65535	; errata NOP
 11202  00636A  F000               	nop	
 11203  00636C  2EE8               	decfsz	wreg,f,c
 11204  00636E  D7FC               	bra	u7397
 11205  006370                     
 11206                           ;lcd.c: 27:     PORTEbits.RE1=0;
 11207  006370  9284               	bcf	132,1,c	;volatile
 11208  006372                     
 11209                           ;lcd.c: 28:     _delay((unsigned long)((1)*(4000000/4000.0)));
 11210  006372  0EC8               	movlw	200
 11211  006374                     u7407:
 11212  006374  FFFF               	dw	65535	; errata NOP
 11213  006376  F000               	nop	
 11214  006378  2EE8               	decfsz	wreg,f,c
 11215  00637A  D7FC               	bra	u7407
 11216  00637C                     
 11217                           ;lcd.c: 29:  PORTEbits.RE1=1;
 11218  00637C  8284               	bsf	132,1,c	;volatile
 11219  00637E  0012               	return		;funcret
 11220  006380  FFFF               	dw	65535	; errata NOP
 11221  006382                     __end_of_lcd_dat:
 11222                           	callstack 0
 11223                           
 11224 ;; *************** function _lcd_init *****************
 11225 ;; Defined at:
 11226 ;;		line 32 in file "lcd.c"
 11227 ;; Parameters:    Size  Location     Type
 11228 ;;		None
 11229 ;; Auto vars:     Size  Location     Type
 11230 ;;		None
 11231 ;; Return value:  Size  Location     Type
 11232 ;;                  1    wreg      void 
 11233 ;; Registers used:
 11234 ;;		wreg, status,2, cstack
 11235 ;; Tracked objects:
 11236 ;;		On entry : 0/0
 11237 ;;		On exit  : 0/0
 11238 ;;		Unchanged: 0/0
 11239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11240 ;;      Params:         0       0       0       0       0       0       0
 11241 ;;      Locals:         0       0       0       0       0       0       0
 11242 ;;      Temps:          1       0       0       0       0       0       0
 11243 ;;      Totals:         1       0       0       0       0       0       0
 11244 ;;Total ram usage:        1 bytes
 11245 ;; Hardware stack levels used:    1
 11246 ;; Hardware stack levels required when called:    3
 11247 ;; This function calls:
 11248 ;;		_lcd_cmd
 11249 ;; This function is called by:
 11250 ;;		_main
 11251 ;; This function uses a non-reentrant model
 11252 ;;
 11253                           
 11254                           	psect	text39
 11255  006AC8                     __ptext39:
 11256                           	callstack 0
 11257  006AC8                     _lcd_init:
 11258                           	callstack 0
 11259  006AC8  FFFF               	dw	65535	; assembler added errata NOP
 11260  006ACA  6A83               	clrf	3971,c	;# 
 11261  006ACC  0E00               	movlw	0	;# 
 11262  006ACE  6E95               	movwf	3989,c	;# 
 11263  006AD0  6A84               	clrf	3972,c	;# 
 11264  006AD2  0E00               	movlw	0	;# 
 11265  006AD4  6E96               	movwf	3990,c	;# 
 11266                           
 11267                           ;lcd.c: 45:  PORTEbits.RE1=0;
 11268  006AD6  9284               	bcf	132,1,c	;volatile
 11269                           
 11270                           ;lcd.c: 46:  PORTEbits.RE2=0;
 11271  006AD8  9484               	bcf	132,2,c	;volatile
 11272  006ADA                     
 11273                           ;lcd.c: 47:  _delay((unsigned long)((30)*(4000000/4000.0)));
 11274  006ADA  0E1E               	movlw	30
 11275  006ADC  6E03               	movwf	??_lcd_init^0,c
 11276  006ADE  0E3C               	movlw	60
 11277  006AE0                     u7417:
 11278  006AE0  FFFF               	dw	65535	; errata NOP
 11279  006AE2  2EE8               	decfsz	wreg,f,c
 11280  006AE4  D7FD               	bra	u7417
 11281  006AE6  2E03               	decfsz	??_lcd_init^0,f,c
 11282  006AE8  D7FB               	bra	u7417
 11283  006AEA  D000               	nop2	
 11284  006AEC                     
 11285                           ;lcd.c: 48:  PORTEbits.RE1=1;
 11286  006AEC  8284               	bsf	132,1,c	;volatile
 11287  006AEE                     
 11288                           ;lcd.c: 50:  lcd_cmd(0x38);
 11289  006AEE  0E38               	movlw	56
 11290  006AF0  EC97  F031         	call	_lcd_cmd
 11291  006AF4                     
 11292                           ;lcd.c: 51:  _delay((unsigned long)((30)*(4000000/4000.0)));
 11293  006AF4  0E1E               	movlw	30
 11294  006AF6  6E03               	movwf	??_lcd_init^0,c
 11295  006AF8  0E3C               	movlw	60
 11296  006AFA                     u7427:
 11297  006AFA  FFFF               	dw	65535	; errata NOP
 11298  006AFC  2EE8               	decfsz	wreg,f,c
 11299  006AFE  D7FD               	bra	u7427
 11300  006B00  2E03               	decfsz	??_lcd_init^0,f,c
 11301  006B02  D7FB               	bra	u7427
 11302  006B04  D000               	nop2	
 11303                           
 11304                           ;lcd.c: 52:  lcd_cmd(0x38);
 11305  006B06  0E38               	movlw	56
 11306  006B08  EC97  F031         	call	_lcd_cmd
 11307  006B0C                     
 11308                           ;lcd.c: 53:     _delay((unsigned long)((30)*(4000000/4000.0)));
 11309  006B0C  0E1E               	movlw	30
 11310  006B0E  6E03               	movwf	??_lcd_init^0,c
 11311  006B10  0E3C               	movlw	60
 11312  006B12                     u7437:
 11313  006B12  FFFF               	dw	65535	; errata NOP
 11314  006B14  2EE8               	decfsz	wreg,f,c
 11315  006B16  D7FD               	bra	u7437
 11316  006B18  2E03               	decfsz	??_lcd_init^0,f,c
 11317  006B1A  D7FB               	bra	u7437
 11318  006B1C  D000               	nop2	
 11319  006B1E                     
 11320                           ;lcd.c: 54:  lcd_cmd(0x38);
 11321  006B1E  0E38               	movlw	56
 11322  006B20  EC97  F031         	call	_lcd_cmd
 11323  006B24                     
 11324                           ;lcd.c: 55:  lcd_cmd(0x08);
 11325  006B24  0E08               	movlw	8
 11326  006B26  EC97  F031         	call	_lcd_cmd
 11327  006B2A                     
 11328                           ;lcd.c: 56:  lcd_cmd(0x0F);
 11329  006B2A  0E0F               	movlw	15
 11330  006B2C  EC97  F031         	call	_lcd_cmd
 11331  006B30                     
 11332                           ;lcd.c: 57:  lcd_cmd(0x01);
 11333  006B30  0E01               	movlw	1
 11334  006B32  EC97  F031         	call	_lcd_cmd
 11335  006B36                     
 11336                           ;lcd.c: 58:  lcd_cmd(0x38);
 11337  006B36  0E38               	movlw	56
 11338  006B38  EC97  F031         	call	_lcd_cmd
 11339  006B3C                     
 11340                           ;lcd.c: 59:     lcd_cmd(0x80);
 11341  006B3C  0E80               	movlw	128
 11342  006B3E  EC97  F031         	call	_lcd_cmd
 11343  006B42  0012               	return		;funcret
 11344  006B44  FFFF               	dw	65535	; errata NOP
 11345  006B46                     __end_of_lcd_init:
 11346                           	callstack 0
 11347                           
 11348 ;; *************** function _lcd_cmd *****************
 11349 ;; Defined at:
 11350 ;;		line 10 in file "lcd.c"
 11351 ;; Parameters:    Size  Location     Type
 11352 ;;  val             1    wreg     unsigned char 
 11353 ;; Auto vars:     Size  Location     Type
 11354 ;;  val             1    1[COMRAM] unsigned char 
 11355 ;; Return value:  Size  Location     Type
 11356 ;;                  1    wreg      void 
 11357 ;; Registers used:
 11358 ;;		wreg, status,2, cstack
 11359 ;; Tracked objects:
 11360 ;;		On entry : 0/0
 11361 ;;		On exit  : 0/0
 11362 ;;		Unchanged: 0/0
 11363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11364 ;;      Params:         0       0       0       0       0       0       0
 11365 ;;      Locals:         1       0       0       0       0       0       0
 11366 ;;      Temps:          0       0       0       0       0       0       0
 11367 ;;      Totals:         1       0       0       0       0       0       0
 11368 ;;Total ram usage:        1 bytes
 11369 ;; Hardware stack levels used:    1
 11370 ;; Hardware stack levels required when called:    2
 11371 ;; This function calls:
 11372 ;;		_lcd_wr
 11373 ;; This function is called by:
 11374 ;;		_main
 11375 ;;		_lcd_init
 11376 ;; This function uses a non-reentrant model
 11377 ;;
 11378                           
 11379                           	psect	text40
 11380  00632E                     __ptext40:
 11381                           	callstack 0
 11382  00632E                     _lcd_cmd:
 11383                           	callstack 0
 11384  00632E  FFFF               	dw	65535	; assembler added errata NOP
 11385                           
 11386                           ;incstack = 0
 11387                           ;lcd_cmd@val stored from wreg
 11388  006330  6E02               	movwf	lcd_cmd@val^0,c
 11389  006332                     
 11390                           ;lcd.c: 10: void lcd_cmd(unsigned char val);lcd.c: 11: {;lcd.c: 12:  PORTEbits.RE1=1;
 11391  006332  8284               	bsf	132,1,c	;volatile
 11392  006334                     
 11393                           ;lcd.c: 13:     lcd_wr(val);
 11394  006334  5002               	movf	lcd_cmd@val^0,w,c
 11395  006336  EC0E  F031         	call	_lcd_wr
 11396  00633A                     
 11397                           ;lcd.c: 14:     PORTEbits.RE2=0;
 11398  00633A  9484               	bcf	132,2,c	;volatile
 11399  00633C                     
 11400                           ;lcd.c: 15:     _delay((unsigned long)((1)*(4000000/4000.0)));
 11401  00633C  0EC8               	movlw	200
 11402  00633E                     u7447:
 11403  00633E  FFFF               	dw	65535	; errata NOP
 11404  006340  F000               	nop	
 11405  006342  2EE8               	decfsz	wreg,f,c
 11406  006344  D7FC               	bra	u7447
 11407  006346                     
 11408                           ;lcd.c: 16:     PORTEbits.RE1=0;
 11409  006346  9284               	bcf	132,1,c	;volatile
 11410  006348                     
 11411                           ;lcd.c: 17:     _delay((unsigned long)((1)*(4000000/4000.0)));
 11412  006348  0EC8               	movlw	200
 11413  00634A                     u7457:
 11414  00634A  FFFF               	dw	65535	; errata NOP
 11415  00634C  F000               	nop	
 11416  00634E  2EE8               	decfsz	wreg,f,c
 11417  006350  D7FC               	bra	u7457
 11418  006352                     
 11419                           ;lcd.c: 18:  PORTEbits.RE1=1;
 11420  006352  8284               	bsf	132,1,c	;volatile
 11421  006354  0012               	return		;funcret
 11422  006356  FFFF               	dw	65535	; errata NOP
 11423  006358                     __end_of_lcd_cmd:
 11424                           	callstack 0
 11425                           
 11426 ;; *************** function _lcd_wr *****************
 11427 ;; Defined at:
 11428 ;;		line 5 in file "lcd.c"
 11429 ;; Parameters:    Size  Location     Type
 11430 ;;  val             1    wreg     unsigned char 
 11431 ;; Auto vars:     Size  Location     Type
 11432 ;;  val             1    0[COMRAM] unsigned char 
 11433 ;; Return value:  Size  Location     Type
 11434 ;;                  1    wreg      void 
 11435 ;; Registers used:
 11436 ;;		wreg
 11437 ;; Tracked objects:
 11438 ;;		On entry : 0/0
 11439 ;;		On exit  : 0/0
 11440 ;;		Unchanged: 0/0
 11441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11442 ;;      Params:         0       0       0       0       0       0       0
 11443 ;;      Locals:         1       0       0       0       0       0       0
 11444 ;;      Temps:          0       0       0       0       0       0       0
 11445 ;;      Totals:         1       0       0       0       0       0       0
 11446 ;;Total ram usage:        1 bytes
 11447 ;; Hardware stack levels used:    1
 11448 ;; Hardware stack levels required when called:    1
 11449 ;; This function calls:
 11450 ;;		Nothing
 11451 ;; This function is called by:
 11452 ;;		_lcd_cmd
 11453 ;;		_lcd_dat
 11454 ;; This function uses a non-reentrant model
 11455 ;;
 11456                           
 11457                           	psect	text41
 11458  00621C                     __ptext41:
 11459                           	callstack 0
 11460  00621C                     _lcd_wr:
 11461                           	callstack 0
 11462  00621C  FFFF               	dw	65535	; assembler added errata NOP
 11463                           
 11464                           ;incstack = 0
 11465                           ;lcd_wr@val stored from wreg
 11466  00621E  6E01               	movwf	lcd_wr@val^0,c
 11467  006220                     
 11468                           ;lcd.c: 5: void lcd_wr(unsigned char val);lcd.c: 6: {;lcd.c: 7:     PORTD=val;
 11469  006220  C001  FF83         	movff	lcd_wr@val,3971	;volatile
 11470  006224  0012               	return		;funcret
 11471  006226  FFFF               	dw	65535	; errata NOP
 11472  006228                     __end_of_lcd_wr:
 11473                           	callstack 0
 11474                           
 11475 ;; *************** function _init_timer_2 *****************
 11476 ;; Defined at:
 11477 ;;		line 27 in file "timer.c"
 11478 ;; Parameters:    Size  Location     Type
 11479 ;;		None
 11480 ;; Auto vars:     Size  Location     Type
 11481 ;;		None
 11482 ;; Return value:  Size  Location     Type
 11483 ;;                  1    wreg      void 
 11484 ;; Registers used:
 11485 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11486 ;; Tracked objects:
 11487 ;;		On entry : 0/0
 11488 ;;		On exit  : 0/0
 11489 ;;		Unchanged: 0/0
 11490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11491 ;;      Params:         0       0       0       0       0       0       0
 11492 ;;      Locals:         0       4       0       0       0       0       0
 11493 ;;      Temps:          0       0       0       0       0       0       0
 11494 ;;      Totals:         0       4       0       0       0       0       0
 11495 ;;Total ram usage:        4 bytes
 11496 ;; Hardware stack levels used:    1
 11497 ;; Hardware stack levels required when called:    2
 11498 ;; This function calls:
 11499 ;;		___fladd
 11500 ;;		___fldiv
 11501 ;;		___flmul
 11502 ;;		___fltol
 11503 ;; This function is called by:
 11504 ;;		_main
 11505 ;; This function uses a non-reentrant model
 11506 ;;
 11507                           
 11508                           	psect	text42
 11509  006DC4                     __ptext42:
 11510                           	callstack 0
 11511  006DC4                     _init_timer_2:
 11512                           	callstack 0
 11513  006DC4  FFFF               	dw	65535	; assembler added errata NOP
 11514  006DC6                     
 11515                           ;timer.c: 29:     T2CON = 0;
 11516  006DC6  0E00               	movlw	0
 11517  006DC8  6ECA               	movwf	202,c	;volatile
 11518                           
 11519                           ;timer.c: 30:     TMR2 = 0;
 11520  006DCA  0E00               	movlw	0
 11521  006DCC  6ECC               	movwf	204,c	;volatile
 11522  006DCE                     
 11523                           ;timer.c: 32:     T2CONbits.TMR2ON = 1;
 11524  006DCE  84CA               	bsf	202,2,c	;volatile
 11525  006DD0                     
 11526                           ;timer.c: 33:     T2CONbits.T2CKPS0 = 1;
 11527  006DD0  80CA               	bsf	202,0,c	;volatile
 11528  006DD2                     
 11529                           ;timer.c: 34:     T2CONbits.T2CKPS1 = 1;
 11530  006DD2  82CA               	bsf	202,1,c	;volatile
 11531  006DD4                     
 11532                           ;timer.c: 36:     PR2 = (uint8_t) (((pwm_period / (4*t_osc*tmr2_prescaler)) - 1)*4);
 11533  006DD4  0E00               	movlw	0
 11534  006DD6  6E63               	movwf	___fladd@a^0,c
 11535  006DD8  0E00               	movlw	0
 11536  006DDA  6E64               	movwf	(___fladd@a+1)^0,c
 11537  006DDC  0E80               	movlw	128
 11538  006DDE  6E65               	movwf	(___fladd@a+2)^0,c
 11539  006DE0  0EBF               	movlw	191
 11540  006DE2  6E66               	movwf	(___fladd@a+3)^0,c
 11541  006DE4  0EBD               	movlw	189
 11542  006DE6  6E31               	movwf	___flmul@a^0,c
 11543  006DE8  0E37               	movlw	55
 11544  006DEA  6E32               	movwf	(___flmul@a+1)^0,c
 11545  006DEC  0E86               	movlw	134
 11546  006DEE  6E33               	movwf	(___flmul@a+2)^0,c
 11547  006DF0  0E36               	movlw	54
 11548  006DF2  6E34               	movwf	(___flmul@a+3)^0,c
 11549  006DF4  C0EE  F02D         	movff	_tmr2_prescaler,___flmul@b
 11550  006DF8  C0EF  F02E         	movff	_tmr2_prescaler+1,___flmul@b+1
 11551  006DFC  C0F0  F02F         	movff	_tmr2_prescaler+2,___flmul@b+2
 11552  006E00  C0F1  F030         	movff	_tmr2_prescaler+3,___flmul@b+3
 11553  006E04  EC82  F011         	call	___flmul	;wreg free
 11554  006E08  C02D  F04A         	movff	?___flmul,___fldiv@a
 11555  006E0C  C02E  F04B         	movff	?___flmul+1,___fldiv@a+1
 11556  006E10  C02F  F04C         	movff	?___flmul+2,___fldiv@a+2
 11557  006E14  C030  F04D         	movff	?___flmul+3,___fldiv@a+3
 11558  006E18  0E0A               	movlw	10
 11559  006E1A  6E46               	movwf	___fldiv@b^0,c
 11560  006E1C  0ED7               	movlw	215
 11561  006E1E  6E47               	movwf	(___fldiv@b+1)^0,c
 11562  006E20  0EA3               	movlw	163
 11563  006E22  6E48               	movwf	(___fldiv@b+2)^0,c
 11564  006E24  0E3C               	movlw	60
 11565  006E26  6E49               	movwf	(___fldiv@b+3)^0,c
 11566  006E28  ECD4  F013         	call	___fldiv	;wreg free
 11567  006E2C  C046  F05F         	movff	?___fldiv,___fladd@b
 11568  006E30  C047  F060         	movff	?___fldiv+1,___fladd@b+1
 11569  006E34  C048  F061         	movff	?___fldiv+2,___fladd@b+2
 11570  006E38  C049  F062         	movff	?___fldiv+3,___fladd@b+3
 11571  006E3C  ECAE  F00E         	call	___fladd	;wreg free
 11572  006E40  C05F  F0D4         	movff	?___fladd,_init_timer_2$2165
 11573  006E44  C060  F0D5         	movff	?___fladd+1,_init_timer_2$2165+1
 11574  006E48  C061  F0D6         	movff	?___fladd+2,_init_timer_2$2165+2
 11575  006E4C  C062  F0D7         	movff	?___fladd+3,_init_timer_2$2165+3
 11576  006E50                     
 11577                           ;timer.c: 36:     PR2 = (uint8_t) (((pwm_period / (4*t_osc*tmr2_prescaler)) - 1)*4);
 11578  006E50  0E00               	movlw	0
 11579  006E52  6E31               	movwf	___flmul@a^0,c
 11580  006E54  0E00               	movlw	0
 11581  006E56  6E32               	movwf	(___flmul@a+1)^0,c
 11582  006E58  0E80               	movlw	128
 11583  006E5A  6E33               	movwf	(___flmul@a+2)^0,c
 11584  006E5C  0E40               	movlw	64
 11585  006E5E  6E34               	movwf	(___flmul@a+3)^0,c
 11586  006E60  C0D4  F02D         	movff	_init_timer_2$2165,___flmul@b
 11587  006E64  C0D5  F02E         	movff	_init_timer_2$2165+1,___flmul@b+1
 11588  006E68  C0D6  F02F         	movff	_init_timer_2$2165+2,___flmul@b+2
 11589  006E6C  C0D7  F030         	movff	_init_timer_2$2165+3,___flmul@b+3
 11590  006E70  EC82  F011         	call	___flmul	;wreg free
 11591  006E74  C02D  F0CA         	movff	?___flmul,___fltol@f1
 11592  006E78  C02E  F0CB         	movff	?___flmul+1,___fltol@f1+1
 11593  006E7C  C02F  F0CC         	movff	?___flmul+2,___fltol@f1+2
 11594  006E80  C030  F0CD         	movff	?___flmul+3,___fltol@f1+3
 11595  006E84  EC92  F03B         	call	___fltol	;wreg free
 11596  006E88  0100               	movlb	0	; () banked
 11597  006E8A  51CA               	movf	?___fltol& (0+255),w,b
 11598  006E8C  6ECB               	movwf	203,c	;volatile
 11599  006E8E                     
 11600                           ; BSR set to: 0
 11601  006E8E  0012               	return		;funcret
 11602  006E90  FFFF               	dw	65535	; errata NOP
 11603  006E92                     __end_of_init_timer_2:
 11604                           	callstack 0
 11605                           
 11606 ;; *************** function _init_timer_0 *****************
 11607 ;; Defined at:
 11608 ;;		line 11 in file "timer.c"
 11609 ;; Parameters:    Size  Location     Type
 11610 ;;		None
 11611 ;; Auto vars:     Size  Location     Type
 11612 ;;		None
 11613 ;; Return value:  Size  Location     Type
 11614 ;;                  1    wreg      void 
 11615 ;; Registers used:
 11616 ;;		wreg, status,2
 11617 ;; Tracked objects:
 11618 ;;		On entry : 0/0
 11619 ;;		On exit  : 0/0
 11620 ;;		Unchanged: 0/0
 11621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11622 ;;      Params:         0       0       0       0       0       0       0
 11623 ;;      Locals:         0       0       0       0       0       0       0
 11624 ;;      Temps:          0       0       0       0       0       0       0
 11625 ;;      Totals:         0       0       0       0       0       0       0
 11626 ;;Total ram usage:        0 bytes
 11627 ;; Hardware stack levels used:    1
 11628 ;; Hardware stack levels required when called:    1
 11629 ;; This function calls:
 11630 ;;		Nothing
 11631 ;; This function is called by:
 11632 ;;		_main
 11633 ;; This function uses a non-reentrant model
 11634 ;;
 11635                           
 11636                           	psect	text43
 11637  0062C0                     __ptext43:
 11638                           	callstack 0
 11639  0062C0                     _init_timer_0:
 11640                           	callstack 0
 11641  0062C0  FFFF               	dw	65535	; assembler added errata NOP
 11642  0062C2                     
 11643                           ;timer.c: 13:     T0CON = 0;
 11644  0062C2  0E00               	movlw	0
 11645  0062C4  6ED5               	movwf	213,c	;volatile
 11646                           
 11647                           ;timer.c: 15:     TMR0L = 0x96;
 11648  0062C6  0E96               	movlw	150
 11649  0062C8  6ED6               	movwf	214,c	;volatile
 11650                           
 11651                           ;timer.c: 16:     TMR0H = 0x98;
 11652  0062CA  0E98               	movlw	152
 11653  0062CC  6ED7               	movwf	215,c	;volatile
 11654  0062CE                     
 11655                           ;timer.c: 17:     INTCONbits.TMR0IE = 1;
 11656  0062CE  8AF2               	bsf	242,5,c	;volatile
 11657  0062D0                     
 11658                           ;timer.c: 18:     T0CONbits.T08BIT = 0;
 11659  0062D0  9CD5               	bcf	213,6,c	;volatile
 11660  0062D2                     
 11661                           ;timer.c: 19:     T0CONbits.T0CS = 0;
 11662  0062D2  9AD5               	bcf	213,5,c	;volatile
 11663  0062D4                     
 11664                           ;timer.c: 20:     T0CONbits.PSA = 0;
 11665  0062D4  96D5               	bcf	213,3,c	;volatile
 11666  0062D6                     
 11667                           ;timer.c: 21:     T0CONbits.T0PS0 = 1;
 11668  0062D6  80D5               	bsf	213,0,c	;volatile
 11669  0062D8                     
 11670                           ;timer.c: 22:     T0CONbits.T0PS1 = 1;
 11671  0062D8  82D5               	bsf	213,1,c	;volatile
 11672  0062DA                     
 11673                           ;timer.c: 23:     T0CONbits.T0PS2 = 1;
 11674  0062DA  84D5               	bsf	213,2,c	;volatile
 11675  0062DC                     
 11676                           ;timer.c: 24:     T0CONbits.TMR0ON = 1;
 11677  0062DC  8ED5               	bsf	213,7,c	;volatile
 11678  0062DE  0012               	return		;funcret
 11679  0062E0  FFFF               	dw	65535	; errata NOP
 11680  0062E2                     __end_of_init_timer_0:
 11681                           	callstack 0
 11682                           
 11683 ;; *************** function _init_stepper *****************
 11684 ;; Defined at:
 11685 ;;		line 4 in file "stepper_motor.c"
 11686 ;; Parameters:    Size  Location     Type
 11687 ;;  stepper_moto    2    0[COMRAM] PTR struct .
 11688 ;;		 -> joint_dilutor_stepper(12), end_effector_stepper(12), joint_stepper(12), 
 11689 ;;  current_coil    2    2[COMRAM] int 
 11690 ;;  step_counter    2    4[COMRAM] int 
 11691 ;;  direction       2    6[COMRAM] int 
 11692 ;;  hex_coil_reg    2    8[COMRAM] PTR unsigned char 
 11693 ;;		 -> hex_end_effector_values(4), hex_joint_values(4), 
 11694 ;;  register_nam    2   10[COMRAM] PTR volatile unsigned ch
 11695 ;;		 -> LATC(1), LATB(1), 
 11696 ;; Auto vars:     Size  Location     Type
 11697 ;;  i               2   14[COMRAM] int 
 11698 ;; Return value:  Size  Location     Type
 11699 ;;                  1    wreg      void 
 11700 ;; Registers used:
 11701 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11702 ;; Tracked objects:
 11703 ;;		On entry : 0/0
 11704 ;;		On exit  : 0/0
 11705 ;;		Unchanged: 0/0
 11706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11707 ;;      Params:        12       0       0       0       0       0       0
 11708 ;;      Locals:         2       0       0       0       0       0       0
 11709 ;;      Temps:          2       0       0       0       0       0       0
 11710 ;;      Totals:        16       0       0       0       0       0       0
 11711 ;;Total ram usage:       16 bytes
 11712 ;; Hardware stack levels used:    1
 11713 ;; Hardware stack levels required when called:    1
 11714 ;; This function calls:
 11715 ;;		Nothing
 11716 ;; This function is called by:
 11717 ;;		_main
 11718 ;; This function uses a non-reentrant model
 11719 ;;
 11720                           
 11721                           	psect	text44
 11722  006C58                     __ptext44:
 11723                           	callstack 0
 11724  006C58                     _init_stepper:
 11725                           	callstack 0
 11726  006C58  FFFF               	dw	65535	; assembler added errata NOP
 11727  006C5A                     
 11728                           ;stepper_motor.c: 5:     for (int i = 0; i < 4; i++) {
 11729  006C5A  0E00               	movlw	0
 11730  006C5C  6E10               	movwf	(init_stepper@i+1)^0,c
 11731  006C5E  0E00               	movlw	0
 11732  006C60  6E0F               	movwf	init_stepper@i^0,c
 11733  006C62                     l5437:
 11734  006C62  FFFF               	dw	65535	; assembler added errata NOP
 11735                           
 11736                           ;stepper_motor.c: 6:        stepper_motor -> hex_coil_register_values[i] = hex_coil_regi
      +                          ster_values[i];
 11737  006C64  500F               	movf	init_stepper@i^0,w,c
 11738  006C66  2409               	addwf	init_stepper@hex_coil_register_values^0,w,c
 11739  006C68  6ED9               	movwf	fsr2l,c
 11740  006C6A  5010               	movf	(init_stepper@i+1)^0,w,c
 11741  006C6C  200A               	addwfc	(init_stepper@hex_coil_register_values+1)^0,w,c
 11742  006C6E  6EDA               	movwf	fsr2h,c
 11743  006C70  500F               	movf	init_stepper@i^0,w,c
 11744  006C72  2401               	addwf	init_stepper@stepper_motor^0,w,c
 11745  006C74  6E0D               	movwf	??_init_stepper^0,c
 11746  006C76  5010               	movf	(init_stepper@i+1)^0,w,c
 11747  006C78  2002               	addwfc	(init_stepper@stepper_motor+1)^0,w,c
 11748  006C7A  6E0E               	movwf	(??_init_stepper+1)^0,c
 11749  006C7C  0E06               	movlw	6
 11750  006C7E  240D               	addwf	??_init_stepper^0,w,c
 11751  006C80  6EE1               	movwf	fsr1l,c
 11752  006C82  0E00               	movlw	0
 11753  006C84  200E               	addwfc	(??_init_stepper+1)^0,w,c
 11754  006C86  6EE2               	movwf	fsr1h,c
 11755  006C88  CFDF FFE7          	movff	indf2,indf1
 11756  006C8C                     
 11757                           ;stepper_motor.c: 7:     }
 11758  006C8C  4A0F               	infsnz	init_stepper@i^0,f,c
 11759  006C8E  2A10               	incf	(init_stepper@i+1)^0,f,c
 11760  006C90  BE10               	btfsc	(init_stepper@i+1)^0,7,c
 11761  006C92  EF54  F036         	goto	u6641
 11762  006C96  5010               	movf	(init_stepper@i+1)^0,w,c
 11763  006C98  E10A               	bnz	u6640
 11764  006C9A  0E04               	movlw	4
 11765  006C9C  5C0F               	subwf	init_stepper@i^0,w,c
 11766  006C9E  A0D8               	btfss	status,0,c
 11767  006CA0  EF54  F036         	goto	u6641
 11768  006CA4  EF57  F036         	goto	u6640
 11769  006CA8                     u6641:
 11770  006CA8  FFFF               	dw	65535	; assembler added errata NOP
 11771  006CAA  EF31  F036         	goto	l5437
 11772  006CAE                     u6640:
 11773  006CAE  FFFF               	dw	65535	; assembler added errata NOP
 11774  006CB0                     
 11775                           ;stepper_motor.c: 8:     stepper_motor -> current_coil = current_coil;
 11776  006CB0  C001  FFD9         	movff	init_stepper@stepper_motor,fsr2l
 11777  006CB4  C002  FFDA         	movff	init_stepper@stepper_motor+1,fsr2h
 11778  006CB8  C003  FFDE         	movff	init_stepper@current_coil,postinc2
 11779  006CBC  C004  FFDD         	movff	init_stepper@current_coil+1,postdec2
 11780  006CC0                     
 11781                           ;stepper_motor.c: 9:     stepper_motor -> step_counter = step_counter;
 11782  006CC0  EE20 F002          	lfsr	2,2
 11783  006CC4  5001               	movf	init_stepper@stepper_motor^0,w,c
 11784  006CC6  26D9               	addwf	fsr2l,f,c
 11785  006CC8  5002               	movf	(init_stepper@stepper_motor+1)^0,w,c
 11786  006CCA  22DA               	addwfc	fsr2h,f,c
 11787  006CCC  C005  FFDE         	movff	init_stepper@step_counter,postinc2
 11788  006CD0  C006  FFDD         	movff	init_stepper@step_counter+1,postdec2
 11789  006CD4                     
 11790                           ;stepper_motor.c: 10:     stepper_motor -> direction = direction;
 11791  006CD4  EE20 F004          	lfsr	2,4
 11792  006CD8  5001               	movf	init_stepper@stepper_motor^0,w,c
 11793  006CDA  26D9               	addwf	fsr2l,f,c
 11794  006CDC  5002               	movf	(init_stepper@stepper_motor+1)^0,w,c
 11795  006CDE  22DA               	addwfc	fsr2h,f,c
 11796  006CE0  C007  FFDE         	movff	init_stepper@direction,postinc2
 11797  006CE4  C008  FFDD         	movff	init_stepper@direction+1,postdec2
 11798  006CE8                     
 11799                           ;stepper_motor.c: 11:     stepper_motor -> register_name = register_name;
 11800  006CE8  EE20 F00A          	lfsr	2,10
 11801  006CEC  5001               	movf	init_stepper@stepper_motor^0,w,c
 11802  006CEE  26D9               	addwf	fsr2l,f,c
 11803  006CF0  5002               	movf	(init_stepper@stepper_motor+1)^0,w,c
 11804  006CF2  22DA               	addwfc	fsr2h,f,c
 11805  006CF4  C00B  FFDE         	movff	init_stepper@register_name,postinc2
 11806  006CF8  C00C  FFDD         	movff	init_stepper@register_name+1,postdec2
 11807  006CFC  0012               	return		;funcret
 11808  006CFE  FFFF               	dw	65535	; errata NOP
 11809  006D00                     __end_of_init_stepper:
 11810                           	callstack 0
 11811                           
 11812 ;; *************** function _init_interrupts *****************
 11813 ;; Defined at:
 11814 ;;		line 80 in file "init_PIC.c"
 11815 ;; Parameters:    Size  Location     Type
 11816 ;;		None
 11817 ;; Auto vars:     Size  Location     Type
 11818 ;;		None
 11819 ;; Return value:  Size  Location     Type
 11820 ;;                  1    wreg      void 
 11821 ;; Registers used:
 11822 ;;		None
 11823 ;; Tracked objects:
 11824 ;;		On entry : 0/0
 11825 ;;		On exit  : 0/0
 11826 ;;		Unchanged: 0/0
 11827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11828 ;;      Params:         0       0       0       0       0       0       0
 11829 ;;      Locals:         0       0       0       0       0       0       0
 11830 ;;      Temps:          0       0       0       0       0       0       0
 11831 ;;      Totals:         0       0       0       0       0       0       0
 11832 ;;Total ram usage:        0 bytes
 11833 ;; Hardware stack levels used:    1
 11834 ;; Hardware stack levels required when called:    1
 11835 ;; This function calls:
 11836 ;;		Nothing
 11837 ;; This function is called by:
 11838 ;;		_main
 11839 ;; This function uses a non-reentrant model
 11840 ;;
 11841                           
 11842                           	psect	text45
 11843  006210                     __ptext45:
 11844                           	callstack 0
 11845  006210                     _init_interrupts:
 11846                           	callstack 0
 11847  006210  FFFF               	dw	65535	; assembler added errata NOP
 11848  006212                     
 11849                           ;init_PIC.c: 82:     PIR1bits.RCIF = 0;
 11850  006212  9A9E               	bcf	158,5,c	;volatile
 11851                           
 11852                           ;init_PIC.c: 83:     PIE1bits.RCIE = 1;
 11853  006214  8A9D               	bsf	157,5,c	;volatile
 11854                           
 11855                           ;init_PIC.c: 84:     INTCONbits.PEIE = 1;
 11856  006216  8CF2               	bsf	242,6,c	;volatile
 11857  006218  0012               	return		;funcret
 11858  00621A  FFFF               	dw	65535	; errata NOP
 11859  00621C                     __end_of_init_interrupts:
 11860                           	callstack 0
 11861                           
 11862 ;; *************** function _init_ccp1 *****************
 11863 ;; Defined at:
 11864 ;;		line 41 in file "timer.c"
 11865 ;; Parameters:    Size  Location     Type
 11866 ;;		None
 11867 ;; Auto vars:     Size  Location     Type
 11868 ;;		None
 11869 ;; Return value:  Size  Location     Type
 11870 ;;                  1    wreg      void 
 11871 ;; Registers used:
 11872 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11873 ;; Tracked objects:
 11874 ;;		On entry : 0/0
 11875 ;;		On exit  : 0/0
 11876 ;;		Unchanged: 0/0
 11877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11878 ;;      Params:         0       0       0       0       0       0       0
 11879 ;;      Locals:         0       0       0       0       0       0       0
 11880 ;;      Temps:          0       0       0       0       0       0       0
 11881 ;;      Totals:         0       0       0       0       0       0       0
 11882 ;;Total ram usage:        0 bytes
 11883 ;; Hardware stack levels used:    1
 11884 ;; Hardware stack levels required when called:    3
 11885 ;; This function calls:
 11886 ;;		_update_pwm_duty_ccp1
 11887 ;; This function is called by:
 11888 ;;		_main
 11889 ;; This function uses a non-reentrant model
 11890 ;;
 11891                           
 11892                           	psect	text46
 11893  0062E2                     __ptext46:
 11894                           	callstack 0
 11895  0062E2                     _init_ccp1:
 11896                           	callstack 0
 11897  0062E2  FFFF               	dw	65535	; assembler added errata NOP
 11898  0062E4                     
 11899                           ;timer.c: 42:     CCP1CON = 0x00;
 11900  0062E4  0E00               	movlw	0
 11901  0062E6  6EBD               	movwf	189,c	;volatile
 11902  0062E8                     
 11903                           ;timer.c: 45:     update_pwm_duty_ccp1(5e-3);
 11904  0062E8  0E0A               	movlw	10
 11905  0062EA  0100               	movlb	0	; () banked
 11906  0062EC  6FD4               	movwf	update_pwm_duty_ccp1@time_up& (0+255),b
 11907  0062EE  0ED7               	movlw	215
 11908  0062F0  6FD5               	movwf	(update_pwm_duty_ccp1@time_up+1)& (0+255),b
 11909  0062F2  0EA3               	movlw	163
 11910  0062F4  6FD6               	movwf	(update_pwm_duty_ccp1@time_up+2)& (0+255),b
 11911  0062F6  0E3B               	movlw	59
 11912  0062F8  6FD7               	movwf	(update_pwm_duty_ccp1@time_up+3)& (0+255),b
 11913  0062FA  EC80  F036         	call	_update_pwm_duty_ccp1	;wreg free
 11914  0062FE                     
 11915                           ;timer.c: 48:     CCP1CONbits.CCP1M3 = 1;
 11916  0062FE  86BD               	bsf	189,3,c	;volatile
 11917  006300                     
 11918                           ;timer.c: 49:     CCP1CONbits.CCP1M2 = 1;
 11919  006300  84BD               	bsf	189,2,c	;volatile
 11920  006302  0012               	return		;funcret
 11921  006304  FFFF               	dw	65535	; errata NOP
 11922  006306                     __end_of_init_ccp1:
 11923                           	callstack 0
 11924                           
 11925 ;; *************** function _update_pwm_duty_ccp1 *****************
 11926 ;; Defined at:
 11927 ;;		line 53 in file "timer.c"
 11928 ;; Parameters:    Size  Location     Type
 11929 ;;  time_up         4   28[BANK0 ] void 
 11930 ;; Auto vars:     Size  Location     Type
 11931 ;;  new_duty        2   34[BANK0 ] unsigned short 
 11932 ;;  lsbs_duty       1   36[BANK0 ] unsigned char 
 11933 ;; Return value:  Size  Location     Type
 11934 ;;                  1    wreg      void 
 11935 ;; Registers used:
 11936 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11937 ;; Tracked objects:
 11938 ;;		On entry : 0/0
 11939 ;;		On exit  : 0/0
 11940 ;;		Unchanged: 0/0
 11941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11942 ;;      Params:         0       4       0       0       0       0       0
 11943 ;;      Locals:         0       3       0       0       0       0       0
 11944 ;;      Temps:          0       2       0       0       0       0       0
 11945 ;;      Totals:         0       9       0       0       0       0       0
 11946 ;;Total ram usage:        9 bytes
 11947 ;; Hardware stack levels used:    1
 11948 ;; Hardware stack levels required when called:    2
 11949 ;; This function calls:
 11950 ;;		___fldiv
 11951 ;;		___flmul
 11952 ;;		___fltol
 11953 ;; This function is called by:
 11954 ;;		_init_ccp1
 11955 ;; This function uses a non-reentrant model
 11956 ;;
 11957                           
 11958                           	psect	text47
 11959  006D00                     __ptext47:
 11960                           	callstack 0
 11961  006D00                     _update_pwm_duty_ccp1:
 11962                           	callstack 0
 11963  006D00  FFFF               	dw	65535	; assembler added errata NOP
 11964  006D02                     
 11965                           ;timer.c: 56:     uint16_t new_duty;;timer.c: 57:     uint8_t lsbs_duty;;timer.c: 59:   
      +                            new_duty = (0.001) / (t_osc * tmr2_prescaler);
 11966  006D02  0EBD               	movlw	189
 11967  006D04  6E31               	movwf	___flmul@a^0,c
 11968  006D06  0E37               	movlw	55
 11969  006D08  6E32               	movwf	(___flmul@a+1)^0,c
 11970  006D0A  0E86               	movlw	134
 11971  006D0C  6E33               	movwf	(___flmul@a+2)^0,c
 11972  006D0E  0E35               	movlw	53
 11973  006D10  6E34               	movwf	(___flmul@a+3)^0,c
 11974  006D12  C0EE  F02D         	movff	_tmr2_prescaler,___flmul@b
 11975  006D16  C0EF  F02E         	movff	_tmr2_prescaler+1,___flmul@b+1
 11976  006D1A  C0F0  F02F         	movff	_tmr2_prescaler+2,___flmul@b+2
 11977  006D1E  C0F1  F030         	movff	_tmr2_prescaler+3,___flmul@b+3
 11978  006D22  EC82  F011         	call	___flmul	;wreg free
 11979  006D26  C02D  F04A         	movff	?___flmul,___fldiv@a
 11980  006D2A  C02E  F04B         	movff	?___flmul+1,___fldiv@a+1
 11981  006D2E  C02F  F04C         	movff	?___flmul+2,___fldiv@a+2
 11982  006D32  C030  F04D         	movff	?___flmul+3,___fldiv@a+3
 11983  006D36  0E6F               	movlw	111
 11984  006D38  6E46               	movwf	___fldiv@b^0,c
 11985  006D3A  0E12               	movlw	18
 11986  006D3C  6E47               	movwf	(___fldiv@b+1)^0,c
 11987  006D3E  0E83               	movlw	131
 11988  006D40  6E48               	movwf	(___fldiv@b+2)^0,c
 11989  006D42  0E3A               	movlw	58
 11990  006D44  6E49               	movwf	(___fldiv@b+3)^0,c
 11991  006D46  ECD4  F013         	call	___fldiv	;wreg free
 11992  006D4A  C046  F0CA         	movff	?___fldiv,___fltol@f1
 11993  006D4E  C047  F0CB         	movff	?___fldiv+1,___fltol@f1+1
 11994  006D52  C048  F0CC         	movff	?___fldiv+2,___fltol@f1+2
 11995  006D56  C049  F0CD         	movff	?___fldiv+3,___fltol@f1+3
 11996  006D5A  EC92  F03B         	call	___fltol	;wreg free
 11997  006D5E  C0CA  F0DA         	movff	?___fltol,update_pwm_duty_ccp1@new_duty
 11998  006D62  C0CB  F0DB         	movff	?___fltol+1,update_pwm_duty_ccp1@new_duty+1
 11999  006D66                     
 12000                           ;timer.c: 60:     lsbs_duty = (uint8_t) new_duty;
 12001  006D66  C0DA  F0DC         	movff	update_pwm_duty_ccp1@new_duty,update_pwm_duty_ccp1@lsbs_duty
 12002  006D6A                     
 12003                           ;timer.c: 64:     if (lsbs_duty & 0x01) CCP1CON |= (1u << 4);
 12004  006D6A  0100               	movlb	0	; () banked
 12005  006D6C  A1DC               	btfss	update_pwm_duty_ccp1@lsbs_duty& (0+255),0,b
 12006  006D6E  EFBB  F036         	goto	u6481
 12007  006D72  EFBE  F036         	goto	u6480
 12008  006D76                     u6481:
 12009  006D76  FFFF               	dw	65535	; assembler added errata NOP
 12010  006D78  EFC2  F036         	goto	l5273
 12011  006D7C                     u6480:
 12012  006D7C  FFFF               	dw	65535	; assembler added errata NOP
 12013  006D7E                     
 12014                           ; BSR set to: 0
 12015  006D7E  88BD               	bsf	189,4,c	;volatile
 12016  006D80  EFC4  F036         	goto	l5275
 12017  006D84                     l5273:
 12018  006D84  FFFF               	dw	65535	; assembler added errata NOP
 12019                           
 12020                           ; BSR set to: 0
 12021  006D86  98BD               	bcf	189,4,c	;volatile
 12022  006D88                     l5275:
 12023  006D88  FFFF               	dw	65535	; assembler added errata NOP
 12024                           
 12025                           ; BSR set to: 0
 12026                           ;timer.c: 67:     if (lsbs_duty & 0x02) CCP1CON |= (1u << 5);
 12027  006D8A  A3DC               	btfss	update_pwm_duty_ccp1@lsbs_duty& (0+255),1,b
 12028  006D8C  EFCA  F036         	goto	u6491
 12029  006D90  EFCD  F036         	goto	u6490
 12030  006D94                     u6491:
 12031  006D94  FFFF               	dw	65535	; assembler added errata NOP
 12032  006D96  EFD1  F036         	goto	l5279
 12033  006D9A                     u6490:
 12034  006D9A  FFFF               	dw	65535	; assembler added errata NOP
 12035  006D9C                     
 12036                           ; BSR set to: 0
 12037  006D9C  8ABD               	bsf	189,5,c	;volatile
 12038  006D9E  EFD3  F036         	goto	l5281
 12039  006DA2                     l5279:
 12040  006DA2  FFFF               	dw	65535	; assembler added errata NOP
 12041                           
 12042                           ; BSR set to: 0
 12043  006DA4  9ABD               	bcf	189,5,c	;volatile
 12044  006DA6                     l5281:
 12045  006DA6  FFFF               	dw	65535	; assembler added errata NOP
 12046                           
 12047                           ; BSR set to: 0
 12048                           ;timer.c: 71:     CCPR1L = (uint8_t) (new_duty >> 2);
 12049  006DA8  C0DA  F0D8         	movff	update_pwm_duty_ccp1@new_duty,??_update_pwm_duty_ccp1
 12050  006DAC  C0DB  F0D9         	movff	update_pwm_duty_ccp1@new_duty+1,??_update_pwm_duty_ccp1+1
 12051  006DB0  90D8               	bcf	status,0,c
 12052  006DB2  33D9               	rrcf	(??_update_pwm_duty_ccp1+1)& (0+255),f,b
 12053  006DB4  33D8               	rrcf	??_update_pwm_duty_ccp1& (0+255),f,b
 12054  006DB6  90D8               	bcf	status,0,c
 12055  006DB8  33D9               	rrcf	(??_update_pwm_duty_ccp1+1)& (0+255),f,b
 12056  006DBA  33D8               	rrcf	??_update_pwm_duty_ccp1& (0+255),f,b
 12057  006DBC  51D8               	movf	??_update_pwm_duty_ccp1& (0+255),w,b
 12058  006DBE  6EBE               	movwf	190,c	;volatile
 12059  006DC0                     
 12060                           ; BSR set to: 0
 12061  006DC0  0012               	return		;funcret
 12062  006DC2  FFFF               	dw	65535	; errata NOP
 12063  006DC4                     __end_of_update_pwm_duty_ccp1:
 12064                           	callstack 0
 12065                           
 12066 ;; *************** function ___fldiv *****************
 12067 ;; Defined at:
 12068 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
 12069 ;; Parameters:    Size  Location     Type
 12070 ;;  b               4   69[COMRAM] void 
 12071 ;;  a               4   73[COMRAM] void 
 12072 ;; Auto vars:     Size  Location     Type
 12073 ;;  grs             4   88[COMRAM] unsigned long 
 12074 ;;  rem             4   81[COMRAM] unsigned long 
 12075 ;;  new_exp         2   86[COMRAM] short 
 12076 ;;  aexp            1   93[COMRAM] unsigned char 
 12077 ;;  bexp            1   92[COMRAM] unsigned char 
 12078 ;;  sign            1   85[COMRAM] unsigned char 
 12079 ;; Return value:  Size  Location     Type
 12080 ;;                  4   69[COMRAM] unsigned char 
 12081 ;; Registers used:
 12082 ;;		wreg, status,2, status,0
 12083 ;; Tracked objects:
 12084 ;;		On entry : 0/0
 12085 ;;		On exit  : 0/0
 12086 ;;		Unchanged: 0/0
 12087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12088 ;;      Params:         8       0       0       0       0       0       0
 12089 ;;      Locals:        13       0       0       0       0       0       0
 12090 ;;      Temps:          4       0       0       0       0       0       0
 12091 ;;      Totals:        25       0       0       0       0       0       0
 12092 ;;Total ram usage:       25 bytes
 12093 ;; Hardware stack levels used:    1
 12094 ;; Hardware stack levels required when called:    1
 12095 ;; This function calls:
 12096 ;;		Nothing
 12097 ;; This function is called by:
 12098 ;;		_init_timer_2
 12099 ;;		_update_pwm_duty_ccp1
 12100 ;; This function uses a non-reentrant model
 12101 ;;
 12102                           
 12103                           	psect	text48
 12104  0027A8                     __ptext48:
 12105                           	callstack 0
 12106  0027A8                     ___fldiv:
 12107                           	callstack 0
 12108  0027A8  FFFF               	dw	65535	; assembler added errata NOP
 12109  0027AA  5049               	movf	(___fldiv@b+3)^0,w,c
 12110  0027AC  0B80               	andlw	128
 12111  0027AE  6E56               	movwf	___fldiv@sign^0,c
 12112  0027B0  5049               	movf	(___fldiv@b+3)^0,w,c
 12113  0027B2  2449               	addwf	(___fldiv@b+3)^0,w,c
 12114  0027B4  6E5D               	movwf	___fldiv@bexp^0,c
 12115  0027B6  AE48               	btfss	(___fldiv@b+2)^0,7,c
 12116  0027B8  EFE0  F013         	goto	u5721
 12117  0027BC  EFE3  F013         	goto	u5720
 12118  0027C0                     u5721:
 12119  0027C0  FFFF               	dw	65535	; assembler added errata NOP
 12120  0027C2  EFE5  F013         	goto	l4801
 12121  0027C6                     u5720:
 12122  0027C6  FFFF               	dw	65535	; assembler added errata NOP
 12123  0027C8  805D               	bsf	___fldiv@bexp^0,0,c
 12124  0027CA                     l4801:
 12125  0027CA  FFFF               	dw	65535	; assembler added errata NOP
 12126  0027CC  505D               	movf	___fldiv@bexp^0,w,c
 12127  0027CE  B4D8               	btfsc	status,2,c
 12128  0027D0  EFEC  F013         	goto	u5731
 12129  0027D4  EFEF  F013         	goto	u5730
 12130  0027D8                     u5731:
 12131  0027D8  FFFF               	dw	65535	; assembler added errata NOP
 12132  0027DA  EF08  F014         	goto	l4811
 12133  0027DE                     u5730:
 12134  0027DE  FFFF               	dw	65535	; assembler added errata NOP
 12135  0027E0  285D               	incf	___fldiv@bexp^0,w,c
 12136  0027E2  A4D8               	btfss	status,2,c
 12137  0027E4  EFF6  F013         	goto	u5741
 12138  0027E8  EFF9  F013         	goto	u5740
 12139  0027EC                     u5741:
 12140  0027EC  FFFF               	dw	65535	; assembler added errata NOP
 12141  0027EE  EF02  F014         	goto	l4807
 12142  0027F2                     u5740:
 12143  0027F2  FFFF               	dw	65535	; assembler added errata NOP
 12144  0027F4  0E00               	movlw	0
 12145  0027F6  6E46               	movwf	___fldiv@b^0,c
 12146  0027F8  0E00               	movlw	0
 12147  0027FA  6E47               	movwf	(___fldiv@b+1)^0,c
 12148  0027FC  0E00               	movlw	0
 12149  0027FE  6E48               	movwf	(___fldiv@b+2)^0,c
 12150  002800  0E00               	movlw	0
 12151  002802  6E49               	movwf	(___fldiv@b+3)^0,c
 12152  002804                     l4807:
 12153  002804  FFFF               	dw	65535	; assembler added errata NOP
 12154  002806  8E48               	bsf	(___fldiv@b+2)^0,7,c
 12155  002808  0E00               	movlw	0
 12156  00280A  6E49               	movwf	(___fldiv@b+3)^0,c
 12157  00280C  EF11  F014         	goto	l4813
 12158  002810                     l4811:
 12159  002810  FFFF               	dw	65535	; assembler added errata NOP
 12160  002812  0E00               	movlw	0
 12161  002814  6E46               	movwf	___fldiv@b^0,c
 12162  002816  0E00               	movlw	0
 12163  002818  6E47               	movwf	(___fldiv@b+1)^0,c
 12164  00281A  0E00               	movlw	0
 12165  00281C  6E48               	movwf	(___fldiv@b+2)^0,c
 12166  00281E  0E00               	movlw	0
 12167  002820  6E49               	movwf	(___fldiv@b+3)^0,c
 12168  002822                     l4813:
 12169  002822  FFFF               	dw	65535	; assembler added errata NOP
 12170  002824  504D               	movf	(___fldiv@a+3)^0,w,c
 12171  002826  0B80               	andlw	128
 12172  002828  1A56               	xorwf	___fldiv@sign^0,f,c
 12173  00282A  504D               	movf	(___fldiv@a+3)^0,w,c
 12174  00282C  244D               	addwf	(___fldiv@a+3)^0,w,c
 12175  00282E  6E5E               	movwf	___fldiv@aexp^0,c
 12176  002830  AE4C               	btfss	(___fldiv@a+2)^0,7,c
 12177  002832  EF1D  F014         	goto	u5751
 12178  002836  EF20  F014         	goto	u5750
 12179  00283A                     u5751:
 12180  00283A  FFFF               	dw	65535	; assembler added errata NOP
 12181  00283C  EF22  F014         	goto	l4821
 12182  002840                     u5750:
 12183  002840  FFFF               	dw	65535	; assembler added errata NOP
 12184  002842  805E               	bsf	___fldiv@aexp^0,0,c
 12185  002844                     l4821:
 12186  002844  FFFF               	dw	65535	; assembler added errata NOP
 12187  002846  505E               	movf	___fldiv@aexp^0,w,c
 12188  002848  B4D8               	btfsc	status,2,c
 12189  00284A  EF29  F014         	goto	u5761
 12190  00284E  EF2C  F014         	goto	u5760
 12191  002852                     u5761:
 12192  002852  FFFF               	dw	65535	; assembler added errata NOP
 12193  002854  EF45  F014         	goto	l4831
 12194  002858                     u5760:
 12195  002858  FFFF               	dw	65535	; assembler added errata NOP
 12196  00285A  285E               	incf	___fldiv@aexp^0,w,c
 12197  00285C  A4D8               	btfss	status,2,c
 12198  00285E  EF33  F014         	goto	u5771
 12199  002862  EF36  F014         	goto	u5770
 12200  002866                     u5771:
 12201  002866  FFFF               	dw	65535	; assembler added errata NOP
 12202  002868  EF3F  F014         	goto	l4827
 12203  00286C                     u5770:
 12204  00286C  FFFF               	dw	65535	; assembler added errata NOP
 12205  00286E  0E00               	movlw	0
 12206  002870  6E4A               	movwf	___fldiv@a^0,c
 12207  002872  0E00               	movlw	0
 12208  002874  6E4B               	movwf	(___fldiv@a+1)^0,c
 12209  002876  0E00               	movlw	0
 12210  002878  6E4C               	movwf	(___fldiv@a+2)^0,c
 12211  00287A  0E00               	movlw	0
 12212  00287C  6E4D               	movwf	(___fldiv@a+3)^0,c
 12213  00287E                     l4827:
 12214  00287E  FFFF               	dw	65535	; assembler added errata NOP
 12215  002880  8E4C               	bsf	(___fldiv@a+2)^0,7,c
 12216  002882  0E00               	movlw	0
 12217  002884  6E4D               	movwf	(___fldiv@a+3)^0,c
 12218  002886  EF4E  F014         	goto	l4833
 12219  00288A                     l4831:
 12220  00288A  FFFF               	dw	65535	; assembler added errata NOP
 12221  00288C  0E00               	movlw	0
 12222  00288E  6E4A               	movwf	___fldiv@a^0,c
 12223  002890  0E00               	movlw	0
 12224  002892  6E4B               	movwf	(___fldiv@a+1)^0,c
 12225  002894  0E00               	movlw	0
 12226  002896  6E4C               	movwf	(___fldiv@a+2)^0,c
 12227  002898  0E00               	movlw	0
 12228  00289A  6E4D               	movwf	(___fldiv@a+3)^0,c
 12229  00289C                     l4833:
 12230  00289C  FFFF               	dw	65535	; assembler added errata NOP
 12231  00289E  504A               	movf	___fldiv@a^0,w,c
 12232  0028A0  104B               	iorwf	(___fldiv@a+1)^0,w,c
 12233  0028A2  104C               	iorwf	(___fldiv@a+2)^0,w,c
 12234  0028A4  104D               	iorwf	(___fldiv@a+3)^0,w,c
 12235  0028A6  A4D8               	btfss	status,2,c
 12236  0028A8  EF58  F014         	goto	u5781
 12237  0028AC  EF5B  F014         	goto	u5780
 12238  0028B0                     u5781:
 12239  0028B0  FFFF               	dw	65535	; assembler added errata NOP
 12240  0028B2  EF75  F014         	goto	l4845
 12241  0028B6                     u5780:
 12242  0028B6  FFFF               	dw	65535	; assembler added errata NOP
 12243  0028B8  0E00               	movlw	0
 12244  0028BA  6E46               	movwf	___fldiv@b^0,c
 12245  0028BC  0E00               	movlw	0
 12246  0028BE  6E47               	movwf	(___fldiv@b+1)^0,c
 12247  0028C0  0E00               	movlw	0
 12248  0028C2  6E48               	movwf	(___fldiv@b+2)^0,c
 12249  0028C4  0E00               	movlw	0
 12250  0028C6  6E49               	movwf	(___fldiv@b+3)^0,c
 12251  0028C8  0E80               	movlw	128
 12252  0028CA  1248               	iorwf	(___fldiv@b+2)^0,f,c
 12253  0028CC  0E7F               	movlw	127
 12254  0028CE  1249               	iorwf	(___fldiv@b+3)^0,f,c
 12255  0028D0                     l4839:
 12256  0028D0  FFFF               	dw	65535	; assembler added errata NOP
 12257  0028D2  5056               	movf	___fldiv@sign^0,w,c
 12258  0028D4  1249               	iorwf	(___fldiv@b+3)^0,f,c
 12259  0028D6  C046  F046         	movff	___fldiv@b,?___fldiv
 12260  0028DA  C047  F047         	movff	___fldiv@b+1,?___fldiv+1
 12261  0028DE  C048  F048         	movff	___fldiv@b+2,?___fldiv+2
 12262  0028E2  C049  F049         	movff	___fldiv@b+3,?___fldiv+3
 12263  0028E6  EFEA  F015         	goto	l1009
 12264  0028EA                     l4845:
 12265  0028EA  FFFF               	dw	65535	; assembler added errata NOP
 12266  0028EC  505D               	movf	___fldiv@bexp^0,w,c
 12267  0028EE  A4D8               	btfss	status,2,c
 12268  0028F0  EF7C  F014         	goto	u5791
 12269  0028F4  EF7F  F014         	goto	u5790
 12270  0028F8                     u5791:
 12271  0028F8  FFFF               	dw	65535	; assembler added errata NOP
 12272  0028FA  EF8A  F014         	goto	l4853
 12273  0028FE                     u5790:
 12274  0028FE  FFFF               	dw	65535	; assembler added errata NOP
 12275  002900  0E00               	movlw	0
 12276  002902  6E46               	movwf	?___fldiv^0,c
 12277  002904  0E00               	movlw	0
 12278  002906  6E47               	movwf	(?___fldiv+1)^0,c
 12279  002908  0E00               	movlw	0
 12280  00290A  6E48               	movwf	(?___fldiv+2)^0,c
 12281  00290C  0E00               	movlw	0
 12282  00290E  6E49               	movwf	(?___fldiv+3)^0,c
 12283  002910  EFEA  F015         	goto	l1009
 12284  002914                     l4853:
 12285  002914  FFFF               	dw	65535	; assembler added errata NOP
 12286  002916  505E               	movf	___fldiv@aexp^0,w,c
 12287  002918  C05D  F04E         	movff	___fldiv@bexp,??___fldiv
 12288  00291C  6A4F               	clrf	(??___fldiv+1)^0,c
 12289  00291E  5E4E               	subwf	??___fldiv^0,f,c
 12290  002920  0E00               	movlw	0
 12291  002922  5A4F               	subwfb	(??___fldiv+1)^0,f,c
 12292  002924  0E7F               	movlw	127
 12293  002926  244E               	addwf	??___fldiv^0,w,c
 12294  002928  6E57               	movwf	___fldiv@new_exp^0,c
 12295  00292A  0E00               	movlw	0
 12296  00292C  204F               	addwfc	(??___fldiv+1)^0,w,c
 12297  00292E  6E58               	movwf	(___fldiv@new_exp+1)^0,c
 12298  002930  C046  F052         	movff	___fldiv@b,___fldiv@rem
 12299  002934  C047  F053         	movff	___fldiv@b+1,___fldiv@rem+1
 12300  002938  C048  F054         	movff	___fldiv@b+2,___fldiv@rem+2
 12301  00293C  C049  F055         	movff	___fldiv@b+3,___fldiv@rem+3
 12302  002940  0E00               	movlw	0
 12303  002942  6E46               	movwf	___fldiv@b^0,c
 12304  002944  0E00               	movlw	0
 12305  002946  6E47               	movwf	(___fldiv@b+1)^0,c
 12306  002948  0E00               	movlw	0
 12307  00294A  6E48               	movwf	(___fldiv@b+2)^0,c
 12308  00294C  0E00               	movlw	0
 12309  00294E  6E49               	movwf	(___fldiv@b+3)^0,c
 12310  002950  0E00               	movlw	0
 12311  002952  6E59               	movwf	___fldiv@grs^0,c
 12312  002954  0E00               	movlw	0
 12313  002956  6E5A               	movwf	(___fldiv@grs+1)^0,c
 12314  002958  0E00               	movlw	0
 12315  00295A  6E5B               	movwf	(___fldiv@grs+2)^0,c
 12316  00295C  0E00               	movlw	0
 12317  00295E  6E5C               	movwf	(___fldiv@grs+3)^0,c
 12318  002960  0E00               	movlw	0
 12319  002962  6E5E               	movwf	___fldiv@aexp^0,c
 12320  002964  EFF6  F014         	goto	l1011
 12321  002968                     l4863:
 12322  002968  FFFF               	dw	65535	; assembler added errata NOP
 12323  00296A  505E               	movf	___fldiv@aexp^0,w,c
 12324  00296C  B4D8               	btfsc	status,2,c
 12325  00296E  EFBB  F014         	goto	u5801
 12326  002972  EFBE  F014         	goto	u5800
 12327  002976                     u5801:
 12328  002976  FFFF               	dw	65535	; assembler added errata NOP
 12329  002978  EFD9  F014         	goto	l4871
 12330  00297C                     u5800:
 12331  00297C  FFFF               	dw	65535	; assembler added errata NOP
 12332  00297E  90D8               	bcf	status,0,c
 12333  002980  3652               	rlcf	___fldiv@rem^0,f,c
 12334  002982  3653               	rlcf	(___fldiv@rem+1)^0,f,c
 12335  002984  3654               	rlcf	(___fldiv@rem+2)^0,f,c
 12336  002986  3655               	rlcf	(___fldiv@rem+3)^0,f,c
 12337  002988  90D8               	bcf	status,0,c
 12338  00298A  3646               	rlcf	___fldiv@b^0,f,c
 12339  00298C  3647               	rlcf	(___fldiv@b+1)^0,f,c
 12340  00298E  3648               	rlcf	(___fldiv@b+2)^0,f,c
 12341  002990  3649               	rlcf	(___fldiv@b+3)^0,f,c
 12342  002992  AE5C               	btfss	(___fldiv@grs+3)^0,7,c
 12343  002994  EFCE  F014         	goto	u5811
 12344  002998  EFD1  F014         	goto	u5810
 12345  00299C                     u5811:
 12346  00299C  FFFF               	dw	65535	; assembler added errata NOP
 12347  00299E  EFD3  F014         	goto	l1014
 12348  0029A2                     u5810:
 12349  0029A2  FFFF               	dw	65535	; assembler added errata NOP
 12350  0029A4  8046               	bsf	___fldiv@b^0,0,c
 12351  0029A6                     l1014:
 12352  0029A6  FFFF               	dw	65535	; assembler added errata NOP
 12353  0029A8  90D8               	bcf	status,0,c
 12354  0029AA  3659               	rlcf	___fldiv@grs^0,f,c
 12355  0029AC  365A               	rlcf	(___fldiv@grs+1)^0,f,c
 12356  0029AE  365B               	rlcf	(___fldiv@grs+2)^0,f,c
 12357  0029B0  365C               	rlcf	(___fldiv@grs+3)^0,f,c
 12358  0029B2                     l4871:
 12359  0029B2  FFFF               	dw	65535	; assembler added errata NOP
 12360  0029B4  504A               	movf	___fldiv@a^0,w,c
 12361  0029B6  5C52               	subwf	___fldiv@rem^0,w,c
 12362  0029B8  504B               	movf	(___fldiv@a+1)^0,w,c
 12363  0029BA  5853               	subwfb	(___fldiv@rem+1)^0,w,c
 12364  0029BC  504C               	movf	(___fldiv@a+2)^0,w,c
 12365  0029BE  5854               	subwfb	(___fldiv@rem+2)^0,w,c
 12366  0029C0  504D               	movf	(___fldiv@a+3)^0,w,c
 12367  0029C2  5855               	subwfb	(___fldiv@rem+3)^0,w,c
 12368  0029C4  A0D8               	btfss	status,0,c
 12369  0029C6  EFE7  F014         	goto	u5821
 12370  0029CA  EFEA  F014         	goto	u5820
 12371  0029CE                     u5821:
 12372  0029CE  FFFF               	dw	65535	; assembler added errata NOP
 12373  0029D0  EFF4  F014         	goto	l4877
 12374  0029D4                     u5820:
 12375  0029D4  FFFF               	dw	65535	; assembler added errata NOP
 12376  0029D6  8C5C               	bsf	(___fldiv@grs+3)^0,6,c
 12377  0029D8  504A               	movf	___fldiv@a^0,w,c
 12378  0029DA  5E52               	subwf	___fldiv@rem^0,f,c
 12379  0029DC  504B               	movf	(___fldiv@a+1)^0,w,c
 12380  0029DE  5A53               	subwfb	(___fldiv@rem+1)^0,f,c
 12381  0029E0  504C               	movf	(___fldiv@a+2)^0,w,c
 12382  0029E2  5A54               	subwfb	(___fldiv@rem+2)^0,f,c
 12383  0029E4  504D               	movf	(___fldiv@a+3)^0,w,c
 12384  0029E6  5A55               	subwfb	(___fldiv@rem+3)^0,f,c
 12385  0029E8                     l4877:
 12386  0029E8  FFFF               	dw	65535	; assembler added errata NOP
 12387  0029EA  2A5E               	incf	___fldiv@aexp^0,f,c
 12388  0029EC                     l1011:
 12389  0029EC  FFFF               	dw	65535	; assembler added errata NOP
 12390  0029EE  0E19               	movlw	25
 12391  0029F0  645E               	cpfsgt	___fldiv@aexp^0,c
 12392  0029F2  EFFD  F014         	goto	u5831
 12393  0029F6  EF00  F015         	goto	u5830
 12394  0029FA                     u5831:
 12395  0029FA  FFFF               	dw	65535	; assembler added errata NOP
 12396  0029FC  EFB4  F014         	goto	l4863
 12397  002A00                     u5830:
 12398  002A00  FFFF               	dw	65535	; assembler added errata NOP
 12399  002A02  5052               	movf	___fldiv@rem^0,w,c
 12400  002A04  1053               	iorwf	(___fldiv@rem+1)^0,w,c
 12401  002A06  1054               	iorwf	(___fldiv@rem+2)^0,w,c
 12402  002A08  1055               	iorwf	(___fldiv@rem+3)^0,w,c
 12403  002A0A  B4D8               	btfsc	status,2,c
 12404  002A0C  EF0A  F015         	goto	u5841
 12405  002A10  EF0D  F015         	goto	u5840
 12406  002A14                     u5841:
 12407  002A14  FFFF               	dw	65535	; assembler added errata NOP
 12408  002A16  EF2A  F015         	goto	l4889
 12409  002A1A                     u5840:
 12410  002A1A  FFFF               	dw	65535	; assembler added errata NOP
 12411  002A1C  8059               	bsf	___fldiv@grs^0,0,c
 12412  002A1E  EF2A  F015         	goto	l4889
 12413  002A22                     l4883:
 12414  002A22  FFFF               	dw	65535	; assembler added errata NOP
 12415  002A24  90D8               	bcf	status,0,c
 12416  002A26  3646               	rlcf	___fldiv@b^0,f,c
 12417  002A28  3647               	rlcf	(___fldiv@b+1)^0,f,c
 12418  002A2A  3648               	rlcf	(___fldiv@b+2)^0,f,c
 12419  002A2C  3649               	rlcf	(___fldiv@b+3)^0,f,c
 12420  002A2E  AE5C               	btfss	(___fldiv@grs+3)^0,7,c
 12421  002A30  EF1C  F015         	goto	u5851
 12422  002A34  EF1F  F015         	goto	u5850
 12423  002A38                     u5851:
 12424  002A38  FFFF               	dw	65535	; assembler added errata NOP
 12425  002A3A  EF21  F015         	goto	l1020
 12426  002A3E                     u5850:
 12427  002A3E  FFFF               	dw	65535	; assembler added errata NOP
 12428  002A40  8046               	bsf	___fldiv@b^0,0,c
 12429  002A42                     l1020:
 12430  002A42  FFFF               	dw	65535	; assembler added errata NOP
 12431  002A44  90D8               	bcf	status,0,c
 12432  002A46  3659               	rlcf	___fldiv@grs^0,f,c
 12433  002A48  365A               	rlcf	(___fldiv@grs+1)^0,f,c
 12434  002A4A  365B               	rlcf	(___fldiv@grs+2)^0,f,c
 12435  002A4C  365C               	rlcf	(___fldiv@grs+3)^0,f,c
 12436  002A4E  0657               	decf	___fldiv@new_exp^0,f,c
 12437  002A50  A0D8               	btfss	status,0,c
 12438  002A52  0658               	decf	(___fldiv@new_exp+1)^0,f,c
 12439  002A54                     l4889:
 12440  002A54  FFFF               	dw	65535	; assembler added errata NOP
 12441  002A56  AE48               	btfss	(___fldiv@b+2)^0,7,c
 12442  002A58  EF30  F015         	goto	u5861
 12443  002A5C  EF33  F015         	goto	u5860
 12444  002A60                     u5861:
 12445  002A60  FFFF               	dw	65535	; assembler added errata NOP
 12446  002A62  EF11  F015         	goto	l4883
 12447  002A66                     u5860:
 12448  002A66  FFFF               	dw	65535	; assembler added errata NOP
 12449  002A68  0E00               	movlw	0
 12450  002A6A  6E5E               	movwf	___fldiv@aexp^0,c
 12451  002A6C  AE5C               	btfss	(___fldiv@grs+3)^0,7,c
 12452  002A6E  EF3B  F015         	goto	u5871
 12453  002A72  EF3E  F015         	goto	u5870
 12454  002A76                     u5871:
 12455  002A76  FFFF               	dw	65535	; assembler added errata NOP
 12456  002A78  EF69  F015         	goto	l1022
 12457  002A7C                     u5870:
 12458  002A7C  FFFF               	dw	65535	; assembler added errata NOP
 12459  002A7E  0EFF               	movlw	255
 12460  002A80  1459               	andwf	___fldiv@grs^0,w,c
 12461  002A82  6E4E               	movwf	??___fldiv^0,c
 12462  002A84  0EFF               	movlw	255
 12463  002A86  145A               	andwf	(___fldiv@grs+1)^0,w,c
 12464  002A88  6E4F               	movwf	(??___fldiv+1)^0,c
 12465  002A8A  0EFF               	movlw	255
 12466  002A8C  145B               	andwf	(___fldiv@grs+2)^0,w,c
 12467  002A8E  6E50               	movwf	(??___fldiv+2)^0,c
 12468  002A90  0E7F               	movlw	127
 12469  002A92  145C               	andwf	(___fldiv@grs+3)^0,w,c
 12470  002A94  6E51               	movwf	(??___fldiv+3)^0,c
 12471  002A96  504E               	movf	??___fldiv^0,w,c
 12472  002A98  104F               	iorwf	(??___fldiv+1)^0,w,c
 12473  002A9A  1050               	iorwf	(??___fldiv+2)^0,w,c
 12474  002A9C  1051               	iorwf	(??___fldiv+3)^0,w,c
 12475  002A9E  B4D8               	btfsc	status,2,c
 12476  002AA0  EF54  F015         	goto	u5881
 12477  002AA4  EF57  F015         	goto	u5880
 12478  002AA8                     u5881:
 12479  002AA8  FFFF               	dw	65535	; assembler added errata NOP
 12480  002AAA  EF5D  F015         	goto	l1023
 12481  002AAE                     u5880:
 12482  002AAE  FFFF               	dw	65535	; assembler added errata NOP
 12483  002AB0                     l4897:
 12484  002AB0  FFFF               	dw	65535	; assembler added errata NOP
 12485  002AB2  0E01               	movlw	1
 12486  002AB4  6E5E               	movwf	___fldiv@aexp^0,c
 12487  002AB6  EF69  F015         	goto	l1022
 12488  002ABA                     l1023:
 12489  002ABA  FFFF               	dw	65535	; assembler added errata NOP
 12490  002ABC  A046               	btfss	___fldiv@b^0,0,c
 12491  002ABE  EF63  F015         	goto	u5891
 12492  002AC2  EF66  F015         	goto	u5890
 12493  002AC6                     u5891:
 12494  002AC6  FFFF               	dw	65535	; assembler added errata NOP
 12495  002AC8  EF69  F015         	goto	l1022
 12496  002ACC                     u5890:
 12497  002ACC  FFFF               	dw	65535	; assembler added errata NOP
 12498  002ACE  EF58  F015         	goto	l4897
 12499  002AD2                     l1022:
 12500  002AD2  FFFF               	dw	65535	; assembler added errata NOP
 12501  002AD4  505E               	movf	___fldiv@aexp^0,w,c
 12502  002AD6  B4D8               	btfsc	status,2,c
 12503  002AD8  EF70  F015         	goto	u5901
 12504  002ADC  EF73  F015         	goto	u5900
 12505  002AE0                     u5901:
 12506  002AE0  FFFF               	dw	65535	; assembler added errata NOP
 12507  002AE2  EF9A  F015         	goto	l4909
 12508  002AE6                     u5900:
 12509  002AE6  FFFF               	dw	65535	; assembler added errata NOP
 12510  002AE8  0E01               	movlw	1
 12511  002AEA  2646               	addwf	___fldiv@b^0,f,c
 12512  002AEC  0E00               	movlw	0
 12513  002AEE  2247               	addwfc	(___fldiv@b+1)^0,f,c
 12514  002AF0  2248               	addwfc	(___fldiv@b+2)^0,f,c
 12515  002AF2  2249               	addwfc	(___fldiv@b+3)^0,f,c
 12516  002AF4  A049               	btfss	(___fldiv@b+3)^0,0,c
 12517  002AF6  EF7F  F015         	goto	u5911
 12518  002AFA  EF82  F015         	goto	u5910
 12519  002AFE                     u5911:
 12520  002AFE  FFFF               	dw	65535	; assembler added errata NOP
 12521  002B00  EF9A  F015         	goto	l4909
 12522  002B04                     u5910:
 12523  002B04  FFFF               	dw	65535	; assembler added errata NOP
 12524  002B06  C046  F04E         	movff	___fldiv@b,??___fldiv
 12525  002B0A  C047  F04F         	movff	___fldiv@b+1,??___fldiv+1
 12526  002B0E  C048  F050         	movff	___fldiv@b+2,??___fldiv+2
 12527  002B12  C049  F051         	movff	___fldiv@b+3,??___fldiv+3
 12528  002B16  3451               	rlcf	(??___fldiv+3)^0,w,c
 12529  002B18  3251               	rrcf	(??___fldiv+3)^0,f,c
 12530  002B1A  3250               	rrcf	(??___fldiv+2)^0,f,c
 12531  002B1C  324F               	rrcf	(??___fldiv+1)^0,f,c
 12532  002B1E  324E               	rrcf	??___fldiv^0,f,c
 12533  002B20  C04E  F046         	movff	??___fldiv,___fldiv@b
 12534  002B24  C04F  F047         	movff	??___fldiv+1,___fldiv@b+1
 12535  002B28  C050  F048         	movff	??___fldiv+2,___fldiv@b+2
 12536  002B2C  C051  F049         	movff	??___fldiv+3,___fldiv@b+3
 12537  002B30  4A57               	infsnz	___fldiv@new_exp^0,f,c
 12538  002B32  2A58               	incf	(___fldiv@new_exp+1)^0,f,c
 12539  002B34                     l4909:
 12540  002B34  FFFF               	dw	65535	; assembler added errata NOP
 12541  002B36  BE58               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12542  002B38  EFA6  F015         	goto	u5921
 12543  002B3C  5058               	movf	(___fldiv@new_exp+1)^0,w,c
 12544  002B3E  E109               	bnz	u5920
 12545  002B40  2857               	incf	___fldiv@new_exp^0,w,c
 12546  002B42  A0D8               	btfss	status,0,c
 12547  002B44  EFA6  F015         	goto	u5921
 12548  002B48  EFA9  F015         	goto	u5920
 12549  002B4C                     u5921:
 12550  002B4C  FFFF               	dw	65535	; assembler added errata NOP
 12551  002B4E  EFB5  F015         	goto	l4913
 12552  002B52                     u5920:
 12553  002B52  FFFF               	dw	65535	; assembler added errata NOP
 12554  002B54  0E00               	movlw	0
 12555  002B56  6E58               	movwf	(___fldiv@new_exp+1)^0,c
 12556  002B58  6857               	setf	___fldiv@new_exp^0,c
 12557  002B5A  0E00               	movlw	0
 12558  002B5C  6E46               	movwf	___fldiv@b^0,c
 12559  002B5E  0E00               	movlw	0
 12560  002B60  6E47               	movwf	(___fldiv@b+1)^0,c
 12561  002B62  0E00               	movlw	0
 12562  002B64  6E48               	movwf	(___fldiv@b+2)^0,c
 12563  002B66  0E00               	movlw	0
 12564  002B68  6E49               	movwf	(___fldiv@b+3)^0,c
 12565  002B6A                     l4913:
 12566  002B6A  FFFF               	dw	65535	; assembler added errata NOP
 12567  002B6C  BE58               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12568  002B6E  EFC4  F015         	goto	u5930
 12569  002B72  5058               	movf	(___fldiv@new_exp+1)^0,w,c
 12570  002B74  E106               	bnz	u5931
 12571  002B76  0457               	decf	___fldiv@new_exp^0,w,c
 12572  002B78  B0D8               	btfsc	status,0,c
 12573  002B7A  EFC1  F015         	goto	u5931
 12574  002B7E  EFC4  F015         	goto	u5930
 12575  002B82                     u5931:
 12576  002B82  FFFF               	dw	65535	; assembler added errata NOP
 12577  002B84  EFD3  F015         	goto	l4917
 12578  002B88                     u5930:
 12579  002B88  FFFF               	dw	65535	; assembler added errata NOP
 12580  002B8A  0E00               	movlw	0
 12581  002B8C  6E58               	movwf	(___fldiv@new_exp+1)^0,c
 12582  002B8E  0E00               	movlw	0
 12583  002B90  6E57               	movwf	___fldiv@new_exp^0,c
 12584  002B92  0E00               	movlw	0
 12585  002B94  6E46               	movwf	___fldiv@b^0,c
 12586  002B96  0E00               	movlw	0
 12587  002B98  6E47               	movwf	(___fldiv@b+1)^0,c
 12588  002B9A  0E00               	movlw	0
 12589  002B9C  6E48               	movwf	(___fldiv@b+2)^0,c
 12590  002B9E  0E00               	movlw	0
 12591  002BA0  6E49               	movwf	(___fldiv@b+3)^0,c
 12592  002BA2  0E00               	movlw	0
 12593  002BA4  6E56               	movwf	___fldiv@sign^0,c
 12594  002BA6                     l4917:
 12595  002BA6  FFFF               	dw	65535	; assembler added errata NOP
 12596  002BA8  C057  F05D         	movff	___fldiv@new_exp,___fldiv@bexp
 12597  002BAC  A05D               	btfss	___fldiv@bexp^0,0,c
 12598  002BAE  EFDB  F015         	goto	u5941
 12599  002BB2  EFDE  F015         	goto	u5940
 12600  002BB6                     u5941:
 12601  002BB6  FFFF               	dw	65535	; assembler added errata NOP
 12602  002BB8  EFE2  F015         	goto	l4923
 12603  002BBC                     u5940:
 12604  002BBC  FFFF               	dw	65535	; assembler added errata NOP
 12605  002BBE  8E48               	bsf	(___fldiv@b+2)^0,7,c
 12606  002BC0  EFE4  F015         	goto	l4925
 12607  002BC4                     l4923:
 12608  002BC4  FFFF               	dw	65535	; assembler added errata NOP
 12609  002BC6  9E48               	bcf	(___fldiv@b+2)^0,7,c
 12610  002BC8                     l4925:
 12611  002BC8  FFFF               	dw	65535	; assembler added errata NOP
 12612  002BCA  90D8               	bcf	status,0,c
 12613  002BCC  305D               	rrcf	___fldiv@bexp^0,w,c
 12614  002BCE  6E49               	movwf	(___fldiv@b+3)^0,c
 12615  002BD0  EF68  F014         	goto	l4839
 12616  002BD4                     l1009:
 12617  002BD4  FFFF               	dw	65535	; assembler added errata NOP
 12618  002BD6  0012               	return		;funcret
 12619  002BD8  FFFF               	dw	65535	; errata NOP
 12620  002BDA                     __end_of___fldiv:
 12621                           	callstack 0
 12622                           
 12623 ;; *************** function _init_USART *****************
 12624 ;; Defined at:
 12625 ;;		line 13 in file "serial_rs232.c"
 12626 ;; Parameters:    Size  Location     Type
 12627 ;;		None
 12628 ;; Auto vars:     Size  Location     Type
 12629 ;;		None
 12630 ;; Return value:  Size  Location     Type
 12631 ;;                  1    wreg      void 
 12632 ;; Registers used:
 12633 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12634 ;; Tracked objects:
 12635 ;;		On entry : 0/0
 12636 ;;		On exit  : 0/0
 12637 ;;		Unchanged: 0/0
 12638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12639 ;;      Params:         0       0       0       0       0       0       0
 12640 ;;      Locals:         0       0       0       0       0       0       0
 12641 ;;      Temps:          0       0       0       0       0       0       0
 12642 ;;      Totals:         0       0       0       0       0       0       0
 12643 ;;Total ram usage:        0 bytes
 12644 ;; Hardware stack levels used:    1
 12645 ;; Hardware stack levels required when called:    4
 12646 ;; This function calls:
 12647 ;;		___fltol
 12648 ;;		_roundf
 12649 ;; This function is called by:
 12650 ;;		_main
 12651 ;; This function uses a non-reentrant model
 12652 ;;
 12653                           
 12654                           	psect	text49
 12655  006484                     __ptext49:
 12656                           	callstack 0
 12657  006484                     _init_USART:
 12658                           	callstack 0
 12659  006484  FFFF               	dw	65535	; assembler added errata NOP
 12660  006486                     
 12661                           ;serial_rs232.c: 24:     SPBRG = roundf(((fosc / desired_baudrate) / 16) - 1);
 12662  006486  0E55               	movlw	85
 12663  006488  6E77               	movwf	roundf@x^0,c
 12664  00648A  0E55               	movlw	85
 12665  00648C  6E78               	movwf	(roundf@x+1)^0,c
 12666  00648E  0EC8               	movlw	200
 12667  006490  6E79               	movwf	(roundf@x+2)^0,c
 12668  006492  0E41               	movlw	65
 12669  006494  6E7A               	movwf	(roundf@x+3)^0,c
 12670  006496  ECED  F015         	call	_roundf	;wreg free
 12671  00649A  C077  F0CA         	movff	?_roundf,___fltol@f1
 12672  00649E  C078  F0CB         	movff	?_roundf+1,___fltol@f1+1
 12673  0064A2  C079  F0CC         	movff	?_roundf+2,___fltol@f1+2
 12674  0064A6  C07A  F0CD         	movff	?_roundf+3,___fltol@f1+3
 12675  0064AA  EC92  F03B         	call	___fltol	;wreg free
 12676  0064AE  0100               	movlb	0	; () banked
 12677  0064B0  51CA               	movf	?___fltol& (0+255),w,b
 12678  0064B2  6EAF               	movwf	175,c	;volatile
 12679  0064B4                     
 12680                           ; BSR set to: 0
 12681                           ;serial_rs232.c: 28:     TXSTAbits.TX9 = 0;
 12682  0064B4  9CAC               	bcf	172,6,c	;volatile
 12683  0064B6                     
 12684                           ; BSR set to: 0
 12685                           ;serial_rs232.c: 29:     TXSTAbits.TXEN = 1;
 12686  0064B6  8AAC               	bsf	172,5,c	;volatile
 12687  0064B8                     
 12688                           ; BSR set to: 0
 12689                           ;serial_rs232.c: 30:     TXSTAbits.SYNC =0;
 12690  0064B8  98AC               	bcf	172,4,c	;volatile
 12691  0064BA                     
 12692                           ; BSR set to: 0
 12693                           ;serial_rs232.c: 31:     TXSTAbits.BRGH = 1;
 12694  0064BA  84AC               	bsf	172,2,c	;volatile
 12695  0064BC                     
 12696                           ; BSR set to: 0
 12697                           ;serial_rs232.c: 33:     RCSTAbits.SPEN = 1;
 12698  0064BC  8EAB               	bsf	171,7,c	;volatile
 12699  0064BE                     
 12700                           ; BSR set to: 0
 12701                           ;serial_rs232.c: 34:     RCSTAbits.RX9 = 0;
 12702  0064BE  9CAB               	bcf	171,6,c	;volatile
 12703  0064C0                     
 12704                           ; BSR set to: 0
 12705                           ;serial_rs232.c: 35:     RCSTAbits.CREN = 1;
 12706  0064C0  88AB               	bsf	171,4,c	;volatile
 12707  0064C2                     
 12708                           ; BSR set to: 0
 12709  0064C2  0012               	return		;funcret
 12710  0064C4  FFFF               	dw	65535	; errata NOP
 12711  0064C6                     __end_of_init_USART:
 12712                           	callstack 0
 12713                           
 12714 ;; *************** function _roundf *****************
 12715 ;; Defined at:
 12716 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\roundf.c"
 12717 ;; Parameters:    Size  Location     Type
 12718 ;;  x               4  118[COMRAM] float 
 12719 ;; Auto vars:     Size  Location     Type
 12720 ;;  y               4   14[BANK0 ] float 
 12721 ;;  u               4   10[BANK0 ] struct .
 12722 ;;  e               2    4[BANK0 ] int 
 12723 ;; Return value:  Size  Location     Type
 12724 ;;                  4  118[COMRAM] float 
 12725 ;; Registers used:
 12726 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12727 ;; Tracked objects:
 12728 ;;		On entry : 0/0
 12729 ;;		On exit  : 0/0
 12730 ;;		Unchanged: 0/0
 12731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12732 ;;      Params:         4       0       0       0       0       0       0
 12733 ;;      Locals:         0      18       0       0       0       0       0
 12734 ;;      Temps:          4       0       0       0       0       0       0
 12735 ;;      Totals:         8      18       0       0       0       0       0
 12736 ;;Total ram usage:       26 bytes
 12737 ;; Hardware stack levels used:    1
 12738 ;; Hardware stack levels required when called:    3
 12739 ;; This function calls:
 12740 ;;		___fladd
 12741 ;;		___flge
 12742 ;;		___flmul
 12743 ;;		___flneg
 12744 ;;		___flsub
 12745 ;; This function is called by:
 12746 ;;		_init_USART
 12747 ;; This function uses a non-reentrant model
 12748 ;;
 12749                           
 12750                           	psect	text50
 12751  002BDA                     __ptext50:
 12752                           	callstack 0
 12753  002BDA                     _roundf:
 12754                           	callstack 0
 12755  002BDA  FFFF               	dw	65535	; assembler added errata NOP
 12756  002BDC  C080  F0C2         	movff	roundf@F525,roundf@u
 12757  002BE0  C081  F0C3         	movff	roundf@F525+1,roundf@u+1
 12758  002BE4  C082  F0C4         	movff	roundf@F525+2,roundf@u+2
 12759  002BE8  C083  F0C5         	movff	roundf@F525+3,roundf@u+3
 12760  002BEC  C077  F0C2         	movff	roundf@x,roundf@u
 12761  002BF0  C078  F0C3         	movff	roundf@x+1,roundf@u+1
 12762  002BF4  C079  F0C4         	movff	roundf@x+2,roundf@u+2
 12763  002BF8  C07A  F0C5         	movff	roundf@x+3,roundf@u+3
 12764  002BFC  C0C2  F07B         	movff	roundf@u,??_roundf
 12765  002C00  C0C3  F07C         	movff	roundf@u+1,??_roundf+1
 12766  002C04  C0C4  F07D         	movff	roundf@u+2,??_roundf+2
 12767  002C08  C0C5  F07E         	movff	roundf@u+3,??_roundf+3
 12768  002C0C  0E18               	movlw	24
 12769  002C0E  EF0F  F016         	goto	u6380
 12770  002C12                     u6385:
 12771  002C12  FFFF               	dw	65535	; assembler added errata NOP
 12772  002C14  90D8               	bcf	status,0,c
 12773  002C16  327E               	rrcf	(??_roundf+3)^0,f,c
 12774  002C18  327D               	rrcf	(??_roundf+2)^0,f,c
 12775  002C1A  327C               	rrcf	(??_roundf+1)^0,f,c
 12776  002C1C  327B               	rrcf	??_roundf^0,f,c
 12777  002C1E                     u6380:
 12778  002C1E  FFFF               	dw	65535	; assembler added errata NOP
 12779  002C20  2EE8               	decfsz	wreg,f,c
 12780  002C22  EF09  F016         	goto	u6385
 12781  002C26  507B               	movf	??_roundf^0,w,c
 12782  002C28  0100               	movlb	0	; () banked
 12783  002C2A  6FBC               	movwf	roundf@e& (0+255),b
 12784  002C2C  6BBD               	clrf	(roundf@e+1)& (0+255),b
 12785  002C2E  BFBD               	btfsc	(roundf@e+1)& (0+255),7,b
 12786  002C30  EF23  F016         	goto	u6391
 12787  002C34  51BD               	movf	(roundf@e+1)& (0+255),w,b
 12788  002C36  E10A               	bnz	u6390
 12789  002C38  0E96               	movlw	150
 12790  002C3A  5DBC               	subwf	roundf@e& (0+255),w,b
 12791  002C3C  A0D8               	btfss	status,0,c
 12792  002C3E  EF23  F016         	goto	u6391
 12793  002C42  EF26  F016         	goto	u6390
 12794  002C46                     u6391:
 12795  002C46  FFFF               	dw	65535	; assembler added errata NOP
 12796  002C48  EF31  F016         	goto	l5203
 12797  002C4C                     u6390:
 12798  002C4C  FFFF               	dw	65535	; assembler added errata NOP
 12799  002C4E                     
 12800                           ; BSR set to: 0
 12801  002C4E  C077  F077         	movff	roundf@x,?_roundf
 12802  002C52  C078  F078         	movff	roundf@x+1,?_roundf+1
 12803  002C56  C079  F079         	movff	roundf@x+2,?_roundf+2
 12804  002C5A  C07A  F07A         	movff	roundf@x+3,?_roundf+3
 12805  002C5E  EFDF  F017         	goto	l1113
 12806  002C62                     l5203:
 12807  002C62  FFFF               	dw	65535	; assembler added errata NOP
 12808                           
 12809                           ; BSR set to: 0
 12810  002C64  C0C2  F07B         	movff	roundf@u,??_roundf
 12811  002C68  C0C3  F07C         	movff	roundf@u+1,??_roundf+1
 12812  002C6C  C0C4  F07D         	movff	roundf@u+2,??_roundf+2
 12813  002C70  C0C5  F07E         	movff	roundf@u+3,??_roundf+3
 12814  002C74  0E20               	movlw	32
 12815  002C76  EF43  F016         	goto	u6400
 12816  002C7A                     u6405:
 12817  002C7A  FFFF               	dw	65535	; assembler added errata NOP
 12818  002C7C  90D8               	bcf	status,0,c
 12819  002C7E  327E               	rrcf	(??_roundf+3)^0,f,c
 12820  002C80  327D               	rrcf	(??_roundf+2)^0,f,c
 12821  002C82  327C               	rrcf	(??_roundf+1)^0,f,c
 12822  002C84  327B               	rrcf	??_roundf^0,f,c
 12823  002C86                     u6400:
 12824  002C86  FFFF               	dw	65535	; assembler added errata NOP
 12825  002C88  2EE8               	decfsz	wreg,f,c
 12826  002C8A  EF3D  F016         	goto	u6405
 12827  002C8E  507B               	movf	??_roundf^0,w,c
 12828  002C90  107C               	iorwf	(??_roundf+1)^0,w,c
 12829  002C92  107D               	iorwf	(??_roundf+2)^0,w,c
 12830  002C94  107E               	iorwf	(??_roundf+3)^0,w,c
 12831  002C96  B4D8               	btfsc	status,2,c
 12832  002C98  EF50  F016         	goto	u6411
 12833  002C9C  EF53  F016         	goto	u6410
 12834  002CA0                     u6411:
 12835  002CA0  FFFF               	dw	65535	; assembler added errata NOP
 12836  002CA2  EF66  F016         	goto	l5207
 12837  002CA6                     u6410:
 12838  002CA6  FFFF               	dw	65535	; assembler added errata NOP
 12839  002CA8                     
 12840                           ; BSR set to: 0
 12841  002CA8  C077  F001         	movff	roundf@x,___flneg@f1
 12842  002CAC  C078  F002         	movff	roundf@x+1,___flneg@f1+1
 12843  002CB0  C079  F003         	movff	roundf@x+2,___flneg@f1+2
 12844  002CB4  C07A  F004         	movff	roundf@x+3,___flneg@f1+3
 12845  002CB8  EC21  F032         	call	___flneg	;wreg free
 12846  002CBC  C001  F077         	movff	?___flneg,roundf@x
 12847  002CC0  C002  F078         	movff	?___flneg+1,roundf@x+1
 12848  002CC4  C003  F079         	movff	?___flneg+2,roundf@x+2
 12849  002CC8  C004  F07A         	movff	?___flneg+3,roundf@x+3
 12850  002CCC                     l5207:
 12851  002CCC  FFFF               	dw	65535	; assembler added errata NOP
 12852  002CCE  0100               	movlb	0	; () banked
 12853  002CD0  BFBD               	btfsc	(roundf@e+1)& (0+255),7,b
 12854  002CD2  EF77  F016         	goto	u6420
 12855  002CD6  51BD               	movf	(roundf@e+1)& (0+255),w,b
 12856  002CD8  E107               	bnz	u6421
 12857  002CDA  0E7E               	movlw	126
 12858  002CDC  5DBC               	subwf	roundf@e& (0+255),w,b
 12859  002CDE  B0D8               	btfsc	status,0,c
 12860  002CE0  EF74  F016         	goto	u6421
 12861  002CE4  EF77  F016         	goto	u6420
 12862  002CE8                     u6421:
 12863  002CE8  FFFF               	dw	65535	; assembler added errata NOP
 12864  002CEA  EF94  F016         	goto	l5213
 12865  002CEE                     u6420:
 12866  002CEE  FFFF               	dw	65535	; assembler added errata NOP
 12867  002CF0                     
 12868                           ; BSR set to: 0
 12869  002CF0  C0C2  F02D         	movff	roundf@u,___flmul@b
 12870  002CF4  C0C3  F02E         	movff	roundf@u+1,___flmul@b+1
 12871  002CF8  C0C4  F02F         	movff	roundf@u+2,___flmul@b+2
 12872  002CFC  C0C5  F030         	movff	roundf@u+3,___flmul@b+3
 12873  002D00  0E00               	movlw	0
 12874  002D02  6E31               	movwf	___flmul@a^0,c
 12875  002D04  0E00               	movlw	0
 12876  002D06  6E32               	movwf	(___flmul@a+1)^0,c
 12877  002D08  0E00               	movlw	0
 12878  002D0A  6E33               	movwf	(___flmul@a+2)^0,c
 12879  002D0C  0E00               	movlw	0
 12880  002D0E  6E34               	movwf	(___flmul@a+3)^0,c
 12881  002D10  EC82  F011         	call	___flmul	;wreg free
 12882  002D14  C02D  F077         	movff	?___flmul,?_roundf
 12883  002D18  C02E  F078         	movff	?___flmul+1,?_roundf+1
 12884  002D1C  C02F  F079         	movff	?___flmul+2,?_roundf+2
 12885  002D20  C030  F07A         	movff	?___flmul+3,?_roundf+3
 12886  002D24  EFDF  F017         	goto	l1113
 12887  002D28                     l5213:
 12888  002D28  FFFF               	dw	65535	; assembler added errata NOP
 12889                           
 12890                           ; BSR set to: 0
 12891  002D2A  0E00               	movlw	0
 12892  002D2C  6E63               	movwf	___fladd@a^0,c
 12893  002D2E  0E00               	movlw	0
 12894  002D30  6E64               	movwf	(___fladd@a+1)^0,c
 12895  002D32  0E00               	movlw	0
 12896  002D34  6E65               	movwf	(___fladd@a+2)^0,c
 12897  002D36  0E4B               	movlw	75
 12898  002D38  6E66               	movwf	(___fladd@a+3)^0,c
 12899  002D3A  C077  F05F         	movff	roundf@x,___fladd@b
 12900  002D3E  C078  F060         	movff	roundf@x+1,___fladd@b+1
 12901  002D42  C079  F061         	movff	roundf@x+2,___fladd@b+2
 12902  002D46  C07A  F062         	movff	roundf@x+3,___fladd@b+3
 12903  002D4A  ECAE  F00E         	call	___fladd	;wreg free
 12904  002D4E  C05F  F0BE         	movff	?___fladd,_roundf$2166
 12905  002D52  C060  F0BF         	movff	?___fladd+1,_roundf$2166+1
 12906  002D56  C061  F0C0         	movff	?___fladd+2,_roundf$2166+2
 12907  002D5A  C062  F0C1         	movff	?___fladd+3,_roundf$2166+3
 12908  002D5E  0E00               	movlw	0
 12909  002D60  6E63               	movwf	___fladd@a^0,c
 12910  002D62  0E00               	movlw	0
 12911  002D64  6E64               	movwf	(___fladd@a+1)^0,c
 12912  002D66  0E00               	movlw	0
 12913  002D68  6E65               	movwf	(___fladd@a+2)^0,c
 12914  002D6A  0ECB               	movlw	203
 12915  002D6C  6E66               	movwf	(___fladd@a+3)^0,c
 12916  002D6E  C0BE  F05F         	movff	_roundf$2166,___fladd@b
 12917  002D72  C0BF  F060         	movff	_roundf$2166+1,___fladd@b+1
 12918  002D76  C0C0  F061         	movff	_roundf$2166+2,___fladd@b+2
 12919  002D7A  C0C1  F062         	movff	_roundf$2166+3,___fladd@b+3
 12920  002D7E  ECAE  F00E         	call	___fladd	;wreg free
 12921  002D82  C05F  F0B8         	movff	?___fladd,_roundf$2167
 12922  002D86  C060  F0B9         	movff	?___fladd+1,_roundf$2167+1
 12923  002D8A  C061  F0BA         	movff	?___fladd+2,_roundf$2167+2
 12924  002D8E  C062  F0BB         	movff	?___fladd+3,_roundf$2167+3
 12925  002D92  C0B8  F06F         	movff	_roundf$2167,___flsub@b
 12926  002D96  C0B9  F070         	movff	_roundf$2167+1,___flsub@b+1
 12927  002D9A  C0BA  F071         	movff	_roundf$2167+2,___flsub@b+2
 12928  002D9E  C0BB  F072         	movff	_roundf$2167+3,___flsub@b+3
 12929  002DA2  C077  F073         	movff	roundf@x,___flsub@a
 12930  002DA6  C078  F074         	movff	roundf@x+1,___flsub@a+1
 12931  002DAA  C079  F075         	movff	roundf@x+2,___flsub@a+2
 12932  002DAE  C07A  F076         	movff	roundf@x+3,___flsub@a+3
 12933  002DB2  ECE9  F032         	call	___flsub	;wreg free
 12934  002DB6  C06F  F0C6         	movff	?___flsub,roundf@y
 12935  002DBA  C070  F0C7         	movff	?___flsub+1,roundf@y+1
 12936  002DBE  C071  F0C8         	movff	?___flsub+2,roundf@y+2
 12937  002DC2  C072  F0C9         	movff	?___flsub+3,roundf@y+3
 12938  002DC6  0E00               	movlw	0
 12939  002DC8  6E01               	movwf	___flge@ff1^0,c
 12940  002DCA  0E00               	movlw	0
 12941  002DCC  6E02               	movwf	(___flge@ff1+1)^0,c
 12942  002DCE  0E00               	movlw	0
 12943  002DD0  6E03               	movwf	(___flge@ff1+2)^0,c
 12944  002DD2  0E3F               	movlw	63
 12945  002DD4  6E04               	movwf	(___flge@ff1+3)^0,c
 12946  002DD6  C0C6  F005         	movff	roundf@y,___flge@ff2
 12947  002DDA  C0C7  F006         	movff	roundf@y+1,___flge@ff2+1
 12948  002DDE  C0C8  F007         	movff	roundf@y+2,___flge@ff2+2
 12949  002DE2  C0C9  F008         	movff	roundf@y+3,___flge@ff2+3
 12950  002DE6  ECFE  F03A         	call	___flge	;wreg free
 12951  002DEA  B0D8               	btfsc	status,0,c
 12952  002DEC  EFFA  F016         	goto	u6431
 12953  002DF0  EFFD  F016         	goto	u6430
 12954  002DF4                     u6431:
 12955  002DF4  FFFF               	dw	65535	; assembler added errata NOP
 12956  002DF6  EF34  F017         	goto	l5217
 12957  002DFA                     u6430:
 12958  002DFA  FFFF               	dw	65535	; assembler added errata NOP
 12959  002DFC  C077  F063         	movff	roundf@x,___fladd@a
 12960  002E00  C078  F064         	movff	roundf@x+1,___fladd@a+1
 12961  002E04  C079  F065         	movff	roundf@x+2,___fladd@a+2
 12962  002E08  C07A  F066         	movff	roundf@x+3,___fladd@a+3
 12963  002E0C  C0C6  F05F         	movff	roundf@y,___fladd@b
 12964  002E10  C0C7  F060         	movff	roundf@y+1,___fladd@b+1
 12965  002E14  C0C8  F061         	movff	roundf@y+2,___fladd@b+2
 12966  002E18  C0C9  F062         	movff	roundf@y+3,___fladd@b+3
 12967  002E1C  ECAE  F00E         	call	___fladd	;wreg free
 12968  002E20  C05F  F0BE         	movff	?___fladd,_roundf$2166
 12969  002E24  C060  F0BF         	movff	?___fladd+1,_roundf$2166+1
 12970  002E28  C061  F0C0         	movff	?___fladd+2,_roundf$2166+2
 12971  002E2C  C062  F0C1         	movff	?___fladd+3,_roundf$2166+3
 12972  002E30  C0BE  F05F         	movff	_roundf$2166,___fladd@b
 12973  002E34  C0BF  F060         	movff	_roundf$2166+1,___fladd@b+1
 12974  002E38  C0C0  F061         	movff	_roundf$2166+2,___fladd@b+2
 12975  002E3C  C0C1  F062         	movff	_roundf$2166+3,___fladd@b+3
 12976  002E40  0E00               	movlw	0
 12977  002E42  6E63               	movwf	___fladd@a^0,c
 12978  002E44  0E00               	movlw	0
 12979  002E46  6E64               	movwf	(___fladd@a+1)^0,c
 12980  002E48  0E80               	movlw	128
 12981  002E4A  6E65               	movwf	(___fladd@a+2)^0,c
 12982  002E4C  0EBF               	movlw	191
 12983  002E4E  6E66               	movwf	(___fladd@a+3)^0,c
 12984  002E50  ECAE  F00E         	call	___fladd	;wreg free
 12985  002E54  C05F  F0C6         	movff	?___fladd,roundf@y
 12986  002E58  C060  F0C7         	movff	?___fladd+1,roundf@y+1
 12987  002E5C  C061  F0C8         	movff	?___fladd+2,roundf@y+2
 12988  002E60  C062  F0C9         	movff	?___fladd+3,roundf@y+3
 12989  002E64  EFA1  F017         	goto	l5223
 12990  002E68                     l5217:
 12991  002E68  FFFF               	dw	65535	; assembler added errata NOP
 12992  002E6A  0E00               	movlw	0
 12993  002E6C  6E01               	movwf	___flge@ff1^0,c
 12994  002E6E  0E00               	movlw	0
 12995  002E70  6E02               	movwf	(___flge@ff1+1)^0,c
 12996  002E72  0E00               	movlw	0
 12997  002E74  6E03               	movwf	(___flge@ff1+2)^0,c
 12998  002E76  0EBF               	movlw	191
 12999  002E78  6E04               	movwf	(___flge@ff1+3)^0,c
 13000  002E7A  C0C6  F005         	movff	roundf@y,___flge@ff2
 13001  002E7E  C0C7  F006         	movff	roundf@y+1,___flge@ff2+1
 13002  002E82  C0C8  F007         	movff	roundf@y+2,___flge@ff2+2
 13003  002E86  C0C9  F008         	movff	roundf@y+3,___flge@ff2+3
 13004  002E8A  ECFE  F03A         	call	___flge	;wreg free
 13005  002E8E  A0D8               	btfss	status,0,c
 13006  002E90  EF4C  F017         	goto	u6441
 13007  002E94  EF4F  F017         	goto	u6440
 13008  002E98                     u6441:
 13009  002E98  FFFF               	dw	65535	; assembler added errata NOP
 13010  002E9A  EF86  F017         	goto	l5221
 13011  002E9E                     u6440:
 13012  002E9E  FFFF               	dw	65535	; assembler added errata NOP
 13013  002EA0  C077  F063         	movff	roundf@x,___fladd@a
 13014  002EA4  C078  F064         	movff	roundf@x+1,___fladd@a+1
 13015  002EA8  C079  F065         	movff	roundf@x+2,___fladd@a+2
 13016  002EAC  C07A  F066         	movff	roundf@x+3,___fladd@a+3
 13017  002EB0  C0C6  F05F         	movff	roundf@y,___fladd@b
 13018  002EB4  C0C7  F060         	movff	roundf@y+1,___fladd@b+1
 13019  002EB8  C0C8  F061         	movff	roundf@y+2,___fladd@b+2
 13020  002EBC  C0C9  F062         	movff	roundf@y+3,___fladd@b+3
 13021  002EC0  ECAE  F00E         	call	___fladd	;wreg free
 13022  002EC4  C05F  F0BE         	movff	?___fladd,_roundf$2166
 13023  002EC8  C060  F0BF         	movff	?___fladd+1,_roundf$2166+1
 13024  002ECC  C061  F0C0         	movff	?___fladd+2,_roundf$2166+2
 13025  002ED0  C062  F0C1         	movff	?___fladd+3,_roundf$2166+3
 13026  002ED4  C0BE  F05F         	movff	_roundf$2166,___fladd@b
 13027  002ED8  C0BF  F060         	movff	_roundf$2166+1,___fladd@b+1
 13028  002EDC  C0C0  F061         	movff	_roundf$2166+2,___fladd@b+2
 13029  002EE0  C0C1  F062         	movff	_roundf$2166+3,___fladd@b+3
 13030  002EE4  0E00               	movlw	0
 13031  002EE6  6E63               	movwf	___fladd@a^0,c
 13032  002EE8  0E00               	movlw	0
 13033  002EEA  6E64               	movwf	(___fladd@a+1)^0,c
 13034  002EEC  0E80               	movlw	128
 13035  002EEE  6E65               	movwf	(___fladd@a+2)^0,c
 13036  002EF0  0E3F               	movlw	63
 13037  002EF2  6E66               	movwf	(___fladd@a+3)^0,c
 13038  002EF4  ECAE  F00E         	call	___fladd	;wreg free
 13039  002EF8  C05F  F0C6         	movff	?___fladd,roundf@y
 13040  002EFC  C060  F0C7         	movff	?___fladd+1,roundf@y+1
 13041  002F00  C061  F0C8         	movff	?___fladd+2,roundf@y+2
 13042  002F04  C062  F0C9         	movff	?___fladd+3,roundf@y+3
 13043  002F08  EFA1  F017         	goto	l5223
 13044  002F0C                     l5221:
 13045  002F0C  FFFF               	dw	65535	; assembler added errata NOP
 13046  002F0E  C0C6  F05F         	movff	roundf@y,___fladd@b
 13047  002F12  C0C7  F060         	movff	roundf@y+1,___fladd@b+1
 13048  002F16  C0C8  F061         	movff	roundf@y+2,___fladd@b+2
 13049  002F1A  C0C9  F062         	movff	roundf@y+3,___fladd@b+3
 13050  002F1E  C077  F063         	movff	roundf@x,___fladd@a
 13051  002F22  C078  F064         	movff	roundf@x+1,___fladd@a+1
 13052  002F26  C079  F065         	movff	roundf@x+2,___fladd@a+2
 13053  002F2A  C07A  F066         	movff	roundf@x+3,___fladd@a+3
 13054  002F2E  ECAE  F00E         	call	___fladd	;wreg free
 13055  002F32  C05F  F0C6         	movff	?___fladd,roundf@y
 13056  002F36  C060  F0C7         	movff	?___fladd+1,roundf@y+1
 13057  002F3A  C061  F0C8         	movff	?___fladd+2,roundf@y+2
 13058  002F3E  C062  F0C9         	movff	?___fladd+3,roundf@y+3
 13059  002F42                     l5223:
 13060  002F42  FFFF               	dw	65535	; assembler added errata NOP
 13061  002F44  C0C2  F07B         	movff	roundf@u,??_roundf
 13062  002F48  C0C3  F07C         	movff	roundf@u+1,??_roundf+1
 13063  002F4C  C0C4  F07D         	movff	roundf@u+2,??_roundf+2
 13064  002F50  C0C5  F07E         	movff	roundf@u+3,??_roundf+3
 13065  002F54  0E20               	movlw	32
 13066  002F56  EFB3  F017         	goto	u6450
 13067  002F5A                     u6455:
 13068  002F5A  FFFF               	dw	65535	; assembler added errata NOP
 13069  002F5C  90D8               	bcf	status,0,c
 13070  002F5E  327E               	rrcf	(??_roundf+3)^0,f,c
 13071  002F60  327D               	rrcf	(??_roundf+2)^0,f,c
 13072  002F62  327C               	rrcf	(??_roundf+1)^0,f,c
 13073  002F64  327B               	rrcf	??_roundf^0,f,c
 13074  002F66                     u6450:
 13075  002F66  FFFF               	dw	65535	; assembler added errata NOP
 13076  002F68  2EE8               	decfsz	wreg,f,c
 13077  002F6A  EFAD  F017         	goto	u6455
 13078  002F6E  507B               	movf	??_roundf^0,w,c
 13079  002F70  107C               	iorwf	(??_roundf+1)^0,w,c
 13080  002F72  107D               	iorwf	(??_roundf+2)^0,w,c
 13081  002F74  107E               	iorwf	(??_roundf+3)^0,w,c
 13082  002F76  B4D8               	btfsc	status,2,c
 13083  002F78  EFC0  F017         	goto	u6461
 13084  002F7C  EFC3  F017         	goto	u6460
 13085  002F80                     u6461:
 13086  002F80  FFFF               	dw	65535	; assembler added errata NOP
 13087  002F82  EFD6  F017         	goto	l5227
 13088  002F86                     u6460:
 13089  002F86  FFFF               	dw	65535	; assembler added errata NOP
 13090  002F88  C0C6  F001         	movff	roundf@y,___flneg@f1
 13091  002F8C  C0C7  F002         	movff	roundf@y+1,___flneg@f1+1
 13092  002F90  C0C8  F003         	movff	roundf@y+2,___flneg@f1+2
 13093  002F94  C0C9  F004         	movff	roundf@y+3,___flneg@f1+3
 13094  002F98  EC21  F032         	call	___flneg	;wreg free
 13095  002F9C  C001  F0C6         	movff	?___flneg,roundf@y
 13096  002FA0  C002  F0C7         	movff	?___flneg+1,roundf@y+1
 13097  002FA4  C003  F0C8         	movff	?___flneg+2,roundf@y+2
 13098  002FA8  C004  F0C9         	movff	?___flneg+3,roundf@y+3
 13099  002FAC                     l5227:
 13100  002FAC  FFFF               	dw	65535	; assembler added errata NOP
 13101  002FAE  C0C6  F077         	movff	roundf@y,?_roundf
 13102  002FB2  C0C7  F078         	movff	roundf@y+1,?_roundf+1
 13103  002FB6  C0C8  F079         	movff	roundf@y+2,?_roundf+2
 13104  002FBA  C0C9  F07A         	movff	roundf@y+3,?_roundf+3
 13105  002FBE                     l1113:
 13106  002FBE  FFFF               	dw	65535	; assembler added errata NOP
 13107  002FC0  0012               	return		;funcret
 13108  002FC2  FFFF               	dw	65535	; errata NOP
 13109  002FC4                     __end_of_roundf:
 13110                           	callstack 0
 13111                           
 13112 ;; *************** function ___flsub *****************
 13113 ;; Defined at:
 13114 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
 13115 ;; Parameters:    Size  Location     Type
 13116 ;;  b               4  110[COMRAM] float 
 13117 ;;  a               4  114[COMRAM] float 
 13118 ;; Auto vars:     Size  Location     Type
 13119 ;;		None
 13120 ;; Return value:  Size  Location     Type
 13121 ;;                  4  110[COMRAM] float 
 13122 ;; Registers used:
 13123 ;;		wreg, status,2, status,0, cstack
 13124 ;; Tracked objects:
 13125 ;;		On entry : 0/0
 13126 ;;		On exit  : 0/0
 13127 ;;		Unchanged: 0/0
 13128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13129 ;;      Params:         8       0       0       0       0       0       0
 13130 ;;      Locals:         0       0       0       0       0       0       0
 13131 ;;      Temps:          0       0       0       0       0       0       0
 13132 ;;      Totals:         8       0       0       0       0       0       0
 13133 ;;Total ram usage:        8 bytes
 13134 ;; Hardware stack levels used:    1
 13135 ;; Hardware stack levels required when called:    2
 13136 ;; This function calls:
 13137 ;;		___fladd
 13138 ;; This function is called by:
 13139 ;;		_roundf
 13140 ;; This function uses a non-reentrant model
 13141 ;;
 13142                           
 13143                           	psect	text51
 13144  0065D2                     __ptext51:
 13145                           	callstack 0
 13146  0065D2                     ___flsub:
 13147                           	callstack 0
 13148  0065D2  FFFF               	dw	65535	; assembler added errata NOP
 13149  0065D4  0E00               	movlw	0
 13150  0065D6  1A73               	xorwf	___flsub@a^0,f,c
 13151  0065D8  0E00               	movlw	0
 13152  0065DA  1A74               	xorwf	(___flsub@a+1)^0,f,c
 13153  0065DC  0E00               	movlw	0
 13154  0065DE  1A75               	xorwf	(___flsub@a+2)^0,f,c
 13155  0065E0  0E80               	movlw	128
 13156  0065E2  1A76               	xorwf	(___flsub@a+3)^0,f,c
 13157  0065E4  C06F  F05F         	movff	___flsub@b,___fladd@b
 13158  0065E8  C070  F060         	movff	___flsub@b+1,___fladd@b+1
 13159  0065EC  C071  F061         	movff	___flsub@b+2,___fladd@b+2
 13160  0065F0  C072  F062         	movff	___flsub@b+3,___fladd@b+3
 13161  0065F4  C073  F063         	movff	___flsub@a,___fladd@a
 13162  0065F8  C074  F064         	movff	___flsub@a+1,___fladd@a+1
 13163  0065FC  C075  F065         	movff	___flsub@a+2,___fladd@a+2
 13164  006600  C076  F066         	movff	___flsub@a+3,___fladd@a+3
 13165  006604  ECAE  F00E         	call	___fladd	;wreg free
 13166  006608  C05F  F06F         	movff	?___fladd,?___flsub
 13167  00660C  C060  F070         	movff	?___fladd+1,?___flsub+1
 13168  006610  C061  F071         	movff	?___fladd+2,?___flsub+2
 13169  006614  C062  F072         	movff	?___fladd+3,?___flsub+3
 13170  006618  0012               	return		;funcret
 13171  00661A  FFFF               	dw	65535	; errata NOP
 13172  00661C                     __end_of___flsub:
 13173                           	callstack 0
 13174                           
 13175 ;; *************** function ___fladd *****************
 13176 ;; Defined at:
 13177 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
 13178 ;; Parameters:    Size  Location     Type
 13179 ;;  b               4   94[COMRAM] float 
 13180 ;;  a               4   98[COMRAM] float 
 13181 ;; Auto vars:     Size  Location     Type
 13182 ;;  grs             1  109[COMRAM] unsigned char 
 13183 ;;  bexp            1  108[COMRAM] unsigned char 
 13184 ;;  aexp            1  107[COMRAM] unsigned char 
 13185 ;;  signs           1  106[COMRAM] unsigned char 
 13186 ;; Return value:  Size  Location     Type
 13187 ;;                  4   94[COMRAM] unsigned char 
 13188 ;; Registers used:
 13189 ;;		wreg, status,2, status,0
 13190 ;; Tracked objects:
 13191 ;;		On entry : 0/0
 13192 ;;		On exit  : 0/0
 13193 ;;		Unchanged: 0/0
 13194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13195 ;;      Params:         8       0       0       0       0       0       0
 13196 ;;      Locals:         4       0       0       0       0       0       0
 13197 ;;      Temps:          4       0       0       0       0       0       0
 13198 ;;      Totals:        16       0       0       0       0       0       0
 13199 ;;Total ram usage:       16 bytes
 13200 ;; Hardware stack levels used:    1
 13201 ;; Hardware stack levels required when called:    1
 13202 ;; This function calls:
 13203 ;;		Nothing
 13204 ;; This function is called by:
 13205 ;;		_init_timer_2
 13206 ;;		___flsub
 13207 ;;		_roundf
 13208 ;; This function uses a non-reentrant model
 13209 ;;
 13210                           
 13211                           	psect	text52
 13212  001D5C                     __ptext52:
 13213                           	callstack 0
 13214  001D5C                     ___fladd:
 13215                           	callstack 0
 13216  001D5C  FFFF               	dw	65535	; assembler added errata NOP
 13217  001D5E  5062               	movf	(___fladd@b+3)^0,w,c
 13218  001D60  0B80               	andlw	128
 13219  001D62  6E6B               	movwf	___fladd@signs^0,c
 13220  001D64  5062               	movf	(___fladd@b+3)^0,w,c
 13221  001D66  2462               	addwf	(___fladd@b+3)^0,w,c
 13222  001D68  6E6D               	movwf	___fladd@bexp^0,c
 13223  001D6A  AE61               	btfss	(___fladd@b+2)^0,7,c
 13224  001D6C  EFBA  F00E         	goto	u4841
 13225  001D70  EFBD  F00E         	goto	u4840
 13226  001D74                     u4841:
 13227  001D74  FFFF               	dw	65535	; assembler added errata NOP
 13228  001D76  EFBF  F00E         	goto	l4265
 13229  001D7A                     u4840:
 13230  001D7A  FFFF               	dw	65535	; assembler added errata NOP
 13231  001D7C  806D               	bsf	___fladd@bexp^0,0,c
 13232  001D7E                     l4265:
 13233  001D7E  FFFF               	dw	65535	; assembler added errata NOP
 13234  001D80  506D               	movf	___fladd@bexp^0,w,c
 13235  001D82  B4D8               	btfsc	status,2,c
 13236  001D84  EFC6  F00E         	goto	u4851
 13237  001D88  EFC9  F00E         	goto	u4850
 13238  001D8C                     u4851:
 13239  001D8C  FFFF               	dw	65535	; assembler added errata NOP
 13240  001D8E  EFE2  F00E         	goto	l4275
 13241  001D92                     u4850:
 13242  001D92  FFFF               	dw	65535	; assembler added errata NOP
 13243  001D94  286D               	incf	___fladd@bexp^0,w,c
 13244  001D96  A4D8               	btfss	status,2,c
 13245  001D98  EFD0  F00E         	goto	u4861
 13246  001D9C  EFD3  F00E         	goto	u4860
 13247  001DA0                     u4861:
 13248  001DA0  FFFF               	dw	65535	; assembler added errata NOP
 13249  001DA2  EFDC  F00E         	goto	l4271
 13250  001DA6                     u4860:
 13251  001DA6  FFFF               	dw	65535	; assembler added errata NOP
 13252  001DA8  0E00               	movlw	0
 13253  001DAA  6E5F               	movwf	___fladd@b^0,c
 13254  001DAC  0E00               	movlw	0
 13255  001DAE  6E60               	movwf	(___fladd@b+1)^0,c
 13256  001DB0  0E00               	movlw	0
 13257  001DB2  6E61               	movwf	(___fladd@b+2)^0,c
 13258  001DB4  0E00               	movlw	0
 13259  001DB6  6E62               	movwf	(___fladd@b+3)^0,c
 13260  001DB8                     l4271:
 13261  001DB8  FFFF               	dw	65535	; assembler added errata NOP
 13262  001DBA  8E61               	bsf	(___fladd@b+2)^0,7,c
 13263  001DBC  0E00               	movlw	0
 13264  001DBE  6E62               	movwf	(___fladd@b+3)^0,c
 13265  001DC0  EFEB  F00E         	goto	l4277
 13266  001DC4                     l4275:
 13267  001DC4  FFFF               	dw	65535	; assembler added errata NOP
 13268  001DC6  0E00               	movlw	0
 13269  001DC8  6E5F               	movwf	___fladd@b^0,c
 13270  001DCA  0E00               	movlw	0
 13271  001DCC  6E60               	movwf	(___fladd@b+1)^0,c
 13272  001DCE  0E00               	movlw	0
 13273  001DD0  6E61               	movwf	(___fladd@b+2)^0,c
 13274  001DD2  0E00               	movlw	0
 13275  001DD4  6E62               	movwf	(___fladd@b+3)^0,c
 13276  001DD6                     l4277:
 13277  001DD6  FFFF               	dw	65535	; assembler added errata NOP
 13278  001DD8  5066               	movf	(___fladd@a+3)^0,w,c
 13279  001DDA  0B80               	andlw	128
 13280  001DDC  6E6C               	movwf	___fladd@aexp^0,c
 13281  001DDE  506B               	movf	___fladd@signs^0,w,c
 13282  001DE0  186C               	xorwf	___fladd@aexp^0,w,c
 13283  001DE2  B4D8               	btfsc	status,2,c
 13284  001DE4  EFF6  F00E         	goto	u4871
 13285  001DE8  EFF9  F00E         	goto	u4870
 13286  001DEC                     u4871:
 13287  001DEC  FFFF               	dw	65535	; assembler added errata NOP
 13288  001DEE  EFFB  F00E         	goto	l4283
 13289  001DF2                     u4870:
 13290  001DF2  FFFF               	dw	65535	; assembler added errata NOP
 13291  001DF4  8C6B               	bsf	___fladd@signs^0,6,c
 13292  001DF6                     l4283:
 13293  001DF6  FFFF               	dw	65535	; assembler added errata NOP
 13294  001DF8  5066               	movf	(___fladd@a+3)^0,w,c
 13295  001DFA  2466               	addwf	(___fladd@a+3)^0,w,c
 13296  001DFC  6E6C               	movwf	___fladd@aexp^0,c
 13297  001DFE  AE65               	btfss	(___fladd@a+2)^0,7,c
 13298  001E00  EF04  F00F         	goto	u4881
 13299  001E04  EF07  F00F         	goto	u4880
 13300  001E08                     u4881:
 13301  001E08  FFFF               	dw	65535	; assembler added errata NOP
 13302  001E0A  EF09  F00F         	goto	l4289
 13303  001E0E                     u4880:
 13304  001E0E  FFFF               	dw	65535	; assembler added errata NOP
 13305  001E10  806C               	bsf	___fladd@aexp^0,0,c
 13306  001E12                     l4289:
 13307  001E12  FFFF               	dw	65535	; assembler added errata NOP
 13308  001E14  506C               	movf	___fladd@aexp^0,w,c
 13309  001E16  B4D8               	btfsc	status,2,c
 13310  001E18  EF10  F00F         	goto	u4891
 13311  001E1C  EF13  F00F         	goto	u4890
 13312  001E20                     u4891:
 13313  001E20  FFFF               	dw	65535	; assembler added errata NOP
 13314  001E22  EF2C  F00F         	goto	l4299
 13315  001E26                     u4890:
 13316  001E26  FFFF               	dw	65535	; assembler added errata NOP
 13317  001E28  286C               	incf	___fladd@aexp^0,w,c
 13318  001E2A  A4D8               	btfss	status,2,c
 13319  001E2C  EF1A  F00F         	goto	u4901
 13320  001E30  EF1D  F00F         	goto	u4900
 13321  001E34                     u4901:
 13322  001E34  FFFF               	dw	65535	; assembler added errata NOP
 13323  001E36  EF26  F00F         	goto	l4295
 13324  001E3A                     u4900:
 13325  001E3A  FFFF               	dw	65535	; assembler added errata NOP
 13326  001E3C  0E00               	movlw	0
 13327  001E3E  6E63               	movwf	___fladd@a^0,c
 13328  001E40  0E00               	movlw	0
 13329  001E42  6E64               	movwf	(___fladd@a+1)^0,c
 13330  001E44  0E00               	movlw	0
 13331  001E46  6E65               	movwf	(___fladd@a+2)^0,c
 13332  001E48  0E00               	movlw	0
 13333  001E4A  6E66               	movwf	(___fladd@a+3)^0,c
 13334  001E4C                     l4295:
 13335  001E4C  FFFF               	dw	65535	; assembler added errata NOP
 13336  001E4E  8E65               	bsf	(___fladd@a+2)^0,7,c
 13337  001E50  0E00               	movlw	0
 13338  001E52  6E66               	movwf	(___fladd@a+3)^0,c
 13339  001E54  EF35  F00F         	goto	l4301
 13340  001E58                     l4299:
 13341  001E58  FFFF               	dw	65535	; assembler added errata NOP
 13342  001E5A  0E00               	movlw	0
 13343  001E5C  6E63               	movwf	___fladd@a^0,c
 13344  001E5E  0E00               	movlw	0
 13345  001E60  6E64               	movwf	(___fladd@a+1)^0,c
 13346  001E62  0E00               	movlw	0
 13347  001E64  6E65               	movwf	(___fladd@a+2)^0,c
 13348  001E66  0E00               	movlw	0
 13349  001E68  6E66               	movwf	(___fladd@a+3)^0,c
 13350  001E6A                     l4301:
 13351  001E6A  FFFF               	dw	65535	; assembler added errata NOP
 13352  001E6C  506D               	movf	___fladd@bexp^0,w,c
 13353  001E6E  5C6C               	subwf	___fladd@aexp^0,w,c
 13354  001E70  B0D8               	btfsc	status,0,c
 13355  001E72  EF3D  F00F         	goto	u4911
 13356  001E76  EF40  F00F         	goto	u4910
 13357  001E7A                     u4911:
 13358  001E7A  FFFF               	dw	65535	; assembler added errata NOP
 13359  001E7C  EF6B  F00F         	goto	l4337
 13360  001E80                     u4910:
 13361  001E80  FFFF               	dw	65535	; assembler added errata NOP
 13362  001E82  AC6B               	btfss	___fladd@signs^0,6,c
 13363  001E84  EF46  F00F         	goto	u4921
 13364  001E88  EF49  F00F         	goto	u4920
 13365  001E8C                     u4921:
 13366  001E8C  FFFF               	dw	65535	; assembler added errata NOP
 13367  001E8E  EF4C  F00F         	goto	l4307
 13368  001E92                     u4920:
 13369  001E92  FFFF               	dw	65535	; assembler added errata NOP
 13370  001E94  0E80               	movlw	128
 13371  001E96  1A6B               	xorwf	___fladd@signs^0,f,c
 13372  001E98                     l4307:
 13373  001E98  FFFF               	dw	65535	; assembler added errata NOP
 13374  001E9A  C06D  F06E         	movff	___fladd@bexp,___fladd@grs
 13375  001E9E  C06C  F06D         	movff	___fladd@aexp,___fladd@bexp
 13376  001EA2  C06E  F06C         	movff	___fladd@grs,___fladd@aexp
 13377  001EA6  C05F  F06E         	movff	___fladd@b,___fladd@grs
 13378  001EAA  C063  F05F         	movff	___fladd@a,___fladd@b
 13379  001EAE  C06E  F063         	movff	___fladd@grs,___fladd@a
 13380  001EB2  C060  F06E         	movff	___fladd@b+1,___fladd@grs
 13381  001EB6  C064  F060         	movff	___fladd@a+1,___fladd@b+1
 13382  001EBA  C06E  F064         	movff	___fladd@grs,___fladd@a+1
 13383  001EBE  C061  F06E         	movff	___fladd@b+2,___fladd@grs
 13384  001EC2  C065  F061         	movff	___fladd@a+2,___fladd@b+2
 13385  001EC6  C06E  F065         	movff	___fladd@grs,___fladd@a+2
 13386  001ECA  C062  F06E         	movff	___fladd@b+3,___fladd@grs
 13387  001ECE  C066  F062         	movff	___fladd@a+3,___fladd@b+3
 13388  001ED2  C06E  F066         	movff	___fladd@grs,___fladd@a+3
 13389  001ED6                     l4337:
 13390  001ED6  FFFF               	dw	65535	; assembler added errata NOP
 13391  001ED8  0E00               	movlw	0
 13392  001EDA  6E6E               	movwf	___fladd@grs^0,c
 13393  001EDC  506D               	movf	___fladd@bexp^0,w,c
 13394  001EDE  C06C  F067         	movff	___fladd@aexp,??___fladd
 13395  001EE2  6A68               	clrf	(??___fladd+1)^0,c
 13396  001EE4  5E67               	subwf	??___fladd^0,f,c
 13397  001EE6  0E00               	movlw	0
 13398  001EE8  5A68               	subwfb	(??___fladd+1)^0,f,c
 13399  001EEA  BE68               	btfsc	(??___fladd+1)^0,7,c
 13400  001EEC  EF81  F00F         	goto	u4931
 13401  001EF0  5068               	movf	(??___fladd+1)^0,w,c
 13402  001EF2  E10A               	bnz	u4930
 13403  001EF4  0E1A               	movlw	26
 13404  001EF6  5C67               	subwf	??___fladd^0,w,c
 13405  001EF8  A0D8               	btfss	status,0,c
 13406  001EFA  EF81  F00F         	goto	u4931
 13407  001EFE  EF84  F00F         	goto	u4930
 13408  001F02                     u4931:
 13409  001F02  FFFF               	dw	65535	; assembler added errata NOP
 13410  001F04  EFC7  F00F         	goto	l956
 13411  001F08                     u4930:
 13412  001F08  FFFF               	dw	65535	; assembler added errata NOP
 13413  001F0A  505F               	movf	___fladd@b^0,w,c
 13414  001F0C  1060               	iorwf	(___fladd@b+1)^0,w,c
 13415  001F0E  1061               	iorwf	(___fladd@b+2)^0,w,c
 13416  001F10  1062               	iorwf	(___fladd@b+3)^0,w,c
 13417  001F12  A4D8               	btfss	status,2,c
 13418  001F14  EF8E  F00F         	goto	u4941
 13419  001F18  EF92  F00F         	goto	u4940
 13420  001F1C                     u4941:
 13421  001F1C  FFFF               	dw	65535	; assembler added errata NOP
 13422  001F1E  0E01               	movlw	1
 13423  001F20  EF94  F00F         	goto	u4950
 13424  001F24                     u4940:
 13425  001F24  FFFF               	dw	65535	; assembler added errata NOP
 13426  001F26  0E00               	movlw	0
 13427  001F28                     u4950:
 13428  001F28  FFFF               	dw	65535	; assembler added errata NOP
 13429  001F2A  6E6E               	movwf	___fladd@grs^0,c
 13430  001F2C  0E00               	movlw	0
 13431  001F2E  6E5F               	movwf	___fladd@b^0,c
 13432  001F30  0E00               	movlw	0
 13433  001F32  6E60               	movwf	(___fladd@b+1)^0,c
 13434  001F34  0E00               	movlw	0
 13435  001F36  6E61               	movwf	(___fladd@b+2)^0,c
 13436  001F38  0E00               	movlw	0
 13437  001F3A  6E62               	movwf	(___fladd@b+3)^0,c
 13438  001F3C  C06C  F06D         	movff	___fladd@aexp,___fladd@bexp
 13439  001F40  EFD2  F00F         	goto	l955
 13440  001F44                     l957:
 13441  001F44  FFFF               	dw	65535	; assembler added errata NOP
 13442  001F46  A06E               	btfss	___fladd@grs^0,0,c
 13443  001F48  EFA8  F00F         	goto	u4961
 13444  001F4C  EFAB  F00F         	goto	u4960
 13445  001F50                     u4961:
 13446  001F50  FFFF               	dw	65535	; assembler added errata NOP
 13447  001F52  EFB2  F00F         	goto	l4349
 13448  001F56                     u4960:
 13449  001F56  FFFF               	dw	65535	; assembler added errata NOP
 13450  001F58  90D8               	bcf	status,0,c
 13451  001F5A  306E               	rrcf	___fladd@grs^0,w,c
 13452  001F5C  0901               	iorlw	1
 13453  001F5E  6E6E               	movwf	___fladd@grs^0,c
 13454  001F60  EFB5  F00F         	goto	l4351
 13455  001F64                     l4349:
 13456  001F64  FFFF               	dw	65535	; assembler added errata NOP
 13457  001F66  90D8               	bcf	status,0,c
 13458  001F68  326E               	rrcf	___fladd@grs^0,f,c
 13459  001F6A                     l4351:
 13460  001F6A  FFFF               	dw	65535	; assembler added errata NOP
 13461  001F6C  A05F               	btfss	___fladd@b^0,0,c
 13462  001F6E  EFBB  F00F         	goto	u4971
 13463  001F72  EFBE  F00F         	goto	u4970
 13464  001F76                     u4971:
 13465  001F76  FFFF               	dw	65535	; assembler added errata NOP
 13466  001F78  EFC0  F00F         	goto	l4355
 13467  001F7C                     u4970:
 13468  001F7C  FFFF               	dw	65535	; assembler added errata NOP
 13469  001F7E  8E6E               	bsf	___fladd@grs^0,7,c
 13470  001F80                     l4355:
 13471  001F80  FFFF               	dw	65535	; assembler added errata NOP
 13472  001F82  3462               	rlcf	(___fladd@b+3)^0,w,c
 13473  001F84  3262               	rrcf	(___fladd@b+3)^0,f,c
 13474  001F86  3261               	rrcf	(___fladd@b+2)^0,f,c
 13475  001F88  3260               	rrcf	(___fladd@b+1)^0,f,c
 13476  001F8A  325F               	rrcf	___fladd@b^0,f,c
 13477  001F8C  2A6D               	incf	___fladd@bexp^0,f,c
 13478  001F8E                     l956:
 13479  001F8E  FFFF               	dw	65535	; assembler added errata NOP
 13480  001F90  506C               	movf	___fladd@aexp^0,w,c
 13481  001F92  5C6D               	subwf	___fladd@bexp^0,w,c
 13482  001F94  A0D8               	btfss	status,0,c
 13483  001F96  EFCF  F00F         	goto	u4981
 13484  001F9A  EFD2  F00F         	goto	u4980
 13485  001F9E                     u4981:
 13486  001F9E  FFFF               	dw	65535	; assembler added errata NOP
 13487  001FA0  EFA2  F00F         	goto	l957
 13488  001FA4                     u4980:
 13489  001FA4                     l955:
 13490  001FA4  FFFF               	dw	65535	; assembler added errata NOP
 13491  001FA6  BC6B               	btfsc	___fladd@signs^0,6,c
 13492  001FA8  EFD8  F00F         	goto	u4991
 13493  001FAC  EFDB  F00F         	goto	u4990
 13494  001FB0                     u4991:
 13495  001FB0  FFFF               	dw	65535	; assembler added errata NOP
 13496  001FB2  EF28  F010         	goto	l4383
 13497  001FB6                     u4990:
 13498  001FB6  FFFF               	dw	65535	; assembler added errata NOP
 13499  001FB8  506D               	movf	___fladd@bexp^0,w,c
 13500  001FBA  A4D8               	btfss	status,2,c
 13501  001FBC  EFE2  F00F         	goto	u5001
 13502  001FC0  EFE5  F00F         	goto	u5000
 13503  001FC4                     u5001:
 13504  001FC4  FFFF               	dw	65535	; assembler added errata NOP
 13505  001FC6  EFF0  F00F         	goto	l4365
 13506  001FCA                     u5000:
 13507  001FCA  FFFF               	dw	65535	; assembler added errata NOP
 13508  001FCC  0E00               	movlw	0
 13509  001FCE  6E5F               	movwf	?___fladd^0,c
 13510  001FD0  0E00               	movlw	0
 13511  001FD2  6E60               	movwf	(?___fladd+1)^0,c
 13512  001FD4  0E00               	movlw	0
 13513  001FD6  6E61               	movwf	(?___fladd+2)^0,c
 13514  001FD8  0E00               	movlw	0
 13515  001FDA  6E62               	movwf	(?___fladd+3)^0,c
 13516  001FDC  EF7F  F011         	goto	l964
 13517  001FE0                     l4365:
 13518  001FE0  FFFF               	dw	65535	; assembler added errata NOP
 13519  001FE2  5063               	movf	___fladd@a^0,w,c
 13520  001FE4  265F               	addwf	___fladd@b^0,f,c
 13521  001FE6  5064               	movf	(___fladd@a+1)^0,w,c
 13522  001FE8  2260               	addwfc	(___fladd@b+1)^0,f,c
 13523  001FEA  5065               	movf	(___fladd@a+2)^0,w,c
 13524  001FEC  2261               	addwfc	(___fladd@b+2)^0,f,c
 13525  001FEE  5066               	movf	(___fladd@a+3)^0,w,c
 13526  001FF0  2262               	addwfc	(___fladd@b+3)^0,f,c
 13527  001FF2  A062               	btfss	(___fladd@b+3)^0,0,c
 13528  001FF4  EFFE  F00F         	goto	u5011
 13529  001FF8  EF01  F010         	goto	u5010
 13530  001FFC                     u5011:
 13531  001FFC  FFFF               	dw	65535	; assembler added errata NOP
 13532  001FFE  EFCC  F010         	goto	l4419
 13533  002002                     u5010:
 13534  002002  FFFF               	dw	65535	; assembler added errata NOP
 13535  002004  A06E               	btfss	___fladd@grs^0,0,c
 13536  002006  EF07  F010         	goto	u5021
 13537  00200A  EF0A  F010         	goto	u5020
 13538  00200E                     u5021:
 13539  00200E  FFFF               	dw	65535	; assembler added errata NOP
 13540  002010  EF11  F010         	goto	l4373
 13541  002014                     u5020:
 13542  002014  FFFF               	dw	65535	; assembler added errata NOP
 13543  002016  90D8               	bcf	status,0,c
 13544  002018  306E               	rrcf	___fladd@grs^0,w,c
 13545  00201A  0901               	iorlw	1
 13546  00201C  6E6E               	movwf	___fladd@grs^0,c
 13547  00201E  EF14  F010         	goto	l4375
 13548  002022                     l4373:
 13549  002022  FFFF               	dw	65535	; assembler added errata NOP
 13550  002024  90D8               	bcf	status,0,c
 13551  002026  326E               	rrcf	___fladd@grs^0,f,c
 13552  002028                     l4375:
 13553  002028  FFFF               	dw	65535	; assembler added errata NOP
 13554  00202A  A05F               	btfss	___fladd@b^0,0,c
 13555  00202C  EF1A  F010         	goto	u5031
 13556  002030  EF1D  F010         	goto	u5030
 13557  002034                     u5031:
 13558  002034  FFFF               	dw	65535	; assembler added errata NOP
 13559  002036  EF1F  F010         	goto	l4379
 13560  00203A                     u5030:
 13561  00203A  FFFF               	dw	65535	; assembler added errata NOP
 13562  00203C  8E6E               	bsf	___fladd@grs^0,7,c
 13563  00203E                     l4379:
 13564  00203E  FFFF               	dw	65535	; assembler added errata NOP
 13565  002040  3462               	rlcf	(___fladd@b+3)^0,w,c
 13566  002042  3262               	rrcf	(___fladd@b+3)^0,f,c
 13567  002044  3261               	rrcf	(___fladd@b+2)^0,f,c
 13568  002046  3260               	rrcf	(___fladd@b+1)^0,f,c
 13569  002048  325F               	rrcf	___fladd@b^0,f,c
 13570  00204A  2A6D               	incf	___fladd@bexp^0,f,c
 13571  00204C  EFCC  F010         	goto	l4419
 13572  002050                     l4383:
 13573  002050  FFFF               	dw	65535	; assembler added errata NOP
 13574  002052  5063               	movf	___fladd@a^0,w,c
 13575  002054  5C5F               	subwf	___fladd@b^0,w,c
 13576  002056  5064               	movf	(___fladd@a+1)^0,w,c
 13577  002058  5860               	subwfb	(___fladd@b+1)^0,w,c
 13578  00205A  5065               	movf	(___fladd@a+2)^0,w,c
 13579  00205C  5861               	subwfb	(___fladd@b+2)^0,w,c
 13580  00205E  5062               	movf	(___fladd@b+3)^0,w,c
 13581  002060  0A80               	xorlw	128
 13582  002062  6E67               	movwf	??___fladd^0,c
 13583  002064  5066               	movf	(___fladd@a+3)^0,w,c
 13584  002066  0A80               	xorlw	128
 13585  002068  5867               	subwfb	??___fladd^0,w,c
 13586  00206A  B0D8               	btfsc	status,0,c
 13587  00206C  EF3A  F010         	goto	u5041
 13588  002070  EF3D  F010         	goto	u5040
 13589  002074                     u5041:
 13590  002074  FFFF               	dw	65535	; assembler added errata NOP
 13591  002076  EF6B  F010         	goto	l4393
 13592  00207A                     u5040:
 13593  00207A  FFFF               	dw	65535	; assembler added errata NOP
 13594  00207C  505F               	movf	___fladd@b^0,w,c
 13595  00207E  5C63               	subwf	___fladd@a^0,w,c
 13596  002080  6E67               	movwf	??___fladd^0,c
 13597  002082  5060               	movf	(___fladd@b+1)^0,w,c
 13598  002084  5864               	subwfb	(___fladd@a+1)^0,w,c
 13599  002086  6E68               	movwf	(??___fladd+1)^0,c
 13600  002088  5061               	movf	(___fladd@b+2)^0,w,c
 13601  00208A  5865               	subwfb	(___fladd@a+2)^0,w,c
 13602  00208C  6E69               	movwf	(??___fladd+2)^0,c
 13603  00208E  5062               	movf	(___fladd@b+3)^0,w,c
 13604  002090  5866               	subwfb	(___fladd@a+3)^0,w,c
 13605  002092  6E6A               	movwf	(??___fladd+3)^0,c
 13606  002094  0EFF               	movlw	255
 13607  002096  2467               	addwf	??___fladd^0,w,c
 13608  002098  6E5F               	movwf	___fladd@b^0,c
 13609  00209A  0EFF               	movlw	255
 13610  00209C  2068               	addwfc	(??___fladd+1)^0,w,c
 13611  00209E  6E60               	movwf	(___fladd@b+1)^0,c
 13612  0020A0  0EFF               	movlw	255
 13613  0020A2  2069               	addwfc	(??___fladd+2)^0,w,c
 13614  0020A4  6E61               	movwf	(___fladd@b+2)^0,c
 13615  0020A6  0EFF               	movlw	255
 13616  0020A8  206A               	addwfc	(??___fladd+3)^0,w,c
 13617  0020AA  6E62               	movwf	(___fladd@b+3)^0,c
 13618  0020AC  0E80               	movlw	128
 13619  0020AE  1A6B               	xorwf	___fladd@signs^0,f,c
 13620  0020B0  6C6E               	negf	___fladd@grs^0,c
 13621  0020B2  506E               	movf	___fladd@grs^0,w,c
 13622  0020B4  A4D8               	btfss	status,2,c
 13623  0020B6  EF5F  F010         	goto	u5051
 13624  0020BA  EF62  F010         	goto	u5050
 13625  0020BE                     u5051:
 13626  0020BE  FFFF               	dw	65535	; assembler added errata NOP
 13627  0020C0  EF74  F010         	goto	l972
 13628  0020C4                     u5050:
 13629  0020C4  FFFF               	dw	65535	; assembler added errata NOP
 13630  0020C6  0E01               	movlw	1
 13631  0020C8  265F               	addwf	___fladd@b^0,f,c
 13632  0020CA  0E00               	movlw	0
 13633  0020CC  2260               	addwfc	(___fladd@b+1)^0,f,c
 13634  0020CE  2261               	addwfc	(___fladd@b+2)^0,f,c
 13635  0020D0  2262               	addwfc	(___fladd@b+3)^0,f,c
 13636  0020D2  EF74  F010         	goto	l972
 13637  0020D6                     l4393:
 13638  0020D6  FFFF               	dw	65535	; assembler added errata NOP
 13639  0020D8  5063               	movf	___fladd@a^0,w,c
 13640  0020DA  5E5F               	subwf	___fladd@b^0,f,c
 13641  0020DC  5064               	movf	(___fladd@a+1)^0,w,c
 13642  0020DE  5A60               	subwfb	(___fladd@b+1)^0,f,c
 13643  0020E0  5065               	movf	(___fladd@a+2)^0,w,c
 13644  0020E2  5A61               	subwfb	(___fladd@b+2)^0,f,c
 13645  0020E4  5066               	movf	(___fladd@a+3)^0,w,c
 13646  0020E6  5A62               	subwfb	(___fladd@b+3)^0,f,c
 13647  0020E8                     l972:
 13648  0020E8  FFFF               	dw	65535	; assembler added errata NOP
 13649  0020EA  505F               	movf	___fladd@b^0,w,c
 13650  0020EC  1060               	iorwf	(___fladd@b+1)^0,w,c
 13651  0020EE  1061               	iorwf	(___fladd@b+2)^0,w,c
 13652  0020F0  1062               	iorwf	(___fladd@b+3)^0,w,c
 13653  0020F2  A4D8               	btfss	status,2,c
 13654  0020F4  EF7E  F010         	goto	u5061
 13655  0020F8  EF81  F010         	goto	u5060
 13656  0020FC                     u5061:
 13657  0020FC  FFFF               	dw	65535	; assembler added errata NOP
 13658  0020FE  EFC3  F010         	goto	l4417
 13659  002102                     u5060:
 13660  002102  FFFF               	dw	65535	; assembler added errata NOP
 13661  002104  506E               	movf	___fladd@grs^0,w,c
 13662  002106  A4D8               	btfss	status,2,c
 13663  002108  EF88  F010         	goto	u5071
 13664  00210C  EF8B  F010         	goto	u5070
 13665  002110                     u5071:
 13666  002110  FFFF               	dw	65535	; assembler added errata NOP
 13667  002112  EFC3  F010         	goto	l4417
 13668  002116                     u5070:
 13669  002116  FFFF               	dw	65535	; assembler added errata NOP
 13670  002118  0E00               	movlw	0
 13671  00211A  6E5F               	movwf	?___fladd^0,c
 13672  00211C  0E00               	movlw	0
 13673  00211E  6E60               	movwf	(?___fladd+1)^0,c
 13674  002120  0E00               	movlw	0
 13675  002122  6E61               	movwf	(?___fladd+2)^0,c
 13676  002124  0E00               	movlw	0
 13677  002126  6E62               	movwf	(?___fladd+3)^0,c
 13678  002128  EF7F  F011         	goto	l964
 13679  00212C                     l4401:
 13680  00212C  FFFF               	dw	65535	; assembler added errata NOP
 13681  00212E  90D8               	bcf	status,0,c
 13682  002130  365F               	rlcf	___fladd@b^0,f,c
 13683  002132  3660               	rlcf	(___fladd@b+1)^0,f,c
 13684  002134  3661               	rlcf	(___fladd@b+2)^0,f,c
 13685  002136  3662               	rlcf	(___fladd@b+3)^0,f,c
 13686  002138  AE6E               	btfss	___fladd@grs^0,7,c
 13687  00213A  EFA1  F010         	goto	u5081
 13688  00213E  EFA4  F010         	goto	u5080
 13689  002142                     u5081:
 13690  002142  FFFF               	dw	65535	; assembler added errata NOP
 13691  002144  EFA6  F010         	goto	l4407
 13692  002148                     u5080:
 13693  002148  FFFF               	dw	65535	; assembler added errata NOP
 13694  00214A  805F               	bsf	___fladd@b^0,0,c
 13695  00214C                     l4407:
 13696  00214C  FFFF               	dw	65535	; assembler added errata NOP
 13697  00214E  A06E               	btfss	___fladd@grs^0,0,c
 13698  002150  EFAC  F010         	goto	u5091
 13699  002154  EFAF  F010         	goto	u5090
 13700  002158                     u5091:
 13701  002158  FFFF               	dw	65535	; assembler added errata NOP
 13702  00215A  EFB4  F010         	goto	l4411
 13703  00215E                     u5090:
 13704  00215E  FFFF               	dw	65535	; assembler added errata NOP
 13705  002160  80D8               	bsf	status,0,c
 13706  002162  366E               	rlcf	___fladd@grs^0,f,c
 13707  002164  EFB7  F010         	goto	l4413
 13708  002168                     l4411:
 13709  002168  FFFF               	dw	65535	; assembler added errata NOP
 13710  00216A  90D8               	bcf	status,0,c
 13711  00216C  366E               	rlcf	___fladd@grs^0,f,c
 13712  00216E                     l4413:
 13713  00216E  FFFF               	dw	65535	; assembler added errata NOP
 13714  002170  506D               	movf	___fladd@bexp^0,w,c
 13715  002172  B4D8               	btfsc	status,2,c
 13716  002174  EFBE  F010         	goto	u5101
 13717  002178  EFC1  F010         	goto	u5100
 13718  00217C                     u5101:
 13719  00217C  FFFF               	dw	65535	; assembler added errata NOP
 13720  00217E  EFC3  F010         	goto	l4417
 13721  002182                     u5100:
 13722  002182  FFFF               	dw	65535	; assembler added errata NOP
 13723  002184  066D               	decf	___fladd@bexp^0,f,c
 13724  002186                     l4417:
 13725  002186  FFFF               	dw	65535	; assembler added errata NOP
 13726  002188  AE61               	btfss	(___fladd@b+2)^0,7,c
 13727  00218A  EFC9  F010         	goto	u5111
 13728  00218E  EFCC  F010         	goto	u5110
 13729  002192                     u5111:
 13730  002192  FFFF               	dw	65535	; assembler added errata NOP
 13731  002194  EF96  F010         	goto	l4401
 13732  002198                     u5110:
 13733  002198                     l4419:
 13734  002198  FFFF               	dw	65535	; assembler added errata NOP
 13735  00219A  0E00               	movlw	0
 13736  00219C  6E6C               	movwf	___fladd@aexp^0,c
 13737  00219E  AE6E               	btfss	___fladd@grs^0,7,c
 13738  0021A0  EFD4  F010         	goto	u5121
 13739  0021A4  EFD7  F010         	goto	u5120
 13740  0021A8                     u5121:
 13741  0021A8  FFFF               	dw	65535	; assembler added errata NOP
 13742  0021AA  EFF6  F010         	goto	l981
 13743  0021AE                     u5120:
 13744  0021AE  FFFF               	dw	65535	; assembler added errata NOP
 13745  0021B0  C06E  F067         	movff	___fladd@grs,??___fladd
 13746  0021B4  0E7F               	movlw	127
 13747  0021B6  1667               	andwf	??___fladd^0,f,c
 13748  0021B8  B4D8               	btfsc	status,2,c
 13749  0021BA  EFE1  F010         	goto	u5131
 13750  0021BE  EFE4  F010         	goto	u5130
 13751  0021C2                     u5131:
 13752  0021C2  FFFF               	dw	65535	; assembler added errata NOP
 13753  0021C4  EFEA  F010         	goto	l982
 13754  0021C8                     u5130:
 13755  0021C8  FFFF               	dw	65535	; assembler added errata NOP
 13756  0021CA                     l4425:
 13757  0021CA  FFFF               	dw	65535	; assembler added errata NOP
 13758  0021CC  0E01               	movlw	1
 13759  0021CE  6E6C               	movwf	___fladd@aexp^0,c
 13760  0021D0  EFF6  F010         	goto	l981
 13761  0021D4                     l982:
 13762  0021D4  FFFF               	dw	65535	; assembler added errata NOP
 13763  0021D6  A05F               	btfss	___fladd@b^0,0,c
 13764  0021D8  EFF0  F010         	goto	u5141
 13765  0021DC  EFF3  F010         	goto	u5140
 13766  0021E0                     u5141:
 13767  0021E0  FFFF               	dw	65535	; assembler added errata NOP
 13768  0021E2  EFF6  F010         	goto	l981
 13769  0021E6                     u5140:
 13770  0021E6  FFFF               	dw	65535	; assembler added errata NOP
 13771  0021E8  EFE5  F010         	goto	l4425
 13772  0021EC                     l981:
 13773  0021EC  FFFF               	dw	65535	; assembler added errata NOP
 13774  0021EE  506C               	movf	___fladd@aexp^0,w,c
 13775  0021F0  B4D8               	btfsc	status,2,c
 13776  0021F2  EFFD  F010         	goto	u5151
 13777  0021F6  EF00  F011         	goto	u5150
 13778  0021FA                     u5151:
 13779  0021FA  FFFF               	dw	65535	; assembler added errata NOP
 13780  0021FC  EF30  F011         	goto	l4437
 13781  002200                     u5150:
 13782  002200  FFFF               	dw	65535	; assembler added errata NOP
 13783  002202  0E01               	movlw	1
 13784  002204  265F               	addwf	___fladd@b^0,f,c
 13785  002206  0E00               	movlw	0
 13786  002208  2260               	addwfc	(___fladd@b+1)^0,f,c
 13787  00220A  2261               	addwfc	(___fladd@b+2)^0,f,c
 13788  00220C  2262               	addwfc	(___fladd@b+3)^0,f,c
 13789  00220E  A062               	btfss	(___fladd@b+3)^0,0,c
 13790  002210  EF0C  F011         	goto	u5161
 13791  002214  EF0F  F011         	goto	u5160
 13792  002218                     u5161:
 13793  002218  FFFF               	dw	65535	; assembler added errata NOP
 13794  00221A  EF30  F011         	goto	l4437
 13795  00221E                     u5160:
 13796  00221E  FFFF               	dw	65535	; assembler added errata NOP
 13797  002220  C05F  F067         	movff	___fladd@b,??___fladd
 13798  002224  C060  F068         	movff	___fladd@b+1,??___fladd+1
 13799  002228  C061  F069         	movff	___fladd@b+2,??___fladd+2
 13800  00222C  C062  F06A         	movff	___fladd@b+3,??___fladd+3
 13801  002230  346A               	rlcf	(??___fladd+3)^0,w,c
 13802  002232  326A               	rrcf	(??___fladd+3)^0,f,c
 13803  002234  3269               	rrcf	(??___fladd+2)^0,f,c
 13804  002236  3268               	rrcf	(??___fladd+1)^0,f,c
 13805  002238  3267               	rrcf	??___fladd^0,f,c
 13806  00223A  C067  F05F         	movff	??___fladd,___fladd@b
 13807  00223E  C068  F060         	movff	??___fladd+1,___fladd@b+1
 13808  002242  C069  F061         	movff	??___fladd+2,___fladd@b+2
 13809  002246  C06A  F062         	movff	??___fladd+3,___fladd@b+3
 13810  00224A  286D               	incf	___fladd@bexp^0,w,c
 13811  00224C  B4D8               	btfsc	status,2,c
 13812  00224E  EF2B  F011         	goto	u5171
 13813  002252  EF2E  F011         	goto	u5170
 13814  002256                     u5171:
 13815  002256  FFFF               	dw	65535	; assembler added errata NOP
 13816  002258  EF30  F011         	goto	l4437
 13817  00225C                     u5170:
 13818  00225C  FFFF               	dw	65535	; assembler added errata NOP
 13819  00225E  2A6D               	incf	___fladd@bexp^0,f,c
 13820  002260                     l4437:
 13821  002260  FFFF               	dw	65535	; assembler added errata NOP
 13822  002262  286D               	incf	___fladd@bexp^0,w,c
 13823  002264  B4D8               	btfsc	status,2,c
 13824  002266  EF37  F011         	goto	u5181
 13825  00226A  EF3A  F011         	goto	u5180
 13826  00226E                     u5181:
 13827  00226E  FFFF               	dw	65535	; assembler added errata NOP
 13828  002270  EF44  F011         	goto	l4441
 13829  002274                     u5180:
 13830  002274  FFFF               	dw	65535	; assembler added errata NOP
 13831  002276  506D               	movf	___fladd@bexp^0,w,c
 13832  002278  A4D8               	btfss	status,2,c
 13833  00227A  EF41  F011         	goto	u5191
 13834  00227E  EF44  F011         	goto	u5190
 13835  002282                     u5191:
 13836  002282  FFFF               	dw	65535	; assembler added errata NOP
 13837  002284  EF59  F011         	goto	l4445
 13838  002288                     u5190:
 13839  002288                     l4441:
 13840  002288  FFFF               	dw	65535	; assembler added errata NOP
 13841  00228A  0E00               	movlw	0
 13842  00228C  6E5F               	movwf	___fladd@b^0,c
 13843  00228E  0E00               	movlw	0
 13844  002290  6E60               	movwf	(___fladd@b+1)^0,c
 13845  002292  0E00               	movlw	0
 13846  002294  6E61               	movwf	(___fladd@b+2)^0,c
 13847  002296  0E00               	movlw	0
 13848  002298  6E62               	movwf	(___fladd@b+3)^0,c
 13849  00229A  506D               	movf	___fladd@bexp^0,w,c
 13850  00229C  A4D8               	btfss	status,2,c
 13851  00229E  EF53  F011         	goto	u5201
 13852  0022A2  EF56  F011         	goto	u5200
 13853  0022A6                     u5201:
 13854  0022A6  FFFF               	dw	65535	; assembler added errata NOP
 13855  0022A8  EF59  F011         	goto	l4445
 13856  0022AC                     u5200:
 13857  0022AC  FFFF               	dw	65535	; assembler added errata NOP
 13858  0022AE  0E00               	movlw	0
 13859  0022B0  6E6B               	movwf	___fladd@signs^0,c
 13860  0022B2                     l4445:
 13861  0022B2  FFFF               	dw	65535	; assembler added errata NOP
 13862  0022B4  A06D               	btfss	___fladd@bexp^0,0,c
 13863  0022B6  EF5F  F011         	goto	u5211
 13864  0022BA  EF62  F011         	goto	u5210
 13865  0022BE                     u5211:
 13866  0022BE  FFFF               	dw	65535	; assembler added errata NOP
 13867  0022C0  EF66  F011         	goto	l4449
 13868  0022C4                     u5210:
 13869  0022C4  FFFF               	dw	65535	; assembler added errata NOP
 13870  0022C6  8E61               	bsf	(___fladd@b+2)^0,7,c
 13871  0022C8  EF68  F011         	goto	l4451
 13872  0022CC                     l4449:
 13873  0022CC  FFFF               	dw	65535	; assembler added errata NOP
 13874  0022CE  9E61               	bcf	(___fladd@b+2)^0,7,c
 13875  0022D0                     l4451:
 13876  0022D0  FFFF               	dw	65535	; assembler added errata NOP
 13877  0022D2  90D8               	bcf	status,0,c
 13878  0022D4  306D               	rrcf	___fladd@bexp^0,w,c
 13879  0022D6  6E62               	movwf	(___fladd@b+3)^0,c
 13880  0022D8  AE6B               	btfss	___fladd@signs^0,7,c
 13881  0022DA  EF71  F011         	goto	u5221
 13882  0022DE  EF74  F011         	goto	u5220
 13883  0022E2                     u5221:
 13884  0022E2  FFFF               	dw	65535	; assembler added errata NOP
 13885  0022E4  EF76  F011         	goto	l4457
 13886  0022E8                     u5220:
 13887  0022E8  FFFF               	dw	65535	; assembler added errata NOP
 13888  0022EA  8E62               	bsf	(___fladd@b+3)^0,7,c
 13889  0022EC                     l4457:
 13890  0022EC  FFFF               	dw	65535	; assembler added errata NOP
 13891  0022EE  C05F  F05F         	movff	___fladd@b,?___fladd
 13892  0022F2  C060  F060         	movff	___fladd@b+1,?___fladd+1
 13893  0022F6  C061  F061         	movff	___fladd@b+2,?___fladd+2
 13894  0022FA  C062  F062         	movff	___fladd@b+3,?___fladd+3
 13895  0022FE                     l964:
 13896  0022FE  FFFF               	dw	65535	; assembler added errata NOP
 13897  002300  0012               	return		;funcret
 13898  002302  FFFF               	dw	65535	; errata NOP
 13899  002304                     __end_of___fladd:
 13900                           	callstack 0
 13901                           
 13902 ;; *************** function ___flneg *****************
 13903 ;; Defined at:
 13904 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
 13905 ;; Parameters:    Size  Location     Type
 13906 ;;  f1              4    0[COMRAM] unsigned char 
 13907 ;; Auto vars:     Size  Location     Type
 13908 ;;		None
 13909 ;; Return value:  Size  Location     Type
 13910 ;;                  4    0[COMRAM] unsigned char 
 13911 ;; Registers used:
 13912 ;;		wreg, status,2, status,0
 13913 ;; Tracked objects:
 13914 ;;		On entry : 0/0
 13915 ;;		On exit  : 0/0
 13916 ;;		Unchanged: 0/0
 13917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13918 ;;      Params:         4       0       0       0       0       0       0
 13919 ;;      Locals:         0       0       0       0       0       0       0
 13920 ;;      Temps:          0       0       0       0       0       0       0
 13921 ;;      Totals:         4       0       0       0       0       0       0
 13922 ;;Total ram usage:        4 bytes
 13923 ;; Hardware stack levels used:    1
 13924 ;; Hardware stack levels required when called:    1
 13925 ;; This function calls:
 13926 ;;		Nothing
 13927 ;; This function is called by:
 13928 ;;		_roundf
 13929 ;; This function uses a non-reentrant model
 13930 ;;
 13931                           
 13932                           	psect	text53
 13933  006442                     __ptext53:
 13934                           	callstack 0
 13935  006442                     ___flneg:
 13936                           	callstack 0
 13937  006442  FFFF               	dw	65535	; assembler added errata NOP
 13938  006444  5001               	movf	___flneg@f1^0,w,c
 13939  006446  1002               	iorwf	(___flneg@f1+1)^0,w,c
 13940  006448  1003               	iorwf	(___flneg@f1+2)^0,w,c
 13941  00644A  1004               	iorwf	(___flneg@f1+3)^0,w,c
 13942  00644C  B4D8               	btfsc	status,2,c
 13943  00644E  EF2B  F032         	goto	u6191
 13944  006452  EF2E  F032         	goto	u6190
 13945  006456                     u6191:
 13946  006456  FFFF               	dw	65535	; assembler added errata NOP
 13947  006458  EF37  F032         	goto	l5095
 13948  00645C                     u6190:
 13949  00645C  FFFF               	dw	65535	; assembler added errata NOP
 13950  00645E  0E00               	movlw	0
 13951  006460  1A01               	xorwf	___flneg@f1^0,f,c
 13952  006462  0E00               	movlw	0
 13953  006464  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 13954  006466  0E00               	movlw	0
 13955  006468  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 13956  00646A  0E80               	movlw	128
 13957  00646C  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 13958  00646E                     l5095:
 13959  00646E  FFFF               	dw	65535	; assembler added errata NOP
 13960  006470  C001  F001         	movff	___flneg@f1,?___flneg
 13961  006474  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 13962  006478  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 13963  00647C  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 13964  006480  0012               	return		;funcret
 13965  006482  FFFF               	dw	65535	; errata NOP
 13966  006484                     __end_of___flneg:
 13967                           	callstack 0
 13968                           
 13969 ;; *************** function _init_PORTS *****************
 13970 ;; Defined at:
 13971 ;;		line 61 in file "init_PIC.c"
 13972 ;; Parameters:    Size  Location     Type
 13973 ;;		None
 13974 ;; Auto vars:     Size  Location     Type
 13975 ;;		None
 13976 ;; Return value:  Size  Location     Type
 13977 ;;                  1    wreg      void 
 13978 ;; Registers used:
 13979 ;;		wreg, status,2
 13980 ;; Tracked objects:
 13981 ;;		On entry : 0/0
 13982 ;;		On exit  : 0/0
 13983 ;;		Unchanged: 0/0
 13984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13985 ;;      Params:         0       0       0       0       0       0       0
 13986 ;;      Locals:         0       0       0       0       0       0       0
 13987 ;;      Temps:          0       0       0       0       0       0       0
 13988 ;;      Totals:         0       0       0       0       0       0       0
 13989 ;;Total ram usage:        0 bytes
 13990 ;; Hardware stack levels used:    1
 13991 ;; Hardware stack levels required when called:    1
 13992 ;; This function calls:
 13993 ;;		Nothing
 13994 ;; This function is called by:
 13995 ;;		_main
 13996 ;; This function uses a non-reentrant model
 13997 ;;
 13998                           
 13999                           	psect	text54
 14000  0063AC                     __ptext54:
 14001                           	callstack 0
 14002  0063AC                     _init_PORTS:
 14003                           	callstack 0
 14004  0063AC  FFFF               	dw	65535	; assembler added errata NOP
 14005  0063AE                     
 14006                           ;init_PIC.c: 63:     LATA = 0;
 14007  0063AE  0E00               	movlw	0
 14008  0063B0  6E89               	movwf	137,c	;volatile
 14009                           
 14010                           ;init_PIC.c: 64:     PORTA = 0;
 14011  0063B2  0E00               	movlw	0
 14012  0063B4  6E80               	movwf	128,c	;volatile
 14013                           
 14014                           ;init_PIC.c: 65:     TRISA = 0xF1;
 14015  0063B6  0EF1               	movlw	241
 14016  0063B8  6E92               	movwf	146,c	;volatile
 14017                           
 14018                           ;init_PIC.c: 67:     LATB = 0;
 14019  0063BA  0E00               	movlw	0
 14020  0063BC  6E8A               	movwf	138,c	;volatile
 14021                           
 14022                           ;init_PIC.c: 68:     PORTB = 0;
 14023  0063BE  0E00               	movlw	0
 14024  0063C0  6E81               	movwf	129,c	;volatile
 14025                           
 14026                           ;init_PIC.c: 69:     TRISB = 0x00;
 14027  0063C2  0E00               	movlw	0
 14028  0063C4  6E93               	movwf	147,c	;volatile
 14029                           
 14030                           ;init_PIC.c: 72:     LATC = 0;
 14031  0063C6  0E00               	movlw	0
 14032  0063C8  6E8B               	movwf	139,c	;volatile
 14033                           
 14034                           ;init_PIC.c: 73:     PORTC = 0;
 14035  0063CA  0E00               	movlw	0
 14036  0063CC  6E82               	movwf	130,c	;volatile
 14037                           
 14038                           ;init_PIC.c: 74:     TRISC = 0xF0;
 14039  0063CE  0EF0               	movlw	240
 14040  0063D0  6E94               	movwf	148,c	;volatile
 14041  0063D2                     
 14042                           ;init_PIC.c: 75:     TRISCbits.RC6 = 0;
 14043  0063D2  9C94               	bcf	148,6,c	;volatile
 14044  0063D4  0012               	return		;funcret
 14045  0063D6  FFFF               	dw	65535	; errata NOP
 14046  0063D8                     __end_of_init_PORTS:
 14047                           	callstack 0
 14048                           
 14049 ;; *************** function _get_reg_value *****************
 14050 ;; Defined at:
 14051 ;;		line 51 in file "serial_rs232.c"
 14052 ;; Parameters:    Size  Location     Type
 14053 ;;		None
 14054 ;; Auto vars:     Size  Location     Type
 14055 ;;  rx_char         1    0[COMRAM] unsigned char 
 14056 ;; Return value:  Size  Location     Type
 14057 ;;                  1    wreg      unsigned char 
 14058 ;; Registers used:
 14059 ;;		wreg, status,2
 14060 ;; Tracked objects:
 14061 ;;		On entry : 0/0
 14062 ;;		On exit  : 0/0
 14063 ;;		Unchanged: 0/0
 14064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14065 ;;      Params:         0       0       0       0       0       0       0
 14066 ;;      Locals:         1       0       0       0       0       0       0
 14067 ;;      Temps:          0       0       0       0       0       0       0
 14068 ;;      Totals:         1       0       0       0       0       0       0
 14069 ;;Total ram usage:        1 bytes
 14070 ;; Hardware stack levels used:    1
 14071 ;; Hardware stack levels required when called:    1
 14072 ;; This function calls:
 14073 ;;		Nothing
 14074 ;; This function is called by:
 14075 ;;		_main
 14076 ;; This function uses a non-reentrant model
 14077 ;;
 14078                           
 14079                           	psect	text55
 14080  006228                     __ptext55:
 14081                           	callstack 0
 14082  006228                     _get_reg_value:
 14083                           	callstack 0
 14084  006228  FFFF               	dw	65535	; assembler added errata NOP
 14085  00622A                     
 14086                           ;serial_rs232.c: 52:     unsigned char rx_char = RCREG;
 14087  00622A  CFAE F001          	movff	4014,get_reg_value@rx_char	;volatile
 14088  00622E                     
 14089                           ;serial_rs232.c: 53:     RCREG = 0;
 14090  00622E  0E00               	movlw	0
 14091  006230  6EAE               	movwf	174,c	;volatile
 14092                           
 14093                           ;serial_rs232.c: 54:     return rx_char;
 14094  006232  5001               	movf	get_reg_value@rx_char^0,w,c
 14095  006234  0012               	return		;funcret
 14096  006236  FFFF               	dw	65535	; errata NOP
 14097  006238                     __end_of_get_reg_value:
 14098                           	callstack 0
 14099                           
 14100 ;; *************** function _get_liters *****************
 14101 ;; Defined at:
 14102 ;;		line 36 in file "oven.c"
 14103 ;; Parameters:    Size  Location     Type
 14104 ;;		None
 14105 ;; Auto vars:     Size  Location     Type
 14106 ;;		None
 14107 ;; Return value:  Size  Location     Type
 14108 ;;                  2   28[BANK0 ] int 
 14109 ;; Registers used:
 14110 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14111 ;; Tracked objects:
 14112 ;;		On entry : 0/0
 14113 ;;		On exit  : 0/0
 14114 ;;		Unchanged: 0/0
 14115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14116 ;;      Params:         0       2       0       0       0       0       0
 14117 ;;      Locals:         0       0       0       0       0       0       0
 14118 ;;      Temps:          0       0       0       0       0       0       0
 14119 ;;      Totals:         0       2       0       0       0       0       0
 14120 ;;Total ram usage:        2 bytes
 14121 ;; Hardware stack levels used:    1
 14122 ;; Hardware stack levels required when called:    2
 14123 ;; This function calls:
 14124 ;;		___flmul
 14125 ;;		___fltol
 14126 ;;		___xxtofl
 14127 ;; This function is called by:
 14128 ;;		_main
 14129 ;; This function uses a non-reentrant model
 14130 ;;
 14131                           
 14132                           	psect	text56
 14133  006892                     __ptext56:
 14134                           	callstack 0
 14135  006892                     _get_liters:
 14136                           	callstack 0
 14137  006892  FFFF               	dw	65535	; assembler added errata NOP
 14138  006894                     
 14139                           ;oven.c: 37:     ADCON0bits.GO = 1;
 14140  006894  84C2               	bsf	194,2,c	;volatile
 14141  006896                     l409:
 14142  006896  FFFF               	dw	65535	; assembler added errata NOP
 14143  006898  B4C2               	btfsc	194,2,c	;volatile
 14144  00689A  EF51  F034         	goto	u6791
 14145  00689E  EF54  F034         	goto	u6790
 14146  0068A2                     u6791:
 14147  0068A2  FFFF               	dw	65535	; assembler added errata NOP
 14148  0068A4  EF4B  F034         	goto	l409
 14149  0068A8                     u6790:
 14150  0068A8  FFFF               	dw	65535	; assembler added errata NOP
 14151  0068AA                     
 14152                           ;oven.c: 39:     return (int) (ADRESH * 0.01);
 14153  0068AA  0E0A               	movlw	10
 14154  0068AC  6E31               	movwf	___flmul@a^0,c
 14155  0068AE  0ED7               	movlw	215
 14156  0068B0  6E32               	movwf	(___flmul@a+1)^0,c
 14157  0068B2  0E23               	movlw	35
 14158  0068B4  6E33               	movwf	(___flmul@a+2)^0,c
 14159  0068B6  0E3C               	movlw	60
 14160  0068B8  6E34               	movwf	(___flmul@a+3)^0,c
 14161  0068BA  50C4               	movf	196,w,c	;volatile
 14162  0068BC  6E1F               	movwf	___xxtofl@val^0,c
 14163  0068BE  6A20               	clrf	(___xxtofl@val+1)^0,c
 14164  0068C0  6A21               	clrf	(___xxtofl@val+2)^0,c
 14165  0068C2  6A22               	clrf	(___xxtofl@val+3)^0,c
 14166  0068C4  0E01               	movlw	1
 14167  0068C6  EC3D  F01D         	call	___xxtofl
 14168  0068CA  C01F  F02D         	movff	?___xxtofl,___flmul@b
 14169  0068CE  C020  F02E         	movff	?___xxtofl+1,___flmul@b+1
 14170  0068D2  C021  F02F         	movff	?___xxtofl+2,___flmul@b+2
 14171  0068D6  C022  F030         	movff	?___xxtofl+3,___flmul@b+3
 14172  0068DA  EC82  F011         	call	___flmul	;wreg free
 14173  0068DE  C02D  F0CA         	movff	?___flmul,___fltol@f1
 14174  0068E2  C02E  F0CB         	movff	?___flmul+1,___fltol@f1+1
 14175  0068E6  C02F  F0CC         	movff	?___flmul+2,___fltol@f1+2
 14176  0068EA  C030  F0CD         	movff	?___flmul+3,___fltol@f1+3
 14177  0068EE  EC92  F03B         	call	___fltol	;wreg free
 14178  0068F2  C0CA  F0D4         	movff	?___fltol,?_get_liters
 14179  0068F6  C0CB  F0D5         	movff	?___fltol+1,?_get_liters+1
 14180  0068FA  0012               	return		;funcret
 14181  0068FC  FFFF               	dw	65535	; errata NOP
 14182  0068FE                     __end_of_get_liters:
 14183                           	callstack 0
 14184                           
 14185 ;; *************** function ___fltol *****************
 14186 ;; Defined at:
 14187 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
 14188 ;; Parameters:    Size  Location     Type
 14189 ;;  f1              4   18[BANK0 ] int 
 14190 ;; Auto vars:     Size  Location     Type
 14191 ;;  exp1            1   27[BANK0 ] unsigned char 
 14192 ;;  sign1           1   26[BANK0 ] unsigned char 
 14193 ;; Return value:  Size  Location     Type
 14194 ;;                  4   18[BANK0 ] long 
 14195 ;; Registers used:
 14196 ;;		wreg, status,2, status,0
 14197 ;; Tracked objects:
 14198 ;;		On entry : 0/0
 14199 ;;		On exit  : 0/0
 14200 ;;		Unchanged: 0/0
 14201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14202 ;;      Params:         0       4       0       0       0       0       0
 14203 ;;      Locals:         0       2       0       0       0       0       0
 14204 ;;      Temps:          0       4       0       0       0       0       0
 14205 ;;      Totals:         0      10       0       0       0       0       0
 14206 ;;Total ram usage:       10 bytes
 14207 ;; Hardware stack levels used:    1
 14208 ;; Hardware stack levels required when called:    1
 14209 ;; This function calls:
 14210 ;;		Nothing
 14211 ;; This function is called by:
 14212 ;;		_init_USART
 14213 ;;		_init_timer_2
 14214 ;;		_update_pwm_duty_ccp1
 14215 ;;		_get_temperature
 14216 ;;		_get_liters
 14217 ;; This function uses a non-reentrant model
 14218 ;;
 14219                           
 14220                           	psect	text57
 14221  007724                     __ptext57:
 14222                           	callstack 0
 14223  007724                     ___fltol:
 14224                           	callstack 0
 14225  007724  FFFF               	dw	65535	; assembler added errata NOP
 14226  007726  0100               	movlb	0	; () banked
 14227  007728  35CC               	rlcf	(___fltol@f1+2)& (0+255),w,b
 14228  00772A  35CD               	rlcf	(___fltol@f1+3)& (0+255),w,b
 14229  00772C  6FD3               	movwf	___fltol@exp1& (0+255),b
 14230  00772E  51D3               	movf	___fltol@exp1& (0+255),w,b
 14231  007730  A4D8               	btfss	status,2,c
 14232  007732  EF9D  F03B         	goto	u6201
 14233  007736  EFA0  F03B         	goto	u6200
 14234  00773A                     u6201:
 14235  00773A  FFFF               	dw	65535	; assembler added errata NOP
 14236  00773C  EFAC  F03B         	goto	l5105
 14237  007740                     u6200:
 14238  007740  FFFF               	dw	65535	; assembler added errata NOP
 14239  007742                     l5101:
 14240  007742  FFFF               	dw	65535	; assembler added errata NOP
 14241                           
 14242                           ; BSR set to: 0
 14243  007744  0E00               	movlw	0
 14244  007746  6FCA               	movwf	?___fltol& (0+255),b
 14245  007748  0E00               	movlw	0
 14246  00774A  6FCB               	movwf	(?___fltol+1)& (0+255),b
 14247  00774C  0E00               	movlw	0
 14248  00774E  6FCC               	movwf	(?___fltol+2)& (0+255),b
 14249  007750  0E00               	movlw	0
 14250  007752  6FCD               	movwf	(?___fltol+3)& (0+255),b
 14251  007754  EF2B  F03C         	goto	l724
 14252  007758                     l5105:
 14253  007758  FFFF               	dw	65535	; assembler added errata NOP
 14254                           
 14255                           ; BSR set to: 0
 14256  00775A  C0CA  F0CE         	movff	___fltol@f1,??___fltol
 14257  00775E  C0CB  F0CF         	movff	___fltol@f1+1,??___fltol+1
 14258  007762  C0CC  F0D0         	movff	___fltol@f1+2,??___fltol+2
 14259  007766  C0CD  F0D1         	movff	___fltol@f1+3,??___fltol+3
 14260  00776A  0E20               	movlw	32
 14261  00776C  EFBE  F03B         	goto	u6210
 14262  007770                     u6215:
 14263  007770  FFFF               	dw	65535	; assembler added errata NOP
 14264  007772  90D8               	bcf	status,0,c
 14265  007774  33D1               	rrcf	(??___fltol+3)& (0+255),f,b
 14266  007776  33D0               	rrcf	(??___fltol+2)& (0+255),f,b
 14267  007778  33CF               	rrcf	(??___fltol+1)& (0+255),f,b
 14268  00777A  33CE               	rrcf	??___fltol& (0+255),f,b
 14269  00777C                     u6210:
 14270  00777C  FFFF               	dw	65535	; assembler added errata NOP
 14271  00777E  2EE8               	decfsz	wreg,f,c
 14272  007780  EFB8  F03B         	goto	u6215
 14273  007784  51CE               	movf	??___fltol& (0+255),w,b
 14274  007786  6FD2               	movwf	___fltol@sign1& (0+255),b
 14275  007788                     
 14276                           ; BSR set to: 0
 14277  007788  8FCC               	bsf	(___fltol@f1+2)& (0+255),7,b
 14278  00778A                     
 14279                           ; BSR set to: 0
 14280  00778A  0EFF               	movlw	255
 14281  00778C  17CA               	andwf	___fltol@f1& (0+255),f,b
 14282  00778E  0EFF               	movlw	255
 14283  007790  17CB               	andwf	(___fltol@f1+1)& (0+255),f,b
 14284  007792  0EFF               	movlw	255
 14285  007794  17CC               	andwf	(___fltol@f1+2)& (0+255),f,b
 14286  007796  0E00               	movlw	0
 14287  007798  17CD               	andwf	(___fltol@f1+3)& (0+255),f,b
 14288  00779A                     
 14289                           ; BSR set to: 0
 14290  00779A  0E96               	movlw	150
 14291  00779C  5FD3               	subwf	___fltol@exp1& (0+255),f,b
 14292  00779E                     
 14293                           ; BSR set to: 0
 14294  00779E  BFD3               	btfsc	___fltol@exp1& (0+255),7,b
 14295  0077A0  EFD7  F03B         	goto	u6220
 14296  0077A4  EFD4  F03B         	goto	u6221
 14297  0077A8                     u6221:
 14298  0077A8  FFFF               	dw	65535	; assembler added errata NOP
 14299  0077AA  EFF1  F03B         	goto	l5125
 14300  0077AE                     u6220:
 14301  0077AE  FFFF               	dw	65535	; assembler added errata NOP
 14302  0077B0                     
 14303                           ; BSR set to: 0
 14304  0077B0  51D3               	movf	___fltol@exp1& (0+255),w,b
 14305  0077B2  0A80               	xorlw	128
 14306  0077B4  0F97               	addlw	151
 14307  0077B6  B0D8               	btfsc	status,0,c
 14308  0077B8  EFE0  F03B         	goto	u6231
 14309  0077BC  EFE3  F03B         	goto	u6230
 14310  0077C0                     u6231:
 14311  0077C0  FFFF               	dw	65535	; assembler added errata NOP
 14312  0077C2  EFE6  F03B         	goto	l5121
 14313  0077C6                     u6230:
 14314  0077C6  FFFF               	dw	65535	; assembler added errata NOP
 14315  0077C8  EFA1  F03B         	goto	l5101
 14316  0077CC                     l5121:
 14317  0077CC  FFFF               	dw	65535	; assembler added errata NOP
 14318                           
 14319                           ; BSR set to: 0
 14320  0077CE  90D8               	bcf	status,0,c
 14321  0077D0  33CD               	rrcf	(___fltol@f1+3)& (0+255),f,b
 14322  0077D2  33CC               	rrcf	(___fltol@f1+2)& (0+255),f,b
 14323  0077D4  33CB               	rrcf	(___fltol@f1+1)& (0+255),f,b
 14324  0077D6  33CA               	rrcf	___fltol@f1& (0+255),f,b
 14325  0077D8                     
 14326                           ; BSR set to: 0
 14327  0077D8  3FD3               	incfsz	___fltol@exp1& (0+255),f,b
 14328  0077DA  EFE6  F03B         	goto	l5121
 14329  0077DE  EF0F  F03C         	goto	l5135
 14330  0077E2                     l5125:
 14331  0077E2  FFFF               	dw	65535	; assembler added errata NOP
 14332                           
 14333                           ; BSR set to: 0
 14334  0077E4  0E1F               	movlw	31
 14335  0077E6  65D3               	cpfsgt	___fltol@exp1& (0+255),b
 14336  0077E8  EFF8  F03B         	goto	u6241
 14337  0077EC  EFFB  F03B         	goto	u6240
 14338  0077F0                     u6241:
 14339  0077F0  FFFF               	dw	65535	; assembler added errata NOP
 14340  0077F2  EF05  F03C         	goto	l5133
 14341  0077F6                     u6240:
 14342  0077F6  FFFF               	dw	65535	; assembler added errata NOP
 14343  0077F8  EFA1  F03B         	goto	l5101
 14344  0077FC                     l5131:
 14345  0077FC  FFFF               	dw	65535	; assembler added errata NOP
 14346                           
 14347                           ; BSR set to: 0
 14348  0077FE  90D8               	bcf	status,0,c
 14349  007800  37CA               	rlcf	___fltol@f1& (0+255),f,b
 14350  007802  37CB               	rlcf	(___fltol@f1+1)& (0+255),f,b
 14351  007804  37CC               	rlcf	(___fltol@f1+2)& (0+255),f,b
 14352  007806  37CD               	rlcf	(___fltol@f1+3)& (0+255),f,b
 14353  007808  07D3               	decf	___fltol@exp1& (0+255),f,b
 14354  00780A                     l5133:
 14355  00780A  FFFF               	dw	65535	; assembler added errata NOP
 14356                           
 14357                           ; BSR set to: 0
 14358  00780C  51D3               	movf	___fltol@exp1& (0+255),w,b
 14359  00780E  A4D8               	btfss	status,2,c
 14360  007810  EF0C  F03C         	goto	u6251
 14361  007814  EF0F  F03C         	goto	u6250
 14362  007818                     u6251:
 14363  007818  FFFF               	dw	65535	; assembler added errata NOP
 14364  00781A  EFFE  F03B         	goto	l5131
 14365  00781E                     u6250:
 14366  00781E                     l5135:
 14367  00781E  FFFF               	dw	65535	; assembler added errata NOP
 14368                           
 14369                           ; BSR set to: 0
 14370  007820  51D2               	movf	___fltol@sign1& (0+255),w,b
 14371  007822  B4D8               	btfsc	status,2,c
 14372  007824  EF16  F03C         	goto	u6261
 14373  007828  EF19  F03C         	goto	u6260
 14374  00782C                     u6261:
 14375  00782C  FFFF               	dw	65535	; assembler added errata NOP
 14376  00782E  EF22  F03C         	goto	l5139
 14377  007832                     u6260:
 14378  007832  FFFF               	dw	65535	; assembler added errata NOP
 14379  007834                     
 14380                           ; BSR set to: 0
 14381  007834  1FCD               	comf	(___fltol@f1+3)& (0+255),f,b
 14382  007836  1FCC               	comf	(___fltol@f1+2)& (0+255),f,b
 14383  007838  1FCB               	comf	(___fltol@f1+1)& (0+255),f,b
 14384  00783A  6DCA               	negf	___fltol@f1& (0+255),b
 14385  00783C  0E00               	movlw	0
 14386  00783E  23CB               	addwfc	(___fltol@f1+1)& (0+255),f,b
 14387  007840  23CC               	addwfc	(___fltol@f1+2)& (0+255),f,b
 14388  007842  23CD               	addwfc	(___fltol@f1+3)& (0+255),f,b
 14389  007844                     l5139:
 14390  007844  FFFF               	dw	65535	; assembler added errata NOP
 14391                           
 14392                           ; BSR set to: 0
 14393  007846  C0CA  F0CA         	movff	___fltol@f1,?___fltol
 14394  00784A  C0CB  F0CB         	movff	___fltol@f1+1,?___fltol+1
 14395  00784E  C0CC  F0CC         	movff	___fltol@f1+2,?___fltol+2
 14396  007852  C0CD  F0CD         	movff	___fltol@f1+3,?___fltol+3
 14397  007856                     l724:
 14398  007856  FFFF               	dw	65535	; assembler added errata NOP
 14399                           
 14400                           ; BSR set to: 0
 14401  007858  0012               	return		;funcret
 14402  00785A  FFFF               	dw	65535	; errata NOP
 14403  00785C                     __end_of___fltol:
 14404                           	callstack 0
 14405                           
 14406 ;; *************** function ___flmul *****************
 14407 ;; Defined at:
 14408 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
 14409 ;; Parameters:    Size  Location     Type
 14410 ;;  b               4   44[COMRAM] long 
 14411 ;;  a               4   48[COMRAM] long 
 14412 ;; Auto vars:     Size  Location     Type
 14413 ;;  prod            4   63[COMRAM] struct .
 14414 ;;  grs             4   57[COMRAM] unsigned long 
 14415 ;;  temp            2   67[COMRAM] struct .
 14416 ;;  bexp            1   62[COMRAM] unsigned char 
 14417 ;;  aexp            1   61[COMRAM] unsigned char 
 14418 ;;  sign            1   56[COMRAM] unsigned char 
 14419 ;; Return value:  Size  Location     Type
 14420 ;;                  4   44[COMRAM] unsigned char 
 14421 ;; Registers used:
 14422 ;;		wreg, status,2, status,0, prodl, prodh
 14423 ;; Tracked objects:
 14424 ;;		On entry : 0/0
 14425 ;;		On exit  : 0/0
 14426 ;;		Unchanged: 0/0
 14427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14428 ;;      Params:         8       0       0       0       0       0       0
 14429 ;;      Locals:        13       0       0       0       0       0       0
 14430 ;;      Temps:          4       0       0       0       0       0       0
 14431 ;;      Totals:        25       0       0       0       0       0       0
 14432 ;;Total ram usage:       25 bytes
 14433 ;; Hardware stack levels used:    1
 14434 ;; Hardware stack levels required when called:    1
 14435 ;; This function calls:
 14436 ;;		Nothing
 14437 ;; This function is called by:
 14438 ;;		_init_timer_2
 14439 ;;		_update_pwm_duty_ccp1
 14440 ;;		_get_temperature
 14441 ;;		_get_liters
 14442 ;;		_roundf
 14443 ;; This function uses a non-reentrant model
 14444 ;;
 14445                           
 14446                           	psect	text58
 14447  002304                     __ptext58:
 14448                           	callstack 0
 14449  002304                     ___flmul:
 14450                           	callstack 0
 14451  002304  FFFF               	dw	65535	; assembler added errata NOP
 14452  002306  5030               	movf	(___flmul@b+3)^0,w,c
 14453  002308  0B80               	andlw	128
 14454  00230A  6E39               	movwf	___flmul@sign^0,c
 14455  00230C  5030               	movf	(___flmul@b+3)^0,w,c
 14456  00230E  2430               	addwf	(___flmul@b+3)^0,w,c
 14457  002310  6E3F               	movwf	___flmul@bexp^0,c
 14458  002312  AE2F               	btfss	(___flmul@b+2)^0,7,c
 14459  002314  EF8E  F011         	goto	u5951
 14460  002318  EF91  F011         	goto	u5950
 14461  00231C                     u5951:
 14462  00231C  FFFF               	dw	65535	; assembler added errata NOP
 14463  00231E  EF93  F011         	goto	l4939
 14464  002322                     u5950:
 14465  002322  FFFF               	dw	65535	; assembler added errata NOP
 14466  002324  803F               	bsf	___flmul@bexp^0,0,c
 14467  002326                     l4939:
 14468  002326  FFFF               	dw	65535	; assembler added errata NOP
 14469  002328  503F               	movf	___flmul@bexp^0,w,c
 14470  00232A  B4D8               	btfsc	status,2,c
 14471  00232C  EF9A  F011         	goto	u5961
 14472  002330  EF9D  F011         	goto	u5960
 14473  002334                     u5961:
 14474  002334  FFFF               	dw	65535	; assembler added errata NOP
 14475  002336  EFB4  F011         	goto	l4947
 14476  00233A                     u5960:
 14477  00233A  FFFF               	dw	65535	; assembler added errata NOP
 14478  00233C  283F               	incf	___flmul@bexp^0,w,c
 14479  00233E  A4D8               	btfss	status,2,c
 14480  002340  EFA4  F011         	goto	u5971
 14481  002344  EFA7  F011         	goto	u5970
 14482  002348                     u5971:
 14483  002348  FFFF               	dw	65535	; assembler added errata NOP
 14484  00234A  EFB0  F011         	goto	l4945
 14485  00234E                     u5970:
 14486  00234E  FFFF               	dw	65535	; assembler added errata NOP
 14487  002350  0E00               	movlw	0
 14488  002352  6E2D               	movwf	___flmul@b^0,c
 14489  002354  0E00               	movlw	0
 14490  002356  6E2E               	movwf	(___flmul@b+1)^0,c
 14491  002358  0E00               	movlw	0
 14492  00235A  6E2F               	movwf	(___flmul@b+2)^0,c
 14493  00235C  0E00               	movlw	0
 14494  00235E  6E30               	movwf	(___flmul@b+3)^0,c
 14495  002360                     l4945:
 14496  002360  FFFF               	dw	65535	; assembler added errata NOP
 14497  002362  8E2F               	bsf	(___flmul@b+2)^0,7,c
 14498  002364  EFBD  F011         	goto	l4949
 14499  002368                     l4947:
 14500  002368  FFFF               	dw	65535	; assembler added errata NOP
 14501  00236A  0E00               	movlw	0
 14502  00236C  6E2D               	movwf	___flmul@b^0,c
 14503  00236E  0E00               	movlw	0
 14504  002370  6E2E               	movwf	(___flmul@b+1)^0,c
 14505  002372  0E00               	movlw	0
 14506  002374  6E2F               	movwf	(___flmul@b+2)^0,c
 14507  002376  0E00               	movlw	0
 14508  002378  6E30               	movwf	(___flmul@b+3)^0,c
 14509  00237A                     l4949:
 14510  00237A  FFFF               	dw	65535	; assembler added errata NOP
 14511  00237C  5034               	movf	(___flmul@a+3)^0,w,c
 14512  00237E  0B80               	andlw	128
 14513  002380  1A39               	xorwf	___flmul@sign^0,f,c
 14514  002382  5034               	movf	(___flmul@a+3)^0,w,c
 14515  002384  2434               	addwf	(___flmul@a+3)^0,w,c
 14516  002386  6E3E               	movwf	___flmul@aexp^0,c
 14517  002388  AE33               	btfss	(___flmul@a+2)^0,7,c
 14518  00238A  EFC9  F011         	goto	u5981
 14519  00238E  EFCC  F011         	goto	u5980
 14520  002392                     u5981:
 14521  002392  FFFF               	dw	65535	; assembler added errata NOP
 14522  002394  EFCE  F011         	goto	l4957
 14523  002398                     u5980:
 14524  002398  FFFF               	dw	65535	; assembler added errata NOP
 14525  00239A  803E               	bsf	___flmul@aexp^0,0,c
 14526  00239C                     l4957:
 14527  00239C  FFFF               	dw	65535	; assembler added errata NOP
 14528  00239E  503E               	movf	___flmul@aexp^0,w,c
 14529  0023A0  B4D8               	btfsc	status,2,c
 14530  0023A2  EFD5  F011         	goto	u5991
 14531  0023A6  EFD8  F011         	goto	u5990
 14532  0023AA                     u5991:
 14533  0023AA  FFFF               	dw	65535	; assembler added errata NOP
 14534  0023AC  EFEF  F011         	goto	l4965
 14535  0023B0                     u5990:
 14536  0023B0  FFFF               	dw	65535	; assembler added errata NOP
 14537  0023B2  283E               	incf	___flmul@aexp^0,w,c
 14538  0023B4  A4D8               	btfss	status,2,c
 14539  0023B6  EFDF  F011         	goto	u6001
 14540  0023BA  EFE2  F011         	goto	u6000
 14541  0023BE                     u6001:
 14542  0023BE  FFFF               	dw	65535	; assembler added errata NOP
 14543  0023C0  EFEB  F011         	goto	l4963
 14544  0023C4                     u6000:
 14545  0023C4  FFFF               	dw	65535	; assembler added errata NOP
 14546  0023C6  0E00               	movlw	0
 14547  0023C8  6E31               	movwf	___flmul@a^0,c
 14548  0023CA  0E00               	movlw	0
 14549  0023CC  6E32               	movwf	(___flmul@a+1)^0,c
 14550  0023CE  0E00               	movlw	0
 14551  0023D0  6E33               	movwf	(___flmul@a+2)^0,c
 14552  0023D2  0E00               	movlw	0
 14553  0023D4  6E34               	movwf	(___flmul@a+3)^0,c
 14554  0023D6                     l4963:
 14555  0023D6  FFFF               	dw	65535	; assembler added errata NOP
 14556  0023D8  8E33               	bsf	(___flmul@a+2)^0,7,c
 14557  0023DA  EFF8  F011         	goto	l1041
 14558  0023DE                     l4965:
 14559  0023DE  FFFF               	dw	65535	; assembler added errata NOP
 14560  0023E0  0E00               	movlw	0
 14561  0023E2  6E31               	movwf	___flmul@a^0,c
 14562  0023E4  0E00               	movlw	0
 14563  0023E6  6E32               	movwf	(___flmul@a+1)^0,c
 14564  0023E8  0E00               	movlw	0
 14565  0023EA  6E33               	movwf	(___flmul@a+2)^0,c
 14566  0023EC  0E00               	movlw	0
 14567  0023EE  6E34               	movwf	(___flmul@a+3)^0,c
 14568  0023F0                     l1041:
 14569  0023F0  FFFF               	dw	65535	; assembler added errata NOP
 14570  0023F2  503E               	movf	___flmul@aexp^0,w,c
 14571  0023F4  B4D8               	btfsc	status,2,c
 14572  0023F6  EFFF  F011         	goto	u6011
 14573  0023FA  EF02  F012         	goto	u6010
 14574  0023FE                     u6011:
 14575  0023FE  FFFF               	dw	65535	; assembler added errata NOP
 14576  002400  EF0C  F012         	goto	l4969
 14577  002404                     u6010:
 14578  002404  FFFF               	dw	65535	; assembler added errata NOP
 14579  002406  503F               	movf	___flmul@bexp^0,w,c
 14580  002408  A4D8               	btfss	status,2,c
 14581  00240A  EF09  F012         	goto	u6021
 14582  00240E  EF0C  F012         	goto	u6020
 14583  002412                     u6021:
 14584  002412  FFFF               	dw	65535	; assembler added errata NOP
 14585  002414  EF17  F012         	goto	l4973
 14586  002418                     u6020:
 14587  002418                     l4969:
 14588  002418  FFFF               	dw	65535	; assembler added errata NOP
 14589  00241A  0E00               	movlw	0
 14590  00241C  6E2D               	movwf	?___flmul^0,c
 14591  00241E  0E00               	movlw	0
 14592  002420  6E2E               	movwf	(?___flmul+1)^0,c
 14593  002422  0E00               	movlw	0
 14594  002424  6E2F               	movwf	(?___flmul+2)^0,c
 14595  002426  0E00               	movlw	0
 14596  002428  6E30               	movwf	(?___flmul+3)^0,c
 14597  00242A  EFD1  F013         	goto	l1045
 14598  00242E                     l4973:
 14599  00242E  FFFF               	dw	65535	; assembler added errata NOP
 14600  002430  5033               	movf	(___flmul@a+2)^0,w,c
 14601  002432  022D               	mulwf	___flmul@b^0,c
 14602  002434  CFF3 F044          	movff	prodl,___flmul@temp
 14603  002438  CFF4 F045          	movff	prodh,___flmul@temp+1
 14604  00243C  5044               	movf	___flmul@temp^0,w,c
 14605  00243E  6E3A               	movwf	___flmul@grs^0,c
 14606  002440  6A3B               	clrf	(___flmul@grs+1)^0,c
 14607  002442  6A3C               	clrf	(___flmul@grs+2)^0,c
 14608  002444  6A3D               	clrf	(___flmul@grs+3)^0,c
 14609  002446  5045               	movf	(___flmul@temp+1)^0,w,c
 14610  002448  6E40               	movwf	___flmul@prod^0,c
 14611  00244A  6A41               	clrf	(___flmul@prod+1)^0,c
 14612  00244C  6A42               	clrf	(___flmul@prod+2)^0,c
 14613  00244E  6A43               	clrf	(___flmul@prod+3)^0,c
 14614  002450  5032               	movf	(___flmul@a+1)^0,w,c
 14615  002452  022E               	mulwf	(___flmul@b+1)^0,c
 14616  002454  CFF3 F044          	movff	prodl,___flmul@temp
 14617  002458  CFF4 F045          	movff	prodh,___flmul@temp+1
 14618  00245C  5044               	movf	___flmul@temp^0,w,c
 14619  00245E  263A               	addwf	___flmul@grs^0,f,c
 14620  002460  0E00               	movlw	0
 14621  002462  223B               	addwfc	(___flmul@grs+1)^0,f,c
 14622  002464  223C               	addwfc	(___flmul@grs+2)^0,f,c
 14623  002466  223D               	addwfc	(___flmul@grs+3)^0,f,c
 14624  002468  5045               	movf	(___flmul@temp+1)^0,w,c
 14625  00246A  2640               	addwf	___flmul@prod^0,f,c
 14626  00246C  0E00               	movlw	0
 14627  00246E  2241               	addwfc	(___flmul@prod+1)^0,f,c
 14628  002470  2242               	addwfc	(___flmul@prod+2)^0,f,c
 14629  002472  2243               	addwfc	(___flmul@prod+3)^0,f,c
 14630  002474  5031               	movf	___flmul@a^0,w,c
 14631  002476  022F               	mulwf	(___flmul@b+2)^0,c
 14632  002478  CFF3 F044          	movff	prodl,___flmul@temp
 14633  00247C  CFF4 F045          	movff	prodh,___flmul@temp+1
 14634  002480  5044               	movf	___flmul@temp^0,w,c
 14635  002482  263A               	addwf	___flmul@grs^0,f,c
 14636  002484  0E00               	movlw	0
 14637  002486  223B               	addwfc	(___flmul@grs+1)^0,f,c
 14638  002488  223C               	addwfc	(___flmul@grs+2)^0,f,c
 14639  00248A  223D               	addwfc	(___flmul@grs+3)^0,f,c
 14640  00248C  5045               	movf	(___flmul@temp+1)^0,w,c
 14641  00248E  2640               	addwf	___flmul@prod^0,f,c
 14642  002490  0E00               	movlw	0
 14643  002492  2241               	addwfc	(___flmul@prod+1)^0,f,c
 14644  002494  2242               	addwfc	(___flmul@prod+2)^0,f,c
 14645  002496  2243               	addwfc	(___flmul@prod+3)^0,f,c
 14646  002498  C03C  F03D         	movff	___flmul@grs+2,___flmul@grs+3
 14647  00249C  C03B  F03C         	movff	___flmul@grs+1,___flmul@grs+2
 14648  0024A0  C03A  F03B         	movff	___flmul@grs,___flmul@grs+1
 14649  0024A4  6A3A               	clrf	___flmul@grs^0,c
 14650  0024A6  5031               	movf	___flmul@a^0,w,c
 14651  0024A8  022E               	mulwf	(___flmul@b+1)^0,c
 14652  0024AA  CFF3 F044          	movff	prodl,___flmul@temp
 14653  0024AE  CFF4 F045          	movff	prodh,___flmul@temp+1
 14654  0024B2  5044               	movf	___flmul@temp^0,w,c
 14655  0024B4  263A               	addwf	___flmul@grs^0,f,c
 14656  0024B6  5045               	movf	(___flmul@temp+1)^0,w,c
 14657  0024B8  223B               	addwfc	(___flmul@grs+1)^0,f,c
 14658  0024BA  0E00               	movlw	0
 14659  0024BC  223C               	addwfc	(___flmul@grs+2)^0,f,c
 14660  0024BE  0E00               	movlw	0
 14661  0024C0  223D               	addwfc	(___flmul@grs+3)^0,f,c
 14662  0024C2  5032               	movf	(___flmul@a+1)^0,w,c
 14663  0024C4  022D               	mulwf	___flmul@b^0,c
 14664  0024C6  CFF3 F044          	movff	prodl,___flmul@temp
 14665  0024CA  CFF4 F045          	movff	prodh,___flmul@temp+1
 14666  0024CE  5044               	movf	___flmul@temp^0,w,c
 14667  0024D0  263A               	addwf	___flmul@grs^0,f,c
 14668  0024D2  5045               	movf	(___flmul@temp+1)^0,w,c
 14669  0024D4  223B               	addwfc	(___flmul@grs+1)^0,f,c
 14670  0024D6  0E00               	movlw	0
 14671  0024D8  223C               	addwfc	(___flmul@grs+2)^0,f,c
 14672  0024DA  0E00               	movlw	0
 14673  0024DC  223D               	addwfc	(___flmul@grs+3)^0,f,c
 14674  0024DE  C03C  F03D         	movff	___flmul@grs+2,___flmul@grs+3
 14675  0024E2  C03B  F03C         	movff	___flmul@grs+1,___flmul@grs+2
 14676  0024E6  C03A  F03B         	movff	___flmul@grs,___flmul@grs+1
 14677  0024EA  6A3A               	clrf	___flmul@grs^0,c
 14678  0024EC  5031               	movf	___flmul@a^0,w,c
 14679  0024EE  022D               	mulwf	___flmul@b^0,c
 14680  0024F0  CFF3 F044          	movff	prodl,___flmul@temp
 14681  0024F4  CFF4 F045          	movff	prodh,___flmul@temp+1
 14682  0024F8  5044               	movf	___flmul@temp^0,w,c
 14683  0024FA  263A               	addwf	___flmul@grs^0,f,c
 14684  0024FC  5045               	movf	(___flmul@temp+1)^0,w,c
 14685  0024FE  223B               	addwfc	(___flmul@grs+1)^0,f,c
 14686  002500  0E00               	movlw	0
 14687  002502  223C               	addwfc	(___flmul@grs+2)^0,f,c
 14688  002504  0E00               	movlw	0
 14689  002506  223D               	addwfc	(___flmul@grs+3)^0,f,c
 14690  002508  5033               	movf	(___flmul@a+2)^0,w,c
 14691  00250A  022E               	mulwf	(___flmul@b+1)^0,c
 14692  00250C  CFF3 F044          	movff	prodl,___flmul@temp
 14693  002510  CFF4 F045          	movff	prodh,___flmul@temp+1
 14694  002514  5044               	movf	___flmul@temp^0,w,c
 14695  002516  2640               	addwf	___flmul@prod^0,f,c
 14696  002518  5045               	movf	(___flmul@temp+1)^0,w,c
 14697  00251A  2241               	addwfc	(___flmul@prod+1)^0,f,c
 14698  00251C  0E00               	movlw	0
 14699  00251E  2242               	addwfc	(___flmul@prod+2)^0,f,c
 14700  002520  0E00               	movlw	0
 14701  002522  2243               	addwfc	(___flmul@prod+3)^0,f,c
 14702  002524  5032               	movf	(___flmul@a+1)^0,w,c
 14703  002526  022F               	mulwf	(___flmul@b+2)^0,c
 14704  002528  CFF3 F044          	movff	prodl,___flmul@temp
 14705  00252C  CFF4 F045          	movff	prodh,___flmul@temp+1
 14706  002530  5044               	movf	___flmul@temp^0,w,c
 14707  002532  2640               	addwf	___flmul@prod^0,f,c
 14708  002534  5045               	movf	(___flmul@temp+1)^0,w,c
 14709  002536  2241               	addwfc	(___flmul@prod+1)^0,f,c
 14710  002538  0E00               	movlw	0
 14711  00253A  2242               	addwfc	(___flmul@prod+2)^0,f,c
 14712  00253C  0E00               	movlw	0
 14713  00253E  2243               	addwfc	(___flmul@prod+3)^0,f,c
 14714  002540  5033               	movf	(___flmul@a+2)^0,w,c
 14715  002542  022F               	mulwf	(___flmul@b+2)^0,c
 14716  002544  CFF3 F044          	movff	prodl,___flmul@temp
 14717  002548  CFF4 F045          	movff	prodh,___flmul@temp+1
 14718  00254C  5044               	movf	___flmul@temp^0,w,c
 14719  00254E  6E35               	movwf	??___flmul^0,c
 14720  002550  5045               	movf	(___flmul@temp+1)^0,w,c
 14721  002552  6E36               	movwf	(??___flmul+1)^0,c
 14722  002554  6A37               	clrf	(??___flmul+2)^0,c
 14723  002556  6A38               	clrf	(??___flmul+3)^0,c
 14724  002558  C037  F038         	movff	??___flmul+2,??___flmul+3
 14725  00255C  C036  F037         	movff	??___flmul+1,??___flmul+2
 14726  002560  C035  F036         	movff	??___flmul,??___flmul+1
 14727  002564  6A35               	clrf	??___flmul^0,c
 14728  002566  5035               	movf	??___flmul^0,w,c
 14729  002568  2640               	addwf	___flmul@prod^0,f,c
 14730  00256A  5036               	movf	(??___flmul+1)^0,w,c
 14731  00256C  2241               	addwfc	(___flmul@prod+1)^0,f,c
 14732  00256E  5037               	movf	(??___flmul+2)^0,w,c
 14733  002570  2242               	addwfc	(___flmul@prod+2)^0,f,c
 14734  002572  5038               	movf	(??___flmul+3)^0,w,c
 14735  002574  2243               	addwfc	(___flmul@prod+3)^0,f,c
 14736  002576  C03A  F035         	movff	___flmul@grs,??___flmul
 14737  00257A  C03B  F036         	movff	___flmul@grs+1,??___flmul+1
 14738  00257E  C03C  F037         	movff	___flmul@grs+2,??___flmul+2
 14739  002582  C03D  F038         	movff	___flmul@grs+3,??___flmul+3
 14740  002586  0E19               	movlw	25
 14741  002588  EFCC  F012         	goto	u6030
 14742  00258C                     u6035:
 14743  00258C  FFFF               	dw	65535	; assembler added errata NOP
 14744  00258E  90D8               	bcf	status,0,c
 14745  002590  3238               	rrcf	(??___flmul+3)^0,f,c
 14746  002592  3237               	rrcf	(??___flmul+2)^0,f,c
 14747  002594  3236               	rrcf	(??___flmul+1)^0,f,c
 14748  002596  3235               	rrcf	??___flmul^0,f,c
 14749  002598                     u6030:
 14750  002598  FFFF               	dw	65535	; assembler added errata NOP
 14751  00259A  2EE8               	decfsz	wreg,f,c
 14752  00259C  EFC6  F012         	goto	u6035
 14753  0025A0  5035               	movf	??___flmul^0,w,c
 14754  0025A2  2640               	addwf	___flmul@prod^0,f,c
 14755  0025A4  5036               	movf	(??___flmul+1)^0,w,c
 14756  0025A6  2241               	addwfc	(___flmul@prod+1)^0,f,c
 14757  0025A8  5037               	movf	(??___flmul+2)^0,w,c
 14758  0025AA  2242               	addwfc	(___flmul@prod+2)^0,f,c
 14759  0025AC  5038               	movf	(??___flmul+3)^0,w,c
 14760  0025AE  2243               	addwfc	(___flmul@prod+3)^0,f,c
 14761  0025B0  C03C  F03D         	movff	___flmul@grs+2,___flmul@grs+3
 14762  0025B4  C03B  F03C         	movff	___flmul@grs+1,___flmul@grs+2
 14763  0025B8  C03A  F03B         	movff	___flmul@grs,___flmul@grs+1
 14764  0025BC  6A3A               	clrf	___flmul@grs^0,c
 14765  0025BE  503E               	movf	___flmul@aexp^0,w,c
 14766  0025C0  C03F  F035         	movff	___flmul@bexp,??___flmul
 14767  0025C4  6A36               	clrf	(??___flmul+1)^0,c
 14768  0025C6  2635               	addwf	??___flmul^0,f,c
 14769  0025C8  0E00               	movlw	0
 14770  0025CA  2236               	addwfc	(??___flmul+1)^0,f,c
 14771  0025CC  0E82               	movlw	130
 14772  0025CE  2435               	addwf	??___flmul^0,w,c
 14773  0025D0  6E44               	movwf	___flmul@temp^0,c
 14774  0025D2  0EFF               	movlw	255
 14775  0025D4  2036               	addwfc	(??___flmul+1)^0,w,c
 14776  0025D6  6E45               	movwf	(___flmul@temp+1)^0,c
 14777  0025D8  EF07  F013         	goto	l5021
 14778  0025DC                     l5015:
 14779  0025DC  FFFF               	dw	65535	; assembler added errata NOP
 14780  0025DE  90D8               	bcf	status,0,c
 14781  0025E0  3640               	rlcf	___flmul@prod^0,f,c
 14782  0025E2  3641               	rlcf	(___flmul@prod+1)^0,f,c
 14783  0025E4  3642               	rlcf	(___flmul@prod+2)^0,f,c
 14784  0025E6  3643               	rlcf	(___flmul@prod+3)^0,f,c
 14785  0025E8  AE3D               	btfss	(___flmul@grs+3)^0,7,c
 14786  0025EA  EFF9  F012         	goto	u6041
 14787  0025EE  EFFC  F012         	goto	u6040
 14788  0025F2                     u6041:
 14789  0025F2  FFFF               	dw	65535	; assembler added errata NOP
 14790  0025F4  EFFE  F012         	goto	l1048
 14791  0025F8                     u6040:
 14792  0025F8  FFFF               	dw	65535	; assembler added errata NOP
 14793  0025FA  8040               	bsf	___flmul@prod^0,0,c
 14794  0025FC                     l1048:
 14795  0025FC  FFFF               	dw	65535	; assembler added errata NOP
 14796  0025FE  90D8               	bcf	status,0,c
 14797  002600  363A               	rlcf	___flmul@grs^0,f,c
 14798  002602  363B               	rlcf	(___flmul@grs+1)^0,f,c
 14799  002604  363C               	rlcf	(___flmul@grs+2)^0,f,c
 14800  002606  363D               	rlcf	(___flmul@grs+3)^0,f,c
 14801  002608  0644               	decf	___flmul@temp^0,f,c
 14802  00260A  A0D8               	btfss	status,0,c
 14803  00260C  0645               	decf	(___flmul@temp+1)^0,f,c
 14804  00260E                     l5021:
 14805  00260E  FFFF               	dw	65535	; assembler added errata NOP
 14806  002610  AE42               	btfss	(___flmul@prod+2)^0,7,c
 14807  002612  EF0D  F013         	goto	u6051
 14808  002616  EF10  F013         	goto	u6050
 14809  00261A                     u6051:
 14810  00261A  FFFF               	dw	65535	; assembler added errata NOP
 14811  00261C  EFEE  F012         	goto	l5015
 14812  002620                     u6050:
 14813  002620  FFFF               	dw	65535	; assembler added errata NOP
 14814  002622  0E00               	movlw	0
 14815  002624  6E3E               	movwf	___flmul@aexp^0,c
 14816  002626  AE3D               	btfss	(___flmul@grs+3)^0,7,c
 14817  002628  EF18  F013         	goto	u6061
 14818  00262C  EF1B  F013         	goto	u6060
 14819  002630                     u6061:
 14820  002630  FFFF               	dw	65535	; assembler added errata NOP
 14821  002632  EF46  F013         	goto	l1050
 14822  002636                     u6060:
 14823  002636  FFFF               	dw	65535	; assembler added errata NOP
 14824  002638  0EFF               	movlw	255
 14825  00263A  143A               	andwf	___flmul@grs^0,w,c
 14826  00263C  6E35               	movwf	??___flmul^0,c
 14827  00263E  0EFF               	movlw	255
 14828  002640  143B               	andwf	(___flmul@grs+1)^0,w,c
 14829  002642  6E36               	movwf	(??___flmul+1)^0,c
 14830  002644  0EFF               	movlw	255
 14831  002646  143C               	andwf	(___flmul@grs+2)^0,w,c
 14832  002648  6E37               	movwf	(??___flmul+2)^0,c
 14833  00264A  0E7F               	movlw	127
 14834  00264C  143D               	andwf	(___flmul@grs+3)^0,w,c
 14835  00264E  6E38               	movwf	(??___flmul+3)^0,c
 14836  002650  5035               	movf	??___flmul^0,w,c
 14837  002652  1036               	iorwf	(??___flmul+1)^0,w,c
 14838  002654  1037               	iorwf	(??___flmul+2)^0,w,c
 14839  002656  1038               	iorwf	(??___flmul+3)^0,w,c
 14840  002658  B4D8               	btfsc	status,2,c
 14841  00265A  EF31  F013         	goto	u6071
 14842  00265E  EF34  F013         	goto	u6070
 14843  002662                     u6071:
 14844  002662  FFFF               	dw	65535	; assembler added errata NOP
 14845  002664  EF3A  F013         	goto	l1051
 14846  002668                     u6070:
 14847  002668  FFFF               	dw	65535	; assembler added errata NOP
 14848  00266A                     l5029:
 14849  00266A  FFFF               	dw	65535	; assembler added errata NOP
 14850  00266C  0E01               	movlw	1
 14851  00266E  6E3E               	movwf	___flmul@aexp^0,c
 14852  002670  EF46  F013         	goto	l1050
 14853  002674                     l1051:
 14854  002674  FFFF               	dw	65535	; assembler added errata NOP
 14855  002676  A040               	btfss	___flmul@prod^0,0,c
 14856  002678  EF40  F013         	goto	u6081
 14857  00267C  EF43  F013         	goto	u6080
 14858  002680                     u6081:
 14859  002680  FFFF               	dw	65535	; assembler added errata NOP
 14860  002682  EF46  F013         	goto	l1050
 14861  002686                     u6080:
 14862  002686  FFFF               	dw	65535	; assembler added errata NOP
 14863  002688  EF35  F013         	goto	l5029
 14864  00268C                     l1050:
 14865  00268C  FFFF               	dw	65535	; assembler added errata NOP
 14866  00268E  503E               	movf	___flmul@aexp^0,w,c
 14867  002690  B4D8               	btfsc	status,2,c
 14868  002692  EF4D  F013         	goto	u6091
 14869  002696  EF50  F013         	goto	u6090
 14870  00269A                     u6091:
 14871  00269A  FFFF               	dw	65535	; assembler added errata NOP
 14872  00269C  EF77  F013         	goto	l5041
 14873  0026A0                     u6090:
 14874  0026A0  FFFF               	dw	65535	; assembler added errata NOP
 14875  0026A2  0E01               	movlw	1
 14876  0026A4  2640               	addwf	___flmul@prod^0,f,c
 14877  0026A6  0E00               	movlw	0
 14878  0026A8  2241               	addwfc	(___flmul@prod+1)^0,f,c
 14879  0026AA  2242               	addwfc	(___flmul@prod+2)^0,f,c
 14880  0026AC  2243               	addwfc	(___flmul@prod+3)^0,f,c
 14881  0026AE  A043               	btfss	(___flmul@prod+3)^0,0,c
 14882  0026B0  EF5C  F013         	goto	u6101
 14883  0026B4  EF5F  F013         	goto	u6100
 14884  0026B8                     u6101:
 14885  0026B8  FFFF               	dw	65535	; assembler added errata NOP
 14886  0026BA  EF77  F013         	goto	l5041
 14887  0026BE                     u6100:
 14888  0026BE  FFFF               	dw	65535	; assembler added errata NOP
 14889  0026C0  C040  F035         	movff	___flmul@prod,??___flmul
 14890  0026C4  C041  F036         	movff	___flmul@prod+1,??___flmul+1
 14891  0026C8  C042  F037         	movff	___flmul@prod+2,??___flmul+2
 14892  0026CC  C043  F038         	movff	___flmul@prod+3,??___flmul+3
 14893  0026D0  3438               	rlcf	(??___flmul+3)^0,w,c
 14894  0026D2  3238               	rrcf	(??___flmul+3)^0,f,c
 14895  0026D4  3237               	rrcf	(??___flmul+2)^0,f,c
 14896  0026D6  3236               	rrcf	(??___flmul+1)^0,f,c
 14897  0026D8  3235               	rrcf	??___flmul^0,f,c
 14898  0026DA  C035  F040         	movff	??___flmul,___flmul@prod
 14899  0026DE  C036  F041         	movff	??___flmul+1,___flmul@prod+1
 14900  0026E2  C037  F042         	movff	??___flmul+2,___flmul@prod+2
 14901  0026E6  C038  F043         	movff	??___flmul+3,___flmul@prod+3
 14902  0026EA  4A44               	infsnz	___flmul@temp^0,f,c
 14903  0026EC  2A45               	incf	(___flmul@temp+1)^0,f,c
 14904  0026EE                     l5041:
 14905  0026EE  FFFF               	dw	65535	; assembler added errata NOP
 14906  0026F0  BE45               	btfsc	(___flmul@temp+1)^0,7,c
 14907  0026F2  EF83  F013         	goto	u6111
 14908  0026F6  5045               	movf	(___flmul@temp+1)^0,w,c
 14909  0026F8  E109               	bnz	u6110
 14910  0026FA  2844               	incf	___flmul@temp^0,w,c
 14911  0026FC  A0D8               	btfss	status,0,c
 14912  0026FE  EF83  F013         	goto	u6111
 14913  002702  EF86  F013         	goto	u6110
 14914  002706                     u6111:
 14915  002706  FFFF               	dw	65535	; assembler added errata NOP
 14916  002708  EF91  F013         	goto	l5045
 14917  00270C                     u6110:
 14918  00270C  FFFF               	dw	65535	; assembler added errata NOP
 14919  00270E  0E00               	movlw	0
 14920  002710  6E40               	movwf	___flmul@prod^0,c
 14921  002712  0E00               	movlw	0
 14922  002714  6E41               	movwf	(___flmul@prod+1)^0,c
 14923  002716  0E80               	movlw	128
 14924  002718  6E42               	movwf	(___flmul@prod+2)^0,c
 14925  00271A  0E7F               	movlw	127
 14926  00271C  6E43               	movwf	(___flmul@prod+3)^0,c
 14927  00271E  EFC6  F013         	goto	l5057
 14928  002722                     l5045:
 14929  002722  FFFF               	dw	65535	; assembler added errata NOP
 14930  002724  BE45               	btfsc	(___flmul@temp+1)^0,7,c
 14931  002726  EFA0  F013         	goto	u6120
 14932  00272A  5045               	movf	(___flmul@temp+1)^0,w,c
 14933  00272C  E106               	bnz	u6121
 14934  00272E  0444               	decf	___flmul@temp^0,w,c
 14935  002730  B0D8               	btfsc	status,0,c
 14936  002732  EF9D  F013         	goto	u6121
 14937  002736  EFA0  F013         	goto	u6120
 14938  00273A                     u6121:
 14939  00273A  FFFF               	dw	65535	; assembler added errata NOP
 14940  00273C  EFAD  F013         	goto	l1058
 14941  002740                     u6120:
 14942  002740  FFFF               	dw	65535	; assembler added errata NOP
 14943  002742  0E00               	movlw	0
 14944  002744  6E40               	movwf	___flmul@prod^0,c
 14945  002746  0E00               	movlw	0
 14946  002748  6E41               	movwf	(___flmul@prod+1)^0,c
 14947  00274A  0E00               	movlw	0
 14948  00274C  6E42               	movwf	(___flmul@prod+2)^0,c
 14949  00274E  0E00               	movlw	0
 14950  002750  6E43               	movwf	(___flmul@prod+3)^0,c
 14951  002752  0E00               	movlw	0
 14952  002754  6E39               	movwf	___flmul@sign^0,c
 14953  002756  EFC6  F013         	goto	l5057
 14954  00275A                     l1058:
 14955  00275A  FFFF               	dw	65535	; assembler added errata NOP
 14956  00275C  C044  F03F         	movff	___flmul@temp,___flmul@bexp
 14957  002760  0EFF               	movlw	255
 14958  002762  1640               	andwf	___flmul@prod^0,f,c
 14959  002764  0EFF               	movlw	255
 14960  002766  1641               	andwf	(___flmul@prod+1)^0,f,c
 14961  002768  0E7F               	movlw	127
 14962  00276A  1642               	andwf	(___flmul@prod+2)^0,f,c
 14963  00276C  0E00               	movlw	0
 14964  00276E  1643               	andwf	(___flmul@prod+3)^0,f,c
 14965  002770  A03F               	btfss	___flmul@bexp^0,0,c
 14966  002772  EFBD  F013         	goto	u6131
 14967  002776  EFC0  F013         	goto	u6130
 14968  00277A                     u6131:
 14969  00277A  FFFF               	dw	65535	; assembler added errata NOP
 14970  00277C  EFC2  F013         	goto	l5055
 14971  002780                     u6130:
 14972  002780  FFFF               	dw	65535	; assembler added errata NOP
 14973  002782  8E42               	bsf	(___flmul@prod+2)^0,7,c
 14974  002784                     l5055:
 14975  002784  FFFF               	dw	65535	; assembler added errata NOP
 14976  002786  90D8               	bcf	status,0,c
 14977  002788  303F               	rrcf	___flmul@bexp^0,w,c
 14978  00278A  6E43               	movwf	(___flmul@prod+3)^0,c
 14979  00278C                     l5057:
 14980  00278C  FFFF               	dw	65535	; assembler added errata NOP
 14981  00278E  5039               	movf	___flmul@sign^0,w,c
 14982  002790  1243               	iorwf	(___flmul@prod+3)^0,f,c
 14983  002792  C040  F02D         	movff	___flmul@prod,?___flmul
 14984  002796  C041  F02E         	movff	___flmul@prod+1,?___flmul+1
 14985  00279A  C042  F02F         	movff	___flmul@prod+2,?___flmul+2
 14986  00279E  C043  F030         	movff	___flmul@prod+3,?___flmul+3
 14987  0027A2                     l1045:
 14988  0027A2  FFFF               	dw	65535	; assembler added errata NOP
 14989  0027A4  0012               	return		;funcret
 14990  0027A6  FFFF               	dw	65535	; errata NOP
 14991  0027A8                     __end_of___flmul:
 14992                           	callstack 0
 14993                           
 14994 ;; *************** function _configure_ad_conversion_tank *****************
 14995 ;; Defined at:
 14996 ;;		line 19 in file "oven.c"
 14997 ;; Parameters:    Size  Location     Type
 14998 ;;		None
 14999 ;; Auto vars:     Size  Location     Type
 15000 ;;		None
 15001 ;; Return value:  Size  Location     Type
 15002 ;;                  1    wreg      void 
 15003 ;; Registers used:
 15004 ;;		wreg, status,2
 15005 ;; Tracked objects:
 15006 ;;		On entry : 0/0
 15007 ;;		On exit  : 0/0
 15008 ;;		Unchanged: 0/0
 15009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15010 ;;      Params:         0       0       0       0       0       0       0
 15011 ;;      Locals:         0       0       0       0       0       0       0
 15012 ;;      Temps:          0       0       0       0       0       0       0
 15013 ;;      Totals:         0       0       0       0       0       0       0
 15014 ;;Total ram usage:        0 bytes
 15015 ;; Hardware stack levels used:    1
 15016 ;; Hardware stack levels required when called:    1
 15017 ;; This function calls:
 15018 ;;		Nothing
 15019 ;; This function is called by:
 15020 ;;		_main
 15021 ;; This function uses a non-reentrant model
 15022 ;;
 15023                           
 15024                           	psect	text59
 15025  006282                     __ptext59:
 15026                           	callstack 0
 15027  006282                     _configure_ad_conversion_tank:
 15028                           	callstack 0
 15029  006282  FFFF               	dw	65535	; assembler added errata NOP
 15030  006284                     
 15031                           ;oven.c: 20:     ADCON0 = 0;
 15032  006284  0E00               	movlw	0
 15033  006286  6EC2               	movwf	194,c	;volatile
 15034  006288                     
 15035                           ;oven.c: 21:     ADCON0bits.CHS0 = 0;
 15036  006288  96C2               	bcf	194,3,c	;volatile
 15037  00628A                     
 15038                           ;oven.c: 22:     ADCON0bits.CHS1 = 0;
 15039  00628A  98C2               	bcf	194,4,c	;volatile
 15040  00628C                     
 15041                           ;oven.c: 23:     ADCON0bits.CHS2 = 0;
 15042  00628C  9AC2               	bcf	194,5,c	;volatile
 15043  00628E                     
 15044                           ;oven.c: 24:     ADCON0bits.ADON = 1;
 15045  00628E  80C2               	bsf	194,0,c	;volatile
 15046                           
 15047                           ;oven.c: 25:     ADRESH = 0;
 15048  006290  0E00               	movlw	0
 15049  006292  6EC4               	movwf	196,c	;volatile
 15050                           
 15051                           ;oven.c: 26:     ADRESL = 0;
 15052  006294  0E00               	movlw	0
 15053  006296  6EC3               	movwf	195,c	;volatile
 15054                           
 15055                           ;oven.c: 27:     ADCON1 = 0;
 15056  006298  0E00               	movlw	0
 15057  00629A  6EC1               	movwf	193,c	;volatile
 15058  00629C  0012               	return		;funcret
 15059  00629E  FFFF               	dw	65535	; errata NOP
 15060  0062A0                     __end_of_configure_ad_conversion_tank:
 15061                           	callstack 0
 15062                           
 15063 ;; *************** function _configure_ad_conversion_oven *****************
 15064 ;; Defined at:
 15065 ;;		line 8 in file "oven.c"
 15066 ;; Parameters:    Size  Location     Type
 15067 ;;		None
 15068 ;; Auto vars:     Size  Location     Type
 15069 ;;		None
 15070 ;; Return value:  Size  Location     Type
 15071 ;;                  1    wreg      void 
 15072 ;; Registers used:
 15073 ;;		wreg, status,2
 15074 ;; Tracked objects:
 15075 ;;		On entry : 0/0
 15076 ;;		On exit  : 0/0
 15077 ;;		Unchanged: 0/0
 15078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15079 ;;      Params:         0       0       0       0       0       0       0
 15080 ;;      Locals:         0       0       0       0       0       0       0
 15081 ;;      Temps:          0       0       0       0       0       0       0
 15082 ;;      Totals:         0       0       0       0       0       0       0
 15083 ;;Total ram usage:        0 bytes
 15084 ;; Hardware stack levels used:    1
 15085 ;; Hardware stack levels required when called:    1
 15086 ;; This function calls:
 15087 ;;		Nothing
 15088 ;; This function is called by:
 15089 ;;		_main
 15090 ;; This function uses a non-reentrant model
 15091 ;;
 15092                           
 15093                           	psect	text60
 15094  006264                     __ptext60:
 15095                           	callstack 0
 15096  006264                     _configure_ad_conversion_oven:
 15097                           	callstack 0
 15098  006264  FFFF               	dw	65535	; assembler added errata NOP
 15099  006266                     
 15100                           ;oven.c: 9:     ADCON0 = 0;
 15101  006266  0E00               	movlw	0
 15102  006268  6EC2               	movwf	194,c	;volatile
 15103  00626A                     
 15104                           ;oven.c: 10:     ADCON0bits.CHS0 = 0;
 15105  00626A  96C2               	bcf	194,3,c	;volatile
 15106  00626C                     
 15107                           ;oven.c: 11:     ADCON0bits.CHS1 = 0;
 15108  00626C  98C2               	bcf	194,4,c	;volatile
 15109  00626E                     
 15110                           ;oven.c: 12:     ADCON0bits.CHS2 = 1;
 15111  00626E  8AC2               	bsf	194,5,c	;volatile
 15112  006270                     
 15113                           ;oven.c: 13:     ADCON0bits.ADON = 1;
 15114  006270  80C2               	bsf	194,0,c	;volatile
 15115                           
 15116                           ;oven.c: 14:     ADRESH = 0;
 15117  006272  0E00               	movlw	0
 15118  006274  6EC4               	movwf	196,c	;volatile
 15119                           
 15120                           ;oven.c: 15:     ADRESL = 0;
 15121  006276  0E00               	movlw	0
 15122  006278  6EC3               	movwf	195,c	;volatile
 15123                           
 15124                           ;oven.c: 16:     ADCON1 = 0;
 15125  00627A  0E00               	movlw	0
 15126  00627C  6EC1               	movwf	193,c	;volatile
 15127  00627E  0012               	return		;funcret
 15128  006280  FFFF               	dw	65535	; errata NOP
 15129  006282                     __end_of_configure_ad_conversion_oven:
 15130                           	callstack 0
 15131                           
 15132 ;; *************** function _check_temperature *****************
 15133 ;; Defined at:
 15134 ;;		line 50 in file "oven.c"
 15135 ;; Parameters:    Size  Location     Type
 15136 ;;  temp_to_be_c    2   30[BANK0 ] int 
 15137 ;; Auto vars:     Size  Location     Type
 15138 ;;  grad            4   32[BANK0 ] float 
 15139 ;; Return value:  Size  Location     Type
 15140 ;;                  2   30[BANK0 ] int 
 15141 ;; Registers used:
 15142 ;;		wreg, status,2, status,0, cstack
 15143 ;; Tracked objects:
 15144 ;;		On entry : 0/0
 15145 ;;		On exit  : 0/0
 15146 ;;		Unchanged: 0/0
 15147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15148 ;;      Params:         0       2       0       0       0       0       0
 15149 ;;      Locals:         0       4       0       0       0       0       0
 15150 ;;      Temps:          0       0       0       0       0       0       0
 15151 ;;      Totals:         0       6       0       0       0       0       0
 15152 ;;Total ram usage:        6 bytes
 15153 ;; Hardware stack levels used:    1
 15154 ;; Hardware stack levels required when called:    2
 15155 ;; This function calls:
 15156 ;;		___awdiv
 15157 ;;		___flge
 15158 ;;		___xxtofl
 15159 ;;		_abs
 15160 ;; This function is called by:
 15161 ;;		_main
 15162 ;; This function uses a non-reentrant model
 15163 ;;
 15164                           
 15165                           	psect	text61
 15166  006F6C                     __ptext61:
 15167                           	callstack 0
 15168  006F6C                     _check_temperature:
 15169                           	callstack 0
 15170  006F6C  FFFF               	dw	65535	; assembler added errata NOP
 15171  006F6E                     
 15172                           ;oven.c: 51:     float grad = abs(temp_to_be_checked - (-63))/5;
 15173  006F6E  0E00               	movlw	0
 15174  006F70  6E1A               	movwf	(___awdiv@divisor+1)^0,c
 15175  006F72  0E05               	movlw	5
 15176  006F74  6E19               	movwf	___awdiv@divisor^0,c
 15177  006F76  0E3F               	movlw	63
 15178  006F78  0100               	movlb	0	; () banked
 15179  006F7A  25D6               	addwf	check_temperature@temp_to_be_checked& (0+255),w,b
 15180  006F7C  6E13               	movwf	abs@a^0,c
 15181  006F7E  0E00               	movlw	0
 15182  006F80  21D7               	addwfc	(check_temperature@temp_to_be_checked+1)& (0+255),w,b
 15183  006F82  6E14               	movwf	(abs@a+1)^0,c
 15184  006F84  EC0E  F033         	call	_abs	;wreg free
 15185  006F88  C013  F017         	movff	?_abs,___awdiv@dividend
 15186  006F8C  C014  F018         	movff	?_abs+1,___awdiv@dividend+1
 15187  006F90  EC7D  F039         	call	___awdiv	;wreg free
 15188  006F94  C017  F01F         	movff	?___awdiv,___xxtofl@val
 15189  006F98  C018  F020         	movff	?___awdiv+1,___xxtofl@val+1
 15190  006F9C  0E00               	movlw	0
 15191  006F9E  BE20               	btfsc	(___xxtofl@val+1)^0,7,c
 15192  006FA0  0EFF               	movlw	-1
 15193  006FA2  6E21               	movwf	(___xxtofl@val+2)^0,c
 15194  006FA4  6E22               	movwf	(___xxtofl@val+3)^0,c
 15195  006FA6  0E01               	movlw	1
 15196  006FA8  EC3D  F01D         	call	___xxtofl
 15197  006FAC  C01F  F0D8         	movff	?___xxtofl,check_temperature@grad
 15198  006FB0  C020  F0D9         	movff	?___xxtofl+1,check_temperature@grad+1
 15199  006FB4  C021  F0DA         	movff	?___xxtofl+2,check_temperature@grad+2
 15200  006FB8  C022  F0DB         	movff	?___xxtofl+3,check_temperature@grad+3
 15201                           
 15202                           ;oven.c: 52:     if (grad >= 12 && grad <= 13){
 15203  006FBC  C0D8  F001         	movff	check_temperature@grad,___flge@ff1
 15204  006FC0  C0D9  F002         	movff	check_temperature@grad+1,___flge@ff1+1
 15205  006FC4  C0DA  F003         	movff	check_temperature@grad+2,___flge@ff1+2
 15206  006FC8  C0DB  F004         	movff	check_temperature@grad+3,___flge@ff1+3
 15207  006FCC  0E00               	movlw	0
 15208  006FCE  6E05               	movwf	___flge@ff2^0,c
 15209  006FD0  0E00               	movlw	0
 15210  006FD2  6E06               	movwf	(___flge@ff2+1)^0,c
 15211  006FD4  0E40               	movlw	64
 15212  006FD6  6E07               	movwf	(___flge@ff2+2)^0,c
 15213  006FD8  0E41               	movlw	65
 15214  006FDA  6E08               	movwf	(___flge@ff2+3)^0,c
 15215  006FDC  ECFE  F03A         	call	___flge	;wreg free
 15216  006FE0  A0D8               	btfss	status,0,c
 15217  006FE2  EFF5  F037         	goto	u6801
 15218  006FE6  EFF8  F037         	goto	u6800
 15219  006FEA                     u6801:
 15220  006FEA  FFFF               	dw	65535	; assembler added errata NOP
 15221  006FEC  EF1B  F038         	goto	l5569
 15222  006FF0                     u6800:
 15223  006FF0  FFFF               	dw	65535	; assembler added errata NOP
 15224  006FF2  0E00               	movlw	0
 15225  006FF4  6E01               	movwf	___flge@ff1^0,c
 15226  006FF6  0E00               	movlw	0
 15227  006FF8  6E02               	movwf	(___flge@ff1+1)^0,c
 15228  006FFA  0E50               	movlw	80
 15229  006FFC  6E03               	movwf	(___flge@ff1+2)^0,c
 15230  006FFE  0E41               	movlw	65
 15231  007000  6E04               	movwf	(___flge@ff1+3)^0,c
 15232  007002  C0D8  F005         	movff	check_temperature@grad,___flge@ff2
 15233  007006  C0D9  F006         	movff	check_temperature@grad+1,___flge@ff2+1
 15234  00700A  C0DA  F007         	movff	check_temperature@grad+2,___flge@ff2+2
 15235  00700E  C0DB  F008         	movff	check_temperature@grad+3,___flge@ff2+3
 15236  007012  ECFE  F03A         	call	___flge	;wreg free
 15237  007016  A0D8               	btfss	status,0,c
 15238  007018  EF10  F038         	goto	u6811
 15239  00701C  EF13  F038         	goto	u6810
 15240  007020                     u6811:
 15241  007020  FFFF               	dw	65535	; assembler added errata NOP
 15242  007022  EF1B  F038         	goto	l5569
 15243  007026                     u6810:
 15244  007026  FFFF               	dw	65535	; assembler added errata NOP
 15245  007028                     
 15246                           ;oven.c: 53:         return 1;
 15247  007028  0E00               	movlw	0
 15248  00702A  0100               	movlb	0	; () banked
 15249  00702C  6FD7               	movwf	(?_check_temperature+1)& (0+255),b
 15250  00702E  0E01               	movlw	1
 15251  007030  6FD6               	movwf	?_check_temperature& (0+255),b
 15252  007032  EF21  F038         	goto	l423
 15253  007036                     l5569:
 15254  007036  FFFF               	dw	65535	; assembler added errata NOP
 15255                           
 15256                           ;oven.c: 55:         return 0;
 15257  007038  0E00               	movlw	0
 15258  00703A  0100               	movlb	0	; () banked
 15259  00703C  6FD7               	movwf	(?_check_temperature+1)& (0+255),b
 15260  00703E  0E00               	movlw	0
 15261  007040  6FD6               	movwf	?_check_temperature& (0+255),b
 15262  007042                     l423:
 15263  007042  FFFF               	dw	65535	; assembler added errata NOP
 15264                           
 15265                           ; BSR set to: 0
 15266  007044  0012               	return		;funcret
 15267  007046  FFFF               	dw	65535	; errata NOP
 15268  007048                     __end_of_check_temperature:
 15269                           	callstack 0
 15270                           
 15271 ;; *************** function _abs *****************
 15272 ;; Defined at:
 15273 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
 15274 ;; Parameters:    Size  Location     Type
 15275 ;;  a               2   18[COMRAM] int 
 15276 ;; Auto vars:     Size  Location     Type
 15277 ;;		None
 15278 ;; Return value:  Size  Location     Type
 15279 ;;                  2   18[COMRAM] int 
 15280 ;; Registers used:
 15281 ;;		wreg, status,2, status,0
 15282 ;; Tracked objects:
 15283 ;;		On entry : 0/0
 15284 ;;		On exit  : 0/0
 15285 ;;		Unchanged: 0/0
 15286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15287 ;;      Params:         2       0       0       0       0       0       0
 15288 ;;      Locals:         0       0       0       0       0       0       0
 15289 ;;      Temps:          2       0       0       0       0       0       0
 15290 ;;      Totals:         4       0       0       0       0       0       0
 15291 ;;Total ram usage:        4 bytes
 15292 ;; Hardware stack levels used:    1
 15293 ;; Hardware stack levels required when called:    1
 15294 ;; This function calls:
 15295 ;;		Nothing
 15296 ;; This function is called by:
 15297 ;;		_check_temperature
 15298 ;;		_dtoa
 15299 ;; This function uses a non-reentrant model
 15300 ;;
 15301                           
 15302                           	psect	text62
 15303  00661C                     __ptext62:
 15304                           	callstack 0
 15305  00661C                     _abs:
 15306                           	callstack 0
 15307  00661C  FFFF               	dw	65535	; assembler added errata NOP
 15308  00661E  BE14               	btfsc	(abs@a+1)^0,7,c
 15309  006620  EF1D  F033         	goto	u3760
 15310  006624  5014               	movf	(abs@a+1)^0,w,c
 15311  006626  E106               	bnz	u3761
 15312  006628  0413               	decf	abs@a^0,w,c
 15313  00662A  B0D8               	btfsc	status,0,c
 15314  00662C  EF1A  F033         	goto	u3761
 15315  006630  EF1D  F033         	goto	u3760
 15316  006634                     u3761:
 15317  006634  FFFF               	dw	65535	; assembler added errata NOP
 15318  006636  EF2C  F033         	goto	l1102
 15319  00663A                     u3760:
 15320  00663A  FFFF               	dw	65535	; assembler added errata NOP
 15321  00663C  C013  F015         	movff	abs@a,??_abs
 15322  006640  C014  F016         	movff	abs@a+1,??_abs+1
 15323  006644  1E15               	comf	??_abs^0,f,c
 15324  006646  1E16               	comf	(??_abs+1)^0,f,c
 15325  006648  4A15               	infsnz	??_abs^0,f,c
 15326  00664A  2A16               	incf	(??_abs+1)^0,f,c
 15327  00664C  C015  F013         	movff	??_abs,?_abs
 15328  006650  C016  F014         	movff	??_abs+1,?_abs+1
 15329  006654  EF31  F033         	goto	l1105
 15330  006658                     l1102:
 15331  006658  FFFF               	dw	65535	; assembler added errata NOP
 15332  00665A  C013  F013         	movff	abs@a,?_abs
 15333  00665E  C014  F014         	movff	abs@a+1,?_abs+1
 15334  006662                     l1105:
 15335  006662  FFFF               	dw	65535	; assembler added errata NOP
 15336  006664  0012               	return		;funcret
 15337  006666  FFFF               	dw	65535	; errata NOP
 15338  006668                     __end_of_abs:
 15339                           	callstack 0
 15340                           
 15341 ;; *************** function ___xxtofl *****************
 15342 ;; Defined at:
 15343 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
 15344 ;; Parameters:    Size  Location     Type
 15345 ;;  sign            1    wreg     unsigned char 
 15346 ;;  val             4   30[COMRAM] long 
 15347 ;; Auto vars:     Size  Location     Type
 15348 ;;  sign            1   38[COMRAM] unsigned char 
 15349 ;;  arg             4   40[COMRAM] unsigned long 
 15350 ;;  exp             1   39[COMRAM] unsigned char 
 15351 ;; Return value:  Size  Location     Type
 15352 ;;                  4   30[COMRAM] unsigned char 
 15353 ;; Registers used:
 15354 ;;		wreg, status,2, status,0
 15355 ;; Tracked objects:
 15356 ;;		On entry : 0/0
 15357 ;;		On exit  : 0/0
 15358 ;;		Unchanged: 0/0
 15359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15360 ;;      Params:         4       0       0       0       0       0       0
 15361 ;;      Locals:         6       0       0       0       0       0       0
 15362 ;;      Temps:          4       0       0       0       0       0       0
 15363 ;;      Totals:        14       0       0       0       0       0       0
 15364 ;;Total ram usage:       14 bytes
 15365 ;; Hardware stack levels used:    1
 15366 ;; Hardware stack levels required when called:    1
 15367 ;; This function calls:
 15368 ;;		Nothing
 15369 ;; This function is called by:
 15370 ;;		_get_temperature
 15371 ;;		_get_liters
 15372 ;;		_check_temperature
 15373 ;; This function uses a non-reentrant model
 15374 ;;
 15375                           
 15376                           	psect	text63
 15377  003A7A                     __ptext63:
 15378                           	callstack 0
 15379  003A7A                     ___xxtofl:
 15380                           	callstack 0
 15381  003A7A  FFFF               	dw	65535	; assembler added errata NOP
 15382                           
 15383                           ;incstack = 0
 15384                           ;___xxtofl@sign stored from wreg
 15385  003A7C  6E27               	movwf	___xxtofl@sign^0,c
 15386  003A7E  5027               	movf	___xxtofl@sign^0,w,c
 15387  003A80  B4D8               	btfsc	status,2,c
 15388  003A82  EF45  F01D         	goto	u6271
 15389  003A86  EF48  F01D         	goto	u6270
 15390  003A8A                     u6271:
 15391  003A8A  FFFF               	dw	65535	; assembler added errata NOP
 15392  003A8C  EF6D  F01D         	goto	l1082
 15393  003A90                     u6270:
 15394  003A90  FFFF               	dw	65535	; assembler added errata NOP
 15395  003A92  BE22               	btfsc	(___xxtofl@val+3)^0,7,c
 15396  003A94  EF51  F01D         	goto	u6280
 15397  003A98  EF4E  F01D         	goto	u6281
 15398  003A9C                     u6281:
 15399  003A9C  FFFF               	dw	65535	; assembler added errata NOP
 15400  003A9E  EF6D  F01D         	goto	l1082
 15401  003AA2                     u6280:
 15402  003AA2  FFFF               	dw	65535	; assembler added errata NOP
 15403  003AA4  C01F  F023         	movff	___xxtofl@val,??___xxtofl
 15404  003AA8  C020  F024         	movff	___xxtofl@val+1,??___xxtofl+1
 15405  003AAC  C021  F025         	movff	___xxtofl@val+2,??___xxtofl+2
 15406  003AB0  C022  F026         	movff	___xxtofl@val+3,??___xxtofl+3
 15407  003AB4  1E23               	comf	??___xxtofl^0,f,c
 15408  003AB6  1E24               	comf	(??___xxtofl+1)^0,f,c
 15409  003AB8  1E25               	comf	(??___xxtofl+2)^0,f,c
 15410  003ABA  1E26               	comf	(??___xxtofl+3)^0,f,c
 15411  003ABC  2A23               	incf	??___xxtofl^0,f,c
 15412  003ABE  0E00               	movlw	0
 15413  003AC0  2224               	addwfc	(??___xxtofl+1)^0,f,c
 15414  003AC2  2225               	addwfc	(??___xxtofl+2)^0,f,c
 15415  003AC4  2226               	addwfc	(??___xxtofl+3)^0,f,c
 15416  003AC6  C023  F029         	movff	??___xxtofl,___xxtofl@arg
 15417  003ACA  C024  F02A         	movff	??___xxtofl+1,___xxtofl@arg+1
 15418  003ACE  C025  F02B         	movff	??___xxtofl+2,___xxtofl@arg+2
 15419  003AD2  C026  F02C         	movff	??___xxtofl+3,___xxtofl@arg+3
 15420  003AD6  EF76  F01D         	goto	l5149
 15421  003ADA                     l1082:
 15422  003ADA  FFFF               	dw	65535	; assembler added errata NOP
 15423  003ADC  C01F  F029         	movff	___xxtofl@val,___xxtofl@arg
 15424  003AE0  C020  F02A         	movff	___xxtofl@val+1,___xxtofl@arg+1
 15425  003AE4  C021  F02B         	movff	___xxtofl@val+2,___xxtofl@arg+2
 15426  003AE8  C022  F02C         	movff	___xxtofl@val+3,___xxtofl@arg+3
 15427  003AEC                     l5149:
 15428  003AEC  FFFF               	dw	65535	; assembler added errata NOP
 15429  003AEE  501F               	movf	___xxtofl@val^0,w,c
 15430  003AF0  1020               	iorwf	(___xxtofl@val+1)^0,w,c
 15431  003AF2  1021               	iorwf	(___xxtofl@val+2)^0,w,c
 15432  003AF4  1022               	iorwf	(___xxtofl@val+3)^0,w,c
 15433  003AF6  A4D8               	btfss	status,2,c
 15434  003AF8  EF80  F01D         	goto	u6291
 15435  003AFC  EF83  F01D         	goto	u6290
 15436  003B00                     u6291:
 15437  003B00  FFFF               	dw	65535	; assembler added errata NOP
 15438  003B02  EF8E  F01D         	goto	l5155
 15439  003B06                     u6290:
 15440  003B06  FFFF               	dw	65535	; assembler added errata NOP
 15441  003B08  0E00               	movlw	0
 15442  003B0A  6E1F               	movwf	?___xxtofl^0,c
 15443  003B0C  0E00               	movlw	0
 15444  003B0E  6E20               	movwf	(?___xxtofl+1)^0,c
 15445  003B10  0E00               	movlw	0
 15446  003B12  6E21               	movwf	(?___xxtofl+2)^0,c
 15447  003B14  0E00               	movlw	0
 15448  003B16  6E22               	movwf	(?___xxtofl+3)^0,c
 15449  003B18  EF36  F01E         	goto	l1085
 15450  003B1C                     l5155:
 15451  003B1C  FFFF               	dw	65535	; assembler added errata NOP
 15452  003B1E  0E96               	movlw	150
 15453  003B20  6E28               	movwf	___xxtofl@exp^0,c
 15454  003B22  EF9A  F01D         	goto	l5159
 15455  003B26                     l5157:
 15456  003B26  FFFF               	dw	65535	; assembler added errata NOP
 15457  003B28  2A28               	incf	___xxtofl@exp^0,f,c
 15458  003B2A  90D8               	bcf	status,0,c
 15459  003B2C  322C               	rrcf	(___xxtofl@arg+3)^0,f,c
 15460  003B2E  322B               	rrcf	(___xxtofl@arg+2)^0,f,c
 15461  003B30  322A               	rrcf	(___xxtofl@arg+1)^0,f,c
 15462  003B32  3229               	rrcf	___xxtofl@arg^0,f,c
 15463  003B34                     l5159:
 15464  003B34  FFFF               	dw	65535	; assembler added errata NOP
 15465  003B36  0E00               	movlw	0
 15466  003B38  1429               	andwf	___xxtofl@arg^0,w,c
 15467  003B3A  6E23               	movwf	??___xxtofl^0,c
 15468  003B3C  0E00               	movlw	0
 15469  003B3E  142A               	andwf	(___xxtofl@arg+1)^0,w,c
 15470  003B40  6E24               	movwf	(??___xxtofl+1)^0,c
 15471  003B42  0E00               	movlw	0
 15472  003B44  142B               	andwf	(___xxtofl@arg+2)^0,w,c
 15473  003B46  6E25               	movwf	(??___xxtofl+2)^0,c
 15474  003B48  0EFE               	movlw	254
 15475  003B4A  142C               	andwf	(___xxtofl@arg+3)^0,w,c
 15476  003B4C  6E26               	movwf	(??___xxtofl+3)^0,c
 15477  003B4E  5023               	movf	??___xxtofl^0,w,c
 15478  003B50  1024               	iorwf	(??___xxtofl+1)^0,w,c
 15479  003B52  1025               	iorwf	(??___xxtofl+2)^0,w,c
 15480  003B54  1026               	iorwf	(??___xxtofl+3)^0,w,c
 15481  003B56  A4D8               	btfss	status,2,c
 15482  003B58  EFB0  F01D         	goto	u6301
 15483  003B5C  EFB3  F01D         	goto	u6300
 15484  003B60                     u6301:
 15485  003B60  FFFF               	dw	65535	; assembler added errata NOP
 15486  003B62  EF93  F01D         	goto	l5157
 15487  003B66                     u6300:
 15488  003B66  FFFF               	dw	65535	; assembler added errata NOP
 15489  003B68  EFC3  F01D         	goto	l1089
 15490  003B6C                     l5161:
 15491  003B6C  FFFF               	dw	65535	; assembler added errata NOP
 15492  003B6E  2A28               	incf	___xxtofl@exp^0,f,c
 15493  003B70  0E01               	movlw	1
 15494  003B72  2629               	addwf	___xxtofl@arg^0,f,c
 15495  003B74  0E00               	movlw	0
 15496  003B76  222A               	addwfc	(___xxtofl@arg+1)^0,f,c
 15497  003B78  222B               	addwfc	(___xxtofl@arg+2)^0,f,c
 15498  003B7A  222C               	addwfc	(___xxtofl@arg+3)^0,f,c
 15499  003B7C  90D8               	bcf	status,0,c
 15500  003B7E  322C               	rrcf	(___xxtofl@arg+3)^0,f,c
 15501  003B80  322B               	rrcf	(___xxtofl@arg+2)^0,f,c
 15502  003B82  322A               	rrcf	(___xxtofl@arg+1)^0,f,c
 15503  003B84  3229               	rrcf	___xxtofl@arg^0,f,c
 15504  003B86                     l1089:
 15505  003B86  FFFF               	dw	65535	; assembler added errata NOP
 15506  003B88  0E00               	movlw	0
 15507  003B8A  1429               	andwf	___xxtofl@arg^0,w,c
 15508  003B8C  6E23               	movwf	??___xxtofl^0,c
 15509  003B8E  0E00               	movlw	0
 15510  003B90  142A               	andwf	(___xxtofl@arg+1)^0,w,c
 15511  003B92  6E24               	movwf	(??___xxtofl+1)^0,c
 15512  003B94  0E00               	movlw	0
 15513  003B96  142B               	andwf	(___xxtofl@arg+2)^0,w,c
 15514  003B98  6E25               	movwf	(??___xxtofl+2)^0,c
 15515  003B9A  0EFF               	movlw	255
 15516  003B9C  142C               	andwf	(___xxtofl@arg+3)^0,w,c
 15517  003B9E  6E26               	movwf	(??___xxtofl+3)^0,c
 15518  003BA0  5023               	movf	??___xxtofl^0,w,c
 15519  003BA2  1024               	iorwf	(??___xxtofl+1)^0,w,c
 15520  003BA4  1025               	iorwf	(??___xxtofl+2)^0,w,c
 15521  003BA6  1026               	iorwf	(??___xxtofl+3)^0,w,c
 15522  003BA8  A4D8               	btfss	status,2,c
 15523  003BAA  EFD9  F01D         	goto	u6311
 15524  003BAE  EFDC  F01D         	goto	u6310
 15525  003BB2                     u6311:
 15526  003BB2  FFFF               	dw	65535	; assembler added errata NOP
 15527  003BB4  EFB6  F01D         	goto	l5161
 15528  003BB8                     u6310:
 15529  003BB8  FFFF               	dw	65535	; assembler added errata NOP
 15530  003BBA  EFE6  F01D         	goto	l5169
 15531  003BBE                     l5167:
 15532  003BBE  FFFF               	dw	65535	; assembler added errata NOP
 15533  003BC0  0628               	decf	___xxtofl@exp^0,f,c
 15534  003BC2  90D8               	bcf	status,0,c
 15535  003BC4  3629               	rlcf	___xxtofl@arg^0,f,c
 15536  003BC6  362A               	rlcf	(___xxtofl@arg+1)^0,f,c
 15537  003BC8  362B               	rlcf	(___xxtofl@arg+2)^0,f,c
 15538  003BCA  362C               	rlcf	(___xxtofl@arg+3)^0,f,c
 15539  003BCC                     l5169:
 15540  003BCC  FFFF               	dw	65535	; assembler added errata NOP
 15541  003BCE  BE2B               	btfsc	(___xxtofl@arg+2)^0,7,c
 15542  003BD0  EFEC  F01D         	goto	u6321
 15543  003BD4  EFEF  F01D         	goto	u6320
 15544  003BD8                     u6321:
 15545  003BD8  FFFF               	dw	65535	; assembler added errata NOP
 15546  003BDA  EFF9  F01D         	goto	l1096
 15547  003BDE                     u6320:
 15548  003BDE  FFFF               	dw	65535	; assembler added errata NOP
 15549  003BE0  0E02               	movlw	2
 15550  003BE2  6028               	cpfslt	___xxtofl@exp^0,c
 15551  003BE4  EFF6  F01D         	goto	u6331
 15552  003BE8  EFF9  F01D         	goto	u6330
 15553  003BEC                     u6331:
 15554  003BEC  FFFF               	dw	65535	; assembler added errata NOP
 15555  003BEE  EFDF  F01D         	goto	l5167
 15556  003BF2                     u6330:
 15557  003BF2                     l1096:
 15558  003BF2  FFFF               	dw	65535	; assembler added errata NOP
 15559  003BF4  B028               	btfsc	___xxtofl@exp^0,0,c
 15560  003BF6  EFFF  F01D         	goto	u6341
 15561  003BFA  EF02  F01E         	goto	u6340
 15562  003BFE                     u6341:
 15563  003BFE  FFFF               	dw	65535	; assembler added errata NOP
 15564  003C00  EF04  F01E         	goto	l5175
 15565  003C04                     u6340:
 15566  003C04  FFFF               	dw	65535	; assembler added errata NOP
 15567  003C06  9E2B               	bcf	(___xxtofl@arg+2)^0,7,c
 15568  003C08                     l5175:
 15569  003C08  FFFF               	dw	65535	; assembler added errata NOP
 15570  003C0A  90D8               	bcf	status,0,c
 15571  003C0C  3228               	rrcf	___xxtofl@exp^0,f,c
 15572  003C0E  C028  F023         	movff	___xxtofl@exp,??___xxtofl
 15573  003C12  6A24               	clrf	(??___xxtofl+1)^0,c
 15574  003C14  6A25               	clrf	(??___xxtofl+2)^0,c
 15575  003C16  6A26               	clrf	(??___xxtofl+3)^0,c
 15576  003C18  C023  F026         	movff	??___xxtofl,??___xxtofl+3
 15577  003C1C  6A25               	clrf	(??___xxtofl+2)^0,c
 15578  003C1E  6A24               	clrf	(??___xxtofl+1)^0,c
 15579  003C20  6A23               	clrf	??___xxtofl^0,c
 15580  003C22  5023               	movf	??___xxtofl^0,w,c
 15581  003C24  1229               	iorwf	___xxtofl@arg^0,f,c
 15582  003C26  5024               	movf	(??___xxtofl+1)^0,w,c
 15583  003C28  122A               	iorwf	(___xxtofl@arg+1)^0,f,c
 15584  003C2A  5025               	movf	(??___xxtofl+2)^0,w,c
 15585  003C2C  122B               	iorwf	(___xxtofl@arg+2)^0,f,c
 15586  003C2E  5026               	movf	(??___xxtofl+3)^0,w,c
 15587  003C30  122C               	iorwf	(___xxtofl@arg+3)^0,f,c
 15588  003C32  5027               	movf	___xxtofl@sign^0,w,c
 15589  003C34  B4D8               	btfsc	status,2,c
 15590  003C36  EF1F  F01E         	goto	u6351
 15591  003C3A  EF22  F01E         	goto	u6350
 15592  003C3E                     u6351:
 15593  003C3E  FFFF               	dw	65535	; assembler added errata NOP
 15594  003C40  EF2D  F01E         	goto	l5185
 15595  003C44                     u6350:
 15596  003C44  FFFF               	dw	65535	; assembler added errata NOP
 15597  003C46  BE22               	btfsc	(___xxtofl@val+3)^0,7,c
 15598  003C48  EF2B  F01E         	goto	u6360
 15599  003C4C  EF28  F01E         	goto	u6361
 15600  003C50                     u6361:
 15601  003C50  FFFF               	dw	65535	; assembler added errata NOP
 15602  003C52  EF2D  F01E         	goto	l5185
 15603  003C56                     u6360:
 15604  003C56  FFFF               	dw	65535	; assembler added errata NOP
 15605  003C58  8E2C               	bsf	(___xxtofl@arg+3)^0,7,c
 15606  003C5A                     l5185:
 15607  003C5A  FFFF               	dw	65535	; assembler added errata NOP
 15608  003C5C  C029  F01F         	movff	___xxtofl@arg,?___xxtofl
 15609  003C60  C02A  F020         	movff	___xxtofl@arg+1,?___xxtofl+1
 15610  003C64  C02B  F021         	movff	___xxtofl@arg+2,?___xxtofl+2
 15611  003C68  C02C  F022         	movff	___xxtofl@arg+3,?___xxtofl+3
 15612  003C6C                     l1085:
 15613  003C6C  FFFF               	dw	65535	; assembler added errata NOP
 15614  003C6E  0012               	return		;funcret
 15615  003C70  FFFF               	dw	65535	; errata NOP
 15616  003C72                     __end_of___xxtofl:
 15617                           	callstack 0
 15618                           
 15619 ;; *************** function ___flge *****************
 15620 ;; Defined at:
 15621 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
 15622 ;; Parameters:    Size  Location     Type
 15623 ;;  ff1             4    0[COMRAM] unsigned char 
 15624 ;;  ff2             4    4[COMRAM] unsigned char 
 15625 ;; Auto vars:     Size  Location     Type
 15626 ;;		None
 15627 ;; Return value:  Size  Location     Type
 15628 ;;		None               void
 15629 ;; Registers used:
 15630 ;;		wreg, status,2, status,0
 15631 ;; Tracked objects:
 15632 ;;		On entry : 0/0
 15633 ;;		On exit  : 0/0
 15634 ;;		Unchanged: 0/0
 15635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15636 ;;      Params:         8       0       0       0       0       0       0
 15637 ;;      Locals:         0       0       0       0       0       0       0
 15638 ;;      Temps:          4       0       0       0       0       0       0
 15639 ;;      Totals:        12       0       0       0       0       0       0
 15640 ;;Total ram usage:       12 bytes
 15641 ;; Hardware stack levels used:    1
 15642 ;; Hardware stack levels required when called:    1
 15643 ;; This function calls:
 15644 ;;		Nothing
 15645 ;; This function is called by:
 15646 ;;		_check_temperature
 15647 ;;		_roundf
 15648 ;; This function uses a non-reentrant model
 15649 ;;
 15650                           
 15651                           	psect	text64
 15652  0075FC                     __ptext64:
 15653                           	callstack 0
 15654  0075FC                     ___flge:
 15655                           	callstack 0
 15656  0075FC  FFFF               	dw	65535	; assembler added errata NOP
 15657  0075FE  0E00               	movlw	0
 15658  007600  1401               	andwf	___flge@ff1^0,w,c
 15659  007602  6E09               	movwf	??___flge^0,c
 15660  007604  0E00               	movlw	0
 15661  007606  1402               	andwf	(___flge@ff1+1)^0,w,c
 15662  007608  6E0A               	movwf	(??___flge+1)^0,c
 15663  00760A  0E80               	movlw	128
 15664  00760C  1403               	andwf	(___flge@ff1+2)^0,w,c
 15665  00760E  6E0B               	movwf	(??___flge+2)^0,c
 15666  007610  0E7F               	movlw	127
 15667  007612  1404               	andwf	(___flge@ff1+3)^0,w,c
 15668  007614  6E0C               	movwf	(??___flge+3)^0,c
 15669  007616  5009               	movf	??___flge^0,w,c
 15670  007618  100A               	iorwf	(??___flge+1)^0,w,c
 15671  00761A  100B               	iorwf	(??___flge+2)^0,w,c
 15672  00761C  100C               	iorwf	(??___flge+3)^0,w,c
 15673  00761E  A4D8               	btfss	status,2,c
 15674  007620  EF14  F03B         	goto	u6141
 15675  007624  EF17  F03B         	goto	u6140
 15676  007628                     u6141:
 15677  007628  FFFF               	dw	65535	; assembler added errata NOP
 15678  00762A  EF20  F03B         	goto	l5073
 15679  00762E                     u6140:
 15680  00762E  FFFF               	dw	65535	; assembler added errata NOP
 15681  007630  0E00               	movlw	0
 15682  007632  6E01               	movwf	___flge@ff1^0,c
 15683  007634  0E00               	movlw	0
 15684  007636  6E02               	movwf	(___flge@ff1+1)^0,c
 15685  007638  0E00               	movlw	0
 15686  00763A  6E03               	movwf	(___flge@ff1+2)^0,c
 15687  00763C  0E00               	movlw	0
 15688  00763E  6E04               	movwf	(___flge@ff1+3)^0,c
 15689  007640                     l5073:
 15690  007640  FFFF               	dw	65535	; assembler added errata NOP
 15691  007642  0E00               	movlw	0
 15692  007644  1405               	andwf	___flge@ff2^0,w,c
 15693  007646  6E09               	movwf	??___flge^0,c
 15694  007648  0E00               	movlw	0
 15695  00764A  1406               	andwf	(___flge@ff2+1)^0,w,c
 15696  00764C  6E0A               	movwf	(??___flge+1)^0,c
 15697  00764E  0E80               	movlw	128
 15698  007650  1407               	andwf	(___flge@ff2+2)^0,w,c
 15699  007652  6E0B               	movwf	(??___flge+2)^0,c
 15700  007654  0E7F               	movlw	127
 15701  007656  1408               	andwf	(___flge@ff2+3)^0,w,c
 15702  007658  6E0C               	movwf	(??___flge+3)^0,c
 15703  00765A  5009               	movf	??___flge^0,w,c
 15704  00765C  100A               	iorwf	(??___flge+1)^0,w,c
 15705  00765E  100B               	iorwf	(??___flge+2)^0,w,c
 15706  007660  100C               	iorwf	(??___flge+3)^0,w,c
 15707  007662  A4D8               	btfss	status,2,c
 15708  007664  EF36  F03B         	goto	u6151
 15709  007668  EF39  F03B         	goto	u6150
 15710  00766C                     u6151:
 15711  00766C  FFFF               	dw	65535	; assembler added errata NOP
 15712  00766E  EF42  F03B         	goto	l5077
 15713  007672                     u6150:
 15714  007672  FFFF               	dw	65535	; assembler added errata NOP
 15715  007674  0E00               	movlw	0
 15716  007676  6E05               	movwf	___flge@ff2^0,c
 15717  007678  0E00               	movlw	0
 15718  00767A  6E06               	movwf	(___flge@ff2+1)^0,c
 15719  00767C  0E00               	movlw	0
 15720  00767E  6E07               	movwf	(___flge@ff2+2)^0,c
 15721  007680  0E00               	movlw	0
 15722  007682  6E08               	movwf	(___flge@ff2+3)^0,c
 15723  007684                     l5077:
 15724  007684  FFFF               	dw	65535	; assembler added errata NOP
 15725  007686  AE04               	btfss	(___flge@ff1+3)^0,7,c
 15726  007688  EF48  F03B         	goto	u6161
 15727  00768C  EF4B  F03B         	goto	u6160
 15728  007690                     u6161:
 15729  007690  FFFF               	dw	65535	; assembler added errata NOP
 15730  007692  EF55  F03B         	goto	l5081
 15731  007696                     u6160:
 15732  007696  FFFF               	dw	65535	; assembler added errata NOP
 15733  007698  6C01               	negf	___flge@ff1^0,c
 15734  00769A  1E02               	comf	(___flge@ff1+1)^0,f,c
 15735  00769C  B0D8               	btfsc	status,0,c
 15736  00769E  2A02               	incf	(___flge@ff1+1)^0,f,c
 15737  0076A0  1E03               	comf	(___flge@ff1+2)^0,f,c
 15738  0076A2  B0D8               	btfsc	status,0,c
 15739  0076A4  2A03               	incf	(___flge@ff1+2)^0,f,c
 15740  0076A6  0E80               	movlw	128
 15741  0076A8  5604               	subfwb	(___flge@ff1+3)^0,f,c
 15742  0076AA                     l5081:
 15743  0076AA  FFFF               	dw	65535	; assembler added errata NOP
 15744  0076AC  AE08               	btfss	(___flge@ff2+3)^0,7,c
 15745  0076AE  EF5B  F03B         	goto	u6171
 15746  0076B2  EF5E  F03B         	goto	u6170
 15747  0076B6                     u6171:
 15748  0076B6  FFFF               	dw	65535	; assembler added errata NOP
 15749  0076B8  EF68  F03B         	goto	l692
 15750  0076BC                     u6170:
 15751  0076BC  FFFF               	dw	65535	; assembler added errata NOP
 15752  0076BE  6C05               	negf	___flge@ff2^0,c
 15753  0076C0  1E06               	comf	(___flge@ff2+1)^0,f,c
 15754  0076C2  B0D8               	btfsc	status,0,c
 15755  0076C4  2A06               	incf	(___flge@ff2+1)^0,f,c
 15756  0076C6  1E07               	comf	(___flge@ff2+2)^0,f,c
 15757  0076C8  B0D8               	btfsc	status,0,c
 15758  0076CA  2A07               	incf	(___flge@ff2+2)^0,f,c
 15759  0076CC  0E80               	movlw	128
 15760  0076CE  5608               	subfwb	(___flge@ff2+3)^0,f,c
 15761  0076D0                     l692:
 15762  0076D0  FFFF               	dw	65535	; assembler added errata NOP
 15763  0076D2  0E00               	movlw	0
 15764  0076D4  1A01               	xorwf	___flge@ff1^0,f,c
 15765  0076D6  0E00               	movlw	0
 15766  0076D8  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 15767  0076DA  0E00               	movlw	0
 15768  0076DC  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 15769  0076DE  0E80               	movlw	128
 15770  0076E0  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 15771  0076E2  0E00               	movlw	0
 15772  0076E4  1A05               	xorwf	___flge@ff2^0,f,c
 15773  0076E6  0E00               	movlw	0
 15774  0076E8  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 15775  0076EA  0E00               	movlw	0
 15776  0076EC  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 15777  0076EE  0E80               	movlw	128
 15778  0076F0  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 15779  0076F2  5005               	movf	___flge@ff2^0,w,c
 15780  0076F4  5C01               	subwf	___flge@ff1^0,w,c
 15781  0076F6  5006               	movf	(___flge@ff2+1)^0,w,c
 15782  0076F8  5802               	subwfb	(___flge@ff1+1)^0,w,c
 15783  0076FA  5007               	movf	(___flge@ff2+2)^0,w,c
 15784  0076FC  5803               	subwfb	(___flge@ff1+2)^0,w,c
 15785  0076FE  5008               	movf	(___flge@ff2+3)^0,w,c
 15786  007700  5804               	subwfb	(___flge@ff1+3)^0,w,c
 15787  007702  B0D8               	btfsc	status,0,c
 15788  007704  EF86  F03B         	goto	u6181
 15789  007708  EF89  F03B         	goto	u6180
 15790  00770C                     u6181:
 15791  00770C  FFFF               	dw	65535	; assembler added errata NOP
 15792  00770E  EF8D  F03B         	goto	l5087
 15793  007712                     u6180:
 15794  007712  FFFF               	dw	65535	; assembler added errata NOP
 15795  007714  90D8               	bcf	status,0,c
 15796  007716  EF8F  F03B         	goto	l697
 15797  00771A                     l5087:
 15798  00771A  FFFF               	dw	65535	; assembler added errata NOP
 15799  00771C  80D8               	bsf	status,0,c
 15800  00771E                     l697:
 15801  00771E  FFFF               	dw	65535	; assembler added errata NOP
 15802  007720  0012               	return		;funcret
 15803  007722  FFFF               	dw	65535	; errata NOP
 15804  007724                     __end_of___flge:
 15805                           	callstack 0
 15806                           
 15807 ;; *************** function ___awdiv *****************
 15808 ;; Defined at:
 15809 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
 15810 ;; Parameters:    Size  Location     Type
 15811 ;;  dividend        2   22[COMRAM] int 
 15812 ;;  divisor         2   24[COMRAM] int 
 15813 ;; Auto vars:     Size  Location     Type
 15814 ;;  quotient        2   28[COMRAM] int 
 15815 ;;  sign            1   27[COMRAM] unsigned char 
 15816 ;;  counter         1   26[COMRAM] unsigned char 
 15817 ;; Return value:  Size  Location     Type
 15818 ;;                  2   22[COMRAM] int 
 15819 ;; Registers used:
 15820 ;;		wreg, status,2, status,0
 15821 ;; Tracked objects:
 15822 ;;		On entry : 0/0
 15823 ;;		On exit  : 0/0
 15824 ;;		Unchanged: 0/0
 15825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15826 ;;      Params:         4       0       0       0       0       0       0
 15827 ;;      Locals:         4       0       0       0       0       0       0
 15828 ;;      Temps:          0       0       0       0       0       0       0
 15829 ;;      Totals:         8       0       0       0       0       0       0
 15830 ;;Total ram usage:        8 bytes
 15831 ;; Hardware stack levels used:    1
 15832 ;; Hardware stack levels required when called:    1
 15833 ;; This function calls:
 15834 ;;		Nothing
 15835 ;; This function is called by:
 15836 ;;		_check_temperature
 15837 ;; This function uses a non-reentrant model
 15838 ;;
 15839                           
 15840                           	psect	text65
 15841  0072FA                     __ptext65:
 15842                           	callstack 0
 15843  0072FA                     ___awdiv:
 15844                           	callstack 0
 15845  0072FA  FFFF               	dw	65535	; assembler added errata NOP
 15846  0072FC  0E00               	movlw	0
 15847  0072FE  6E1C               	movwf	___awdiv@sign^0,c
 15848  007300  BE1A               	btfsc	(___awdiv@divisor+1)^0,7,c
 15849  007302  EF88  F039         	goto	u6520
 15850  007306  EF85  F039         	goto	u6521
 15851  00730A                     u6521:
 15852  00730A  FFFF               	dw	65535	; assembler added errata NOP
 15853  00730C  EF8F  F039         	goto	l5305
 15854  007310                     u6520:
 15855  007310  FFFF               	dw	65535	; assembler added errata NOP
 15856  007312  6C19               	negf	___awdiv@divisor^0,c
 15857  007314  1E1A               	comf	(___awdiv@divisor+1)^0,f,c
 15858  007316  B0D8               	btfsc	status,0,c
 15859  007318  2A1A               	incf	(___awdiv@divisor+1)^0,f,c
 15860  00731A  0E01               	movlw	1
 15861  00731C  6E1C               	movwf	___awdiv@sign^0,c
 15862  00731E                     l5305:
 15863  00731E  FFFF               	dw	65535	; assembler added errata NOP
 15864  007320  BE18               	btfsc	(___awdiv@dividend+1)^0,7,c
 15865  007322  EF98  F039         	goto	u6530
 15866  007326  EF95  F039         	goto	u6531
 15867  00732A                     u6531:
 15868  00732A  FFFF               	dw	65535	; assembler added errata NOP
 15869  00732C  EF9F  F039         	goto	l5311
 15870  007330                     u6530:
 15871  007330  FFFF               	dw	65535	; assembler added errata NOP
 15872  007332  6C17               	negf	___awdiv@dividend^0,c
 15873  007334  1E18               	comf	(___awdiv@dividend+1)^0,f,c
 15874  007336  B0D8               	btfsc	status,0,c
 15875  007338  2A18               	incf	(___awdiv@dividend+1)^0,f,c
 15876  00733A  0E01               	movlw	1
 15877  00733C  1A1C               	xorwf	___awdiv@sign^0,f,c
 15878  00733E                     l5311:
 15879  00733E  FFFF               	dw	65535	; assembler added errata NOP
 15880  007340  0E00               	movlw	0
 15881  007342  6E1E               	movwf	(___awdiv@quotient+1)^0,c
 15882  007344  0E00               	movlw	0
 15883  007346  6E1D               	movwf	___awdiv@quotient^0,c
 15884  007348  5019               	movf	___awdiv@divisor^0,w,c
 15885  00734A  101A               	iorwf	(___awdiv@divisor+1)^0,w,c
 15886  00734C  B4D8               	btfsc	status,2,c
 15887  00734E  EFAB  F039         	goto	u6541
 15888  007352  EFAE  F039         	goto	u6540
 15889  007356                     u6541:
 15890  007356  FFFF               	dw	65535	; assembler added errata NOP
 15891  007358  EFDF  F039         	goto	l5333
 15892  00735C                     u6540:
 15893  00735C  FFFF               	dw	65535	; assembler added errata NOP
 15894  00735E  0E01               	movlw	1
 15895  007360  6E1B               	movwf	___awdiv@counter^0,c
 15896  007362  EFB8  F039         	goto	l5319
 15897  007366                     l5317:
 15898  007366  FFFF               	dw	65535	; assembler added errata NOP
 15899  007368  90D8               	bcf	status,0,c
 15900  00736A  3619               	rlcf	___awdiv@divisor^0,f,c
 15901  00736C  361A               	rlcf	(___awdiv@divisor+1)^0,f,c
 15902  00736E  2A1B               	incf	___awdiv@counter^0,f,c
 15903  007370                     l5319:
 15904  007370  FFFF               	dw	65535	; assembler added errata NOP
 15905  007372  AE1A               	btfss	(___awdiv@divisor+1)^0,7,c
 15906  007374  EFBE  F039         	goto	u6551
 15907  007378  EFC1  F039         	goto	u6550
 15908  00737C                     u6551:
 15909  00737C  FFFF               	dw	65535	; assembler added errata NOP
 15910  00737E  EFB3  F039         	goto	l5317
 15911  007382                     u6550:
 15912  007382  FFFF               	dw	65535	; assembler added errata NOP
 15913  007384                     l5321:
 15914  007384  FFFF               	dw	65535	; assembler added errata NOP
 15915  007386  90D8               	bcf	status,0,c
 15916  007388  361D               	rlcf	___awdiv@quotient^0,f,c
 15917  00738A  361E               	rlcf	(___awdiv@quotient+1)^0,f,c
 15918  00738C  5019               	movf	___awdiv@divisor^0,w,c
 15919  00738E  5C17               	subwf	___awdiv@dividend^0,w,c
 15920  007390  501A               	movf	(___awdiv@divisor+1)^0,w,c
 15921  007392  5818               	subwfb	(___awdiv@dividend+1)^0,w,c
 15922  007394  A0D8               	btfss	status,0,c
 15923  007396  EFCF  F039         	goto	u6561
 15924  00739A  EFD2  F039         	goto	u6560
 15925  00739E                     u6561:
 15926  00739E  FFFF               	dw	65535	; assembler added errata NOP
 15927  0073A0  EFD8  F039         	goto	l5329
 15928  0073A4                     u6560:
 15929  0073A4  FFFF               	dw	65535	; assembler added errata NOP
 15930  0073A6  5019               	movf	___awdiv@divisor^0,w,c
 15931  0073A8  5E17               	subwf	___awdiv@dividend^0,f,c
 15932  0073AA  501A               	movf	(___awdiv@divisor+1)^0,w,c
 15933  0073AC  5A18               	subwfb	(___awdiv@dividend+1)^0,f,c
 15934  0073AE  801D               	bsf	___awdiv@quotient^0,0,c
 15935  0073B0                     l5329:
 15936  0073B0  FFFF               	dw	65535	; assembler added errata NOP
 15937  0073B2  90D8               	bcf	status,0,c
 15938  0073B4  321A               	rrcf	(___awdiv@divisor+1)^0,f,c
 15939  0073B6  3219               	rrcf	___awdiv@divisor^0,f,c
 15940  0073B8  2E1B               	decfsz	___awdiv@counter^0,f,c
 15941  0073BA  EFC2  F039         	goto	l5321
 15942  0073BE                     l5333:
 15943  0073BE  FFFF               	dw	65535	; assembler added errata NOP
 15944  0073C0  501C               	movf	___awdiv@sign^0,w,c
 15945  0073C2  B4D8               	btfsc	status,2,c
 15946  0073C4  EFE6  F039         	goto	u6571
 15947  0073C8  EFE9  F039         	goto	u6570
 15948  0073CC                     u6571:
 15949  0073CC  FFFF               	dw	65535	; assembler added errata NOP
 15950  0073CE  EFEE  F039         	goto	l5337
 15951  0073D2                     u6570:
 15952  0073D2  FFFF               	dw	65535	; assembler added errata NOP
 15953  0073D4  6C1D               	negf	___awdiv@quotient^0,c
 15954  0073D6  1E1E               	comf	(___awdiv@quotient+1)^0,f,c
 15955  0073D8  B0D8               	btfsc	status,0,c
 15956  0073DA  2A1E               	incf	(___awdiv@quotient+1)^0,f,c
 15957  0073DC                     l5337:
 15958  0073DC  FFFF               	dw	65535	; assembler added errata NOP
 15959  0073DE  C01D  F017         	movff	___awdiv@quotient,?___awdiv
 15960  0073E2  C01E  F018         	movff	___awdiv@quotient+1,?___awdiv+1
 15961  0073E6  0012               	return		;funcret
 15962  0073E8  FFFF               	dw	65535	; errata NOP
 15963  0073EA                     __end_of___awdiv:
 15964                           	callstack 0
 15965                           
 15966 ;; *************** function _change_direction *****************
 15967 ;; Defined at:
 15968 ;;		line 41 in file "stepper_motor.c"
 15969 ;; Parameters:    Size  Location     Type
 15970 ;;  stepper_moto    2    0[COMRAM] PTR struct .
 15971 ;;		 -> joint_dilutor_stepper(12), end_effector_stepper(12), joint_stepper(12), 
 15972 ;; Auto vars:     Size  Location     Type
 15973 ;;		None
 15974 ;; Return value:  Size  Location     Type
 15975 ;;                  1    wreg      void 
 15976 ;; Registers used:
 15977 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15978 ;; Tracked objects:
 15979 ;;		On entry : 0/0
 15980 ;;		On exit  : 0/0
 15981 ;;		Unchanged: 0/0
 15982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15983 ;;      Params:         2       0       0       0       0       0       0
 15984 ;;      Locals:         0       0       0       0       0       0       0
 15985 ;;      Temps:          2       0       0       0       0       0       0
 15986 ;;      Totals:         4       0       0       0       0       0       0
 15987 ;;Total ram usage:        4 bytes
 15988 ;; Hardware stack levels used:    1
 15989 ;; Hardware stack levels required when called:    1
 15990 ;; This function calls:
 15991 ;;		Nothing
 15992 ;; This function is called by:
 15993 ;;		_main
 15994 ;; This function uses a non-reentrant model
 15995 ;;
 15996                           
 15997                           	psect	text66
 15998  00640C                     __ptext66:
 15999                           	callstack 0
 16000  00640C                     _change_direction:
 16001                           	callstack 0
 16002  00640C  FFFF               	dw	65535	; assembler added errata NOP
 16003  00640E                     
 16004                           ;stepper_motor.c: 42:     stepper_motor -> direction = stepper_motor -> direction*(-1);
 16005  00640E  EE20 F004          	lfsr	2,4
 16006  006412  5001               	movf	change_direction@stepper_motor^0,w,c
 16007  006414  26D9               	addwf	fsr2l,f,c
 16008  006416  5002               	movf	(change_direction@stepper_motor+1)^0,w,c
 16009  006418  22DA               	addwfc	fsr2h,f,c
 16010  00641A  CFDE F003          	movff	postinc2,??_change_direction
 16011  00641E  CFDD F004          	movff	postdec2,??_change_direction+1
 16012  006422  1E03               	comf	??_change_direction^0,f,c
 16013  006424  1E04               	comf	(??_change_direction+1)^0,f,c
 16014  006426  4A03               	infsnz	??_change_direction^0,f,c
 16015  006428  2A04               	incf	(??_change_direction+1)^0,f,c
 16016  00642A  EE20 F004          	lfsr	2,4
 16017  00642E  5001               	movf	change_direction@stepper_motor^0,w,c
 16018  006430  26D9               	addwf	fsr2l,f,c
 16019  006432  5002               	movf	(change_direction@stepper_motor+1)^0,w,c
 16020  006434  22DA               	addwfc	fsr2h,f,c
 16021  006436  C003  FFDE         	movff	??_change_direction,postinc2
 16022  00643A  C004  FFDD         	movff	??_change_direction+1,postdec2
 16023  00643E  0012               	return		;funcret
 16024  006440  FFFF               	dw	65535	; errata NOP
 16025  006442                     __end_of_change_direction:
 16026                           	callstack 0
 16027                           
 16028 ;; *************** function _rx_char_usart *****************
 16029 ;; Defined at:
 16030 ;;		line 251 in file "main.c"
 16031 ;; Parameters:    Size  Location     Type
 16032 ;;		None
 16033 ;; Auto vars:     Size  Location     Type
 16034 ;;		None
 16035 ;; Return value:  Size  Location     Type
 16036 ;;                  1    wreg      void 
 16037 ;; Registers used:
 16038 ;;		wreg, status,2
 16039 ;; Tracked objects:
 16040 ;;		On entry : 0/0
 16041 ;;		On exit  : 0/0
 16042 ;;		Unchanged: 0/0
 16043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16044 ;;      Params:         0       0       0       0       0       0       0
 16045 ;;      Locals:         0       0       0       0       0       0       0
 16046 ;;      Temps:          0       0       0       0       0       0       0
 16047 ;;      Totals:         0       0       0       0       0       0       0
 16048 ;;Total ram usage:        0 bytes
 16049 ;; Hardware stack levels used:    1
 16050 ;; This function calls:
 16051 ;;		Nothing
 16052 ;; This function is called by:
 16053 ;;		Interrupt level 2
 16054 ;; This function uses a non-reentrant model
 16055 ;;
 16056                           
 16057                           	psect	intcode
 16058  000008                     __pintcode:
 16059                           	callstack 0
 16060  000008                     _rx_char_usart:
 16061                           	callstack 0
 16062  000008  FFFF               	dw	65535	; assembler added errata NOP
 16063                           
 16064                           ;incstack = 0
 16065  00000A  827F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 16066  00000C                     
 16067                           ;main.c: 252:     if(PIE1bits.RCIE && PIR1bits.RCIF){
 16068  00000C  AA9D               	btfss	157,5,c	;volatile
 16069  00000E  EF0B  F000         	goto	i2u729_41
 16070  000012  EF0E  F000         	goto	i2u729_40
 16071  000016                     i2u729_41:
 16072  000016  FFFF               	dw	65535	; assembler added errata NOP
 16073  000018  EF1E  F000         	goto	i2l5873
 16074  00001C                     i2u729_40:
 16075  00001C  FFFF               	dw	65535	; assembler added errata NOP
 16076  00001E  AA9E               	btfss	158,5,c	;volatile
 16077  000020  EF14  F000         	goto	i2u730_41
 16078  000024  EF17  F000         	goto	i2u730_40
 16079  000028                     i2u730_41:
 16080  000028  FFFF               	dw	65535	; assembler added errata NOP
 16081  00002A  EF1E  F000         	goto	i2l5873
 16082  00002E                     i2u730_40:
 16083  00002E  FFFF               	dw	65535	; assembler added errata NOP
 16084  000030                     
 16085                           ;main.c: 253:         PIR1bits.RCIF = 0;
 16086  000030  9A9E               	bcf	158,5,c	;volatile
 16087  000032                     
 16088                           ;main.c: 254:         state_changed = 1;
 16089  000032  0E01               	movlw	1
 16090  000034  0101               	movlb	1	; () banked
 16091  000036  6FBA               	movwf	_state_changed& (0+255),b
 16092                           
 16093                           ;main.c: 255:         read_new_char = 1;
 16094  000038  0E01               	movlw	1
 16095  00003A  6FB8               	movwf	_read_new_char& (0+255),b
 16096  00003C                     i2l5873:
 16097  00003C  FFFF               	dw	65535	; assembler added errata NOP
 16098                           
 16099                           ;main.c: 257:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF){
 16100  00003E  AAF2               	btfss	242,5,c	;volatile
 16101  000040  EF24  F000         	goto	i2u731_41
 16102  000044  EF27  F000         	goto	i2u731_40
 16103  000048                     i2u731_41:
 16104  000048  FFFF               	dw	65535	; assembler added errata NOP
 16105  00004A  EF37  F000         	goto	i2l220
 16106  00004E                     i2u731_40:
 16107  00004E  FFFF               	dw	65535	; assembler added errata NOP
 16108  000050  A4F2               	btfss	242,2,c	;volatile
 16109  000052  EF2D  F000         	goto	i2u732_41
 16110  000056  EF30  F000         	goto	i2u732_40
 16111  00005A                     i2u732_41:
 16112  00005A  FFFF               	dw	65535	; assembler added errata NOP
 16113  00005C  EF37  F000         	goto	i2l220
 16114  000060                     i2u732_40:
 16115  000060  FFFF               	dw	65535	; assembler added errata NOP
 16116  000062                     
 16117                           ;main.c: 258:         T0CON = 0;
 16118  000062  0E00               	movlw	0
 16119  000064  6ED5               	movwf	213,c	;volatile
 16120  000066                     
 16121                           ;main.c: 259:         INTCONbits.TMR0IF = 0;
 16122  000066  94F2               	bcf	242,2,c	;volatile
 16123                           
 16124                           ;main.c: 260:         timer_done = 1;
 16125  000068  0E01               	movlw	1
 16126  00006A  0101               	movlb	1	; () banked
 16127  00006C  6FB7               	movwf	_timer_done& (0+255),b
 16128  00006E                     i2l220:
 16129  00006E  FFFF               	dw	65535	; assembler added errata NOP
 16130  000070  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 16131  000072  0011               	retfie		f
 16132  000074  FFFF               	dw	65535	; errata NOP
 16133  000076                     __end_of_rx_char_usart:
 16134                           	callstack 0
 16135                           
 16136                           	psect	rparam
 16137  0000                     
 16138                           	psect	temp
 16139  00007F                     btemp:
 16140                           	callstack 0
 16141  00007F                     	ds	1
 16142  0000                     int$flags	set	btemp
 16143  0000                     wtemp8	set	btemp+1
 16144  0000                     ttemp5	set	btemp+1
 16145  0000                     ttemp6	set	btemp+4
 16146  0000                     ttemp7	set	btemp+8
 16147                           
 16148                           	psect	idloc
 16149                           
 16150                           ;Config register IDLOC0 @ 0x200000
 16151                           ;	unspecified, using default values
 16152  200000                     	org	2097152
 16153  200000  FF                 	db	255
 16154                           
 16155                           ;Config register IDLOC1 @ 0x200001
 16156                           ;	unspecified, using default values
 16157  200001                     	org	2097153
 16158  200001  FF                 	db	255
 16159                           
 16160                           ;Config register IDLOC2 @ 0x200002
 16161                           ;	unspecified, using default values
 16162  200002                     	org	2097154
 16163  200002  FF                 	db	255
 16164                           
 16165                           ;Config register IDLOC3 @ 0x200003
 16166                           ;	unspecified, using default values
 16167  200003                     	org	2097155
 16168  200003  FF                 	db	255
 16169                           
 16170                           ;Config register IDLOC4 @ 0x200004
 16171                           ;	unspecified, using default values
 16172  200004                     	org	2097156
 16173  200004  FF                 	db	255
 16174                           
 16175                           ;Config register IDLOC5 @ 0x200005
 16176                           ;	unspecified, using default values
 16177  200005                     	org	2097157
 16178  200005  FF                 	db	255
 16179                           
 16180                           ;Config register IDLOC6 @ 0x200006
 16181                           ;	unspecified, using default values
 16182  200006                     	org	2097158
 16183  200006  FF                 	db	255
 16184                           
 16185                           ;Config register IDLOC7 @ 0x200007
 16186                           ;	unspecified, using default values
 16187  200007                     	org	2097159
 16188  200007  FF                 	db	255
 16189                           
 16190                           	psect	config
 16191                           
 16192                           ; Padding undefined space
 16193  300000                     	org	3145728
 16194  300000  FF                 	db	255
 16195                           
 16196                           ;Config register CONFIG1H @ 0x300001
 16197                           ;	Oscillator Selection bits
 16198                           ;	OSC = RCIO, RC oscillator w/ OSC2 configured as RA6
 16199                           ;	Oscillator System Clock Switch Enable bit
 16200                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
 16201  300001                     	org	3145729
 16202  300001  27                 	db	39
 16203                           
 16204                           ;Config register CONFIG2L @ 0x300002
 16205                           ;	Power-up Timer Enable bit
 16206                           ;	PWRT = OFF, PWRT disabled
 16207                           ;	Brown-out Reset Enable bit
 16208                           ;	BOR = ON, Brown-out Reset enabled
 16209                           ;	Brown-out Reset Voltage bits
 16210                           ;	BORV = 20, VBOR set to 2.0V
 16211  300002                     	org	3145730
 16212  300002  0F                 	db	15
 16213                           
 16214                           ;Config register CONFIG2H @ 0x300003
 16215                           ;	Watchdog Timer Enable bit
 16216                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 16217                           ;	Watchdog Timer Postscale Select bits
 16218                           ;	WDTPS = 128, 1:128
 16219  300003                     	org	3145731
 16220  300003  0E                 	db	14
 16221                           
 16222                           ; Padding undefined space
 16223  300004                     	org	3145732
 16224  300004  FF                 	db	255
 16225                           
 16226                           ;Config register CONFIG3H @ 0x300005
 16227                           ;	CCP2 Mux bit
 16228                           ;	CCP2MUX = ON, CCP2 input/output is multiplexed with RC1
 16229  300005                     	org	3145733
 16230  300005  01                 	db	1
 16231                           
 16232                           ;Config register CONFIG4L @ 0x300006
 16233                           ;	Stack Full/Underflow Reset Enable bit
 16234                           ;	STVR = ON, Stack Full/Underflow will cause RESET
 16235                           ;	Low Voltage ICSP Enable bit
 16236                           ;	LVP = ON, Low Voltage ICSP enabled
 16237                           ;	Background Debugger Enable bit
 16238                           ;	DEBUG = 0x1, unprogrammed default
 16239  300006                     	org	3145734
 16240  300006  85                 	db	133
 16241                           
 16242                           ; Padding undefined space
 16243  300007                     	org	3145735
 16244  300007  FF                 	db	255
 16245                           
 16246                           ;Config register CONFIG5L @ 0x300008
 16247                           ;	Code Protection bit
 16248                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
 16249                           ;	Code Protection bit
 16250                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
 16251                           ;	Code Protection bit
 16252                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
 16253                           ;	Code Protection bit
 16254                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
 16255  300008                     	org	3145736
 16256  300008  0F                 	db	15
 16257                           
 16258                           ;Config register CONFIG5H @ 0x300009
 16259                           ;	Boot Block Code Protection bit
 16260                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
 16261                           ;	Data EEPROM Code Protection bit
 16262                           ;	CPD = OFF, Data EEPROM not code protected
 16263  300009                     	org	3145737
 16264  300009  C0                 	db	192
 16265                           
 16266                           ;Config register CONFIG6L @ 0x30000A
 16267                           ;	Write Protection bit
 16268                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
 16269                           ;	Write Protection bit
 16270                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
 16271                           ;	Write Protection bit
 16272                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
 16273                           ;	Write Protection bit
 16274                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
 16275  30000A                     	org	3145738
 16276  30000A  0F                 	db	15
 16277                           
 16278                           ;Config register CONFIG6H @ 0x30000B
 16279                           ;	Configuration Register Write Protection bit
 16280                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
 16281                           ;	Boot Block Write Protection bit
 16282                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
 16283                           ;	Data EEPROM Write Protection bit
 16284                           ;	WRTD = OFF, Data EEPROM not write protected
 16285  30000B                     	org	3145739
 16286  30000B  E0                 	db	224
 16287                           
 16288                           ;Config register CONFIG7L @ 0x30000C
 16289                           ;	Table Read Protection bit
 16290                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
 16291                           ;	Table Read Protection bit
 16292                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
 16293                           ;	Table Read Protection bit
 16294                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
 16295                           ;	Table Read Protection bit
 16296                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
 16297  30000C                     	org	3145740
 16298  30000C  0F                 	db	15
 16299                           
 16300                           ;Config register CONFIG7H @ 0x30000D
 16301                           ;	Boot Block Table Read Protection bit
 16302                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
 16303  30000D                     	org	3145741
 16304  30000D  40                 	db	64
 16305                           tosu	equ	0xFFF
 16306                           tosh	equ	0xFFE
 16307                           tosl	equ	0xFFD
 16308                           stkptr	equ	0xFFC
 16309                           pclatu	equ	0xFFB
 16310                           pclath	equ	0xFFA
 16311                           pcl	equ	0xFF9
 16312                           tblptru	equ	0xFF8
 16313                           tblptrh	equ	0xFF7
 16314                           tblptrl	equ	0xFF6
 16315                           tablat	equ	0xFF5
 16316                           prodh	equ	0xFF4
 16317                           prodl	equ	0xFF3
 16318                           indf0	equ	0xFEF
 16319                           postinc0	equ	0xFEE
 16320                           postdec0	equ	0xFED
 16321                           preinc0	equ	0xFEC
 16322                           plusw0	equ	0xFEB
 16323                           fsr0h	equ	0xFEA
 16324                           fsr0l	equ	0xFE9
 16325                           wreg	equ	0xFE8
 16326                           indf1	equ	0xFE7
 16327                           postinc1	equ	0xFE6
 16328                           postdec1	equ	0xFE5
 16329                           preinc1	equ	0xFE4
 16330                           plusw1	equ	0xFE3
 16331                           fsr1h	equ	0xFE2
 16332                           fsr1l	equ	0xFE1
 16333                           bsr	equ	0xFE0
 16334                           indf2	equ	0xFDF
 16335                           postinc2	equ	0xFDE
 16336                           postdec2	equ	0xFDD
 16337                           preinc2	equ	0xFDC
 16338                           plusw2	equ	0xFDB
 16339                           fsr2h	equ	0xFDA
 16340                           fsr2l	equ	0xFD9
 16341                           status	equ	0xFD8

Data Sizes:
    Strings     408
    Constant    20
    Data        43
    BSS         118
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    126     126
    BANK0           128     39     114
    BANK1           256    163     249
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    main$2164	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[9]), 
		 -> STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), STR_1(CODE[49]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_110(CODE[3]), STR_106(CODE[3]), STR_101(CODE[3]), STR_97(CODE[3]), 
		 -> STR_92(CODE[4]), STR_88(CODE[4]), STR_83(CODE[3]), STR_78(CODE[3]), 
		 -> STR_73(CODE[4]), STR_68(CODE[3]), STR_63(CODE[3]), STR_58(CODE[4]), 
		 -> STR_53(CODE[3]), STR_48(CODE[3]), STR_43(CODE[4]), STR_38(CODE[3]), 
		 -> STR_34(CODE[3]), STR_29(CODE[3]), STR_25(CODE[3]), STR_20(CODE[4]), 
		 -> STR_16(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_110(CODE[3]), STR_106(CODE[3]), STR_101(CODE[3]), STR_97(CODE[3]), 
		 -> STR_92(CODE[4]), STR_88(CODE[4]), STR_83(CODE[3]), STR_78(CODE[3]), 
		 -> STR_73(CODE[4]), STR_68(CODE[3]), STR_63(CODE[3]), STR_58(CODE[4]), 
		 -> STR_53(CODE[3]), STR_48(CODE[3]), STR_43(CODE[4]), STR_38(CODE[3]), 
		 -> STR_34(CODE[3]), STR_29(CODE[3]), STR_25(CODE[3]), STR_20(CODE[4]), 
		 -> STR_16(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), ?_snprintf(BANK0[2]), STR_8(CODE[50]), 
		 -> STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[39]), 
		 -> STR_3(CODE[9]), STR_2(CODE[64]), STR_1(CODE[49]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), ?_snprintf(BANK0[2]), STR_8(CODE[50]), 
		 -> STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[39]), 
		 -> STR_3(CODE[9]), STR_2(CODE[64]), STR_1(CODE[49]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), 
		 -> STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), 
		 -> STR_1(CODE[49]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), 
		 -> STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), 
		 -> STR_1(CODE[49]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), 
		 -> STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), 
		 -> STR_1(CODE[49]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_snprintf(BANK0[2]), STR_8(CODE[50]), STR_7(CODE[9]), 
		 -> STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), 
		 -> STR_2(CODE[64]), STR_1(CODE[49]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    S1560_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    change_direction@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    change_direction@stepper_motor	PTR struct . size(2) Largest target is 13
		 -> joint_dilutor_stepper(BANK1[12]), end_effector_stepper(BANK1[12]), joint_stepper(BANK1[12]), 

    reach_goal@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    reach_goal@stepper_motor	PTR struct . size(2) Largest target is 13
		 -> joint_dilutor_stepper(BANK1[12]), end_effector_stepper(BANK1[12]), joint_stepper(BANK1[12]), 

    update_current_coil@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    update_current_coil@stepper_motor	PTR struct . size(2) Largest target is 13
		 -> joint_dilutor_stepper(BANK1[12]), end_effector_stepper(BANK1[12]), joint_stepper(BANK1[12]), 

    turn_on_current_coil@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    turn_on_current_coil@stepper_motor	PTR struct . size(2) Largest target is 13
		 -> joint_dilutor_stepper(BANK1[12]), end_effector_stepper(BANK1[12]), joint_stepper(BANK1[12]), 

    init_stepper@register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    init_stepper@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    init_stepper@hex_coil_register_values	PTR unsigned char  size(2) Largest target is 4
		 -> hex_end_effector_values(BANK1[4]), hex_joint_values(BANK1[4]), 

    init_stepper@stepper_motor	PTR struct . size(2) Largest target is 13
		 -> joint_dilutor_stepper(BANK1[12]), end_effector_stepper(BANK1[12]), joint_stepper(BANK1[12]), 

    state_translator_micro_to_fpga@state	PTR int  size(2) Largest target is 2
		 -> state(BANK1[2]), 

    state_translator_fpga_to_micro@state	PTR int  size(2) Largest target is 2
		 -> state(BANK1[2]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 160
		 -> STR_13(CODE[37]), STR_12(CODE[17]), STR_11(CODE[44]), main@greet_str(BANK1[160]), 
		 -> STR_9(CODE[22]), 

    main@greet_str	PTR const unsigned char [80] size(2) Largest target is 64
		 -> ?_snprintf(BANK0[2]), STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), 
		 -> STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), 
		 -> STR_1(CODE[49]), 

    joint_dilutor_stepper.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    end_effector_stepper.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    S181$register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    joint_stepper.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    state_msgs	PTR const unsigned char [8] size(2) Largest target is 64
		 -> STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[9]), 
		 -> STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), STR_1(CODE[49]), 


Critical Paths under _main in COMRAM

    _state_translator_fpga_to_micro->_lcd_dat
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _reach_goal->_turn_on_current_coil
    _lcd_str->_lcd_dat
    _lcd_dat->_lcd_wr
    _lcd_init->_lcd_cmd
    _lcd_cmd->_lcd_wr
    ___fldiv->___flmul
    _init_USART->_roundf
    _roundf->___flsub
    ___flsub->___fladd
    ___fladd->___fldiv
    ___fltol->_roundf
    ___flmul->___xxtofl
    _abs->___aomod
    ___xxtofl->___awdiv
    ___awdiv->_abs

Critical Paths under _rx_char_usart in COMRAM

    None.

Critical Paths under _main in BANK0

    _wait_for_zero->_get_temperature
    _get_temperature->___fltol
    _snprintf->_vsnprintf
    _init_timer_2->___fltol
    _init_ccp1->_update_pwm_duty_ccp1
    _update_pwm_duty_ccp1->___fltol
    _init_USART->___fltol
    _get_liters->___fltol
    ___fltol->_roundf
    _check_temperature->_get_temperature

Critical Paths under _rx_char_usart in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rx_char_usart in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rx_char_usart in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rx_char_usart in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _rx_char_usart in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _rx_char_usart in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               165   165      0   91001
                                             37 BANK0      2     2      0
                                              0 BANK1    163   163      0
                             ___wmul
                   _change_direction
                  _check_temperature
       _configure_ad_conversion_oven
       _configure_ad_conversion_tank
                         _get_liters
                      _get_reg_value
                    _get_temperature
                         _init_PORTS
                         _init_USART
                          _init_ccp1
                    _init_interrupts
                       _init_stepper
                       _init_timer_0
                       _init_timer_2
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                         _reach_goal
                     _serial_tx_char
                           _snprintf
     _state_translator_fpga_to_micro
     _state_translator_micro_to_fpga
                      _wait_for_zero
 ---------------------------------------------------------------------------------
 (1) _wait_for_zero                                        0     0      0    3663
                    _get_temperature
 ---------------------------------------------------------------------------------
 (2) _get_temperature                                      2     0      2    3663
                                             28 BANK0      2     0      2
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _state_translator_micro_to_fpga                       5     3      2     168
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _state_translator_fpga_to_micro                       3     1      2     472
                                              2 COMRAM     3     1      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            12     4      8   46693
                                             10 BANK0     12     4      8
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (2) _vsnprintf                                           22    14      8   46319
                                            111 COMRAM    12     4      8
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   45556
                                            103 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   45095
                                             66 COMRAM    37    31      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    7075
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    6115
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    5013
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    5560
                                             27 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6790
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    4829
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4609
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    2168
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1175
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _serial_tx_char                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _reach_goal                                           7     3      4    1590
                                              8 COMRAM     7     3      4
               _turn_on_current_coil
                _update_current_coil
 ---------------------------------------------------------------------------------
 (2) _update_current_coil                                  6     4      2     274
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _turn_on_current_coil                                 8     6      2     142
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              5     3      2     514
                                              2 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              1     1      0      44
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0      44
                                              2 COMRAM     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0      44
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_timer_2                                         4     4      0    8165
                                             28 BANK0      4     4      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _init_timer_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_stepper                                        16     4     12    1678
                                              0 COMRAM    16     4     12
 ---------------------------------------------------------------------------------
 (1) _init_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ccp1                                            0     0      0    4830
               _update_pwm_duty_ccp1
 ---------------------------------------------------------------------------------
 (2) _update_pwm_duty_ccp1                                 9     5      4    4830
                                             28 BANK0      9     5      4
                            ___fldiv
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1551
                                             69 COMRAM    25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_USART                                           0     0      0   12018
                            ___fltol
                             _roundf
 ---------------------------------------------------------------------------------
 (2) _roundf                                              26    22      4   11409
                                            118 COMRAM     8     4      4
                                              0 BANK0     18    18      0
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3801
                                            110 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    3478
                                             94 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _init_PORTS                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_reg_value                                        1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _get_liters                                           2     0      2    3663
                                             28 BANK0      2     0      2
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     609
                                             18 BANK0     10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2504
                                             44 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _configure_ad_conversion_tank                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configure_ad_conversion_oven                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_temperature                                    6     4      2    2153
                                             30 BANK0      6     4      2
                            ___awdiv
                             ___flge
                           ___xxtofl
                                _abs
                    _get_temperature (ARG)
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     218
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     550
                                             30 COMRAM    14    10      4
                            ___awdiv (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     790
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                             22 COMRAM     8     4      4
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (1) _change_direction                                     4     2      2     348
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _rx_char_usart                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul
   _change_direction
   _check_temperature
     ___awdiv
       _abs (ARG)
         ___aomod (ARG)
     ___flge
     ___xxtofl
       ___awdiv (ARG)
         _abs (ARG)
           ___aomod (ARG)
       _abs (ARG)
         ___aomod (ARG)
     _abs
       ___aomod (ARG)
     _get_temperature (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _roundf (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flge
           ___flmul
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       _abs (ARG)
                         ___aomod (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
       ___xxtofl
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
   _configure_ad_conversion_oven
   _configure_ad_conversion_tank
   _get_liters
     ___flmul
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
       _roundf (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flge
         ___flmul
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
     ___xxtofl
       ___awdiv (ARG)
         _abs (ARG)
           ___aomod (ARG)
       _abs (ARG)
         ___aomod (ARG)
   _get_reg_value
   _get_temperature
     ___flmul
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
       _roundf (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flge
         ___flmul
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
     ___xxtofl
       ___awdiv (ARG)
         _abs (ARG)
           ___aomod (ARG)
       _abs (ARG)
         ___aomod (ARG)
   _init_PORTS
   _init_USART
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
       _roundf (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flge
         ___flmul
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
     _roundf
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flge
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___flneg
       ___flsub
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
   _init_ccp1
     _update_pwm_duty_ccp1
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _roundf (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flge
           ___flmul
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       _abs (ARG)
                         ___aomod (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
   _init_interrupts
   _init_stepper
   _init_timer_0
   _init_timer_2
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
     ___fldiv
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
     ___flmul
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
       _roundf (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flge
         ___flmul
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
   _lcd_cmd
     _lcd_wr
   _lcd_init
     _lcd_cmd
       _lcd_wr
   _lcd_str
     _lcd_dat
       _lcd_wr
   _reach_goal
     _turn_on_current_coil
     _update_current_coil
   _serial_tx_char
   _snprintf
     _vsnprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _state_translator_fpga_to_micro
     _lcd_dat
       _lcd_wr
   _state_translator_micro_to_fpga
   _wait_for_zero
     _get_temperature
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _roundf (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flge
           ___flmul
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       _abs (ARG)
                         ___aomod (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
       ___xxtofl
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)

 _rx_char_usart (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     A3      F9       7       97.3%
BITBANK0            80      0       0       4        0.0%
BANK0               80     27      72       5       89.1%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7E      7E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1E9      15        0.0%
DATA                 0      0     1E9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat Jun 17 20:17:27 2023

                                           ?_get_reg_value 0001  
                                          ??_wait_for_zero 007F  
                                             ___fldiv@aexp 005E  
                                             ___fldiv@bexp 005D  
                                             ___fldiv@sign 0056  
                                                       l21 64C2  
                                                       l24 62A8  
                                                       l27 62BC  
                                                       l36 6234  
                                             ___awdiv@sign 001C  
                                      ___wmul@multiplicand 0003  
                                                      l301 6C50  
                                                      l206 1D10  
                                                      l400 629C  
                                                      l306 6C54  
                                                      l170 17EA  
                                                      l403 69E2  
                                                      l412 68FA  
                                                      l252 6218  
                                                      l261 6224  
                                                      l270 6B42  
                                                      l406 6A4C  
                                                      l174 180A  
                                                      l158 1704  
                                                      l423 7042  
                                                      l343 62DE  
                                                      l415 6308  
                                                      l264 6354  
                                                      l409 6896  
                                                      l249 63D4  
                                                      l361 6CFC  
                                                      l346 6E8E  
                                                      l370 6F66  
                                                      l267 637E  
                                                      l427 63A8  
                                                      l419 632A  
                                                      l356 6DC0  
                                                      l276 6BCA  
                                                      l364 6706  
                                                      l701 6480  
                                                      l349 6302  
                                                      l541 3FF6  
                                                      l374 6AC2  
                                                      l297 7AEE  
                                                      l378 643E  
                                                      l554 7C80  
                                                      l724 7856  
                                                      l397 627E  
                                                      l658 73E6  
                                                      l692 76D0  
                                                      l872 75F8  
                                                      l697 771E  
                                                      l865 75D6  
                                                      l882 72F6  
                                                      l955 1FA4  
                                                      l875 72D4  
                                                      l972 20E8  
                                                      l964 22FE  
                                                      l956 1F8E  
                                                      l981 21EC  
                                                      l957 1F44  
                                                      l982 21D4  
                                                      l997 6618  
                                        ??_init_interrupts 0001  
                                                      _PR2 000FCB  
                                                      _abs 661C  
                                                      _pad 712A  
                                init_stepper@register_name 000B  
                                                      wreg 000FE8  
                                           ?_rx_char_usart 0001  
                                             ___flmul@aexp 003E  
                                             ___flmul@bexp 003F  
                                             ___flmul@sign 0039  
                                             ___flmul@temp 0044  
                                             ___flmul@prod 0040  
                                             ___fltol@exp1 00D3  
                                                     l1011 29EC  
                                                     l1020 2A42  
                                                     l1102 6658  
                                                     l1022 2AD2  
                                                     l1014 29A6  
                                                     l1023 2ABA  
                                                     l1105 6662  
                                                     l1041 23F0  
                                                     l1113 2FBE  
                                                     l1009 2BD4  
                                                     l1201 3086  
                                                     l1050 268C  
                                                     l1051 2674  
                                                     ?_abs 0013  
                                                     l1140 796A  
                                                     l1045 27A2  
                                                     l1301 35B8  
                                                     l1303 3624  
                                                     l1135 7990  
                                                     l1127 6408  
                                                     l1048 25FC  
                                                     l1224 3898  
                                                     l1233 3A04  
                                                     l1082 3ADA  
                                                     l1058 275A  
                                                     l1226 38A2  
                                                     l1242 3D02  
                                                     l1219 32F4  
                                                     l1235 3A76  
                                                     l1244 3D0C  
                                                     l1340 145C  
                                                     PORTD 000F83  
                                                     l1085 3C6C  
                                                     l1413 7E42  
                                                     l1181 717E  
                                                     l1253 3DE4  
                                                     l1421 65CE  
                                                     l1317 0198  
                                                     PORTE 000F84  
                                                     l1254 3E38  
                                                     l1263 366C  
                                                     l1096 3BF2  
                                                     l1416 7E4C  
                                                     l1184 71CA  
                                                     l1280 3346  
                                                     l1089 3B86  
                                                     l1193 6828  
                                                     l4001 32CA  
                                                     l1273 3850  
                                                     l1265 3676  
                                                     l1441 6546  
                                                     l1186 720C  
                                                     l1258 3E42  
                                                     l1427 6504  
                                                     l1435 67C2  
                                                     l4011 388C  
                                                     l4021 38EC  
                                                     l4013 38CC  
                                                     l4005 3856  
                                                     l4101 3660  
                                                     l1278 333C  
                                                     l1199 307C  
                                                     l4023 38F4  
                                                     l4031 3974  
                                                     l4015 38D4  
                                                     l4007 386A  
                                                     l4111 372E  
                                                     l4103 36A0  
                                                     l1287 33EA  
                                                     l1456 7124  
                                                     l1464 66B4  
                                                     l1384 69D2  
                                                     l5001 2508  
                                                     l4201 7CA0  
                                                     l1473 6762  
                                                     l4041 3A1A  
                                                     l4033 3994  
                                                     l4025 3906  
                                                     l4017 38D8  
                                                     l4009 386C  
                                                     l4121 37D8  
                                                     l4113 3734  
                                                     l4105 36A8  
                                                     l1385 69DA  
                                                     l5011 25B0  
                                                     l5003 2524  
                                                     l4203 7CA6  
                                                     l1467 3FFC  
                                                     l4043 3A30  
                                                     l4035 39B6  
                                                     l4027 390C  
                                                     l4019 38E4  
                                                     l4123 37F6  
                                                     l4115 373A  
                                                     l4107 36B0  
                                                     l4131 32FA  
                                                     l1492 6968  
                                                     l5021 260E  
                                                     l5013 25BE  
                                                     l5005 2530  
                                                     l5101 7742  
                                                     l4301 1E6A  
                                                     l4221 7D78  
                                                     l4213 7D10  
                                                     l4205 7CC8  
                                                     l4045 3A36  
                                                     l4037 39D4  
                                                     l4029 3912  
                                                     l4061 3CAC  
                                                     l4053 3C74  
                                                     l1477 74EC  
                                                     l4125 3814  
                                                     l4109 36B8  
                                                     l4117 379E  
                                                     l4141 336A  
                                                     l4133 330E  
                                                     l5023 2622  
                                                     l5015 25DC  
                                                     l5007 254C  
                                                     l5111 779A  
                                                     l4311 1EA2  
                                                     l4303 1E82  
                                                     l4231 7E10  
                                                     l4215 7D2A  
                                                     l4207 7D04  
                                                     l4047 3A46  
                                                     l4039 39F2  
                                                     l4071 3D36  
                                                     l4063 3CC2  
                                                     l4055 3C86  
                                                     l4119 37B6  
                                                     l4127 3826  
                                                     l1487 695E  
                                                     l4151 33AC  
                                                     l4143 338C  
                                                     l4135 3310  
                                                     l5033 26A2  
                                                     l5041 26EE  
                                                     l5025 2626  
                                                     l5017 25E8  
                                                     l5009 2576  
                                                     l5121 77CC  
                                                     l5113 779E  
                                                     l5105 7758  
                                                     l4401 212C  
                                                     l4321 1EB6  
                                                     l4313 1EA6  
                                                     l4305 1E94  
                                                     l5201 2C4E  
                                                     l4233 7E26  
                                                     l4225 7DB2  
                                                     l4217 7D34  
                                                     l4209 7D08  
                                                     l4049 3A4C  
                                                     l4081 3DB8  
                                                     l4073 3D4C  
                                                     l4065 3CCA  
                                                     l4057 3C8E  
                                                     l4241 741A  
                                                     l4161 343C  
                                                     l4153 33CC  
                                                     l4145 3394  
                                                     l4137 3330  
                                                     l1498 6588  
                                                     l5051 2770  
                                                     l5043 270E  
                                                     l5035 26AE  
                                                     l5027 2638  
                                                     l5019 25FA  
                                                     l5131 77FC  
                                                     l5123 77D8  
                                                     l5115 77B0  
                                                     l5107 7788  
                                                     l4411 2168  
                                                     l4403 2138  
                                                     l4331 1ECA  
                                                     l4323 1EBA  
                                                     l4315 1EAA  
                                                     l4307 1E98  
                                                     l5203 2C62  
                                                     l4219 7D3E  
                                                     l4091 3E12  
                                                     l4083 3DBC  
                                                     l4075 3D50  
                                                     l4067 3CDC  
                                                     l4059 3CA4  
                                                     l4251 747C  
                                                     l4171 34B8  
                                                     l4155 33DC  
                                                     l4147 339C  
                                                     l4139 3362  
                                                     l5301 7312  
                                                     l5053 2782  
                                                     l5045 2722  
                                                     l5037 26C0  
                                                     l5029 266A  
                                                     l5133 780A  
                                                     l5125 77E2  
                                                     l5109 778A  
                                                     l4421 219E  
                                                     l4413 216E  
                                                     l4405 214A  
                                                     l4341 1F0A  
                                                     l4333 1ECE  
                                                     l4325 1EBE  
                                                     l4317 1EAE  
                                                     l4309 1E9E  
                                                     l4261 1D6A  
                                                     l5221 2F0C  
                                                     l5213 2D28  
                                                     l5205 2CA8  
                                                     l4229 7DFA  
                                                     l4093 3E16  
                                                     l4085 3DC0  
                                                     l4077 3D72  
                                                     l4253 7492  
                                                     l4245 7426  
                                                     l4181 356A  
                                                     l4173 34BE  
                                                     l4165 347C  
                                                     l4149 33A4  
                                                     l4501 01AE  
                                                     l5311 733E  
                                                     l5303 731A  
                                                     l5071 7630  
                                                     l5151 3B08  
                                                     l5143 3A7E  
                                                     l5055 2784  
                                                     l5047 2742  
                                                     l5039 26EA  
                                                     l5135 781E  
                                                     l4431 220E  
                                                     l4423 21B0  
                                                     l4415 2184  
                                                     l4407 214C  
                                                     l4351 1F6A  
                                                     l4343 1F2C  
                                                     l4335 1ED2  
                                                     l4327 1EC2  
                                                     l4319 1EB2  
                                                     l4271 1DB8  
                                                     l4263 1D7C  
                                                     l5063 65D4  
                                                     l5223 2F42  
                                                     l5215 2DFC  
                                                     l5207 2CCC  
                                                     l5231 6332  
                                                     l3711 7060  
                                                     l4079 3D80  
                                                     l4255 74C2  
                                                     l4247 7436  
                                                     l4239 73EC  
                                                     l4095 362A  
                                                     l4191 35E4  
                                                     l4183 3588  
                                                     l4175 34C4  
                                                     l4167 3492  
                                                     l4159 3426  
                                                     l4511 0252  
                                                     l4503 01DA  
                                                     l5321 7384  
                                                     l5313 7348  
                                                     l5305 731E  
                                                     l5081 76AA  
                                                     l5073 7640  
                                                     l5161 3B6C  
                                                     l5145 3A92  
                                                     l5049 2760  
                                                     l5057 278C  
                                                     l5137 7834  
                                                     l5401 63D2  
                                                     l4441 2288  
                                                     l4433 2220  
                                                     l4425 21CA  
                                                     l4409 2160  
                                                     l4417 2186  
                                                     l4361 1FCC  
                                                     l4353 1F7E  
                                                     l4345 1F3C  
                                                     l4329 1EC6  
                                                     l4337 1ED6  
                                                     l4281 1DF4  
                                                     l4273 1DBC  
                                                     l4265 1D7E  
                                                     l5065 65E4  
                                                     l5225 2F88  
                                                     l5217 2E68  
                                                     l5209 2CF0  
                                                     l5241 6348  
                                                     l5233 6334  
                                                     l3713 7074  
                                                     l3801 7AFA  
                                                     l4089 3DFC  
                                                     l4249 745A  
                                                     l4097 363E  
                                                     l4193 35FA  
                                                     l4185 35A6  
                                                     l4169 34A6  
                                                     l4177 3526  
                                                     l4521 02F2  
                                                     l4513 0262  
                                                     l4505 0210  
                                                     l5331 73B8  
                                                     l5323 738C  
                                                     l5315 735E  
                                                     l5307 7332  
                                                     l5083 76BE  
                                                     l5075 7674  
                                                     l5171 3BE0  
                                                     l5163 3B70  
                                                     l5155 3B1C  
                                                     l5147 3AA4  
                                                     l5059 2792  
                                                     l5139 7844  
                                                     l5091 6444  
                                                     l4451 22D0  
                                                     l4443 22AE  
                                                     l4435 225E  
                                                     l4371 2016  
                                                     l4419 2198  
                                                     l4355 1F80  
                                                     l4347 1F58  
                                                     l4339 1EDC  
                                                     l4291 1E28  
                                                     l4283 1DF6  
                                                     l4267 1D94  
                                                     l4275 1DC4  
                                                     l4259 1D5E  
                                                     l5227 2FAC  
                                                     l5219 2EA0  
                                                     l5411 6DD2  
                                                     l5243 6352  
                                                     l5235 633A  
                                                     l5251 635C  
                                                     l3715 7080  
                                                     l3723 666A  
                                                     l3731 670C  
                                                     l3811 7B64  
                                                     l3803 7B0C  
                                                     l4099 3640  
                                                     l4187 35CE  
                                                     l4179 3548  
                                                     l4611 0964  
                                                     l4603 08EA  
                                                     l4531 0390  
                                                     l4523 02FC  
                                                     l4507 0222  
                                                     l5325 73A6  
                                                     l5317 7366  
                                                     l5333 73BE  
                                                     l5309 733A  
                                                     l5085 7714  
                                                     l5077 7684  
                                                     l5069 75FE  
                                                     l5181 3C46  
                                                     l5173 3C06  
                                                     l5165 3B7C  
                                                     l5157 3B26  
                                                     l5149 3AEC  
                                                     l5093 645E  
                                                     l4453 22D8  
                                                     l4445 22B2  
                                                     l4429 2202  
                                                     l4437 2260  
                                                     l4381 204A  
                                                     l4373 2022  
                                                     l4365 1FE0  
                                                     l4357 1F8C  
                                                     l4349 1F64  
                                                     l4293 1E3C  
                                                     l4285 1DFE  
                                                     l4277 1DD6  
                                                     l4269 1DA8  
                                                     l5421 62E8  
                                                     l5413 6DD4  
                                                     l5405 6DC6  
                                                     l5237 633C  
                                                     l5261 6372  
                                                     l5253 635E  
                                                     l4197 7C86  
                                                     l3717 70A4  
                                                     l3709 704A  
                                                     l3725 6676  
                                                     l3733 6718  
                                                     l3821 7BEE  
                                                     l3813 7B88  
                                                     l3805 7B2C  
                                                     l3741 654A  
                                                     l4189 35D4  
                                                     l4701 0FA8  
                                                     l4621 0A2C  
                                                     l4613 09A0  
                                                     l4605 0916  
                                                     l4541 0430  
                                                     l4533 03A0  
                                                     l4525 030A  
                                                     l4517 02B2  
                                                     l4509 0230  
                                                     l4461 007C  
                                                     l5341 785E  
                                                     l5501 7A4C  
                                                     l5245 69E0  
                                                     ?_pad 0011  
                                                     l5335 73D4  
                                                     l5327 73AE  
                                                     l5319 7370  
                                                     l5087 771A  
                                                     l5079 7698  
                                                     l5183 3C58  
                                                     l5175 3C08  
                                                     l5167 3BBE  
                                                     l5159 3B34  
                                                     l5095 646E  
                                                     l4455 22EA  
                                                     l4447 22C6  
                                                     l4439 2276  
                                                     l4391 20C6  
                                                     l4375 2028  
                                                     l4367 1FF2  
                                                     l4359 1FB8  
                                                     l4383 2050  
                                                     l4295 1E4C  
                                                     l4287 1E10  
                                                     l4279 1DDE  
                                                     l5271 6D7E  
                                                     l5423 62FE  
                                                     l5431 6C5A  
                                                     l5415 6E50  
                                                     l5407 6DCE  
                                                     l5239 6346  
                                                     l5263 637C  
                                                     l5255 6364  
                                                     l3751 63A0  
                                                     l4199 7C9A  
                                                     l3719 70DC  
                                                     l3727 668A  
                                                     l3735 671E  
                                                     l3831 7C5E  
                                                     l3823 7C0E  
                                                     l3815 7B90  
                                                     l3807 7B30  
                                                     l3903 6900  
                                                     l4711 106C  
                                                     l4631 0AD2  
                                                     l4623 0A64  
                                                     l4551 04F2  
                                                     l4543 0462  
                                                     l4527 0334  
                                                     l4519 02C6  
                                                     l4471 00D6  
                                                     l4463 00A6  
                                                     l5191 6978  
                                                     l5351 78AA  
                                                     l5343 7874  
                                                     l5503 7A64  
                                                     l5247 69F6  
                                                     l5337 73DC  
                                                     l5329 73B0  
                                                     l5185 3C5A  
                                                     l5177 3C0E  
                                                     l5169 3BCC  
                                                     l3745 661E  
                                                     l4457 22EC  
                                                     l4449 22CC  
                                                     l4385 207C  
                                                     l4393 20D6  
                                                     l4377 203C  
                                                     l4369 2004  
                                                     l4297 1E50  
                                                     l4289 1E12  
                                                     l4801 27CA  
                                                     l5281 6DA6  
                                                     l5273 6D84  
                                                     l5265 6D02  
                                                     l5425 6300  
                                                     l5441 6C90  
                                                     l5601 62DA  
                                                     l5409 6DD0  
                                                     l5257 6366  
                                                     l3913 64C6  
                                                     l3921 6784  
                                                     l3729 668E  
                                                     l3737 6756  
                                                     l3761 3E7E  
                                                     l3825 7C22  
                                                     l3817 7BA6  
                                                     l3809 7B44  
                                                     l3841 752A  
                                                     l4713 1096  
                                                     l4721 111A  
                                                     l4641 0B68  
                                                     l4633 0B0A  
                                                     l4625 0A88  
                                                     l4561 05EA  
                                                     l4553 053C  
                                                     l4537 03F0  
                                                     l4529 036E  
                                                     l4473 00DC  
                                                     l4465 00B4  
                                                     l5193 6986  
                                                     l5361 7914  
                                                     l5353 78B8  
                                                     l5345 787E  
                                                     l5521 63DA  
                                                     l5513 7AC0  
                                                     l5505 7A78  
                                                     l5179 3C32  
                                                     l3747 663C  
                                                     l5099 7726  
                                                     l4395 2104  
                                                     l4387 20B0  
                                                     l4379 203E  
                                                     l4299 1E58  
                                                     l4803 27E0  
                                                     l4811 2810  
                                                     l5275 6D88  
                                                     l5267 6D66  
                                                     l5419 62E4  
                                                     l5443 6CB0  
                                                     l5603 62DC  
                                                     l5451 6ACA  
                                                     l5259 6370  
                                                     l5283 66BA  
                                                     l5291 6F34  
                                                     l3923 67B6  
                                                     l3931 67E0  
                                                     l3771 3EC8  
                                                     l3763 3E82  
                                                     l3755 3E48  
                                                     l3819 7BBA  
                                                     l3827 7C28  
                                                     l3851 75BA  
                                                     l3843 7540  
                                                     l3835 74F4  
                                                     l3907 693C  
                                                     l4723 1156  
                                                     l4715 10A6  
                                                     l4707 0FF8  
                                                     l4651 0C0C  
                                                     l4643 0B9E  
                                                     l4619 09F0  
                                                     l4571 068E  
                                                     l4547 047E  
                                                     l4539 0404  
                                                     l4491 0118  
                                                     l4483 0104  
                                                     l4475 00F0  
                                                     l4467 00C6  
                                                     l5195 69AE  
                                                     l5363 7928  
                                                     l5355 78C4  
                                                     l5523 63E4  
                                                     l5507 7A90  
                                                     l5531 6BF8  
                                                     l4397 2118  
                                                     l4389 20B2  
                                                     l5197 2BDC  
                                                     l5381 64BA  
                                                     l5373 6486  
                                                     l4901 2AE8  
                                                     l4821 2844  
                                                     l4813 2822  
                                                     l4805 27F4  
                                                     l5277 6D9C  
                                                     l5269 6D6A  
                                                     l5429 6212  
                                                     l5445 6CC0  
                                                     l5437 6C62  
                                                     l5461 6B0C  
                                                     l5453 6ADA  
                                                     l5293 6F56  
                                                     l5605 6A52  
                                                     l3749 6384  
                                                     l3925 67BA  
                                                     l3917 6766  
                                                     l3933 67EC  
                                                     l3781 3F30  
                                                     l3773 3EEA  
                                                     l3765 3E96  
                                                     l3757 3E4C  
                                                     l3829 7C3E  
                                                     l3853 75BC  
                                                     l3845 7554  
                                                     l3837 7500  
                                                     l3861 723C  
                                                     l3909 6952  
                                                     l4741 1276  
                                                     l4725 118E  
                                                     l4717 10DC  
                                                     l4709 1034  
                                                     l4661 0CA2  
                                                     l4653 0C44  
                                                     l4629 0A96  
                                                     l4581 0750  
                                                     l4557 0576  
                                                     l4549 04BA  
                                                     l4469 00CA  
                                                     l5189 6970  
                                                     l5365 795A  
                                                     l5357 78D8  
                                                     l5349 7886  
                                                     l5517 7ADC  
                                                     l5509 7AA4  
                                                     l5533 6C18  
                                                     l5701 165E  
                                                     l5623 640E  
                                                     l5551 628E  
                                                     l5543 6284  
                                                     l5199 2BFC  
                                                     l5383 64BC  
                                                     l5375 64B4  
                                                     l4911 2B54  
                                                     l4903 2AF4  
                                                     l4823 285A  
                                                     l4831 288A  
                                                     l4815 282A  
                                                     l4807 2804  
                                                     l5279 6DA2  
                                                     l5447 6CD4  
                                                     l5439 6C8C  
                                                     l5471 6B36  
                                                     l5463 6B1E  
                                                     l5455 6AEC  
                                                     l5287 6E94  
                                                     l5607 6A80  
                                                     l5615 6AA0  
                                                     l5391 62A4  
                                                     l3919 676C  
                                                     l3935 67FA  
                                                     l3783 3F62  
                                                     l3775 3EF2  
                                                     l3791 3F9E  
                                                     l3767 3EB6  
                                                     l3759 3E5E  
                                                     l3951 304E  
                                                     l3943 2FC6  
                                                     l3855 75D0  
                                                     l3847 7568  
                                                     l3839 7522  
                                                     l3871 72CE  
                                                     l3863 7252  
                                                     l4751 1300  
                                                     l4743 1284  
                                                     l4727 11B8  
                                                     l4735 1208  
                                                     l4671 0D8A  
                                                     l4663 0CEC  
                                                     l4639 0B3C  
                                                     l4591 0824  
                                                     l4567 063A  
                                                     l4559 05B2  
                                                     l4495 0126  
                                                     l4487 010E  
                                                     l4479 00FA  
                                                     l5367 7974  
                                                     l5359 78FE  
                                                     l5535 6C20  
                                                     l5527 6BD0  
                                                     l5711 16B4  
                                                     l5703 1660  
                                                     l5297 72FC  
                                                     l5561 6FF2  
                                                     l5545 6288  
                                                     l5553 6894  
                                                     l5393 622A  
                                                     l5385 64BE  
                                                     l5377 64B6  
                                                     l4921 2BBE  
                                                     l4913 2B6A  
                                                     l4905 2B06  
                                                     l4841 28D6  
                                                     l4833 289C  
                                                     l4825 286E  
                                                     l4817 2830  
                                                     l4809 2808  
                                                     l5449 6CE8  
                                                     l5473 6B3C  
                                                     l5465 6B24  
                                                     l5457 6AEE  
                                                     l5481 6B86  
                                                     l5289 6F20  
                                                     l5617 6AAE  
                                                     l5609 6A94  
                                                     l3881 7174  
                                                     l3873 712C  
                                                     l3937 6800  
                                                     l3929 67C8  
                                                     l3793 3FB4  
                                                     l3785 3F82  
                                                     l3777 3F08  
                                                     l3769 3EBA  
                                                     l3961 30B6  
                                                     l3953 3050  
                                                     l3945 2FE6  
                                                     l3849 759A  
                                                     l3865 7266  
                                                     l3857 7212  
                                                     l4753 1338  
                                                     l4737 1234  
                                                     l4729 11C8  
                                                     l4649 0BD0  
                                                     l4577 06DC  
                                                     l4569 0666  
                                                     l4497 0180  
                                                     l5369 7986  
                                                     l5537 6C42  
                                                     l5529 6BF0  
                                                     l5801 1AC0  
                                                     l5721 1728  
                                                     l5713 16CC  
                                                     l5705 1676  
                                                     l5641 146C  
                                                     l5299 7300  
                                                     l5563 7028  
                                                     l5547 628A  
                                                     l5555 68AA  
                                                     l5395 622E  
                                                     l5387 64C0  
                                                     l5379 64B8  
                                                     l4923 2BC4  
                                                     l4915 2B8A  
                                                     l4907 2B30  
                                                     l4835 28B8  
                                                     l4827 287E  
                                                     l4819 2842  
                                                     l5467 6B2A  
                                                     l5459 6AF4  
                                                     l5475 6B48  
                                                     l5619 6ABA  
                                                     l3891 71F2  
                                                     l3883 718C  
                                                     l3875 7140  
                                                     l3939 6804  
                                                     l3795 3FD4  
                                                     l3787 3F84  
                                                     l3779 3F1C  
                                                     l3971 315A  
                                                     l3963 30BE  
                                                     l3955 3070  
                                                     l3947 3018  
                                                     l3867 729A  
                                                     l3859 7234  
                                                     l4755 1362  
                                                     l4763 13B2  
                                                     l4739 125C  
                                                     l4691 0EF2  
                                                     l4683 0E66  
                                                     l4675 0DAA  
                                                     l4667 0D28  
                                                     l4659 0C76  
                                                     l4595 085E  
                                                     l4587 07A2  
                                                     l4579 0718  
                                                     l4499 01AC  
                                                     l5491 79E0  
                                                     l5483 799A  
                                                     l5539 6C4A  
                                                     l5811 1B3C  
                                                     l5803 1ADC  
                                                     l5731 1798  
                                                     l5723 1740  
                                                     l5715 16EC  
                                                     l5707 1696  
                                                     l5651 14E0  
                                                     l5643 1470  
                                                     l5635 1462  
                                                     l5581 6270  
                                                     l5573 6266  
                                                     l5549 628C  
                                                     l4941 233C  
                                                     l4933 2306  
                                                     l4925 2BC8  
                                                     l4917 2BA6  
                                                     l4909 2B34  
                                                     l4861 2960  
                                                     l4853 2914  
                                                     l4837 28C8  
                                                     l4845 28EA  
                                                     l4829 2882  
                                                     l5469 6B30  
                                                     l5477 6B50  
                                                     l3885 71A2  
                                                     l3877 7154  
                                                     l3789 3F98  
                                                     l3981 320C  
                                                     l3973 3160  
                                                     l3965 30C8  
                                                     l3957 3090  
                                                     l3949 3038  
                                                     l3869 72BA  
                                                     l4781 144A  
                                                     l4765 13DE  
                                                     l4773 140E  
                                                     l4757 1372  
                                                     l4749 12C4  
                                                     l4693 0F1E  
                                                     l4685 0EA2  
                                                     l4677 0DE6  
                                                     l4669 0D54  
                                                     l4597 089A  
                                                     l4589 07DE  
                                                     l5493 79F4  
                                                     l5485 79A0  
                                                     l5821 1BAE  
                                                     l5813 1B54  
                                                     l5741 1806  
                                                     l5733 17AC  
                                                     l5725 1754  
                                                     l5717 1708  
                                                     l5709 16AA  
                                                     l5661 152A  
                                                     l5653 1514  
                                                     l5645 1474  
                                                     l5637 1462  
                                                     TRISD 000F95  
                                                     l5559 6F6E  
                                                     l5575 626A  
                                                     l4951 2382  
                                                     l4943 2350  
                                                     l4935 2312  
                                                     l5399 63AE  
                                                     l4919 2BAC  
                                                     l4871 29B2  
                                                     l4863 2968  
                                                     l4855 2930  
                                                     l4847 2900  
                                                     l4839 28D0  
                                                     l5591 62D0  
                                                     l5479 6B84  
                                                     l3887 71A6  
                                                     l3879 7168  
                                                     l3799 7AF6  
                                                     l3991 3284  
                                                     l3983 322A  
                                                     l3975 3166  
                                                     l3967 30D0  
                                                     l3959 30A6  
                                                     l3895 6508  
                                                     l4767 13EC  
                                                     l4679 0E2C  
                                                     l5495 7A0C  
                                                     l5487 79B4  
                                                     l5583 630A  
                                                     l5831 1C08  
                                                     l5823 1BBA  
                                                     l5815 1B74  
                                                     l5807 1B0C  
                                                     l5751 1876  
                                                     l5735 17D4  
                                                     l5743 181C  
                                                     l5727 176E  
                                                     l5719 1722  
                                                     l5671 156E  
                                                     l5663 1536  
                                                     l5655 1518  
                                                     l5647 1478  
                                                     l5639 1468  
                                                     TRISE 000F96  
                                                     l5569 7036  
                                                     l5577 626C  
                                                     l4961 23C6  
                                                     l4953 2388  
                                                     l4945 2360  
                                                     l4937 2324  
                                                     l4881 2A1C  
                                                     l4873 29D6  
                                                     l4865 297E  
                                                     l4857 2940  
                                                     l4849 2900  
                                                     l5593 62D2  
                                                     l4793 6220  
                                                     l3889 71DE  
                                                     l3993 328C  
                                                     l3985 3248  
                                                     l3969 30D8  
                                                     l3977 31CA  
                                                     l4769 1400  
                                                     l5497 7A20  
                                                     l5489 79C8  
                                                     l5833 1C1E  
                                                     l5825 1BD6  
                                                     l5817 1B8C  
                                                     l5809 1B26  
                                                     l5841 1C80  
                                                     l5761 18F6  
                                                     l5753 188E  
                                                     l5745 1836  
                                                     l5737 17FE  
                                                     l5729 177E  
                                                     l5681 15CA  
                                                     l5673 1576  
                                                     l5665 1538  
                                                     l5657 151E  
                                                     l5649 14AC  
                                                     l5579 626E  
                                                     l4963 23D6  
                                                     l4955 239A  
                                                     l4947 2368  
                                                     l4939 2326  
                                                     l4891 2A68  
                                                     l4883 2A22  
                                                     l4875 29D8  
                                                     l4867 2992  
                                                     l4859 2950  
                                                     l4795 27AA  
                                                     l5595 62D4  
                                                     l5587 62C2  
                                                     l3995 32A2  
                                                     l3979 31EA  
                                                     l3987 325A  
                                                     l3899 658C  
                                                     l4699 0F6C  
                                                     l5931 0150  
                                                     l4779 1422  
                                                     l5499 7A38  
                                                     l5851 1CF4  
                                                     l5843 1C9A  
                                                     l5835 1C3E  
                                                     l5827 1BE0  
                                                     l5819 1BA2  
                                                     l5771 198E  
                                                     l5763 1922  
                                                     l5755 18AA  
                                                     l5747 1846  
                                                     l5739 1802  
                                                     l5683 15D0  
                                                     l5675 1584  
                                                     l5691 15FE  
                                                     l5667 1542  
                                                     l5659 1524  
                                                     l4981 2468  
                                                     l4973 242E  
                                                     l4965 23DE  
                                                     l4957 239C  
                                                     l4949 237A  
                                                     l4893 2A6C  
                                                     l4885 2A2E  
                                                     l4877 29E8  
                                                     l4869 29A4  
                                                     l4797 27B6  
                                                     l5597 62D6  
                                                     l5589 62CE  
                                                     l5933 7D60  
                                                     l3997 32AE  
                                                     l3989 3272  
                                                     l5861 1D46  
                                                     l5853 1CFA  
                                                     l5845 1CAA  
                                                     l5837 1C56  
                                                     l5829 1BF0  
                                                     l5781 19DE  
                                                     l5773 199A  
                                                     l5757 18C4  
                                                     l5749 1860  
                                                     l5765 1934  
                                                     l5693 1604  
                                                     l5677 158A  
                                                     l5685 15E0  
                                                     l5669 155A  
                                                     l4991 24B2  
                                                     l4983 2480  
                                                     l4975 243C  
                                                     l4967 2406  
                                                     l4959 23B2  
                                                     l4895 2A7E  
                                                     l4887 2A40  
                                                     l4879 2A02  
                                                     l4799 27C8  
                                                     l5599 62D8  
                                                     l3999 32B8  
                                                     l5863 1D52  
                                                     l5855 1D00  
                                                     l5847 1CC4  
                                                     l5839 1C6C  
                                                     l5791 1A46  
                                                     l5783 19F8  
                                                     l5775 19A0  
                                                     l5767 194E  
                                                     l5759 18DA  
                                                     l5695 162A  
                                                     l5687 15F2  
                                                     l5679 15C4  
                                                     l4993 24C2  
                                                     l4985 248C  
                                                     l4977 2446  
                                                     l4969 2418  
                                                     l4897 2AB0  
                                                     l4889 2A54  
                                                     l5857 1D24  
                                                     l5849 1CD8  
                                                     l5793 1A5C  
                                                     l5785 1A10  
                                                     l5777 19BC  
                                                     l5769 1964  
                                                     l5697 1636  
                                                     l5689 15FA  
                                                     l4995 24CE  
                                                     l4987 2498  
                                                     l4979 245C  
                                                     l5859 1D2C  
                                                     l5795 1A74  
                                                     l5787 1A1C  
                                                     l5779 19D2  
                                                     l5699 1642  
                                                     l4997 24DE  
                                                     l4989 24A6  
                                                     l5797 1A90  
                                                     l5789 1A2C  
                                                     l4999 24F8  
                                                     l5799 1AAA  
                                                     STR_1 7ED9  
                                                     STR_2 7E67  
                                                     STR_3 7FBB  
                                                     STR_4 7F36  
                                                     STR_5 7FA9  
                                                     STR_6 7FC4  
                                                     STR_7 7FB2  
                                                     STR_8 7EA7  
                                                     STR_9 7F82  
                                            _state_changed 01BA  
                                                     _LATA 000F89  
                                                     _LATB 000F8A  
                                                     _LATC 000F8B  
                                                     u4000 71DC  
                                                     u4001 71D6  
                                                     u4010 653C  
                                                     u4011 6534  
                                                     u4100 6782  
                                                     u4020 6540  
                                                     u4101 677C  
                                                     u4110 67B4  
                                                     u4030 65C4  
                                                     u4111 67AE  
                                                     u4031 65BC  
                                                     u5000 1FCA  
                                                     u4120 67DE  
                                                     u4200 31E8  
                                                     u4040 65C8  
                                                     u5001 1FC4  
                                                     u4121 67D8  
                                                     u4201 31E2  
                                                     u5010 2002  
                                                     u4210 320A  
                                                     u4130 2FF8  
                                                     u4050 6932  
                                                     u5011 1FFC  
                                                     u4211 3204  
                                                     u4131 2FF0  
                                                     u4051 692A  
                                                     u5100 2182  
                                                     u5020 2014  
                                                     u4220 3228  
                                                     u4140 2FFC  
                                                     u4300 394C  
                                                     u4060 6936  
                                                     u5101 217C  
                                                     u5021 200E  
                                                     u4221 3222  
                                                     u5110 2198  
                                                     u5030 203A  
                                                     u4230 3246  
                                                     u4150 3016  
                                                     u4310 3992  
                                                     u4070 6950  
                                                     u5111 2192  
                                                     u5031 2034  
                                                     u4231 3240  
                                                     u4151 3010  
                                                     u4311 398C  
                                                     u4071 694A  
                                                     u6000 23C4  
                                                     u5200 22AC  
                                                     u5120 21AE  
                                                     u5040 207A  
                                                     u4080 64FA  
                                                     u4240 325A  
                                                     u4160 304C  
                                                     u4320 39B4  
                                                     u4400 3CDA  
                                                     u6001 23BE  
                                                     u5201 22A6  
                                                     u5121 21A8  
                                                     u5041 2074  
                                                     u4081 64F2  
                                                     u4241 3254  
                                                     u4161 3046  
                                                     u4321 39AE  
                                                     u4305 3938  
                                                     u4401 3CD4  
                                                     u6010 2404  
                                                     u5210 22C4  
                                                     u5130 21C8  
                                                     u5050 20C4  
                                                     u4090 64FE  
                                                     u4250 3270  
                                                     u4170 306E  
                                                     u4330 39D2  
                                                     u4410 3CFC  
                                                     u6011 23FE  
                                                     u5211 22BE  
                                                     u5131 21C2  
                                                     u5051 20BE  
                                                     u4251 326A  
                                                     u4171 3068  
                                                     u4331 39CC  
                                                     u4411 3CF6  
                                                     u6100 26BE  
                                                     u6020 2418  
                                                     u5220 22E8  
                                                     u5140 21E6  
                                                     u5060 2102  
                                                     u3700 70DC  
                                                     u4260 3284  
                                                     u4180 30A4  
                                                     u4340 39F0  
                                                     u4420 3D30  
                                                     u4500 37B4  
                                                     u5300 02C6  
                                                     u6101 26B8  
                                                     u6021 2412  
                                                     u5221 22E2  
                                                     u5141 21E0  
                                                     u5061 20FC  
                                                     u3701 70D6  
                                                     u4261 327E  
                                                     u4181 309E  
                                                     u4341 39EA  
                                                     u4421 3D2A  
                                                     u4501 37AE  
                                                     u5301 02C0  
                                                     u6110 270C  
                                                     u6030 2598  
                                                     u5150 2200  
                                                     u5070 2116  
                                                     u3710 66B2  
                                                     u4270 32A0  
                                                     u4190 30B6  
                                                     u4350 3A04  
                                                     u4430 3D72  
                                                     u4510 37D6  
                                                     u5310 02F0  
                                                     u5230 00A4  
                                                     u6111 2706  
                                                     u5151 21FA  
                                                     u5071 2110  
                                                     u3711 66AC  
                                                     u4271 329A  
                                                     u4191 30B0  
                                                     u4351 39FE  
                                                     u4431 3D6C  
                                                     u4511 37D0  
                                                     u5311 02EA  
                                                     u5231 009E  
                                                     u6120 2740  
                                                     u6040 25F8  
                                                     u6200 7740  
                                                     u5160 221E  
                                                     u5080 2148  
                                                     u3720 6742  
                                                     u3800 3EE8  
                                                     u4360 3A18  
                                                     u4280 3868  
                                                     u4440 3DA4  
                                                     u4520 37F4  
                                                     u4600 3420  
                                                     u5400 05EA  
                                                     u5320 0332  
                                                     u5240 0196  
                                                     u7000 1834  
                                                     u6121 273A  
                                                     u6041 25F2  
                                                     u6201 773A  
                                                     u5161 2218  
                                                     u5081 2142  
                                                     u3801 3EE2  
                                                     u4361 3A12  
                                                     u4281 3862  
                                                     u4521 37EE  
                                                     u5401 05E4  
                                                     u5321 032C  
                                                     u5241 0190  
                                                     u7001 182E  
                                                     u6130 2780  
                                                     u6050 2620  
                                                     u6210 777C  
                                                     u5170 225C  
                                                     u5090 215E  
                                                     u3730 6754  
                                                     u3810 3F1A  
                                                     u4370 3A2E  
                                                     u4290 388A  
                                                     u4450 3DE2  
                                                     u4530 3812  
                                                     u4610 343A  
                                                     u5410 0664  
                                                     u5330 03E6  
                                                     u5250 01AA  
                                                     u7010 185E  
                                                     u6131 277A  
                                                     u6051 261A  
                                                     u6035 258C  
                                                     u5171 2256  
                                                     u5091 2158  
                                                     u3731 674E  
                                                     u3811 3F14  
                                                     u4371 3A28  
                                                     u4291 3884  
                                                     u4451 3DDC  
                                                     u4531 380C  
                                                     u4611 3434  
                                                     u5411 065E  
                                                     u5331 03DE  
                                                     u5251 01A4  
                                                     u7011 1858  
                                                     u6140 762E  
                                                     u6300 3B66  
                                                     u6060 2636  
                                                     u6220 77AE  
                                                     u5180 2274  
                                                     u3820 3F60  
                                                     u4460 3DF6  
                                                     u4540 3826  
                                                     u3740 657E  
                                                     u4700 35B8  
                                                     u4620 3472  
                                                     u5500 0A88  
                                                     u5420 068E  
                                                     u5340 03EA  
                                                     u5260 01D8  
                                                     u7100 19F6  
                                                     u7020 188C  
                                                     u6141 7628  
                                                     u6301 3B60  
                                                     u6061 2630  
                                                     u6221 77A8  
                                                     u5181 226E  
                                                     u3821 3F5A  
                                                     u4461 3DF0  
                                                     u4381 3C7E  
                                                     u3901 74FA  
                                                     u4541 3820  
                                                     u3741 6576  
                                                     u4701 35B2  
                                                     u4621 346A  
                                                     u5421 0688  
                                                     u5261 01D2  
                                                     u7101 19F0  
                                                     u7021 1886  
                                                     u6150 7672  
                                                     u6310 3BB8  
                                                     u6070 2668  
                                                     u6230 77C6  
                                                     u5190 2288  
                                                     u3670 705E  
                                                     u3830 3FB2  
                                                     u4470 3E38  
                                                     u4390 3CA2  
                                                     u3910 7520  
                                                     u3750 6582  
                                                     u4710 35CC  
                                                     u4630 3476  
                                                     u4550 330C  
                                                     u5510 0AD0  
                                                     u5430 0716  
                                                     u5350 0404  
                                                     u5270 0220  
                                                     u7110 1A44  
                                                     u7030 18C2  
                                                     u6151 766C  
                                                     u6311 3BB2  
                                                     u6071 2662  
                                                     u6231 77C0  
                                                     u6215 7770  
                                                     u5191 2282  
                                                     u3671 7058  
                                                     u3727 6738  
                                                     u3831 3FAC  
                                                     u4471 3E32  
                                                     u4447 3D9A  
                                                     u4391 3C9C  
                                                     u3911 751A  
                                                     u4711 35C6  
                                                     u4551 3306  
                                                     u5511 0ACA  
                                                     u5431 0710  
                                                     u5351 03FE  
                                                     u5271 021A  
                                                     u7111 1A3E  
                                                     u7031 18BC  
                                                     u6160 7696  
                                                     u6320 3BDE  
                                                     u3760 663A  
                                                     u6080 2686  
                                                     u6240 77F6  
                                                     u6400 2C86  
                                                     u4720 7CC6  
                                                     u3680 7074  
                                                     u3840 7B0A  
                                                     u4800 7458  
                                                     u3920 7552  
                                                     u4480 363C  
                                                     u4640 3490  
                                                     u4560 332E  
                                                     u5600 0EA0  
                                                     u5520 0B38  
                                                     u5440 0750  
                                                     u5360 042E  
                                                     u5280 02A8  
                                                     u7200 1C06  
                                                     u7120 1A72  
                                                     u7040 18D8  
                                                     u6161 7690  
                                                     u6321 3BD8  
                                                     u3761 6634  
                                                     u6081 2680  
                                                     u6241 77F0  
                                                     u4721 7CC0  
                                                     u3681 706E  
                                                     u3841 7B04  
                                                     u4801 7452  
                                                     u3921 754C  
                                                     u4481 3636  
                                                     u4641 348A  
                                                     u4561 3328  
                                                     u5601 0E9A  
                                                     u5441 074A  
                                                     u5361 0428  
                                                     u5281 02A0  
                                                     u7201 1C00  
                                                     u7121 1A6C  
                                                     u7041 18D2  
                                                     u6170 76BC  
                                                     u6330 3BF2  
                                                     u6090 26A0  
                                                     u6250 781E  
                                                     u6410 2CA6  
                                                     u4730 7D02  
                                                     u3690 70A2  
                                                     u3770 3E5C  
                                                     u3850 7B42  
                                                     u4810 747A  
                                                     u3930 7598  
                                                     u4490 365E  
                                                     u4650 34FE  
                                                     u4570 3360  
                                                     u5610 0F1C  
                                                     u5530 0B66  
                                                     u5450 07DC  
                                                     u5370 04B8  
                                                     u5290 02AC  
                                                     u7210 1C1C  
                                                     u7130 1AA8  
                                                     u7050 1920  
                                                     u6171 76B6  
                                                     u6331 3BEC  
                                                     u6091 269A  
                                                     u6251 7818  
                                                     u6411 2CA0  
                                                     u4731 7CFC  
                                                     u3691 709C  
                                                     u3771 3E56  
                                                     u3851 7B3C  
                                                     u4811 7474  
                                                     u3931 7592  
                                                     u4491 3658  
                                                     u4571 335A  
                                                     u5611 0F16  
                                                     u5531 0B60  
                                                     u5507 0A7C  
                                                     u5451 07D6  
                                                     u5371 04B2  
                                                     u7211 1C16  
                                                     u7131 1AA2  
                                                     u7051 191A  
                                                     u6180 7712  
                                                     u6340 3C04  
                                                     u6260 7832  
                                                     u4900 1E3A  
                                                     u6420 2CEE  
                                                     u6500 6F1E  
                                                     u4740 7D24  
                                                     u3780 3E94  
                                                     u3860 7B86  
                                                     u4820 7490  
                                                     u3940 7232  
                                                     u4660 3546  
                                                     u4580 33CA  
                                                     u5700 1338  
                                                     u5620 0FA6  
                                                     u5540 0BCC  
                                                     u5460 0898  
                                                     u5380 04F2  
                                                     u7220 1C54  
                                                     u7140 1ABE  
                                                     u7060 194C  
                                                     u6181 770C  
                                                     u6341 3BFE  
                                                     u6261 782C  
                                                     u4901 1E34  
                                                     u6421 2CE8  
                                                     u6405 2C7A  
                                                     u6501 6F18  
                                                     u4741 7D1E  
                                                     u3781 3E8E  
                                                     u3861 7B80  
                                                     u4821 748A  
                                                     u3941 722C  
                                                     u4661 3540  
                                                     u4581 33C4  
                                                     u5701 1332  
                                                     u5621 0FA0  
                                                     u5461 0892  
                                                     u5381 04EC  
                                                     u7221 1C4E  
                                                     u7141 1AB8  
                                                     u7061 1946  
                                                     u6350 3C44  
                                                     u6270 3A90  
                                                     u6190 645C  
                                                     u4910 1E80  
                                                     u6430 2DFA  
                                                     u6510 6F54  
                                                     u4750 7DF0  
                                                     u3870 7BB8  
                                                     u4830 74C2  
                                                     u3950 7264  
                                                     u4670 3568  
                                                     u4590 341C  
                                                     u5710 13DC  
                                                     u5630 1032  
                                                     u5550 0C0A  
                                                     u5470 0914  
                                                     u5390 05B0  
                                                     u7230 1C6A  
                                                     u7150 1B06  
                                                     u7070 198C  
                                                     u6351 3C3E  
                                                     u6271 3A8A  
                                                     u6191 6456  
                                                     u4911 1E7A  
                                                     u6431 2DF4  
                                                     u6511 6F4E  
                                                     u4751 7DE8  
                                                     u3791 3EC2  
                                                     u3871 7BB2  
                                                     u4831 74BC  
                                                     u3951 725E  
                                                     u4671 3562  
                                                     u4655 34EA  
                                                     u4591 3414  
                                                     u5711 13D6  
                                                     u5631 102C  
                                                     u5551 0C04  
                                                     u5527 0B28  
                                                     u5471 090E  
                                                     u5391 05AA  
                                                     u7231 1C64  
                                                     u7151 1B00  
                                                     u7071 1986  
                                                     u6520 7310  
                                                     u6360 3C56  
                                                     u6280 3AA2  
                                                     u4920 1E92  
                                                     u4840 1D7A  
                                                     u6440 2E9E  
                                                     u5800 297C  
                                                     u5720 27C6  
                                                     u4760 7DF4  
                                                     u3880 7BEC  
                                                     u3960 7298  
                                                     u4680 3586  
                                                     u5640 106C  
                                                     u5560 0C72  
                                                     u5480 099E  
                                                     u6600 7912  
                                                     u7240 1C98  
                                                     u7160 1B24  
                                                     u7080 19BA  
                                                     u6521 730A  
                                                     u6361 3C50  
                                                     u6281 3A9C  
                                                     u4921 1E8C  
                                                     u4841 1D74  
                                                     u6441 2E98  
                                                     u5801 2976  
                                                     u5721 27C0  
                                                     u3881 7BE6  
                                                     u3961 7292  
                                                     u4681 3580  
                                                     u5641 1066  
                                                     u5481 0998  
                                                     u6601 790C  
                                                     u7241 1C92  
                                                     u7161 1B1E  
                                                     u7081 19B4  
                                                     u6530 7330  
                                                     u6290 3B06  
                                                     u4930 1F08  
                                                     u4850 1D92  
                                                     u6450 2F66  
                                                     u5810 29A2  
                                                     u5730 27DE  
                                                     u4770 7E0E  
                                                     u3970 713E  
                                                     u3890 7C3C  
                                                     u4690 35A4  
                                                     u5650 1154  
                                                     u5570 0CA0  
                                                     u5490 0A2A  
                                                     u6370 69D0  
                                                     u6610 7926  
                                                     u7250 1CC2  
                                                     u7170 1B52  
                                                     u7090 19D0  
                                                     u6531 732A  
                                                     u6291 3B00  
                                                     u4931 1F02  
                                                     u4851 1D8C  
                                                     u5811 299C  
                                                     u5731 27D8  
                                                     u4771 7E08  
                                                     u3971 7138  
                                                     u3891 7C36  
                                                     u4691 359E  
                                                     u5651 114E  
                                                     u5571 0C9A  
                                                     u5547 0BBC  
                                                     u5491 0A24  
                                                     u6371 69CA  
                                                     u6611 7920  
                                                     u7251 1CBC  
                                                     u7171 1B4C  
                                                     u7091 19CA  
                                                     u6540 735C  
                                                     u4940 1F24  
                                                     u4860 1DA6  
                                                     u6460 2F86  
                                                     u6380 2C1E  
                                                     u5900 2AE6  
                                                     u5820 29D4  
                                                     u5740 27F2  
                                                     u4780 7E24  
                                                     u3980 7166  
                                                     u5660 118E  
                                                     u5580 0D52  
                                                     u6620 7958  
                                                     u6700 7A0A  
                                                     u7260 1CD6  
                                                     u7180 1B8A  
                                                     u6541 7356  
                                                     u4941 1F1C  
                                                     u4861 1DA0  
                                                     u6461 2F80  
                                                     u5901 2AE0  
                                                     u5821 29CE  
                                                     u5741 27EC  
                                                     u4781 7E1E  
                                                     u3981 7160  
                                                     u5661 1188  
                                                     u5581 0D4C  
                                                     u6621 7952  
                                                     u6701 7A04  
                                                     u7261 1CD0  
                                                     u7181 1B84  
                                                     u6550 7382  
                                                     u4950 1F28  
                                                     u4870 1DF2  
                                                     u6390 2C4C  
                                                     u5910 2B04  
                                                     u5830 2A00  
                                                     u5750 2840  
                                                     u6630 62BA  
                                                     u3990 71C8  
                                                     u4790 7418  
                                                     u5670 1232  
                                                     u5590 0DE4  
                                                     u6710 7A36  
                                                     u6470 69F4  
                                                     u7270 1D22  
                                                     u7190 1BA0  
                                                     u6551 737C  
                                                     u4871 1DEC  
                                                     u6455 2F5A  
                                                     u6391 2C46  
                                                     u5911 2AFE  
                                                     u5831 29FA  
                                                     u5751 283A  
                                                     u7407 6374  
                                                     u6631 62B4  
                                                     u3991 71C2  
                                                     u4791 7412  
                                                     u5671 122C  
                                                     u5591 0DDE  
                                                     u5567 0C62  
                                                     u6711 7A30  
                                                     u6471 69EE  
                                                     u7271 1D1C  
                                                     u7191 1B9A  
                                                     u6560 73A4  
                                                     u6800 6FF0  
                                                     u4960 1F56  
                                                     u4880 1E0E  
                                                     u5920 2B52  
                                                     u5840 2A1A  
                                                     u5760 2858  
                                                     u6480 6D7C  
                                                     u6640 6CAE  
                                                     u5680 125C  
                                                     u6720 7A62  
                                                     u7280 1D44  
                                                     u6561 739E  
                                                     u6801 6FEA  
                                                     u4961 1F50  
                                                     u4881 1E08  
                                                     u6385 2C12  
                                                     u5921 2B4C  
                                                     u5841 2A14  
                                                     u5761 2852  
                                                     u6481 6D76  
                                                     u6641 6CA8  
                                                     u7417 6AE0  
                                                     u5681 1256  
                                                     u6721 7A5C  
                                                     u7281 1D3E  
                                                     u7337 169E  
                                                     u6570 73D2  
                                                     u6810 7026  
                                                     u4970 1F7C  
                                                     u4890 1E26  
                                                     u5930 2B88  
                                                     u5850 2A3E  
                                                     u5770 286C  
                                                     u6490 6D9A  
                                                     u6650 6B80  
                                                     u5690 12FE  
                                                     u6730 7A8E  
                                                     u6571 73CC  
                                                     u6811 7020  
                                                     u4971 1F76  
                                                     u4891 1E20  
                                                     u5931 2B82  
                                                     u5851 2A38  
                                                     u5771 2866  
                                                     u6491 6D94  
                                                     u7427 6AFA  
                                                     u5691 12F8  
                                                     u6731 7A88  
                                                     u7347 1868  
                                                     u4980 1FA4  
                                                     u5940 2BBC  
                                                     u5860 2A66  
                                                     u5780 28B6  
                                                     u6660 6BB6  
                                                     u6580 7872  
                                                     u6740 7ABA  
                                                     u6820 6328  
                                                     u6900 1694  
                                                     u4981 1F9E  
                                                     u5941 2BB6  
                                                     u5861 2A60  
                                                     u5781 28B0  
                                                     u7437 6B12  
                                                     u6581 786C  
                                                     u6741 7AB4  
                                                     u6821 6322  
                                                     u7357 1956  
                                                     u6901 168E  
                                                     u5950 2322  
                                                     u4990 1FB6  
                                                     u5870 2A7C  
                                                     u5790 28FE  
                                                     u6670 6BC8  
                                                     u6830 6A7E  
                                                     u6590 78A8  
                                                     u6750 7AD6  
                                                     u6910 16CA  
                                                     u5951 231C  
                                                     u4991 1FB0  
                                                     u5871 2A76  
                                                     u5791 28F8  
                                                     u7447 633E  
                                                     u6671 6BC2  
                                                     u6831 6A78  
                                                     u6591 78A2  
                                                     u6751 7AD0  
                                                     u7367 1A4E  
                                                     u6911 16C4  
                                                     u5960 233A  
                                                     u5880 2AAE  
                                                     u6680 79B2  
                                                     u6760 6BEE  
                                                     u6920 16EA  
                                                     u5961 2334  
                                                     u5881 2AA8  
                                                     u7457 634A  
                                                     u6657 6B76  
                                                     u6681 79AC  
                                                     u6761 6BE8  
                                                     u7377 1B2E  
                                                     u6921 16E4  
                                                     u5970 234E  
                                                     u5890 2ACC  
                                                     u6690 79DE  
                                                     u6770 6C16  
                                                     u6930 171C  
                                                     u6850 1558  
                                                     u5971 2348  
                                                     u5891 2AC6  
                                                     u6667 6BAC  
                                                     u6691 79D8  
                                                     u6771 6C10  
                                                     u7387 1BC6  
                                                     u6931 1716  
                                                     u6851 1552  
                                                     u5980 2398  
                                                     u6780 6C40  
                                                     u6940 173E  
                                                     u6860 156C  
                                                     u5981 2392  
                                                     u7397 6368  
                                                     u6781 6C3A  
                                                     u6941 1738  
                                                     u6861 1566  
                                                     u5990 23B0  
                                                     u6790 68A8  
                                                     u6950 176C  
                                                     u6870 1628  
                                                     u5991 23AA  
                                                     u6791 68A2  
                                                     u6951 1766  
                                                     u6871 1622  
                                                     u6960 1796  
                                                     u6880 165C  
                                                     u6961 1790  
                                                     u6881 1656  
                                                     u6970 17AA  
                                                     u6890 1674  
                                                     u6971 17A4  
                                                     u6891 166E  
                                                     u6980 17D2  
                                                     u6981 17CC  
                                                     u6990 17FC  
                                                     u6991 17F6  
                                                     _TMR2 000FCC  
                                                     abs@a 0013  
                                                     _dbuf 0098  
                                                     _atoi 7C84  
                                                     _ctoa 67C6  
                                                     _main 1462  
                                                     _dtoa 2FC4  
                                                     _fosc 7E63  
                                                     _prec 0088  
                                                     _otoa 3854  
                                                     _nout 0084  
                                                     pad@i 0018  
                                                     pad@p 0015  
                                                     fsr1h 000FE2  
                                                     fsr2h 000FDA  
                                                     indf1 000FE7  
                                                     indf2 000FDF  
                                                     fsr1l 000FE1  
                                                     pad@w 001A  
                                                     fsr2l 000FD9  
                                                     _tosc 00EA  
                                                     _stoa 3C72  
                                                     btemp 007F  
                                                     _utoa 3628  
                                                     _xtoa 32F8  
                              update_pwm_duty_ccp1@time_up 00D4  
                                              main@rx_char 01A2  
                                                     prodh 000FF4  
                                            _trash_counter 01B1  
                                                     prodl 000FF3  
                                                     start 0076  
                                          ___fldiv@new_exp 0057  
         state_translator_fpga_to_micro@state_machine_code 0005  
                                             ___param_bank 000000  
                                                    ??_abs 0015  
                                     _update_pwm_duty_ccp1 6D00  
                                                    ??_pad 0017  
                                            ___fltol@sign1 00D2  
                                          __end_of___aodiv 3FFA  
                                                    ?_atoi 0008  
                                                    ?_ctoa 001C  
                                          __end_of___fladd 2304  
                                                    ?_main 0001  
                                                    ?_dtoa 001C  
                                          __end_of___aomod 7C84  
                                          __end_of___fldiv 2BDA  
                                          __end_of___awdiv 73EA  
                                          __end_of___flneg 6484  
                                                    STR_10 7FFC  
                                                    STR_11 7F0A  
                                                    STR_20 7FD3  
                                                    STR_12 7F98  
                                                    STR_13 7F5D  
                                                    STR_14 7FCF  
                                                    STR_16 7FCF  
                                                    STR_32 7FEA  
                                                    STR_25 7FD0  
                                                    STR_41 7FDB  
                                                    STR_34 7FEA  
                                                    STR_18 7FD3  
                                                    STR_43 7FDB  
                                                    STR_51 7FF3  
                                                    STR_36 7FED  
                                                    STR_29 7FD4  
                                                    STR_53 7FF3  
                                                    STR_38 7FED  
                                                    STR_63 7FD8  
                                                    STR_71 7FDF  
                                                    STR_48 7FDC  
                                                    STR_56 7FD7  
                                                    STR_73 7FDF  
                                                    STR_81 7FF6  
                                                    STR_58 7FD7  
                                                    STR_66 7FF0  
                                                    STR_90 7FCB  
                                                    STR_83 7FF6  
                                                    STR_92 7FCB  
                                                    STR_68 7FF0  
                                                    STR_78 7FE0  
                                                    STR_86 7FE3  
                                                    STR_88 7FE3  
                                          __end_of___flmul 27A8  
                                                    STR_97 7FE4  
                                                    ?_otoa 001C  
                                          __end_of___flsub 661C  
                                          __end_of___fltol 785C  
                                                    ?_stoa 000A  
                                                    ?_utoa 001C  
                                                    _T0CON 000FD5  
                                          __end_of___lodiv 75FC  
                                          ___awdiv@divisor 0019  
                                                    ?_xtoa 001C  
                                                    _T2CON 000FCA  
                                          __end_of___lomod 72FA  
                                                    i2l220 006E  
                              __end_of_update_current_coil 6F6C  
                                          ___awdiv@counter 001B  
                                                    _RCREG 000FAE  
                                             vfpfcnvrt@fmt 0045  
                                                    _TMR0H 000FD7  
                                             vfpfcnvrt@llu 0060  
                                                    _TMR0L 000FD6  
                                                    _SPBRG 000FAF  
                                                    _PORTA 000F80  
                                                    _PORTB 000F81  
                                                    _PORTC 000F82  
                                                    _PORTD 000F83  
                                                    _TRISA 000F92  
                                                    _TRISB 000F93  
                                                    _TRISC 000F94  
                                                    _TXREG 000FAD  
                                         ?_get_temperature 00D4  
                                          __end_of_lcd_dat 6382  
                                          __end_of_lcd_cmd 6358  
                     __end_of_configure_ad_conversion_tank 62A0  
                    __size_of_configure_ad_conversion_tank 001E  
                             _configure_ad_conversion_tank 6282  
                     __end_of_configure_ad_conversion_oven 6282  
                    __size_of_configure_ad_conversion_oven 001E  
                             _configure_ad_conversion_oven 6264  
                                          __end_of_lcd_str 6BCE  
                                                    _f_osc 7E5F  
                                                    _flags 008A  
                                                    _errno 008C  
                                                    _fputc 7048  
                                          __end_of_isalpha 65D2  
                                                    _fputs 6668  
                                          __end_of_isdigit 6508  
                                                    _t_osc 7E5B  
                                                    atoi@n 0015  
                                                    pad@fp 0011  
                                                    atoi@s 0008  
                                                    _width 0086  
                                                    ctoa@c 001E  
                                                    _state 01DF  
                                                    _putch 3FFA  
                                                    _toint 7E53  
                                                    ctoa@w 001F  
                                                    dtoa@d 001E  
                                                    dtoa@i 003E  
                                                    dtoa@n 0036  
                                                    dtoa@p 0030  
                                                    dtoa@s 0034  
                                                    dtoa@w 0032  
                                          __end_of_islower 658C  
                                          __end_of_isspace 67C6  
                                          __end_of_isupper 654A  
                                                    tablat 000FF5  
                                                    otoa@d 001E  
                                                    otoa@i 003C  
                                                    otoa@n 0034  
                                                    otoa@p 002E  
                                                    otoa@t 0030  
                                                    otoa@w 0032  
                                                    plusw1 000FE3  
                                                    plusw2 000FDB  
                                                    stoa@i 0016  
                                                    stoa@l 001E  
                                                    stoa@p 001C  
                                                    stoa@s 000C  
                                                    stoa@w 0018  
                                                    ttemp5 0080  
                                                    ttemp6 0083  
                                                    ttemp7 0087  
                                                    utoa@d 001E  
                                                    utoa@i 003A  
                                                    utoa@n 0032  
                                                    utoa@p 002E  
                                                    utoa@w 0030  
                                                    status 000FD8  
                                                    wtemp8 0080  
                                                    xtoa@c 0041  
                                                    xtoa@d 001E  
                                                    xtoa@i 003F  
                                                    xtoa@n 0037  
                                                    xtoa@p 0033  
                                                    xtoa@w 0035  
                                                    xtoa@x 0026  
                                          __end_of_strncmp 74F2  
                                          __end_of_toupper 696E  
                                         ___lodiv@dividend 0001  
                                       _end_effector_homed 01A5  
                                          ??_get_reg_value 0001  
                                             _toupper$1928 000D  
                                     get_reg_value@rx_char 0001  
                                          __initialization 682C  
                                             __end_of_atoi 7E52  
                                             __end_of_ctoa 682C  
                                             __end_of_main 1D5C  
                                             __end_of_dtoa 32F8  
                                             __end_of_fosc 7E67  
                                             __end_of_otoa 3A7A  
                                             __end_of_stoa 3E46  
                                             __end_of_utoa 3854  
                                    ?_update_pwm_duty_ccp1 00D4  
                                             __end_of_xtoa 3628  
                                                   ??_atoi 000A  
                                                   ??_ctoa 001F  
                                                   ??_main 00DD  
                                                   ??_dtoa 0026  
                                                   ??_otoa 0026  
                                                   ??_stoa 000E  
                                                   ??_utoa 0026  
                                                   ??_xtoa 0027  
                                            __activetblptr 000002  
                                          ??_rx_char_usart 0001  
                                         ___lodiv@quotient 0011  
                                                   _ADCON0 000FC2  
                                                   _ADCON1 000FC1  
                                         _change_direction 640C  
                                                   ?_fputc 0001  
                                                   STR_101 7FCC  
                                                   STR_110 7FE7  
                                                   ?_fputs 000A  
                                                   STR_104 7FF9  
                                                   STR_106 7FF9  
                                                   _ADRESH 000FC4  
                                                   STR_108 7FE7  
                                                   _ADRESL 000FC3  
                             __end_of_turn_on_current_coil 670A  
                                                   _CCPR1L 000FBE  
                            ?_configure_ad_conversion_tank 0001  
                                         ___awdiv@dividend 0017  
                            ?_configure_ad_conversion_oven 0001  
                                                   ?_putch 0001  
                                                   i2l5871 0032  
                                                   i2l5873 003C  
                                                   i2l5865 000C  
                                                   i2l5875 0050  
                                                   i2l5867 001E  
                                                   i2l5877 0062  
                                                   i2l5869 0030  
                                                   i2l5879 0066  
                                            main@greet_str 0100  
                                            vfpfcnvrt@done 004F  
                                         __end_of___xxtofl 3C72  
                                            ?_init_timer_0 0001  
                                            ?_init_timer_2 0001  
                   __end_of_state_translator_fpga_to_micro 7AF4  
                  __size_of_state_translator_fpga_to_micro 015E  
                           _state_translator_fpga_to_micro 7996  
                                            ?_init_stepper 0001  
                                             vfprintf@cfmt 006E  
                                         __end_of_lcd_init 6B46  
                                                   ___flge 75FC  
                                        _init_timer_2$2165 00D4  
                                                ??___aodiv 0011  
                                                ??___fladd 0067  
                                                ??___aomod 0011  
                                                   ___wmul 6382  
                                                ??___fldiv 004E  
                                                ??___awdiv 001B  
                                                ??___flneg 0005  
                                                ??___flmul 0035  
                                                ??___flsub 0077  
                                                ??___fltol 00CE  
                                                ??___lodiv 0011  
                                                ??___lomod 0011  
                                                   _lcd_wr 621C  
                                                   clear_0 6872  
                                                   clear_1 687E  
                                         ___awdiv@quotient 001D  
                                                   pad@buf 0013  
                                                   ctoa@fp 001C  
                                                   _roundf 2BDA  
                                                ??_lcd_dat 0002  
                                                ??_lcd_cmd 0002  
                                                   dtoa@fp 001C  
                                                   _strlen 670A  
                                                ??_lcd_str 0005  
                                                   fputc@c 0001  
                                                   fputs@c 000E  
                                                   fputs@i 000F  
                                                   fputs@s 000A  
                                                ??_isalpha 0003  
                                                ??_isdigit 0003  
                                                ??_islower 0003  
                                             __mediumconst 7E52  
                                                ??_isspace 0003  
                                                   otoa@fp 001C  
                                                   tblptrh 000FF7  
                                                ??_isupper 0003  
                                                   tblptrl 000FF6  
                                                   tblptru 000FF8  
                                  reach_goal@goal_to_reach 000B  
                                                   stoa@cp 001A  
                                                   stoa@fp 000A  
                                                   putch@c 0001  
                                         __end_of_vfprintf 69DE  
                                                   utoa@fp 001C  
                                         __end_of_snprintf 640C  
                                                   xtoa@fp 001C  
                                                ??_strncmp 0007  
                                                ??_toupper 0009  
                                               ___flge@ff1 0001  
                                               ___flge@ff2 0005  
                         update_current_coil@stepper_motor 0001  
                                             ___xxtofl@arg 0029  
                                             ___xxtofl@exp 0028  
                                             ___xxtofl@val 001F  
                                               __accesstop 0080  
                                  __end_of__initialization 6884  
                                               ___flneg@f1 0001  
                                        serial_tx_char@val 0001  
                                           ??_init_timer_0 0001  
                                           ??_init_timer_2 007F  
                                            ___rparam_used 000001  
                                               ___fltol@f1 00CA  
                                           ??_init_stepper 000D  
                                           _tmr2_prescaler 00EE  
                                          _init_interrupts 6210  
                                   ??_update_pwm_duty_ccp1 00D8  
                                           __pcstackCOMRAM 0001  
                                             __pidataBANK0 6239  
                                             __pidataBANK1 624C  
                                            __end_of_f_osc 7E63  
                                            __end_of_fputc 712A  
                                            __end_of_fputs 66B8  
                                            __end_of_t_osc 7E5F  
                                            __end_of_putch 4000  
                                            __end_of_toint 7E57  
                                          _temperature_int 0090  
                                  __size_of_serial_tx_char 0020  
                      state_translator_fpga_to_micro@state 0003  
                                                  ??_fputc 0005  
                                                  ??_fputs 000E  
                                                  ??_putch 0001  
                                         _mix_current_step 0096  
                                               __pbssBANK0 0080  
                                               __pbssBANK1 01A3  
                           ??_configure_ad_conversion_tank 0001  
                           ??_configure_ad_conversion_oven 0001  
                                       __size_of_init_ccp1 0024  
                                                  ?___flge 0001  
                                                  ?___wmul 0001  
                      check_temperature@temp_to_be_checked 00D6  
                                                  ?_lcd_wr 0001  
                                                  _CCP1CON 000FBD  
                                     _turn_on_current_coil 66B8  
                                    __end_of_wait_for_zero 632E  
                                  _hex_end_effector_values 01F1  
                                            _read_new_char 01B8  
                          _grasping_joint_position_reached 01AD  
                                                  ?_roundf 0077  
                                                  ?_strlen 0001  
                                       _temperature_scaled 008E  
                                                ?___xxtofl 001F  
                                  reach_goal@stepper_motor 0009  
                                       __size_of_vfpfcnvrt 13E8  
                                               _get_liters 6892  
                        turn_on_current_coil@stepper_motor 0001  
                                         _desired_baudrate 7E57  
                                                ?_lcd_init 0001  
                                         ___lomod@dividend 0001  
                                  __end_of_init_interrupts 621C  
                                        _check_temperature 6F6C  
                            change_direction@stepper_motor 0001  
                                                  __Hparam 0000  
                                       ?_check_temperature 00D6  
                                                  __Lparam 0000  
                                       __size_of_vsnprintf 013A  
                                               _init_PORTS 63AC  
                                               _init_USART 6484  
                                          __size_of___flge 0128  
                                                  ___aodiv 3E46  
                                                  ___fladd 1D5C  
                                                  ___aomod 7AF4  
                                                  ___fldiv 27A8  
                                                  ___awdiv 72FA  
                                                  ___flneg 6442  
                                                  ___flmul 2304  
                                 __end_of_change_direction 6442  
                                                  ___flsub 65D2  
                                                  ___fltol 7724  
                                          __size_of___wmul 002A  
                                                  ___lodiv 74F2  
                                    ?_turn_on_current_coil 0001  
                                                  ___lomod 7210  
                                                ?_vfprintf 0068  
                                                ?_snprintf 00C2  
                                          __size_of_lcd_wr 000C  
                                      ??_check_temperature 007F  
                                                  __pcinit 682C  
                     init_stepper@hex_coil_register_values 0009  
                                                  __ramtop 0600  
                                               _reach_goal 6A50  
                                                  __ptext0 1462  
                                                  __ptext1 6306  
                                                  __ptext2 69DE  
                                                  __ptext3 6BCE  
                                                  __ptext4 7996  
                                                  __ptext5 63D8  
                                                  __ptext6 785C  
                                                  __ptext7 696E  
                                                  __ptext8 007A  
                                                  __ptext9 32F8  
                                                  _lcd_dat 6358  
                                                  _lcd_cmd 632E  
                                                  _lcd_str 6B46  
                                                _T0CONbits 000FD5  
                                          __size_of_roundf 03EA  
                                          __size_of_strlen 005C  
                                        __end_of_init_ccp1 6306  
                                                _T2CONbits 000FCA  
                                             __size_of_abs 004C  
                                             __size_of_pad 00E6  
                                                  _isalpha 658C  
                                                  _isdigit 64C6  
                                               ??___xxtofl 0023  
                                     __end_of_init_timer_0 62E2  
                                     __end_of_init_timer_2 6E92  
                                                  _islower 654A  
                                                  _isspace 6766  
                                                  _isupper 6508  
                                     __end_of_init_stepper 6D00  
                                                  atoi@neg 000E  
                                            _joint_stepper 01D3  
                                               ??_lcd_init 0003  
                                                  _strncmp 73EA  
                                                  _toupper 68FE  
                             __size_of_update_current_coil 00DA  
                                     end_of_initialization 6884  
                                __end_of_check_temperature 7048  
                                 __size_of_get_temperature 0072  
                                                  fputc@fp 0003  
                                            __Lmediumconst 7E52  
                                                  fputs@fp 000C  
                      state_translator_micro_to_fpga@state 0001  
                                        __end_of_vfpfcnvrt 1462  
                                    __end_of_get_reg_value 6238  
                                                _RCSTAbits 000FAB  
                                                  postdec1 000FE5  
                                                  postdec2 000FDD  
                                                  postinc0 000FEE  
                                                  postinc1 000FE6  
                                                  postinc2 000FDE  
                                                  roundf@e 00BC  
                                                  roundf@u 00C2  
                                                  roundf@x 0077  
                                                  roundf@y 00C6  
                                               ??_vfprintf 006E  
                                               ??_snprintf 007C  
                                                  strlen@a 0003  
                                                  strlen@s 0001  
                                               _timer_done 01B7  
                                                _PORTEbits 000F84  
                         ??_state_translator_fpga_to_micro 0005  
                          ?_state_translator_fpga_to_micro 0003  
                                              ___fladd@grs 006E  
                                           _serial_tx_char 62A0  
                                            ___xxtofl@sign 0027  
                                    __end_of_rx_char_usart 0076  
                                                _TRISCbits 000F94  
                                              ?_get_liters 00D4  
                                               lcd_dat@val 0002  
                                        __end_of_vsnprintf 7996  
                                               lcd_cmd@val 0002  
                                              ___fldiv@grs 0059  
                                              ___fldiv@rem 0052  
                                               _pwm_period 00E6  
                                               _state_msgs 01E1  
                                            _mix_direction 0094  
                                     _end_effector_stepper 01C7  
                                              ___flmul@grs 003A  
                                         ?_init_interrupts 0001  
                                              _CCP1CONbits 000FBD  
                                                _TXSTAbits 000FAC  
                                         main@current_temp 01A0  
                                               lcd_str@str 0003  
                                              ?_init_PORTS 0001  
                                              ?_init_USART 0001  
                                   ??_turn_on_current_coil 0003  
                                           __end_of___flge 7724  
                   __end_of_state_translator_micro_to_fpga 6C58  
                  __size_of_state_translator_micro_to_fpga 008A  
                           _state_translator_micro_to_fpga 6BCE  
                             _grasping_ee_position_reached 01AB  
                                              vfpfcnvrt@ap 0047  
                                              vfpfcnvrt@cp 004D  
                                              vfpfcnvrt@fp 0043  
                                              vfpfcnvrt@ll 0055  
                                           __end_of___wmul 63AC  
                                              vfpfcnvrt@vp 005D  
                                           __end_of_lcd_wr 6228  
                                              ?_reach_goal 0009  
         state_translator_micro_to_fpga@state_machine_code 0005  
                                   __end_of_serial_tx_char 62C0  
                                           __end_of_roundf 2FC4  
                                           __end_of_strlen 6766  
                                      start_initialization 682C  
                                          ___lodiv@divisor 0009  
                                          ___lodiv@counter 0019  
                                              __end_of_abs 6668  
                                              __end_of_pad 7210  
                                         _hex_joint_values 01F5  
                               __size_of_check_temperature 00DC  
                                 init_stepper@current_coil 0003  
                                init_stepper@stepper_motor 0001  
                                        ??_get_temperature 007F  
                                              vfprintf@fmt 006A  
                                                 ??___flge 0009  
                                 __end_of_desired_baudrate 7E5B  
                                      __size_of_get_liters 006C  
                                                 ??___wmul 0005  
                            __size_of_update_pwm_duty_ccp1 00C4  
                                                 ??_lcd_wr 0001  
                                              __pdataBANK0 00DF  
                                              __pdataBANK1 01E1  
                                    check_temperature@grad 00D8  
                                    __size_of_init_timer_0 0022  
                                    __size_of_init_timer_2 00CE  
                                    __size_of_init_stepper 00A8  
                                                 ??_roundf 007B  
                                                 ??_strlen 0003  
                                          ?_serial_tx_char 0001  
                                                ___fladd@a 0063  
                                                ___fladd@b 005F  
                                             vsnprintf@cnt 00BA  
                                             vsnprintf@fmt 0074  
                                                ___fldiv@a 004A  
                                                ___fldiv@b 0046  
                                                ___flmul@a 0031  
                                                ___flmul@b 002D  
                                                ___flsub@a 0073  
                                                ___flsub@b 006F  
                                            __pcstackBANK0 00B8  
                                            __pcstackBANK1 0100  
                                         ___aodiv@dividend 0001  
                                              snprintf@fmt 00C6  
                                        __size_of___xxtofl 01F8  
                                      __size_of_init_PORTS 002C  
                                      __size_of_init_USART 0042  
                                        __size_of_lcd_init 007E  
                                      __size_of_reach_goal 0078  
                                                _atoi$1840 0010  
                                                _atoi$1841 0014  
                                                _atoi$1842 0012  
                                             _init_timer_0 62C0  
                                             _init_timer_2 6DC4  
                                                _dtoa$1666 002E  
                                             _init_stepper 6C58  
                                    init_stepper@direction 0007  
                                                __pintcode 0008  
                                            __pmediumconst 7E52  
                                                 ?___aodiv 0001  
                                                 ?___fladd 005F  
                                                 ?___aomod 0001  
                                                 ?___fldiv 0046  
                                                 ?___awdiv 0017  
                                         ___aodiv@quotient 0013  
                                                 ?___flneg 0001  
                                                 ?___flmul 002D  
                                                 ?___flsub 006F  
                                                 ?___fltol 00CA  
                                                 ?___lodiv 0001  
                                                 ?___lomod 0001  
                                      _update_current_coil 6E92  
                                        ?_change_direction 0001  
                                       ??_change_direction 0003  
                                                 ?_lcd_dat 0001  
                                                 ?_lcd_cmd 0001  
                                        __size_of_vfprintf 0070  
                                                 ?_lcd_str 0003  
                                        __size_of_snprintf 0034  
                                          ___lomod@divisor 0009  
                             update_pwm_duty_ccp1@new_duty 00DA  
                                          ___lomod@counter 0011  
                                                 ?_isalpha 0001  
                                                 ?_isdigit 0001  
                                         _mix_step_counter 0092  
                                                 ?_islower 0001  
                                                 ?_isspace 0001  
                                                 ?_isupper 0001  
                                                _init_ccp1 62E2  
                                           __size_of_fputc 00E2  
                                           __size_of_fputs 0050  
                                     ?_update_current_coil 0001  
                                                 ?_strncmp 0001  
                                                 ?_toupper 0007  
                                           __size_of_putch 0006  
                                   __size_of_wait_for_zero 0028  
                                           ___wmul@product 0005  
                                                 _LATAbits 000F89  
                                                 _PIE1bits 000F9D  
                                            _move_to_trash 01AF  
                                    _joint_dilutor_stepper 01BB  
                                                 _PIR1bits 000F9E  
                                                 i2u730_40 002E  
                                                 i2u730_41 0028  
                                                 i2u731_40 004E  
                                                 i2u731_41 0048  
                                                 i2u732_40 0060  
                                                 i2u732_41 005A  
                                                 i2u729_40 001C  
                                                 i2u729_41 0016  
                                                _vfpfcnvrt 007A  
                                                _xtoa$1702 002F  
                                                _xtoa$1703 0031  
                                               _ADCON0bits 000FC2  
                                        ___wmul@multiplier 0001  
                                                lcd_wr@val 0001  
                                             ??_get_liters 007F  
                                             _isspace$1868 0007  
                                               ?_init_ccp1 0001  
                                    ??_update_current_coil 0003  
                                               vfpfcnvrt@c 005F  
                                                copy_data0 6840  
                                                copy_data1 6860  
                                                _vsnprintf 785C  
                                               roundf@F525 0080  
                                                 __Hrparam 0000  
                                             ??_init_PORTS 0001  
                                             ??_init_USART 007F  
                                               vfprintf@ap 006C  
                                                 __Lrparam 0000  
                                               vfprintf@fp 0068  
                                       __end_of_get_liters 68FE  
                                         __size_of___aodiv 01B4  
                                         __size_of___fladd 05A8  
                                         __size_of___aomod 0190  
                                         __size_of___fldiv 0432  
                                         __size_of___awdiv 00F0  
                                         __size_of___flneg 0042  
                                              vsnprintf@ap 0076  
                                         __size_of___flmul 04A4  
                                         __size_of___flsub 004A  
                                         __size_of___fltol 0138  
                                         __size_of___lodiv 010A  
                                         __size_of___lomod 00EA  
                                               ?_vfpfcnvrt 0043  
                                            _wait_for_zero 6306  
                                             ??_reach_goal 000D  
                                               snprintf@ap 00CC  
                                          ___aodiv@divisor 0009  
                                          ___aodiv@counter 0011  
                                         __size_of_lcd_dat 002A  
                                         __size_of_lcd_cmd 002A  
                                         __size_of_lcd_str 0088  
                                                 ___xxtofl 3A7A  
                                         __size_of_isalpha 0046  
                                         __size_of_isdigit 0042  
                                         __size_of_islower 0042  
                                         __size_of_isspace 0060  
                                                 __ptext10 68FE  
                                                 __ptext11 654A  
                                                 __ptext20 2FC4  
                                                 __ptext12 6508  
                                                 __ptext21 7AF4  
                                                 __ptext13 658C  
                                                 __ptext30 6766  
                                                 __ptext22 3E46  
                                                 __ptext14 3628  
                                                 __ptext31 64C6  
                                                 __ptext23 67C6  
                                                 __ptext15 7210  
                                                 __ptext40 632E  
                                                 __ptext32 6382  
                                                 __ptext24 712A  
                                                 __ptext16 74F2  
                                                 __ptext41 621C  
                                                 __ptext33 62A0  
                                                 __ptext25 670A  
                                                 __ptext17 73EA  
                                                 __ptext50 2BDA  
                                                 __ptext42 6DC4  
                                                 __ptext34 6A50  
                                                 __ptext26 6668  
                                                 __ptext18 3C72  
                                                 __ptext51 65D2  
                                                 __ptext43 62C0  
                                                 __ptext35 6E92  
                                                 __ptext27 7048  
                                                 __ptext19 3854  
                                                 __ptext60 6264  
                                                 __ptext52 1D5C  
                                                 __ptext44 6C58  
                                                 __ptext36 66B8  
                                                 __ptext28 3FFA  
                                                 __ptext61 6F6C  
                                                 __ptext53 6442  
                                                 __ptext45 6210  
                                                 __ptext37 6B46  
                                                 __ptext29 7C84  
                                                 __ptext62 661C  
                                                 __ptext54 63AC  
                                                 __ptext46 62E2  
                                                 __ptext38 6358  
                                                 __ptext63 3A7A  
                                                 __ptext55 6228  
                                                 __ptext47 6D00  
                                                 __ptext39 6AC8  
                                                 __ptext64 75FC  
                                                 __ptext56 6892  
                                                 __ptext48 27A8  
                                                 __ptext65 72FA  
                                                 __ptext57 7724  
                                                 __ptext49 6484  
                                                 __ptext66 640C  
                                                 __ptext58 2304  
                                                 __ptext59 6282  
                                         __size_of_isupper 0042  
                         ??_state_translator_micro_to_fpga 0003  
                          ?_state_translator_micro_to_fpga 0001  
                                   __size_of_get_reg_value 0010  
                                       __end_of_init_PORTS 63D8  
                                                 _lcd_init 6AC8  
                                       __end_of_init_USART 64C6  
                                          _get_temperature 69DE  
                                         __size_of_strncmp 0108  
                                         __size_of_toupper 0070  
                                               ?_vsnprintf 0070  
                                _diluting_position_reached 01A9  
                                            __size_of_atoi 01CE  
                                            __size_of_ctoa 0066  
                                            __size_of_main 08FA  
                                            __size_of_dtoa 0334  
                                            __size_of_otoa 0226  
                                            __size_of_stoa 01D4  
                                            __size_of_utoa 022C  
                                              _joint_homed 01A7  
                                            __size_of_xtoa 0330  
                                       __end_of_reach_goal 6AC8  
                                                stoa@F1152 00DF  
                                   __size_of_rx_char_usart 006E  
                                 __size_of_init_interrupts 000C  
                                                 int$flags 007F  
                                         ??_serial_tx_char 0001  
                                                 _vfprintf 696E  
                            __size_of_turn_on_current_coil 0052  
                                           ?_wait_for_zero 0001  
                                                 _snprintf 63D8  
                                                 lcd_str@i 0007  
                                              _mix_counter 01B5  
                                         ___aomod@dividend 0001  
                                           _vfpfcnvrt$1717 0051  
                                           _vfpfcnvrt$1718 0053  
                                               _INTCONbits 000FF2  
                                                 isalpha@c 0001  
                                                 isdigit@c 0001  
                                              ??_init_ccp1 007F  
                             __end_of_update_pwm_duty_ccp1 6DC4  
                                               vsnprintf@f 00BC  
                                            _idle_msg_sent 01B9  
                                               vsnprintf@n 0072  
                                               vsnprintf@s 0070  
                                                snprintf@n 00C4  
                                                snprintf@s 00C2  
                                                 intlevel2 0006  
                                                 islower@c 0001  
                                                 isspace@c 0001  
                                                 isupper@c 0001  
                                                strncmp@_l 0001  
                                                strncmp@_r 0003  
                                      _joint_dilutor_homed 01A3  
                                            _get_reg_value 6228  
                                            init_stepper@i 000F  
                                          ___aomod@divisor 0009  
                                              ??_vfpfcnvrt 0049  
                                                 stoa@nuls 000F  
                                          ___aomod@counter 0011  
                                            _dilution_done 01B3  
                                           _vsnprintf$1584 00B8  
                                  __end_of_get_temperature 6A50  
                                                 strncmp@l 0008  
                                                 strncmp@n 0005  
                                                 strncmp@r 000A  
                                                 toupper@c 0007  
                                 init_stepper@step_counter 0005  
                                            _rx_char_usart 0008  
                                __size_of_change_direction 0036  
                                            ___fladd@signs 006B  
                            update_pwm_duty_ccp1@lsbs_duty 00DC  
                                             ___aodiv@sign 0012  
                                              ??_vsnprintf 0078  
                                             ___fladd@aexp 006C  
                                             ___fladd@bexp 006D  
                                             ___aomod@sign 0012  
                                              _roundf$2166 00BE  
                                              _roundf$2167 00B8  
